Aggregate Towers: Scale Sensitive Visualization and Decluttering
of Geospatial Data
James K. Rayson
The MITRE Corporation
202 Burlington Road
Bedford, MA 01730
jrayson@mitre.org
Abstract
We have developed a technique, Aggregate Towers,
that allows geospatial data to be visualized across a
range of map scales. We use a combination of data
aggregation algorithms and dynamically aggregating
data markers (e.g., icons or symbols) to accommodate
interactive zooming by a user while maintaining a
representation that remains intuitive, consistent across
multiple scales, and uncluttered. This approach implicitly
generates multiple levels of overview displays from a
single set of underlying data.
CR Categories and Subject Descriptors: H.5.2
[Information Interfaces and Presentation]: User
Interfaces; I.3.6 [Computer Graphics]: Methodology and
Techniques; I.3.7 [Computer Graphics]: ThreeDimensional Graphics and Realism
Additional Keywords: data visualization, information
visualization, aggregation, zoom, cartography

1. Background
The modern battlespace contains enormous volumes
of data. It can be static or dynamic, incorporating maps,
imagery, live radar views of the air or ground traffic, fuel
depot status, and many other categories of information.
Subsets of this data are needed by thousands of users in
hundreds of different job categories.
One of the
challenges is developing ways to visualize this data in a
comprehensible
uncluttered
fashion,
while
accommodating users whose tasks and geographic scopes
may be profoundly different.
The initial subset of battlespace data we chose for our
research was a target list. Selecting a data set also served
to constrain our universe of potential users to the
comparatively homogeneous subset who care about this
kind of data. A target list is point data that provides the
locations and attributes of potential ground targets. It is

typically presented as markers (e.g., an icon or symbol)
on a map. Some users of this data are responsible for an
entire theater of operations and will chose a map scale
that will let them see the target distribution over a
1000km by 1000km region. They may periodically zoom
in on an area of interest. Conversely, other classes of
users will select a map scale that will allow them to focus
on the locations of targets within a specific 10km x 10km
region. While preferring to work at this more detailed
scale, they may occasionally zoom out to get “the big
picture”. The techniques we have developed apply not
only to targets, but to a wide variety of cartographic point
data sets. These could include the locations of cases of
infectious diseases, factories with high emissions, fastfood restaurants, or clothing stores.

2. Problem
What issues are associated with viewing the point data
at multiple scales? Foremost is clutter. As we zoom out,
the amount of data to be displayed per square inch of
display space increases dramatically (in fact, quadratically
with respect to the zoom factor [1]). Given the typical
density of our data sets, clutter is a frequent problem. It
not only makes it difficult to understand the visualization,
but an even more dangerous effect is data masking. As
we zoom out the positions of markers on the maps
converge more and more until they are obscuring each
other partially or entirely. This hidden data makes any
attempts at overviews very misleading. In regions with a
high point density, this effect will degrade the
effectiveness of even a close-up view.
In Figure 1 we see a conventional 2D display of
cartographic point data for the entire theater. We
annotated just a few representative areas, indicating the
number of points each contains. In the lower left we see
that a “group” of 1 point is indistinguishable from a group
of group of 8 points. Elsewhere we see groups of 11
points that appears to be just 2, and of 13 points that

appears to be just 4. These are a few examples of data
masking in this view. Many more can be found by
comparing Figure 1. to Figure 4.

Figure 1. Data masking in conventional display
Another issue is the need to support user intent. Users
will select a map scale based on the task they are trying to
perform and the geographic scope it demands. The zoom
can serve as a mechanism for specifying the amount of
detail desired. When zoomed out, the user is interested in
getting an overview of locations and distribution.
However, that is problematic because information of that
coarser granularity is not directly available. Something
must convert the fully detailed data set into an overview.
In summary, the issues we must address are:
•
•
•
•
•

How to visualize the data at a single scale
How to visualize the data at multiple scales
How to automatically generate an overview
How to automatically declutter
How to use a zoom function to range between the
multiple data scales

3. Related work
There has been a lot of research in related areas, but
while it provides conceptual insight it does not provide
solutions to our specific problems. Sources such as
Bertin[2] and MacInlay[3] provide basic tenets to apply to
the design of a visualization, while Keller & Keller[4]
provides a broad range of interesting examples. Perlin
and Fox [5] provide relevant insight from the perspective
of a zoom-based user interface. Frank and Timpf[1]
explore cartographic zoom with an emphasis on the
requisite data structures.
However, they restrict
themselves to manually generated discrete levels of detail

and note that cartographic generalization, which includes
the process of generating overview information from
detailed data sets, is predominantly a manual activity
because efforts at automation have been largely
unsuccessful. Woodruff, et al, [6] have addressed clutter
resulting from multiple zoom levels, but from the
perspective of providing general tools to a designer rather
than automatic generation of decluttered data levels or the
inclusion of multiple zoom level support into the
visualization primitives. Goldstein and Roth[7] explicitly
deal with aggregates from the context of another user
controlled tool that uses aggregations of the output of
various database queries in interactive data exploration.
The aggregation is not a part of the visualization
technique. There has been some interesting work done on
techniques for minimizing occlusion. Gridfit[8] addresses
it through constrained spatial redistribution of 2D points.
Distortion-oriented displays provide details within
context, which is related to our interests in providing
detail as a component of an overview. Carpendale, et
al,[9] provide a summary of the research and extend the
concept from 2D into 3D, with an additional emphasis on
occlusion. The cityscape metaphor has been described as
“a generalization of bar charts in 3D” by Keskin and
Vogelmann[10], and bears some visual resemblance to
our work. It has been implemented in several systems
including MineSet[11] (which incorporates FSN), and
SDM[12] which uses vertical displacement of towers to
address occlusion. We diverge from those cityscape
implementations through our notions of composition of
visual primitives and dynamic aggregation. The use of
multiple levels of detail (LOD) to support different
viewing distances (or zoom levels) has been widely
discussed in the computer graphics literature such as in
Foley, vanDam, Feiner, and Hughes[13] but it is a
fundamentally different issue.
It provides for the
simplification of a coherent visual object rather than our
need, which is the formation or decomposition of a
coherent object.

4. Testbed
Our work was performed in the MITRE Visualization
Laboratory which contains a range of computing
platforms, input devices, and display devices. Our
configuration for this research activity is shown in Figure
2. At the top of the figure is a Sun workstation containing
an Oracle relational database. It stores all the data we
wish to visualize, and is connected via Ethernet to the
visualization systems. The visualization platforms range
from a high end Silicon Graphics system (Onyx2
InfiniteReality), to a 300 MHz personal computer. The

display devices include a CRT, a stereoscopic rear
projector, and a stereoscopic table. The stereoscopic
devices have the option of being operated in nonstereoscopic (monoscopic) mode, as well as operating
with or without eyepoint tracking. All the visualization
software was developed in house. Our goal was to
develop visualization techniques that would be effective
across a range of computers and display devices. The
diversity in our testbed allowed us to explore our
visualization in a variety of display and compute
environments. Initial development was performed on a
Silicon graphics system and displayed on the table with
both head tracking and stereo enabled.
It was
subsequently tested using the rear-projection system with
tracking disabled and stereo both enabled and disabled. It
was also tested on a monoscopic CRT driven by the PC.
The visualization remained effective across all these
environments.
Sun
Workstation

Silicon
Graphics
Workstation

Oracle
DB Server

Personal
Computer

Visualization
Platforms

transition from a detailed view to an overview, and viceversa. Our basic approach is to apply an aggregation
algorithm to the point data, and couple it with markers
designed to function as both individuals and aggregates.
The aggregation algorithm serves two purposes. First, it
declutters the data by reducing the total quantity of
markers that need to be displayed. Second, when coupled
with a properly designed visualization technique, it can
generate overview information from a source that
originally
contains
only
detailed
information.
Visualizations such as ours, which use depictions of the
detail as components of the overview, have been dubbed
“micro/macro designs” by Tufte[14].

5.1. Data Set
The targets (data points) are typically distributed
throughout the theater of operations although each set
contains at least a few clusters. In particular, there may
be target complexes (e.g., multiple structures within a
single military base) that are all identified with the same
latitude and longitude. Each target has up to 14 text or
numeric parameters associated with it.
The most
important are “location” (in latitude/longitude) and
“mission type”. The latter is a nominal data set with 6
elements that categorizes the target as a threat to friendly
aircraft, friendly troops, etcetera.

5.2. Marker Design
There are several considerations in the design of the
markers:
Display
Devices

•
•
•

Figure 2. Testbed configuration

5. Approach
We need to provide continuous zoom display of point
data across a geographic scope ranging from 10km x10km
to 1000km x 1000km. As a user zooms out, the display
should remain uncluttered and all the critical data
presented within the visualization should remain visible
and comprehensible.
There should be a seamless

They must support multiple levels of aggregation
They must immediately convey the critical
information, and provide access to secondary data
They must be visible

The varying geographic scope of the users drives the
need to display both individual points and aggregated
points. A marker design that maintains visual continuity
as it transitions from its individual to its aggregate state is
more intuitive to the user than a set of discrete marker
designs that are distinct for each map scale. The need to
immediately convey the critical information means that
this information must be visually encoded in a fashion
that makes it readily comprehensible and, again, this
encoding must remain effective whenever the markers are
in their aggregated or disaggregated state. Providing
access to secondary data implies some mechanism for
interacting with the markers to display information
beyond what is currently depicted. Finally, the need to be

visible (which seems obvious but in practice is sometimes
overlooked) forces us to deal with color and size issues
for the markers, especially in the context of the map on
which they are overlaid.
5.2.1. Individual Markers. The basic point marker
primitive is a cube, as shown in Figure 3a. A map serves
as the reference plane, allowing the placement of the cube
on the map to serve as one means of identifying point
position. A single cube represents a single point. The
“tower” of cubes is an aggregate marker and will be
described in the next section. The color of each cube
represents its mission type: yellow for Offensive Counter
Air, blue for Interdiction, and red for Battle Area
Interdiction. Bold solid colors were chosen to maintain
contrast with the multicolored high frequency content of
the map underlay. All edges of the cube are rendered
with thick black lines. These help distinguish them from
the background and each other. There is also a black
“footprint” underneath each marker, slightly larger than
the marker itself. The utility of the edge outlines and
black footprints will be further addressed in the aggregate
marker section.

5.2.2. Aggregate Markers. An aggregate marker is
constructed as a stack of individual markers, the
Aggregate Towers, as shown in Figure 3a. The blue
tower represents 10 Interdiction targets within a single
target complex. It is a uniform color because all of the
targets at the complex are of the same type. Each
aggregate marker serves as a stacked bar graph. This is
done by sorting all the targets in an aggregate by color
prior to rendering the aggregate marker, and outlining the
individual cubes in black to allow the user to distinguish
the quantity of cubes of each color within the aggregate.
It allows us to easily understand the distribution of types
within each aggregate. An alternative approach, not yet
implemented, would use the stacking order to represent
temporal information.
In Figures 3b, 3c, 3d, and 4 we see multi-colored
towers representing aggregates of non-homogeneous
mission types. One motivation for selecting single sized
cubes as the individual markers is that, unlike spheres for
example, when abutted they form a single visually
coherent object. This composition of primitives approach
to the creation of the aggregate markers allows us to
automatically aggregate to any level to accommodate a
continuum of viewing scales while maintaining

Figure 3a. Zooming out – Initial view
[See also color plates]

3b. Zoom out by 1 increment

3c. Zoom out by 2 increments

3d. Zoom out by 3 increments

consistency in the appearance of the markers. A key
benefit of this aggregate marker design is that the
aggregates implicitly generate an overview of the data
while maintaining the detail in an uncluttered and nondistracting fashion. The overall height, color distribution,
and edge outlines in the aggregates provide the user with
an immediate qualitative perception of the distribution of
point densities and types. This is our desired overview.
To obtain more detailed quantitative information the user
then has the option of counting the number of cubes in the
aggregate, selecting the aggregate to access the secondary
data, or zooming. Zooming in on an aggregate causes it to
disaggregate into smaller stacks in a very intuitive fashion
until it eventually degenerates into a set of disconnected
individual point markers.
Each aggregate marker represents a set of points that
are close to each other but dispersed over a geographic
region of unknown shape and size. As Bracken[15] and
others have warned, the grouping of geospatial data can
be misleading. Does the aggregate represent a set of
tightly clustered points within a 1km radius, or a long thin
crescent of points spread out over many kilometers? We
compensate for the potentially misleading portrayal of the
point distribution through the use of the footprints. Each
point’s footprint is always rendered regardless of the level
of aggregation. Since all the footprints are the same
color, when they overlap or abut they blend together and
appear to form a single contiguous object. This virtually
aggregated footprint represents the entire region over
which the point aggregate has been formed. The
aggregate marker is always placed within its
corresponding footprint.
We considered rendering the footprints using
transparent rather than black overlays. This would have
the benefit of not occluding details on the base map. The
problem is that different areas of the aggregate footprint
will be formed from different quantities of overlapping
constituent footprints. The result would be variable
opacity within the footprint of a single aggregate. We
would lose the homogeneity and visual cohesiveness that
fools us into perceiving the aggregated footprint as a
single object. While it would be possible to correct these
shortfalls algorithmically, and the variable opacity might
in itself be informative, we did not think the benefits
outweighed the increase in computational complexity.

5.3. Secondary Data
When visualizing data, sometimes not all parameters
can or should be visualized simultaneously. However, a
mechanism should be provided to display all available
data, even that which is not immediately visible. We have

chosen to display this secondary data using a text popup
box that is invoked by selecting the marker with either a
glove or a mouse “click”. This box is visually linked to
the marker by a line. Figure 3d shows a small subset of
the information from the database being displayed in text
form. The secondary data display can also provide
valuable redundancy by displaying the critical data
parameters in an alternative way. An example is position.
The map provides a good visual display for point position,
but requires significant effort by the user should he need
to determine more than an approximate latitude and
longitude. Precise position information can be obtained by
selecting the marker, resulting in a popup box that
contains supplementary information including the latitude
and longitude. Having this data available in text form
facilitates its use in certain kinds of tasks. The secondary
data display is adaptive. When invoked for an individual
point, it provides the point name, location, and type.
When invoked for an aggregate it provides a generic label
for the target name (since there is no meaningful way to
define a name), an average location for its constituent
targets, and a list of target types and quantities within the
aggregate. In order to select (query) an individual marker
within the aggregate, it is currently necessary to zoom in
until it is fully disaggregated. We are currently exploring
techniques to support queries of individual markers within
an Aggregate Tower, while still allowing the aggregate as
a whole to be queried.

5.4. Perspective and Sizing
As seen in Figures 3 and 4, our visualization approach
is inherently three-dimensional (3D) and requires that the
viewer’s eyepoint be off-axis to the normal of the map
surface. If the viewer were looking straight down at the
map along its normal he would be unable to ascertain the
height or components of the aggregate marker. We use a
perspective projection to convert from 3D to 2D for
rendering. We chose a perspective rather than an
orthographic projection to maintain a sense of “natural
behavior” in the view, especially when using stereoscopic
displays, and provide an additional depth cue for
identifying the position of the markers relative to each
other and the map. The disadvantage is that the
foreshortening effect of the perspective projection leads to
displays that have non-uniform scale from foreground to
background.
However, this is ameliorated by the
equivalent foreshortening in the map reference plane,
which leads to proper positioning of objects on the map.
The variable scale within the perspective view does
enter in to our considerations for marker sizing. When
zooming in or out, should the markers resize to maintain a

constant size relative to the map scale (e.g., always 1km
in width based on the current map scale) or instead
maintain a constant size as perceived by the user (e.g.,
always 10 pixels wide)? Our scaling solution is a hybrid.
We define a relatively small fixed geographic size for the
markers in kilometers, but when it comes time to render
them they are subjected to a minimum size constraint also
specified in kilometers. As a user zooms in, the markers
increase in size in a natural fashion, mimicking the user’s
expectations and matching the behavior of the underlying
map. Markers in the foreground are also larger than those
in the background as we would expect in a perspective
view. As a user zooms out, the markers diminish in size,
until they eventually reach a minimum and then maintain
a constant size. The size changes during zoom also
provide feedback to the user that a zoom in happening.
The fixed and minimum sizes were determined
empirically for our standard map series (1:1,000,000
Operational Navigational Chart) viewed at a wide range
of zoom levels. The only constraint was that when fully
zoomed out the minimum size markers still allow their
colors and constitution to be discerned, and be consistent
with ergonomic standards[16]
5.4.1. Zoom Behavior. The series of Figures from 3a
through 3d illustrate how point markers aggregate as we
zoom out. Each zoom increment is a cumulative rescaling
(division) by a factor of 1.5. Going from 3a to 3b we see
how a blue and a yellow marker have aggregated. As we
get to 3c we see that their neighboring red marker has also
joined the aggregate. Finally in 3d we see that aggregate
has now been joined with the neighboring tall blue
aggregate. Similar aggregation behavior can be observed
in the yellow tower that first appears in 3b. Also note
what happens to the footprints of the point markers. They
are barely visible in 3a since they are coincident with the
markers and start to join in 3b. They grow in coverage in
3c and 3d as the geographic spread of the points used to
form the aggregates increases.
The background map scales appropriately as we zoom
out from Figure 3a through 3d. The marker sizes also
scale appropriately from 3a to 3b, but careful examination
will show that they remain constant through 3c and 3d.
The markers reached their minimum visible size and
stopped rescaling with subsequent zooms.
There is no inherent necessity for the zooming to
happen in discrete increments rather than continuously.
Our algorithm supports continuous zoom.
The
incremental zooming was implemented to allow zoom
control through discrete button pushes on some of our
input devices.

5.5. Aggregation Algorithm
The aggregation algorithm is invoked every time the
user requests a display of target information. It queries
the database for target locations within that geographic
area and determines, on a point by point basis, where
aggregation is appropriate. The aggregations are not
precomputed for a discrete set of map scales.
Aggregates are derived primarily from display space
considerations (e.g., will the markers overlap when
rendered on the display?) rather than data space
considerations (e.g., what is the geographic distance
between the points?) because clutter and occlusion are
ultimately user experiences in display space.
The
software compares the marker size in kilometers at the
current zoom level to the distance between points to
identify overlap between markers. Any amount of
overlap will force them to aggregate. Subsequent points
may accrete to existing aggregates or form new ones.
More sophisticated clustering algorithms could have been
applied (e.g., using “distances” derived from similarity
metrics), but these typically operate in data space and we
were particularly interested in the efficacy of operating in
display space with 2D occlusion as the primary clustering
metric.
Our first approach to clustering was useable but
imperfect:
For each point A not in a cluster
For each point B not in a cluster
If distance A to B is less than marker width,
then accrete B into a cluster with A
This approach was relatively quick but imperfect
because it did not maximize the cluster sizes and clusters
that overlapped each other did not merge. Our next
attempt was more computationally intensive but
eliminated those problems by ensuring that all
overlapping markers were placed into the same cluster:
For each point A not in a cluster
For each point B
If distance A to B is less than marker width,
then accrete B into a cluster with A
Recurse on B to check distance to all
points not currently in a cluster
It should be noted that our algorithms for aggregation
appear to be simple degenerate cases of algorithms from
the field of cluster analysis[17]. That area may provide
insight for increasing computational efficiency when
faced with larger quantities of points than we typically
need to address. An important point about the distance
calculation in our aggregation algorithms is that it has to

be consistent with the marker design. If we computed the
distance between markers in a Euclidean fashion, the
aggregation calculations would be incorrect unless the
markers had a circular footprint. To ensure that our
intersection calculations are consistent with the square
shape of our markers (as illustrated in Figure 3) we
calculate the Manhattan distance (delta x + delta y)
between the points.
An additional issue is the placement of the aggregate
marker relative to the visually aggregated footprint. The
most effective and intuitive way to show the
correspondence between markers and footprints is to
place the aggregate marker within its corresponding
aggregate footprint. If we computed the location for the
marker as the geographic center of gravity of all points in
the aggregate, then the aggregate marker might be placed
outside its corresponding footprint. Instead, we compute
the geographic center of all the points in the aggregate,
and then place the aggregate marker at the location of the
point that is nearest that center. This ensures that the
aggregate marker will always be placed on top of the
aggregate footprint. This behavior is illustrated in Figures
3b, 3c, and 3d.
Our aggregation approach results in a drastic
reduction of data masking through formation of the
Aggregate Towers. However, since it only operates in the
2D map plane, it does not address the issue of occlusion
amongst the aggregate towers. This could be resolved

with a 3D extension to the clustering approach. However,
there are two reasons it has not been a significant focus of
our research:
• For our current data sets, the problem occurs
relatively infrequently, especially in contrast to the
amount of data masking in the conventional 2D
approach
• Our system is highly interactive, and users just
instinctively fly their eyepoints around the scene
giving each instance of occlusion a very limited (e.g.,
a fraction of a second) lifespan.

6. Conclusions
The primary contribution of this work has been to
develop techniques for the presentation of geospatial
point data at multiple scales in an uncluttered fashion. In
the process we have developed a new visualization
technique, Aggregate Towers, which incorporates
dynamic aggregation of both data and markers to produce
a continuum of overview displays from a single detailed
data set. This provides both intuitive zooming behavior
and uncluttered displays. Figure 3 provides a good
illustration of the intuitiveness of the zoom behavior. A
comparison of Figures 1 and 4 shows how effectively our
visualization addresses data masking issues to generate an
overview that is accurate, uncluttered, and easily
comprehensible. In the future we will be extending this

Figure 4. Overview of entire theater using aggregation
[See also color plates]

work into representing lineal data at multiple scales and
accommodating aggregation based on ordinal parameters.

7. Acknowledgements
I would like to thank Dr. Michael Wingfield,
Christopher Crotty, Dr. Michael Brenner, and David
Gonthier for their software contributions. Dr. Hugh
Masterman, Dr. Nahum Gershon, Michael Rayson and
Francine Lauren-David also provided invaluable
assistance. This work was sponsored by the MITRE
Corporation’s internal research program.

8. References
[1] A. Frank and S. Timpf, "Multiple Representations for
Cartographic Objects in a Multi-scale Tree – An Intelligent
Graphical Zoom," Computers & Graphics, Nov.-Dec. 1994,
18(6):823-829.
[2] J. Bertin, Semiology of graphics. The University of
Wisconsin Press, Madison WI, 1983.
[3] Jock D. Mackinlay. Automating the Design of Graphical
Presentations of Relational Information. Association for
Computing Machinery Transactions on Graphics, 5(2):110-141,
April 1986.
[4]Peter Keller and Mary Keller. Visual Cues, IEEE Computer
Society Press, Los Alamitos CA, 1993.
[5] K. Perlin and D. Fox. Pad: An Alternative Approach to the
Computer Interface, Proceedings of SIGGRAPH 93
(Anaheim,CA), 1993, pp. 57-64.
[6] A. Woodruff, J. Landay, M. Stonebraker.
Constant
Information Density in Zoomable Interfaces. Proceedings of.
International Working Conference. on Advanced Visual
Interfaces, L'Aquila, Italy, May 1998.
[7] J. Goldstein and S. F. Roth. Using Aggregation and Dynamic
Queries for Exploring Large Data Sets. In Proceedings. of CHI94, pp.23-29, Boston, MA, 1994

[8] Daniel A. Keim and Annemarie Herrmann. The Gridfit
Algorithm: An Efficient and Effective Approach to Visualizing
Large Amounts of Spatial Data. Proceedings Visualization ’98,
pp. 181-188, Research Triangle Park, NC, 1998
[9] M. Sheelagh T. Carpendale, David J. Cowperthwaite, and F.
David Fracchia. Extending distortion viewing from 2D to 3D.
Computer Graphics and Applications, 17(4):42-51, July 1997.
[10] Can Keskin and Volker Vogelmann.
Effective
Visualization of Hierarchical Graphs with the Cityscape
Metaphor. Proceedings of NPIV ’97 (Workshop on New
Paradigms in Information Visualization and Manipulation), pp.
52-57, Las Vegas, NV, 1997.
[11] Barry G. Becker. Using MineSet for Knowledge Discovery.
Computer Graphics and Applications, 17(4):75-78, July 1997.
[12] Mei C. Chuah, Steven F. Roth, Joe Mattis, and John
Kolojejchick.
SDM: Malleable Information Graphics.
Proceedings IEEE Visualization '95, pp. 36-42, Atlanta, GA,
October 1995.
[13]James D. Foley, Andries van Dam, Steven K. Feiner, John
F. Hughes. Computer Graphics: Principles and Practice,
Second Edition,: Addison-Wesley, Reading, MA, 1993, pp. 340341
[14] E. R. Tufte, Envisioning Information, Chesire, Conn.:
Graphics Press, 1990, pp37-51
[15] I. Bracken, 1994, Towards Improved Visualization of
Socio-Economic Data: in H. M. Hearnshaw and D. J. Unwin.,
editors., Visualization In Geographical Information Systems,
John Wiley and Sons, Chichester, pp. 76-84
[16] MIL-STD-1472 Human Engineering Design Criteria for
Military Systems, Equipment and Facilities (available from the
Standardization Documents Order Desk, Building 4D, 700
Robbins Avenue, Philadelphia, PA 19111-5094)
[17] John A. Hartigan: Clustering Algorithms, Wiley & Sons,
New York, 1975

