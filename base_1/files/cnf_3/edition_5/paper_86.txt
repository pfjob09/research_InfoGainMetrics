Multi-visualization of the Cooperative Context in Building Construction Activity
A Model-Based Approach to design AEC-specific Visualization Interfaces
Sylvain Kubicki1, Gilles Halin2 and Annie Guerriero12
Centre de Recherche Public Henri Tudor, Luxembourg
2
MAP CRAI - Centre de Recherche en Architecture et Ingénierie, Nancy, France
(sylvain.kubicki@tudor.lu, gilles.halin@crai.archi.fr, annie.guerriero@tudor.lu)
1

Abstract
Cooperation between actors in design and
construction activities in architecture is an essential
stake nowadays. In professional practices the actors
involved in construction projects use numerous tools.
The project is unique but the “views” that actors
manipulate are various and sometimes fundamentally
different. Their common characteristic is that they
partially represent the cooperation context through a
“business specific” point of view. Bat’iViews suggests to
the actors a multi-view interface of the context and
enables to navigate through the different views. This
proposition is based on a model-driven approach. We
distinguish between “context modelling” and modelling
of concepts represented in each “business-view”. A
model integrative infrastructure allows us to develop the
prototype and to manage user interaction through the
definition of models’ transformations.
Keywords--- Building construction, Coordination
tools,
Human-Computer
Interface,
Multivisualization, Model-Driven Engineering.

1. Introduction
The AEC1 sector regroups actors involved in
specific actions all along the building life cycle. In
design and construction activities the teams of actors are
ephemeral. Then it is difficult for them to have durable
relations. Moreover professional entities involved are
heterogeneous and their business logics, their operational
modes, their objectives and their constraints are relative
to the business characteristics or to the type of firms.
Coordination management is then an essential stake
in project success. It has to be flexible to favor personal
initiatives of each partners of a project. Each one uses
specific tools supporting his needs and his business
practices. The views of activity existing in the different
1

AEC, Architecture Engineering and Construction sector

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

software solutions used represent only partially the
cooperation context of a project. We suggest here an
innovative tool, which present these views to the user in
an integrated interface.
Then the actors of building construction will have
contextual information that actual tools do not provide.
Each one of these views has its own representation
model. Convergence in a unique HCI and conceptual
links between views could only been realized through a
larger infrastructure, based on a model encompassing
cooperation context in its wholeness.
We will describe here the modelling of cooperation
context, the modelling of the concepts represented in the
views and finally their integration. This one enables the
Bat’iViews interface construction and the management of
its navigation functionalities.

2. Cooperation context in architectural
projects
2.1 Organization of actors
In AEC projects, construction stage is extremely
important because it groups numerous and independent
actors during short periods. Their activities are low
predictable and they very often have to adapt their tasks
and decisions to the specific problems they encountered.
Organization of actors takes different forms in this
evolving context. It is hierarchical when an actor is
responsible of the work of the others (i.e. building
construction coordinator). We call it adhocratic when
actors are grouped in an informal way to solve a specific
problem, punctual and unanticipated.

2.2 Coordination of activities and documentsupport
Coordination of activities depends on these
organization forms. In hierarchical organization, a
coordinator monitor tasks progress, anticipate problems
and organize their solving. His work is based on specific

artefacts helping him to diffuse coordination information,
such as construction planning and meeting report.
In adhocratic organization, coordination is
essentially informal. It is an essential coordination mode
during building construction activity. It ensures
adaptability of the actions to the unpredictability of the
activity and to frequent changes. In this coordination
form, documents given by hierarchy don’t serve directly
the actions of the actors. They provide contextual
information that actors need to adapt their decisions.

2.3 IT-based tools to assist coordination
Some IT tools support coordination needs in AEC,
i.e. planning tools and meeting report writing and
diffusion tools. They automate some coordination tasks,
and their interfaces (HCI) are similar to the paper
documents that they replace. Tools combining multiple
views on activity appear progressively. This is the case
of 4D CAD [1] which offers a 3D representation of
building elements linked with temporal execution of the
planning (3D+time).
These tools need explicit modelling of tasks, of
elements to build and of the actors-resources. Thus they
are essentially designed for coordinators and used in
hierarchical forms of the organization.
It doesn’t exist many tools supporting mutual
adjustment between actors in adhocratic organization
forms. Our hypothesis is that mutual adjustment could be
increased by tools and interfaces helping the actors to
better understand the context of their actions.

2.4 Synthesis
Cooperation in AEC projects involves many entities:
actors realize activities, produce documents and use
tools. Coordination is an essential stake of cooperation
during
building
construction.
The
adhocratic
organization is particularly visible and it lets us consider
the flexibility of coordination as a very important aspect
of projects’ success. The tools to develop have to
integrate this aspect and to favor contextual perception.
We distinguish between the context itself (described
above) and the views representing it and used in tools.

3. A model-based infrastructure to design
AEC-specific visualization interfaces
To answer these needs, our method consists to
define and put in relation models. We inspire for that
about the field of research of the Model Driven
Engineering.

3.1 Model Driven Engineering: a unifying
approach
Our approach is based on model development,
steering both domain analysis and tool engineering. This
method is largely inspired by existing methods in the
software engineering domain.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

Since 2000 the Object Management Group has
developed an approach called Model Driven Architecture
(MDA) for software systems development [2]. Their
objective is to define a framework of certified industrial
standards (MOF, UML).
In parallel, the Model Driven Engineering (MDE)
research area is an evolution aiming to unify different
technical spaces (XML, ontology etc.). It does not focus
on a unique technology: it is an integrative approach [3].
Concretely MDE recommends the use of meta-models to
define domain languages. Models represent real systems.
Each model has to be conformed to its meta-model [4].
Finally the transformation concept is a central one. It
allows the models to be productive. A transformation is
itself described with a model.
The field of the MDE research is now extended to
the design of Human Computer Interface [5, 6].
Researchers involved in diverse approaches of the HCI’s
design find a federative framework in the MDE approach
and envisage new transversalities of their works.
We identify number of models linked to HCI (Model
of task, of domain, of navigation, of needs, etc.) [7]. In
an integrated engineering, the relations between these
models can be described and supported by tools to
improve the plasticity of interfaces[6] (i.e. adaptation of
the user’s context).
Our approach finds its origin in this field of
research. The developments that we will describe in the
next parts take into account two types of models:
• Models representing concepts of the AEC
domain,
• And models describing concepts represented in
each view exploited by a tool.

3.2 Modelling the “cooperation context” in AEC
We use this methodological framework and propose
two levels of modelling for the cooperative activity in the
AEC domain. Firstly, a meta-model of the cooperation
context allows us to describe the cooperative activity at a
high level of abstraction. This meta-model is used to
construct a specific model representing the particular
context in an operation of construction. MOF
architecture, which we base this reasoning on, integrates
perfectly in the approach with models and meta-models
of MDE. This particular work is more precisely
described in [8].
Our relational cooperation meta-model takes into
account the existing relations between the elements of a
project. We identify four main elements existing in every
cooperation project: activity, actor, artefact and tool.
A model - focusing on the specific building
construction activity - has been developed. It represents
the specific context of construction: realization tasks,
involved actors (i.e. firms and facilities), tools used (i.e.
planning tools) or documents (i.e. meeting report). For
example, it allows us to manage explicitly the
relationships existing between two documents: a remark
in the meeting report concerns a task in the construction
planning.

3.3 Modelling AEC-specific views
The development of new interfaces to be integrated
into cooperation assistance tools has to take into account
the existence and the specificity of “business-views”.
These “views” of the cooperation context are those that
professionals manipulate in their daily work.
So, we propose to model the “views” such as they
are used in the tools supporting cooperation, which are
existing and/or emergent. We precise that the model of
visualized concepts defines only the semantic content of
a view, turning down technical dimensions, model of
navigation, model of tasks and other specific models for
HCI. Then, a view can be represented with three
abstraction levels like the levels of modelling of the
cooperation context. At the bottom, we find the view
itself, i.e. the user interface operated in a tool (e.g. a view
of the execution planning).
Thus, its model represents the concepts that the
interface uses. These concepts are specific for the
profession that uses the view. In our example, the view
planning represents the “resources” (firms), the tasks,
their temporal links, and it is a view generally used by
the coordinator.
Finally, the meta-model of the view “planning” is
the one of UML.

3.4 Proposition of a model-integration
infrastructure
Our method is based on two types of models: model
of the cooperation context (part 3.2) and model of
concepts represented in views (part 3.3). Our needs
relative to the use of these models are the following
ones:
• To define specific and adapted tools for the
construction domain such as they are described
in the cooperation context model,
• To establish a methodology to represent views
adapted to the AEC domain, notably to design
new innovative interfaces,
• Finally, to link views conceptually, i.e. to
describe relations between concepts in
complementary views. For example, a task in
the view “planning” can be associated to one (or
more) remark(s) in the view “meeting report”.
This semantic link can only be expressed
according to the specific knowledge of the
domain described in the cooperation context.
The integration of these models is translated in an
infrastructure which we will be use like a methodological
guide to develop the interface Bat’iViews (cf. §4).
The figure 1 represents graphically this
infrastructure. At the centre of the pyramid, we find the
levels of modelling of the cooperation context. That is

Figure 1: Model integration infrastructure

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

the “knowledge of the construction domain”. All around
we find the models of views of the context implemented
in tools. Structured on the same principle, we find the
view (HCI), its model and its meta-model. To construct a
particular view, it is necessary to operate a
transformation of models to extract the concept from the
cooperation context to be represented in the view
(“Transformation of models” in the pyramid). At the
lowest level, to construct the visualization interface with
data coming from the context of a project, the
transformation is established in reality like a
transformation and a selection of relevant information in
the context for the construction of view. This operation
of selection is performed in function of what the view
can really displayed (depending on the model of
concepts of the view), but also, in function of other
criteria that can be taken into account like the context of
the actor using the view (e.g. his role, his right of
visibility on information, etc…).
Prospecting the development of cooperation context
multi-visualization interfaces, the unification of models
proposed by this infrastructure is necessary to
homogenize relationships between views. So, the

cooperation context model gives to the views the global
semantics (relationships in the cooperation context) in
which their concepts are integrated.

4. Bat’iViews : A multi-view interface
dedicated to building construction activity
We said that it doesn’t really exist tools favouring
mutual adjustment in adhocratic organization forms. At
the opposite, numerous tools, as planning and meeting
report tools support hierarchical coordination.

4.1 Context multi-visualization benefits
In the adhocratic organization form of building
construction we consider the cooperation context as
complex information set and its comprehension by the
actors is quite difficult. In fact, the tools only give a
partial and fragmented representation of the context:
geometric (plans), three-dimensional (3D mock-up),
temporal (planning), etc.
We think that if the conceptual links between these
documents (and views) were more explicit, the actors

Figure 2: “Bat’iViews”, a multi-view interface prototype

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

could have a better comprehension of their actions’
context. For example a task in the planning could be
referenced in a remark of the meeting report. Then we
suggest an interface representing these links and enabling
the navigation in the context.
Our approach is largely based on the research area
of complex informational set visualization. We found
that multi-visualization of an informational set through
multiple points of views enable to reduce its complexity
[9]. Numerous research works focus on coordination of
the multi-views interfaces (HCI), both in terms of
ergonomics and techniques [10, 11].
A Human-Machine Interface offering multiple views
of the cooperation context of an AEC project will help
the actors to better perceive the context, favouring their
comprehension of the relations existing between the
different views that they use.

4.2 Bat’iViews prototype
Section 2 of this article shows that information
related to coordination (the cooperation context useful to

the building construction actors) is represented in
numerous views attached to documents, coordination
tools or communication tools. To improve context
comprehension by the actors, it is necessary to provide a
representation, adapted to the user, showing relations
existing between the different elements of the context.
Bat’iViews (figure 2) suggests to make use of views
manipulated everyday by the construction stakeholders
and to integrate them in a navigation tool showing
relations existing between content elements of each one.
The interface integrates 2, 3 or 4 views, highlights
relations between their concepts and enables interaction
based on the concepts represented in each view.
Thus, this proposition reinforces two fundamental
characteristics of building construction coordination:
• Favouring coordination understanding by the
actors, and then improving coordination quality
in hierarchical forms of the organization,
• Improving awareness through automatically
highlighting relationships between concepts in
each view. Moreover these concepts enable

Figure 3: Bat’iViews interaction principle

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

user-interaction and navigation in the
cooperation context.
We think that this contextual knowledge of the
collective activity could help the actors during mutual
adjustment situations (adhocratic organizations). They
could work more precisely, estimate the consequences of
their actions, and reducing risks due to misunderstanding
of the work of the others.

4.3 Validation
Generation of the content of each view needs
requires a model transformation. This transformation
enables to build the concepts represented in a view from
the concepts existing in the cooperation context. It is
defined at the “model level”, from the cooperation
context model to the specific model of concepts of a
view. At the lowest level (interface) the execution of the
transformation consists also in a selection of the relevant
concepts to visualize, relative to the view’s model and to
the user context. The management of interactions
between views is based on MVC paradigm and on
models transformations. Each view has its own controller
and data (model). It exists a general controller, which
coordinates the views and executes the transformations
to extract data from the cooperation context. This
principle, used in Bat’iViews prototype, is described in
the figure 3.
This functional validation of our infrastructure has
to be completed with a business validation, still in
progress. At present we have essentially developed
theoretical cooperation scenarios to validate our
hypotheses [8].

Conclusion
The building construction activity, its coordination
and its monitoring is supported by a lot of tools,
interfaces and models used fragmentally by a set of
independent actors. We propose here a multivisualization of the context based on a models
infrastructure. Our goal is to improve cooperation
context understanding by the actors, and so, to favour the
mutual adjustment characterizing the adhocracy. The
Bat’iViews prototype suggests to construction actors
multiple “business views” arrangements that are now
already independently manipulated.
The modelling of the cooperation context aims to
represent relationships existing between different entities
involved in the building construction activity monitoring.
It also provides business semantics to develop new tools.
The modelling of the concepts represented in the views
allows us to describe their visualization capacity, i.e. the
specific nature of information that they provide to their
users.
The suggested infrastructure regroups these models
in order to make them productive, to generate interfaces
adapted to the context of use, and also, to manage the
navigation in the Bat’iViews prototype, putting in
relation the concepts related in each view.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

A second version of Bat’iViews is currently in
progress. It aims to use the MOF QVT technology
recommended by the OMF to specify and realize models
transformations. The transformations will be described as
rules using ATL (Atlas Transformation Language)2 and
its implementation in an Eclipse platform. The virtual
machine of ATL will allow us to implement their
transformations as Web services accessible by the AJAX
client of Bat’iViews. Moreover, we consider also
extending this approach to other models used in the
design of HCI. The tasks models will allow us, for
example, to work on the user-navigation between
different views.

References
[1] KW Chau, M Anson and JP Zhang, 4D dynamic
construction management and visualization software.
Automation in Construction, 2005. 14: p. 512-524.
[2] Richard Soley and OMG, Model Driven Architecture,
Object Management Group, Editor. 2000.
[3] Jean Bézivin, On the Unification Power of Models.
Software and Systems Modelling (SoSym), 2005. 4(2): p. 171188.
[4] Jean Marie Favre, Towards a Basic Theory to Model
Driven Engineering, in Workshop on Software Model
Engineering, WISME 2004, joint event with UML2004. 2004:
Lisboa, Portugal.
[5] R. Ian Bull, Storey Margaret-Anne, Favre Jean-Marie and
Litoiu Marin, An Architecture to Support Model Driven
Software Visualization, in Proceedings of the 14th IEEE
International Conference on Program Comprehension
(ICPC'06) - Volume 00. 2006, IEEE Computer Society.
[6] Jean-Sébastien Sottet, Gaëlle Calvary and Jean Marie
Favre, Towards Mapping and Model Transformation for
Consistency of Plastic User Interfaces, in Workshop on The
Many Faces of Consistency in Cross-platform Design. ACM
conf. on Computer Human Interaction, CHI 2006. 2006:
Montréal, Canada.
[7] Jean-Sébastien Sottet, Gaëlle Calvary and Jean Marie
Favre, Ingénierie de l'Interaction Homme-Machine Dirigée par
les Modèles, in IDM'05 Premières Journées sur l'Ingénierie
Dirigée par les Modèles. 2005: Paris.
[8] Sylvain Kubicki, Jean Claude Bignon, Gilles Halin and
Pascal Humbert, Assistance to building construction
coordination. Towards a multi-view cooperative platform.
ITcon Electronic Journal of Information Technology in
Construction, 2006. 11(Special Issue "Process Modelling,
Process Management and Collaboration" edited by P.
Katranuschkov): p. 565-586.
[9] Xavier Fodor, Thierry Parinaud, Jean Kada, Yves Le
Floch and Jean Michel Bertin, La photographie numérique
s'impose sur les chantiers. Le Moniteur, 2003: p. 100-101.
[10] Michelle W Wang-Baldonado, Allison Woodruff and
Allan Kuchinsky, Guidelines for Using Multiple Views in
Information Visualization, in AVI - Advanced Visual Interfaces.
2000: Palerme, Italy.
[11] Chris North and Ben Shneiderman, A taxonomy of
multiple window coordinations. 1997, Human Computer
Interaction Lab, University of Maryland. Tech Report HCIL97-18.

2

http://www.sciences.univ-nantes.fr/lina/atl/atldemo/adt

