Visualising Communication Network Security Attacks
Shahrulniza Musa, David J. Parish
Electronic and Electrical Engineering Department, Loughborough University, UK
S.Musa@lboro.ac.uk, D.J.Parish@lboro.ac.uk
Abstract
The task of exploring and analysing large quantities of
communication network security data is difficult.
Visualisation of the data should help the analyses and make
data exploration faster and easier. This paper describes
prototype software that visualises the alerts effectively and
provides a simple presentation. The needs analysis of this
prototype is based on the suggested needs of network
security analyst’s tasks as seen in the literature. The
prototype software incorporates various projections of the
alert data in 3-dimensional displays. Filtering, drill-down
and playback of alerts at variable speed are incorporated
to strengthen the analysis. We integrate a false alert
classifier using classification tree algorithm to classify
alerts into false and true alerts. Real-time visual
observation is also included. We describe some example
analyses to prove the usefulness of our prototype.

allows users to understand a great quantity of data in a
shorter time [3]. According to Erbacher [4], visualisation
techniques allow the security analyst to identify the
behaviour of users connecting to the network host and to
identify those whose intentions are unwelcome. The main
objective of security visualisation is to make exploring
huge security related logs files or network traffic faster. It
may also help to identify abnormal patterns of network
traffic that might be related to intrusions.
Increasing numbers of alerts produced by network
intrusion detection systems (NIDS) have increased the job
of security analysts in identifying and responding to them.
In a large-scale network, there may be millions of alerts or
alarms a day. These alerts are normally presented in “text
form” and most of them are false alerts [5]. Considering the
massive volume of alerts received, it is impossible for a
human being to deal with all of them.

Keyword--- IDS alarms, alert visualization, alarm
visualization, network security information visualization

2. Related work

1. Introduction

In this section, we present a summary of previous and
current research in security visualisation. We will limit our
discussion to visualisation tools that use dataset or logs
from intrusion detection systems (IDS).

Giving a visual perspective of network attack data has
been the aim of many researchers in this area. The success
of visualisation in the fields of medical, weather and
atmospheric study, archaeology, chemistry, financial
analysis and airport security motivates further research. The
success
of
visualising
communication
network
measurement information in a highly visualised
measurement display called figural deformity visualisation
(FDV) [1] in our research group motivates this work. In the
FDV design, an object with a defined number of degrees of
freedom is deformed in proportion to the relative values of
a set of measurements. A glance at the object will show the
relative values of these measurements.
Security visualisation is an area of research drawn from
information visualisation. According to Card, Mackinlay
and Shneiderman [2], information visualisation is “the use
of computer-supported, interactive visual representations of
data to amplify cognition”. The visual perspective of data

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

J. Colombe [5] used multivariate Bernoulli event
representation, to convert the text alerts from RealSecure
IDS to a visual form. In this method, he converts each
comma delimited text alert to a binary form (0 or 1) that
marks the presence or absence of a text descriptor in the
particular field. The binary string will then form an alarm
vector that corresponds to a specific descriptor token. The
typicality score1 of each alert is also calculated. This will
give a differentiation of highly typical alerts and the
anomaly alerts by colour-coding.
H. Koike [6] tackled the problem by complex matrix
tables with symbols and colours to present an overview of
the alerts. The display comprises three 2-dimensional
1

Typicality score is the sum of the number of times a symbol has
appeared within a time-window period.

Nyarko [9] on the other hand incorporated concepts
from electromagnetism, fluid dynamics and gravitational
theory with haptic technologies to provide another
visualisation dimension of network intrusion data. The
application is called network intrusion visualisation
application with haptic integration (NIVA). NIVA allows
the analyst to investigate interactively and detect attacks
across time using a three-dimensional display. NIVA users
are able to view the raw dataset used using RealSecure and
Black Ice windows.
Abdullah [10] developed IDS Rainstorm that visualised
IDS alerts as coloured dots according to their severity. The
author claimed that IDS Rainstorm can visualise IP
addresses up to 163835 IP addresses on one display.
Other tools use graphs, tables and pie charts to simplify
reporting and querying of alerts. Examples include
SnortAlog [11], logparser [12] and analyse console for
intrusion detection (ACID) [13]. Using these tools, the
security system analyst still has to deal with numerous
alerts as overviews of them are not available.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

In a study on intrusion detection tasks and visualisation
needs, Komlodi [14, 15] identified the visualisation needs
and proposed a task model (Table 1) that will help the
security analyst to perform their typical tasks. In the model,
the basic analyst tasks will involve monitoring, analysis
and response.
Table 1. Analyst Tasks Model [14, 15] and our
visualisation features
Analyst Task

Monitoring

Stephen Lau [8] developed software called “The
spinning Cube of potential dome”. The software uses the
connection logs of the Bro IDS. The software uses a 3-D
animated scatter plot represented in a cube to visualise the
data. The visualisation display is in a 3-D cube in which the
X-axis represents the internal IP address (in red), the Y-axis
represents the port address (in green) and the Z-axis
represents all possible IP address (in blue). Different
coloured dots in the cube represent the connection status
and mainly focus on unaccomplished connections.
However, this software lacks drill down support. The
software could playback the recorded Bro connection log
and display successful connections in grey and incomplete
connection attempts in rainbow colours.

3.1. Needs analysis

Analysis

Greg Vert and others [7] proposed visualisation by
geometric models to present the information from intrusion
detection alerts. A spicule with different diameter, vector
and lines shows the security risk of the computer, service
and amount of traffic used.

3. A Network Security Visualisation Prototype

Response

frames known as the source address frame, alert frame and
source-destination matrix frame. Koike used heuristic rules
to consider which alerts are more likely to be false
detections. The heuristic rules are alerts which appear
consecutively, alerts which appear many times in the entire
log, alerts which conflict with provided services and alerts
about other networks.

- Monitoring all
attack alerts
- Identifying
potentially
suspicious
alerts
- Analysing
alert data
- Analysing
other related
data
- Diagnosing
attack
- Responding to
attack
- Documenting
and reporting
attack
- Updating IDS

Visualisation
needs
suggested by
respondents

Visualisation features
of the prototype

- Simple
display
- Overview
display
- Flexibility

- Overview in scatter
plot
- Real-time monitoring
- Setting the local
network

- Filtering and
interaction
- Exploration
- Multiple data
source and
correlation
- Multiple view
and level of
data
- Save views

- Drill-down
- Packet payload view
- Filtering
- Flexible monitoring
period
- Multiple view option
- Alert Animation
- False Alert Classifier
- Geographical clustering
- Alert listing print
- Signature listing print
- Save views
- Flexible colour setting

Meanwhile, D’Amico [16] viewed the analyst tasks
were either in reactive or proactive modes. An ideal
visualisation tool should help the analyst to perform both.
Reactive mode is where the analyst usually works in realtime. To visualise in real-time, the tool should be able to
update data automatically and highlight it according to the
alert priority. Conversely, in proactive mode, the analyst
needs data exploration, navigation and animation tools to
help identify anomalous pattern.
On what information to display, Koike [6] suggested
the minimum information to visualise was time, type,
source, destination and details of access. However, other
information should be made available on request.

Signature
ID or class
type along
the
diameter

End time
Signature ID
or class type
along the
diameter

Foreign
host
Quantity of
alerts
received by
the host in
logarithmic
scale

31

Alert
incident
lines

Alert
incident

Foreign
host
Quantity of
alerts
received by
the host in
logarithmic
scale

31

Alert object
Time axis

Local host

Start time

Local
host
(a) Timeline view

Signature
ID/Class type

(b) Plane view

Destination
port

Indicative
quantity
Indicative
quantity (in
logarithmic
scale)/
Time Axis
Source
IP

Indicative
quantity of alert
targeted to the
localhost (in
yellow)

Alert coloured
according priority
with different object
(cube, cone, sphere
or cylinder
Indicative
quantity of alert
originated from
the localhost (in
orange)

localhost

Destination
IP
Signature/class type
(c) Parallel Coordinates Plot

(d) Scatter Plot

Figure 1: The above figures show the schematic diagrams of four displays in the software.
We designed our prototype to address the user needs as
shown that a parallel coordinates plot is good in detecting
mentioned above. We incorporate multiple views in static,
IP sweep, Port Sweep, NMAP or similar attack.
animation and real-time with interactivity, drill down and
control panel to ease monitoring and analysis.
Our prototype software has six 3-D views, which are
the timeline view, projection of the timeline view on to the
XY plane, the world globe and world plane view, the
parallel coordinates plot view and lastly the scatter plot
view. The objective is to give the viewer a different
perspective of the data because some abnormal patterns
may not obvious to identify in one display but might be
easy in another. The last column in Table 1 shows the
summary of our visualisation features that address the user
needs. The following sections discuss some of the main
features of our prototype.

3.2. Scatter plot and parallel coordinates plot views
Figure 1(c) and 1(d) show the schematic drawing of the
parallel plot and scatter plot respectively. The parallel
coordinates plot consists of plotting 5 attributes of the alert
and connecting them with lines. The attributes are the
source port, source IP address, alert signature, destination
IP address and destination port with the third dimension is
the indicative quantity of alerts having that particular
attributes. The lines connecting the attributes are coloured
according to the protocol used. Previous research has

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

Figure 2: Geographical view of an attack to local
network.
Our scatter plot displays six dimensions of the alert
attributes at a time. The information is the local host, the
alert signature, the time, the alert priority, the alert object
and the alert quantity. Alert priority is coloured red for
high, blue for medium and green for low. Alert objects used
are cube, cone, sphere and cylinder for alert received, group
alerts received, alert originated from local network and
group alert originated from local network respectively.
With the scatter plot view, one can view the geographical

location of an attack. Figure 2 shows the origin of the
attacks by connecting alerts with lines to a world map. Line
colour identifies the protocol used in the attack. The scatter
plot view becomes a summary display of the security status
of the local network.

3.3. Timeline and plane view
What, when and where are trivial questions asked by
any analyst doing any investigation task. We try to answer
these questions by visualising the what, when and where
through the design as in the schematic diagram in the figure
1(a). In this view, an alert is displayed using a line
connecting from the source IP address to the destination IP
address passing through the time axis which suggests the
alert instance. The lines are clustered according to their
signature id. Signature ids are placed at the middle of the
visualisation that separates the local network from the
external network. The signature ids are labelled by the ID
number with respective attack priority colour (low: green,
medium: blue, high: red). The vertical axis represents the
selected monitoring period with start time at the bottom and
end time at the top.
The what is the alert represented by a line from the
source to the destination through a specific signature. The
when is the intersection of the connection line with the time
plane. While the where is the source and the destination IP
address of the attack.

categorized into interactions using the 3D images and
interactions using the graphical user interface to aid the
analysis. The user can interact with the 3D images by using
the VTK built-in mouse and keyboard interaction such as
pan, zoom and rotate. Users can get details about IP
address, alert and attack signature by picking the object that
represents them. In timeline and plane views, the spheres
represent IP hosts; signature ids represent attack signature
and small cube on each lines represents alert details.
Picking objects can be activated by bringing the mouse
pointer on to the object actor and then press keyboard key
‘p’. A window containing the requested information will
appear.
While in the parallel coordinates plot view, picking on
where the line intersects the attributes axis will display the
value of the attribute. In the scatter plot, picking the alert
object will display the alert details. Figure 3 shows alert
detail window.
Users can choose the monitoring period accordingly. A
smaller monitoring period is preferred to avoid occlusion.
This is because, when the alerts become numerous, the
lines will congest the display and this will increase the
occlusion. Keeping the height of the time axis constant and
selecting a smaller monitoring period will scatter the attack
lines. The smallest monitoring period that can be chosen is
one-second.

The what attribute will answer questions about the
attack signature, the protocol used and the details of the
alert. The when attribute will provide the time perspective
of the alert and the instances of the attack. Lastly, the
where attribute will provide information about the source
and the destination of the attack, information about IP
address and their geographical location.
The alert object position on each line as in figure 1(a)
indicates whether the local network is the target or victim
of an attack. If the object is on the local network side, it
means the attack is targeting the local network. On the
other hand, if the object is located on the external network
side, it means the local network is targeting an external
network.
The plane view, figure 1(b) projects the timeline view
without the time axis. This projection will remove the
temporal notion of the display and will show fewer lines as
attacks with the same signature, source and destination will
appear only once.

3.4. Interactivity, drill down and zoom
One of the main issues pointed out in usability studies
is the user interactivity with the software. We suggest
various interactions in the software, which can be

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

Figure 3: Example of pop-up windows for alert details

Another important interactivity feature is the ability to
filter the alerts. The software allows the user to filter the
alert according to the protocol, alert signature, alert class
type, alert priority, source IP, destination IP, source port
and destination port of the attacks. There is also some basic
listing of the alerts and the quantity of alerts in the selected

monitoring period. Other information includes the quantity
of attack according to source IP address, destination IP
address, source port and destination port. These features are
set up to provide tools that will help analysts to perform
their tasks better.

(c) Real-time Panel

(a) Analysis Panel

(b) Filter Panel

real-time monitoring. The user can choose either to display
in timeline view, plane view or parallel coordinates plot
view.

3.6. Geographical display
Another display view is to show all related IP addresses
in their geographical location. The exact geographical
location is obtained from an external database provide by
MaxMind GeoIP [18]. The display is in either a globe or a
plane view. In these views, we can view the geographical
location of the external IP address that causes the attacks to
our local network with their indicative quantity of alerts
from that location. The height of the logarithmic scale bars
represents the indicative quantity of the alerts. The colour
of the bars shows the alert priority (low: green, medium:
blue, high: red) (figure 5). Geographical location of
attackers with alert lines can also be viewed in scatter plot
view option (figure 2).

(d) Classifier Panel

Figure 4: The Graphical User Interface

3.5. Timeline animation and Real-time monitoring
The timeline animation is designed to give the user the
exact sequence of the attacks. The user can replay the
attacks from a selected period. The default replay speed is
set to 60 times faster than real-time; however, this can be
changed. We also provide a video player type control panel
to allow the user to control the animation. The user can also
use the slider to slide through the animation. This feature
offers the possibility of exploration and navigation through
the alerts. The animation can be displayed in the timeline
view and in the parallel coordinates view.
The software also has the ability to monitor alerts in
real-time. This is done with the help of Snort which logs
alerts into the database in real-time. The software will
query the database and refresh the display every second.
The one-second refresh rate is chosen due to the
complexity of the algorithm to visualise the display. We
think a one-second period is sufficient to inform users of a
new attack. The user can obtain a listing of new attacks and
they also have access to the details information on IP
address, alert and attack signature by using ‘picking’
objects as mentioned in 3.4.
The observation window for real-time monitoring is
opened for a specified period. At the end of the period, the
window will be emptied and reset to reduce the complexity
of the display image. Figure 4.c shows the control panel for

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

Figure 5: Geographical View

3.7. Alert reduction and false alert classifier
Displaying thousands of alerts in the graphic display
will slow down the associated computer. To solve this
problem, we set up an alert reduction algorithm which
groups similar alerts. This technique has been used by
Tedesco [17] to solve the alert flooding attack problems.
Alert flooding attack is a simulated intrusion attempt that
the attacker creates to make the analyst become deluged
with false information.
We group alerts with the same source IP address, alert
signature and destination IP address. In our visualisation,
different objects are used to visualise the alerts. A cube is
for an alert that targets the local host. A cone is for a group
of alerts that target the local host in alert reduction mode. A
sphere is for an alert that originates from the local host. A
cylinder is for a group of alerts that originate from the local
host in alert reduction mode.
With this alert reduction, we are able to display a large
number of alerts at a time. We have tested our prototype
software to display with more than 40000 alerts in one
display.

Another novel feature that we apply in our visualisation
is the use of a machine learning classifier to classify alerts
into false and true alerts. We have used a standard
classification tree as our classifier model. We have built
and tested our classifier using machine learning techniques.
However due to the limited space in this paper, we only
show the results of the classifier. Using the classifier, the
false alerts can be hidden thus allowing the pattern of true
alerts to emerge (figure 6).
The colour of the alert objects follows the colour of the
alert severity when the false alert classifier is not selected.
But, when the false alert classifier is selected, false alerts
are coloured in blue, and true alert is in red.

we proceed to the examples, we explain the approach used
to analyse the alerts.
The first display to be used is the scatter plot view. In
this view, we should focus on irregularity alert flows,
because the irregularities are caused by abnormal system
behaviour [19]. The irregularities can be a small number of
alerts or a host having many alerts with different signatures
or a host being the source of an attack.
For a suspicious alert, look at the alert details and make
a judgement based on the priority and the packet payload to
understand the alert cause. Then, try to view them in the
other display and make use of the filter to confirm and to
corroborate the abnormal behaviour.

4.1. Ntinfoscan and Pod DOS
An observation on Monday 8 March 1999 between
13:00 to 14:00 GMT from the Darpa99 dataset [20] shows
there are at least 3 suspicious events that need further
attention. Figure 7 shows the images from two different
views.

True alerts
predicted by our
classifier

Figure 6: Top Picture before applying false alert
classifier and bottom picture after applying false alert
classifier and hiding the false alerts. The monitoring
period of the images is Thursday 11/03/1999 between
13:00 and 15:00 from the Darpa99 data set.

4. Sample analysis
In this paper, we explain some sample analysis using
the Darpa99 dataset and recent honey net traffic data from
High Speed Network laboratory at Loughborough
University to show the usefulness of our prototype. Before

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

Figure 7: Top image shows various attacks
to local hosts in the geographical view.
Second image shows the attack after
filtering in timeline view.

The top image in figure 7 shows there are various
attacks from the same source targeting the same
destination. These are shown as yellow lines (TCP). Other
suspicious events are the continuous attack using the UDP
protocol (blue lines). Lastly, there is one attack with an
unknown protocol which is coloured green.
From the analysis, the multiple attacks from the same
source and destination are ntinfoscan used by the attacker
to the targeted machine to gather information such as
services, login and file system details. Using an approach
as suggested by Koike in [6, 19], we can assume the attacks
with blue lines are false alerts. Koike suggests if the attacks
from the same source to the same destination are
continuous over an extended period; it is most likely the
alerts are false alerts.
The attack in green is a DOS attack. Detail alert shows
the attack is using computer port zero and the packet
payload is containing series of ‘0’ hexadecimal value. This
information is valuable to decide the alerts that are true as
there are no computer port zero and it is suspicious to have
the packet payload with series of ‘0’ hexadecimal value.
From the attack list of that day provided by Darpa99, it
appears that ntinfoscan and Pod DOS attacks did happen,
and our visualisation is able to direct attention to these
attacks.

4.3. Slammer worm
The slammer worm is a self-propagating malicious
code that exploits the vulnerability in the Resolution
Service of Microsoft SQL Server 2000 and Microsoft
Desktop Engine (MSDE) 2000. It attacks port 1434 using
the UDP protocol. An observation of a day (07/03/2006)
dataset from the honey net traffic shows there are attacks
by the slammer worm to the honey net.
Figure 9 shows there are three attacks with alert
signature ID of 180, 181, 182 and all the attacks used the
UDP protocol. Details of the three signature IDs show the
attacks are related to the MS-SQL worm which is a
slammer worm. Other attacks are with signatures 42,184
and 216. Further investigation shows the signature alert 42
is ICMP NMAP ping. The signature 216 is an oversize
uniform resource indicator (URI) request to http port 80.
Signature 184 is an ICMP destination unreachable.
Advantage of using scatter plot view is that the attacks are
clustered according to the destination host and the attack
signature. This means the attacks are grouped and easy to
analyse.

4.2. Portsweep
Figure 8 shows another example of analysis. The
observation on Monday 9 March 1999 between 13:00 to
14:00 GMT from Darpa99 in parallel coordinates plot view
shows there are lines covering the entire destination port
axis (figure 8). The attack list shows the particular machine
is under a portsweep attack.
Figure 9: Observation of a day of honey net alert
data. Signature 180, 181 and 182 show the
Slammer worm attacking the local hosts.

5. Implementation detail

Figure 8: Portsweep Attack – From the
Scatter Plot view, there is a possible attack
on IP 172.16.114.50. Display in the parallel
coordinates plot of the IP address confirms
the portsweep attack.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

The IDS environment used in our study was Snort with
alert logging to a MySQL database. The Snort engine used
the standard signature rules and configuration provided by
the Snort community group. We developed the
visualisation software using python 2.3 with the VTK 5.0
module for visualisation display and the wxPython 2.6
module for the graphical user interface. The dataset used in
this study was obtained from the published Darpa Intrusion
detection evaluation data set 1999 from the Lincoln
Laboratory, Massachusetts Institute of Technology [20].
The off-line tcpdump datasets were passed into snort ids
with a standard configuration.

Another set of data for this study was obtained from
honey net tcpdump traffic data from the High Speed
Network research lab, Electronic and Engineering
department, Loughborough University. Two months of data
from 01/03/2006 until 30/04/2006 were visualised and
studied.

Conclusion and future work
We have shown that our visualisation approach is able
to direct analyst attention on to suspicious events. We have
applied an alert reduction algorithm in our visualisation
prototype to reduce resources usage when dealing with
large number of alerts. We have also integrated various
displays with filtering ability to analyse security alerts. We
have adapted machine learning techniques that learn from
examples and help the analyst to identify false and true
alerts. With the use of a machine learning classifier, the
‘noise’ (false alerts) can be reduced thus leaving only the
true alerts.
However, our prototype still has some drawbacks. One
of the drawbacks is the scalability issue. When there are too
many local hosts; the image will become smaller in order to
allow all the hosts into the image. At the moment, we
suggest a zoom function to make a portion of the image
bigger. Another drawback in our prototype is that the input
data is limited to Snort alert data.
Another important evaluation that we need to conduct
is the end-user evaluation. The end-user of this
visualisation will be the network security analysts and
network administrators. We intend to evaluate our
visualisation prototype with them.

References
[1] D. J. Parish, A. Pagonis, D. Barnet, J. M. Sandford and I. W.
Phillips, "Presentation of real-time communication network
measurement information," in IEE Proceedings. Science,
Measurement and Technology, 2004, pp. 319-326.
[2] S. K. Card, J. D. Mackinlay and B. Sheiderman, Readings in
Information Visualisation: Using Vision to Think. San
Francisco, CA: Morgan Kaufmann, 1999, pp. 686.
[3] K. Abdullah, C. Lee, G. Conti and J. A. Copeland,
"Visualizing network data for intrusion detection," in 2005,
pp. 100-108.
[4] R. F. Erbacher and D. Frincke, "Visualization in detection of
intrusions and misuse in large scale networks," in 2000, pp.
294-299.
[5] J. B. Colombe and G. Stephens, "Statistical profiling and
visualization for detection of malicious insider attacks on
computer networks," in VizSEC/DMSEC '04: Proceedings
of the 2004 ACM Workshop on Visualization and Data
Mining for Computer Security, 2004, pp. 138-142.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

[6] H. Koike and K. Ohno, "SnortView: Visualization system of
snort logs," in VizSEC/DMSEC '04: Proceedings of the
2004 ACM Workshop on Visualization and Data Mining for
Computer Security, 2004, pp. 143-147.
[7] G. Vert, D. A. Frincke and J. C. McConnell. A visual
mathematical model for intrusion detection. pp. 337.
Available: "citeseer.ist.psu.edu/vert98visual.html"
[8] S. Lau, "The Spinning Cube of Potential Doom," Commun
ACM, vol. 47, pp. 25-26, 2004.
[9] K. Nyarko, T. Capers, C. Scott and K. Ladeji-Osias,
"Network intrusion visualization with NIVA, an intrusion
detection visual analyzer with haptic integration," in 2002,
pp. 277-284.
[10] K. Abdullah, C. P. Lee, G. Conti, J. A. Copeland and J.
Stasko, "IDS RainStorm: Visualizing IDS alarms," in
Visualization for Computer Security, 2005. (VizSEC 05).
IEEE Workshop on 2005, pp. 1-10.
[11] J. Chartier. (2005, 13 April). SnortALog : Snort analyser
logs. Available:
http://jeremy.chartier.free.fr/snortalog/index.html#sample
[12] Microsoft. Log parser. Available:
http://www.logparser.com/
[13] R. Danyliw. The analysis console for intrusion databases
(ACID). Available: http://www.cert.org/kb/acid/
[14] A. Komlodi, J. R. Goodall and W. G. Lutters, "An
information visualization framework for intrusion
detection," in CHI '04: CHI '04 Extended Abstracts on
Human Factors in Computing Systems, 2004, pp. 1743.
[15] A. Komlodi, P. Rheingans, Utkarsha Ayachit, J. R. Goodall
and Amit Joshi, "A user-centered look at glyph-based
security visualization," in Visualization for Computer
Security, 2005. (VizSEC 05). IEEE Workshop on, 2005, pp.
21-28.
[16] A. Dapos Amico and M. Kocka, "Information assurance
visualizations for specific stages of situational awareness
and intended uses: Lessons learned," in Visualization for
Computer Security, 2005. (VizSEC 05). IEEE Workshop on
, 2005, pp. 107-112.
[17] G. Tedesco and U. Aickelin. (2006), Data reduction in
intrusion alert correlation. WSEAS Transactions on
Computers pp. 186-193. Available:
http://eprints.nottingham.ac.uk/archive/00000365/
[18] MaxMind LLC, "MaxMind, GeoIP," vol. 2006, 26 May
2006. 2006.
[19] J. Viinikka, H. Debar, L. Me and R. Seguier, "Time series
modeling for IDS alert management," in ASIACCS '06:
Proceedings of the 2006 ACM Symposium on Information,
Computer and Communications Security, 2006, pp. 102113.
[20] MIT Lincoln Laboratory. DARPA intrusion detection
evaluation. pp. Last Date Accessed: 05/09/2005. Available:
http://www.ll.mit.edu/IST/ideval/data/data_index.html
[21] IANA. (2006, 12-Mar-2006). Internet assigned numbers
authority. [Online]. 2006(26-Jun-2006), pp. 1. Available:
http://www.iana.org/assignments/protocol-numbers

