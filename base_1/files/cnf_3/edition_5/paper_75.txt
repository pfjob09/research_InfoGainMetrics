Integrating InfoVis and GeoVis Components
,Mikael Jern† ,Johan Franzén†
VITA – Visualization Technology and Applications, Linkoping University, Sweden
mikael.jern@itn.liu.se, johan@jfranzen.se

Abstract
We
introduce
our
generic
“GeoAnalytics”
visualization (GAV) component toolkit, based on the
principles behind Visual Analytics (VA), for dynamically
exploring time-varying, geographically referenced and
multivariate attribute data. GAV includes components that
supports a mixture of technologies from the three
visualization
fields;
information
visualization,
geovisualization and scientific visualization. Our research
concentrates on improving visual user interfaces (VUI)
methods and extends existing visual representation
techniques. In this paper, we demonstrate the synergy of
integrating a wide range of different methods using
multiple-linked views with a rich variety of possible
coordination exploration ideas and allowing the user to
view the information from different perspectives and try
out different scenarios. The effectiveness of our proposed
framework is demonstrated in a tailor-made case study
assembled from GAV components and explores the supply
and use of energy data for controlling the emission of
carbon dioxide among 290 Swedish municipality regions
during 1990-2004.

1. Introduction
The fast growing quantity of official social science,
spatial-temporal statistical data accessible on the Internet
calls for creative integrated information and geovisualization tool. While researchers have made
substantial advances over the past decade, many
challenges remain particular for working with temporal
and multivariate attributes simultaneously and have a
spatial dimension. A solution to this challenge can be
found in the emerging Visual Analytics (VA) [9], a
science of analytical reasoning facilitated by efficient
interactive performance, improved fundamental methods
for data management and visual exploration analysis.
Implementing multivariate data tools, time-linked
coordinated views and visual dynamic queries with

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

conditioning from scratch is not a simple programming
task. We introduce our generic “GeoAnalytics”
visualization (GAV) component toolkit. GAV is based on
the principles behind VA although we focus on the
explorative data analysis (EDA) aspect. GAV provides a
broad collection of dynamic visual interaction
components familiar from the InfoVis and GeoVis
research domain and hopefully pertinent and potentially
useful. We customize tailor-made and task-oriented
applications based on layered component technology. We
employ our own developed component-based class
libraries and 3D data model. These components are
developed in C# based on Microsoft’s low-level DirectX
graphics library and fulfil most of our defined VA
requirements. Based on these tools, we demonstrate our
framework with several high-level components,
appropriate for a target statistical database that is highdimensional data space with multivariate attributes
available in tabular format.
Complex official and scientific statistical data that
contain geographic locations, time series and multivariate
attributes are made available free of charge by National
Statistics Institutes such as Statistics Sweden, SCB [13] or
EUROSTAT. This data can be used for the purpose of
making policy decisions, and to facilitate the appreciation
of economic, social, demographic, environmental and
other matters of interest to the governments, government
departments, local authorities, businesses, and to the
general public. Moreover, survey data on specific topics,
such as labour force, household budget, are regularly
collected to keep updated information on some economic
and social phenomena. The techniques for attaching
socio-economic data to specific locations have markedly
improved over the last years [4], [6]. We use a case study
from the environmental domain to demonstrate the
synergy of integrating the GAV InfoVis and GeoVis
components. The demonstrator explores the supply and
use of energy data for controlling the emission of carbon
dioxide among 290 Swedish municipality regions during
1990-2004.

Figure 1: GeoWizard developed with GAV components. Three linked and coordinated views explore the emission of carbon dioxide
(CO2) kg/inhabitants for a selected area South of Sweden during 2005. Six multivariate CO2 attributes representing Total, Energy,
Household, Industry, Service and Transport are explored in the PC [Parallel Coordinate view]. A string in the PC forms a visual
representation of the characteristics of one municipality. The user can follow the emission of CO2 for each attribute and select which
should be displayed in the map views. The differences between selected municipalities can be found by visually comparing the (here 4)
highlighted strings representing them. We compare the total emission of CO2 (left map) with the emission of household CO2 (right
map). The colour legend is interactive and we use the average CO2 value for Sweden to divide blue and red map visualization. Four
specific municipalities are highlighted in all views to point out interesting discoveries. The PC shows a clear pattern for all six energy
attributes of CO2 for the selected municipalities. Örkelljunga shows severe high concentration of transport CO2.

Our ongoing applied research efforts presented in this
paper focus on such questions as:
• Synergy of visual representation and visual interfaces;
• Visual inquires for discovering conditioned trends;
• Dynamically linked, coordinated and resizable views
where data can be analysed from different
perspectives;
• Interactive performance that can support visual
analytic reasoning;
• Design based on cognitive and perceptual principles;

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

• How to interact visually with data in a way that
supports clear understanding of the problem, finding
reasonable ways to solve it, seeing pros and cons of
each possible solution, and understanding the tradeoffs
between various options;
We begin this paper with a section about related work
that has influenced our research, followed by a conceptual
and technical description of the overall GAV framework.
Next we present our spatio-temporal and multivariate
attribute demonstrator (figure 1) and finish by discussing
our conclusion and ideas for future work.

2. Related work
Programming InfoVis and GeoVis multivariate data
methods from scratch is not a simple task. A toolkit such
as the Java and OpenGL based InfoVis Toolkit [15] can
ease this burden and is freely available. Instead of Java,
our GAV component toolkit is developed in C# and
integrates with Microsoft .NET Framework and Visual
Studio development tools. Performance tests indicates that
DirectX is faster compared to Java Graphics and OpenGL.
Visualization of spatio-temporal data has been the
subject of several recent research papers. The results
include both conceptual models and extensive specialized
applications. GeoVISTA Studio [12] is an open source
Java-based visual programming environment and is
commonly used for developing geovisualization
applications. Another general system is CommonGIS
[10], tools supporting exploratory data analysis. VISSTAMP [2] tools leverage visual and computational
methods to search for space-time and multivariate
patterns.
Andrienko has described interesting approaches in
several papers [3], [4] including the impact of data and
task characteristics. Carr et al. [5] describe a multivariate
approach based on conditioned choropleth maps.
Tominski describes 3D pencil icons [6] for mapping
multiple spatio-temporal data attributes. These 3D icons
are placed at the centroid of each region.
Many systems lack support for analysing
simultaneously spatio-temporal and multiple attributes
data behaviour. In our research we propose dynamic
GeoAnalytics methods that include support for visual
inquiries [7] based on conditioned space-time and
multivariate patterns.

6. Visual space-time and multivariate querying tools;
7. Component-embedded colouring interaction and
filtering;
The GAV toolkit data flow architecture is divided into
three layers; the data access layer, the data transform/filter
layer and the data consumer layer, see figure 2.
1.
2.

3.

The data access layer provides GAV with data
from underlying data sources. The toolkit supports
reading many different data sources;
The data transform/filter layer of the toolkit filters
and/or transforms the data provided from the data
access layer, examples are: down sampling,
clustering and projections;
The data consumer layer includes the GAV
functional components;

3. System implementation
GAV is a component-based class library using a 3D
data model for building tailor-made, multiple-linked
views and task-oriented applications based on integrated
GeoViz and InfoViz methods. The GAV components are
developed in C# based on Microsoft’s low-level DirectX
graphics library and .NET framework. We have set the
following generic requirements for our tool design and
implementation of GAV:
1. Layered component approach for customization,
scalability and reusability;
2. Shorten development time by utilising already
developed and assessed components;
3. Mechanism for integrating external user components;
4. A 3D data model for spatio-temporal and multivariate
attribute data exploration;
5. Hardware rendering techniques using DirectX for
interactive performance;

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

Figure 2: The GAV toolkit architecture. The data flow
pipeline is divided into the following three layers: the data
access layer, the data transform/filter layer and the data
consumer layer. This separation into layers simplifies and
improves the pipeline modularity which facilitates the
development process.

3.1 Layered component architecture
The GAV toolkit enables rapid development of
customized applications by combining low-level basic and
functional components, each one performing a small
specific task in the overall VA process, into customized
and task-centric applications. The layered component

architecture enables broad applicability, customization,
scalability, reusability of components and shortens the
development time.
Interoperability is invaluable to the development of the
GAV toolkit since different developers, working almost
entirely independently, can contribute VA components to
the GAV component repository. Example of available
components include scatter plot, PC, shaded graphs, table
lens, time and trend series graphs, choropleth map, ternary
diagram, 2D, 3D and 4D contour maps, colour legend and
several data model, filter and data transformation
components (figure 7). GAV includes already more than
100 classes that can ease the burden of application
development.

3.3 Resizable views
Multivariate data containing both spatial and temporal
information are difficult to analyze through the use of a
single type of graph. In order to detect complex patterns
within the data it is more convenient to view it through a
number of different visual representation methods, each of
which is best suited to highlight different patterns and
features. It is also necessary to achieve balance between
non-abstract and abstract visual representation. Some
problems are best solved with one or the other, however
many require the services of both representations. A
common approach is to display each view in a separate
window and allow the user to arbitrary arrange the
windows. In this context a view is referred to as a clearly
defined region on the screen. The notion of arranging
views is generic and exists in many visualization systems.
The GAV toolkit employs Microsoft’s development
tool, Visual Studio’s .NET hierarchical layout
management to interactively design a GUI layout with
dynamic embedded resizable views in a single coherent
window. By using this layout management environment, a
visual interface can be divided into a number of views
separated by interactive splitters, allowing the user to
scale the individual views.

Figure 3: A functional component is attached to a view using
the VUI organizer.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

3.2 3D Data Representation
An array-based data cube model is used to store
multivariate data or time-varying multivariate data sets.
Two dimensions of the cube can be used to store a
multivariate data set where the axes represent object and
their attributes. In the three dimensional case the data
model is extended with one more axes which can, for
example, represent time. An application specific example
of the three dimensional case is seen in figure 6 where an
object is a Swedish municipality containing a number of
energy consumption measurements over time. A value in
the data model is found by a three dimensional index.
GAV functional components are attached to views
through a view organizer class (figure 3). This class
handles when and where functional component are
rendered. A list of connections between views and GAV
functional components is stored internally. Whenever a
component is to be rendered, the organizer finds the view
assigned to that component and tells the graphics adapter
to use that view as rendering target. A re-rendering of a
functional component can be triggered in multiple ways.
• The paint event is received from a view. This occurs,
for example, if the view is resized.
• The programmer has updated some properties on a
component and requests an update.
• The component itself requests an update. This
happens, for example, if the user interacts with a
component by means of filtering, rotation or
translation.

Figure 4: GAV data cube model used for energy data.

4. Case study based on assembled GAV
InfoVis and GeoVis components
We have selected a case study from the
geovisualization domain to demonstrate the synergy of
integrating InfoVis and GeoVis methods. Our prototype
shows the supply and use of multivariate energy data for
controlling the emission of carbon dioxide among 290
Swedish municipality regions during 1990-2004. In our
previous publications, we first demonstrated an early
prototype [1] built on a commercial toolkit, which limited
our preference for programming extensions and restricted
distribution of the result. In our 2nd attempt [16], we
designed and implemented a complete application from
scratch requiring a massive programming effort. In this 3rd
attempt, we introduce the GAV component toolkit with a
data cube model as the programming platform for our
application development.

4.1 Spatio-temporal and multivariate energy data
Space-time-attribute awareness means that the data
cube (figure 4) can be analysed and visualized across all
three dimensions simultaneously. Our GAV demonstrator
performs this task by integrating five functional
components: parallel coordinates PC control panel, time
graph, trend graph (both graphs use the GAV generic PC
component but with different properties) and two
choropleth maps (figure 6). GAV supports an event-based
approach for user-defined conditions and constraints. This
means that detected important events can be highlighted
while irrelevant information is concealed (figure 5). The
three PC graphs (figure 6) use embedded dynamic range
sliders for defining visual inquiries such as thresholds and
conditioning that constrains the dependent attribute data
for selected time periods displayed to those meeting
specified parameters on all attributes and time. These
events are processed with minimal cognitive overhead and
virtually instantaneous response time and can be
expressed simultaneously in all three graphs involving

multivariate attribute values for time varying data. Events
can be defined for single time steps or in the complete
temporal domain.
In addition to having a global view of patterns in the
data cube, the VUI supports several methods to
interactively select “regions” of particular interest
including pick individual items, rectangle selection and
selection based on defined conditions and constraints.
Figure 6 shows four selected municipalities from a
previous filtered south-west area of Sweden.
The corresponding attribute values for the time period
1990-2004 are shown in the Time Graph and are timelinked to the PC where updating time in Time Graph will
simultaneously change the time step for all attributes in
the PC. Animating controls (top menu) will dynamically
update the PC and linked maps and focus users to relevant
events. Interesting municipalities can be selected in any
view and are highlighted in all displays (see darker lines
in figure 5 and 6).
The Trend Graph is a GAV PC-based component with
built-in trend detection mechanisms. Trend Graph
represents Value (t) – Value (t - 1) in percentage, where t
is the time period for the observation. The viewer can
easily notice changes in particular years but also observe
municipalities with similar trends although there values
are of different amplitudes.
The demonstrator also includes two choropleth maps,
where the left is linked to the PC and visualizes coloured
attribute (PC) for selected time step (in Time Graph) and
the right map Trend Map is linked to the Trend Graph and
is coloured according to the trend in %. These views take
constraints on any attributes into consideration. Any
changes in classification of the choropleth map [11] also
change the colour of the corresponding municipalities in
the PC and Time Graph. Map animation of events over
time and geography is provided simultaneously for
relevant views as the animation time slider is moved
forward and backwards in time. The GAV architecture
(figure 2) gives an understanding of the data flow between
filter and visualization components.

Figure 5: Conditioned filtering
for CO2 attribute (3) and year (4)
where all municipalities with
higher values than average for
Sweden are displayed in red (2)
and those below are removed (1).
Örkelljunga (5) and Nybro (6) are
highlighted in all views.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

Figure 6: Five linked views explore the emission of carbon dioxide (CO2) kg/inhabitants for a selected area south-west of Sweden with
37 municipalities during 1990-2004. Transport is the active attribute in the left map and PC. Each axis in the PC represents an energy
attribute data (one time step). A string in the PC forms a visual representation of the characteristics of one municipality. The differences
between selected municipalities can be discovered by visually comparing (in this case four) strings. The Time Graph shows the yearly
values for the attribute Transport, and we can, for example, follow the emission for CO2 Örkelljunga in the period 1990-2004. The
Trend Graph represents the differences between the values in successive years and behaviours with extreme changes between years are
observed. The red colour in Trend Map shows municipalities with increased usage of Transport CO2. The views can be animated
through time steps (top GUI panel).

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

Figure 7: GAV is a component-based class library using a 3D data model for building tailor-made, multiple-linked views and taskoriented applications based on integrated GeoViz and InfoViz methods. Special GAV classes allow user-programmed data
transformation or visualization components to be integrated into the GAV data flow architecture (figure 2). We use Visual Studio’s
.NET hierarchical layout management to interactively design a GUI layout with dynamic embedded resizable views. With a negligible
programming effort in C#, comprehensive explorative multiple-linked views applications can be assembled in hours.

5. Conclusions
We introduce a generic GAV component toolkit [17] that
provides a broad collection of visual interaction InfoViz
and GeoViz components. GAV provides efficient
interaction code for event handling, brushing, zooming,
drag-and-drop and more and normally you must write all
of this code from scratch. Additionally, GAV can be used
with Visual Studio for interactively designing multiplelinked GUI layouts. The advantages of the GAV
component approach can be summarized:
• InfoViz and GeoViz components that can support
tailor-made and task-oriented application design;
• Reuse of established functional components in new
applications;

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

•
•

Component linking is easy;
Large number of properties give developers
flexibility;
• Take advantage of the GPU on the graphics adapter
to enable higher rendering performance;
• Appropriate for multiple-linked views applications;
• Framework for the creation of both user components
and improved versions of existing components so that
ideas can be tried out rapidly in a fully functional
useful environment;
Our next step includes a comprehensive user task
analysis [14]. Can our customary GAV applications be
sufficiently powerful and flexible for exploration among
domain specialists? Can simplicity and visual appeal
tools help unskilled users? The GAV toolkit [17] will be
made free available to the research community.

References
[1] Jern, Johansson, Pettersson, Feldt: “Tailor-made Exploratory
Visualization for Statistics Sweden”, CMV 2005, London,
July 2005, published by IEEE Computer Society.
[2] D. Guo, J. Chen, A.M. MacEachren, K. Liao. A
visualization system for space-time and multivariate patterns
(VIS-STAMP), IEEE Visualization and Computer Graphics,
Vol 12, No 6, 2006
[3] Andrienko, N. & Andrienko, G. 2004. Interactive visual
tools to explore spatio-temporal variation, In M.F.Coastabile
(Ed.) Proceedings of the Working Conference on
Advanced Visual Interfaces AVI 2004, Gallipoli, Italy,
May 25-28, 2004, ACM Press, 2004, pp.417-420
[4] G. Andrienko and N. Andrienko. Visual Exploration of
Spatial Distribution of Temporal Behaviors, In Proceedings
of IEEE IV2005.
[5] D. Carr, D.White, and A.M. MacEachren, Conditioned
choropleth maps and hypothesis generation. In Annals of the
Assoc of Am. Geographers, vol 95, no. 1, pp.32-53,2005.
[6] Tominski, C., Schulze-Wollgast, P, Schumann, H. 2005. 3D
information visualization for time dependent data on maps,
Proceedings of IEEE IV2005
[7] Hochheiser, H. & Shneiderman, B. 2004. Dynamic query
tools for time series data sets: timebox widgets for interactive
exploration, Information Visualization, Vol.3, Issue 1,
Spring 2004, 1-18.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

[8] Roberts, J. C. 2004. Exploratory Visualization with Multiple
Linked Views, Exploring Geovisualization, J. Dykes,
A.M. MacEachren, M.-J. Kraak (Editors)
[9] Thomas, J & Cook, K. 2005. Illuminating the Path: The
Research and Development Agenda for Visual Analytics,
http://nvac.pnl.gov/
[10] CommonGIS. http://www.commongis.de.
[11] G. Dang, C. North, and B. Shneiderman. Dynamic queries
and brushing on choropleth map. Technical report, HumanComputer Interaction Lab & Department of Computer Science, 2003.
[12] Geovista studio. http://www.geovistastudio.psu.edu.
[13] Sweden Statistics. http://www.scb.se
[14] G. Andrienko et al, Reactions to geovisualization: an
experience from a European project, Int. Journal of
Geographical Information Science, 2006. [18] C. Ahlberg and
E. Wistrand, IVEE: An Information Visualization &
Exploration Environment. Proceedings of the IEEE
Symposium on Information Visualization '95, (1995), IEEE
Press, 66-73.
[15] Jean-Daniel Fekete, The InfoVis Toolkit, in Proceedings of
the 10th IEEE Symposium on Information Visualization
(InfoVis'04), IEEE Press, 2004, pp. 167-174.
[16] Jern, Franzén: “GeoAnalytics – Exploring spatio-temporal
and multivariate data”, Reviewed proceedings p25-31, IV
2006, London, July 2006, published by IEEE Computer
Society.
[17] http://vita.itn.liu.se/

