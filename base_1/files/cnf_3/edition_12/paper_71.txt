An Information Database for VRML Cities
A. Heinonen, S. Pulklunen, and I. Rakkolainen
Digital Media Institute, Tampere University of Technology,
P. 0.BOX 553, 33101, Tampere, Finland
E-mail: Jahei, simo, ira) @cs.tut.fi

dating and retrieving the database is easy. 2D maps and
3D graphics show clearly the location of the information
in the real world.

Abstract
A system is presented to visualize information about
city with a three-dimensional web user interface. We
present a novel way to connect a VRML world to an information database. As the data, code and models are
kept separate, updates and maintenance of the system is
easy.
The information visualization of a city becomes easier
and more intuitive in 30. The location of any service,
shop etc. is shown both in a 30 world and on a 2 0 map,
which are interconnected. Our implementation works on
standard web browsers.
In addition, we built an optional steering wheel navigation, which is an intuitive way of moving around in a
city for home Internet users. An experimental immersive
VR interface was also made.

2. Related Work
Many beautiful VRML worlds visualize existing cities

[51, [221, [71, [17]. High-end, non-VRML models have
been made of Los Angeles [13] and other cities. The
models usually have little connection to the available real
services of the cities. Some VRML models, like Glasgow
[ 9 ] , or a building in Vienna [15], can query information,
but it is embedded into VRML files, or fetched from static
HTML files. We have found no VRML cities that use
direct database queries for service information.

3. System Design
The 3D city info system is a joint project of several
universities. Our main contribution to the system is on
programming and database implementation. The implemented system is at http://www.uta.fi/hyper/projektit/tred/.

1. Introduction
Where is a certain shop? Where do I find an item?
How do I get from railway station to my hotel? These are
typical questions of inhabitants and visitors of a city.
The web pages of restaurants, shops and other services
often show location on a symbolic 2D map. For many purposes, a three-dimensional, life-like representation improves the usability of the data. Interactive 3D environments are more intuitive for humans.
A plain 3D city model does not offer much added value. Walking on virtual streets visualize the city, but 3D
models should also provide useful and up-to-date information about commercial, municipal and other services.
We implemented an interactive web city info system,
which uses a VRML (Virtual Reality Modeling Language)
model of the city of Tampere as an interface for navigation, visualization and information search. The city model
provides an inherent spatial index for the services.
We present a novel mechanism to connect a relational
database with VRML models and 2D maps. The system
allows to search and locate information about the city. Up-

3.1. Modelling
VRML [23] is the present de-facto format for describing 3D environments on the web. As the 3D city info
was meant to be public, VRML was the right choice.
Municipal CAD data from Fingis terrain database was
imported to AutoCAD. It provided only the basements of
the buildings. Some elevation data was inaccurate and had
to be corrected manually. The walls and roofs had to be
modelled manually based on stereo aerial photographs and
other images. Also other available materials, like architectural drawings, was used.
The modelled area consists most of the city center.
Some other parts of the city are in separate models. The
geometry of the city center is accurately modelled (better
than 10 cm). The VRML version of it had to be made
highly simplified to enable reasonable rendering and
download times. It contains some 5100 polygons. The size
of the geometry is 120 KB and the textures are about 5

469
0-7695-0743-3100
$10.000 2000 IEEE

MB. The models look highly realistic due to detailed texturing (see Figure 1).

on VRML and it also incorporates a streaming and compressing scheme.

3.2. The Database Connection
As the service information (if any) of 3D cities is embedded into VRML or HTML files, updates in data content require regenerating or editing of those files. This can
be avoided by putting the dynamic data to an easily updateable database.
The VRML Enterprise technology (database) working
group's [24] Recommended Practice was not relevant for
our application. The GUI in our Java applet takes care of
sending queries to database. The VRML world was used
just to display the database query results, quite similarly
like the 2D map was used for showing results in 2D.
Our main contribution is a novel mechanism to connect
a relational database with VRML models. Retrieving the
desired information automatically generates a new view.
We connected the database to a Java 2 applet that communicates through a standard, generic Java JDBC API
[ 121. It provides cross-DBMS connectivity to a wide range of SQL databases from the Java programming language. The applet communicates with the VRML world
through the EA1 interface. Figure 2 shows the system
overview.

Figure 1. The real view and
the VRML model of a building
The VRML city model downloads in moderate time
over ISDN or faster lines. It renders smoothly with modern PCs and can be further improved by defining several
level-of-details (LOD). The download and rendering
speeds could also be improved by providing a low-detailed model with coarser or no textures. Users with poor 3D
graphics capabilities or modems are provided with web
pages containing only 2D maps.
Manual modelling of a city may be a bottleneck. There
are some software [3], [8] that automate it, although the
accuracy and visual quality is not as good as manually.
VRML can't handle huge worlds smoothly over the Internet. A VRML, browser downloads all of the model,
even if it needs only parts of it. A model of a city with
even medium detail needs to be split into separate parts.
Some extensions of VRML enable progressive, on-demand downloads and smooth rendering. GuCziec et al.
[ 101 have presented a framework for streaming geometry
in VRML. Reddy et al. [I91 have presented Terravision
browser for massive terrain databases. Coors and Flick [4]
used a load-on-demand paradigm and progressive streams
for web-based city visualization.
Some other formats, e.g., MetaStream [ 141, stream the
geometry according to the available hardware and bandwidth. The Systems part of MPEG-4 [ 161 is largely based

JDBC
Web browser

As the system is meant for a wide audience, ease of use
is highly important. The user can make queries about ser-

470

vices, e.g., the locations of hotels or restaurants. The system searches them from the database and visualizes them
dynamically both in the 3D world and on the corresponding 2D map of the area. Figure 3 shows the user interface.

Standard relational database technologies are used on the
server side. All the major database softwares support
JDBC (e.g. Oracle, DB2, Sybase, Ingres 2) and the database server can easily be changed to another. The geometry files and Java codes can be kept in separate files. Updates to the data content are easy. Structural changes to
database, like adding new kind of information, are fast to
implement.

3.3. Optional Navigational Aids

Figure 3. The 3D user interface of the city info.
The database query is at top right. The results
are shown on a map (top left) and in a V R M L
world (bottop left), which are cross-referenced

We implemented several optional ways to make navigation easier for novices.
An intuitive way to move around a city is driving a car.
We built an optional steering wheel navigation for the city
(or any) VRML model (see Figure 4). The steering wheel
and pedals were connected to the world by a C program.
The VRML view on the screen was made full-screen with
a small freeware program.

To make the navigation easier, we interconnected a 2D
map and the 3D world. Moving and direction of view in
the 3D world is shown also on the 2D map and the user
can see hidher movements and orientation. Also dragging
or clicking on the 2D map changes the 3D view correspondingly. This makes it possible, e.g., to quickly "jump"
from one city district to another.
The city info database contains information such as
company names and addresses, type of service, building
names, phone numbers etc. The system connects the items
in the database to their sites and visualizes their location.
The search criteria are by name, by address, or by type.
The user can search data either by using a hierarchical list
of services or by using free text search. In the hierarchical
list, the services are classified by type: restaurants, hotels
etc. The list is generated dynamically from the contents of
the database. In the free text search, the user can input
keywords, and get results matching it.
The user can see the search results as dynamic objects,
which are created into the 3D world to show the locations
of the services (see Figure 3). They can be linked to appropriate web pages. The links are saved to the database
and can easily be changed.
The system is implemented using standard and commonly used technologies. The system is platform independent and requires only a standard Java-enabled web browser and a VRML browser. Due to differences in current
VRML browser implementations, there may be problems
with some browsers. The system works best with MSIE
5.x + Cortona 2.1 or Netscape 4 . 5 +
~ CosmoPlayer 2.1.
The system is easy to combine with commercial databases, e.g., yellow pages, or other such service catalogues.

For demonstration purposes, we connected an optional
head-mounted display (HMD) to the system, which immersed the users into the virtual city. It could be used with
or without the steering wheel navigation.
VRML browsers don't support HMDs. To view the city
with a HMD, we made a Java 3D [ll] program. Java 3D
uses a VRML loader to transform the VRML scene graph
into Java 3D scene graph. We used a Sony SVGA-resolution HMD (LDI-DlOOBm) in non-stereo mode and an inertial orientation tracker (InterTrax IS-300).

47 1

install themselves automatically. The size of Blaxxun3D
player is only 55 KB.
An X3D model of the city would provide easier use of
3D for novices. The conversion to X3D could be rather
easy, as most of the nodes used in our model are also included in the X3D Core profile.

4. Results
Retrieving and updating the database is easy. No rewrites of the VRML model is needed, when services are
changed, updated or deleted. The implemented database
system together with the VRML city model and the 2D
map provides an intuitive interface to the services.
According to a usability study, the 3D world was a primary tool to find locations in the virtual city. The 2D map
was used only for confirmation. Residents of Tampere recognized the sites well. The visual similarity with reality
helps the user in finding the places virtually and remembering them afterwards in real life. Also visitors can find
and locate information easier. A birds-eye overview of a
city helps in navigation and guidance.
The steering wheel was found to be an easy way to move around the virtual city. lt is also a cheap peripheral, so
it's usage could spread widely.
The HMD version was found to be intriguing by the
test persons. The implemented HMD system rendered
views significantly slower than a VRML browser. The
rendering speed was approximately 5 frames per second
with a TNT graphics card. We believe the reason for this
was in the present VRML loader version.

5.3. Mobile Services
Wearable computing is an emerging field of research.
Many trials have been made on wearable computing and
mobile augmented reality, e.g., [I], [ 6 ] ,[21]. The future
PC (or PDA or cellular phone) may be a small, wearable
device with fast Internet access, 3D graphics, multimedia
and position tracking capabilities.
By tracking the 'position of a mobile user, many location-based applications become feasible. Mobile users
could get location-dependent guidance and navigation aid,
inquiry the next bus and get directions to a desired place.
We have earlier combined real-time GPS position data
to VRML worlds [18]. A real-time GPS-based bus tracking system is being developed in Tampere and is planned
to be added to the system in the future.

6. Conclusions
5. Future Work

In this paper, we have described a novel mechanism to
connect a database with VRML models and 2D maps. The
implemented system enables to view services of real
places dynamically in a user-friendly way. It is easy to
connect to existing service databases, like yellow pages.
Our database implementation is not tied to only city
info applications. It could also be used to office or other
environments. The applications of visualizing the real
world with 3D models are numerous.
We see the 3D graphics to be a better way to represent
reality than with symbolic 2D maps. With the coming advances in hardware, 3D environments will eventually be a
very common way to show location-based information and
services of cities.

5.1. Database Enhancement
The 3D City Info is an ongoing project with more
content and features upcoming. More services will be added to the database. The covering area will be expanded,
and areas further away from the center will be modelled
with less detail.
The next generation of the web may be powered by
XML (extensible Markup Language). Structured XML
pages can be modified, sorted or classified. Several views
to it are possible. Pieces of information can be searched
from the pages with no new downloads. XML fits well to
automatic creation of web pages from database queries.
XML could be useful also in our system, but few browsers
support X M L yet.

Acknowledgments
The research was funded by Tekes' TreD-project and
Academy of Finland's Paula-project. Most of the modeling
was done by Geoinformation Laboratory of Tampere University of Technology and Tampere Polytechnic School of
Art and Media. The user interface and usability study was
made at the Hypermedia Laboratory of University of
Tampere by Teija Vainio and Minna Kulju.
Special thanks to Saku Korhonen for the HMD implementation, and Jani Paajarvi and Rasmus Rahunen for the
excellent modelling of Tampere Hall. Thanks to Tuukka
Kallio, Teemu Rossi, and Tomi Kallio for the steering

5.2. X3D Implementation
VRML lacks many features, and requires a lot from the
hardware and network connection. The coming version of
VRh4L, X3D, is being specified by the Web3D Consortium. X3D is based on XML and uses profiles. The X3D
Core profile contains a reduced set of VRML nodes and
enables light implementations of X3D players.
Some existing prototype X3D players are Blaxxun3D
[2] and Shout3D [20]. They only require a web browser
supporting Java. They are not plug-ins and download and

472

VRML. IEEE Computer Graphics and Applications, 19(2),
M ~ ~ h / A p r1999,
i l pp. 30-38.

wheel software. W e also wish to thank professor Pauli
Kuosmanen for his helpful comments.

[20] ShouBD, http://www.shout3d.com/.

References

[21] A. Smailagic and R. Martin. Metronaut: A Wearable
Computer with Sensing and Global Communication
Capabilities. Proceedings of the Intemational Symposium
on Wearable Computing (October 1997).

M. Billinghurst, S. Weghorst, and T. Fumess. Wearable
Computing for Three Dimensional CDCW. Proceedings of
the Intemational Symposium on Wearable Computing, October 1997.

[22] The Virtual Cities Directory,
http://www.intoronto.com/citieslhome.
html.

Blaxxun3D, http://www.blaxxun.coml.

[23] The Virtual Reality Modeling Language Specification.
http://www.vrml.org/Specifications/VRML97/.

Canoma software, Metacreations Inc.
http://www.metacreations.com/.

[24] VRML Enterprise technology working group.
http://www. vrml.org/WorkingGroups/dbwork/.

V. Coors, and S. Flick, Integrating Levels of Detail in a
Web-based 3D-CIS. Proceedings of the ACM-CIS98
Workshop, November 6-7, 1998, Washington D.C., USA,
pp. 40-45.
Digital Cities around the world,
http://www.digitalcity.gr.jp/rel-link-e.html.
S. Feiner, B. MacIntyre, and T. Hollerer. A Touring Machine: Prototyping 3D Mobile Augmented Reality Systems
for Exploring the Urban Environment. Proceedings of the
lntemational Symposium on Wearable Computing, October 1997.
Focus on web3D. VRML and other web3d real places.
http://web3d.about.com/intemet/web3d/msub5places.
htm.
Geometra software. http://www.geometra-3d.com/.
The Glasgow VRML model.
http://iris.abacus.strath.ac.uWglasgow/.
[ 101 A. Gueziec, G. Taubin, B. Hom, and F. Lazarus. A Frame-

work for Streaming Geometry in VRML. IEEE Computer
Graphics and Applications, 19 (2), MarcNApril 1999, pp.
68 - 78.
[113 Java 3D API, http://java.sun.comlproducts/java-

medial3 D/index. html .
[ 121 JDBC API, http://www.javasoft.com/products/jdbc/.

[13] W. Jepson, R. Muntz, and S. Friedman, A Real-Time
Visualization System for Managing Emergency Response
in Large Scale Urban Environments.

http://www.aud.ucla.edu/-bilYwhitepr.html.
[ 141 MetaStream software. http://www.metastream.com/.

[151 The Mischek Tower.

http://www.mischek.at/2d/englisNindex%2De.htm.
[ 161 MPEG-4 standard, http://drogo.cselt.stet.it/mpeg/

standards/mpeg-4/mpeg-4. htm.
[ 171 Planet 9 Studios, http://www.planet9.com/.

[18] I. Rakkolainen, S.Pulkkinen, and A. Heinonen, Visualizing Realtime GPS Data with VRML Worlds. Proceedings
ofthe ACM-CIS98 workshop, pp. 52-56 (November 1998).
[19] M. Reddy, Y. Leclerc, L. Iverson, and N. Bletter, TerraVision 11: Visualizing Massive Terrain Databases in

473

