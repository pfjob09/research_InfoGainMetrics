Mapping Information onto 3D Virtual Worlds
C. Russo Dos Santos, P. Gros, P. Abel,
D. Loisel, N. Trichaud
Eurecom Institute, B.P. 193
Sophia Antipolis, France
{ russo,gros,abel,loisel,trichaud}@eurecom.fr

J. P. Pans
CNET France Telecom
Sophia Antipolis
France
jeanpierre.paris @cnet.francetelecom.fr

Abstract
This paper presents a strategy for automatically mapping information onto visual parameters in the field of
three-dimensional ( 3 0 ) information visualization. The
work presented here is done in the context of researching
how 30 information visualization may help when trying to
visualize large volumes of dynamic data. The application
jield within which this work has been conducted is using 3 0
information visualization for network monitoring and management. Nonetheless, the framework and mapping strategy
is application domain independent.
In this paper we focus on the process of automatically
mapping data values onto graphical parameters, in order
to construct 3 0 virtual worlds that convey network data for
network monitoring and management. We present the criteria that are used to find the best mapping and the strategy taken to implement those criteria. We describe our use
of visual metaphors and the graphical components that we
utilize and we give some examples of different mappings.

Figure 1. Example of the city metaphor for
NFS data visualization (CyberNet project).

we have identified the following needs: an effective data
characterization, a visual metaphor characterization and a
visual parameters taxonomy. Along with this we also have
to characterize the network management services.
The organization of this document is as follows: firstly,
in section 2 we do a brief presentation of the CyberNet
project, that serves as test-bed for the research presented
herewith. In Section 3 we discuss the process of mapping,
which we have divided into two major steps. In Section 4
we present the definition of a service. In the next section,
Section 5, we discuss the data Characterization. Section 6 is
dedicated to the metaphor characterization and Section 7 to
the graphical components characterization. In Section 8 we
give some examples of different mappings. The conclusions
are in the last section, Section 9.

1. Introduction
The core of information visualization is finding a way of
visually representing information in a manner that is most
effective and pleasing for the user comprehension. This involves mapping data values onto visual parameters. Our
goal is to automatically provide the best mapping, given a
certain data set and a number of different visual metaphors.
Metaphors provide a way of conveying information visually in a representation that the user is familiar with or can
more easily understand. Metaphors can be based in the real
word or based on abstract concepts. Figure 1 shows an example of the former, depicting the information as a virtual
city; Figure 2 is an example of the latter, using the cone-tree
metaphor to visualize information.
In order to be able to do an effective automatic mapping
of information onto visual metaphors and visual parameters

2. The CyberNet Project
The aim of the CyberNet project [ 13 is to automatically
build three-dimensional virtual worlds that are used to visualize network data and analyze network services. As

379
0-7695-0743-3/00 $10.00 0 2000 IEEE

the network behavior is constantly changing, the 3D virtual world will continuously evolve in order to represent the
modifications that take place. The major problems we had
to solve, regarding information management, were related
to the distributed nature of the data and to the high level of
dynamics that typically characterizes this application field.
The network management data that has to be monitored
is spread all over the network. In traditional systems, this
information is usually supplied by SNMP agents that run on
every network device. The network management tools are
then required to ‘‘pull’’ the data by using SNMP requests to
query the agents. The network status information is usually
presented to the user using tables and/or graphs. When there
is a change in the network status, the interface signals it to
the user, usually using some kind of dialog box. The user
can then make a new request and, acting upon it, the system
updates the user interface content.
Since we want to present all the information in a 3D
virtual world, and we want that world to be updated without requiring user intervention, the CyberNet project uses a
different approach. We use a distributed object framework
composed of three distinct parts:
e

The collectitig layer is used to gather the raw network
data from the monitored devices.

e

The structuririg layer is the kernel of the system. It
structures the raw information according to the service
being monitored.

Figure 2. Example of the cone-tree metaphor
for network topology visualization(CyberNet
project).

3. The Mapping Process
We can divide the process of mapping data values onto
visual parameters in two major steps: firstly, the mapping
of a service on a metaphor and then, the mapping of the
data onto the visual parameters available for the chosen
metaphor. We will now describe both steps in some detail.

3.1. Mapping a Service on a Metaphor

The presentation layer maps the structured information onto the graphical components according to the
metaphor chosen for mapping. It is also responsible
for presenting the 3D world and provides the user interaction and navigation.

The first step of the mapping process in our system is the
mapping of a service on a metaphor. For this we consider
two criteria by which we evaluate the mapping process: expressiveness and effectiveness. These criteria were already
used by [2] on work done regarding mapping data values
onto two-dimensional visual parameters.
Expressiveness refers to the capability of the metaphor of
visually representing all the information we desire to visualize. This accounts for a first level of mapping. For instance,
if the number of visual parameters available in the metaphor
for displaying information is fewer than the number of data
values we wish to visualize, the metaphor will not be able
to meet the expressiveness criterion. This is due to the fact
that we cannot map more than one data value onto one visual parameter.
The relationship between data values and visual parameters has to be a univocal relationship; otherwise, if more
than one data value is mapped onto the same visual parameter, then it will be impossible to distinguish one value’s influence from the other. On the other hand, there can always
be visual parameters that are not used to map information,
as long as there is no need for them to be utilized.

In this paper we will only discuss the responsibilities of
the presentation layer (for further information on the collecting and structuring layer, see [ 11); more specifically,
the process of mapping the network data onto the visual
elements. In CyberNet information is visualized with the
help of metaphors, mostly real world based. Layout managers and 3D glyphs are the graphical elements (see Section 7) of the presentation layer and are used to construct
the metaphoric virtual worlds.
The presentation layer has also another type of components, non graphical, named adaptors that are responsible
for doing the information mapping between the structured
information, that is outputted by the structuring layer, and
the visual parameters of the world. In the next section we
will describe the mapping rules. The adaptors task is to implement these rules.

380

The second criterion, effectiveness relates to the efficacy
of the metaphor as a means of representing the information. This criterion accounts for the second level of the
mapping. Along the effectiveness dimension we can further
distinguish several criteria: effectiveness regarding the information passing as visually perceived, regarding aesthetic
concerns, regarding optimization (e.g., number of polygons
needed to render the world).

3.2. Mapping the Data onto Visual Parameters
This is the second step of the mapping process. As in the
first step, first we have to consider the criterion of expressiveness, i.e. there has to be a sufficient number of visual
parameters in order that we can map all the data desired.
Not only the number of visual parameters has to be sufficient to map all the data, but also, they must be able to map
the right data (i.e., there are visual parameters that are not
able to map a specific category of data; for instance, shape
is not useful for mapping quantitative data).
The second criterion is, as in the case above, the one of
effectiveness. This criterion implies the categorization of
the visual parameters according to its capabilities of encoding the different types of information. Moreover, this also
implies categorizing the information according to its importance so that more important information can be encoded
more efficiently when options must be taken.
This categorization of the importance of the information has two expressions: one is a assigned importance of
the information in the context of a service; the other is a
preference of the user. In other words, the context of the
data within a given service defines the importance of that
data and, consequently, determines the information encoding priorities. Nonetheless, the user may choose to override
this and define his own importance of the data, according to
his priorities when visualizing a service.

The description of the service can be made as a composition (enumeration) of entities and relations. Thus, a
service expresses fundamentally a combination of relationships amongst entities that, together with filtering parameters, as a whole constitute the description of a service. The
actual state of the service is characterized by the information retrieved from the collecting layer.
The description of the service also contains the importance weight that each of the specific data has for that service. This weighting of the information, provides the means
to achieve the most effective visual mapping: the data that
is more significant is encoded more effectively. The importance of a given data depends on the service (e.g. the percentage of CPU usage maybe more important for a workstation supervision service that for the NFS service).
There are predefined services described as an enumeration of relations, entities and filtering parameters. The user
is then free to change the parameters of a determined service. This does not correspond to the creation of new services but only to add some different filtering values, or to
change the existing ones.

5. Data Characterization
Data characterization is usually the first step to understand a phenomenon or system. Developing a taxonomy
helps making sense of information. Some research has
already been done on data characterization for automatic
presentations of information. Although almost all the previous work done in this area, only considered static twodimensional visualizations, and we are interested in 3D visualization for dynamic data, most of the data characterization work is still interesting for our purposes. In the next
sections we are going to present the previous work done in
this area and then the CyberNet system’s preliminary data
characterization.

4. Services

5.1. Previous Work

In our terminology a service defines the information that
we want to visualize. In other words, the information that is
to be visualized is the information that characterizes a given
service (e.g., NFS service). The service data retrieved by
the collecting layer is then structured in a service graph, in
the structuring layer.
A service can be represented by a direct acyclic graph
that comprises entities and relations (see example for the
NFS service in Figure 3, on the left). Entities represent
the smallest units of raw data and relations express relationships, either of groupness or dependency, between entities.
In other words, we may say that entities are the building
blocks and relations provide the glue to construct the service graph.

The SAGE system work on data characterization for automatic presentations [3] extends and generalizes the work
previously done by [2]. Firstly, four criteria are identified
in order to evaluate the relevance of data characteristics:
characteristics necessary for distinguishing graphical techniques information expressiveness; characteristics to help
ordering graphical techniques effectiveness at conveying information; characteristics useful for determining how information could be integrated within a display; and characteristics that users could easily apply.
Based on these criteria [3] defines several dimensions
along which data can be characterized: data types, properties of relational-structure, expressing relations among relations, distinguishing unary, binary and N-ary relations, and

381

THE NFS SERVICE MODEL

THE CITY METAPHOR HIERARCHY

GroTnd I

/Bl'ock\

(simplified)

SeveEil subnets seen from far away

name
'P &
nfs stat

@@-

I-.-

NFS server
mount point

name

-

name
ip &

nfs stat

references

Layout
Managers

Chess = arrange children in a square row-column way
Stack = arrange children one on top of the other
Void = do not arrange children (transparent layout manager)
Fit = Resize the children to match the parent size

0

nodes

Figure 3. Example of a mapping between the NFS service and the city metaphor (CyberNet project).

user information seeking goals. In data types, sets ordering
(possible values being quantitative, ordinal, and nominal),
coordinates versus amounts, and domain of membership,
are identified.
The Vista system [4] follows the sequences that are generally present in a visualization system, that converts a data
set into a displayable image: data manipulation, visualization mapping, and rendering. For the visualization mapping
- data variables mapping onto visual parameters - it is necessary to characterize data and visual parameters/techniques.
Knowing the data characteristics relevant to visualization
mapping is the first important step in designing an effective
visualization technique. Usually data can be divided into
two major categories: qualitative and quantitative. Qualita-

tive data further subdivides into nominal and ordinal. Quantitative data is more common on scientific domains than
qualitative data. Quantitative data can be scalar, vector, or
tensor.
The IMPROVISE system [ 5 ] advances further in characterizing data for automatic presentations. It uses six dimensions to describe data characteristics: data type, which
relates to the atomicity of the data; data domain, that categorizes information semantically; data attributes, that distinguishes data properties; data relations, which specifies
relations between data; data role, for characterizing data
based on user information seeking goals; and data sense,
that differentiates data based on user visual interpretation
preferences.

382

The system makes use of an object-oriented approach:
each piece of information is an object. Each object belongs
to a data domain and has a data type, properties (data attributes) and connections to other objects (data relations).

mapping such as is the quantity a percentage, a margin, a
limit (lower or higher) and so on.
The time dimension does not appear in any of the previous systems cited before since those systems only deal with
static visualizations of information. For our system it is of
major importance to characterize information according to
its time-dependent behavior. We want to visualize information that is highly dependent on time and we want the information being displayed to be dynamically updated in realtime. The information is thus classified not only whether
it is time dependent or not (i.e., static or dynamic) but also
according to more specific behavior (e.g., continuous or discrete, the frequency of change).
The semantic dimension exists to provide for a semantic context. For each data characteristics there is a field that
specifies in which services (or services) it is to be used (e.g.,
size of disk is used by the workstation monitoring service).
This introduces a semantic context in the data characterization that allows for the automatic construction of the network services.
It should be stated that one piece of data (entity) may
belong to more than one service. For instance, size of disk
may also be a relevant data for the NFS service, eventually
with a different degree of importance. The relative importance of the data for each of the network services is specified
in the service description, as already described in Section 4.

5.2. CyberNet System
We think that the best approach is to keep the data characterization as general as possible, so that it can be easily
applied to other application domains not necessarily related
to network monitoring and management. An excessively
complex and detailed data characterization will most probably be application domain dependent. This concern is relevant since the CyberNet system’s framework was designed
so that it can be used in other application domains for 3D information visualization of dynamic data, such as web management or stock exchange visualization, for instance. The
only part of the CyberNet system that is application domain
dependent are the collecting agents in the collecting layer
and, evidently, the services.
For the moment, we classify information along three
principal dimensions: type, time and semantics. The data
type dimension essentially relates to the basic data types
that are cited in [ 2 ] and that appear in more or less all the
systems that were developed afterwards. Basically, information can be divided into two major types: quantitative
and qualitative; the latter can be further divided into nominal and ordinal information.

6. Metaphor Characterization

Quantitative information: is defined by a scalar value
(e.g., percentage of CPU used by a process).

In order to comply with the criteria of expressiveness
and effectiveness introduced in section three we characterize metaphors in terms of the information that they are able
to display and provide interaction for.
Visual metaphors in our system are constituted by two
graphical elements: layout managers and 3D glyphs. Layout managers are responsible for arranging their children,
either other layout managers or 3D glyphs, in space (e.g.,
an orbital layout manager places all of its children revolving around a center). 3D glyphs are the actual 3D visual
components and the number of visual parameters that they
provide for information mapping is directly related to their
complexity.
As a visual metaphor is basically a scene description it
can be represented by an acyclic scene graph (see example
in Figure 3). In our terminology the layout managers are
the first and middle nodes of a graph and the 3D glyphs can
only be leaves nodes (i. e., a glyph never has children). The
fact that the metaphor is described by an acyclic graph constituted by layout managers and entities is useful. In fact,
since the service is also described by an acyclic graph, the
mapping of the service onto the metaphor becomes easier.
Since a visual metaphor is composed by layout managers
and 3D glyphs, in order to characterize a metaphor we need

Qualitative information:

- Nominal

information: is an unordered set of
nouns and does not possess units (e.g., names of
the machines).

- Ordinal

information: is an ordered set but the
ordering gives no information about the difference in magnitude between any different values
belonging to the set (e.g., the disk size may be
defined as small, medium or large, but it gives
no insight regarding the actual values for small,
medium, or large).

These two data types are only a first division of the data
types. For the moment, they seem sufficient for a general
classification and from an analysis of the services created
so far, every data seems to fall in these basic categories.
In fact, most of the data encountered in network management systems is quantitative data. But for an efficacious
mapping, the data characterization will eventually have to
be finer tuned. For instance, for quantitative data we can
devise data characteristics that are important for the visual

383

Figure 4. Example of the city metaphor for
NFS data visualization (CyberNet project).

Figure 5. Example of the city metaphor for
NFS data visualization (CyberNet project).

to classify also those components. But the components classitication is not enough; there are some constraints either
i n the capacity of displaying the information or relating to
the efficacy of that presentation that do not arise from the
metaphors components, but from the metaphor structure.
In the next subsection we are going to present the constraints to which a graphical metaphor must obey in order tu consistently display visual information. The layout
managers and 3D glyphs characterization is presented afterwards in a separate section. dedicated :o the graphical
components.

ping cannot take place, as there would be some diffci-rnt
service levels that would have to be mapped onto the same
hierarchical level o f the metaphor. thus losing the s e n ice
hierarchy identification.
There is also another type uf constraints that may restrict
the metaphor ability, taken as a whole, for visually presenting information. We already have referred that [he added
value from the use of real world based metaphor is the user's
inherent capacity of relating to the way the information is
presented. This is due to the fact that the user can mnke LIW
of its prior knowledge of how the elements o f the metaphor
are spatially arranged in the real world and thus use that
knowledge to understand the relation betwwn the different
elements.
The quality of preserving the same spatial relations and
underlying notions between the real world and its virtual
counterpart is called consistency. Thus. ;1 virtual world must
be created and remain consistent, even if the data that is being displayed is constantly changing. T1ii.s obviously poses
restrictions on the information mapping. For instance, in
a city, buildings are usually tall and thin. Even when they
are wider than taller, this ratio is never a big one. If in a
mapping choices are made so that a data value with a wide
range is mapped onto the width of a building, for instance,
and a lower range data value is mapped to its height, we risk
losing the resemblance of the visual element with an actual
building (since it will look more like a wide platform), thus
risking the metaphor usefulness.

6.1. Metaphor Constraints
There ale some constraints imposed i n the virtual world
that derive from the metaphor itself and not from its components abilities for displaying information. Nonetheless,
these constraints have an impact o n the visual presentation
and thus condition the ability of the metaphor to visually
display the information.
The added value from using real world based metaphors
for visualizing information comes from the fact that the user
can relate to the way the information is being presented,
since it uses the same underlying rules that are present in
the real world. For instance, in the city metaphor (where information is mapped onto districts, blocks, streets, buildings
and so on) there is a natural hierarchy between the different
elements (e.g., buildings belong to blocks, blocks are part
of districts and districts belong to a city; see Figure 3).
On the other hand, a service is also defined, via the service graph, in a hierarchical manner, with several levels of
hierarchy. In the first step of mapping, mapping a service on
a metaphor, the number of hierarchical levels present in the
service must be, at least, equal (or fewer) than the number
of hierarchical levels of the metaphor. Otherwise, the map-

7. Graphical Components
We present the graphical components characterization
regarding information mapping in the next two subsections.
This classification constitutes the last step needed for a fully
description of the mapping process.

3 84

Figure 6. Example of the solar system
metaphor for NFS data visualization (CyberNet project).

Figure 7. Example of the building metaphor
for geographical information (CyberNet
project).

7.1. Visual Parameters Characterization
The classification of layout managers we have devised
is essentially based on their skills for placing elements in
space. We have also found that there is a need for layout
managers that have different skills that those of only spatially placing children. In particular, we have felt the need
for the existence of layout managers that are able to scale
visual elements, thus doing more than just placing elements
since they interfere in their dimensions, in order that the
metaphor’s consistency is not lost due to the dynamic character of the information being presented. Examples of layout managers skills are: fit[one dimension], fit[two dimensions], stack, orbit, row, grid, among others. For example,
in the city metaphor the chess layout manager is used to
place the buildings in space and the stack layout manager is
used to place the floors in the buildings (see Figure 3).

The objective of a visual parameters characterization is
to classify 3D visual parameters (e.g., size, color, transparency) according to their ability for displaying data values. Some previous work has already been done for 2D
visual parameters characterization, as in [2]. This work,
which was based in usability studies, can be used in our system since 2D visual parameters are a subset of the 3D set,
and we feel that the perception of the user regarding information mapped in a 3D world will not substantially change.
In the case of visual parameters that exist only in threedimensional virtual worlds, we believe that for most of them
their ability to display information can, with a certain degree of confidence, be inferred by the ability of the 2D parameters that are related to them. For instance, color is not
usually very useful for displaying quantitative data [2]; we
feel that we can safely infer from this that transparency, as
a related parameter to color, is should also be used for mapping quantitative data in 3D. Nonetheless, we think that usability studies with users are desirable to validate our classification. We are still working towards achieving a fully
detailed 3D visual parameters characterization.

8. Mapping Examples
We have already developed several examples of different metaphor mappings and different visual parameters
mappings within the same metaphor. The choice of the
metaphor is intimately related to the task the user wants to
accomplish.
For network topology analysis, the network topology is
visualized with the help of a cone-tree metaphor (see Figure 2) where the use can easily grasp the entire network
topology and see what elements are connected to where.
In this visualization, switches are displayed as the red
boxes, hubs as cones, with a blue box on top and the workstations that are connected to that hub presented as spheres
at the base of the cone. Links between the switches and hubs
are represented by cylinders, whose diameter and shade cor-

7.2. Layout Managers Classification
Three-dimensional layout managers are the components
that arrange graphical components, either 3D glyphs or
other layout managers, in the 3D space; in other words, they
intervene by placing their children in the virtual world according to the metaphor rules. For instance, a solar system
metaphor uses an orbital layout manager for placing elements in an orbit around a specified center, in the way the
satellites orbit around the planets.

385

walls transparent to have a global view from the outside,
choose to display only the offices belonging to a certain
Dept. and even redesigning the whole building by choosing to view one Dept. per floor, among other possibilities.
Figure 8 represents another visualization using yet another visual metaphor based on a solar system. This tool
is used for workstation supervision. This tool allows visualizing a workstation with all the users that are currently
logged on it. Workstations are represented as planets (the
cubes in the center) while the users are represented as satellites (the spheres orbiting around the center). Further mappings are the sphere’s color that encodes the Unix group of
the user, the size encodes the memory and the color saturation encodes the CPU time. Between the workstation and
the users, the corresponding user processes are displayed as
cylinders. The cylinder’s visual parameters use the same
encoding (i.e., size for memory and color for CPU).

Figure 8. Example of the solar system
metaphor for workstation monitoring (CyberNet project).

9. Conclusions

respond, respectively, to the bit-rate loss of the link and to
the packets loss for that link. The shade of the cone corresponds to packet loss for the respective hub.
The city metaphor (see Figure 1 , Figure 4, and Figure 5 )
is used to visualize the NFS service. Although all the visualizations presented use the same visual metaphor, a virtual
city, each one uses different data encoding for the visual
parameters.
Since this visualizations encode a large number of data,
we are not going to detail here all the individual data mappings. However, we should refer that the mappings were
done in a way that Figure 1 is mostly used to get a general overview of the system, Figure 4 is more useful to view
the size of the machines disks and which disks are partitions and Figure 5 is more valuable for an overview of the
status of the physical disks and to know how many users
are mounting a disk and how many file-handles they have
opened. Figure 6 shows yet another visualization for the
NFS data but with a different metaphor: a solar system
metaphor. The user is able to switch between the different visualizations by using the icons that are visible at the
bottom of the figures.
Figure 7 shows an example view of the geographical tool
that is used to visualize information about the Eurecom Institute building. This tool allows the user to get information
on real world offices’ location, staff, physical place of network static elements and so on. In this mapping, the color
of the elements encodes the Dept. to which the elements
belong. Other mappings are straightforward as they follow
the real world locations of the objects.
This visualization uses a real world based metaphor, a
virtual building, since it is very easy for the user to relate to
the actual building. Nonetheless, the virtual building does
not reproduce faithfully the reality. The user can interact
with the virtual building for different purposes: make the

We have presented a strategy for automatic information
mapping onto 3D virtual worlds. For the 3D visualizations
we use the concept of visual metaphors, either real world
based or abstract. We have described the mapping process,
with the corresponding mapping criteria. The description of
the services that are to be visualized was also presented.
For the mapping process to be successful we found that
the characterization of the data, the metaphors and the
graphical components was necessary. All these characterizations were described with some detail. Finally, we referred some implementation details and we have presented
numerous examples of different mappings.

References
[ l ] P. Abel, P. Gros, C. R. D. Santos, D. Loisel, and J.-P. Paris.
Automatic construction of dynamic 3d metaphoric worlds:
An application to network management. In J. R. Robert Erbacher, Philip Chen and C. Wittenbink, editors, Visual Data
Exploration and Analysis VII, volume 3960, pages 3 12-323,
Jan. 2000.
[2] J. Mackinlay. Automating the design of graphical presentations of relational information. ACM Transactions on Graphics, 5(2):110-141, Apr. 1986.
S. E Roth and J. Mattis. Data characterization for intelligent
graphics presentation. In Proceedings of ACM CHI’90 Conference on Human Factors in Computing Systems, End User
Modifiable Environment, pages 193-200, 1990.
H. Senay and E. Ignatius. A knowledge-based system for visualization design. IEEE Computer Graphics and Applications, 14(6):36-47, Nov. 1994.
[SI M. X. Zhou and S . K. Feiner. Data characterization for automatically visualizing heterogeneous information. In Proceedings IEEE Symposium on Information Visualization, pages
13-20. IEEE, 1996.

386

