Parametric Modelling: Concept and Implementation
Dr. Mark W. McK. Bannatyne
Purdue University, USA
E-mail: mwbannatyne@tech.purdue.edu

Dr. Alexander N. Inozemtsev
Dr. Dmitry I. Troitsky
Tula State University, Russia
E-mail: troitsky@uic.tula.ru
Abstract

computers offer designers.. .Computers make it
possible to build “software” prototypes.
These are models that exist only within the
memory of the computer. These models can be
subjected to computer-based simulations of the
prototype tests, and the results can be used to
build a real prototype.. .The major benefits of
verifying the design within the computer are
speed, cost, and flexibility. It is usually much
faster to build a model within the computer than
in the machine shop., and the costs generally
much lower. Moreover, computer-based
simulations can often be better representations
of real world conditions than those to which
physical prototypes are subject.” [I]

The implementation of parametric modelling in
industrial and design enterprises has resulted in
the ability of computer graphics users to reduce
redundant labour practices by the creation of
interactive databases. Designers and production
staff now have the luxury of being able to edit these
databases rather than always having to redesign
models required to meet current needs or updated
specifications. The regeneration of parametric
models now allows reduced time in “art to part”
production as well as providing a foundational
database upon which future product development
and revisions may rest.
However, the large learning curves of most
parametric modeling software packages more often
than not makes their introduction into
manufacturing enterprises a slow and arduous
experience. There are solutions to this ramp-up
time that can ullow manufacturers the ability to
educate their computer users in the use of
parametric modeling packages and at the same
time respond to the evolving needs of their
enterprises.

Let us take a moment, and have a closer look at the
work of the average industrial designer. The data
obtained by the authors from a number of major
industrial companies in Russia have indicated that
between 6 0 . ..8O% of the designer’s work time is
spent on modifying existing designs. Moreover, if
we simply consider the design of machine tool
attachments, the total number of new projects
begins to approach zero since the variety of designs
is limited by the manufacturing equipment
available.
Modifying the same item over and over again is
a tiresome and non-creative activity. In fact, the
majority of modifications under consideration
primarily change only the dimensions of the part
while preserving its overall geometry. As Heam
and Baker reminds us that the great advantage in
using parametric CAD systems does rest solely in
the development of mathematically correct models,
but also in the ability to quickly edit or redefine
models. As they wrote, “The adjustable parameters
control such object characteristics as degrees of
freedom, motion limitations, and allowable shape
changes” [2].
We would be foolish to submit that there is no
room in the designer’s world for anything other
than a parametric modeling. Truly, some topend
solid modeling CAD packages are too powerful
and too expensive for performing modifications in
simple models that would result in the metaphor of

1. Introduction
Modem computer-aided design (CAD) systems
clearly demonstrate several prevailing trends in
their development and implementation. The fields
which show the most advancement to date seems to
be those companies which rely heavily on both
solid and surface modelling. Indeed, many of the
modeling packages offer on “off-the-shelf” tool so
powerful as to let the designer create a new part or
product from scratch when only a few years ago
such an effort had to employ the services of a
programmer.
Having the ability to create 3-dimensional
models that are data rich supercedes any method
we had had in the history of industrial design for
accuracy, reduced development time, and part
analysis. As Joel Orr noted, modelling:
“...is important because it is the key to
obtaining the productivitypromises that

504
0-7695-0743-3100
$10.00 0 2000 IEEE

“using a cannon to kill a fly”. Such design
variations most often fall within a relatively narrow
range of revision and performing complicated
analysis (FEM, for example) for each new version
is not ordinarily required. In many such instances
all the designer requires is a good working 2D
systems that has the capability of performing fast
design modifications.
A closer look at Fig. 1 shows the role where
parametric CAD systems fit mto the whole scheme
of design and manufacture. While a parametric
modeler could be used for the initial design of a
totally new part, it is conceded that many solid
modeling packages can still meet the needs of some
applications, especially when software costs are of
paramount concem to a company.

base points (“endpoints” in AutoCAD’s
terminology).
The set of base points and the relations between
them fully describe the parametric model of a part
projection. The best way to represent this is by
using graphs, the vertices of the graph being base
points and the edges of the graph being the
representationsof the relationshipbetween points.

Sketch

m
Graph

Flg. 2- Graph Representation of a 2D Projection
Each relationship contains the information
about the properties of the entity defined by two
vertices: whether it is a line or a circle, its width,
color etc. The base point, or each discreet point,
can be used to determine the position of every other
point. To better illustrate this point, let us assume
that one base point is predefined. Figure 2 shows a
sketch of a part and its graph. Note that since each
base point must be related to a certain reference
point there is an extra edge on the graph. Such
relations do not represent any entities. That is why
it is convenient to consider two classes of relations:
entity relations describing entity and point’s
position, and reference relations describing only
positions. Now we can give the following
definition:

of de

Flg. 1- Appllcatlon of Parametric Modellng

2. Definition of Parametrically Similar
Parts

Two parts can be represented by the same
parametric model ifand only iftheir corresponding
projections can be represented by the same graphs.

Let us begin by asking the question: “When are
two parts similar enough that they can be
parametrically transformed one into another?” The
obvious answer is: Two parts must have equal
topology. But, this is not true in the real world of
real machine parts. Consider one part being a prism
and another one being a sphere. They are
topologically identical although the manufacturing
engineer would be greatly surprised observing the
transformationof a ball bearing’s outer surface into
cubes! To give a more accurate definitionwe must
look closer at the part’s projections on the drawing
(here we are talking about 2D projections for
simplicity; 3D wire-frame models have the same
features). Each projection is a combination of
straight lines and arcs jointed at what we will call

3. Visualisation Functions
The basic feature of a parametric CAD system
is its visualisation of the part’s geometry with the
given set of parameters. To do so it seems
expedient to introduce the conception of
visualisation functions. These functions can be
generally described by the following equation:

R=v(p,B)
p , is an array of parameters;
B, is the coordinates of a predefined base point;
R, is an array of base points’ coordinates.

505

(That is, the function takes a set of parameters p as
its argument and calculates the coordinates of all
the other base points R using B as a reference
point.) A real visualisation function contains a set
of equations for calculating the coordinates. The
equations represent the relations in the graph
model. Let us consider a simple example. Suppose
the part is a rectangular flat piece with the base
points A , B, C,and D.The thickness is constant so
there are only two parameters: length (L) and width
(W). We assume that the position of left lower
comer of the part is predefined as (Ax,Ay).Then the
visualisation function would contain the following
equations:

First of all, the designer has to feed the set of
parameters into the system. The actual values of the
parameters are either known in advance (for
example, the part belongs to an already designed
assembly), or the designer enters arbitrary values
that will be further modified. A set of parameters
can also be stored in the system and used to begin
the corresponding geometry. The initial reference
point can dso be generated automatically because
its position has nothing to do with the part’s
geometry. The designer can also use X. Y , and Z
construction data around which the part will be
made.
The system’s visualisation function calculates
the positions of the base points after which the
geometry can be visualized using any available
graphics environment. The parameterization itself
begins with design evaluation. The designer makes
a decision whether some parameters need to be
changed or not. If yes, the process is repeated until
the desired geometry is obtained. After that the
system simply saves the image, or generates a hard
copy. Such a way of designing yields a lot of
advantages, such as:

Bx=Ax

By=Ay+W
Cx=Ax+L
Cy=By
D,=Cx
Dy=Ay

4. General Structure of a parametric CAD
System
As soon as a visualisation function has been
developed we may consider the overall structure
and algorithmic design of a parametric CAD
system as shown in Figure 3.

1. Significant productivity increase (a
parametric system developed by the
authors has decreased the design time
from 16 hours to 25 minutes)
2. Possibility to find an optimal solution
trying many different variants;
3. Error-free final documentation.

5. Design Verification
The biggest problem with parametric modeling
is how to guarantee the integrity of the model. We
must remember that not all solid modelers are
parametric in their design. As Toogood reminds us,
“With solid modeling, you cannot create a part that
could not physically exists. This is quite easy to do
with just 2D, wireframe, or even surface modeling”
[3]. The same cannot be said for parametric
modelers. Packages like ProEngineer will simply
replicate the >dimensional geometry requested by
the designer. Therefore, model integrity becomes
an issue that must be considered from the very
moment the designer begins his or her work.
Some sets of parameters would produce
incorrect or even impossible designs. One approach
to restricting the variations of entered parameters is
to develop a complex system of “IF THEN’ tests.
Such a development strategy works perfectly with
simple objects, however, such an approach may
often become impossible when more complicated
geometry development is attempted within such a
system.

Fnal vsnlon d the

Flg. 3- Structure of a Parametric CAD System

506

Changing a parameter ,leads to a new geometric
base of all the parts involved. It is obviously easier
to implement the TopDown method, but most
designers prefer to have a parametric model of an
entire assembly. Complex Bottom-Up models can
certainly be developed:. (The authors have made a
system for punch design where the parametric
assembly includes over 30 parts.)
The tremendous advantage of having parametric
assemblies that follow the TopDown approach is
not simply the ease by which multiple parts may be
updated, but also the messages that a parametric
package will generate and send to the screen of the
designer’s computer. Should there be a discrepancy
of mating parts that falls outside of established
tolerances, the package will not allow further work
to continue until the error is corrected. Again, the
time and monetary savings can be very important.

Flg.4- Control Dlmenrlons
A different approach for such complicated
designs might then be proposed. We will call such
distances control dimensions. A simple example of
using control dimensions in a structured program is
shown in Figure 4. The distances between certain
base points can be used as indicators showing
whether the design is still correct or not. Measuring
distances after visualisation is quite easy because it
is performed by the graphics environment. A
proper set of control dimensions requires only
simple positive-negative tests. As a control
dimension becomes negative the system informs
the user that the current design is wrong.
To prevent the hole from moving too close to
the edges, four control dimensions are used. The
system then evaluates the following Boolean
expression:

7. Automatic Generation of Visualisation
Functions
The process of creating visualisation functions
can become quite a complicated programming
challenge indeed. The programmer has to work out
all the geometric dependencies between the base
points. Of course, the function is developed only
once and then it works for years. Here then, it
seems necessary to propose some ways of
automatic generation of visualisation functions.
One approach used by the authors has proved to
be extremely useful. The idea is founded on the
principle that the designer interacts with the
computer through a special user interface. The
interface prompts the user to place a base point on
the drawing and then to specify its position with
respect to any predefined reference point. The
position is specified by choosing the coordinate
system (relative Cartesian, or relative polar) and
entering the expressions for *dx, 5dy (in Cartesian
coordinates), or r, a (in polar coordinates). The
expressions may be parameters, numeric constants,
or formulas.
A simple syntax processor then generates a
visualisation function in an appropriate
programming language (our system generates
AutoLISP functions). Although such automation
does not find the relations between base points
automatically, it nevertheless sharply increases the
programmer’s productivity by performing all the
routine operations. Using the system a senior
student can usually develop a visualisation function
for a rather complicated part in 1.5 - 2 hours.

C l X & C2X & C 3 x & C4X

Here, the value of t is the minimum allowable
distance between the hole’s edge and the part’s
edge (it depends on the machine tool used). If (3) is
false the design must be incorrect.
Being able to create smaller programs within a
software allows the designer to be able to bring to a
conclusion the design intent of the part they are
working on. As Howard noted:
“...digital imagery is bound to an
understanding of the language and tools of
mathematics.. .they [designers] must be able to
develop new mechanisms and techniques if
they are to be innovative...Those who don’t
may remain craftspeople - destined to recreate
effects designed by those with deeper
understanding of the medium.” [4]

6. Parametric Assemblies
The same parametric technique can be applied
to assemblies. There are two basic ways of
designing assemblies parametrically: “Bottom-Up”,
and, “TopDown”. The Bottom-Up approach
allows the designer to modify each part separately
while a modification is transferred automatically to
all the parts involved. The TopDown design
includes a full parametric model of the assembly.

8. Object-Oriented Approach in Parametric
Modelling
Another approach toward implementing an
automatic generation of visualisation functions is
by using object-oriented approach (OOA). A base

507

The proposed structure of a parametric CAD
package which implements a TopDown design is
shown in
Figure 5. The system should include
the following components: interface module;
database of visualisation functions; database of
design verification functions; parametric loop
module (implementing the loop shown in Fig. 3).
The biggest advantage of such a structure is a strict
separation between the invariant algorithms (like
the parametric loop algorithm) and the functions
depending on the part’s geometry. The system
itself is kept intact as new parametric models are
added. It allows developing visualisation and
verification functions independently by third-party
developers, even by university students.

point can be represented as an object with certain
properties (coordinates) and methods (add, move,
delete etc.) The classic object-oriented paradigm
includes only these two entities: properties and
methods. But, the real implementations of OOA in
many modem programming languages have added
one more class of entities known as events.
An event occurs when the object is modified in
some way. Suppose we have a set of base points
that generate the OnMove event every time their
position is changed. Each event may modify the
positions of zero or more base points. The user
indicates what points are to be moved, and how
they are to be moved, while the systems works out
the relations between the points automatically. To
guarantee design’s integrity, each point must be
assigned to an area where it may be placed. As the
point goes beyond the area the design becomes
incorrect. In this way, the network of base points
are assembled together become a dynamic set
responding to the modifications made by the user.
Such a system is currently being implemented, but
so far it is difficult to say whether OOA is more
advantageous for parametric modeling or not.
Further research is currently being carried out.

9. Implementation Considerations
As previously started, when developing a
parametric CAD system, the basic decision was to
select an appropriate graphics environment. The
best choice tumed out to be AutoCAD, an industrystandard CAD system. It has both a powerful
graphics kernel and has built-in developers’ tools.
This may seem to be a strange choice since the
thrust of our argument to this point has been in
favour of parametric modeling and in light of the
fact that traditionally developing applications for
AutoCAD is considered tricky and difficult. Many
users even are not aware that there is something
beyond AutoCAD’s graphics editor.
One reason for this misunderstanding is due to
the fact that for a long time the only available
customization tool in AutoCAD has been
AutoLISP, a quite unusual and uncommon
programming language. In fact, few computer
graphics programs in education deal with
AutoLISP as a serious language and leave its
discovery to students to do in their spare time.
Later versions of AutoCAD allow for the use of
extemal applications, and ActiveX automation,
while AutoLISP remains the principal development
tool. As a programming tool, AutoLISP is perfectly
suitable for creating a parametric CAD package.
When the part, or assembly, being designed,
requires more complicated computations, or
additional analysis applications, the programmer’s
best choice for development would probably switch
to Delphi or VBA that would allow AutoCAD to be
controlled through ActiveX automation.

I

I

Flg.5- Parametric CAD Structure Tepown Darlgn
The structure has been implemented in a
parametric
AutoCAD-based
CAD
system
developed at the Dept. of Automated
Manufacturing Systems, Tula State University. The
products to be designed vary from complex
punches to the parts of production lines and safety
grids.
This system has been used by several industrial
companies since 1995, all of which have shown a
sharp increase in productivity. The transition to the
new parametric technology is smooth and seamless
thanks to a transparent, logical interface. For
example, when the designer wants to modify a
dimension all they have to do is to click the
dimension with the mouse and enter a new value as
in any commercially produced parametric package.
While dragging base points to new locations was
initially considered a more user-friendly approach,
it proved to be far too inconvenient. Designers
quickly showed their preference to enter an exact

508

value rather then to inaccurately drag the base
points.

that it is quite possible to tum AutoCAD into
powerful, flexible, easy-to-use parametric system
that can sharply increase the productivity or those
who employ it.

10. Conclusion
Our experience clearly shows that there is a
great demand for parametric CAD systems in
industry. The few existing systems with parametric
capabilities are either too complicated and/or
expensive (AutoDesk’s Mechanical Desktop,
ProEngineer), or do not have customization tools
(Top System’s T-FLEX, although T-FLEX is a
perfect choice for experienced parametric designers
and is an excellent stand-alone parametric CAD).
The proposed structure and features of the adapted
parametric CAD system which utilizes AutoCAD
as its base has been tested extensivelyin Russian
industrial enterprises in diverse applications and
proven its worth both in time, financial savings,
and reduced ramp up time for those who must leam
how to operate the system. Indeed, it is our position

12. References
[l] J. Orr, Introducing solid modeling. In D. E. Lacourse,
(Ed.), Handbook of solid modeling, McGraw Hill, Inc.,
New York, NY,(1995), p. 2.2.
[2] D. Hem, M. P. Baker, Computer graphics: C
version, F’rentice Hall, Upper Saddle River, NJ, (1997, p.
587.
[3] R. Toogood, Pro/Engineer tutorial, release 20/2000i:
A click-by-click primer. Publications, Mission, KS: SDC
(1999), p. 3 (Introduction).
[4] C. Howard, “The Science of Art”, Compufer
Graphics World, November, Vol. 22, No. 2, 1999, p. 24.

509

