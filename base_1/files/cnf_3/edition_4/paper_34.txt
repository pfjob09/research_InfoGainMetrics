12th International Conference Information Visualisation

Interactive Structural Clustering of Graphs based on
Multi-Representations
B. Gaudin, A.J. Quigley
University College Dublin, Ireland
benoit.gaudin@ucd.ie, aaron.quigley@ucd.ie
Abstract

sentation. From [6], the node-link representation is
shown to be clearly more suitable to accomplish tasks
on a graph only if the number of nodes is relatively
small (≤ 20). The matrix representation supports indeed pretty well the visualization of graphs with a high
number of vertices. It is then interesting to consider
a matrix representation of the graph in order to get
information that will help cluster it. This will hence
reduce its number of vertices and make the node-link
representation smaller. When the number of vertices
is small enough, the node-link representation is suitable to analyze the graph. This process can then be
iterative. Once the user has decided on the value of
the parameters, then it observes the resulting clustering. If the obtained graph is not satisfactory , then
the user can decide on new values for the parameters.
These new values can be considered for clustering not
only the initial graph but also the previously obtained
clustered graph, making the clustering hierarchical.

This paper investigates the use of a multirepresentation of a same graph in order to interactively cluster it. Both a node-link and a matrix representation of the graph are provided. The clustering
technique under consideration requires parameters to
be set. The matrix representation of the graph is provided in order to visually decide on the value of those
parameters. The approach has been implemented1 and
is illustrated through an example2 .
Keywords— Visualization, Structural Clustering,
Multi-Views, interactivity.

1

Introduction

Graphs with a large number of nodes are usually
hardly readable and hence hard to visually analyze.
Graph clustering consists in abstracting nodes of a
graph. One node of the clustered graph represents a
set of nodes of the initial graph. This approach makes
provides a smaller graph which is then easier to visually analyze.
In this paper, interactive clustering is considered,
where the user iteratively applies a clustering technique and visualizes its result. The clustering technique can be parameterized and these parameters are
interactively set by the user. The user is provided
with two representations of the graph: a node-link and
a matrix representation. Both representations can be
used to decide on how parameters should be set. However, because of the nature of the clustering technique,
the matrix representation is particularly appropriate
for that task.
Using user’s intuition to improve clustering techniques has been studied in [2]. However, our approach
is different as the clustering technique we are considering relies on a matrix representation of the graph
and the user decides on how to apply it by visualizing the graph in both a node-link and matrix repre1 The
2 This

Note that simultaneous use of node-link and matrix representations to cluster graph has been investigated in [4]. However, in that work clustering is
assumed to be totally performed manually. In the approach that we suggest here, clustering is performed
semi-automatically. The user only contributes to the
setting of the clustering parameters. This is actually
also the case in some work on interactive clustering
(e.g [8, 3]). However those work are very domain specific and require expertise on the domain to set the
parameters in a relevant way. With our approach,
expertise on the domain is obviously helpful but the
method can be still be applied just considering structural properties of the graph. To that respect, the
matrix representation helps explore some structural
specificities of the considered graph.
The clustering technique adopted in this paper is
based on the idea of Structural Equivalence introduced
in [5] (see [7] for a recent review of this work). Al-

implementation is partially based on the Jung library (http://jung.sourceforge.net/).
work is supported by a Marie Curie reintegration grant.

1550-6037/08 $25.00 © 2008 IEEE
DOI 10.1109/IV.2008.63

227

though the concept of Structural Equivalence was initiated in the domain of social network analysis, it can
be applied to any kind of graphs. The basic idea is that
if two nodes are connected the same way to the rest
of the graph, then they encode redundant information and should be clustered together. Our approach,
called Structural Clustering, is presented in section 2.
Section 3 illustrates this approach on a social network
representing a part of the MySpace3 network.

2

Figure 1: Selection of the nodes/components from 0
to 102.
The clustering approach we consider here is based
on the concept of Structural Equivalence introduced in
Social Network Analysis. The idea is that the nodes
whose corresponding rows in the matrix are similar
could be gathered in the same cluster. Similarity can
be defined in different ways. Definition 1 gives one
possible way of defining similarity. Other possibilities
are discussed further in this section.

Principle

Definition 1 Let G be an undirected graph with set of
vertices V and set of edges E. Two vertices v1 , v2 ∈ V
are similar if ∀v ∈ V, (v1 , v) ∈ E ⇐⇒ (v2 , v) ∈ E.

In this paper, we are not only interested in a dual
representation of graphs but also on interactively and
iteratively clustering graphs, taking advantage of the
dual representation. Here a parameterizable clustering technique is considered. In order to make easier
for the user to set these parameters, both a node-link
and a matrix representation of the graph are provided.
As previously mentioned, matrix representation offers
an alternative view of the graph, sometimes making
clear properties that are hard to observe with a nodelink representation (regardless the layout). Here, the
matrix representation is also particularly relevant because of the nature of the clustering technique under
consideration. First, the graph is clustered with default parameters and presented to the user in both
node-link and matrix representations. If the obtained
result is not satisfactory, then the user may decide to
set the parameters so the graph is clustered differently.
So from the matrix representation, the user picks new
values for the parameters and the clustering is applied
to the graph again. This process can be repeated until a satisfactory node-link (or matrix) representation
of the graph is obtained. Note that the user has two
ways to recluster a graph when the obtained clustered
graph is not suitable. One way is to consider the initial graph and recluster it with different parameters.
A second possibility is to cluster the clustered graph
itself.

2.1

Intuitively, if two nodes are represented by identical
rows in the matrix, they are connected the same way
to the other nodes of the graph4 . The pattern they
produce in the node-link representation is then duplicated. This is particularly interesting in the case of
a graph analysis where the structure encode relevant
information.
In [7], the author explains that similarity as defined
in Definition 1 is quite a strong condition. This fact
is also clear from the following tests: from the graphs
provided in the Matrix Market web site ([1]), similar
nodes have been clustered using Structural Clustering
and the size reduction of the graph brought by that
clustering has been observed. There is actually few
nodes concerned for the considered matrices. Among
54 graphs of the Matrix Market library, grouping in a
same cluster similar nodes has no effect on 37 graphs,
led to the clustering of few nodes in 14 graphs and had
a significant effect on only 3 graphs.
This fact is actually known in the case of social networks. The above tests show this is also the case for
other types of networks (power networks, finite element model problem, etc).
In order to make our approach useful for any kind of
graphs and hence more flexible, it seems then interesting to relax the notion of similarity. This can be done
by allowing two similar nodes to be connected slightly
differently to the rest of the network (i.e the nodes can
be represented by slightly different rows in the matrix
representation). Two ways are considered to take that
point into account. The first approach consists in comparing all the elements of the rows but allowing some
of them to be different (tolerance). The second approach consists in not comparing all the elements of
the rows but only a subset of them (selection). Intuitively, the first approach allows to cluster together

Definitions

3 http://www.myspace.com/
4 In this paper, unless it is explicitly mentioned, it is assumed that nodes are connected to themselves, i.e. ∀v ∈ V, (v, v) ∈ E. This
implies that only graphs with implicit self loops on each nodes are considered.

228

vertices that are not connected the exact same way to
the rest of the graph. The second approach allows to
cluster together vertices that are connected the same
way to only a subpart of the graph.
If x ∈ {0, . . . , |V |}, clustering with tolerance can be
modeled by a function fx s.t

This allows to cluster together nodes that interact the
same way with a subpart of graphs. This corresponds
to modifying Equation 1 replacing set V by V where
V ⊆V.
There are then two parameters considered in this
paper to make similarity flexible: tolerance and similarity according to selected nodes. Human interaction
is required to set these parameters. Whether the result
is satisfactory or not is also decided by the user. If the
tolerance for similarity seems too low (the readability
of the graph has not improved) or too high (very non
similar nodes belong to the same cluster), the user can
adapt and apply the clustering technique again under
parameters which seem more relevant to them. The
way to choose the values of these parameters is mainly
directed by the matrix representation of the graph to
be clustered.

fx (v1 , v2 ) = Card{v ∈ V |∃i, j ∈ {1, 2} with i = j,
((vi , v) ∈ E ∧ (vj , v) ∈
/ E)} ≤ x (1)
fx simply returns 1 if and only if the number of
nodes for which v1 is connected to but not v2 (or vice
versa) is lower than x. x corresponds to the tolerance
with which two nodes are considered to be similar. It
is indeed the maximal number of connections that are
allowed to be different so v1 and v2 are still considered
to be similar.

2.2

Example 1 We consider graph G given in Figure 2.
In this example, none of the nodes are similar to any
other one. With x = 1, nodes n2 and n3 are similar. They are connected to each other and to the same
other nodes except that n2 is also connected to n6.
Figure 2(b) shows that nodes n0 and n1 are not similar even with tolerance 1 as the 2 first components of
their corresponding rows in the matrix are different.
n3

n5

n0

n6

The approach considered for clustering in this paper
relies on the setting of two parameters: the tolerance
that is allowed for similarity and the subset of nodes on
which similarity is decided. This subset represents the
nodes used to determine whether two nodes are similar: if two nodes are connected the same way (with
possibly some tolerance) to the nodes of the subset,
then they are similar. In this section, some examples
are provided which illustrate how relevant the matrix
representation of the graph is in order to set those two
parameters.
First, the matrix representation is interesting to get
an idea of the degree of connectivity of the nodes of
the graph. This is particularly important in case of a
big graph where the node-link representation is usually useless for that task (unless the graph is particularly sparse). Knowing the degree of connectivity of
the nodes of a graph helps set the tolerance that is
acceptable for two nodes to be similar. For instance,
if we consider that the clustering is done according to
a subset of only two nodes and the tolerance equals
2, then the graph resulting from the clustering only
contains one node (i.e. all the nodes belong to the
same cluster). This is due to the fact that the similarity between any pair of nodes is only decided on the
way these nodes are connected to the nodes of the selected set. Since this set only contains two nodes and
the tolerance for similarity is 2, it means any pair of
nodes are similar. So the choice of tolerance has to be
related to degree of connectivity and the selection of
relevant nodes. The matrix representation is relevant
to determine these value.
In the previous paragraph, it is explained why a
matrix representation is suitable to set one of the pa-

n4

n1

n2

(a) A small illustrative graph.

Properties

(b) Matrix representation.

Figure 2: Two representation of one single graph.
The notion of similarity can be defined in various
ways. In this paper, we assume that similarity is defined by Equation 1. Regarding the way the obtained
clusters are connected to the rest of the graph, it is
assumed that there is an edge between two nodes (i.e
clusters) of the clustered graph if and only if it exists
a node in each cluster such that they are connected by
an edge in the initial graph.
So far, one parameter has been introduced: the tolerance regarding similarity (i.e. the value x of the
comparing function fx ). In some situation, it is interesting to consider that two nodes are similar if they
are connected the same way (possibly with some tolerance) to only a subset of the nodes of the graph.

229

rameters used in our approach: the tolerance. In the
following, we show through examples why that representation is also suitable to help set the second parameter used in our approach: the set of selected nodes
on which similarity is defined.
The first case we consider is the one where nodes
are selected because they have a high degree of connectivity. The interpretation of this is that the resulting
clusters contain nodes that are connected the same
way (possibly with some tolerance) to a set of central nodes, i.e with a high degree of connectivity. In
the case of a social network for instance, this would
result in a graph whose nodes are clusters grouping
people related the same way to the central actors of
the network.

The second case we consider is the one where a
chain is visible. A chain represents a set of nodes so
that every node of the graph is connected to at least on
of them. Selecting these nodes for clustering allows to
cluster together nodes of the graph that are related the
same way to that special set of nodes. In the case of a
social network, this is useful to group together people
who are related to the exact same people among an
influential group of people. This allow determine for
example which people are more influential than others
among that group.

Figure 4: The social network after clustering.
Example 3 Considering Figure 5(b), which represents a thousand of MySpace users and the way they
are related to each other, the matrix shows that people
represented by nodes 0 to 57 are linked in a very specific way. They form what can be called a “chain” of
people, observable by the line that goes across the matrix at the top of Figure 5(b). This phenomena can be
roughly interpreted as the following: everybody in the
network knows at least one of the people belonging to
that chain. Noticing such a chain and determining the
people involved in it is straightforward from the matrix
view. It is not the case from the node-link representation as shown by Figure 6(a). In this figure, the blue
nodes represents the nodes involved in that chain. The
layout of the node-link representation does not enable
to identify them easily.

Figure 3: A basic social network.
Example 2 Considering a social network for instance, some people may be connected a same subgroup of people but still have lots of other different
connections to other people. Figure 3 represents both
the Matrix and node-link representations of a basic social network. Considering the matrix representation,
it appears that nodes 0, 1 and 13 have a high degree of
connectivity. It then seems worthwhile applying Structural Clustering with no tolerance to the graph with
node 0, 1 and 13 selected (the corresponding rows are
blue in Figure 3). The result of that clustering is given
in Figure 4. In this figure, Node 0 is a cluster containing nodes 0, 1 and 13 of the initial graph. The clustered graph represented in Figure 4 gives interesting
information: the cluster represented by node 2 contains people that are connected the same way to the
central actors. Two other groups of two people appear: nodes 1 and 6 as well as nodes 5 and 7. Each
of these groups contain two people who are related to
each other and to at least one of the central actors,
but not the same way. This could mean that the two
members of those groups might not be related to each
other because they both know the same very influential
person of the network. They could then be people who
both know each other but different influential people.

The third case we consider is the one where some
nodes are “isolated” as they appear to have very few
connections to the rest of the graph, i.e. their degree
of connectivity is very low. Applying the structural
clustering selecting these nodes as a parameter results
in groups according to the number of isolated nodes
they are related to. In the case of a social network,
for instance this helps identify which members of the
network know several of these isolated people and will
then be able to make the link between them so they
group together and be for example less isolated.

230

3

Example

work is due to only one single person. Looking at the
connectivity of that person, it turns out they are actually not only connected to all the members of C1 but
also to lots of other people of the network. It seems
then that this person is a key member of the network.
A matrix representation of the network is given in
Figure 5(b). This matrix shows that people represented by nodes 0 to 57 are linked in a very specific
way. They form kind of a “chain” of people, observable by the line that goes across the matrix at the top
of Figure 5(b). This case is describe in section 2.2.
The set of people involved in the chain appears to
be a good set of nodes to be selected in order to apply
the clustering. This would indeed result in a clustered
graph were the people of each cluster would be connected in a similar way to the people of the chain.
The result of such a clustering with an error rate of
2 is given in Figure 7(a). The obtained graph has 60
nodes. This means that applying Structural Clustering reduces significantly the number of nodes of the
graph to be analyzed. The counter part of this reduction could be that too much relevant information
would be lost by clustering. As explained in the following, this is actually not the case.
The biggest cluster in Figure 7(a), is labeled C2 and
it contains 513 nodes of the previous clustered graph.
Some of those nodes are then themselves clusters. It
means that C2 actually represents an important part
of the people of the network.

In this section, our approach is applied to a graph
possessing 998 nodes and representing a social network5 . This social network actually represents people who have MySpace6 accounts. On MySpace web
site, it is possible to link with other people in order
for them to be considered as “friends” by the system. The graph under consideration is presented in
Figure 5(a). It shows part of the MySpace network.
Nodes represent MySpace accounts (or people) and
edges between two nodes represent a link between two
accounts, meaning that the owners of these accounts
are friends. In this example, we explore this data set
using a matrix/node link multi-view of the graph and
applying Structural Clustering to it.

(a) A node link representation of the network.

(b) The matrix representation of the social network.

Figure 5: A social network on MySpace.
Because of its high number of nodes, the graph
presented in Figure 5(a) is hardly readable. Fortunately, applying structural clustering brings the number of nodes down to 723 nodes (around 27 percent
reduction). It then helps make the graph more readable (Figure 6(a)). This shows that the size of graph
of Figure 5(a) can be significantly reduced thanks to
Structural Clustering. Note that neither selection nor
tolerance are required to get such a result.
In this particular example, Structural Clustering
groups together people that are connected the exact
same way to the other people of the network. Such
groups can represent a high number of people. In Figure 6(a), node C1 represents a group of 27 people. Not
only those people are connected the same way to the
other people of the network, but they are also connected to each other. Actually, looking closer to the
connectivity of C1 , we notice that it is only connected
to one person. So Structural Clustering allows figure
out that the people grouped in C1 are people who all
know each other and their link to the rest of the net5 We

C1

(a) Network after structural
clustering with no selection
and no tolerance in similarity.

(b) The matrix representation of the social network
after structural clustering.
There is still a chain in the
matrix.

Figure 6: The social network after a first clustering.
In Figure 7(a), C2 is black. The color coding of
the nodes is related to a measure of how similar are
in average any two nodes of a cluster. The darker the
clusters are, the less similar are any two nodes of that
cluster7 .

acknowledge Hui Zhang for collecting and providing this data set.

6 http://www.myspace.com/
7 This measure of similarity justifies the color coding. Although this is an interesting topic, it is however out of the scope of this
paper.

231

It is worthwhile noting that C2 has a high degree of
connectivity as it is connected to 51 nodes out of 60.
Since the tolerance regarding the similarity of nodes
it contains is only 2, that means the edges coming
in/out the cluster represent quite well the edges coming in/out each individual node. Although similarity
admits here some tolerance, Structural Clustering preserves quite well the structure of the graph.
Figure 7(b) shows that cluster C2 does not contain the people selected for clustering (rows 0 to 57).
This gives really valuable information on the network.
It means indeed that most people are connected not
only to each other but also to almost everybody in the
network. Such a network is then extremely dense in
terms of connectivity. However, part of the people of
that network are not directly connected to each other
(the ones that are connected to C2 but are not part
of it). Moreover another part of the people are not
directly connected to the mass as they are not connected to C2 . From Figure 7(a), these people would
be easily identified by looking at the content of the
clusters except for C2 .

representing links between MySpace users, this allows
to reason about graphs with a high number of nodes
using a much smaller clustered one.
How much the matrices presents useful information
to the user is clearly related to the way they are ordered. A good ordering of the rows can make appear
properties of the graph that would never be noticeable
with any other ordering. As future work, we are considering looking at this issue since a solution to it is
crucial to our approach.

References
[1] Ronald F. Boisvert, Roldan Pozo, Karin Remington, Richard Barrett, and Jack J. Dongarra. The
Matrix Market: A web resource for test matrix
collections. In Ronald F. Boisvert, editor, Quality
of Numerical Software, Assessment and Enhancement, pages 125–137, London, 1997. Chapman &
Hall.
[2] H. A. D. do Nascimento and P. Eades. Interactive graph clustering based on user hints. In
Proceedings of the 2nd International Workshop on
Soft Computing Applied to Software Engineering,
SCASE2001, 2001.

C2

[3] Diansheng Guo, Donna J. Peuquet, and Mark
Gahegan. Iceage: Interactive clustering and exploration of large and high-dimensional geodata.
Geoinformatica, 7(3):229–253, 2003.

(a) The social network after
applying structural clustering
again (selection of nodes 0 to
57 and tolerance of two different connections to be similar).

[4] N. Henry and J.D. Fekete. Nodetrix: a hybrid
visualization of social networks. In Proceedings
of the IEEE Information Visualization conference
(INFOVIS’07), Sacramento, California, 2007.

(b) The blue rows represent the people grouped in
the biggest cluster of Figure 7(a).

[5] F. Lorrain and H.C. White. Structural equivalence
of individuals in social networks. Journal of Mathematical Sociology, 1971.

Figure 7: The social network after clustering.

4

Conclusion

[6] J.D. Fekete M. Ghoniem and P. Castagliola. A
comparison of the readability of graphs using nodelink and matrix-based representations. In IEEE
Press, editor, Proceedings of the 10th IEEE Symposium on Information Visualization (InfoVis’04),
pages 17–24, Austin, Texas, 2004.

Structural Clustering is a clustering technique relying on the notion of Structural Equivalence in Social
Network Analysis. This paper introduces the very basic idea of that technique and illustrates it through
an example. A graph is classically represented in a
node-link fashion. In our work, a matrix representation is also considered as it represents a very interesting support to setting the parameters of the clustering
algorithm. By facilitating the setting of these parameters, this approach permits to easily find a trade-off
between node reduction and preservation of the underlying structure of the graph. As shown on a graph

[7] John P. Scott. Social Network Analysis: A Handbook. SAGE Publications, January 2000.
[8] Xiufeng Wan and Susan M. Bridges. Interactive
clustering for exploration of genomic data. citeseer.ist.psu.edu/584697.html.

232

