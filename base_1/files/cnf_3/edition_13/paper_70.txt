Visualization in Tunnelling – New Developments

G. Opriessnig and G. Beer+

Keywords:

Visualization, Numerical Simulation, Tunnelling, Virtual Reality

screen. The best way to do this is by immersing into

Abstract
Within the Visualization project of the
Austrian

Joint

Research

Initiative

(JRI)

Numerical Simulation in Tunnelling (SiTu) the
Tunnelling Visualization System (TVS) is being
developed, to display information in tunnelling.
The aim of the Project is to implement a user
friendly visualization system, where the data
can be displayed in a way, that tunnelling
engineers can understand. Virtual Reality
techniques are new in tunnelling and offer a lot
of

new

possibilities.

3D-scalar-fields

are

visualised in a novel way. The data to be
visualised are either results from numerical
simulation

or

ones

describing

geological

features. Such data have special properties,
which have to be considered by the visualization
system. This paper will present innovative

the three-dimensional data using techniques of
virtual reality. An important issue is that out of the
large amount of data which is produced by a
numerical simulation model we should display only
what is important to the decision making process.
For

example

for

the

tunnelling

engineer

displacements are best understood as ‘trend-lines’
which very effectively show the change in
displacement magnitude and direction as the tunnel
is excavated. With regards to stress values what
may be of interest is not the absolute values of
stress at various points but locations of maximum
compressive or shear stress. Because this quantity
changes in space one must find innovative
techniques to display it. Basically the visualization
should enable the engineer to see at ‘a glance’
where problem areas are.
The use of numerical simulation on site to

techniques for this purpose.

assist the tunnel engineer in often very difficult
decisions is not very wide spread. However, to be

Introduction
Without

good

visualization

numerical

simulation would be useless because tunnel
engineers will not be satisfied with printed
numbers. Good visualization is difficult since one
must be able to display often complex threedimensional visual information on a flat computer

able to ‘sell’ this kind of technology to people
working in tunnel construction one has to have very
effective

and

easy

to

use

software

tools.

Visualization of data plays an important role here.
A Tunneling Visualization System (TVS) was
developed from scratch with the benefit of
experience from a previous system developed for

+

SiTu-Research Initiative; Institute for Structural Analysis, Lessingstraße. 25/II,
Technical University of Graz, Austria
opriessnig@ifb.tu-graz.ac.at

the mining industry [1]. The use of special tools for

is the triangle. This element type is not ideal for

the development of software and modern object

numerical simulation[3]. For this purpose different

oriented programming techniques allowed the first

types of elements are used.

prototype to be already presented 3 months after the

If a 3D calculation is done with finite

start of the project. TVS makes it possible to

elements, the three dimensional space is filled with

perform a virtual walk through a tunnel which

brick elements. These elements are used for the

exists in computer memory only. During the virtual

calculation, but their geometry does not need to be

walk through the model the user may observe

drawn. Results of simulation inside these elements

different results of numerical simulations and

are of interest and only visible surfaces need to be

geological features. For example stresses become

displayed. If the tunnel advance is visualised, some

visible as clouds with variable densities depending

elements become invisible, so this calculation must

on the stress value. To be able to perform the

be redone for every excavation stage. To improve

computational and graphical work in stereo in real

the smoothness of the surface, additional points on

time innovative methods had to be developed

the element edges are calculated. This calculation is

[2][6].

done, using the Newton interpolation algorithm.
Usually elements are defined by their borders. To
render surfaces, the midside node of the element

The data base

has to be known. The position of this point can be

For numerical simulation the geometry of

calculated with the help of shape functions[3].

the model is described as a mesh. The mesh used

OpenGL has options to use different kinds

(Fig. 1) has special properties which are different to

of lighting effects. The characteristic of a light

the

for

source can be modified in a wide range. Position,

visualization. In visualization the standard element

direction, opening angle, colour, attenuation factors

properties

of

wireframes,

created

Fig. 1: From a Finite or Boundary Element to a 3D-Model

or the loss of intensity depending on the distance to
the source may be varied. These adjustments are

 Value − Min 
C = A*

 Max − Min 

only effective if the normal vector of the model
surface is known. If the model is drawn with
triangles, this is no problem, because this vector can

C
A
Max
Min
prog

be easily found. Using the mesh from numerical
simulation, the quadrilateral elements usually
consist of four or eight points. Such elements do not

(1* prog )

contour-value
linear amplification factor
maximum value of scale
minimum value of scale
progression factor

have a planar surface, so a normal vector cannot be
calculated explicitly. Making triangles out of each
non triangular element will increase the necessary

1

rendering effort. The Tunnelling Visualization
Software defines the normal vector as perpendicular

0.8

to both diagonals. This is not exact, but sufficient
for good lighting effects.

0.6

Display simulation results

0.4

Simulation results have special properties,
0.2

which have to be considered by the visualization
tool. In some cases there are areas, where the values

0
0.5

have peaks. These peaks sometimes do not have
physical

meaning

but

are

caused

by

1

1.5

2

2.5

Fig. 2: Contours for different progression
values

the

1
(1 − ξ 2 )(1 + ηn η); n = 5,7
2
1
N n = (1 − η 2 )(1 + ξn ξ ); n = 6, 8
2
Nn =

1
1
1
(1 − ξ )(1 − η) − N 5 − N 8
4
2
2
1
1
1
N 2 = (1 + ξ )(1 − η) − N 5 − N 6
4
2
2

middle-points

N1 =

1
1
1
(1 + ξ )(1 + η) − N 6 − N 7
4
2
2
1
1
1
N 4 = (1 − ξ )(1 + η) − N 7 − N 8
4
2
2

edge-points

N3 =

L
&
&
x = ∑ N n (ξ , η) xn
n =1

Fig. 3: Shape functions of the quadratic serendipity element. They are used to convert local
element-coordinates to global coordinates

3

1

1

0.5

0.5

0

0

2

1
-0.5

-0.5

-1

-1
-1

-0.5

0

0.5

1

-1

1

1

0.5

0.5

0

0

-0.5

-0.5

-1

-0.5

0

0.5

1

-1

-2

-1
-1

-0.5

0

0.5

1

0

-1

-0.5

0

0.5

Fig. 4: Discontinuities in the contour-plot
due to extrapolation from Gauss point in
each element

1

-2

-1

0

1

2

Fig.5: Contour-plot with TVS-averaging

discretisation procedure [3][5]. They are important

same for each element. If there is a large difference,

for error checking but for the purpose of the

this indicates, that the mesh is too coarse, and the

interpretation of the results by the tunnel engineer,

results suspect and the size or the type of the

these areas are not good, if the scaling is done

elements need to be changed. Figure.4 shows an

automatically.

example of averaging

The

Tunnelling

Visualization

System offers the possibility to cut off such peaks.
The user can define a maximum and minimum

Solution

value, progression and amplification factor of the

With a special procedure it is possible to

scaling curve. So the scaling can be modified for

smooth

each purpose[4], e.g. to highlight peaks or troughs

displaying three dimensional scalar fields as fog,

Figure 2 shows a density plot with different

an averaging algorithm was implemented. The

progression factors. The results of a finite element

Tunnelling Visualization Software uses the same

simulation usually are computed inside the element

algorithm for averaging and for calculating the

and not on the edges, where they would be

density values for the fog[2]. This algorithm can be

necessary for drawing. Only displacements are

used, independent from the element type, which is

calculated at these points. Stress values for example

very important for displaying results of numerical

are known in the Gauss integration points. These

simulation. If the surface drawn consists of parts of

points are internal points of an element. The

brick elements, this kind of averaging has another

geometry of an element is described by shape

advantage. Since Gauss integration points are inside

functions (Fig 3). With the help of these functions,

an element, this means they are not part of the

it is possible to find the values at the edge points. If

drawn surface. So the error decreases it the values

one point is part of more than one element, the

are extrapolated for each element.

extrapolated values for this node should be the

differences

between

elements

For

Algorithm
The value at a point or node is defined as
an weighted average of all known values. These
values usually are located in Gauss integration

 x GP1   N 1 GP1
 

 x GP 2   N 1 GP 2
x =N
 GP 3   1 GP 3
x  N
 GP 4   1 GP 4

N 2 GP1

N 3 GP1

N 2 GP 2

N 3 GP 2

N 2 GP 3

N 3 GP 3

N 2 GP 4

N 3 GP 4

N 4 GP1   x1 
  
N 4 GP 2   x 2 
*
N 4 GP 3   x 3 
  
N 4 GP 4   x 4 

points. In the first step, the position of these points

x1-4 are the x-coordinates of the edge points.

has to be found. The position is known in a local

xGP1-GP4 are the x-coordinates of the Gauss points

coordinate system, defined for each element. In this
local system the coordinates η, ξ and ζ can have

For

values from –1 to 1. The transformation from the

transformation matrix becomes to:

local to global coordinates can be done, using the

1
 *
6





 1 *
6

shape functions.

the

quadrilateral

(2 − 3 )
1
6
1
6

(
(

(2 + 3 )

linear

(

1
6

1
* 2− 3
6
1
* 2+ 3
6
1
6

)
)

1
* 2+ 3
6
1
6
1
6
1
* 2− 3
6

(

)

element



1
* 2+ 3 

6

1
* 2− 3 
6

1

6


(
(

)

the

1
6

)
)

The Transformation has to be done also for y and z.
The influence of a Gauss integration point depends
on the distance to the position of the wanted point.

Fig. 6: Position of the Gauss integration
points in a quadrilateral linear element
In many cases the Gauss integration points have the
1
local coordinates ±
(Fig. 6).
3

f node =

∑f

GP

*

GP

∑ (r
GP

1

(rGP−node )2
1

GP − node

)2

The shape functions of a quadrilateral linear

fnode is the value, computed for each node, fGP the

element are:

simulation result in a Gauss integration point.
rGP-node is the distance between node and Gauss

1
* (1 − ξ )* (1 − η )
4
1
N 2 = * (1 + ξ )* (1 − η )
4
1
N 3 = * (1 + ξ )* (1 + η )
4
1
N 4 = * (1 − ξ )* (1 + η )
4
N1 =

To get the global coordinates for the four Gauss
points the following transformation is necessary:

integration point. This calculation takes a very long
time, but it has to be done only once. The resulting
contours are a very good description for the
physical properties of the model.

Conclusion

References

In many cases commercial visualization
tools are designed to display phenomena, which can

[1]

Beer, G. & Lang G. 1992. A graphical

be described mathematically or with the help of

Post-processor for Computer-aided Design

statistical methods. Another large field in this area

of Mine Excavations. Int. J. Rock Mech.

are products, designed for the car industry.

Min. Sci. & Geomech. Abstr. Vol 29, No.
3, 307-322.

But in none of these fields, the special
properties of numerical simulation results are

[2]

considered in a way, that is appropriate for
tunnelling.

Computing

performance

Visualisation in Tunnelling Proceedings

becomes

1998 IEEE Conference on Information

cheaper and cheaper, so the use of numerical
simulation

is

becoming

more

Opriessnig, G. & Beer , G. 1998.

Visualization, 33-38.

widespread.

Numerical Simulation in Tunnelling should be

[3]

performed during the planning and construction

Beer,

G.

&

Watson,

J.O.

Introduction to Finite and

phase. A good visualization is absolutely necessary,

1992.

Boundary

Element Methods for Engineers, J. Wiley,

to sell this kind of technology. The features of the

Chichester.

Tunnelling Visualization System, described in this
paper are an important part of the visualization of

[4]

Yuanxian Gu, Xiaosong Yang, Cangzhou

numerical simulation results. They should help to

Yuan,

increase the acceptance of these methods.

Visualization

Yungpeng

Li

Techniques

Computing-Scan-Buffer

“Advanced
for

FEM-

based

direct

Volume Rendereing for 3D irregular
meshes” CIMNE, Barcelona Spain 1998

Acknowledgement

[5]

Yingmei Lavin, Yuval Levy, Lambertus
Hasselinkl, “Singularities in Nonuniform

The work reported here was supported by

Tensor Fields” Stanford University

the Austrian Science Found (Project Nr.: FWFS08001-TEC)

[6]

Werner Haas, Harald F. Mayer, Georg H.
Thallinger, “Visualisierung und Animation
in der Geomechanik für Strömungs-,
Transport-, und Spannungsberechnungen”
Institut für Informationssysteme Joenneum
Research Graz

