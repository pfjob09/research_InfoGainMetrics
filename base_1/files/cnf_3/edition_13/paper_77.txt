Three Dimensional Animation of Web Access Behavior
Using Indirect Mapping
Noritaka OSAWA, Kikuo ASAI, Hitoshi OHNISHI
National Institute of Multimedia Education
2-12 Wakaba, Mihama-ku, Chiba 261-0014, JAPAN
{osawa,asai,ohnishi}@nime.ac.jp

Abstract
This paper proposes and discusses a 3-D animation
method for helping us to comprehend the behavior of the
Web accesses. The proposed method uses dynamic
system modeling because human beings live in a dynamic
world and they have been trained to comprehend the world
since their birth. The method maps the Web access data
to mass and forces in a dynamic system model, then
simulates the model, and renders the results as graphical
objects in the 3-D space. An animation tool using the
proposed method has been developed. It is implemented
with the Virtual Reality Modeling Language (VRML) and
the Java programming language, and it works on a Web
browser. The features and functions of the tool are
described, and some snapshots of animations of a Web
server log are presented.

1.

Introduction

The Web has been widely used, and the size of Web
servers has been usually enhanced. As the enlargement
of the Web, it becomes more difficult to comprehend the
accesses of the Web and to find dynamic relationships
among documents. In other words, the understanding of
the Web access behavior is a difficult task. In order to
find users' interests, we need to understand the access
behavior properly. It is not only the static analysis of the
Web, but also the comprehension of the changes in the
Web, which are important. The Web structure is usually
irregular and does not have a corresponding physical
structure, that is, it is abstract. Therefore changes in the
Web are also abstract information.
In order to make abstract information easily
understandable, visualization is effective in general. The
bar graph and pie chart are simple examples of information
visualization.
As the processing performance and
graphics performance of computers advances, it becomes
easier to visualize a lot of data.
There are a lot of studies on information

visualization[10], network visualization[2], and Web
visualization [9]. In visualization, it is important to
utilize human visual cognitive and perceptual abilities fully.
It is not the main objective to put a lot of data onto a screen.
That is to say, it is more important to show data in easily
understandable forms than to show a lot of data
simultaneously.
Most of usual visualization methods map data directly
into attributes of graphical objects such as the positions,
sizes, directions, colors etc.
Figure 1 shows the
visualization procedure using a direct mapping. However,
it is not necessarily needed to map data into attributes of
graphical objects directly. Sometimes it is effective to
use an indirect mapping with an intermediate model.
Furthermore, many studies focus on static
representation of structures. However, many systems
such as the Web dynamically change their structures.
Information flows in the structures also change. Dynamic
representation has advantages to capture dynamic
properties in the systems. Research on animation of
dynamic changes in the Web accesses is insufficient.
Data

Graphical
Objects
Mapping

Figure 1: Visualization procedure using a direct
mapping

Human beings live in a dynamic world and can easily
recognize the movement or changes of bodies in a dynamic
system. Human beings are sensitive to the movement,
because they have been trained to comprehend a dynamic
world since their birth. If we could not understand the
dynamic world properly, it would be difficult to live in this
world.
Therefore we have proposed an animation method using
dynamic system modeling[12]. The method establishes
correspondence between abstract data structures and

dynamic system model structures, then maps data to
parameters of the dynamic system model, simulates the
dynamic system model, and then visualizes the simulation
results. In brief, it uses an indirect mapping of data to
graphical representation.
We have applied the method to visualization of trace
data for performance debugging of parallel programs on a
parallel computer[13][14]. Parallel computers have rather
regular structures. On the other hand, hypertext systems
such as the Web have irregular structures. Thus we
should investigate animation of changes in irregular
structures.
Items of
Trace Log of
Web Access
Mapping
Web
Structure
(Irregular)

Dynamic
Model
(Irregular)
Modeling

Trace Log of
Web Access
Input
Dynamic
System
Simulator
Output
Simulation
Results

Graphical
Objects
Mapping

Figure 2: Animation procedure of the proposed
method

This paper proposes and describes a new animation
method for the Web dynamic access analysis[15]. The
proposed method uses dynamic system simulation in order
to exploit human cognitive and perceptual abilities.
Figure 2 shows the animation procedure of the proposed
method.
This paper also reports on a prototype
implementation of 3-D animation tool and the snapshots of
animation generated by the tool. First, Section 2 explains
related work and discusses the differences between the
related work and our work.
Next, Section 3 describes a
prototype system for the Web access animation, and
Section 4 shows snapshots of animations using the
prototype system. Future work is stated in Section 5 and
a summary is given in Section 6.

known in static planar graph drawing. Moreover, these
techniques have also been applied to static graph drawing
in 3-D space. All of them are based on a stable solution
of a dynamic system.
On the other hand, our method is based on dynamic
simulation or solving equations of motion. Furthermore,
our method maps log data into dynamic system parameters
such as mass of objects and external forces. These
features differentiate our work from static planar graph
drawing using dynamic system modeling.
Dynamic system simulation is applied to visualization
of the behavior of object-oriented systems[19]. However,
it uses 2-D representation and its animation of links is
different from ours.
As stated in Section 1, the usual visualization
techniques[2][4][9][10][16][17] use direct mappings,
which map data into graphical attributes such as size, color
and orientation of the bodies and links. Although some
techniques use a non-Euclidean space such as hyperbolic
visualization[11], they are a kind of direct mapping.
Our method not only uses the mapping to graphical
attributes but also uses dynamic system modeling and
simulation so as to utilize fully human cognitive ability of
dynamic system behaviors that are familiar to us. In other
words, the method uses a kind of indirect mapping of data
to graphical attributes as stated before.

3.

A Prototype Tool for the Web Access
Animation

We have developed a 3-D animation tool for visualizing
the Web document structures and the changes of access
requests to Web documents. It is programmed with the
Virtual Reality Modeling Language (VRML)[18] and the
Java programming language[6]. It works on a Web
browser such as Microsoft InternetExplorer[22]. The tool
consists of a Java applet, a VRML browser and a Web
browser. A Java applet communicates with VRML
objects through EAI (External Authoring Interface)[23].
Figure 3 shows the overall structure of the prototype tool.
Web Browser
VRML Browser

Java Applet

Visualization,
Sonification

Document
Information Display

EAI
Parameter Setting

2.

Related Work

This section discusses related work and the differences
between the related work and our work.
There have been various studies on the topic of
visualization using a dynamic system. For example, a
spring model[8] and force-directed drawing[5] are well

Simulation Control
3-D Navigation

Log Data File

Figure 3: Structure of the prototype tool

3.1.

Input

In this paper, a referer1 log [20] in a Web server is
used as input data. Each line in a referer log contains
the information of an access request, that is, a referring
URL and a referenced local URL. The following is a line
of a referer log.

Equations of motion in the case of this modeling are
given by the next formula.
N x −x
N
xi − x j
d 2 xi
i
j
L − xi − x j
= R∑
+ k∑
2
3
dt
j =1 x i − x j
j =1 x − x
i
j
j ≠i
j ≠i

(

N

+ ∑ Fij (t ) − β
j =1
j ≠i

http://www.nime.ac.jp/~taro/bbs/bbs.cgi
?page=0 -> /icons/well-bg.jpg
http://www.nime.ac.jp/~taro/bbs/bbs.c
gi?page=0 is a referring URL, and /icons/wellbg.jpg is a referenced local URL. When the tool loads
a line, a referring URL is converted to a local document
path (/~taro/bbs/bbs.cgi). The local document
path does not include a host part (//www.nime.ac.jp)
nor a query part (?page=0). If the referring URL
resides outside the server, the line is marked as an
incoming request.

3.2.

Modeling

A document on the Web is mapped to a body in a
dynamic system. Access data to a document is mapped to
forces of the corresponding body. In order to simplify
explanation, we use a document and a body
interchangeably unless confusion is caused.
The mass of a document is constant in this case.
Repulsive force, elastic force, attractive force and frictional
force are used in simulation. First, the repulsive force,
which is inversely proportional to the square of distance
between documents, is applied to separate documents in a
stable state. Unless the repulsive force is applied,
documents converge as intra-requests occur. Elastic force
is exerted between a child and its parent. The attractive
force (external force) of a referenced document towards a
referring document is exerted. When a request occurs,
the attractive force is applied for a fixed period of time.
No force is exerted on a referring document. This
asymmetry violates the law of action and reaction in
physics, however, this setting shows imbalance of access
amounts between documents. The imbalance helps us to
recognize access directions of requests. The frictional
force is proportional to the velocity of a document. If
friction is not used but external forces are exerted, the
energy of the system increases monotonically. Friction
prevents the energy of the system from increasing
indefinitely. Friction smoothes movement and reduces
oscillation of a document. This makes it easy for us to
recognize the movement and balance of documents in the
system.
1

Referer should be spelled as referrer but the file name is
spelled as referer.

)

d xi
dt

Terms on the right hand side are repulsive forces, elastic
forces, attractive forces and frictional forces from the left
in that order. xi is a coordinate of document i. Fij(t)
represents external force exerted from document i to
document j at time t. Let N be the total number of
documents. R, k, L and β are constants. L is a natural
distance between a child and its parent where no elastic
force is exerted. x i − x j represents the distance between
xi and xj

3.3.

Mapping

In 3-D space, a document is represented by a sphere as
shown in Figure 4. The directory structures of documents
form a kind of cone tree[17]. Document structures are
arranged hierarchically. A thin line shows a parent-child
relationship between a directory and its subdirectory.
Not all of documents on the server are shown in 3-D
space because unaccessed documents obscure the
relationships of accessed documents. When a document
is accessed for the first time, a sphere is dynamically
created. The initial size of spheres is the same. The
spheres will be called document spheres.
An intra-request between documents on the server is
represented by a cone as an arrow-like shape. We will
refer the arrow-like cone to an access arrow. No interrequests are shown as a cone, that is, an incoming request
is not shown. Incidentally, outgoing requests are not
recorded in the referer log. Thus outgoing requests
are not shown either.
A request increases the volume Vi of the referenced
document i by a fixed amount γ .
increases the radius

The request also

rij of an access arrow from document

i to document j by a fixed quantity. The request does not
affect the intermediate directories between the root and the
referenced document.
The volume of a sphere decreases exponentially as time
passes. In other words, the second order derivative of the
volume is a negative constant. The radius of an access
cone is reduced linearly. Hence, the volume of a
document sphere and the radius of an access cone are
given by the following formulae where no requests occur.
v and ρ are constants.

d 2 Vi
= −v
d t2
d rij
= −ρ
dt

Figure 4: Snapshot of the animation tool. The left side is a VRML browser (Comso Player)
plug-in. The right side is a Java applet for setting and control.

3.4.

Implementation

We have implemented a prototype Web animation tool
using the VRML and the Java programming language.
The prototype tool has been implemented on a Web
browser. The tool also uses a VRML browser and a Java
applet. The VRML browser and the applet communicate
through VRML External Authoring Interface (EAI) [23].
The Web browser, VRML browser and a Java applet run in
various environments.
Thus our animation tool
potentially works on various hardware and operating
system platforms. That is to say, it is portable.
The animation tool loads an access log file, simulates a
dynamic system, and then visualizes the simulation result.
The VRML browser CosmoPlayer 2.1 [21] is used to give
a 3-D view and to navigate the 3-D space. The Java
applet loads an access log file, controls the simulation
parameter settings, simulates the dynamic system based on
the log file, and shows a selected document information.
The Java applet at the right side in Figure 4 show and
control simulation parameter settings. The applet shows
an input log file name, simulation time step (step) and the
number of lines processed (line). We can set the strength
of repulsive force (R), the strength of elastic force (k), the
strength of attractive force (F) and the strength of frictional
force (b= β ), the second order derivative of the volume

(v= v ) on the applet. The applet can also show the local
path of a document and its position, velocity and volume in
numerical forms as shown in Figure 4. If one clicks a
document on VRML browser, the information about it will
be displayed on the Java applet.

4.

Snapshots of Animation

This section gives some snapshots of animation. In the
initial state, no document is shown as in Figure 5. As the
log file is processed, documents are displayed. When a
document is requested, the intermediate directories
between the root and the document are also displayed as
document spheres.
Figure 6 and Figure 7 show snapshots after 10 log lines
are processed. The figures show that some documents
have been frequently requested recently. Their spheres
are large. Other documents that have not requested are
displayed as small spheres since the volume of spheres
decreases as the passage of time. In Figure 7, all
document path strings are shown.
This display is
controlled by a check box labeled "All Document Paths"
on the applet. If one wants to know the details of a
document sphere, he/she can click the sphere to display
them at bottom right of the applet as shown in Figure 4.

Figure 5: Initial state

Figure 8: Snapshot after 100 lines are processed.

Figure 6: Snapshot after 10 lines are processed.

Figure 9: Snapshot after 100 lines are processed
without dynamic system simulation.

Figure 7: Snapshot with path display after 10 lines are
processed.

Figure 8 and Figure 9 show snapshots with and without
dynamic system simulation respectively after 100 lines are
processed. Figure 9 is almost the same as a cone tree.
By comparing Figure 8 with Figure 9, we can understand
that dynamic system simulation results show effectively
the recent access frequencies of documents and the
relationships among documents.
Our method uses an indirect mapping and thus the
initial values and history of external forces influence
animation. Therefore we cannot understand the states at
one time only by looking at a snapshot of our animation.
However, our objective of animation does not aim at the
understanding of the system only using a snapshot. Our
method helps us to comprehend the system behaviors not
with a static snapshot but with movement in animation.

5.

Future work

We are now developing the system using Java3D
because manipulation of VRML objects through EAI of
the VRML browser is fairly slow.
We are also
developing a real-time animation tool. It collects log data,

simulates the mapped dynamic system, and visualizes the
simulation results in real-time. Moreover, we have a plan
to apply the animation tool to more general information
visualization.
We will extend our animation method to a virtual reality
system. We have built an immersive virtual environment
system[1] such as CAVE[3]. The immersive virtual
reality system makes dynamic data tangible[7].
In
addition to visualization and sonification, haptic display
such as force feedback will also be utilized. We believe
that immersive virtual reality helps us to comprehend the
behaviors of the Web system more easily.
The dynamic system modeling in this paper is only an
example. The mappings of data to the dynamic system
parameters and graphical attributes are also examples.
Other modelings and mappings are possible and should be
investigated.

6.

Summary

This paper has proposed and discussed a new animation
method for comprehending the dynamic behavior of the
Web. The method does not directly map an access log
into graphical attributes but uses both dynamic system
simulation and mapping so as to exploit human cognitive
and perceptual abilities. Since we are familiar with the
dynamic world and sensitive to changes in the dynamic
world, the proposed method helps us to comprehend the
dynamic changes on an irregular structure such as the Web.
We have implemented a prototype animation tool using the
proposed method and demonstrated the use of the tool and
some snapshots of animation.

References
[1] Asai, Kikuo, Noritaka Osawa, and Yuji Y. Sugimoto, "Virtual
Environment System on Distance Education," Proc. of
EUROMEDIA '99, pp.242-246, 1999.
[2] Becker, Richard A., Stephen G. Eick, and Allan R. Wilks,
"Visualizing Network Data," IEEE Trans. on Visualization and
Computer Graphics, Vol.1, No.1, pp.16-28, March 1995.
[3] Cruz-Neira, Carolina, Daniel J. Sandin, Thomas A. DeFanti,
Robert V. Kenyon, and John C. Hart, "The CAVE: audio
visual experience automatic virtual environment", Comm.
ACM, Vol.35, No.6, pp. 64 - 72, 1992.
[4] Daniel A. Reed, Keith A. Shields, Will H. Scullin, Luis F.
Tavera and Christopher L. Elford, "Virtual Reality and Parallel
Systems Performance Analysis," IEEE Computer, Vol.28,
No.11, pp.57-64, Nov. 1995.
[5] Fruchterman, T. M. J. and E. M. Reingold, "Graph Drawing
by Force-directed Placement," Software - Practice and
Experience, Vol. 21, No. 11, pp. 1129-1164, 1991.
[6] Gosling, James, Bill Joy and Guy Steele, "The Java Language
Specification," Addison-Wesley, 1996.
[7] Ishii, Hiroshi and Brygg Ullmer, "Tangible bits: Towards
seamless interfaces between people, bits and atoms," Proc. of
the 1997 Conference on Human Factors in Computing

Systems, pp. 234-241, 1997.
[8] Kamada, T., and S. Kawai, "Algorithms for drawing general
undirected graphs," Information Processing Letters, Vol. 31,
No. 1, pp. 7-15, 1989.
[9] Mukherjea, Sougata and Foley, James D., "Visualizing the
world-wide web with the navigational view builder,"
Computer Networks and ISDN Systems, Vol. 27, No.6,
pp.1075-1087, Apr. 1995. (Proceedings of the 3rd
International World-Wide Web Conference)
<http://www.igd.fhg.de/www/www95/proceedings/papers/44
/mukh/mukh.html>
[10] Mukherjea, S., J.D.Foley, and S. Hudson, "Visualizing
complex hypermedia networks through multiple hierarchical
views," Proc. of ACM Conf. on Human Factors in Computing
Systems CHI-95, pp.331-337, 1995.
[11] Munzner, Tamara, and Paul Burchard, "Visualizing the
Structure of the World Wide Web in 3D Hyperbolic Space,"
Proc. of ACM Symp. on Virtual Reality Modeling Language
(VRML95), pp.33-38, 1995.
[12] Osawa, Noritaka and Toshitsugu Yuba, "Three Dimensional
Animation for Performance Debugging Utilizing Human
Cognitive Ability," Proc. of IFIP INTERACT97, pp.102-103,
July 1997.
[13] Osawa, Noritaka, Hisaya Morita, and Toshitsugu Yuba,
"Animation for Performance Debugging of Parallel
Computing Systems," Proc. of 2nd Annual Symp. on the
Virtual Reality Modeling Language (VRML97), pp.101-107,
1997.
[14] Osawa, Noritaka, "An Enhanced 3-D Animation Tool for
Performance Tuning of Parallel Programs Based on Dynamic
Models," Proc. of ACM 2nd SIGMETRICS Symposium on
Parallel and Distributed Tools (SPDT98), pp.72-80, 1998.
[15] Osawa, Noritaka, and Hitoshi Ohnishi, "Three Dimensional
Animation of Changes in Web Accesses Using Dynamic
System Simulation," 8th World Wide Web Conference
(WWW8) (Poster) (to appear), 1999.
[16] Robertson, G.G., S.K.Card, and J.D. Mackinlay,
"Information visualization using 3-D interactive animation,"
Comm. ACM, Vol.36, No.4, pp.57-71, 1993.
[17] Robertson, George, Jock Mackinlay, and Struart Card, "Cone
Trees: Animated 3D Visualizations of Hierarchical
Information," Proc. of ACM SIGCHI Conf. on Human Factors
in Computing Systems, pp.189-194, April 1991.
[18] VRML Consortium, The Virtual Reality Modeling Language,
International Standard ISO/IEC 14772-1:1997
<http://www.vrml.org/Specifications/VRML97/>
[19] Wim De Pauw, Richard Helm, Doug Kimelman, and John
Vlissides, "Visualizing the Behavior of Object-Oriented
Systems," Proc. of 1993 Object-Oriented Programming
Systems, Languages, and Applications (OOPSLA'93), pp.326337, 1993.
[20] Apache HTTP Server Version 1.3 module mod_log_referer.
http://www.apache.org/docs/mod/mod_log_referer.html, Apr.
1999.
[21] Cosmosoftware home page. http://www.cosmosoftware.com/,
Apr. 1999.
[22] Microsoft Internet Explorer home page.
http://www.microsoft.com/windows/ie/default.htm, Apr.
1999.
[23] External Authoring Interface Working Group home page,
http://www.vrml.org/WorkingGroups/vrml-eai/, Apr. 1999.

