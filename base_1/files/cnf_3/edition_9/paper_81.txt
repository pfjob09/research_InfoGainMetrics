Objective and subjective relations in data visualization. Examples from
molecular biological data collections.
Igor Rojdestvenski, Dept. Plant Physiology, Umeå university, Umeå 90187, Sweden
Abstract. Natural science is where the objective and the subjective meet. When we build data collections, we want
them to reflect the objective relations inherent in nature, but also classify these collections, adding subjective
relations between data objects. Sometimes these two approaches conflict. In this paper we present two examples of
blending objective and subjective relations in a single data collection, and discuss some possible generalizations.
First example deals with the visualization of metabolic networks in three dimensions. We show that the network
topology has a substantial subjective component in this case and discuss possible ways to minimize human
inference. In the second example we present a collection of metabolic networks as a (subjective) hierarchical
structure with (objective) binary relations between objects, and show how the data visualization may be made more
logical via the procedure of “hierarchization of relations”.

Introduction. Currently a substantial research effort
is devoted to automated reconstruction and
representation of metabolic pathways and gene
networks (see, e.g., KEGG: Kanehisa 1999; CSNDB:
Takai-Igarashi & Kaminuma 1999; SPAD:
Tsukamoto et al 1997; BioCyc: Karp et al, 2002;
Kolpakov et al 1998; GSCope: Toyoda et al 2002).
Automatic visualization of metabolic pathways plays
a significant role in such effort, and becomes an
important problem on its own (Becker&Rojas 2001).
A successful visualization is a key to understanding
the intricate topology of different parts of metabolic
and regulatory networks. Graphical visualization of
metabolic pathways has to be, at the same time,
information
dense
and
not
“overloaded”,
recognizable and unified, close to traditional and
algebraically consistent. In fact, not only the pathway
discovery, as, for example, Karp (2001) suggested,
becomes a case for computational symbolic theories,
but pathway visualization as well. Pathway graphics
and topology contains, although in a non-textual
form, vast amount of information, which is a result of
deep understanding of pathway functioning. Recently
we designed Metabolic Network Visualizer (MNV)
(Rojdestvenski&Cottam 2003), a system to create
descriptions of metabolic networks using a simple
XML-compliant data model, and to visualize them in
three dimensions as virtual immersive worlds. The
system comprises four principal components: MNV
language standard and parser, MNV to VRML
translator, interactive pathway constructor and
custom made converters for existing pathway
databases. All components are unified via Perl and
HTML based GUI elements which are processed by
standard Internet browsing software with the installed
VRML plug-in. GUI and all the system’s components
are written in Perl, HTML and Javascript. The choice
of languages was determined by convenience and

standartization of GUI and suitability of Perl for
grammatical text analysis. Currently our system has
been applied to an open subset of the BioCyc
database (Karp et al, 2002), namely, the AgroCyc©
database.
It
can
be
accessed
at
www.patronov.net/sciencevr/mnv/indexview.html.
Species and co-species in metabolic networks.
Inference vs objectivity. When working on MNV
we encountered several interesting problems. One of
them was the “species vs co-species” paradox.
Conventionally the reactants that participate in the
chemical reactions are termed substrates and
cosubstrates (that are used up in the reaction), and
products and coproducts (that are produced in the
reaction). Normally the term “coproduct” is
understood as a side product of the reaction, that is
not part of the “pathway”. “Cosubstrate” is
interpreted similarly. The problem is that it takes
significant amount of inference to determine which
reactants are parts of the pathway and are,
concomitantly, substrates and products, and which
are “side species”, i.e. coproducts and cosubstrates.
The Fig. 1 shows part of the TCA cycle metabolic
pathway from the AgroCyc© database (Karp et al,
2002), with arrows illustrating the above definitions.
The products and substrates (further termed
“species”) represent vertices of the pathway graph
(“citrate”, “cis-aconitate”, isocitrate”), while “cospecies” (coproducts and cosubstrates, represented by
“H20”, “acetyl-CoA” and “Coenzyme A”) are
traditionally depicted by side arrows, not vertices. In
the MNV language reactants participating in a
metabolic network are described by <species> tag,
which has an attribute “co” with possible values
co=“yes” and co=”no”, to distinguish species from
co-species.

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

Fig. 1. A fragment of TCA cycle
from
Agrocyc©
database.
Black
arrows
point
at
species,
gray
arrows show co-species.
In our graph layout algorithm, based on the “spring
embedding”
graph
layout
algorithm
(Kamada&Kawai, 1989), both species and co-species
are represented by vertices, but with different
properties. We reasoned that, similar to the traditional

pathway graph layouts, the skeleton of the pathway
graph has to be determined by products and
substrates, i.e. by species vertices. So, when adjusting
the positions of vertices we took into account only
those “springs” that connected species and reaction
vertices with other species and reaction vertices.
Once the “skeleton” graph was laid out, we “froze”
the coordinates of reactions and species vertices, and
positioned the co-species vertices using all springs at
this time. Such visualization represented a
compromise between an “objective” graph topology,
determined by all vertices, and “subjective” skeleton
graph topology, which is not affected by the presence
of compounds chosen as “co-species”. We would
like to illustrate the above by comparing the TCA
(Krebs) cycle pathway drawn with two different sets
of rules. For the metabolic network in Fig. 2a
metabolic species NAD, NADH, NADPH, NADP,
WATER, ATP, PROTON, ADP, PI, CO-A are cospecies. In Fig. 2b the same network is shown with
all the substances, including the above listed, being
species, not co-species. Comparing Figs. 2a and 2b
we see graphs of totally different topology. The Fig.
2a is quite close to a traditional TCA cycle drawing,
while the elaborate “web” in Fig.2b. has almost
nothing to do with it.

(a)

(b)

Fig. 2. MNV visualization of TCA cycle. Species and reaction vertices are
represented by, respectively, white and colored balls. Skeleton graph
topology is determined by species and reactions vertices only. (a)With cospecies. Co-species vertices are shown as semi-transparent cylinders. (b)
Alternative MNV visualization of TCA cycle, all the participating chemical
compound are defined as species, not co-species
Species and co-species in metabolic networks:
objectivity vs inference. The “co” parameter
introduced for the species objects in pathways may
be easily changed if need be, leaving much flexibility
in constructing alternative graph layouts. However,
this does not eliminate the problem of formulating
universal choice rules in this matter. Indeed, it is
relatively easy to define species and co-species in a

single pathway. The problem arises when one deals
with modern scale data collections, with hundreds
and thousands pathways to be drawn automatically.
For this situation certain rules have to be formulated.
If the system of rules is limited, it may lead to certain
graph layouts that differ significantly from
traditional. On the other hand, formulating elaborate
set of rules that constitute individual treatment of

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

each pathway, virtually destroys all possible
advantages the automated pathway layout might
produce. The problem may seem purely academic at
a first glance, but its full importance will surely
manifest itself during design and functioning of the
modern “automatic pathway discovery” systems.
Currently we implemented a “list” solution to the
above problem, which allowed us to convert the
Agrocyc© database into MNV. Before processing the
data we created a list of substances which would be
co-species in all the pathways of a given database,
and during automatic conversion all of them received
a ‘co=”yes”’ attribute. Such substances included
ATP, ADP, NADH, NAD, and a few others. This
solution allowed us to produce pathways, which in
most cases were topologically very similar to what is
typically drawn manually or by other automated
layout systems. But practical as it is, this simple
solution does not stand any systemic critique. Indeed,
for the majority of reactions using ATP and ADP,
they are normally considered co-species. However,
when it comes to, say, ATP production pathways, it
is natural to depict ATP as a product, not as a coproduct. This is precisely the situation one should
avoid, as it quickly leads to individual co-species lists
for different groups of pathways. The discussion of a
systematic way of converting subjective inference
into objective rules for automatic distinction between
species and co-species goes far beyond the scope of
the current paper. We should note, however, that in
our view the main difference between “species” and
“co-species” is that the former are “internal
parameters” to the network, i.e. their concentrations
are strongly affected by other elements of the
network. The latter, on the contrary, can be treated as
“external” parameters, which influence the network’s
operation but are not affected by the network. With
this view in mind, the problem of making an

automatic distinction between species and co-species
becomes essentially the problem of modeling
chemical kinetics of the network. Interestingly, this
whole problem constitutes another argument in favor
of visualization being more than just a drawing. It
turns out that the topology of a correctly laid out
metabolic graph provides almost as much
information as algebraic and/or experimental data in
the form of tables and concentration plots.
Links between different networks. Objective
binary relations and subjective hierarchy.
Different metabolic networks in an organism are
interconnected, as the substances produced by one
network become consumed or transformed by the
other networks. Hence, the next level in visualizing a
whole collection of metabolic networks would be a
hyper-graph, whose vertices are individual networks
(pathways), which are linked via common
substances. On the other hand, the networks are
traditionally categorized into a hierarchical
classification, they are broken into families,
subfamilies, etc (see, e.g. hierarchical structure of the
Agrocyc©
database
at
http://biocyc.org:1555/AGRO/newimage?object=Pathways). Such subjective structure is
convenient and rather traditional, and hence it has to
be reflected in the visualization. Both paradigms (i.e.
objective graph representation and subjective
hierarchical representation) dictate quite different
approaches to the visualization topology and have to
be blended together in a successful visualization of
the biochemical networks collection.
Hierarchy with binary links: the language. Our
approach to the above problem was first to design a
language describing the hierarchical structure with
links between individual data objects. The simplest
version of such language implements the following
data model:

<network name=”name”>
<object name=”objname” id=”object_unique_ID”>
<description>
Here a textual description of the object may be put.
</description>
<link>
A hyperlink to additional information about the object
</link>
<object>
.. .. .. ..
<-- Children objects of the same structure -->
</object>
</object>
<edge name=”Edge_name” id=”Edge_id” from=”ID_from” to=”ID_to”>
<-- from and to attributes correspond to the unique ids of the -->
<-- objects linked by this edge -->
<description>

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

Here a textual description of the edge may be put.
</description>
<link>
A hyperlink to additional information about the edge
</link>
</edge>
</network>
Table 1. The hierarchical structure with links data model.
In short, the object tags may be embedded into each
other, and can contain <link> and <description> tags.
In this version of the language the edges that are
children of the <network> tag, i.e. of the whole
network, and they may link objects across hierarchy.
However, if this approach is implemented as it is, the
edges across hierarchical levels may obscure the
visualization. In fact, to maintain hierarchical
structure and the structure of binary relations between
objects are consistent only if the edges do not cross
the hierarchical levels. Moreover, in this situation a
correct scaling of the whole problem is possible,
allowing graph layout algorithms to be applied
(a)
(b)

separately at each hierarchical level. To achieve the
above we applied a procedure we termed
“hierarchization of relations”. Put simply, this
procedure transforms each relation between objects
with different parents into relations between objects
and their parents, and then between the parents. In
this case the hierarchy is not violated and edges are
hierarchized. In Figs. 3a, b.
this concept is
illustrated. The individual binary relations between
pathways are converted into ATP and ADP flows
between pathway families.

Fig. 3. Hypothetical pathways R1, R2 and R3, belonging to “1” family are
linked to pathways R1a and R2a from “2” family. (a) Before hierarchization,
relations through ATP and ADP substances across family borders. (b) after
hierarchization, the families are linked by common ATP and ADP flows, which
are routed to individual pathways within the families.
The language for the system with hierarchized
easily algorithmizable. Below we present an example
relations is modified so that an object tag can also
of a very simple network with four vertices and one
have <edge> children tags, which link children
edge before and after hierarchization. The example of
objects of this object as well as its children to the
a test network description before hierarchization and
parent. In this case the hiearchization procedure is
after it is presented in the Table 2a, b
(b)
(a)
<network name="test">
<network name="test">
<object name="OBJ1" id="1">
<object name="OBJ1" id="1">
<object name="OBJ3" id="3">
<object name="OBJ3" id="3">
</object>
</object>
<edge name="e1a" from="3" to="1"></edge>
</object>
</object>
<object name="OBJ2" id="2">
<object name="OBJ2" id="2">
<object name="OBJ4" id="4">
<object name="OBJ4" id="4">
</object>
</object>
</object>
<edge name="e1b" from="2" to="4"></edge>
<edge name="e1" from="3"
</object>
to="4" id="5">
<edge name="e1c" from="1" to="2"></edge>
</edge>
</network>
</network>
Table 2. Test network description (a) before hierarchization (b) after

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

(a)

(b)

Fig. 4. Hierarchization of relations. (a) a result of hierarchization of a
simple network with 4 vertices and 1 edge, converted into 3 edges. (b) The
hierarchization procedure applied to the KEGG© collection of metabolic
networks.
Note how the edge between objects 3 and 4 was
converted into three edges – 3 to 1, 1 to 2, and 2 to 4.
The corresponding visualization of the resulting
network is presented in Fig. 4a. The algorithm was
then applied to the KEGG© (see Fig. 4b), more
information
can
be
found
at
www.patronov.net/sciencevr/mnv/indexhie.html.
The binary interactions between the individual
pathways (smaller spheres) are transformed into
interactions between “traditionally” defined pathway
families (bigger spheres).
Conclusions. Visual representations of molecular
biological data have to combine objective relations
inherent in nature with subjective relations and
classifications. The former display the properties of
the “natural” systems while the latter are very
important from the point of view of “acceptance” of
such visualizations by research community. Two
presented examples demonstrate the importance of
such “blending” of objective and subjective,
providing basis for convenient and flexible data
structures for natural science data collections.

References
Kamada T and Kawai S (1989) “An algorithm for
drawing general undirected graphs”, Information
Processing Letters, 31, 7-15
Kanehisa M (1999) “KEGG: From genes to
biochemical pathways”, In "Bioinfomatics:

Databases and Systems" (Letovsky S, ed.), pp.
63-76, Kluwer Academic Publishers
Karp PD, Riley M, Paley S and Pellegrini-Toole A
(2002) “The MetaCyc Database”, Nucleic Acids
Research, 30(1), 59
Karp PD (2001) “Pathway Databases: A Case Study
in Computational Symbolic Theories”, Science,
293, 2040-2044
Kolpakov FA, Ananko EA, Kolesov GB, Kolchanov
NA (1998) “GeneNet: a gene network database
and its automated visualization”, Bioinformatics,
14, 529-37
Rojdestvenski I (2003) “VRML Metabolic network
visualizer”, Computers in Biology and Medicine,
33(2), 169-182
Takai-Igarashi T and Kaminuma T (1999) “A
Pathway Finding System for the Cell Signaling
Networks Database”, In Silico Biology, 1, 129146
Toyoda T, Hirosawa K, Konagaya A (2002)
”KnowledgeEditor: A Tool for Interactive
Modeling and Analyzing Biological Pathways
Based on Microarray Data”, Genome Informatics,
13, 244-245
Tsukamoto Y, Takiguchi K, Satou K, Furuichi E,
Takagi T and Kuhara S (1997) “Application of a
deductive database system for topological and
similar three dimensional structures in protein”,
CABIOS, 13, 183

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

