Topic Tracer:
a Visualization Tool for Quick Reference of Stories Embedded in Document Set
Mina AKAISHI
RCAST
University of Tokyo, Japan
akaishi@ai.rcast.u-tokyo.ac.jp

Koichi HORI
RCAST
University of Tokyo, Japan
hori@ai.rcast.u-tokyo.ac.jp

Abstract
This paper proposes a visualization tool, called Topic
Tracer, to show topic transitions of not only a story existing in a document but also stories traversing over several
documents.
To visualize topic transition, first we have developed an
analytical method to divide a document into parts. Then, we
introduce a Word Colony to show topic terms in a whole or
a part of document. It is a directed graph which shows the
dependency relationships among terms occurrences in the
target document. The Word Colony helps users to grasp the
overview of a document. The concatenation of Word Colony
gives plots of an existing story or crossing stories over several documents. This paper explains the concept and implementation of Topic Tracer using the minutes of the CUBESAT project, ”Student-built Educational Pico-Satellite Design”, in University of Tokyo.

1

Introduction

Today, the large collection of information resources that
an individual has ever been able to access - is continuously
growing at accelerating paces. Several kinds of tools have
been developed in recent years to help individual users to
access large amount of electronic resources. The so-called
search engines are the most popular among these tools, as
they allow users to access the resources using a very simple search mechanism, namely keywords or combinations
of keywords. However, the answers obtained from search
engines usually contain large amounts of information that
is not related to what the user had in mind when asking the
question. Moreover, users can not always specify the appropriate keywords to get necessary information.
Generally, the person who is looking for already-known
information, which means the one has accessed the target
information before or the one has convinced the existence of

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

Ken SATOH
National Institute of
Informatics, Japan
ksatoh@nii.ac.jp

the target information in some way, can access appropriate
information by describing one’s request concretely.
However, the person who wants to know something important in the specific domain, may not know what he/she
knows and what he/she does not know. To support such
a person, it is important to show information within context. The importance of telling knowledge in a story is
recognized in several domains [5]. If a system represents
necessary information chunks concatenated in a context,
users can access not only the target information but also
unknown/unexpected relevant information.
Topic Tracer, which is proposed in this paper, helps users
to recognize what they have already known and it suggests
what they should know within particular context. Topic
Tracer is a visualization tool to show topic transitions of
documents. This system provides users with two main functions. The first one is a document segmentation based on
the topic transition analysis. One document includes several
topics in it. If a document is divided, users can access appropriate segments of a document within context of the document. The second function is visualizing (i) an overview
of a document, (ii) topic transition in a document and (iii)
topic transition crossing over several documents. It helps
users to grasp the content of information at glance and to
see whether the result satisfies user’s requests.
The goal of this paper is to propose the method to represent information with context to help user’s information
access and domain knowledge understanding. For such purpose, we propose the Topic Tracer.
The remainder of this paper is organized as follows. In
section 2, we show the concept of Topic Tracer. In section 3, we introduce the notions of term dependency and
term attractiveness. Then we explain a document visualization tool, Word Colony [3]. In section 3, we explain document segmentation based on topic transition analysis and a
topic transition visualization tool, Topic Sequence. Finally,
in section 5 we offer some concluding remarks.

2

Topic Tracer

These days, though people can access a large amount
of electronic documents, it is impossible to see all relevant
information. Search engines return retrieval results with a
few sentences which include specified keywords. However,
sometimes it is not enough to understand contents. Then,
users have to examine whether it is required information or
not. They should check the original documents one by one.
Nowadays, software is emerging to analyze search results, sort them automatically into categories and present
them visually to provide far more information than the typical textual list. For example, Vivisimo [2] Clustering Engine automatically categorizes search results into hierarchical folders. End-users can find information from the types
of available information. Vivisimo does not use predefined
categories. Its software determines them, depending on the
search results. The filing is done through a combination
of linguistic and statistical analysis. Another example is
Grokker [1], that not only sorts search results into categories
but also ”maps” the results in a holistic way, showing each
category as a colorful circle. Within each circle, subcategories appear as more circles that can be clicked on and
zoomed in. These tools show all the possible categories of
information that Internet offers. Such results help users to
understand the overviews of retrieved results at a glance.
Though they are useful graphical tools to narrow the results,
they are not aimed to visualize the context among relative
information.
Topic Tracer is a tool to show information with context.
It support users who do not know what they want to know
exactly. Topic Tracer consists of two functional units, a
text visualization unit (TVU) and a text segmentation unit
(TSU). Figure 1 shows a component structure of a Topic
Tracer and an overview of the system.
To support users’ quick access of information, TVU provides a text visualization function. It transforms text into
Word Colony, which visualize the dependency relationships
among terms as a graph. Word Colony gives an overview of
content of a document. The details are written in section 3.
Users would like to access required information quickly.
Usually, a document may include several topics in it. To
focus on the proper part where appropriate information
is described, TSU segments a document into chunks of
text. Each chunk includes a few topics. This segmentation
method is based on the topic transition analysis described in
section 4.
The combination usage of TVU and TSU enables users
to see the topic transition crossing over documents. Figure
1 shows the system framework. All documents are divided
into segments by TSU. Then all segments are stored in a
document database with timestamps of original documents
and order of segment. When a user specifies a keyword,

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

the document database returns a list of segments that includes user’s specified keyword. Then Topic Tracer visualizes a topic sequence by concatenating relative segments.
The keyword represents user’s viewpoint. That is called
”contextual keyword”. The detail of Topic Transition is described in section 5.

3

Text Visualization Unit

A Topic Tracer transforms text into Word Colony, which
is regarded as visual abstract of a document. In this section,
we introduce two basic notion, term dependency and term
attractiveness, that is a basis of Word Colony.

3.1

Term Dependency and Term Attractiveness

In this section, we introduce the notions of term dependency and term attractiveness. In this paper, we treat a sentence as a set of terms. Sentences in a document are grouped
and related to one another in a variety of ways. Term dependency and term attractiveness are regarded as cohesion
of each term in a document. We introduced these notions as
the basis of Topic Tracer. We define these two notions as
follows.
The dependence of a term t on a term t in a document d,
denoted by dtd (t, t ), is given by the conditional probability
as follows.
tdd (t, t ) =

sentencesd (t ∩ t )
,
sentencesd (t)

(1)

where sentencesd (t ∩ t ) is the number of sentences
that includes the terms t and t in the document d, and
sentencesd (t) is the number of sentences that includes the
term t in the document d.
Attractiveness of the term t is the sum of dependency of
any term t in a document on the term t. It is calculated as
follows:
attrd (t) =

tdd (t , t)

(2)

t ∈T

Term attractiveness is regarded as popularity of the term.

3.2

Word Colony

Text has a rich structure, in which sentences are grouped
and related to one another in a variety of ways. Each sentence consists of terms. In this paper, we regard the term
dependency as cohesion of each term in a document. We focus on the characteristics of the dependency of occurrence
among terms which is divided into three groups. The first
one is the group of interdependent terms. These terms appear close in a document. The second one is dependent

Figure 1. Topic Transitions in the contexts "RF communication" and "Mr. Sakoh" .

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

terms. One term depends on another but not the reverse.
The last group is independent terms.
Let us assume that the term t is given. Based on
tdd (t, t ), any other term t is grouped into the following
types.
1. Interdependent terms
If tdd (t, t ) ≥ δ and tdd (t , t) ≥ δ, then the term t
and t are interdependent terms. These are close relevant terms in the context of the original document.
Such terms suggest some notion vaguely by working
together.
2. Dependent terms
If tdd (t, t ) > σ ≥ μ ≥ tdd (t , t), then term t depends
on the term t . The term t emphasizes one aspect of
the terms t in the context.
3. Independent terms
If tdd (t, t ) and tdd (t , t) do not satisfy the previous
conditions, then the terms t and t are independent
terms.
Interdependent terms are related with each other very
strong. It is easy to guess their relation. While dependent
terms suggest associable relations between main terms and
subordinate terms. It can be regarded that the main terms
are the important words that are surrounded by subordinate terms to suggest several aspects concerning about topic
words. Except for them, there are independent terms.
To visualize such relationships, important topic terms
which are surrounded by dependent terms, gives an outline
of document content.
The dependency relationship among terms forms the directed graph, called Word Colony. In Word Colony, the interdependent terms are embedded into the same node. The
strength of term dependency is mapped to the distance between nodes of terms and the term attractiveness is regarded
as the size of nodes. To visualize this relation, we use a
spring model graph. This graph visualizes the overview of
a document.
Figure 2 shows an example of Word Colony. This document is one of the minutes of CUBESAT project. Word
Colony shows dependency relationships among terms in the
document. We can guess that this document concerns with
”RF communication”, because of topic terms in the Word
Colony.

4

Text Segmentation Unit

A Topic Tracer provides the function to represent a content of a document as a Topic Sequence. It is regarded as
a graphical plot of a document. It supports users to find

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

Figure 2. Word Colony.
necessary part of document and it also supports to guess
the context (plot) of the document. To realize such function, this section describes the method to divide a text into
chunks of text.

4.1

Text segmentation based on topic sequence
analysis

Topic sequence analysis detects topic changes in a text
looking at variation in term attractiveness, and segments the
original text into smaller pieces according to the detected
topic change points. Given a document as a set of sentences D = {si }, we define subset of D as Di = {sk |k =
1 · · · i} ⊂ D where i ≥ 1. For each Di , and for each
t ∈ T , term attractiveness attri (t) is computed. Topic
change point is determined looking at variation of attri (t)
as i increases. Detection of topic change is based on attractiveness ranking of terms. If the attractiveness of the top n
terms in the ranking do not change for f consecutive sentences, then we assume the topic have changed at the first
sentence of such sequence. More formally, for each term
tl of top n terms in the attractiveness ranking for Dm , if
attrm (tl ) = attrm+1 (tl ) = · · · = attrm+f −1 (tl ), then we
assume i = m be the point of topic change. Here, n and
f are parameters of topic change detection algorithm, and
are called Top and Flat respectively. If Top is set larger, the
number of terms to be observed increases accordingly, in-

5

Figure 3. Topic Sequence.

creasing the probability of topic change. Flat indicates how
long we wait until we regard the topic has stabilized. The
larger the Flat is set, the less the probability of topic change
becomes.
There are other text segmentation techniques. However
the evaluation of text segmentation techniques is difficult
problem. Comparison of text segmentation techniques is
out of the scope of this paper. (See [4], [6], [7]).

4.2

Topic Sequence

Figure 3 shows a Topic Sequence of the same document
in figure 2. The document is segmented by Text Segmentation Unit of Topic Tracer. Then each segmented text is
visualized by Word Colony. Topic Sequence is formed by
the concatenation of Such Word Colonies. Topic Sequence
gives more detailed information along the plot of the original document. The first part suggests that this document
concerns with development of equipments for RF communication. Then the topics are changed to ”telemetry, TNC”
(at the second segment), ”antenna” (at the third segment)
and ”examination of equipments” (at the fourth segment).
This guides users to proper position of the document.

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

Topic Transition for Crossing Stories over
Documents

In this section, we explain the topic transition for crossing stories over documents. Each segmented text includes
important information. However, sometimes it is difficult to
understand its meaning because of the lack of its context. A
segmented text takes a place in the original text. Moreover,
it may be a piece of another story. Topic Tracer draws such
possibility as Topic Sequences.
We use the minutes of the CUBESAT project, ”Studentbuilt Educational Pico-Satellite Design””, in University of
Tokyo, Japan, as a data set. All documents are segmented
by TSU of a Topic Tracer, and they are stored in a database.
The number of documents is 398, and its total size is
1,325KB. They are divided into 4,213 segments (with parameters, Top=5 and Flat=4).
Let us assume that the user who is interested in the design of a transmitter wants to know whole process of the development of equipments for RF communication between a
satellite and a radio station on the earth.
When the user specifies the contextual keyword ”RF
communication”, the database returns all segments that include the keyword. Then, a list of segments is sent to a
Topic Tracer to visualize the Topic Transition concerned
with ”RF communication”. It can represent the design process of equipments, such as transmitter, receiver and so on.
In figure 1, a Topic Transition shows a story crossing over the minutes of CUBESAT project. This story is
weaved along the context of ”RF communication”. Let see
a part of the Topic Transition that is zoomed in figure 4.
At the right, there is a node of ”transmitter: change”. Before this description, there is the name of company of the
transmitter, ”TEKK Ks”. Then another company ”Nishi:
Musen” appears after ”TEKK Ks”. After the node ”transmitter: change”, only ”Nishi: Musen” appears. So the user
can guess something happened around this part. Then, the
user can access the corresponding texts to investigate the
reason and so on.
Further, let us assume that the user is interested in the activities of ”Mr. Sakoh” who is one of main members of the
CUBESAT project. Since the user found this name in the
node that is near to the node ”transmitter: change”. Both
nodes are parts of one Word Colony of one text segment.
The user can ask query to database with the contextual keyword ”Sakoh”. The Topic Tracer visualized the topic transition based on the context ”Mr. Sakoh” with the topic transition of ”RF communication. It is represented in figure 1.
At the middle of figure, two Topic Sequences have the same
segments. One of the topics is ”transmitter: change”. Before this node, the topic transition of ”Mr. Sakoh” is concerned with ”battery”. One of the reasons to change the
transmitter is the size limitation of a transmitter, because

Figure 4. Topic Transition in the context "RF communication".
the size of the satellite is fixed. The sizes of equipments are
influence with each other. Intersection of two topic transitions suggests such relationships between two stories.
Some visualization tools for categorizing results are proposed. However they are not aim to visualize the context
among relative information. Topic Tracer can represent information within several contexts.

6

Conclusions

In this paper, we proposed Topic Tracer to access the
information in contexts. topic Tracer consists of two functional units. A text segmentation unit provides the function
to divide a document into chunks, based on the notion of
term attractiveness. A text visualization unit represents visual abstract of a document as Word Colony, based on the
notion of term dependency. The combination usage of these
units enables to represent a document as Topic Sequence.
Topic Sequence also represents stories reweaving from several documents set. Topic Tracer supports users who want
to know comprehensive knowledge concerning with specific domain.
For the future work, we would like to apply Topic Tracer
to reweave stories in large amount of historical records.

References
[1] Grokker, http://www.groxis.com/.
[2] Vivisimo clustering engine, http://vivisimo.com. 2001.
[3] M. Akaishi, K. Satoh, and Y. Tanaka. An associative information retrieval based on the dependency of term cooccurrence. In Lecture Notes in Artificial Intelligence,
Volume 3245, pages 195–206, 2004.

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

[4] D. Beeferman, A. Berger, and J. Latterty. Statistical
models for text segmentation. In Machine Learning
34(1-3), pages 177–210, 1999.
[5] J. S. Brown, S. Denning, K. Groh, and L. Prusak.
Story telling in Organizations. Elsevier ButterworthHeinemann, UK, 2005.
[6] M. Hearst. Texttiling: Segmenting text into multiparagraph subtopic passages. In Computational Linguistics 23(1), pages 33–64, 1997.
[7] I. Mani. Automatic Summarization. John Benjamins
Publishing Company, Amsterdam, 2001.

