Broadcasting in Optimal Bipartite Double Loop Graphs
H.A. Harutyunyan , E. Maraachlian
Department of Computer Science and Software Engineering
Concordia University
Montreal, Quebec, H3G 1M8

Abstract
Double loop graphs are extensions of the ring topology which are obtained by regularly adding 2 extra edges
per vertex. An optimal graph of diameter d has the maximum possible number of vertices. The optimal structure
of double loop graphs, as well as the broadcast time and
an optimal broadcast scheme are known. In this paper, we
define the family of bipartite double loop graphs (BDLG)
G = (V, E) where V = V0 ∪ V1 , V0 ∩ V1 = φ and
|V0 | = |V1 |. We show that the maximum number of vertices
that a BDLG of diameter d can have is 2d 2 . We also study
the broadcast problem and find that the broadcast time is
d + 2. Finally we present an optimal broadcast scheme for
these bipartite double loop graphs.

1 Introduction
Multiloop Networks are the extension of the ring networks. One of the central problems in computer networks
research is to design network topologies that have good
properties. These properties can be grouped into two major categories: better performance and lower cost. Cost
usually refers to the number of the links, and performance
usually refers to fault tolerance, broadcast time, or ease of
routing schemes. The best performance can be achieved
when all vertices of a graph are connected to all the rest,i.e
in a complete graph. But this is practically impossible and
very costly. A compromise between cost and performance
should be done and that is why there is research to design
networks with good structural characteristics as well as near
optimum performance. Knowing that the broadcast time of
a graph G = (V, E) with diameter d is b(G) ≥ d, one
can see the importance of designing networks on N vertices with as small diameters as possible. In this respect, researchers studying multiloop networks have addressed two
problems: Problem 1: Given N vertices and degree δ, design the δ-regular multiloop network having the smallest diameter d possible. This problem has proved to be difficult

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

and people have instead tackled a different and somehow an
easier version of it. Problem 2: Given the diameter d and
degree δ construct the δ-regular multiloop network with diameter d and with the maximum possible number of vertices
N . Very good surveys on multiloop graphs can be found in
[10], [11], [2].
Definition 1 (Undirected Multiloop Graphs). Multiloop
(also called circulant ) graphs C N (±s1 , ±s2 , · · · , ±sk )
are defined on the set of vertices V = {0, 1, · · · , N − 1},
where |V | = N , and the set of edges E such that a vertex i
is connected to vertices i±s1 , i±s2 , · · · , i±sk ( mod N ).
For the special case where k = 2 the resulting multiloop graph is called double loop. An optimal double loop
graph of diameter d is a graph which has the maximum
possible number of vertices. In [17] it was shown that
CN (±1, ±2d + 1) are optimal double loop graphs where
N = 2d2 + 2d + 1. The graph C N (d, d + 1) also achieves
the same upper bound on N . Furthermore, C N (d, d + 1) is
a graph with minimum possible diameter d for 2(d − 1) 2 +
2(d − 1) + 1 = 2d2 − 1 < N ≤ 2d2 + 2d + 1. In [3] it was
proven that the C N (d, d + 1) with N = 2d2 + 2d + 1 has
the minimum average distance among all circulant graphs
of degree 4 and diameter d. The average distance was cal2
−1)
culated to be d[1 − 2(d
3(N −1) ]. In [13] it has been proved
that the optimal CN (1, 2d + 1) is isomorphic to the optimal
CN (d, d + 1) graph. Broadcasting in double loop graphs
was studied in [12],[15]. There exists a broadcast scheme
in [12] that guarantees that broadcasting will be completed
in at most d + 2 time where d is the diameter of the graph.
It has been proved that d + 2 is the exact broadcast time of
optimal double loop graphs [12].
In this paper we define the bipartite double loop graphs
(BDLG), G = (V, E), which are degree 4 graphs. The set
of vertices V is decomposed into two disjoint sets V 0 and
V1 where no two elements in either sets are adjacent and
|V0 | = |V1 |. The set of edges is defined as follows. For
a vertex i ∈ V0 , the neighboring vertices j = i ± s 1 and
j = i ± s2 belong to V1 and vice versa. The degree 3
version of this bipartite graph is known as the Generalized

Chordal Rings [14].
The rest of this paper is organized as follows: In section
2 we find the structure of the optimal bipartite double loop
graph (BDLG). In section 3 we study the broadcast problem
in BDLGs. The final section is a conclusion.
MDD of BDLGs

2 Optimal Bipartite Double Loop Graphs
In this section we will find the step sizes s 1 and s2 such
that the resulting BDLG of diameter d is optimal. We start
by examining the connectedness condition of these graphs.
Since BDLGs are vertex transitive, we can prove that a
BDLG will be connected if GCD(s 1 + s2 , s1 − s2 , N ) = 2.
This is true because in any connected graph there should be
a series of steps ±α(s1 − s2 ) and ±β(s1 + s2 ) that take
vertex 0 to 2. Using this fact and Bezout’s lemma we get to
the connectedness condition stated above.

2.1

Plane Tessellation Technique

The plane tessellation technique was used to study structural properties of several multiloop graphs [14], [17]. This
is a visualization tool that allows studying the properties of
the graph from a geometric point of view. Next, we show
how this technique is utilized to study the bipartite double
loop networks. A square lattice is assumed to fill the R 2
space. Vertex 0 will be mapped to an arbitrary square on
this lattice. The mapping rules are as follow: The square on
the right of square i (a square labeled by i) corresponds to
vertex i + s1 . The square on the left corresponds to i − s 1 .
Similarly, the squares on the top and bottom of square i correspond to vertices i + s 2 and i − s2 respectively. When N
adjacent squares, each of a different label from 1 to N , are
taken together the resulting tile is called a minimum distance diagram (MDD) and this tile periodically tessellates
the whole R2 space. Conversely, if N adjacent squares
are chosen to form a tile tessellating a R 2 space, there is
a chance that this MDD corresponds to a real graph. There
can be many shapes of tiles that can tessellate the R 2 space.
This geometric visualization of the graph allows us to design MDDs with desired properties and then check if they
correspond to a real graphs [17] [7].
The first step will be to find the maximum number of vertices that a BDLG of diameter d can have. Given that there
can be at most 4i square at a distance i from a square [17],
and using the fact that there should be equal number of even
and odd squares we can deduce that the maximum number
of squares an MDD corresponding to a BDLG can have is
Nmax = 2d2 . The second step is to guess a shape of an
MDD with 2d2 squares such that it tessellates the 2D plane.
Having in mind that there should be equal number of even
and odd squares on the boundary of the MDD we suggest

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

MDD of DLGs

Figure 1. The MDD of the BDLG is a subset of
the MDD of DLGs

the shape shown in Fig. 1 which has 2d − 1 squares at distance d from square 0. It should be noted that this MDD is
a subset of the MDD corresponding to a double loop graph
with the same diameter d. Our suggestion for an MDD indeed tessellates the 2D plane. Moreover, it can be seen that
there are many ways of putting the MDDs together to get a
tessellation, Figure 2 shows two of them. We utilize a simple algebraic technique whereby we define the tessellation
in terms of a variable x, which can have integer values between 0 and d. Every value of x corresponds to a different
different way of putting the MDDs together, hence to a different tessellation. The variable x is taken to be the vertical
distance between the rightmost square of an MDD and the
leftmost square of the MDD that is on its right (Fig. 2). After having a tessellation the values of the steps s 1 and s2 is
determined by finding 2 functions that map square 0 of one
MDD to the square 0 in a neighboring MDD. These equations usually are function of the variables s 1 and s2 . Using
these two equations we can solve for the two unknowns. In
the tessellation we define, there is a third variable x which
appears in the two mapping functions. These two equations
are presented below together with the solution for s 1 and
s2 .
((2d − x)s1 + xs2 ) mod N = 0
((d − x)s1 + (d + x)s2 ) mod N = 0
These equations can be written without using the mod, as
follows:
(2d − x)s1 + xs2 = αN
(d − x)s1 + (d + x)s2 = βN
Writing the equations in the matrix form and using the fact
that N = 2d2 allows us to solve s1 and s2 .
2d − x
x
d−x d+x

s1
s2

= 2d2

α
β

By inverting the matrix we get:
s1
s2

d+x
−x
x − d 2d − x

=

α
β

We get the following values of s 1 and s2 in terms of x, α,
and β.
s1 = (d + x)α − xβ
s2 = (x − d)α + (2d − x)β
The connectedness condition is satisfied if s 1 + s2 = s1 −
s2 + 2, and if s1 + s2 and s1 − s2 are both even. First we
enforce the condition s 1 + s2 = s1 − s2 + 2 and we get:

x=2

2αx − 2βx + 2dβ = 2αd − 2dβ + 2
x=2

Solving for x we get:
x=

2αd − 2dβ − 2dβ + 2
2(α − β)
x=

1
1
x=1

0
0

0
0

0

1

1

0

1

0

1 x=1
0 1
0

1
1
0
0

1

0

0

1

1

αd − 2dβ + 1
(α − β)

(1)

Since α and β are arbitrary numbers we can choose the values of α = 2 and β = 1. This gives that x = 1. Hence,
the value of s 1 = 1 and s2 = 2d + 1. Note that s1 + s2
and s1 − s2 turn out to be even and hence the connectedness
condition is satisfied.

1

1

3 Broadcasting in BDLGs

0

Figure 2. Shows two possible tessellation of
the same MDD. The squares marked with 0
are even squares while those marked with
1 are odd squares. It can be seen that
the boundary has equal number of even and
odd squares, and that even squares on the
boundary are neighboring odd squares on
the boundary of the adjacent MDD and vice
versa

In this section we will study the broadcast problem in
optimal BDLGs. The structure of these graphs was obtained in the previous section. Broadcasting is the problem
of disseminating a piece of information, owned by certain
node called the originator, to all other nodes [5]. This is
one of the primitives of communication of parallel processing, hence inefficient broadcasting can be a bottleneck in the
performance of multicomputers. Broadcasting is performed
by placing a series of calls along the communication lines
of the network. At any time, the informed nodes contribute
to the information dissemination process by informing one
of their uninformed neighbors. In this paper we consider
the following broadcast model which is the classical one.
• Each call involves only one informed node and one of
its uninformed neighbors.
• Each call requires one unit of time.
• A node can participate in only one call per unit of time.
• In one unit of time, many calls can be performed in
parallel.

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

A broadcast scheme of an originator u is a set of calls
that completes the broadcasting in the network originated
at vertex u. An optimal broadcast scheme informs all
the vertices in the least possible amount of time. Given
a connected graph G = (V, E) and a message originator
vertex, u, the broadcast time of u, b(u, G) or b(u), is the
minimum number of time units required to complete broadcasting from the vertex u. The broadcast time of the graph
G denoted as b(G) is defined as b(G) = max{b(u)|u ∈ V }
[5].

3.1

III

I
4

2

4

3

1

4

4

3

0

4

5

4

2

5

5

3

IV
5

5

A Lower Bound on the Broadcast
Time

First we will prove a general result about the upper
bound on the broadcast time of a general graph which has
at least d + 3 vertices that are all at a distance d from a certain vertex v0 in the graph. As the proof of the following
theorem shows, the broadcast time of a such a graph cannot
be less than d + 2. We will use this result to get an upper
bound on the broadcast time of BDLGs.
Theorem 1. If a graph G = (V, E) has more than d+2 vertices at a distance d from another vertex v 0 , then the broadcast time of G satisfies the following inequality: b(G) ≥
d + 2.
A formal proof is omitted due to lack of space. Instead,
we present the best case scenario in Fig. 3 where an originator can inform at most d + 2 vertices only if those vertices
are arranged in that particular way.
From the above theorem we can easily deduce a lower
bound on the broadcast time of a bipartite double loop
graph. By construction, we know that there are 2d − 1 vertices at distance d from vertex 0. Hence, as a direct application of the above theorem we can see that the broadcast
time of a BDLG is greater or equal to d + 2.

3.2

II

Optimal Broadcast Scheme and the
Broadcast Time

In this section we will give a broadcast scheme that completes broadcasting in d + 2 time units. Knowing that d + 2
is a lower bound, the existence of this broadcast scheme
proves that d + 2 is the broadcast time of bipartite double
loop graphs of diameter d. Our broadcast scheme, described
below, is very similar to that of double loop graphs presented in [12]. Since the graph is vertex transitive, we will
describe the broadcast scheme for the originator 0. Before
we describe the scheme here is a small note about our notation: the edge s i of a vertex v is the edge that connects v to
v + si .
BDLGBroadcastScheme (Originator is vertex 0)

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

Figure 4. Shows the 4 different regions of the
BDLG MDD. It also shows the time at which
every square will receive the message if only
steps 1 to 5 of the algorithm are considered.

1. Vertex 0 sends the message to the vertices to the vertices s2 , −s2 , −s1 , and s1 in that order.
2. A vertex v, that receives the message through its s 2
edge, sends the message to the vertices v − s 2 , v − s1 ,
and v + s1 in that order.
3. A vertex v, that receives the message through its −s 2
edge, sends the message to the vertices v + s 2 , v − s1 ,
and v + s1 in that order.
4. A vertex v, that receives the message through its −s 1
edge, sends the message to the vertex v + s 1 .
5. A vertex v, that receives the message through its s 1
edge, sends the message to the vertex v − s 1 .
The above message forwarding rules do not include a
mechanism to check if the vertex to whom the message is
being forwarded is already informed or not. As a result,
there might be cases where two informed vertices might try
to inform the same vertex, or an informed vertex tries to inform an informed vertex. According to the broadcast model,
a call involves only one informed and one uninformed vertices. In order to decide on how to forward the message in
these cases we augment the above algorithm with two other
rules as follows:
1. If a vertex v is informed, and because of the above
mentioned rules there is a new vertex v at time t that
wants to inform v again, two cases may arise: Case 1:
v is still forwarding the message according to the rules
1 to 5. In this case we compare the edge d, through

Figure 3. Shows the maximum number of vertices that can be at a distance d from the originator if
the broadcast time is equal to d + 1.

which v is going to forward the message at time t + 1,
to the edge s through which v would have received the
message from v at time t. If d = −s, then v continues
to forward the message without any changes. If d = s
and |d| = s2 then v forwards the message to v −s 1 and
v + s1 in that order in the following two time units. If
d = −s and |d| = s1 , then v stops forwarding the
message. If |d| > |s|, then v proceeds according to
the rules 1 to 5 and assuming that it was informed at
time t by the edge s. If |d| < |s|, then v does not
change its forwarding schedule. Case 2: v has finished
forwarding the message. In this case, v does not have
to do anything, and v does not put a call on edge s
and instead skips to the next neighbor on its message
forwarding schedule.
2. If at a certain time unit t there are more than one vertices who want to inform a vertex v, the vertex that
puts a call to inform v is chosen as follows. Let v i
where 1 ≤ i ≤ 4 be the vertices who want to inform v
via the edges ei where 1 ≤ i ≤ 4 (edges e i are from
v’s perspective). We compare the absolute values of e i
and choose the edge corresponding to the minimum. If
there are two edges with equal absolute values, then if
the value is |s2 |, then v forwards the message via −s 1
and s1 in that order. If the value is |s 1 | then v does not
try to inform any other vertex.
The additional 2 rules follow from this observation.
When at a certain time t a vertex v + s 1 or v − s1 considers informing vertex v it is guaranteed that the vertices

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

v ± s2 will be informed at time t + 1 without the intervention of vertex v. To see why, assume that v − s 1 considers
informing vertex v at time t. Then the vertices v − is 1 ,
0 ≤ i ≤ α, are all informed at time t where α is chosen
to be the smallest positive integer such that v − αs 1 was
informed by an s 2 or −s2 edge. Without loss of generality
assume that s2 informed v − αs 1 , then v − αs1 informs the
vertices v − αs1 − s2 , v − (α + 1)s1 , and v − (α − 1)s1 in
the following 3 time units. On its turn vertex v − (α − 1)s 1
will need α − 2 time units to inform v − s 1 at time t − 1.
Therefore, we conclude that v − αs 1 was informed at time
t − α − 2. v − αs1 informs v − αs1 − s2 at time t − α − 1,
which informs v − αs 1 − 2s2 , v − (α + 1)s1 − s2 , and
v − (α − 1)s1 − s2 at times t − α, t − α + 1 and t − α + 2
respectively. Finally, v − (α − 1)s 1 − s2 will need α − 1
time units to inform v − s 2 . As a conclusion we see that
v − s2 will be informed at time t + 1 without having v to
forward the message to it.
Theorem 2. The BDLGBroadcastScheme completes broadcasting in d + 2 time units.
Proof. Let v be a vertex in the graph. Every vertex v is
mapped to a unique square in the MDD, so we will use the
MDD to visualize the path taken by the message to inform
v. We divide the MDD into 4 quadrants as shown in Fig. 4.
We can write v as v = as1 + bs2 and prove the theorem by
taking 4 cases:
Case 1: a ≥ 0 and b ≥ 0, i.e. the vertex is in quadrant
1. Then from the shape of the MDD we know that a + b ≤
d − 1. According to the above scheme, the first s 2 step will

be taken at time 0. After that, at every time unit a new s 2
step can be taken. Therefore, completing the all the s 2 steps
will take b time units. After taking the b th s2 step, two time
units will pass and afterwards, the first s 1 step can be taken.
Therefore, after taking all the s 2 steps, the a-many s 1 steps
will be completed in a + 2 time units. In total, taking the a
and b steps will take at most a + b + 2 time units. If a = 0
then informing v will take b time units, and if b = 0 then
informing v will take a + 3 time units. Since a + b ≤ d − 1,
then all vertices in quadrant 1 can be informed in at most
d + 2 time units.
Cases where a < 0 and b ≥ 0, a < 0 and b < 0, or
a ≥ 0 and b < 0 can be treated similarly to case 1.
According to the above broadcast scheme the broadcast
scheme from any originator v takes at most d + 2 time units
to inform all the vertices, hence in a BDLG G = (V, E)
b(v) ≤ d + 2. This implies that b(G) ≤ d + 2. This upper
bound together with the lower bound proved earlier imply
that b(G) = d + 2.

Conclusions
In this paper we define a new family of bipartite graphs
and called them bipartite double loop graphs. They are
called double loop because every vertex is linked to 4 vertices determined by the two step sizes s 1 and s2 . We proved
that the maximum number of vertices that such a graph of
diameter d can have is 2N 2 . We studied the broadcast problem in BDLGs and found that the broadcast time is d + 2.
A broadcast scheme that achieves this value was also presented. Finally, we proved a general result that applies to
any graph which has d + 3 or more vertices at a distance d
from a vertex v 0 . For such graphs we proved that the lower
bound of the broadcast time is d + 2.

References
[1] B. Arden and H. Lee, Analysis of chordal ring networks, IEEE Trans. Comput. C-30, 1981, pp. 291-295.
[2] J.-C. Bermond, F. Comellas, and D.F. Hsu, Distributed
Loop Computer Networks: A Survey, Journal of Parallel and Distributed Computing, 24, 1995, pp.2-10
[3] R. Beivide, E. Herrada, J. Balc´azar, and A. Arruabarrena, Optimal Distance Networks of Low Degree for
Parallel Computers, IEEE Trans. on Comp., Vol 40,
No 10, 1991, pp. 1109-1124.
[4] R.F. Browne and R.M. Hodgson, Symmetric Degreefour chordal ring networks, IEEE Proc., 137(E), 4,
1990, pp. 310-318.

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

[5] J. Hromkovic, R. Klasing, B. Monien and R. Peine,
Dissemination of information in interconnection networks, Combinatorial Network Theory, D.-Z. Du,
D.F. Hsu(eds.), Kluwer Academic Publishers, 1996,
pp. 125-212.
[6] C. Chen and F.K. Hwang, The minimum distance diagram of double loop graphs, IEEE Trans. on Comp.,
Vol 49, No. 9, 2000, pp. 977-979.
[7] F. Comellas and P. Hell, Broadcasting in Generalized
Chordal Rings, Networks, 42(3), 2003, pp. 123-134.
[8] P. Fraigniaud and E. Lazard, Methods and problems
of communication in usual networks, Discrete Appl.
Math., 53, 1994, pp. 79-133.
[9] S.M Hedetniemi, S.T. Hedetniemi and A.L. Liestman,
A survey of gossiping and broadcasting in communication networks, Networks, 18, 1988, pp. 319-349.
[10] F.K. Hwang, A complementary survey on double-loop
networks, Theoretical Computer Science, 263, 2001,
pp. 211-229.
[11] F.K. Hwang, A survey on multi-loop networks, Theoretical Computer Science, 299, 2003, pp. 107-121.
[12] A. L. Liestman, J. Opatrny and M. Zaragoz´a, Network
Properties of Double and Triple Fixed Step Graphs,
International Journal of Foundations of Computer
Science, 9(1), 1998, pp. 57-76.
[13] C. Mart´ınez, R. Beivide, C. Izu and J. Miguel-Alonso,
Characterization of the Class of Optimal Dense Circulant Graphs of Degree Four, Proc. de las XIV Jornadas
de Paralelismo, Legane´s, Madrid, Espa¨na, 2003, pp
133-138.
[14] P. Morillo, F. Comellas, and M. A. Fiol, The optimization of chordal ring networks, Commnication technology, Q. Yasheng and W. Xiuying (Editors), World
Scientific, Singapore, 1987, ISBN 9971-50-349-9, pp.
295-299.
[15] Obradovi´c, N., Peters, J., and Ruˇzi´c, G., Reliable
Broadcasting in Double Loop Graphs, Networks, 46
(2), Sept. 2005, pp. 88 - 97.
[16] C.K. Wong, and D. Coppersmith, A Combinatorial
problem related to multimodule memory organizations, J. ACM, 21, 1974, pp. 392-402.
[17] J. L. A. Yebra, M. A. Fiol, P. Morillo, and I. Alegre,
The diameter of undirected graphs associated to plane
tessellations, Ars Combin 20B, 20B, 1985, pp. 159172.

