2012 16th International Conference on Information Visualisation

InfoMaps : A Session Based Document Visualization and Analysis Tool
Sebastin Kolman, Andrew S. Duﬁlie, Sanjay Krishna Anbalagan, Georges Grinstein
Institute for Visualization and Perception Research
University of Massachusetts Lowell
Lowell, MA, U.S.A.
saby83@gmail.com,aduﬁlie@cs.uml.edu, sanjay anbalagan@student.uml.edu, grinstein@cs.uml.edu

In Section 2, we discuss InfoMaps. In section 3, we
present the Weave framework and its architecture. In Section
4 we discuss the implementation and in Section 5 we discuss
the implications of integrating Weave with InfoMaps. We
compare InfoMaps with some of the previous work done in
this ﬁeld in Section 6 and conclude with our future work.

Abstract—InfoMaps is an information visualization tool designed for personal information management and for supporting data analysis. In this paper we brieﬂy discuss the design of
InfoMaps and explain its role in ﬁnding relevant information.
InfoMaps is tightly coupled with Weave, an open source
framework, providing a set of data analysis and visualization
tools. Weave’s framework is built with session states as its
core and this provides InfoMaps the ability to store the entire
user’s interactions as well as visualization layouts. We discuss
the implications of using the Weave framework with InfoMaps
and its relevance to the ﬁeld of information retrieval and visual
analytics.

II. I NFO M APS
InfoMaps is an interactive visualization tool for spatial
organization of digital information within a two-dimensional
space. It supports persistent state information whereby document references are spatially ﬁxed so that users can harness their spatial memory to organize and ﬁnd information
quickly. Information, such as documents, ﬁles, emails, calendars, tasks, web pages or other objects, are arranged on a
background visual image (referred to as a map), such as a
geographical map, a biochemical pathway, an image of an
object (car, printer, desk part) or calendar. The background
can be an image with which the user is familiar or it
can be related to the information metadata. All document
references are always updated to reﬂect the current state of
the underlying information based on user actions and system
events.
The map serves as a mnemonic device. It provides a
comfortable, familiar visual context in which the displayed
documents are mapped out and help the users remember
where their ﬁles are, why they are there, when they were
placed there, as well as possibly other valuable personal
reminders. Studies in Cognitive Psychology [1][2][3] have
shown that users require landmarks and cues for navigating
and wayﬁnding in virtual worlds similar to the real world.
People deal with navigational space by ﬁrst looking for
landmarks and then develop conﬁgurational knowledge of
the key locations.
The general interface design for InfoMaps is explained
as follows. Each individual information item is referred to
as a document and can include text ﬁles (pdf, doc, html),
RSS feed items, images, or other objects. Each document is
represented as a point on the map where the point is some
glyph (e.g. a circle, an ellipse, a square or a ﬁgure). Each
point has a grid position , a size and a label. It could also
have a ﬁll color and pattern, a boundary color and pattern. A
collection of related documents resulting from a document

Keywords-information retrieval;infomaps;viri;visual information retrieval interface;

I. I NTRODUCTION
Better tools are necessary to overcome the problem of
information overload. Data has grown exponentially over the
years and it has become difﬁcult for end-users to keep track
of digital information. While traditionally information is displayed in a list-based textual format, there have been many
applications built to make use of visualization techniques to
render this information. Visualizations can represent and display large multi-dimensional data effectively and intuitively
using images, colors and shapes, and offer users an engaging
and interactive environment to organize and access data.
In this paper we present InfoMaps which is a Visual
Information Retrieval Interface (VIRI) designed to help users
ﬁnd relevant information. InfoMaps can handle different type
of digital information from a variety of sources. The users
can arrange the information on a screen which can contain
background images. The images and layout act as mnemonic
devices thereby taking advantage of human cognitive ability
and providing a familiar environment for the user.
While similar VIRI systems have been implemented
before, InfoMaps has been tightly coupled to Weave, a
visualization framework. Weave is a web-based visualization
system and a session-driven application framework which
stores the user interactions and visual parameters in session
states. Users can share session states, undo-redo session
states and save session states. We believe that a sessionbased document visualization system is what sets InfoMaps
apart from the previous applications. InfoMaps can be used
both for personal information management as well as for
data exploration and analysis.
1550-6037/12 $26.00 © 2012 IEEE
DOI 10.1109/IV.2012.54

274

Figure 2. A single instance of Weave used to visualize a foreclosure data
set. The tools shown includes: a map tool, scatterplot tool, a bar chart and
color legends. Each of these tools is a window panel which can be moved
and resized.
Figure 1. A sample map using the ﬁgure of a home as the background
image. Documents are placed at familiar landmarks (roof, door, window).
Documents (represented as rectangular glyphs) belonging to the same node
are grouped together.

is show in the Figure 3. The data is stored on a database
server and the middleware (written in Java) handles the data
requests and responses. It processes the queries, requests the
data from the server and sends it to the client application
running on a web browser. The web browser requires Flash
Player to run the client application. It may also use the
browser cache for fast response time and seamless user
interaction with the visualization.
Weave is a session-driven application framework, which
means all signiﬁcant actions made in the system are reﬂected
in the session state, and changes to the session state alter
the state of the interface at runtime (also referred to as an
instance of Weave). The visual parameters and other tool
properties along with the user interactions are recorded and
stored as a session state.

query or keyword ﬁlter are typically grouped together and
placed at or around a node. This node can also be represented
in any iconic format. Users can place the nodes anywhere on
the map or their placement can be deﬁned computationally.
The nodes and the documents can be moved around the
map and placed on a familiar visual context with respect to
a background image. For example, in Figure 1, the image of
a house is used as a background image and documents are
placed around familiar landmarks like the door, window or
the roof. The documents could be related to product pages
required for repairing or building the house.
The document layout is persistent. Nodes maybe laid out
computationally or manually. If a user places a node in a
speciﬁc location on the map it remains there till the user or
an algorithm relocates it. Once the user has conﬁgured the
map with the selected data sources, the conﬁguration can be
saved and revisited and/or edited whenever required.

IV. I MPLEMENTATION
Since InfoMaps is implemented using the Weave framework, it is available as a web application and accessible
through a web browser. For processing and indexing the
documents we use Apache Solr [5], an open-source search
platform built on top of Apache Lucene. Lucene [6] is a text
search library written in Java. The Apache Solr package is a
standalone full-text search server with full-text indexing and
search capabilities. It contains many features, which have
proved useful for our information retrieval needs such as
stemming of query words, REST-ful API for querying, etc.
Solr is based on plugin architecture and this helped us in
designing custom modules for InfoMaps.

III. W EAVE
Weave (WEb-based Analysis and Visualization Environment) [4] is a data visualization framework that provides a
variety of tools including bar charts, line charts, pie charts,
and maps to visualize data and statistical and modeling tools
to analyze the data as shown in Figure 2. The tools provide
coordinated multiple views of data sets with a highly interactive user experience. Each application has parameterized
aesthetic, interaction and visualization properties that can
be modiﬁed through simple interfaces and yield customized
applications at runtime. Weave is based on client-server
architecture, with its front end written in Flex and the serverside code written in Java. It supports MySQL, PostGres and
Oracle as the database server. The architecture of Weave

A. Indexing
Before we discuss our indexing scheme, we deﬁne the
representation schema used for the documents. The following four attributes to describe a document:
(i) URL/URI: The URL (Uniform Resource Location) or
URI (Uniform Resource Identiﬁer) is a string that uniquely

275

(iv) Date Published/Modiﬁed: The publication date or the
last modiﬁcation date of the document. All the text in
the title and description/summary are indexed and used for
retrieval. Beside the four attributes mentioned above there
are other important attributes and metadata which could also
be valuable to store without the need for commonality in all
the documents. Metadata like the author’s name, keywords,
or tags, can also be stored and indexed.
B. Querying
In our current implementation both boolean and vector
retrieval models are supported. Logical operators can be used
to query the Solr server and query terms can be boosted
over other query terms to retrieve relevant documents. Solr
provides an API to query the indexed documents and retrieve
results in a XML ﬁle. The request can be sent through
a HTTP GET request with all the parameters and ﬁlters
deﬁned in the request URL to Solr. The result set in the
XML ﬁle is processed through the Weave Data framework
and input to the InfoMaps tool to visualize the documents.
Using the Data Framework helps to visualize the result set
through other visual tools in Weave. This integration with
other visual tools is explained in more detail in Section 5.
C. User Interface

Figure 3.

InfoMaps is an ongoing research activity. We are continually adding new features and testing it with different
datasets. For our ﬁrst prototype we indexed RSS feeds and
PDF documents. We have sourced from a variety of news
related RSS feeds, Amazon product feeds and country-wise
PDF reports from World Health Organization (WHO) [7].
The user interface for InfoMaps is based on the Weave
UI framework. Weave is a windowing environment where
each visual tool is available as a window panel and can be
moved around the workspace and resized as required. The
InfoMaps panel is implemented with the same features.
Weave is accessed through a web browser. The InfoMaps
tool can be added to a Weave visualization instance from the
menu bar or automatically set up via the admin console. In
our prototype, each document is represented by a thumbnail
image. The image could be a snapshot of the ﬁrst page of
the document or it could be an image available within the
document. The node is represented by keywords placed in
the middle of a rectangular space with icons to change the
settings of the node and to remove the node. Using drag-drop
interactivity, the nodes and the thumbnails can be moved
around the map. Figure 4 shows an InfoMaps panel with a
few nodes and thumbnails laid around the map.
The top left of the window panel has options for the user
to add query nodes. The text input allows the user to enter
a query. Clicking the Add button sends the query to Solr
server hosting the indexed dataset. A node is added to the
panel and when the Weave application receives the result set
of documents, the thumbnails of the documents are plotted

Architecture of Weave

identiﬁes each and every document in a data source. As in
the World Wide Web (WWW), we extend the concept of
a unique address for a web page to any document that is
considered as a source within the InfoMaps framework. If
the source is a web page then the URL is the actual domain
address of the web page. If it is a ﬁle in a network repository
then the URL will be the IP network address of the ﬁle and
so on.
(ii) Title: This is simply the title of the document. In the
case of ﬁle documents it could be the ﬁle name or it could
be the main header title of the document. The title doesn’t
have to be unique but it helps the user to quickly understand
what the document is about.
(iii) Description/Summary: This could be a brief summary
of the document which could be provided by the user or it
could be extracted from the document using summarization
techniques. This could also be the complete textual content
of the document.

276

Figure 4. An InfoMaps Panel. The panel contains 5 nodes with query terms: bluray, Information Retrieval, document visualization, HCI and Visualization.
The documents relevant to the query terms are represented as image thumbnails and grouped together around the node. The documents are sourced from
Amazon Product Feeds, IEEE Journals, articles from ACM and more. They are laid out radially, horizontally or in a simple grid format. The background
image has 2 shelves for Movies and Books. The user has selected to move some documents of interest from the nodes to the shelves. A popup summarizes
the document when the mouse is moved over the thumbnail. At the top portion of the panel, the user has options to add queries and ﬁlters.

opens the Settings panel. The Settings panel of the InfoMaps
tool allows the user to upload an image to be set as the
background image for the map. There are options to select
the border colors of the nodes and the thumbnails. In the
node settings panel, the user can change the query, change
the layout of the thumbnails, identify the list of sources to
query from and add a ﬁlter within a particular date range. So
each node can be directed to run its queries on selective data
sources instead of querying the entire repository. Each node
also has its own date ﬁlters, and each can use a different
layout schema. Date ﬁlters can be set as date ranges or they
can be set to simply show documents from last 3 days, last
month or last year.

around the node based on a layout algorithm. Figure 5 shows
a few of the different layouts available. We currently support
grid, horizontal, vertical, cascaded and radial layouts. The
documents can be laid out temporally or based on their
strength of the query match.
At the top right, the user can perform a search and add a
date ﬁlter on all or few selected nodes. A search is different
from a query. When a query is made it is sent over to the
Solr server to query the indexed data repository whereas a
search is a restricted query only across the result set on the
map. As the user enters the query the document thumbnails
matching the search term are made visible whereas the rest
of the result set are made invisible. So a user can quickly
identify speciﬁc documents. When the mouse hovers over
a thumbnail, a popup shows the title, a brief summary, a
larger thumbnail as well as the modiﬁed/published date of
the document. Double clicking on the thumbnail will open
the web page in a new browser tab/window.

The interface is interactive. Each and every node and
thumbnail added to the map can be dragged and dropped
anywhere within the map and its new location is persistent.
If a user ﬁnds an interesting document and wants to easily
retrieve it for later referral then the document can be placed
in a location that makes it stand out. These documents can
be highlighted by the user. Documents can be repeated in

A wrench button is available at the top left corner of the
InfoMaps panel and also on each the nodes. This button

277

Figure 5. Different layout modes where selected documents are highlighted with a red border. The node at the bottom right is a link node which opens
another conﬁgured InfoMaps panel.

the session state through a user interface. All required UI
settings are ”sessioned” and thus can be saved for future
use.

different nodes and so the highlighting is reﬂected across
all the nodes. When a document is highlighted the color of
its border is distinctly different from other thumbnails. The
highlight color defaults to red but can be changed by the
user from the Settings panel.
Nodes can also be selected to perform a search or apply
a uniform date ﬁlter. A selected node has a different border
color from the unselected nodes and this color can also be
set from the Settings panel.
Besides query nodes, users can also add a link to another
map panel. Visually they appear the same as a query node
but when the user clicks on the link node they open the
other InfoMaps panel. This map can have nodes and queries
of its own. Thus, maps can be linked to other maps. A
single instance of Weave can have as many maps as the
user desires.
Once a map has been conﬁgured, the Weave framework
allows the user to save the current session state in an XML
ﬁle. The user can then load the same map through any
browser by connecting to a server hosting Weave and loading

V. I NTEGRATING WITH W EAVE
InfoMaps by itself is not a novel concept. Similar systems
have been built before, but the Weave framework provides
two key features to InfoMaps, which extend previous VIRI
implementations. These are discussed brieﬂy in the following two sections.
A. Linked Data Analysis
The Weave framework provides multiple coordinated
views of the data sets through a variety of visual tools.
Information from the document repository can also be
viewed on other tools such as maps, scatterplot, line chart,
bar chart, etc. Users can analyze the information through
these different views and detect patterns, trends and explore
further based on area of interest.

278

D. Sharing Maps

Users can visualize the documents not only through
InfoMaps but they can also use these other visual tools and
gain different insights into the document data set. Document
attributes like author, date published, etc., can be used as
dimensions on visual tools and provide different views of
the documents. Multiple coordinated views for document set
have been implemented before e.g. in MedioVis [28]. But
Weave supports loading data sets from multiple sources. A
Weave user can analyze any data set and search for related
document sets through the InfoMaps tools. As shown in
Figure 6, data records can be selected from visual tools and
entity values from the records are used as query terms to
send to the InfoMaps tool.
We also can extract named entities from the document
collections and establish relationships between the entities.
These relationships can be used to visualize on the other
visual tools and compared with other data sets for analysis
and validation.
We believe that this combination of a visual analysis tool
with an information-gathering tool will be very useful to the
scientiﬁc research community.

Weave’s session state can be exported to an XML ﬁle.
Any user running Weave on any other machine can load
the XML ﬁle and view the visualization. When a user has
created a map, the user may choose to send the saved session
ﬁle to other Weave users to share their layout. The user can
have multiple windows open with each window running its
own instance of Weave and can load different maps in each
instance for comparison and further analysis.
E. Saving Visual Parameters
One of the main features of InfoMaps is that the user
can deﬁne the positions of the nodes and documents computationally (such as with a force directed layout as in
RadViz or VIBE [12]) and place them anywhere on a map
manually or both. When the user opens the map again the
positioning of the documents is persistent. By storing these
visual parameters in Weave’s session state, the positions are
saved. So when the user opens an instance of Weave using
the saved session state the user views the saved layout. Other
operations such as document highlighting, subset ﬁltering
and selection operations are also saved and displayed when
the map is loaded.
The user can create multiple maps in a single instance
of Weave. Each map will have its own set of queries that
the user wants to keep track of. After the initial result
set, the maps will still run queries based on a user-deﬁned
schedule. Any new documents added to the result set will
be highlighted. In our current implementation, the document
thumbnail is animated by a glow feature with a unique color.
When the user saves the session state, the current result set
is saved in the session state. The next time the user loads
this session state, the queries run immediately. If there are
new documents in the result set compared to the result set
in the saved session state then they are highlighted. Thus
the user can easily keep track of new documents and be up
to date with the latest information from the selected data
sources.

B. Session Framework
Another key feature of InfoMaps is its support for managing session states. A session state in Weave holds all the
required information to represent the current instance of the
visualization. A session state can be saved and the associated
XML ﬁle can be hosted on a server and shared with other
users. The next sub-sections describe the advantages of using
session states in detail.
C. Recording User’s Retrieval Process
Information retrieval is an iterative process. The user
formulates a query and analyzes the result set. During
the analysis process the user might see the desired result
or highlight some important documents or reformulate the
query or make a new query. This process of information
analysis and discovery may prove very useful to analyze
and understand the needs of the users. It may also help
in designing a retrieval strategy for other users by learning from other experienced users. User interactions on the
InfoMaps panel are recorded in the session state. The Weave
framework stores the set of sequential states required to
transition between any two session states and provides tools
to play through the session states. It supports undo and
redo operations on the session states. Anyone can load
the saved session state for an InfoMaps tool and analyze
the retrieval process. Analyzing and studying the retrieval
process for any user is also available through our InfoMaps
tool. This feature would also be useful for the user to move
backward or forward to a desired session state during the
retrieval process. This way the user does not get ”lost” when
analyzing the data set and can always retract the steps taken
before arriving at the current state.

VI. R ELATED W ORK
One of the most common methods of visualizing documents is to display a list of document icons within a folderlike structure. This concept was ﬁrst introduced in Xerox
PARC and later integrated into Apple’s Lisa computer [9].
It is still used in current desktop systems. This form of hierarchical arrangement of documents is a common approach
but there are some known drawbacks. Since documents and
information are added daily, it becomes cumbersome to
create new folders and re-categorize documents. This results
in creation of too many folder hierarchies and a general
feeling of untidiness [10].
SemNet [11] and VIBE [12] were some of the earliest
systems to use visualizations for visualizing documents.
SEMNET was a 3D visualization system developed mainly

279

Figure 6. The InfoMaps panel linked with other visual tools available in Weave. The user can select data records from the visual tools, right click and
select Send Query to InfoMaps. The entity values are extracted from the data records and a query is sent through the InfoMaps tool. Here, a selection is
made on the map tool. The extracted entity values for these records are California and Nevada. The query returned 2 relevant documents.

their information based on themes, type, etc. InfoMaps
provides similar ﬂexibility through maps. User can create
many maps in a single instance of Weave and also have
links to other maps within a map.
Some of these applications use 3D visualizations but they
are known to have a higher cognitive load as compared to
2D visualization as listed in [20] and [21]. Weave currently
does not support 3D visualizations.
Information Landscapes deal with mapping non-structured
data like documents with spatial metaphors for visual display. Spatial concepts like distance, scale and layout are
mapped to a graphical display to visualize documents. Fabrikant, et. al. [29] use a combination of tree graph, list and
landscape visualizations to visualize a large digital collection
in a library. SPIRE [22] uses text analysis and semantic
information to plot ”galaxies” of documents. It uses a visualization called ThemeScape to depict theme strength using
elevation in a landscape and using valleys, peaks, cliffs,
and ranges to display interrelationships between documents
and themes. Cat-a-cone [23] uses cone tree visualizations
for viewing hierarchy of documents. InfoSky [24] combines
a tree browser with a galaxy view of the documents. The

to address the problem of understanding the relationship
and structure of large arbitrary knowledge bases. SEMNET
placed highly related elements closer together while keeping
the unrelated elements as far apart as possible. VIBE was
used to visualize the explicit and the implicit links within a
large document collection. The user’s query called the Point
of Interest (POI) could be placed anywhere on the display
screen. Many POIs could be added and the documents’
position on the display screen was evaluated based on all
the POIs. Both these systems have automatic layout of
documents based on relatedness/similarity. LifeStreams [13]
uses temporal information of documents to visualize emails
and other personal documents. FacetMap [14] uses bubble
areas to layout documents based on facets such as time,
document type, author, etc. VisMe [15] and MyLifeBits [16]
use timeline to visualize documents.
InfoMaps is more ﬂexible. The documents can be laid out
based on facet values and at the same time the user has the
ﬂexibility to move the documents to desired locations.
Few systems like Information Workspace [17], Rooms
[18], WebBook and WebForager [19] segregate the documents into different regions. This allows the user to organize

280

session-based and so users can save the information retrieval
process in the InfoMaps tool as a session state and replay and
share with other users. Weave is available at OICWeave.org.

documents are displayed as stars and clustered based on
similarity. INSPIRE [25] uses a city metaphor and visualize
documents as streets and buildings.
InfoMaps uses similar spatial metaphors such as distance
(grouping documents around a node), landmarks (node
placement based on background images), etc.. Documents
can be geocoded and visualized on the geographical map
tool. Some of these visualizations use 3D landscapes but
the problems associated with such visualizations have been
mentioned earlier.
Workscape [26] and Data Mountain [27] are two applications that are similar in implementation to Weave.
Workscape visualizes documents as thumbnails and allows
the user to move them in X,Y and Z dimensions. It uses a
scripting environment to run user deﬁned scripts to query
the data repository.
Data Mountain represents a document collection in 3D
using the thumbnails of each document. Clicking the thumbnails makes the page move to the front with a larger
view of the document. The thumbnails can be dragged and
placed anywhere in the 3D space. Visual and audio cues
are provided to aid the user with location and movement of
the thumbnails. Workscape does not provide the ability to
add a background image for landmarks but Data Mountain
does. Both these systems allow user deﬁned positions for the
document but do not provide support for algorithmic layout
of document.
None of these applications show support for saving and
sharing session states. They do not provide support for redo
and undo operations and replaying the user retrieval process.

R EFERENCES
[1] Earl Hunt and David Waller. Orientation And Wayﬁnding: A
Review. 1999.
[2] Darken, R. and Sibert, J. L. Navigating large virtual spaces.
International Journal of Human-Computer Interaction, 8, 4972. 1996.
[3] Thorndyke, P. W. and Hayes-Roth, B. Differences in Spatial
Knowledge Acquired from Maps and Navigation. Cognitive
Psychology, 14, pp. 560-589, 1982.
[4] Baumann, A. and Duﬁlie, A.S. and Kolman, S. and Kota, S.
and Grinstein, G. and Mass, W. Exploratory to Presentation
Visualization, and Everything In-between: Providing Flexibility in Aesthetics, Interactions and Visual Layering. 15th
International Conference on Information Visualisation (IV),
2011.
[5] Apache Solr url:http://lucene.apache.org.
[6] Apache Lucene url:http://lucene.apache.org.
[7] WHO url:http://www.who.int/gho/countries/en/.
[8] World Bank url:(http://data.worldbank.org/).
[9] Ludolph, F. and Perkins, R. The lisa user interface. In CHI 98
conference summary on Human factors in computing systems,
CHI ’98, pages 1819, New York, NY, USA. ACM. 1998.

VII. F UTURE W ORK
[10] Boardman, R., Spence, R., and Sasse, M. A. Too many
hierarchies? the daily struggle for control of the workspace.
In Mathematical Models, Proceedings of the ACM CHI96
Conference, pages 406412. ACM PRESS. 2003.

We plan to expand InfoMaps by adding a number of
other data types and sources. We showed our support for
RSS feeds and rich text documents but we also plan to
support local ﬁle systems, relational databases, semantic
knowledgebase, and other web services. In our current
prototype, the user enters a query in the text box and views
the result set. There is currently no support for keyword
suggestion. We will be adding support for query formulation
and guide users in their retrieval process. We are working
on addtional layout algorithms based on similarity and other
document attributes and facets.

[11] Fairchild, K. M., Poltrock, S. E., and Furnas, G. W. SemNet:
Three-dimensional graphic representation of large knowledge bases. In Guindon, R., editor, Cognitive Science and
its Applications for Human- Computer Interaction, pages
201233. Lawrence Erl- baum Associates, Hillsdale, New
Jeresy, U.S.A.1988.
[12] Olsen, K. A., Korfhage, R., Sochats, K. M., Spring, M. B.,
and Williams, J. G. Visualization of a document collection:
The vibe system. Inf. Process. Man- age., 29(1):6981.1993.

VIII. C ONCLUSIONS
In this paper, we introduced the concept of InfoMaps
and discussed the implementation of our current prototype
using the Weave visualization framework. InfoMaps is a
powerful tool for document visualization and analysis. Integrating InfoMaps with Weave’s framework gives the user
an interactive document visualization tool for information
management. The tool is linked and coordinated with other
visual tools and allows the user to perform data analysis
on the document set and also with other data sets. Weave is

[13] Scott Fertig, Eric Freeman, and David Gelernter. Lifestreams:
an alternative to the desktop metaphor. In Conference companion on Human factors in computing systems: common
ground (CHI ’96), Michael J. Tauber (Ed.). ACM, New York,
NY, USA, 410-411. 1996.
[14] Smith, G. and Czerwinski, M. and Meyers, B.Robbins. and
Robertson, G. and Tan, D.S. FacetMap: A Scalable Search
and Browse Visualization. Visualization and Computer Graphics, IEEE Transactions on , vol.12, no.5, pp.797-804. 2006.

281

[15] Paulo Gomes, Sandra Gama, and Daniel Gonalves. Designing
a personal information visualization tool. In Proceedings of
the 6th Nordic Conference on Human-Computer Interaction:
Extending Boundaries (NordiCHI ’10). ACM, New York, NY,
USA, 663-666. 2010.

[27] Robertson, G., Czerwinski, M., Larson, K., Robbins, D. C.,
Thiel, D., and van Dantzich, M. Data moun- tain: using
spatial memory for document management. In Proceedings of
the 11th annual ACM sympo- sium on User interface software
and technology, UIST ’98, pages 153162, New York, NY,
USA. ACM.1998.

[16] Jim Gemmell, Gordon Bell, Roger Lueder, Steven Drucker,
and Curtis Wong. MyLifeBits: fulﬁlling the Memex vision.
In Proceedings of the tenth ACM international conference
on Multimedia (MULTIMEDIA ’02). ACM, New York, NY,
USA, 235-238.2002.

[28] Mathias Heilig, Mischa Demarmels, Werner A. Knig, Jens
Gerken, Sebastian Rexhausen, Hans-Christian Jetter, and Harald Reiterer. MedioVis: visual information seeking in digital
libraries. In Proceedings of the working conference on Advanced visual interfaces (AVI ’08). ACM, New York, NY,
USA, 490-491. 2008.

[17] Card, S. K., Robertson, G. G., and Mackinlay, J. D.The information visualizer, an information workspace. In Proceedings
of the Conference on Human Factors in Computing Systems:
Reaching Through Technology, pages 181186, New York, NY,
USA. ACM. 1991.

[29] Fabrikant, S., and Buttenﬁeld, B.P.Envisioning User Access
to a Large Data Archive. Paper presented at GIS/LIS 97,
Cincinnati, OH. 1997.

[18] Henderson, Jr., D. A. and Card, S.Rooms: the use of multiple virtual workspaces to reduce space contention in a
window-based graphical user interface. ACM Trans. Graph.,
5:211243. 1986.
[19] Card, S. K., Robertson, G. G., and York, W. The webbook and
the web forager: an information workspace for the worldwide web. In Proceedings of the SIGCHI conference on
Human factors in computing systems: common ground, CHI
’96, pages 111ff., New York, NY, USA. ACM. 1996.
[20] Westerman, S. J. A comparison of the cognitive demands
of navigating two- vs three-dimensional spatial database
layouts. Ergonomics, 41, 207-216.1998.
[21] Marc M. Sebrechts, John V. Cugini, Sharon J. Laskowski,
Joanna Vasilakis, and Michael S. Miller. Visualization of
search results: a comparative evaluation of text, 2D, and 3D
interfaces. In Proceedings of the 22nd annual international
ACM SIGIR conference on Research and development in
information retrieval (SIGIR ’99). ACM, New York, NY,
USA, 3-10. 1999.
[22] Wise, J.A.; Thomas, J.J.; Pennock, K.; Lantrip, D.; Pottier,
M.; Schur, A.; Crow, V. Visualizing the non-visual: spatial
analysis and interaction with information from text documents. Information Visualization, 1995. Proceedings. , vol.,
no., pp.51-58, 30-31 Oct. 1995.
[23] Marti A. Hearst and Chandu Karadi.Cat-a-Cone: an interactive interface for specifying searches and viewing retrieval
results using a large category hierarchy. SIGIR Forum 31, SI
(July 1997), 246-255.1997.
[24] Tochtermann, K, Kappe, F., Droschl, G., Kienreich, W.,
Sabol, V., Becker, J., Andrews, K., Granitzer,M., Auer, P.
InfoSky: Visual Exploration of Large Hierarchical Document
Repositories. Proc. of HCI 2003 International, Crete, Greece.
2003.
[25] Ruddle, R.A. INSPIRE: A New Method of Mapping Information Spaces. Information Visualisation (IV), 2010 14th
International Conference , vol., no., pp.273-279, 26-29 July
2010.
[26] Lucas, P. and Schneider, L. Workscape: a script- able document management environment. In Plaisant, C., editor, Conference on Human Factors in Computing Systems, CHI 1994.

282

