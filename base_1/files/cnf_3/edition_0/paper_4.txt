2012 16th International Conference on Information Visualisation

Implementation and Evaluation of an Enhanced
H-Tree Layout Pedigree Visualization
João Miguel Santos (1), Paulo Dias (1,2), Beatriz Sousa Santos (1,2)
Department of Electronics Telecommunications and Informatics, Univ. Aveiro, Portugal
(2)
IEETA / Institute of Electronics Engineering and Telematics of Aveiro, Portugal
{miguelsantos@ua.pt, paulo.dias@ua.pt, bss@ua.pt}

(1)

global view of the family structure which may facilitate
pattern detection or phenomenon discovery, as opposed
to a series of partial views of the same information,
which may hide these patterns or phenomena.
To overcome the limitations of the classic methods,
Tuttle, Nonato and Silva [1] have proposed a pedigree
visualization method based on the H-Tree Layout. This
layout allows the representation of a greater number of
generations simultaneously, although it accomplishes
this at the cost of an increased difficulty when it comes
to the identification of the family relations amongst the
represented individuals.
In this paper, we propose a set of improvements to
the H-Tree Layout pedigree visualization method to help
overcome some of its limitations and difficulties. In
section 2 we will contextualize the concepts relevant to
family tree visualization and present a brief review of the
published related work. In section 3, we will present an
implementation of the proposed enhancements. In
section 4, we will describe the preliminary evaluation
carried out to assess the effectiveness and efficiency of
the enhanced pedigree visualization method and report
its main results. Finally, in section 5, we will present our
conclusions and suggestions for future work.

Abstract
The constant growth of available genealogical
information has encouraged the research of visualization
techniques capable of representing the corresponding
large amount of data. An H-Tree Layout has been
recently proposed to represent pedigree data as a way to
overcome some of the limitations of traditional
representations. However, this new method has its own
limitations which may hinder its adoption.
In this paper, we propose some enhancements to the
H-Tree Layout pedigree visualization method in order to
overcome some of the identified limitations. An
implementation of the proposed enhancements and
results of a preliminary evaluation are also provided.
Keywords: Genealogy, pedigree, H-Tree Layout,
information visualization.

1. Introduction
The amount of genealogical data available in digital
form has been constantly increasing in recent years.
There are now several applications for managing
genealogical data available for little or no cost and many
websites provide genealogical and historical information
which can be collected and organized in these
applications. Coupled with the fact that applications
normally provide tools to export the compiled data, this
has created an explosion of available genealogical
information.
The possibility of deeper and more complete family
tree construction raises some issues when it comes to the
visualization of this information, since the traditional
methods are only capable of representing a limited
number of generations simultaneously. Publicly available
genealogy applications typically address this problem by
combining the representation of a small amount of
generations at each time with techniques such as
zooming, panning and interactive navigation to allow the
exploration of the family structure. Though these
techniques alleviate the problem, there are situations
where a holistic vision of the whole family structure
would be preferable. For instance, when studying
genetically transmitted diseases or tracing genetic
characteristics of individuals it is desirable to have a
1550-6037/12 $26.00 © 2012 IEEE
DOI 10.1109/IV.2012.15

2. Contextualization and related work
The term "pedigree" carries some ambiguity, as it is
used in the literature to refer to several types of family
trees. In this paper, we will use the term to specifically
denominate ancestor trees, that is, the trees which
contain the ancestors of a certain individual, known as
the root or central individual of the pedigree.
That individual will contain connections to his/her
direct ancestors, the parents, which in turn will contain
connections to their parents, and so on, recursively.
Naturally, a binary tree data structure is normally used to
represent this information, since this structure organizes
data in the exact same way: each node (or element)
connects to two nodes which, in this case, represent the
parents of the individual.
The traditional pedigree visualization method
consists of a node-link representation, in which each
individual is represented by a rectangle or ellipse and is
linked to his/her direct ancestors (parents) by edges, or
24

arcs (note that the descendents of a tree node actually
represent the ancestors of the corresponding individual).
The individuals are positioned on the available space
using Reingold and Tilford's algorithm [2] or
derivations: the root individual is placed on the extreme
left of the space, his/her direct ancestors are placed to the
immediate right, and so on recursively up to the last
generation intended for representation. Using this layout,
each generation is positioned on a "column" to the right
of the previous generation, as exemplified in Fig. 1.
A common variant of the horizontal distribution just
described is the vertical distribution. In this case, the root
individual is placed at the bottom of the space and
his/her parents are placed above, processing the
remaining generations recursively up to the last. Another
variation based on the horizontal layout places the root
individual at the centre of the space and positions each of
the parents on the left or right of the individual according
to convention. This splits the ancestors in two branches:
the father's ancestry is represented to one side and the
mother's to the other. This variation is known as Bowtie,
since the visual representation reminds of its shape.
A vertical variation of the Bowtie can also be used, and
is normally referred to as an Hourglass pedigree.
This family of representations has some advantages:
they are easily comprehended by the user and allow
immediate identification of which generation an
individual belongs to (by simply counting the
"rows"/"columns" where the individual is represented).
However, Johnson and Shneiderman [3] point out that
these representations make very inefficient use of the
available space, normally allocating around 50% of that
space to the background colour. Some variants disguise
this inefficiency by allocating more space to the
individuals of the first generations and gradually less
space to the last generations or by collapsing the space of
missing individuals. Still, the number of representable
generations within the space ultimately depends on the
number of individuals present in the last generation.
Given that the data structure is a binary tree, this number
grows exponentially, causing the required vertical space
(in horizontal pedigrees) or horizontal space (in vertical
pedigrees) to double at each additional generation.

An alternative pedigree visualization method, which
adapts the principles of Sunburst [4] to the context of
genealogy, has been gaining popularity and adoption
amongst users and software packages. This method is
known as Fan Chart [5], due to its visual appearance
similar to that of a wind fan. The root individual is
represented as a circle in the centre of the space and
his/her parents are represented in an outer ring divided in
two sections, one for each parent. The next generation is
represented in a further outer ring, now divided in four
sections, one for each grandparent. The rings are divided
in such a way that the parents of an individual can be
found on the angular space of that individual (see
example in Fig. 2). A convention is used to specify
which gender is placed on which side (generally, the
father is placed on the right and the mother on the left).
In this representation, each additional generation
simply requires the presence of a further outer ring, thus
the space needs are attenuated when compared to the
traditional visualization method. Furthermore, the Fan
Chart uses almost all of the available space (except for
the "corners") without compromising the user
comprehension of the family structure. Since the
ancestors are stacked on the same angular space as the
descendant, it is still very easy to identify the family
relations. The generation to which an individual belongs
is also easily identifiable by simply counting the number
of rings up to the individual. However, the number of
representable generations is conditioned by the available
angular space, which is halved at each additional
generation: 180° for each element of the 2nd generation,
90° for each element of the 3rd generation, and so on. On
an eight-generation pedigree, each individual of the last
generation is allowed a mere 2.8° section, which may
prove insufficient when low-resolution devices are used.

Fig. 2 – Four-generation pedigree using the
Fan Chart visualization, obtained in [8]
TreeVis.Net [6], an online repository of tree
visualization methods, well expresses the interest in
recent years regarding tree representation: of the 227
techniques identified in January 2012, 121 have been
published from 2005 onwards. Nevertheless, the
commercially available software that we analysed [8, 9,
10, 11, 12] is essentially limited to the two techniques
just described, complemented with tools for panning,

Fig. 1 – Four-generation pedigree using a
traditional visualization, obtained in [8]

25

zooming and interactive navigation of the family
structure to alleviate the space limitations. Independently
of the efficiency of these techniques and tools, there are
certain scenarios where a holistic vision of the family
structure would be preferable, such as the study of
genetically transmitted diseases or characteristics.
Ideally, in these situations it should be possible to
simultaneously represent all the ancestors of an
individual and make full use of the available space.
Therefore, we will now consider tree visualizations
methods that make better use of the available space and
examine their applicability to the context of pedigree
visualization
The Treemap, a visualization method originally
proposed by Johnson and Shneiderman [3] that has been
subject to many adaptations, has the peculiarity of being
a space-filling "curve". This means that a Treemap will
occupy all of the available space, thus reducing waste
and potentially increasing the amount of information
simultaneously displayed to the user. However, as noted
by Stasko et al. [13], this method is more appropriate to
convey quantitative measures about elements in a
hierarchy than to express the hierarchy itself. According
to Nguyen and Huang [14], this is due to the absence of
explicit links between the elements, which may
encumber the user comprehension of the intrinsic
relations.
Nguyen and Huang [14, 15] propose a method for
the visualization of dense and large hierarchies which
uses a node positioning scheme that makes near-optimal
use of the available space. However, since nodes are
placed according to space availability, instead of a
pattern associated with an individual's generation or
his/her relation to other individuals, this technique may
produce pedigrees that are difficult to comprehend.
Additionally, we find that this method is more adequate
for trees where each node has many descendants and of a
varying number, rather than binary trees, as is the case
with pedigrees.
Crescenzi and Penna [16] use h-v diagrams to
represent binary trees. This type of representation has the
advantage of using all the available space even if the area
is not rectangular, as long as it defines a rectilinear
polygon [17]. As was the case with Nguyen and Huang's
method, we find that the main disadvantage of h-v
diagrams is that node positioning is dynamically
determined according to available space. If the binary
tree is not complete, the positioning in the resulting
layout is less intuitive and may be difficult to interpret by
the user, in the context of pedigree visualization.
Tuttle, Nonato and Silva [1] solve the problem of
h-v diagrams by positioning the nodes using an H-Tree
Layout. In this layout, the ancestors of an individual are
placed alternately in a horizontal and vertical manner,
according to the individual's generation, which confers
predictability to the layout (see example in Fig. 5). If the
ancestry is not complete, the space where an individual
would be placed is kept empty, thus maintaining the
global shape of the pedigree. When applied to complete
pedigrees (when all the ancestors are known up to a

certain generation), the H-Tree Layout produces a fractal
which is simultaneously a space-filling curve. Since this
layout makes better use of the available space, its space
requirements to represent a certain number of
generations are reduced when compared to both the
traditional and Fan Chart representations. We therefore
find great potential in this visualization method for
simultaneously representing many generations of a
pedigree and will focus the remainder of this paper on
the implementation and enhancement of Tuttle, Nonato
and Silva's proposal.

3. Implementation
Even though the H-Tree Layout offers great
potential for pedigree visualization, we have identified
some difficulties and limitations in the original proposal
by Tuttle, Nonato and Silva [1].
On the one hand, the element positioning makes it
difficult to immediately identify the generation to which
an individual belongs and what relation that individual
pertains to the root individual. Whereas in the traditional
horizontal representation each generation belongs to a
different column, and in the Fan Chart belongs to a
distinct ring, in the H-Tree Layout the generations are
dispersed in the space, only allowing the clear
identification of family relations for spatially close
individuals.
On the other hand, although the interactivity in the
original proposed implementation allows upwards
navigation (that is, it is possible to click on an ancestor
and make it the centre of the pedigree visualization), it
does not allow downward navigation (that is, it is not
possible to centre the pedigree on arbitrary descendents
of the represented individuals).
To overcome these difficulties, we propose the
following enhancements to the H-Tree Layout pedigree
visualization method:

26

•

Provide a contextual menu on each individual
which allows downward navigation to his/her
direct descendents, or children (see example in
Fig. 6);

•

Complement the information displayed on the
tooltip of each individual with the relation he/she
pertains to the central individual (see example in
Fig. 7);

•

Provide a "generation emphasis" tool that
highlights individuals belonging to generation n in
relation to the individual under the mouse cursor
(see example in Fig. 8). This allows, for instance,
the visual emphasis of all the great grandparents of
a given individual (with n=3) by fading all the
remaining individuals displayed on the pedigree.
This tool can also be used to quickly identify the
individuals that belong to the same generation as a
given individual (with n=0). This may prove
particularly useful for individuals of higher
generations and on complex pedigrees.

parents are represented to the sides of their descendant.
Again, by convention, males are placed on the left and
females on the right, using the same background colours
as before.

Our implementation makes use of standard computer
graphics libraries, namely OpenGL and GLUT. We have
used C# as a programming language, complemented with
the Tao Framework library [18] which supplies the
binding to OpenGL and GLUT. This library was chosen
because it offers Application Programming Interfaces
(APIs) that closely mimic those of OpenGL and GLUT.
As such, our implementation can easily be adapted to
other environments and/or languages.
«uses»

GedcomReader

Algorithm to draw an H-Tree Layout pedigree
Input: Person p (root individual of the pedigree)
DrawItem(p, 1)

Persons

Recursive function to represent the individuals
Input: Person p (individual to represent), int level
(generation of p relative to the root individual)

Person

function DrawItem(Person p, int level)
if level > max generations to display then
return
glPushMatrix // store transformation matrix
if level > 1 then
offsetX, offsetY Å calculate spacing of
 this item relative to previous item
glTranslated(offsetX, offsetY, 0)
draw rectangle and text of this item
if person.Father  null then
DrawItem(person.Father, level + 1)
if person.Mother  null then
DrawItem(person.Mother, level + 1)
glPopMatrix // restore transformation matrix

+ReadGedcomFile() : Persons
Mother

GlPedigree
+ShowPedigree()

CurrentPerson

Father

+Id : string
+Name : string
+Gender : char
+Birth : DateTime
+Death : DateTime

CurrentWorldItems

Fig. 4 - Pseudo-code of our algorithm to
draw an H-Tree Layout pedigree

GlWorldItem
+Rectangle : RectangleF
+Path : string
+Level : int

Children

The spacing between an individual and the
descendant depends not only on the generations of the
former, but also on the total number of generations
intended to represent. Expression (1) allows the
calculation of this spacing, given the generation of the
parent individual (n) and the total number of generations
to represent (k). The result of this expression is expressed
in "cells", where each cell represents the space occupied
by an individual. This space is constant for a given
global pedigree area and intended number of generations.

Person

Fig. 3 - Simplified class diagram of our
pedigree visualization implementation
Fig. 3 presents a simplified class diagram of our
implementation. There are two main operational
components: GedcomReader, responsible for reading
GEDCOM files [19] (the de facto standard for
genealogical data interchange) and GlPedigree,
responsible for the representation of pedigrees. Two
classes are used to maintain the genealogical
information: Person, representing a single individual,
and Persons, aggregating a collection of individuals
obtained from a file. Note that an instance of Person
keeps references not only to the direct ancestors but also
to the direct descendants, thus allowing immediate
access to those individuals. The GlWorldItem class
makes the link between visual elements of the pedigree
and the corresponding individuals.
Fig. 4 presents a simplified version of our main
algorithm for drawing an H-Tree pedigree. In accordance
with the original proposal, the root individual is
represented at the centre of the space (generation 1). The
parents (generation 2) will be represented above and
below their descendant, as will all individuals of even
generations. By convention, males are positioned above
and with a blue background, whereas females are
positioned below with a pink background. On the 3rd
generation, and on all remaining odd generations, the

(1)

An instance of GlWorldItem is created for each
individual added to the pedigree, making the link
between the coordinates of the visual element and the
corresponding individual. This allows the application to
react to the events generated by the user, such as the
mouse over an element (presents the information of the
individual on the screen and on a tooltip), the click on an
element (draws a new pedigree centred on the selected
individual) and the right-click on an element (presents
the contextual menu, allowing the navigation to the
children of the individual). If the generation emphasis
tool is in use, the mouse over an element highlights the
elements of the selected generation, by fading the
remaining elements.

27

The figures below demonstrate the main aspects of
our implementation of the H-Tree Layout pedigree.
Fig. 5 presents a six-generation H-Tree Layout pedigree,
Fig. 6 exemplifies downward navigation using a
contextual menu, Fig. 7 shows the family relation detail
on an element's tooltip and Fig. 8 demonstrates the
generation emphasis tool for the case of n=2, which
highlights grandparents of a selected individual.

4. Preliminary evaluation
4.1. Objectives and methodology
The enhancements we propose comprise two main
goals: to facilitate the user's comprehension of the family
structure inherent in the pedigree and to allow downward
interactive navigation. To determine the effectiveness
and efficiency of these enhancements we carried out a
preliminary evaluation, as follows.
Due to temporal and material limitations, we have
focused the evaluation on the aspects comparable to the
original proposal, namely those referring to the
comprehension of the family structure, and have chosen
to conduct a monitored evaluation session with a panel of
users. We prepared a set of tasks for identifying
individuals, given a family relation with the root
individual and, inversely, identifying the family relations
for given individuals. These tasks were carried out by the
users in three distinct contexts:
•

Using only features available in the original
proposal, which include arrows connecting each
individual to his/her parents and colouring of
individuals according to gender;

•

Using the original features combined with tooltips
that include the family relation that each individual
pertains to the root individual;

•

Using the original features combined with the
generation emphasis tool.

Fig. 5 – Six-generation pedigree using our
implementation of the H-Tree Layout

The panel of users consisted of 6 students of the
Information Visualization course from the Master in
Information Systems of the University of Aveiro.
Although convenience played some role in this choice,
the technical background of these students implies that
they have a good understanding of trees and hierarchies
and, therefore, we believe they meet the requirements to
successfully interpret pedigrees and family structures.
Each user executed a set of similar tasks on each of
the aforementioned contexts. To reduce the impact of the
learning effect, the order in which the tasks were
executed was randomized. Quantitative information
relative to the users' effectiveness and efficiency was
obtained by recording their answers to the tasks and the
time taken to provide those answers. Additionally,
observers took notes on interesting and relevant user
behaviour, such as delays, unexpected actions or the
need to ask for help. After performing the tasks, the users
answered a questionnaire, to evaluate subjective aspects
such as perceived ease, perceived usefulness and
preferences. The questionnaire included open fields
where users were invited to provide comments and
suggestions.

Fig. 6 – Detail of enhanced context menu
allowing downward navigation

Fig. 7 – Detail of enhanced tooltip displaying
the individual's family relation

4.2. Results
Taking into account the reduced dimension of the
user panel, these results should be interpreted as potential
tendency indicators rather than absolute conclusions.

Fig. 8 – Detail of generation emphasis tool
highlighting the grandparents (n=2)

28

In terms of effectiveness, we have found an
improvement on the number of correct answers when the
tooltips were used in conjunction with the original
features, independently of the nature of the task. On the
tasks related to the identification of an individual's
family relation, this combination obtained 100% correct
results, versus 83% obtained with the original features
alone. The combination of the generation emphasis mode
with the original features obtained similar results.
These results are in agreement with the perceived
ease reported by the users: they identify the tooltips plus
original features combination as the easiest mode of
operation. Additionally, when asked which features help
in the comprehension of the family relations, the tooltips
achieved the highest score.
In relation to efficiency, results were inconclusive.
This is partially due to the relative simplicity of the tasks
and to the imprecision of the time measuring methods.
We find that more rigorous testing will be necessary to
determine if user efficiency is affected by the proposed
enhancements, namely by defining more elaborate tasks
and by measuring time with greater precision.
Observers noted that some participants made use of
the arrows to follow the family structure, even when the
new features were available. More precisely, some users
followed the arrows to find the answer to the task and
then used the tooltip or generation emphasis mode to
confirm the answer. This suggests that the new features
may be useful to validate the user's interpretation of the
pedigree, which agrees with the increased effectiveness
previously reported. As for specific aspects of the
representation, participants reported that the size of the
arrows should be increased, which confirms the
importance given to this visual element.

References
[1]

[2]

[3]

[4]

[5]

[6]

[7]

[8]

[9]
[10]
[11]

5. Conclusions and future work

[12]

In this paper we have proposed enhancements to the
H-Tree Layout pedigree visualization method, in order to
overcome some of its limitations and difficulties. The
results obtained by a preliminary evaluation, conducted
with a panel of users, suggest that these enhancements
can increase user effectiveness, in terms of
comprehension of the family relations inherent in the
pedigree and, as such, may represent a useful addition to
the original proposal. In the near future, we intend to
conduct a broader evaluation of the proposed
enhancements and, in parallel, explore the applicability
and usefulness of the H-Tree Layout pedigree
visualization method in specific use contexts.

[13]

[14]

[15]

[16]

Acknowledgements
[17]

We express our gratitude to Dr. Joaquim Madeira
and all participants for their valuable contributions.
This work was partially funded by FEDER through
the Operational Program Competitiveness Factors –
COMPETE – and by National Funds through Foundation
for Science and Technology – FCT (references FCOMP01-0124-FEDER-022682 and PEst-C/EEI/UI0127/2011).

[18]

[19]

29

Tuttle, C.; Nonato, L. and Silva, C. “PedVis: A Structured,
Space-Ef¿cient Technique for Pedigree Visualization”.
In IEEE Transactions on Visualization and Computer
Graphics, vol. 16, n. 6, 2010, pp. 1063-1072.
Reingold, E. and Tilford, J. “Tidier Drawing of Trees”.
In IEEE Transactions on Software Engineering, vol. 7,
n. 2, 1981, pp. 223-228.
Johnson, B. and Shneiderman, B. “Tree-Maps: A SpaceFilling Approach to the Visualization of Hierarchical
Information Structures”. In Proceedings of the 2nd
conference on Visualization '91, 1991, pp 284-291.
Stasko, J. and Zhang, E. “Focus+Context Display and
Navigation Techniques for Enhancing Radial, SpaceFilling Hierarchy Visualizations”. In Proceedings of the
IEEE Symposium on Information Visualization 2000,
2000, pp 57-65.
Draper, G. and Riesenfeld, R. “Interactive Fan Charts: A
Space-saving Technique for Genealogical Graph
Exploration”. In Proceedings of the 8th Annual
Workshop on Technology for Family History and
Genealogical Research, 2008.
Schulz, H. “Treevis.net: A Tree Visualization
Reference”. In IEEE Computer Graphics and
Applications, vol. 31, n. 6, 2011, pp. 11-15.
Jürgensmann, S. and Schulz, H. “Treevis.net – A Visual
Bibliography
of
Tree
Visualization
2.0”.
http://treevis.net/ (visited Jan/2012).
Church of Jesus Christ of Latter-Day Saints, The.
“Personal Ancestral File”. http://www.familysearch.org/
(visited Jan/2002).
GenoPro. “GenoPro 2011”. http://www.genopro.com
(visited Jan/2012).
Millenia.
“Legacy
Family
Tree”.
http://www.legacyfamilytree.com/ (visited Jan/2012).
RootsMagic
Inc.
“RootsMagic
Essentials”.
http://www.rootsmagic.com/ (visited Jan/2012).
Wholy
Genes.
“The
Master
Genealogist”.
http://www.whollygenes.com/ (visited Jan/2012).
Stasko, J. [et al.]. “An Evaluation of Space-Filling
Information Visualizations for Depicting Hierarchical
Structures”. In International Journal of HumanComputer Studies, vol. 53, 2000, pp. 663-694.
Nguyen, Q. and Huang, M. “A Space-Optimized Tree
Visualization”. In Proceedings of the IEEE Symposium
on Information Visualization, 2002, pp. 85-92.
Nguyen, Q. and Huang, M. “Improvements of SpaceOptimized Tree for Visualizing and Manipulating Very
Large Hierarchies”. In Selected Papers from the PanSydney Area Workshop on Visual Information
Processing, vol. 22, 2002, pp. 75-82.
Crescenzi, P. and Penna, P. “Minimum-Area h-v
Drawings of Complete Binary Trees”. In Proceedings of
the 5th International Symposium on Graph Drawing,
1997, pp. 371-382.
Bagheria, A. and Razzazia, M. “Drawing Complete
Binary Trees Inside Rectilinear Polygons”. In
International Journal of Computer Mathematics, vol. 87,
n. 14, 2010, pp. 3138-3148.
Tao Framework Team. “The Tao Framework”.
http://sourceforge.net/projects/taoframework/
(visited
Jan/2012).
Church of Jesus Christ of Latter-Day Saints, The.
“Gedcom Standard Release 5.5.1”. 1999.

