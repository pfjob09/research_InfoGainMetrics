2012 16th International Conference on Information Visualisation

Ontology Visualization for Domain Experts: a New Solution
Sasa Kuhar, Vili Podgorelec
Faculty of Electrical Engineering and Computer Science
University of Maribor
Maribor, Slovenia
sasa.kuhar@uni-mb.si, vili.podgorelec@uni-mb.si

Knoocks [12], OntoTrix [13], MetNetGE [14] and Ontology
Explorer [15] are most interesting. Research work in the ﬁeld
has been done by Lanzeberger [16], who listed and described
the tools, Katifori [5] who provided extensive review of the
methods as well as their categorization, and Kriglstein [4],
who analyzed user requirements in ontology visualization.
Despite all available tools, all three of the above mentioned
reviewers concluded, that a powerful, intuitive and easy to
use visualization technique is still missing.
In this paper we present our solution to ontology visualization that would in our opinion ease the exploration of
ontologies. It embeds three view visualization that enables
the users to choose the most appropriate technique and
explore ontology from different perspectives simultaneously.
The graphics for visualizations and user interface were
carefully designed with gestalt principles and data-ink-ratio
methods in mind, focusing also on aesthetic aspect. We
believe that the clear design as well as much functionality
will support rapid information exploration and seeking.
The purpose of the paper is mainly to present a
new solution in ontology visualization. At this point no
evaluation of our approach has been made, but it is planned
for the near future. The paper is structured as follows.
Section 2 gives a short overview of existing visualization
techniques with their strengths and weaknesses. In section
3 we present user tasks and expectations and in Section 4
visualization and interaction requirements are explained. Our
solution together with detailed explanation of visualization
techniques and functionalities is presented in Section 5.
We discuss future work and conclude the paper in Section 6.

Abstract—In the last few years ontologies have emerged in
many ﬁelds as efﬁcient knowledge representation. Some of the
visualization tools that should ease ontology understanding
and exploration, are sometimes too complex to be used by
domain experts, or are too simple and do not support all
necessary user tasks. We present a multiple view visualization
tool, which enables users a good hierarchical and relations
overview as well as observation from different viewpoints. The
tool embeds hierarchical connected circle, indented tree and
node-link diagram. Basic and advanced functionalities allow
searching, location of interest, exploration and understanding,
while well thought design enables intuitive usage.
Keywords-Ontology visualization, hierarchical connected circle, aesthetics, gestalt principles

I. I NTRODUCTION
Vast amount of data that we produce every day has
become difﬁcult to manage or structure, therefore it is
harder and harder to search and retrieve relevant information. The semantic web is supposed to solve the problem
of information overload by giving the data meaning even
computers would ”understand”. The cores of semantic web
are ontologies, the term primary borrowed from philosophy.
According to Gruber [1] the ontologies are an explicit
speciﬁcation of a conceptualization. Noy and McGuinness
[2] deﬁned ontologies as a formal explicit description of
concepts, or classes in a domain of discourse. They are used
to formally describe sorts of objects, properties of objects
and relationships between objects and can therefore be used
for describing our knowledge about a certain domain [3].
In the last few years, ontologies have become popular in
different ﬁelds, as foundation for knowledge bases. They are
used in bioinformatics, business management, semantic web,
social networks, education [4], digital libraries and personal
information management [5].
With the help of visualization, users can comprehend and
understand abstract concepts. Visualization makes it possible
to obtain insight into complex data structures. Human unique
visual system enables us to detect interesting features and
patterns in a short period of time [6]. It is not surprising
that in last few years, many ontology visualization tools
have emerged. The most common are Prot´eg´e Class Browser
[7], Jambalaya [8], OWLViz [9], OntoViz [10], TGVizTab
[11] and many others. Among recent visualization solutions
1550-6037/12 $26.00 © 2012 IEEE
DOI 10.1109/IV.2012.67

II. O NTOLOGY V ISUALIZATION M ETHODS
Among different ontology visualization methods, nodelink diagram, indented tree, treemap and adjacency matrix
are the most popular. Node-link diagrams are an intuitive
way to show relationships between nodes [12], but can result
in many edge crossings, get cluttered very fast and are
difﬁcult to read [13], [17]. Also, the links may sometimes be
too long, making difﬁcult to follow them or distinguish them
from one another [12] (hierarchical edge bundles [18] partly
solve these problems). Indented trees offer good overview
of ontology structure, as the hierarchy levels are easily
363

IV. V ISUALIZATION AND I NTERACTION R EQUIREMENTS

distinguishable [5]. On the other hand, they are inefﬁcient in
screen real-estate use and are therefore only partially visible
at a given time [5], [19]. Treemaps and adjacency matrix
representations are efﬁcient, when size is important feature,
but often fall short to visualize the structure [19], [13], [17]
or non-hierarchical connections [14].
Connected circle is common among social network visualizations and can be used for ontologies as well. This
radial visualization method has advantage of giving an
overview of the whole cluster of connections [20]. One
drawback of connected circle visualization is that with
straight connections the interior becomes a cluttered cloud,
making certain relationships difﬁcult to spot [21].

Ontologies are difﬁcult to visualize especially because of
their complexity and usually large amount of data. They
can range from 100 to more than 100,000 nodes that are
already without any structure difﬁcult to visualize on limited
screen sources. Van Ham [29] proposes three solutions to
scalability issues: increase available display space, by either
using three dimensional and/or hyperbolic spaces, reduce
the number of information elements by clustering or hiding
nodes, or use the given visualization space more efﬁciently
by using every available pixel. Scalability issues in ontology
visualization require much thought in placing the graphical
elements efﬁciently and making the most use of available
space.
Visualization of ontologies is not an easy task. Katifori [5]
deﬁned six elements and their visualization requirements:
• Classes should all be displayed, providing at least their
name.
• Instances are in great number and present the core of
ontologies. The users are interested in them in most
cases.
• Taxonomy should be presented in a hierarchical view,
as this is essential for understanding the inheritance
relations between classes.
• Multiple inheritance (where a class has more, than
one parent) are usually presented by replicating child
nodes under all their parents.
• Role relations are essential, therefore the link and its
name should be visible.
• Properties of an entity are also very important and
visualizations should include them as well.
Ontology visualization tools are sometimes too complex
to be used by domain experts, or are so simple that they do
not implement essential elements [30]. Key features in ontology visualization must therefore be simplicity and intuition,
but not at the expense of functionality shortcomings. Tufte
[31], who contributed signiﬁcantly to designing effective
data presentation, introduced a data-ink ratio concept, which
is the key of simpliﬁcation and efﬁciency in data visualizations. In visualization, the data-ink is non-erasable core, used
for the presentation of raw data and non-data-ink is used
for scales, labels and edges. Visualization designers should
always strive to delete as much non-data-ink as possible and
draw the viewer’s attention by emphasizing the data-ink. All
the pixels on a graphic should have a reason and that reason
should be the presentation of new information. This concept
should always be borne in mind while designing ontology
visualizations, as it can greatly contribute to simpliﬁcation
of vast data presentation.
None of the authors in the ﬁeld of ontology visualization
have to our knowledge written about the gestalt principles
of graphic presentation. Gestalt Theory, originally described
in 1910 [32], attempts to explain the way people perceive

III. U SER TASKS AND E XPECTATIONS
In a survey conducted by Kriglstein [4] user expectations
on ontology visualization are collected. Most importantly,
users wish for a good overview on the one hand, as well
as detailed view with instances shown in context of the
whole ontology, on the other. They expect support for
browsing, adding/removing and hiding/showing elements.
Visualization should be simple, readable and ﬂexible, which
enables easy learning and understanding. They expect a good
solution in regard to very large ontologies and a good search
engine. All in all, ontology visualization should support
seven high-level tasks, proposed by [22]: overview, zoom,
ﬁlter, details-on-demand, relate, history, extract.
Different visualization methods focus on different representations, revealing varying concepts and enabling users
to perform different tasks. Some users may want a good
overview of network [14] and hierarchical structure [23],
some require information about classes [12], others are
interested in instances, their data-type properties and interconnections to other instances [24]. As a solution to
this, Katifori [5] and Lanzeberger [16] propose combination
of several views, known as multiple view technique [25].
This method not only enables users to choose the most
appropriate visualization for current needs [5], [26], but
it also improves user performance and enables discovery
of unforeseen relationships [27]. When implemented with
linked brushing (synchronized views), users can observe
particular subset of data from several perspectives [28].
Users are not only interested in exploration (being primary visualization feature), but also in communicating the
visualizations to others (e.g. in conferences, papers etc.) [6].
Presentation is an important feature, visualizations should
support.
Ontology visualization should therefore offer a good
overview and exact detailed information, it should
implement zoom, ﬁlter, search, history and at the same time
be simple and intuitive.

364

T Box

SEARCH

N
ZA
TIO
NI

E

GA

UT

OR

TIT

ER

OG

NF

SHOW

RA

CO

M

INS

LE

DEPA

R TM

COLLEGE

RESEARCH

WORK

DU

DU

RSE SE
COAUTE COUR

HE

GR A

SC

hierarchy levels:
instances:

ENT

A Box

FILTER

AR

instances:
properties:

TE

CH

NIC

AL

ZOOM

RE

PO

NA

ER

UR

P
PA

JO

PR

show all

hierarchy levels:

CE

collapse all

EN

hierarchy levels:

L
TI ART
CL IC
E LE

RE

SE

A

H
RC

GR

OU

UN

RT

P

IVE

RS

IT Y

½VKH\H
semantic zoom:

PUBL

ANIMATION
speed:
1

2

Organization

3

4

BOO

ICAT

CHA

K

IR

ION
MANUA

5

DEAN

L

College
Department
Institute
Program
Research Group
University

Person

Chair
Dean
Director

Employee

Administrative staff

DIRECTOR

SOFTWARE

Clerical staff
Systems staff

Faculty

Lecturer
Post Doc

Professor

Asistant Proffesor
Associate Proffesor
Chair
Dean
Full Proffesor
Visiting Proffesor

Graduate student

Student

Research assistant
Undergraduate Student

Teaching asistant

SPECIF
Article

ICATIO

ADM

Book
Manual
Software
Specification
Unnofficial Publication

Schedule

Graduate course

UNO

Research

FFIC

IAL

ATIO

LE

FF

ER

C

FULL PROFES

SOIR

OR

DE

OR

STU

SS

UA
TE

FE

AD

E

RO

GR

TP

R

ON

SO

RS

FES

PE

PRO

LT Y

TE
CIA

SOR

Figure 1.
selected.

IR

Software

Specification
Unnofficial
Publication

DEAN

Publication
Manual

U
FAC

Student
Research
Assistant
Conference
Paper

Article

CHA

Journal
Article
Technical
Report

Book

PROFES

RE

DE

DO

E STA

FF

E
OY
PL

UN

SO

Director

AS

Dean
Teaching
Asistant
Undergrad.
Student

ST

F

EM

Person

Graduate
Student

Graduate
Course

A

T

N
TA

Full
Proffesor

Course

Schedule

R
RG

EN

SIS

Visiting
Proffesor

UD

AS

Faculty

ST

FESS

Employee

Work
Research

E
AT
DU

PRO

H

ING

AC

VISIT

TE
Chair

NT

Clerical
Staff

Administrat.
Staff

Assistant
Proffesor

UR

STA

RATIV

T

Lecturer

Associate
Proffesor

Professor

CT

TEM

AL STAF

INIST

T

Post Doc
Dean

Chair

EN

Systems
Staff

University

Department

PO

TA
N

College

G
IN

UD

Research
Group

T

SIS

Organization

AS

N
TA
SIS

AS

Program

ST

black

Institute

S YS

N

CH

Course

LIC
PUB

AR

Work

CLERIC

N

Conference Paper
Journal Article
Technical Report

SE

Publication

Main window of proposed approach with the T-Box connected circle as currently selected visualization technique and Full professor class

animation, which enables users to follow the transition
path. Animation should be implemented with care, as it
can be time consuming or it can violate the apprehension
principle (hindering accurate perception) [34]. Animation
should help users to comprehend ontology and not cause
annoyance or delay while carrying out tasks.

and recognize patterns. Human mind interprets visual stimuli
as it naturally seeks order and patterns based on seven
rules: proximity, similarity, closure, symmetry, continuation,
common fate and ﬁgure-ground [33]. Also, in our opinion
more authors should consider aesthetics, when designing
visualizations. We found only one research mentioning
aesthetics in ontology visualization that focuses on graph
drawing [27]. Both, aesthetic and gestalt principles, should
be followed frequently when designing ontology visualization, as this would lead to more pleasing and intuitive
tools.

V. O UR S OLUTION
In this section our solution to ontology visualization is
presented. For ﬁgures, the ontology from Lehigh University
Benchmark (LUBM) [35] was generated, that consisted of
45 classes and subclasses and 1555 instances.

When navigation and interaction is implemented in
visualization tools, users can explore ontology, search for
speciﬁc nodes and focus on nodes of interest. On the other
hand, functionalities, such as retraction/expansion of nodes,
viewpoint movement, rotation and zooming can cause loss
of context and hinder users in creating a cognitive model
of ontology [5]. A possible solution to the problem is

A. Visualization Methods
Our solution is a three way multiple view, where user
can choose from hierarchical connected circle, indented tree

365

ION
TY

Hierarchy

Total Levels: 5

RSI

Person
Employee

IVE

ORG

ANI

ZAT

FULL PROFESSOR

UN

Faculty
Professor
Full Professor

DDCI EHA
RAE NIR
CT
OR

Properties

Total Properties: 14

Department
1

University

FF

237

A
ST
OR
FIFVE EE ESS OR
A
T
F
F SS
T
F
Y
A
S
O
R
LT TALO R FE
CAIS S RP T P O
RTIIENMERMEOACN E PR
ESM
U
L
STIAT
CASDY CSTTSID
LPEOASSOC LT YSOR
R
OI OR
AS CUFES
SS SS
FAPRO IR OFEROFE
AN R P
CDHEALL PING
FUISIT
V
PROFESSOR
Relations:
Children:
Instances:

Graduate Student
146

Full Professor

Research Assistant

10

39

Undergraduate Student
532

Teaching Asistant
29

Graduate Course
67

Datatype

15
6
34

Figure 2. Detailed view on connected circle in A-Box mode with basic
information about Professor class revealed.

and node-link diagram visualization methods. The views
are linked, which enables the user to focus on an element
from three different points of view. All changes made in
one visualization method are simultaneously visible on other
two. Figure 1 shows visualization tool with toolbox on
upper left corner, two currently not chosen visualization
methods below (indented tree and node-link diagram) and
the T-Box view of hierarchical connected circle as primary
visualization. The indented tree is most suitable for an
overview of the hierarchy, the node-link diagram eases nonhierarchical relations overview and the connected circle
offers the view of both. Node-link diagram and indented
tree diagrams are widely used in ontology visualization,
therefore well known to users and the hierarchical connected
circle offers new ways of ontology exploration and detection
of concepts of interest. With all three methods available,
the user can choose the most appropriate one for his or
hers tasks. All three methods are further explained in the
following sections.
1) Hierarchical Connected Circle: The hierarchical
connected circle (ﬁgure 1) clearly separates taxonomy and
role relations, therefore simplifying the formation of user’s
mental model. In the circle the taxonomy is drawn in circular
shape: classes of the highest level are on the outer most
ring and subclasses are placed towards the inner circle.
Inside circle, non-hierarchical connections are drawn, using
hierarchical edge bundles method [18] for clarity. The whole
color spectrum is used to simplify class recognition. The

Total Datatyes: 7

Datatype

Label

Domain

Range

Alowed values

Age
emailAddress
name
officeNumber
researchInterest
Telephone
title

Is age
can be reached at

Person
Person
Thing
Thing
Thing
Person
Person

String
Any
Any
String
Any
Any
Any

10 - 150

Figure 3.

name
office room No.
Is researching
telephone number
title

1 - 5000

Pop-up window for Full Professor class.

upper most level classes differ the most in color as the
most basic colors are chosen for them. Due to such layout
and color coding, the user can easily recognize parents and
children of a certain class.
The directions of inner circle connections are presented
with the color of the lines as they are of the same color
as the domain element (starting class). The thickness of
connections is calculated according to the amount of instances in one relation. On both ends, the lines are placed
one next to another, representing the sum of all instances
related to a class. When two classes are connected with
many relations, all links are drawn separately. With such
visualization the direction of the connection as well as the
amount of instances can be observed at a glance.
Names of classes are written outside the ring, high level
class being the most visible and others lightened more by
every hierarchy level. The dimming of classes reduces visual
clutter, without hindering the user in seeking information.
Name as well as basic information becomes visible once
the user points to a relation or a class (ﬁgure 2).
When selecting a class or multiple classes, only the
connections from and to those classes are visible (ﬁgure 1).
This way the user can explore and focus on the points of
interest, and seek the correlations among them.

366

1

2

3

4

5
Institute
Program

Thing

Organization

College
Department
Institute
Program
Research Group
University

Organization

Person

Research
Group

College

Chair
Dean
Director

Employee

Systems
Staff

Administrative staff

Clerical staff
Systems staff

University

Department

Post Doc
Dean

Faculty

Post Doc

Chair

Assistant
Proffesor
Asistant Proffesor

Chair

Associate Proffesor
Chair

Professor

Employee

Work

Dean
Full Proffesor

Faculty

Research

Visiting Proffesor

Visiting
Proffesor

Graduate student

Student

Lecturer

Associate
Proffesor

Lecturer

Professor

Clerical
Staff

Administrat.
Staff

Research assistant
Undergraduate Student

Full
Proffesor

Course

Person

Graduate
Student

Teaching asistant

Graduate
Course

Publication

Article

Dean
Teaching
Asistant

Conference Paper
Journal Article
Technical Report

Schedule

Director
Undergrad.
Student

Book
Manual
Software
Specification
Unnofficial Publication

Journal
Article

Student

Technical
Report

Research
Assistant

Book

Schedule

Conference
Paper

Article

Work

Course

Graduate course

Publication

Research

Manual

Figure 4. Indented tree diagram in T-Box mode and non-hierarchical
connections of ”Full Professor” visible.

Software

Specification
Unnofficial
Publication

Figure 5. Node-link diagram in T-Box mode, showing all the hierarchical
connections and the non-hierarchical connections of ”Full Professor” class.

Two arrangements of classes are possible: T-Box and ABox. T-Box view focuses on taxonomy and classes and
does not show instances. Classes of the lowest level are all
of the same size and their parents sizes are a sum of all
children. With T-Box view the information about amount of
subclasses can be gained at the ﬁrst glance.
A-Box view reveals instances and calculates the size of
a class according to the number of instances in that class
(ﬁgure 2). The instances are of darker color to differ from
classes. Many users are interested in instances alone or in
their relation to classes. With A-Box view users can gain an
overview of instances related information about classes.
The user can examine exact information either with mouse
on hover or with detailed information revealed in pop-up
windows (ﬁgure 3). In class pop-up window, the position
of class in the hierarchy is shown, all the properties from
and to the class are visible and detailed datatype information
is listed in the bottom. All connected classes as well as the
number of included instances are shown both graphically and
in number. Similar goes for property pop-up window, where
all connected classes and details are shown. Elements in
pop-ups have the same coding and color as in main window
and are fully functional, enabling the user to open other
pop-up windows, gaining more information on demand. It
is possible to have many pop-up windows at display at the
same time, as so the detailed information can easily be
compared. Pop-up windows are enabled in all three views.
2) Indented Tree: The indented tree in our solution is
slightly different version of standard tree diagrams with
more functionality. The classes and subclasses are shown
only with names in text, and are indented for a full length
of the upper class, as this way the hierarchy structure
is more visible. Text size depends on A-Box or T-box
selection, revealing either number of subclasses, or number
of instances. Gray net is drawn in the back to enclose classes
of same level and same parent. By selecting a class, non-

hierarchical connections became visible and on right click
one can hide or show the subclasses.
3) Node-link Diagram: The node-link diagram shows
hierarchical, as well as non-hierarchical connections. The
nodes are displayed as rectangles with names, their size
depending either on the level of hierarchy (T-Box) or the
number of instances (A-Box). In default view, the nodes
are optimally scattered in such way, that the links are the
shortest and have few crossings as possible. Also here,
the user can reveal further information with hovering and
clicking on elements.

B. Functionalities
The tool offers many interaction options that are
accessible with icons on the left side in the toolbox and
on the upper side of the main window. Advanced search
enables auto complete, with results showing both in text
(grouped in classes, instance and connections) and with
highlights in visualizations. The results can be ctrl+clicked
for multiple elements selection and can remain selected
throughout several searches. Sliders on the right enable
ﬁltering classes that have certain amount of subclasses or
instances. Users can show/hide hierarchy levels, instances
and properties. Furthermore, the ﬁsheye and semantic zoom
intensity (enabled in node-link diagram), and the animation
speed can be set. The options select, deselect, deselect all,
disable, collapse/show, collapse all and show all are possible
with right-click on desired element in all three visualization
methods.
In the left upper corner of main window icons for saving,
printing, snapshot, undo and redo are placed. On the upper
right corner the user can select among three different

367

Tufte’s data-ink ratio for simpliﬁcation as well as gestalt
principles for easy and intuitive understanding. Also, the
visualization is designed to aesthetically please the users.
In our opinion, especially domain experts would gain many
beneﬁts from such visualization tool.
Currently, the tool is available as a desktop application
and is implemented in Java. We plan to develop a fully
functional web application as well. One of the next steps,
beside implementation, is also thorough usability evaluation.

visualization methods as well as between A-Box and
T-Box presentation. When the user is switching between
views, animation helps him/her to keep the cognitive model
of the ontology. Users can, with the help of slider that
occurs on the bottom of the main window, access different
time-line stages and further investigate differences in views.
Staged animation [36] is implemented, enabling the user to
comprehend otherwise complex transition.
C. Visual Design

R EFERENCES

Some gestalt principles were followed while designing our
visualization. The classes of the same parent were grouped
according to the principles of proximity color similarity.
The color remains consistent among all three visualization
methods; therefore the same class can easily be noticed in
different method. With continuation principle in mind, the
names of classes were placed in outer circle, not crowding
the elements but still revealing their belonging to a certain
class. The principle of common fate is used in animation
among different visualization methods as the classes of the
same hierarchical levels are animated at the same time.
We followed the principles of data-ink method strictly
in visualization design, as well as in interface design. The
graphical elements are only of basic forms and solid colors.
The colors are used only for presenting the information;
everything else in user interface (eg. icons, sliders, text,
tables) is in shades of gray. The names of classes in
connected circle could easily get cluttered, therefore we
dimmed them by level (high level classes names are visible
all time). This way the user can focus on taxonomy and
still see most important information. The result is clean
visualization with emphasized information, user can rapidly
observe and process.

[1] T. Gruber, “A translation approach to portable ontology
speciﬁcations,” Knowledge Acquisition, vol. 5, no. 2, pp. 199–
220, Jun. 1993.
[2] N. Noy and D. McGuinness, “Ontology Development 101: A
Guide to Creating Your First Ontology,” 2001.
[3] B. Chandrasekaran, J. Josephson, and V. Benjamins, “What
are ontologies, and why do we need them?” IEEE Intelligent
Systems, vol. 14, no. 1, pp. 20–26, Jan. 1999.
[4] S. Kriglstein, “User Requirements Analysis on Ontology
Visualization,” in 2009 International Conference on Complex,
Intelligent and Software Intensive Systems. IEEE, Mar. 2009,
pp. 694–699.
[5] A. Katifori, C. Halatsis, G. Lepouras, C. Vassilakis, and
E. Giannopoulou, “Ontology visualization methods—a survey,” ACM Computing Surveys, vol. 39, no. 4, pp. 10–es,
Nov. 2007.
[6] J. van Wijk, “Views on visualization,” Visualization and
Computer Graphics, IEEE Transactions on, vol. 12, no. 4,
pp. 1000–433, 2006.
[7] N. Noy and R. Fergerson, “The knowledge model of Protege2000: Combining interoperability and ﬂexibility,” Knowledge
Engineering and Knowledge, no. 1, pp. 1–20, 2000.

VI. C ONCLUSION
This paper described a new approach in ontology visualization. Based on a literature review, ontology visualization
methods were analyzed and user tasks and expectations
were deﬁned together with visualization and interaction
requirements. The visualization is designed with domain
experts in mind that usually do not have the necessary
knowledge to work with existing ontology applications (even
though ontologies can be of much use in many ﬁelds).
We propose a multiple view with three different, but
interrelated ontology visualization methods. In our opinion,
the hierarchical connected circle has great potential, as
it offers good hierarchy, as well as relations overview at
the same time. Two other most common methods were
implemented, which offer users different viewpoints of the
ontology and support different user tasks.
Ontologies require much thought and design knowledge
when visualizing them, as they are complex and usually
contain many elements. In our approach we considered

[8] M.-a. Storey, M. Musen, J. Silva, and C. Best, “Jambalaya
: Interactive visualization to enhance ontology authoring
and knowledge acquisition in Prot´eg´e,” in Proc. of the Intl.
Workshop on Interactive Tools for Knowledge Capture (KCAP-2001), 2001, pp. 1–9.
[9] N. Drummond, “OWLViz,” 2006. [Online]. Available:
http://www.co-ode.org/downloads/owlviz/
[10] M.
Sintek,
“Ontoviz
tab:
Visualizing
Protege
ontologies,”
2003.
[Online].
Available:
http://protegewiki.stanford.edu/wiki/OntoViz
[11] H. Alani, “TGVizTab: an ontology visualisation extension for
Prot´eg´e,” in Knowledge Capture (K-Cap’03), Workshop on
Visualization Information in Knowledge Engineering, 2003.
[12] S. Kriglstein and G. Wallner, “Knoocks - A Visualization
Approach for OWL Lite Ontologies,” in 2010 International
Conference on Complex, Intelligent and Software Intensive
Systems. IEEE, Feb. 2010, pp. 950–955.

368

[13] B. Bach, E. Pietriga, I. Liccardi, and G. Legostaev, “OntoTrix:
a hybrid visualization for populated ontologies,” in Proceedings of the 20th international conference companion on World
wide web - WWW ’11, ser. WWW ’11. New York, New York,
USA: ACM Press, 2011, p. 177.

[25] M. Q. Wang Baldonado, A. Woodruff, and A. Kuchinsky,
“Guidelines for using multiple views in information visualization,” Proceedings of the working conference on Advanced
visual interfaces - AVI ’00, pp. 110–119, 2000.
[26] N. Henry and J.-D. Fekete, “MatrixExplorer: a dualrepresentation system to explore social networks.” IEEE
transactions on visualization and computer graphics, vol. 12,
no. 5, pp. 677–84, 2006.

[14] M. Jia, S. Swaminathan, E. S. Wurtele, and J. Dickerson,
“MetNetGE: Visualizing biological networks in hierarchical
views and 3D tiered layouts,” in 2009 IEEE International
Conference on Bioinformatics and Biomedicine Workshop.
IEEE, Nov. 2009, pp. 287–294.

[27] C. North and B. Shneiderman, “A Taxonomy of Multiple
Window Coordination,” University of Maryland, Computer
Science Department, College Park MD 20742, USA, Tech.
Rep., 1997.

[15] E. Archambault and O. H. Beauchesne, “Ontology
Explorer,” 2010. [Online]. Available: http://www.sciencemetrix.com/OntologyExplorer/#app=cde1&2171selectedIndex=3

[28] M. Ghanbari, “Visualization Overview,” in 2007 Thirty-Ninth
Southeastern Symposium on System Theory. IEEE, Mar.
2007, pp. 115–119.

[16] M. Lanzenberger, J. Sampson, and M. Rester, “Visualization in Ontology Tools,” in 2009 International Conference on Complex, Intelligent and Software Intensive Systems,
L. Barolli, F. Xhafa, and H.-H. Hsu, Eds. IEEE, Mar. 2009,
pp. 705–711.

[29] F. van Ham and J. J. van Wijk, “Beamtrees: compact visualization of large hierarchies,” Information Visualization, vol. 2,
no. 1, pp. 31–39, Mar. 2003.
[30] N. Catenazzi, L. Sommaruga, and R. Mazza, “User-Friendly
Ontology Editing and Visualization Tools: The OWLeasyViz
Approach,” in 2009 13th International Conference Information Visualisation, E. Banissi, L. Stuart, T. G. Wyeld, M. Jern,
G. Andrienko, N. Memon, R. Alhajj, R. Aslak Burkhard,
G. Grinstein, D. Groth, A. Ursyn, J. Johansson, C. Forsell,
C. Urska, M. Trutschl, F. T. Marchese, C. Maple, A. J. Cowell,
and A. V. Moere, Eds. IEEE, Jul., pp. 283–288.

[17] N. Henry, J.-D. Fekete, and M. J. McGufﬁn, “NodeTrix: a
hybrid visualization of social networks.” IEEE transactions
on visualization and computer graphics, vol. 13, no. 6, pp.
1302–9, 2007.
[18] D. Holten, “Hierarchical edge bundles: visualization of adjacency relations in hierarchical data,” IEEE transactions on
visualization and computer graphics, vol. 12, no. 5, pp. 741–
8, 2006.

[31] E. R. Tufte, The Visual Display of Quantitative Information,
2nd ed. Chesire: Graphics Pess, 2007.

[19] M. Bruls, K. Huizing, and J. Van Wijk, “Squariﬁed treemaps,”
in Proceedings of the joint Eurographics and IEEE TCVG
Symposium on Visualization. Citeseer, 2000, pp. 33–42.

[32] W. K¨ohler, “Physical Gestalten (Die Physischen Gestalten
in Ruhe und im stationaren Zustand),” in A sourcebook of
Gestalt psychology, W. D. Ellis, Ed. London: Routledge &
Kegan Paul, 1920, pp. 17 – 54.

[20] J. Bae and K. Lee, “TagReel: A Visualization of Tag Relations
among User Interests in the Social Tagging System,” in
2009 Sixth International Conference on Computer Graphics,
Imaging and Visualization. IEEE, Aug. 2009, pp. 437–442.

[33] A. Rusu, A. J. Fabian, R. Jianu, and A. Rusu, “Using the
Gestalt Principle of Closure to Alleviate the Edge Crossing
Problem in Graph Drawings,” in 2011 15th International
Conference on Information Visualisation. IEEE, Jul. 2011,
pp. 488–493.

[21] G. M. Draper, Y. Livnat, and R. F. Riesenfeld, “A survey of
radial methods for information visualization.” IEEE transactions on visualization and computer graphics, vol. 15, no. 5,
pp. 759–76, Jan. 2009.

[34] B. Tversky and J. Morrison, “Animation: can it facilitate?”
International Journal of Human-Computer Studies, vol. 57,
pp. 247 – 262, 2002.

[22] B. Shneiderman, “The eyes have it: a task by data type
taxonomy for information visualizations,” Proceedings 1996
IEEE Symposium on Visual Languages, pp. 336–343, 1996.

[35] Y. Guo, “the Lehigh University Benchmark (LUBM).”
[Online]. Available: http://swat.cse.lehigh.edu/projects/lubm/

[23] T. Wang and B. Parsia, “Cropcircles: Topology sensitive
visualization of owl class hierarchies,” The Semantic WebISWC 2006, pp. 695–708, 2006.

[36] J. Heer and G. Robertson, “Animated transitions in statistical data graphics.” IEEE transactions on visualization and
computer graphics, vol. 13, no. 6, pp. 1240–7, Jan. 2007.

[24] S. Kriglstein, “OWL Ontology Visualization: Graphical Representations of Properties on the Instance Level,” in 2010
14th International Conference Information Visualisation,
E. Banissi, S. Bertschi, R. Burkhard, J. Counsell, M. Dastbaz,
M. Eppler, C. Forsell, G. Grinstein, J. Johansson, M. Jern,
K. Farzad, T. F. Marchese, C. Maple, R. Laing, U. Cvek,
M. Trutschl, M. Sarfraz, L. Stuart, A. Ursyn, and T. G. Wyeld,
Eds. IEEE, Jul. 2010, pp. 92–97.

369

