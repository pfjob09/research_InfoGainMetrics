Adaptive Fairing of Surface Meshes by Geometric Diffusion
Chandrajit I;. Bajaj *

Guoliang Xu t

Department of Computer Sciences,
University of Texas, Austin, T X 78712
Email: bajaj@cs.utexas.edu

State Key Lab. of Scientific and Engineering Computing,
ICMSEC, Chinese Academy of Sciences, Beijing
Email: xuguo@lsec.cc.ac.cn

Abstract
In triangulated surface meshes, there are often very n o ticeable size variances (the vertices are distributed unevenly). T h e presented noise of such surface meshes
i s therefore composite of vusi? frequencies. In this paper, we solve a diffusion pa;-tial differential equation
numerically f o r noise removal of arbitrary triangular
manifolds using a n adaptive t i m e discretization. T h e
proposed approach is simple and i s easy t o incorporate i n t o a n y u n i f o r m timestep diffusion implementat i o n with significant improvements over evolution results with the u n i f o r m t i m e s k p s . As a n additional alternative t o the adaptive discretization in the t i m e direction, we also provide a n approach f o r the choice of
a n adaptive diffusion t e n s o r in the diffusion equation.
K e y words: Adaptive d i f f w i o n , Loop's subdivision, Heat
equation.

1

Introduction

The solution for triangular sur face mesh denoising (fairing) is achieved by solving a partial differential equation (PDE), which is a generalization of the heat equation customized to surfaces. The heat equation has
been successfully used in the image processing for about
two decades. The literature on this PDE based approach to image processing is large (see [l,10, 11, 171).
It is well known that the solution of heat equation
& p - A p = 0, based on the Laplacian A , a t time T
for a given initial image po is the same as taking a convolution of the Gauss filter G,(z) = A e x p

Fig 1.1: The left figure in the top row shows the initial
geometry mesh. The right top figure illustrates the result
of thc adaptive timestep smoothing after 4 fairing steps
with 7 = 0.016. The two figures in the bottom row are the
results of the uniform timestep t = 0.001 smoothing after
1, and 4 fairing steps, respectively.

(-$)

with standard deviation CT = &? and image po. Taking the convolution of G, and image po is performing
a weighted averaging process to PO. When the standard deviation ~7become larger, the averaging is taken

over a larger area. This explains the filtering effect
of the heat equation t o noisy images. The generalization of the heat equation for a surface formulation
has recently been proposed in [4, 51 and shown to be
very effective even for higher-order methods [3]. The
counterpart of the Laplacian A is the Laplace-Beltrami
operator Ah, (see [7])for a surface M . However, un-

'Supported in part by NSF grants .4CI-9982297 and KDIDIMS-9873326
t Currently visiting Center for Computational Visualization,
University of Texas, Austin, T X

0-7695-1195-3/01$10.00 0 2001 1EE)E

73 1

[5, 61 also use Laplacian, which is discretized as the
umbrella operator in the spatial direction. In the time
direction discretization, they propose t o use the semiimplicit Euler method t o obtain a sta.ble numerical
scheme. Clarenz et a1 in [4] generalize the Laplacian
to the Laplace-Beltrami operator A M , and use linear
finite elements to discretize the equation. In [3], the
problem is reformulated for 2-dimensional Riemannian
manifold embedded in Rkaiming at smooth geometric surfaces and functions on surfaces simultaneously.
The C1 higher-order finite element spa.ce used is defined by the Loop's subdivision (box spline). One of
the shortcomings of all these proposed methods that
we address here is their non-adaptivity. All of them
use uniform timesteps. Hence they quite often suffer
from under-fairing or over-fairing problems.

like the 2 0 images, where the grids are often structured, the discretized triangular surfaces are often unstructured. Certain regions of the surface meshes are
often very dense, with a wide spectrum of noise distribution. Applying a single Gauss-like filter to such surface meshes would have the following side effects: (1)
the lower frequency noise is not filtered (under-fairing)
if the evolution period of time is suitable for removing
high frequency noise, (2) detailed features are removed
unfortunately, as higher frequency noise (over-fairing)
if the evolution period of time is suitable for removing
low frequency noisy components. The bottom row of
Fig 1.1illustrates this under-fairing and over-fairing effects. For the input mesh on the top-left, two fairing
results are presented at two time scales. The first figure exhibits the under-fairing for the head. The second
figure exhibits the over-fairing for the ears, eyes, lips
and nose. Hence, a phenomena that often appears for
the triangular surface mesh denoising is that whenever
the desirable smoothing results are achieved for larger
features, the smaller features are lost. Prior work has
attempted to solve the over-fairing problem by using
an anisotropic diffusion tensor in the diffusion equation [3, 41. However, this is far from satisfactory. The
aim of this paper is to overcome the under-fairing and
over-fairing dilemma in solving the diffusion equation.
There are several situations where the produced triangular surface meshes have varying triangle density.
One typical case is geometric modeling, where the detailed structures are captured by several small triangles
while the simpler shapes are represented by fewer large
ones. We may call such triangular meshes as featureadaptive. Another case is the results of physical simulation, in which the researcher is interested in certain
regions of the mesh. In these regions, accurate solutions are desired, and quite often finer meshes are used.
For example, in the acoustic pressure simulation [15],
the interesting region is the ear canal for human hearing. Hence, more accurate and finer meshes are used
there. We call such meshes as error-adaptive. One
additional case arises from the multiresolution representation of surfaces, for example using wavelet transforms or direct mesh simplifications. Each resolution of
the representation is a surface mesh that approxiinates
the highest resolution surface. The approximation error is usually adaptive and can vary over the entire
surface. For instance, the mesh simplification scheme
in [2], which is driven by the surface normal variation,
results in meshes that are both feature-adaptive and
error-adaptive.

Our Approach.
For a feature-adaptive or erroradaptive mesh, the ideal evolution strategy would be
to correlate the evolution speed relative to the mesh
density. In short, we desire the lower frequency errors
use a faster evolution rate and the higher frequency errors succumbs to a slower evolution rate. To achieve
this goal, we present a discretization in the time direction which is mesh adaptive. We use a timestep
T ( z ) which depends on the position 5 of the surface.
The part of the surface that is coarse uses larger T ( z ) .
The idea is simple and it is easy to incorporate it into
any uniform timestep diffusion implementation. The
improvements achieved over the evolution results with
uniform timestep are significant. The top row of Fig 1.1
shows this adaptive time evolution improvement over
the uniform timestep evolution results, shown in the
bottom row. The right top figure is the smoothing result of the mesh on the left top after 4 fairing steps.
As an alternative to the adaptive discretization in time
direction, we also provide an approach for the adaptive choice of the diffusion tensor in the diffusion PDE
equation.
The remaining of the paper is organized as follows:
Section 2 summarizes the diffusion PDE model used,
followed by the discretization section 3. In the spatial direction, the discretization is redized using the
C' smooth finite element space defined by the limit
function of Loop's subdivision (box spline), while the
discretization in the time direction is adaptive. The
conclusion section 4 provides examples showing the superiority of the adaptive scheme.

2

Geometric Diffusion Equation

We shall solve the following nonlinear system of parabolic
differential equations (see [3, 41):

Previous Work. For PDE based surface fairing or
smoothing, there are several' methods that have been
proposed (see [3, 4, 5 , 61) recently. Desbrun et a1 in

a d t ) - A h f ( t ) m )= 0,
732

(2.1)

where AM(t) = divM(t)o V ~ l i (is~the
) Laplace-Beltrami
operator on M ( t ) , M ( t ) is the solution surface at time
t and z ( t ) is a point on the surface. V M ( ~is) the gradient operator on the surface. This equation is a generalization of heat equation: & p - Ap = 0 t o surfaces,
where A is the Laplacian. To enhance sharp features,
a diflusion tensor D, acting on the gradient, has been
introduced (see [3, 41). Then (2.1) becomes

& 4 t ) - diVM(t)(DVM(t)z(t)) = 0.

where H ( z ) and n(z) are the mean curvature and the
unit normal of M , respectively. Equation (2.6) implies that the motion of the surface M ( t ) can be decomposed into two parts: One is the tangential displacement caused by V D ( z ) , and the other is the normal displacement (mean curvature motion) caused by
2D ( z ) H(2). ( E ) .
Using (2.3), the diffusion problem (2.2) could be
reformulated into the following variational form

(2.2)

The diffusion tensor D := D ( x ) is a symmetric and positive definite operator from T z M to T,M. Here T,M
is the tangent space of M at 3'. The detailed discussion
for choosing the diffusion tensor can be found in [3, 41
for enhancing sharp features. In this paper, we do not
address the problem of enhancing sharp features. However, we shall use a scalar diffusion tensor for achieving
an adaptive diffusion effect. The divergence divM11, for
a vector field $ E T M is defined as the dual operator
of the gradient (see [12]):
(divMv, 4)hr = -(U, Vfir4)TM

{

Find a smooth z ( t ) such that
(atzc(t),
O ) M ( t ) + (DVM(t)z(t),V h / ( t ) G M ( t ) = 0,
M(0)= M ,
(2.7)

for any 8 E C r ( M ( t ) ) . This variational form is the
starting point for the discretization.
We already know that the equation (2.1) describes
the mean curvature motion. Its regularization effect
could be seen from the following equation (see [4], [13])
-$Area(M(t)) = - J M ( t ) H'dx,
$Volume(M(t)) = - J f i I ( t ) H d x ,

(2.3)

(2.8)

for any $J E C r ( M ) ,where Cr(M)is a subspace of
where Area(M(t)) and Volume(M(t)) are the area of
C" ( M ) ,whose elements have compact support. T M is
M ( t ) and volume enclosed by M ( t ) , respectively, H is
the tangent bundle, which is a collection of all the tanthe mean curvature. From these equations, we see that
gent spaces. The inner product ( d , $ ) ~and ( u , w ) ~ ~ the evolution speed depends on the mean curvature of
are defined by the integration of q5$ and uTv over M ,
the surface but not on the density of the mesh. Hence
respectively. The gradient of a smooth function f on
if the mesh is spatially adaptive, the dense parts that
M is given by
have detailed structures, have larger curvatures, which
very possibly be over-faired.
VMf = [ t l , t2 ]G-'
(2.4)

[ :w,

where

[

G-l =

g22
-g21

-912
911

], G [
=

IT,

911

g12

Q21

922

3

]

We discretize equation (2.7) in the time direction first
and then in the spatial direction. Given an initial value
x ( 0 ) , we wish to have a solution x ( t ) of (2.7) at t =
T ( z ( 0 ) ) .Using a semi-implicit Euler scheme, we have
the following time direction discretization:

(&) &.

and gzj =
z(& , &) is a local parameterization of the surface. G is known as the first fundamental
form. For a vector field X = E:=l Xi& E T M , an
explicit expression for the divergence is given by (see
PI, Page 84)
divM X =

l

___

( Find a smooth z ( T ) such that

2 t9

--(-Xi).

for any 8 E Cr(Ad(0)).If we want to go further along
the time direction, we could treat the solution at t =
T ( E )as the initial value and repeat the same process.
Hence, we consider only one time step in our analysis.

d a a i=l %i

Then it is easy to derive that

+

divM ( h O ~ f=) (Vfirf)rVMh h A M f,

(2.5)

where f,h are smooth function on M. From (2.4), (2.5)
and the fact that A M X= 2H(:c)n(z), we could rewrite
(2.2) as

& ~ ( t=) V D ( z )+ 2 0 ( 2 ) H ( z ) n ( z ) ,

Discretization

3.1

Spatial Discretization

The function in our finite element space is locally parameterized as the image of the unit triangle

(2.6)

7-=

733

{(51,<2)

E

RZ: < I L

0,<2

L 0 , t I +G 5 I}.

That is, (1 - & - &, , &) are the barycentric coordinate of the triangle. Using this parameterization, pur
k
discretized representation of M is M = UaZ1
7,, 7,n
= 8 for Q! # p, where % is the interior of 7,. Each
triangular patch is assumed t o be parameterized locally
as xa : 7 4 Z; ([I,&) ++ za(&,&). Under this
parameterization, tangents and gradients can be computed directly. The integration on surface M is given
by

Let V M ( be
~ ) the finite dimensional space spanned
by the Loop’s basis functions
Then VM(O)C
Cl(M(0)). Let z(0) =
zi(O)4i E h!(O), z ( T ) =
xi(Ti)bi,
and 6 = $ j . Then equation (3.1) is
discretized in V&(o)as

{q5i}zl.

‘&

ELl

for j = l , . . ., m , where zi(0) := zi is the i-th vertex
of the input mesh Md, Ti = T ( Z i ( 0 ) )and ?i(O) is a
surface point corresponding to vertex 2;(0). Equation
(3.2) is a linear system for unknowns zi(Ti).

The integration on triangle 7 is computed adaptively
by numerical methods.
3.1.1

3.2

Finite Element f u n c t i o n S p a c e

Adaptive Timestep

We first use adaptive timesteps to achieve the adaptive
evolution effect. In this case the diffusion tensor D
is chosen to be identity, but T ( z ) is not a constant
function. Now (3.2) can be written in the following
matrix form:

Let Md be the given initial triangular mesh, xi, i =
1 , . . . ,m be its vertices. We shall use C1 smooth quartic Box spline basis functions to span our finite element
space. The piecewise quartic basis function a t vertex
xi, denoted by 4i,is defined by the limit of Loop’s subdivision for the zero control values everywhere except
at xi where it is one (see [3] for detailed description
of this). For simplicity, we call it the Loop’s basis.
Let e j , j = 1, . . . ,mi be the 2-ring neighborhood elements. Then if e j is regular (meaning its three vertices
have valence 6), explicit Box-spline expressions exist
(see [14, 161) for 4i on e j . Using these explicit Boxspline expression, we derive the BB-form expression for
the basis functions +i. These expressions could be used
to evaluate
in forming the linear system (3.3). If ei
is irregular, local subdivision is needed around ei until
the parameter values of interest are interior t o a regular patch. .4n efficient evaluation method, that we have
implemented, is the one proposed by Stam [14].
Compared with the linear finite element space, using the higher-order C1 smooth finite element space
spanned by Loop’s basis does have advantages. The basis functions of this space have compact support (within
2-rings of the vertices). This support is bigger than
the support (within 1-ring of the vertices) of hat basis
functions that are used for the linear discrete surface
model. Such a difference in the size of support of basis
functions makes our evolution more efficient than those
previously reported, due t o the increased bandwidth of
the affected frequencies. The reduction speed of high
frequency noise in our approach is not that drastic, but
still fast, while the reduction speed of lower frequency
noise is not slow. Hence, the bandwidth of affected frequencies is wider. A comparative result showing the
superiority of the Loop’s basis function is given in [3].

Note that both M and L are symmetric. Since q51, 42,
. . . , + n L are linearly independent and have compact
support, M is sparse and positive definite. Similarly, C
is symmetric and nonnegative definite. Hence, M + C
is symmetric and positive definite.
The coefficient matrix of system (3.3) is highly sparse.
An iterative method for solving such a system is desirable. We solve it by the conjugate gradient method
with a diagonal preconditioning.

C#J~

Defining a d a p t i v e t i m e s t e p s . Now we illustrate
how T(x)is defined. At each vertex xt of the mesh
M d , we first compute a value d, > 0, which measures
the density of the mesh around x,. We propose two
approaches for computing it:
1. d, is defined as the average of the distance from
x, t o its neighbor vertices.
2. d, is defined as the sum of the areas of the triangles surrounding 5,.
To make the d:s relative to the density of the mesh
but not the geometric size, we always resize the mesh
into the box [-3, 313. The experiments show that both
approaches work well, and the evolution results have no
significant difference. This value d, is used as control

734

value for defining timestep that is the same as defining
the surface point:

Euler scheme t o discretize the equation with constant
timestep T , we could arrive at the same linear system
as (3.3). Hence, solving the equation (2.1) with an
adaptive timestep T D ( z )is equivalent t o solving equation (3.7) with a uniform timestep T . But (3.7) may be
easier t o handle in the theoretical analysis.

m

T ( z )= T D ( Z ) , D ( z ) :=

diqjL,

(3.5)

z=1

where T > 0 is a user specified constant. Hence, T is a
function in the finite element space V M ( ~Note
) . that
since T is not a constant any more, it is involved in the
integration in computing the stiffness matrix M . Since
T ( z )E V M ( O ) , it is C 2 ,except a t the extraordinary vertices, where it is C1. However, T ( z )may also be noisy,
since it is computed from the noisy data. To obtain a
smoother T ( x ) ,we smooth repeatedly the control value
d, at the vertex 2%by the following rule:

3.3

Uniform Timestep and Adaptive
Diffusion Tensor

Now we use uniform timestep r but a non-identity diffusion tensor D ( z ) . This D ( z ) is the same as the one
defined in (3.5), but we should regard it as D ( z ) I ,
where I is the identity diffusion tensor. The discretized
equation (3.2) then becomes

El: (Xz(7) - zz(0)) ( 4 2 > 4 3 ) M ( O )+
E,"=,
~ ( 7(7DVnr(o)4L7
)
V n ~ ( o ) @ j )=
~ 0.
~ ( ~(3.8)
)

J=1

From this, a similar linear system as (3.3) is obtained
with

where dIo) = d, for i = 1,.. . ,m, d i k ) in the sum are
the control values a t the one-ring neighbor vertices of
.E,, n, is the valence of z L ,1, and n(n,) are given as
follo\vs:

We know that D ( z ) is a smooth positive function that
characterizes the density of the surface mesh. The effect of this diffusion tensor is suppressing the gradient
where the mesh is dense, and hence slows down the cvolution speed. Comparing equation (3.3) with equation
(3.8), we find that they are similar (since T D = T ) ,
though not equivalent. Indeed, if D ( x ) is a constant
on each triangle of M , then they are equivalent. In
general, D ( z ) is not a constant, but approximately a
constant on each triangle, hence the observed behavior of ( 3 . 3 ) and (3.8) are often similar. The bottom
row figures in Fig 4.1 exhibit this similarity, where the
left and right figures are the evolution results using
an adaptive timestep and an adaptive diffusion tensor, respectively. Since the results of the two adaptive
approaches are very close, in the other examples provided in this paper, we use only the adaptive timestep
approach.

The smoothing rule ( 3 . 6 ) is in fact for computing the
limit value of Loop's subdivision (see [9], pp 41-42) applying to the control values d i " ) a t the vertices. In our
examples, we apply this rule three times. Experiments
show that even more times of smoothing of di are not
harmful, but the influence to t,he evolution results are
minor. The smoothing effect o,f ( 3 . 6 ) could be seen by
rewriting it in the following form

The left-handed side could be regarded as the result
of applying the forward Euler method t o the function
d , (t), the right-handed side is the umbrella operator
(see [ 5 ] ) .Hence, ( 3 . 6 ) is a discretization of the equation
= A D . Since n l l L< 1, the stability criterion for
(3.6) is satisfied.

H o m o g e n i z a t i o n Effect of D
It follows from (2.6) that the non-constant diffusion
tensor D ( z ) causes tangential displacement of the vertices. For the diffusion tensor D ( z ) defined in the last
sub-section, we know that it is adaptive t o the density
of the mesh in the sense that it takes smaller values at
denser regions of the mesh. Consider a case where a
small triangle is surrounded by large triangles. In such
a case, function D ( z ) is small on the triangle and larger
elsewhere. This implies t h a t the gradient of D(z) on

A different v i e w of a d a p t i v e timestep approach
Consider the following diffusion PDE

where D ( x ) is a function defined by (3.5). Again, equation ( 3 . 7 ) describes the mean curvature motion with
a compression factor D ( z ) . If we use a semi-implicit

735

the small triangle points t o the outside direction, and
the tangential displacement makes the small triangle
become enlarged. If the density of the mesh is even,
then D ( z ) is near a constant. Then the tangential displacement is minor. Hence, the adaptive diffusion tensor we use has homogenizing effect. Such an effect is
nice and important, as it avoids producing collapsed or
tiny triangles in the faired meshes.

3.4 Algorithm Summary
For a given initial mesh, stopping control threshold values ~i > 0, i = 1 , 2 and r > 0, the adaptive timestep
evolution algorithm could be summarized via the following pseudo-code:

Compute function and derivative values of
integration points;

di o n the

do {

Compute di;
Smooth di b y (3.6);
Compute matrices M and C b y (3.4);
Solve linear system (3.3);
Compute .ti@);

} while (none of (3.10)-(3.11) is satisfied);
Note that the evolution process does not change the
topology of the mesh. Hence the basis functions could
be computed before the multiple iterations.
We use two of the three stopping criteria proposed
in [3] for terminating the evolution process: Let

R(t)=

s,,,

IIH(t,z)ll’dz/

1

Il~(O,~)ll”~>

Af (0)

where H ( t ,x) is the mean curvature vector at the point
z and time tD(rc). The stopping criteria are

respectively.

(3.10)
(3.11)

Fig 4.1 and Fig 4.2 are used t o illustrate the dif-.
ference between the uniform timestep evolution ancl
the adaptive timestep evolution. Since the adaptive
timestep is not uniform, we cannot compare the evolution results for the same time. The comparing criterion we adopted here is we evolve the surface, starting
from the same input, to arrive at similar smoothness
for the rough/detailed features and compare the detailed/rough features. In Fig 4.1, the left figure in the
top row is the input mesh, the right top figure uses
uniform timestep, the left and right figures in the bottom row use adaptive timestep and adaptive diffusion
tensor with a uniform timestep, respectively. Comparing the three smoothing results, we can see that the

where
are user specified control constants, X ’ ( t ) is
computed by divided differences.

4

Fig 4.1: The left top figure is the initial geometry mesh.
The right top figure is the faired mesh after 3 fairing iterations with uniform timestep t = 0.0011. The left and
right figures in the bottom row are the faired meshes after
3 fairing iterations with adaptive timestep and alternatively
adaptive diffusion tensor with uniform timestep T ,= 0.025,

Conclusions and Examples

We have proposed two simple adaptive approaches in
solving the diffusion PDE by the finite element discretization in the spatial direction and the semi-implicit
discretization in the time direction, aiming to solving
the under-fairing/over-smooth problems that beset the
uniform diffusion schemes. The implementation shows
that the proposed adaptive schemes work very well.

736

References
Ed B. Harr Romeny. Geometry Dirven Diffusion in
Computer Vision. Boston, MA: Kluwer, 1994.
C. Bajaj and G. Xu.
Smooth Adaptive Reconstruction and Deformation of Free-Form Fat Surfaces. TICAM Report 99-08, March, 1999, Texas
Institute for Computational and Applied Mathematics, The University of Texas at Austin, 1999,
http://www.ticam.utexas.edu/CCV/.
C. Bajaj and G. Xu.
Anisotropic Diffusion of

Noisy Surfaces and Noisy Functions on Surfaces.
TICAM Report 01-07, February 2001, Texas Institute for Computational and Applied Mathematics, The University of Texas at Austin, 2001,
http://www. ticam.utexas.edu/CCV/.
U. Clarenz, U. Diewald, and M. Rumpf. Anisotropic
Geometric Diffusion in Surface Processing. In Proceedings of Via2000, I E E E Visualization, pages 397-505,
Salt Lake City, Utah, 2000.
M. Desbrun, M. Meyer, P. Schroder, and 4 . H. Barr.
Implicit Fairing of Irregular Meshes using Diffusion
and Curvature Flow. SIGGRAPHSS, pages 317-324,
1999.
M. Desbrun, M. Meyer, P. Schroder, and A. H.
Barr. Discrete Differential-Geometry Operators in nD,
http://www.multires.caltech.edu/pubs/,
2000.
M. do Carmo. Riemannian Geometry. Boston, 1992.
J. Jost. Riemannian Geometry and Geometric Analysis, Second Edition. Springer, 1998.
C. T. Loop. Smooth subdivision surfaces based on triangles. Master's thesis. Technical report, Department
of Mathematices, University of Utah, 1978.
P. Perona and J. Malik. Scale space and edge detection
using anisotropic diffusion. In IEEE Computer Society
Workshop on Computer Vision, 1987.
T. PreuRer and M. Rumpf. -4n adaptive finite element
method for large scale image processing. In Scale-Space
Theories in Computer Vision, pages 232-234, 1999.
S. Rosenberg. T h e Laplacian o n a Riemannian Manifold. Cambridge, Uviversity Press, 1997.
G. Sapiro. Geometric Partial Differential Equations
and Image Analysis. Cambridge, University Press,
2001.
J. Stam. Fast Evaluation of Loop Triangular Subdivision Surfaces at Arbitrary Parameter Values. In SIGG R A P H '98 Proceedings, C D - R O M supplement, 1998.
H P Boundary Element Modeling
T. F. Walsh.
of the Acoustical Transfer Properties of the Human
Head/Ear. PhD thesis, Ticam, The University of Texas
at Austin, 2000.
J. Warren. Subdivision method for geometric design,
1995.
J. Weickert. Anisotropic Diffusion in Image Processing. B. G . Teubner Stuttgart, 1998.

Fig 4.2: The top figure is the initial geometry mesh. The
second and the third figures are the faired meshes after 2
and 4 fairing iterations with uniform timestep t = 0.0001.
The last two are the faired meshes after 2 and 4 fairing
iterations with adaptive timestep and T = 0.0016.
large features look similar, but the toes of the foot are
very different. The evolution results of the adaptive
timestep and the adaptive diffusion tensor are much
more desirable. Fig 4.2 exhibits the same effect. The
top figure is the input, the next two are the results of
the uniform timestep evolution. Comparing these to
the bottom two figures, which1 are the results of the
adaptive timestep evolution, many detailed features on
the back and the snout of the crocodile are preserved
by the adaptive approach. Furi,hermore, the large features of the uniform timestep (evolution (compare the
tails of the crocodiles) are less fairer than that of the
adaptive timestep evolution, eben though the detailed
features are already over-faired

737

