Interactive Tool Visualising and Optimising Building Envelope
Perfcwmances during the Architectural Sketch Design
Jean-Marie HAUGLUSTAINE
LEMA - University of Litge (Belgium)
E-mail: jmhauglustaine @ ulg.ac.be
several scenarios by defining parameters and assessing their
values, with some imprecision and tolerance.
The architect or some expert system then computes
performances on the selected criteria. This second stage is
called the feasibility stage, because it results in two
questions: Is the scenario feasible? Is the scenario
acceptable to the stakeholders?
Loops are introduced in the process when negative
responses are given to these questions, until entering the
third stage, the actual sketch design, becomes possible.
After a first drawing of the project, performance
calculations can be refined. The stakeholders then judge
these performances as acceptable or not, and improvable or
not.
Loops occur in the case of non-acceptability or
improvability :
t e a c h actor is able to search for the optimal set of strategic
parameters, which corresponding scenario gives the most
satisfactory performances according to the criteria he
considers as relevant;
t all the actors may try to find the preferred compromise,
defined by the values of strategic parameters which
scenario is giving those best performances that most
equally and highly satisfy all the actors together.

ABSTRQCT
The PC software AMCE is proposing building actors
(owner, project authors.. .) a IMultiple Criteria Decision
Aid (MCDA)procedure to optimise the building envelope
about cost and energy performances, during the sketch
design, when most important choices are fixed, those
having impact on future building's cost and use.
Two main modules are linked, where any actor
interactively goes in any time:
t the first one manages parameters describing the project
requirements;
t t h e graphic pen-based module allows to draw the
sketch: it calculates geometric parameter values and
puts them back in the first module.
Permanently informed on foreseeable performances,
the user can any time search jbr optimal scenario giving
best satisfaction (monoactor optimisation) or most
preferred compromise (multiactors optimisation): at his
disposal, he has at lot of graphs illustrating the
performance sensitivio to parameter variations, as well
as an optimisation procedure using a genetic algorithm to
find the most eficient parameter set.

1. Introduction

2. Multiple actors feature of the building
design process

Using Multiple Criteria Decision Aid (MCDA)
methodologies, the approach is an attempt to cope with
the difficult problem of improving the dialog between
several actors involved in the design of a building envelope, within an architectural project. The MCDA framework can help the sketch design, the earliest and crucial
step, in the whole building envelope design.
We can consider three stages that lead actors to the
sketch design (see Figure 1). The first is a definition and
negotiation stage between several private and public
actors, where they express their requirements and preferences, based on several criteria, parameters, regulations
and constraints. In the second stage, the actors build

0-7695-1195-3/01$10.00
0 2001 IEEE

The design process of a building is typically
interactive [ 13, requiring the participation and mandatory
satisfaction of several actors, each facing multiple criteria
decisions:
*The client initiates the whole operation; he may be the
property developer, the owner, but also a future occupant
or a future user ... He is increasingly involved in the
design process and in the search for design fitness to
match his requirements. Furthermore, the client's legal
responsibility continuously increases, as does his
responsibility in the building act. He's well personally

205

ware should ask soft questions, using familiar vocabulary.
*The project author is a generic term that more often
designates the architect, but also the consulting engi-neers
(for structure, equipment.. .), the quantity surveyor, the
project manager, etc. The project author’s mission is so
heavy, he often neglects matters he considers as nonessential, e.g. the energy aspects. Though a great deal of
software is available to compute energy performance, it
is, unfortunately, rarely used by architects, in practice.
Soft-ware should help project authors in their task, while
maintaining their particular objectives, e.g., their expressed needs and their wish for increased notoriety.
+ The public authorities, representing the country or the
region, are authors of constraining lawful and normative
standards (thermal, urbanistic or environmental regulations, etc.); some public policies are translated into constraining levels of energy performances.
Finally, we see that the goal of the MCDA process
and the linked software is to help each actor express his
parti-cular needs, either in the form of constraints or
multiple objectives as well as to build an interactive tool,
capable of dialoguing with each actor in his own language,
while pro-viding useful performance indicators.
Every architectural project is progressively defined,
necessitating frequent interrogations to the actors and making the corresponding adjustments. The software should
thus be able to allow for these frequent data adjustments.
When adjustments essential to the project viability are
discovered too late in the design process or during the
construction itself, they lead to additional costs, very often
out of proportion when compared to their actual importance.
A first feasibility check of the project is important, in
order to ensure that at least one solution exists. The feasibility study enriches the negotiation andor incites the
actors to negotiate the objectives and the associated means
again, when the solution set is empty. If a feasibility study
is not mandatory, i.e., when the solution set is not empty, it
may save time through a parametric definition of the
project, which describes the relevant intervals of the main
para-meters and, especially, their robustness, i.e.
performance stability to parameter variations.
While remaining very imprecise in the feasibility
stage, project data may be sufficient to define a “scenario”
(see [ 2 ] and [3]) that characterises the architectural choices
and allows evaluating resulting performances.

responsible for his building’s energy performance, the
environmental protection, etc.

h

7
*

?sf
gure 1: The preliminary stages of the design process
-_
Faced with these new duties, the client requests increased help from the design team. The project should allow
the client to assume his new responsibilities, while
reaching his objectives of cost, building period duration,
comfort and functionality. The client is considered,
however, as having no technical capacity, so the soft-

3. AMCE software: an interactive tool
AMCE is an acronym for “Aid to the Multiple criteria
Conception of the building Envelope” (in French: Aide
Multicritbre 2 la Conception de I’Enveloppe de bbtiment).
The software is developed with the p r o g r a m i n g language

206

Allegro0 Common Lisp (Franz Inc.). It runs on a
common PC, with the following minimal characteristics: a
120 MHz Pentium microprocessor, Windows 95, 98 or
NT 4.0 opera-ting system, 15 Mb hard disk capacity, 32
Mb RAM storage capacity (64 Mb recommended) and a
SVGA graphic card with a palette of 64.000 colours.
The usual starting point in energy software is the
drawing of the sketch design itself (see [4],[ 5 ] ) : this
approach lacks a first parametric phase, which allows
defining a set of feasible solutions, among them, the preferred choice.
In our proposed design procedure, each actor
chooses - and manages - the values of the main parameters, in order to satisfy selected criteria, based on individual preferences and requirem'ents.
AMCE has been built to facilitate an interactive
introduction of technical and preference data by each
actor, based on his individual needs and capacity, and to
compute performance criteria.

weights accorded to the criteria set. When an actor gives a
null weight to a criterion, he expresses that he's completely indifferent to this criterion he considers not
interesting at all. Weight allocating is a personal subjective
matter depending on the value scale each actor feels on
performance criteria.

3.1 Selected criteria: project performances

Figure 2: Choice of relevant performance criteria

The software evaluates performances concerning
energy aspects for heating, air-conditioning (HVAC),
domestic hot water (DHW) and artificial lighting, as well
as construction and use costs of the project:
+ five regulation performances: K-level (as required in
Belgium), Be heating energ:y needs (in Wallonia), GV,
BV and C (in France);
+ yearly energy consumption expressed in physical units
(kWh), for heating and domestic hot water, air-conditioning and artificial lighting;
+ associated energy consumption costs;
+ project construction cost, VAT and fees excluded.

3.2 Actor's preferences
Figure 3: Actor's choice of Promethee preference functions

The architect, owner, tenant, property developer,
etc., anyone intervening i n the building process, can participate in its elaboration. Each actor defines a "scenario"
summarising his desiderata and requirements. With the
button "Actor's preferences", he specifies, for each criterion (Figures 2 and 3):
+ the maximum admissible critical value;
+ an associated preference function, using the Promethee
typology: true (I usual) critlxion, quasi-criterion, gaussian criterion, pseudo-criterion, etc. [6];
+ weights he gives to the criteria: corresponding to the
Promethee multicriteria approach [7].
A weight is like a coefficient of the importance the
actor attaches to each criterion. Each user allocates any
null or positive weight to each criterion: the criterion
receiving the highest weight is the most important one,
while the criterion with the !smallest weight is the less
important one. The software so gives each criterion the
relative weight i t has in proportion with the sum of all the

3.3 Actor's scenarios and questionnaires
An actor's scenario is a set of values the actor gives to
the parameters he can understand and control. The introduced parameters are just necessary and sufficient to the
preliminary performance estimates. At this stage of the project, prior to any drawing of the draft, the geometrical
parameters replace the geometrical variables, which will be
defined later.
The collection of parameter preferred values characterising the project uses a questionnaire that is organised by
items, i.e. thermal comfort, fenestration, solar aptitude,
thermal characteristics of the envelope, equipment sophistication, etc.
All answers are previously filled in with default
values, so that the user questioning is mostly facilitated: the
user may modify them as he chooses. In this way, the parameters necessary for other evaluations (corresponding to
criteria considered as irrelevant) are not to be introduced.

207

In order to fit the user’s technical capacity, the questionnaire is organised on two levels:
a semantic level, fitting the client’s technical capacity; it
helps the client specify his demands and requirements;
a more technical level is proposed to the project author,
who defines the preliminary characteristics of the project by answering no more than 60 questions.
For example, a screen is proposed to the client,
asking him for the shape aspects he can define (upper part
of Figure 4). The same question, but on a more technical
level, is proposed to the project author (see lower part of
Figure 4).

mance sensitivity analysis, and for the improvement step. If
an actor enlarges intervals so that they are just limited by
technical intervals, he may increase the set of admissible
scenarios, e.g. his feasible decision space. Each time he
reduces his intervals, his decision space is reduced accordingly as well as the degree of improvement he may hope
for in the next stage.
For each parameter, the right click of the mouse
provides on request the following help by a more explicit
definition of the parameter or values encountered in previous projects: the cultural approach of the project author is
given here, consisting in a database of projects already
executed by him, with associated parameter values.

3.4 Displaying and specifying scenario performances
A specific window (see Figure 5 ) lists the energy and
cost performances obtained by all the scenarios defined by
the actors (in bold: the actor currently using the software).
Note that any actor can try more than one scenario.

Figure 4: Example of questionnaire proposed to the client
(Geometty) and to the project author ( G e o m e t v : details)
Figure 5: Energy and cost performance window
In order to clearly display the satisfaction reached on
the criteria specified by each actor, the background colour
of each result cell is displayed: green when the performance
is satisfactory for the actor and red, when it is not.
Figure 6 presents a Promethee total pre-order of the
scenarios: the owner’s scenario is globally the best one,
while the Actor 3’s one is less good and the project
author’s scenario is the worse.

Of course many parameters (and associated questions) may depend on other ones. For example, when specifying that the roof is a flat roof, the user has not to
answer questions about attics or roof edge: these questions are suppressed from the questionnaire and are not
asked. But, if a positive - and not nil - angle is still
chosen for the roof slope, these questions appear again
and must be asked if default values are not in accordance
with actor’s wishes.
For strategic parameters, each actor specifies the
accepted interval in which the parameter could vary. He
so expresses his level of uncertainty and/or tolerance.
Five different levels of “tolerance” intervals are proposed to the actor, for his chosen value v: level 1: v f
50% v; level 2: v k 30% v; level 3: v f 15% v; level 4: v f
5% v; level 5:no tolerance.
The level 5 corresponds to a parameter that is
prescribed by conditions outside the project and so the
design team cannot change. Sometimes, one or both limits
of his chosen interval idare technically prohibited. In this
case, the software introduces the largest technically
feasible values within the preferred interval. This tolerance interval mechanism is crucial for further perfor-

1-

< Owner >
Total Dreorder

I

I

+

I]

Figure 6: Promethee total pre-order of the scenarios

3.5 Sensitivity analysis
The software calculates the performance variation for
the criteria considered by the actors, according to the parameter variations, thus guiding the project author towards an
improved solution. The sensitivity of a chosen performance

208

Negotiation then attempts to relax, the most sensible
constraints.
Therefore, this first stage goes beyond a simple feasibility study, which would only show whether or not a
solution to the architectural problem exists. Defining a set
of solutions, this parametric approach also locates a scenario space where the preferred feasible choice certainly
exists. The combination of parameter intervals of validity
(or tolerance) indeed defines a solution space, which respects the criteria considered as relevant. Definition of this
solution space is essential for the strategy of future project
improvement.

to the variation of one or two parameters can easily be
obtained, so.
First, AMCE produces the Q performances for each
chosen tolerance interval of the parameters and for each
actor. For example, Figure 7 displays, for each criterion,
the performance obtained with the interval of values (level
1: v rtr 50 % v) of the net total habitable floor area around
its central value (1 00 m2).

1

cc

*

7~

total habiatile floor area

I

Finure 7: Window showinp- performance
sensitivity
. to the variation of net total habitablefloor area

The construction cost is 38,2 k€ for 100 m2; it
increases 43,4 % for a 50 % increase in area, reaching
54,7 k€, while a decrease of 50 mz produces, ceteris
paribus, a fall of 41 % for a new amount of 22,5 k€. On
this exemplary display, we observe that some values are
presented in a red cell: f.i., making variations of 50 % of
floor area becomes a prohibited scenario for the criteria
B/Bref and still remains unsatisfactory relating to yearly
“Heating + DHW” energy cost, of course.
Figure 8 (3-D graph) and Figure 9 (2-D graph) give
the variation of the performance “Energy consumption (in
kWh) for heating and domestic hot water”, to both continuous and technically acceptable variations of the net total
habitable floor area and of the roof slope together; all the
other parameters are remaining unchanged at their decided
central values. When the user clicks anywhere in the 2-D
graph (Figure 9), he can obtain the corresponding values
of floor area and roof slope, with the performance obtained by this pair of values, all other scenario parameters
remaining unchanged.
At the end of the feasibility study, still before any
drawing has been made, two possibilities exist:
*Actors know the certain existence of at least one
solution, as defined by 1 he satisfactory parameter
scenario. In this favourable case, they also know the
sensitivity of the performances to the parameters. This
information can be useful to arbitrate the divergent choices or possibly to improve design.
+Or they are not able to find a scenario leading to
acceptable performances. In this case, the sensitivity
ana-lyses largely document the negotiation that must
follow evidence of an empty set of solutions.

Figure 8: Some energy pe$ormance sensitivity to the
variations offloor area and roof slope (3-0 graph)

( 2 - 0 graph), to the same variations as Figure 8

4. Optimisation procedure
With an optimisation procedure using a genetic algorithm, the software generates a random population of individuals. Each individual is so a combination of possible
values of the strategic parameters among the 8 billion
possible combinations resulting from the authorised values
of the 13 (up to now) strategic parameters within varying
interval the actor has previously chosen. Each “individual”

209

- Croosover operator is applied to the selected pair of

is a vector of 13 position representing the strategic parameters.
The optimisation process is organised as follows (see
display of progress on Figure 10):

parents, giving children individuals;

- Mutation operator is also applied to children individuals resulting from crossover;
new population is so obtained, of new individuals. The
process returns to step 2 (fitness evaluation).
The software so finds the best combination of strategic parameter values (“Absolute best” on Figure 10) that, in
fact, generates the most efficient scenario whose performances are the best satisfactory in accordance with the
actor’s preferences.
tA

P m b h spSC@

I Oeneik a&anretli

FcplOtKnsi20

1

130

Mex.gp.emtIom&PI

U

4.1 Monoactor optimisation procedure

115

In the monoactor optimisation, the actor’s satisfaction
is the convergence rule of the genetic algorithm.
On Figure 5, the Actor 3’s scenario gave worst performances when compared to the other ones. After the optimisation, the new Actor 3’s performances (so displayed on
Figure 11) have been largely improved.

rnltlallze p?pJIatlW

Figure IO: Display of mono-actor optimisatron procedure
+ A first population of individuals (which size is chosen
by user) is randomly generated;
+The fitness f, of each individual x is calculated:
1
f, = d
where d is like a “weighted distance” to optimal performance in the 13 dimension space of solutions:

... . . .

with:

- P, = performance obtained relating to criterion i (all
performances are to be minimised);

Figure I I : Resulting optimised pe$ormances of
Actor 3’s scenario, after optimisation procedure

- C, = maximal authorised (or wished) value related to
criterion i;

Not only G/Gref and B/Bref are now acceptable, but
all this scenario performances are largely better than those
obtained with the other scenarios, even for the “Heating +
DHW” energy cost, remaining beyond the admissible value
previously defined by Actor 3.

- W, = weight allocated to P,;
- n = number of criteria.

+ Statistical evaluations: maximum, minimum and mean
fitnesses are calculated; if the maximum fitness is larger
than the absolute best - obtained up to now - individual’s fitness, the individual corresponding to the maximum fitness is saved as the absolute best one; otherwise
the previous absolute best individual is kept;
+ Stop conditions: the optimisation process is stopped if
maximum number of generations is reached or if the
absolute best fitness increase over several generations is
too small, so that the convergence is considered as
obtained;
+ Population scaling: the population fitnesses are scaled in
order to avoid any premature convergence, i.e. any local
optimum;
Reproduction loop:
- Selection procedure: fitnesses are distributed on a
pie and the Russian roulette randomly selects a
fitness, with a larger chance to come across a high
fitness; the corresponding individual (parent) is
selected and a second one in the same way;

4.2 Multiple actors optimisation procedure
All the actors concerned by the project may find their
most preferred compromise, by using the multiple actors
optimisation procedure. This optimisation routine is similar
to the monoactor one, except of its convergence rule. In this
case, the software searches for the scenario giving, in the
same time:
+ the best possible performances;
+the most equal satisfaction for all actors: when a project
obtains good performances but gives actors too much
different satisfactions, this project further life is
threatened by the unsatisfied actor(s).
Before the procedure, a checking routine displays the
parameter(s) conflicting with actors, i.e. the parameter(s)
whose actors’ authorised intervals have no intersection
(Figure 12). When it happens, one can say that the scenarios are not comparable, so that any preferred compromise

210

does not exist. The conflict parameters must so be first
negotiated between actors, before any optimisation.
In this way, the individual fitness f, is differently
defined than in the monoactor procedure:
1
1
f , =-..
dmax (dma -dmin)
where d,, is the maximum value (the worst performance)
encountered in daj values related to actor aj and dmi, the
minimum da, value.

By studying the contacts between the synthesised
lines, EsQUIsE materialises the spaces to be occupied
(Figure 14). Several procedures then deduce the topological relationships of the described architectural project
(see Figure 15).

-c 0 n t . d puarwt‘er , Floor area

.

-

Owner

Figure 13: Original sketch (ground floor)
drawn on a digital tablet or with the mouse

Figure 12: Display qf conflict purameters
(here the floor area) between the actors’ choices

The fitness optimisation has two parallel objectives, corresponding to the two terms in the f, expression:
+ maximising the performances is similar as minimising
their maximum weighted distance (dma,). Because no
performance is nil and at least one mandatory regulation
performance always remains, the denominator d,, may
approach to 0, but cannot be nil.
+ equalising the actors’ satisfactions is the same as
minimising the difference between dmax and dmin
values. The actors’ satisfactions are equal when d,,, =
dmi, and the corresponding individual gives the parameter values of the preferred compromise.

Figure 14. Synthesised sketch of the groundfloor

5. Drawing the sketch design
The third stage of the decision process will allow a
sketch design, but, at any tirne, the drawing of the first
draft could be realised by the project author, using the
EsQUIsE module, developed in LEMA.
EsQUIsE software [8] is an experimental computerbased prototype interface for capturing and interpreting
the architect’s sketch, by locating its architectural concepts: border line, functional space and topology.
The aim of this prototype is to compose a spatial
semantic representation of the architectural project, in
order to feed diverse computer architectural design evaluation routines and to serve as a tool with interface that
complies to the designer’s working technique. The penbased module performs the capture and the synthesis of
the lines drawn on the digital tablet. These lines are drawn
in black (opaque walls), in blue (glazed walls) or in
magenta (comments and furniture): see Figure 13.

Figure 15: Spaces topology of

the

groundfloor

The project author names the function-a1 spaces. On
this basis, the programme fixes their characteristics necessary for the evaluations. For example, the default comfort
temperature assigned to each occupied space is fixed
according to its function as described in the captions: 18°C
for the kitchen, 24°C for the bathroom, etc.; the user may of
course change it if he prefers another value.
The advantage of using a man-machine interface
based on the semantic analysis of an architectural sketch is
that one is spared the fastidious measuring work of the
archi-tect’s blueprint.

211

Instead of the two or three days usually required to
measure and encode, energy and cost performances are
supplied directly after the drawing of the last line of the
sketch. On the other hand, it avoids any wrong manual
input of numerical values.
This drawn support constitutes a preliminary basis
for discussion with the client, whose understanding requires a graphical expression, that gives him the means of
checking how well the project corresponds to his desiderata, including implicit ones (non-verbalised). This first
response is already rich, particularly with regard to evaluations.
The application tested in the late stages of EsQUIsE
is a classical . calculation module MZS (for MultiZone
Stationary) also previously developed in LEMA: it computes the multizone evaluation of the building energy
needs, taking internal and solar gains into account.
After the drawing of the draft by the project author,
the user can go back to the parameter module, where geometrical data previously defined are replaced by the ones
generated by the drawn sketch. Other thermal or economical data of the questionnaire are unchanged.
The same evaluation routines check project performances of the drawn project, that are displayed in the
performance window:
t either the performances are reached;
t o r the performances are not reached. Any actor could try
to satisfy each requested performance by using the parameter sensitivity analyses or the optimisation procedure.
In the case of a conflict between reached and desired
performances, a negotiation would be initiated, in order to
refine objectives and parameter values.
The project author presents the draft to the building
owner, who is now able to react and intervene on parameters and desired performance values.
Improvement (and/or optimisation) of the draft, by
its iterative modification and/or by the drawing of new
drafts, will take the procedure back to previous stage.

In conclusion, the final product will be used to interest
more architects and help them in building energy
performance, both a present and future ecological concern.
With respect to usual architectural practice, our new
methodology tracks so provide as advantages:
t they give enhanced help to the client within an uneasy
technical context, where his responsibility is increasing,
especially regarding environmental regulations;
tthey alleviate the work load of the project author and
increase energy and cost performances of the project;
t they supply a multiple criteria decision aid for elaboration
and negotiation of a preferred compromise between the
several actors.

8. Acknowledgement
The present Physical Doctorate thesis is undertaken
thanks to a research contract concluded by Electricit6 De
France (EDF-Direction des Etudes et Recherches), with the
LEMA (University of Li2ge, Dir.: Prof. A. DUPAGNE).
It comes with the scope of the French participation to
the Annex 32 of the International Energy Agency, which
research topic was the Integral Building Envelope Performance Assessment.

9. Bibliography
[ I ] CONANM., Me‘thode de conception pragmatiqice en
architecture, Ministkre de I’Cquipement et du logement : Plan,
constructionet architecture, Paris, France, 112 pp.. 1989.

[ 2 ] ROY B. and BOUYSSOUD., Aide Multicritire a la De‘cision:
Mktliodes et Cas, Economica, Paris, 1993.

[3] MAYSTRE L.-Y., BOLLINGER
D., Aide U la ne‘gociation
niulricritire - Pratique et conseils, Presses Polytechniques et
Collection Gerer I’environnement,
1999.
[4]CRAWLEY
D.B., LAWRIE
L.K., PEDERSEN
C.O., LIESEN
R.J.,
FISCHER
D.E., STRAND
R.K., TAYLOR
R.D., WINKELMAN
F.C.,
BUHL W.F., ERDENA.E., HUANG Y.J., Developing a NewUniversitaires Romandes,

Generation Building Simulation Tool in the United States,

Thermal Performance of The Exterior Envelopes of Buildings VI1
Conference,Clearwater Beach, USA, pp. 699-708, 1998.
[ 5 ] RIVARDH., BEDARD C., FAZIOP., HA K.H., Functional

6. Continuation of the project

Analysis of the Prelirninan Building Envelope Design Process, in
Building and Environment, Vol. 30, n”3, 1995.

The result of the feasibility stage is a sketch which
parameters - accepted by the several actors - give the best
performances. It circumscribes the most efficient choices
related to the energy and cost performances of the future
building.
It now constitutes the project basis to be used in the
continuation of the design process during the detailed
design, that falls under topics currently developed and
commonly used in architecture.

[6] BRANSJ.P., VINCKEPh., MARESCHALB. How

IO

Select and

how to Rank Projects: the Prornethee method, in European

Journal of Operational Research, 24 (2), pp. 228-238, 1986.
[ 7 ] SCHARLIG
A., Pratiquer Electre et Promithie? Presses
polytechniques et universitaires romandes, Collection “Diriger
I’entreprise”,Vol. 1 I , 173 pp., 1996.
[8] LECLERCQ
P., Interpretative Tool For Arcliitectrrral Sketches,
International Roundtable Conference Visiial arid Spatial
Reasoning in Design: Cotnpiitational arid Cognitive Approaches,
MIT, Cambridge, USA, 1999.

7. Conclusions

2 12

