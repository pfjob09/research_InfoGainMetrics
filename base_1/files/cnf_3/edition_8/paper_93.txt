Using 3D Landscapes to Navigate File Systems: The MountainView Interface
Tim Altom, Melynda Buher, Michael Downey, Anthony Faiola,
School of Informatics, IUPUI, School of Informatics, IUPUI, School of Informatics, IUPUI,
School of Informatics, IUPUI
{taltom@iupui.edu, mbuher@indiana.edu, michaeljdowney@mac.com, afaiola@iupui.edu, }
Abstract
A novel 3D file navigation interface is described,
using the principle of visual recognition to locate and
manipulate thumbnails of files. The interface, named
“MountainView”, uses concepts from video game
environments, allowing the user to place, search for, and
move thumbnails, as well as allowing direct application
launch from the slopes of a 3D mountain that can be
circumnavigated by the user. MountainView is currently
in a conceptual form and being tested with paper
prototypes. Early results indicate that users can more
easily find files through recognition of 3D landmarks,
but that unfamiliarity with the interface can be a barrier
to acceptance
Keywords--- 3D user interfaces, spatial memory,
navigation.

1. Introduction
Much of visual perception and cognition is given
over to a determination of three-dimensional
relationships. The human ability to formulate a world
view in three dimensions (3D) has distinct advantages,
not the least of which is the ability to remember where
food, shelter, and companions may be found in vertical
space as well as the horizontal. The result is that humans
can place a huge variety of objects in a three-dimensional
space and, using both recognition and recall, find those
objects even years after their original placements. The
typical 3D environment is rich with location cues that,
even without written signs or symbolic tags, allow the
human to rapidly find and retrieve desired objects.
To date, however, this capability has been little used
in organization and recall of computer files in graphical
user interfaces (GUIs). Instead, the most prevalent
navigation schemes are those in which computer files are
expected to be placed in representational “folders” within
other “folders” in two-dimensional hierarchies that can
be nested deeply enough to make losing files a common
occurrence. Other schemes have attempted to include a
third dimension by emulating a stack of folders on a

desktop, for example, but such techniques suffer from
the inability of the user to see what they have placed
beneath the top folder in the stack.
Ideally, a navigation environment would take
advantage of the user’s inborn ability to remember and
find objects in 3D spaces. It is for this purpose that we
have developed a prototype for a 3D file navigation
application that builds on the “Data Mountain” that
Robertson, Czerwinski, et al have created [8]. Data
Mountain was a 2.5D inclined slope on which users
could place thumbnails of Web sites in patterns that were
user-specific. The thumbnails that were already placed
on the Data Mountain would “move aside” for a
newcomer that the user wanted to place with the existing
ones.
The Data Mountain, while intriguing, could be
extended into a fully 3D interface. MountainView is a
fully 3D environment with rendered mountains and
simple terrain that, in its full concept, would be userconfigurable. In MountainView, a user can move around
one or more mountains as they might in a game. The
files stored by the user on a mountain might be
thumbnails of Web sites, but more significantly would
also be thumbnails of memos, documents, spreadsheets,
databases, or anything else the user could directly access.
When saving such a file, the user could instruct the
creating application to “Save to MountainView”, and the
thumbnail would appear in the MountainView window,
where it could be placed by the user. Like other
navigation environments, MountainView would have a
search capability, as well as embedded help.

2. Related work in 3D file navigation
interfaces
In this section we discuss four categories of related
products and research.
Prior work has focused on four types of 3D
navigation interfaces. The first is the “desktop
metaphor,” such as Sun Microsystems’ “Project Looking
Glass”. The second is the “duct metaphor” in which the
third dimension is represented as depth, rather than as
height. Cockburn and McKenzie [3] tested such a 3D
environment that resembled the inside of ductwork. The

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

third is the “hyperbolic” interface, in which files are
represented as points on a curved surface. Each
representation displays only the most basic information
about the file, and it is necessary to rotate the curved
surface to see further information about it. Furnas [4]
described such an interface, which he dubbed the
“fisheye”.
The fourth, and to us the most intriguing, form of
interface, might be termed the “immersive”, or “gamelike” interface. To date little work has been done
adapting the actions and appearance of immersive worlds
to the needs of file navigation, despite the extraordinary
popularity of games.

2.2. Duct metaphor interface
Cockburn and McKenzie [3] introduced a 3D
interface that resembled the inside of a rectangular metal
duct, in which users could position thumbnails of files in
three dimensions. Figure 2 illustrates an example.

2.1. Desktop metaphor interface
This is one of the earliest attempts at a 3D file
navigation interface. A 3D desktop looks as much as
possible like a real desktop, with recognizable desktop
objects such as stacks of files and papers, telephone, and
even an inbox. General Magic’s Magic Cap [7] is an
example. Figure 1 shows the basic Magic Cap desktop.
Figure 2 A “Duct” Metaphor Interface

Figure 1 The Magic Cap Desktop
Robertson et al’s [8] Data Mountain is an example
of a simplified virtual desktop environment that takes
advantage of user 3D perceptions in a different way than
Magic Cap. Rather than leave the desktop flat on the
screen except for perspective angling, the authors tilted
the desktop upward and eliminated extraneous look-alike
icons such as the telephone and folders. The result could
be termed a “2 1/5D” rather than a full 3D, but the
authors report an improved user ability to retrieve
specific website thumbnails from among dozens of
others.
Recently, Sun Microsystems has announced a
prototype of a 3D user interface written in Java, and
called “Project Looking Glass” [12]. Early glimpses of
the interface reveal something that looks rather like
Robertson et al’s Task Gallery, discussed below, but
presented on a flat surface, more like a desktop
metaphor.

The files so placed hang in the air within the 3D
“duct.” They can be grouped together. In retrieval tests,
Cockburn and McKenzie found that retrieval time was
actually longer using the 3D interface than when using
the 2D or 2 1/2D interfaces.
Robertson et al [11] have written about their Task
Gallery, which is basically a duct metaphor 3D
environment. Task Gallery is a window manager that lets
users see all of the open windows for a given task at one
time. Unlike the basic duct, it allows windows to be
rotated against the walls, where they take on the walls’
perspective. The currently used window is moved to the
far end of the duct, called the “stage,” where it appears
flat. The authors report that the Task Gallery does aid in
task management, and that users like it. However, they
also note that users could benefit from better spatial cues.
We believe that the duct metaphor 3D interface may
present confounding factors to users. The 3D model
possesses a grid that provides perspective, but few other
textural or positioning cues, thereby limiting users’
abilities to utilize their own 3D processing. The Task
Gallery’s job is easier than that of most ducts, because
the user has fewer windows open than files to navigate.
Comparison of Cockburn and McKenzie’s duct, and the
Task Gallery, seem to show that user difficulty rises
quickly as the number of items to be tracked increases.

2.3. Hyperbolic model interface
The hyperbolic model was originally proposed by
Furnas [5], and was intended to solve the problem of
unlimited numbers of files having to be displayed in a
limited monitor space. Sometimes called a “focus +
context” design, a hyperbolic interface can be thought of
as curved surface on which files appear as points. The
points are then usually connected by lines. A hyperbolic

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

“tree” results, showing not only file names, but their
hierarchical relationships. Clicking on a file rotates the
hyperbolic surface so that more details about the file are
accessed. This approach has been commercially applied
as “The Brain” [13].
Risden et al [8] built a novel 3D browser called
“XML3D” that hyperbolically displayed connections on
a website. User studies showed that the hyperbolic
browser reduced user times when managing content on
the website, but only when paired with a 2D list.
Hyperbolic interfaces have proven helpful for
visualizing large collections of nodes, but have been
sparsely used for navigational display of user files. The
Brain is one of the few hyperbolic interfaces used for
that purpose. We believe that while a hyperbolic
interface is valuable for increasing density, it does not
take good advantage of the user’s native 3D abilities.

It is our contention here that the 3D aspects of
games can be further and more deeply used for everyday
user tasks, and that these interfaces do not have to mimic
first person shooters. Our MountainView is designed to
do just that.

3. The MountainView interface
In this section we provide details about the
MountainView interface.
MountainView is a prototype interface intended to
replace 2D file navigation applications in graphical user
environments. It features full 3D capability identical to
that found in games, permitting users to “fly” through the
area where mountains hold thumbnails of their files.
Initial sketches of MountainView reveal the intent to
create a game-style navigation interface. Figure 4 is a
sketch illustration of this intent.

2.4. Immersive 3D environment
Given the undoubted success of video games and
their use of 3D immersive environments, it is surprising
that there has not been more effort made to adapt these
proven interfaces to ordinary tasks such as administration
or navigation.
Christoffel and Schmitt [2] have developed a
navigation and manipulation application for remotely
browsing, searching, and selecting books at the library of
the University of Karlsruhe (Figure 3). This interface is
based on the popular Quake II 3D game engine. Quake,
like many other similar games, is known as a “first
person shooter,” where the user sees himself holding a
weapon that protrudes into the scene. Christoffel and
Schmitt replaced the weapon with a laser pointer.

Figure 4 An early MountainView Sketch
Figure 5 is a screen capture of the paper prototype of
MountainView, developed in PhotoShop.

Figure 3 A Virtual Library of University of Karlsruhe
Chao [1] reworked the game of Doom to manage
UNIX system tasks. (Note that UNIX is a registered
trademark of The Open Group) In Chao’s administration
game, called “PSDoom,” UNIX processes appear as
monsters that compete with one another for system
resources, and which can be “killed” with the userhandled weapon. Like the Karslruhe library browser, it is
essentially a first person shooter.

Figure 5 Screen Capture of MountainView
As conceived, in MountainView users could
perform any function that any other file navigation
interface permits: search, drag and drop, double-clicking
to open. File thumbnails are visually coded by type of
file and can be placed by the user anywhere on any
mountain, in any grouping desired. The number of
mountains in the interface can be set by the user. Files

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

enter the interface through drag and drop from another
interface, or by saving from an application directly to
MountainView. The saved file appears initially in a bar
at the bottom of the interface window as a thumbnail,
and is then manually moved into position on a mountain.
MountainView would also feature a help screen
(Figure 6), called by the clickable icon with the question
mark on it, located in the lower right corner. Another
clickable icon just above help opens a map to the
MountainView interface, (Figure 7) which also has a
search field in it.

Figure 6 MountainView Help

2.
3.
4.
5.
6.

Open a file from the mountain.
Pick up an image and carry it to another location.
Locate the file entitled “The Peterson Invoice”.
Get help on moving around the mountain.
Determine types of files stored on the mountain,
or in the foreground.
7. Turn off sound effects.
Walkthrough participants generally reacted as
expected. For example, drag and drop was the most
common mode of moving files, and was anticipated.
However, there were also suggestions, such as adding a
multiple file selection feature so that many files could be
moved at once.
Participants encountered problems with task 4. They
had trouble finding the map, and often needed help
locating and using it. Participants also commented that if
the filename was not known, a search was particularly
problematic.
Participants also commented unfavorably on the
controls, saying that they were too large and intrusive.
They asked for a zoom control, which was part of the
original design, but was not included in the paper
prototype. Participants wanted better visual cues on the
mountainside, such as more signposts.
Some participants were highly intrigued and stated
that they would use such a product if one were
commercially available. Others expressed the opinion
that while such an interface might be suitable for home
use, it might suffer in the workplace because it looks too
much like a video game, and employers might not
approve.
We correlated participant responses and redesigned
the interface to reflect prevalent concerns. Figure 8
shows the redesigned MountainView.

Figure 7 MountainView Search and Map

3.1 User walkthroughs
A working MountainView prototypical interface
was not yet available as of this writing, but the design
was sufficiently advanced to permit paper-based
cognitive walkthroughs, which by themselves were
instructive and provide input into the next design phase.
Students in a human-computer interface class were
given basic instructions in the MountainView interface,
and then presented with paper prototypes of
MountainView. They each had seven tasks to perform.
These seven tasks covered a wide variety of
MountainView functionality. They were:
1. Place a spreadsheet on the mountain next to a
similar spreadsheet.

Figure 8 Revised MountainView Interface

4. Discussion
We believe that the cognitive walkthroughs, while
instructive to us, did not present MountainView
adequately, due to the participants having to struggle to
envision a true 3D environment in the 2D boundaries of
paper. One of the problems we initially faced when
planning the initial testing was how to expose
participants to the full 3D effect without a 3D interface.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

We never did find a good answer to the dilemma; we are
resigned to waiting for the 3D prototype to be available
before conducting further testing.
We believe that much can be learned from testing
such a fully developed interface. The selection of the
mountain paradigm was not made due to aesthetics, but
because it permits verticality within a known metaphor.
We expected some cognitive dissonance in participants
from associating mountains and files, and that is what we
noted. However, we also noted rapid learning of the
paper prototype’s affordances by participants, which
leads us to conclude that a fully functional prototype
could be quickly learned and used.
Earlier attempts at 3D graphical user interfaces
made heavy use of simulations of real-world artifacts,
such as notebooks, inboxes, and the like. As Chao notes,
however, using such artifacts runs the risk of becoming a
true simulation, rather than a useful analogy. We
designed MountainView partly to disassociate the
concept of file navigation from any commonly
encountered simulacrums such as file folders or cabinets.
Further research should reveal more about whether such
intentional disassociation results in measurably lower
retrieval or satisfaction levels.

5. Conclusions and further work
We have presented here a novel concept for a truly
3D interface for file navigation, based on the 3D
experiences enjoyed by game players. This interface is
intended to investigate the possibility of utilizing users’
inherently excellent abilities to navigate in 3D space to
retrieve files from among dozens or hundreds of possible
candidates. Paper-based cognitive walkthroughs are
promising, albeit incomplete.
Further work would include the development of a
functioning prototype, as well as incorporation of the
suggested changes from the walkthroughs. However,
looking outward much further, we can see the expansion
of MountainView into more than single user
applications, to representations of entire networks that
could thereby be explored, rather than being simply
searched. Christoffel and Schmitt noted in their user
testing of the Karlsruhe library browser that some users
were interested in accomplishing specific tasks in the
interface and then leaving it, while others remained
within the interface to explore the library. We see
MountainView as a means of doing the same thing
within huge networks, with various nodes or servers
being represented as mountains or parts of mountains, or
even mountain ranges. Hyperbolic representations give
that power today, but in ways that are not as
metaphorical, and therefore not as interesting to many
users. We do not pretend that MountainView will appeal
to all users, but we do maintain that it can become an
important addition to the navigation schemes of many
users.

References
[1]

[2]

[3]

[4]

[5]

[6]

[7]
[8]

[9]

[10]

[11]

[12]
[13]

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Chao, D, “Doom as an interface for process
management”, Proceedings of the SIGCGI conference on
Human factors in computing systems, Seattle,
Washington, 2001, 152-157.
Christoffel, Michael, and Schmitt, Bethina. “Accessing
Libraries as Easy as a Game”, in Proceedings of the 2nd
International Workshop on Visual Interfaces for Digital
Libraries. July 2002
Cockburn, A. and McKenzie, B. Evaluating the
Effectiveness of Spatial Memory in 2D and 3D Physical
and Virtual Environments. CHI 2002, April 20-25, 2002.
Cockburn, A. and McKenzie, B. Evaluating the Effect of
the Third Dimension in a Document Management
System. SIGCHI ’01, March 31-April 4, 2001, Seattle,
WA, USA.
Furnas, G.W. The FISHEYE view: a new look at
structured
files.
Bell
Laboratories
Technical
Memorandum #81-11221-9, October 12, 1981.
Lamping, J., Rao, R., and Pirolli, P. A Focus + Context
Technique Based on Hyperbolic Geometry for
Visualizing Large Hierarchies. Proceedings of the ACM
SIGCHI Conference on Human Factors in Computing
Systems, Denver, May 1995, ACM.
MagicCap. General Magic, Sunnyvale CA, 1994.
Robertson, G. Czerwinski, M. and Larson, K. Data
Mountain: Using Spatial Memory for Document
Management, proc. of UIST '02, pp. 153-162, 2002.
Risden, K., Czerwinski, M., Munzner, T. and Cook, D.
An Initial Examination of Ease of Use for 2D and 3D
Information Visualizations of Web Content. Int. J.
Human-Computer Studies, 53, 695-714. 2000.
Robertson, G., Mackinlay, J., and Card, S. K. Cone
Trees: Animated 3D visualizations of hierarchical
information. In Proceedings of CHI'91, New Orleans,
May 1991, ACM Press, 189-194.
Robertson, G., van Dantzich, M., Czerwinski, M.,
Hinkley, K., Thiel, D., Robbins, D., Risden, K. and
Gorokhovsky, V. The Task Gallery: A 3D Window
Manager. In Proceedings of CHI’2000, The Hague, April
2000, ACM Press. 494-501.
http://www.sun.com. January, 2004.
http://www.thebrain.com. January, 2004.

