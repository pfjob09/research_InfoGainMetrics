Information Flocking: Time-Varying Data Visualization using Boid Behaviors
Andrew Vande Moere
Key Centre of Design Computing and Cognition, University of Sydney
andrew@arch.usyd.edu.au
Abstract
This paper presents a significant extension of the
information flocking concept and algorithms originally
presented by Proctor & Winter [1]. It introduces a novel
way of visualizing time-varying datasets using the
emergent characteristics of self-organization and
dynamic behavior simulation. The current prototype uses
both spatial clustering and behavioral animation to
represent temporal data similarities by simulating the
time-varying evolution of dynamic datasets. Instead of
presenting exact data values, the way how the data
values change over time is being visualized. In addition,
the current information flocking method is capable of
visualizing short-term temporal events or long-term
time-varying data evolutions by automatically generating
different recognizable motion typologies.
This research will show how artificial life principles
have been merged with the field of information
visualization. Several aspects of the original information
flocking algorithms have been improved to incorporate
the real-time evaluation of continuous dynamic data
value streams and to generate multiple stable,
recognizable atomic as well as collective dynamic
behaviors that reflect time-varying dataset changes and
relative data value evolutions. The main information
flocking principles are demonstrated through a
visualization of historical stock market quotes.

1. Introduction
Combining information visualization principles such
as spatial clustering or behavioral grouping with welldefined local interaction rules that depend on external
data values could, at least theoretically, result in forms of
emergent behavior. This means that the resulting
visualization would act in ways that transcend what it
has been explicitly programmed to do. Moreover, such
visualizations act in self-organizing but simultaneously
data-dependent ways, displaying meaningful data
patterns both at a micro-scale, by dynamic changes of
atomic entities, and at a macro-scale, by emergent but
still recognizable, global behaviors generated by
collective
interactions.
Consequently,
emergent
information visualization has much potential in the
context of time-varying datasets, as it is capable to
automatically represent both temporal short-term events
as well as long-term evolutions of data values out of the

simultaneous time-based interactions in local and global
contexts. In effect, information flocking could be
considered next to force-directed placement techniques
and other adaptive data-clustering mechanisms.
The original flocking algorithm was invented by
Reynolds [2], who used the observation of real flocks to
come up with the three primary needs of a so-called birdobject or boid. In fact, Reynolds’ hypothesis was that the
movement of these boids is determined by both internal
as well as external factors and that boids should act as
agents: they are situated, viewing the world from their
own perspective rather than from a global one. In
practice, the following three simple rules need to be
executed at each point in time, for each individual boid.
x Collision Avoidance. Avoid collision with
other boids nearby.
x Velocity Matching. Match the speed and the
direction of boids nearby.
x Flock Centering. Attempt to stay close to boids
nearby.
Flocking behavior has already been used for
information display by Proctor and Winter [1], who
showed how the clustering movements of swarming fish
inside a three-dimensional, virtual world is able to
represent the static relationships of interest of employees,
generated out of a simple similarity weight matrix.
The research presented in this paper extends the
original concept of this technique, also called
information flocking, and integrates the simulation of
time-varying data by implementing live database
querying, continuous data streaming, local data caching,
real-time data similarity evaluation, data-dependent
behavior rules and more stable flocking algorithms. As a
result, this visualization technique is able to
automatically generate various dynamic patterns that are
based upon the temporal and evolutionary similarities
within time-varying datasets. In addition, it effectively
extends the resulting visualization, originally solely
based on spatial clustering, with a new set of information
carriers, namely global and local motion typologies.

2. Related Work
Time-varying data, also denoted as dynamic, timedependent, time-variant, time-based or temporal data can
be imagined as a constant stream of different data values.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

The quantity of the collected data either continuously
changes by accumulation or deletion, or consists of a
constant amount of data entities of which only the data
values change.
Constructing effective representations of dynamic
datasets is not trivial, and differs from most traditional
information visualization approaches that mainly focus
on series of static representations of unchanging datasets.
In addition, most time-varying visualization techniques
are limited to the representation of exact data values, and
typically neglect to reveal any data patterns that emerge
out of the data alteration typology, or how the data
values change over time (e.g., frequently, chaotically) or
by their relative value (e.g. significantly, noisily), and in
the context of the whole dataset (e.g. outlier, average).
Furthermore, the use of time-dependent dynamic
behaviors in visualization applications is still a relatively
unexplored area of research.

2.1. Motion & Behavior
Motion can be controlled by so-called behavior
functions, which tell objects how to behave based on the
status of other objects in their environment rather than
stating where to be exactly at specific times. The goal of
this approach is to generate interpretatively rich and
unexpected behaviors that seem to be intentional,
provoking causality, animacy and initiative. Michotte [3]
suggests that causal relationships are perceived directly
when certain simple animation techniques are used, a
phenomenon which proves the potential of the rich
expressive vocabulary of motion for information
visualization purposes [4]. Lethbridge and Ware [5] used
simple behavior functions based on distance, velocity
and direction to model complicated causal relationships.
Such behavioral animation techniques typically employ
local rules of a rule-based system to determine the
dynamic motions. A set of cause-and-effect rules is listed
which the objects that are being animated, usually called
actors, must follow. To a certain extent, an autonomous
character has thus some ability to ‘improvise’.
Similar motion typologies are perceived as grouped
over time, a phenomenon also called temporal grouping,
which relates to the appearance and locations of the
elements, the proximity in time and similarity of motions
[6]. Accordingly, Bartram and Ware [7] proved that
motion typology has a strong and effective perceptual
grouping effect for information display.
Notably, although the use of motion typology for
representing information might seem to contradict with
mapping data on ‘fixed’ coordinates, it still has great
potential for novel visualization techniques that are
independent of spatial positioning and instead are solely
based on dynamic properties, for instance created by
emergent behavior generation algorithms.

2.2. Boid Visualization
As one of the emergent effects, boids show the
ability to adapt smoothly to unexpected external

situations, a phenomenon that surely has great potential
for time-varying data simulation purposes. The boid
concept has been used in a more technical context,
offering a realistic mathematical model of dynamic
formations in order to characterize swarms with respect
to implementation parameters of wireless, ad-hoc
network communications systems [8]. The emergent
behavior of local flock interaction has also been
employed to form an effective search strategy for
performing an exploratory geographical analysis, much
like detecting visual clusters in large collections of points
[9]. It is an example of the so-called Particle-Swarm
Optimization (PSO) research field that, like other
evolutionary computation algorithms, can be applied to
solve optimization problems in many scientific fields.

3. Implementation
To prove the principles of time-varying information
flocking, a prototype was implemented on top of the socalled infoticle (information–particle) visualization
engine [10]. Similar to behavioral animation, the
infoticle technique enables a real-time, continuous
evaluation of time-varying data values that in turn
control the dynamic actions of particles within threedimensional space. These datasets can be stored on
remote databases and the resulting visualization can be
shown on immersive virtual reality (IVR) installations.

3.1. Dataset
The used dataset consists of historical stock market
quotes of one year, consisting of (±500 companies x
±200 working days) 12.631 data entries. It was acquired
from a public website that accumulates the historical
stock market prices of the 500 Standard & Poor's Index
Directory [11]. This index consists of a representative
sample of 500 leading companies in the most important
industries of the U.S. economy.

3.2. Temporal Simulation
Each boid corresponds with a single data object,
which is a single company within the S&P 500 ranking.
The boid data object is subjected to a continuous stream
of updated data values (time-dependent new stock
market prices), which correspond to the actual
application timeline.
Database Timeframe describes the duration,
expressed in physical time units, in which the data that is
streamed from the database to the visualization system
needs to be positioned in time. At every application
timeframe step, the database timeframe is sequentially
shifted to the next timeframe and new data is collected.
Differences in database timeframe durations result in the
visual analysis of subsequent time granularities.
Application Timeframe denotes the rhythm at
which the application retrieves the next batch of data
objects for the following database timeframe. Each
subsequent application timeframe corresponds to a

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

unique, sequential database timeframe, and both are
continuously updated in parallel. Differences in
application timeframe durations result in dissimilar boid
patterns, as these receive either more or less time to
adapt to the newly created situation. As the boid
behaviors need a certain amount of adaptation time and
are cumulative in nature, the resulting data patterns are
fundamentally different. For instance, too short
application timeframes would prevent the boids to cluster
stably whereas too long timeframes would cause boids to
act randomly and less information-generated.
As a typical boid behavior is influenced by the
change of its corresponding data object and the exact
data values in relation to its nearby neighbors, a boid
should be able to access the data object values efficiently
at all times. In practice, a live retrieval of the individual
data objects from the database for each boid within the
scene is too time-expensive, as this approach requires
considerable computing resources both for network
communication and database querying. Instead, currently
active data objects are stored within a locally accessible
computer memory range and all the data objects that
comply with the next simulated timeframe are fetched
beforehand from the remote database. These actions are
controlled by a querying and storage process running in
parallel with the calculation and rendering algorithms,
avoiding any interruption of the boid animation by the
data evaluation and networking communication.

3.3. Behavior Rules
The original boid behavior rules are extended with
two extra time-varying data-dependent relationships.
x Data Similarity. Attempt to stay close to those
boids with similar data values in the current
database timeframe.
x Data Dissimilarity. Attempt to stay away from
boids with dissimilar data values in the current
database timeframe.
In practice, the second data dissimilarity repulsion
rule reinforces the data similarity clustering tendency
considerably. It avoids non-similar data to cluster
spatially, even during any reclustering movements.
In the current prototype, companies with equal
relative stock market price changes (measured as a
percentage of their closing price) are attracted by the data
similarity flocking (and thus clustering) tendency.
Consequently, a boid will ‘feel’ attracted to those boids
that (1) are spatially nearby and (2) that represent
companies with the same relative and time-dependent
price quote changes during the current database
timeframe. In practice, this means that companies with
parallel (but not necessarily equal) closing price line
diagrams are spatially clustered for that period in time.

3.4. Algorithms
The directional speed vector of a boid A is
calculated as follows. Each new directional vector of
boid A is an accumulation of the attractive or repulsive

forces between boid A and all its neighbors within
specific predefined distances. For instance, the collision
avoidance rule is only invoked when two boids are
relatively close to each other, whereas the velocity
matching rule generally has a wider range of influence.
&
&
&
pi  p A d d CA  vCA
&
pi
&
pi
&
pi
&
pi
&
pi

& &
pi , p A

&
 pA
&
 pA
&
 pA
&
 pA
&
 pA

&

¦p

& &
&
 p A . pi  p A

i

i

d d VM ½°
&
¾  vVM
! d CA °¿

¦v

d d FC ½°
&
¾  v FC
! d CA °¿

¦p

 d DS ½°
&
¾  v DS
similar data °¿
&
&
pi  p A  d DD ½°
&
¾  v DD
dissimilar data °¿

&
i

i

&

i

&
 pA

i

&
 pA

i

&

¦p
i

&

¦p

i

&
 pA

i

are the position vectors of boid i and

neighboring boid A respectively. dCA, dVM, dFC and dDS
are the different influencing distances or so-called catch
ranges. Whenever the length of an accumulation vector is
too large, it becomes normalized.
&
&
v x ! 1  normalize (v x ) o x

^CA,VM , FC , DS , DD`

Separate weights reflect the importance of the
different behaviors. Typically, the collision avoidance
weight is very high, whereas flock centering is
minimized in favor of the data similarity influence. The
values of these distance and weight variables are
determined after a process of empirical experimentation.
&
&
&
&
&
&
v A  wCA .vCA  wVM .vVM  wFC .v FC  wDS .v DS  wDD v DD
0  wCA , wVM , wFC , wDS , wDD  1 are weights applied to

Collision Avoidance, Velocity Matching, Flock
Centering, Data Similarity and Data Dissimilarity
behaviors respectively. v&A , v&CA , v&VM , v&FC , v&DS , v&DD denote the
directional speed vectors.

3.5. Shape
The information flocking method uses blob shapes
to denote data similarity and to support the perception of
spatial clusters. In effect, shapes reduce the amount of
points to be observed, and shift the attention from
individual elements to a more formal and global
interpretation. These shapes also facilitate the detection
of individual outlying boids by forming bumps or bulges
that are visually more predominant. Originally, it was
expected that users could cognitively interpret the visual
formality of boid shapes, for instance when the data
would be time-varying in a chaotic (bulgy form) or stable
manner (sphere-like). However, it was discovered that
such conclusions can only be made out of the change of
the shapes and not out of the perception of static entities.

4. Results
In the current prototype, the application timeframe
of about one second corresponds to a database timeframe
of a daily stock market closing price data subset. Figure

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

1 shows the capability of infoticle boids to denote
individual exceptional behaviors within a large collection
of time-varying data entries. As the corresponding stock
quote chart proves, those boids that cause the shape to
separate or bulge considerably, have experienced a stock
market evolution that was significantly different from the
rest of the dataset during that specific database
timeframe. In particular, within the bulge generated by
stock quotes WIN and COST, one can perceive that
COST is returning to the main flock, as its exceptional
price fall ended some time ago and it started to behave
similarly to the imaginative flock average, the S&P500.
One can also perceive a gaining (bottom) and loosing
(top) area within the shape. The significantly different
price quote evolutions before their similar downfall
explains why NVDA and WIN are not spatially clustered
(yet) within this specific figure.

Figure 1. Boid shape interpretation.
Next to the individual behaviors mentioned above,
information flocking boids have the intrinsic capability
to behave collectively in relation to long-term timevarying evolutions. Figure 2 shows how two very stable
and global behaviors, in which almost all boids are
heading in the same spatial direction, become disturbed
by a sudden spatial implosion of outlying boids towards
the flock center on August 26. Initial research focused to

explain the implosion phenomenon, only to detect no
significant global dataset patterns on or around that
specific date. In fact, further investigations revealed the
implosion to be a relative instable state between the two
very distinct and stable data evolutions: more than 50
companies at the outskirts of the flock were found to
have undergone highly similar price quote evolutions
around August 21 and September 2 (see the parallelly
running stock market price lines at those dates), two
collective data phenomena that were not previously
detected. Possibly, nothing of note was happening with
these companies on those days and the majority of stock
prices were ‘riding’ on external market variables,
meaning that market mood is probably the strongest
correlate during these specific time periods. In effect,
during the period between those stable market
timeframes other companies ‘took the lead’ of the
market, returned to the flock and were replaced by
others.

Figure 2. Time-varying collective boid behavior.
Figure 3 demonstrates the spatial zoning tendency of
boid flocks: the left column denotes the boid infoticles
discovered in the flock periphery, namely those
companies in the flock outskirts that determine the shape
formality, in contrast to the right column, which lists the
boids detected at the flock and shape center. Analysis of
the corresponding stock market price evolutions clearly

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

show that data objects with relative large data value
changes are positioned at the outside of the flock,
whereas equally and steadily changing entities remain
closely together around the main focal flock center.
Whereas the previous images denote infoticle boids
with behaviors that resemble fish or bird flocking, Figure
4 and Figure 5 illustrate some flocking behaviors when
either collision avoidance (resulting in spatially-locked
atomic entity behavior) or flock centering (boids
behaving as swirling electrons) correspond to respective
significant high values.

Figure 3. Time-varying spatial clustering.

Figure 4. Collision avoidance influence.

between the inherently dynamic nature of boids, and the
corresponding representation of static data. In contrast,
our implementation is able to adapt to rapid and even
chaotic data update sequences in real-time.
Behavioral Clustering. Instead of solely relying on
spatial proximity clustering of similar data points, timevarying boids are able to demonstrate dynamic datadependent and collective motion behaviors on a global
level, for instance representing calm (directional
movement) or chaotic (implosion, erratic movement)
stock market periods or long-term price quote change
evolutions (periphery versus center flocking). In effect,
both the boid motion typology and relative positions
relative to the flock center carry informational meaning.
Real-Time Evaluation. The boid method does not
need pre-calculated similarity matrices denoting the
relationships between all the individual data entries, but
determines any data similarity during execution time.
Consequently, this method is capable to handle and
represent live datasets in real-time.
Algorithmic Alterations. In contrast to the original
approach, the current boid technique has not removed the
original Flock Centering rule out of the algorithms
because it enables a more effective global and timevarying coherence of the constantly adapting boid
collection. Leaving these terms helps to relieve the
continuous spatial ‘stress’ imposed by the repetitive data
update process, which evidently requires more rule-based
dynamic stability and more behavior organizing power.
Dissimilarity Repulsion. Two, instead of one, extra
factors extend the original boid algorithm by also
considering data dissimilarity as a separate, individual
influence. Alternatively, dissimilarity could not be
evaluated at all, or be merged into a single (negative
similarity) data influence vector. However, adding this
influence separately enforces the clustering and
declustering tendency of the boids, which is important as
the boids have to form an interpretable constellation
within a relative short application timeframe.

4.2. Method

Figure 5. Flock centering influence.

4.1. Advancements
This research has applied following extensions on
the original information flocking method [1].
Time-Varying Dataset. Although the possibility of
time-varying datasets is mentioned once in the paper, the
original approach seems to focus solely on a static
dataset. In fact, one might note some discrepancy

By extending the information flocking technique for
static data, the proposed method offers an alternative
visualization method for representing rapidly changing
datasets in a visually dynamic, but stable way. Its effects
are unpredictable in nature, although result in
recognizable and interpretable data patterns, including
motion and clustering. In fact, by effectively visualizing
500 stock market quotes simultaneously, several data
patterns were detected that were not predicted
beforehand. Because of the unpredictability of the boid
simulation method, the exact reproducibility of data
patterns is not guaranteed when the boid positions and
directions are not exactly equal at the application
initialization. However, the robustness of the clustering
algorithms will produce practically similar patterns,
although some slight spatial differences might occur.
Time-varying datasets can be visualized with
different time granularities by simply adapting the

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

database timeframe duration of the data that is streamed
to the visualization simulation. However, boid
simulations themselves cannot be easily sped up by
application timeframe alterations, as the self-organizing
nature of the method requires a specific adaptation time
after each introduced data update to resolve the initial
behavior instability and come to a new equilibrium. In
addition, this visualization scenario is able to only
animate a limited amount of boids, as the many spatiallydependent data and behavior interdependencies require a
considerable amount of computing performance.

4.3. Patterns
Although global behavior changes clearly denote the
significance of simultaneously occurring tendencies
within the dataset, they do not clarify the exact reasons
that caused them, so that a separate analysis is required.
Notably, whereas individual boid expulsions generally
denote very specific, exceptional changes in the stock
quotes of the corresponding corporations during that
period of time, collective behaviors typically require
slightly more observation time to be perceived.
In effect, information flocking boids continuously
generate smooth animations morphing between different
distinct dynamic phases. By consequence, information
flocking pattern recognition is largely based upon an
uninterrupted comparison of changing animated clusters
and blob shapes generated by grouped boids, instead of
the more traditional approach of analyzing a static image
or a fixed three-dimensional world. In addition, other
research has shown that even the dynamic collective
behavior of boids can be effectively categorized [8].
However, some features can still be recognized
statically on the level of individual or grouped boids,
such as spatial clustering and boid direction
comparisons. In addition, static boid shape interpretation
is primarily based upon a formal analysis of subtle shape
alterations by continuously tracking the shape morphing.

5. Conclusion
This paper has demonstrated and explained the core
principles and algorithms of information flocking applied
to time-varying datasets. It has shown how the
information flocking boid technique is able to represent
the time-dependent update trends within an extremely
dynamic and almost chaotic dataset, consisting of realworld stock market data. Notably, instead of presenting
exact data values, the way how the data values evolve is
being visualized. However, because stock market trends
are generally caused by external factors, the exact data
pattern occurrences need to be explored through the use
of alternative information sources.
Information flocking boids are capable of generating
collective behavior patterns that are depending on timevarying data update characteristics, such as long-term
data value evolutions or sudden data value alteration
events, and are interpretable by users. In addition, the
relative data value changes in relation to previous data

updates and the whole dataset have been visualized. In
effect, both spatial clustering as well as motion typology
depict time-varying informational values.
This method is proposed as a valuable approach for
visualizing complex and large datasets, as it enables the
automatic generation of time-varying data patterns.
Further research should prove whether the information
flocking approach has any similar features or typical
characteristics of force-directed diagrams. The current
technique is capable to represent 500 dynamic data
points simultaneously and in real-time, while depicting
those that have outlying or exceptional performances, or
in contrast, behave like the dataset majority. Further
hardware technology developments will certainly
increase this number in the future.
One can imagine many other dynamic datasets that
consist of large amounts of unpredictable or noisy
numerical values that might show some meaningful timevarying similarities or dependencies that could use the
information flocking method to detect time-varying
oddities or global evolutionary similarities in any of the
measured dimensions. Alternatively, one could imagine a
two-dimensional information flocking application that
requires less navigation and interpretation strain for
potential users.

References
[1] Glenn Proctor and Chris Winter. Information Flocking:
Data Visualisation in Virtual Worlds Using Emergent
Behaviours. In Virtual Worlds 98, pages 168-176,
Springer, 1998.
[2] Craig W. Reynolds. Flocks, Herds, and Schools: A
Distributed Behavioral Model. Computer Graphics.
Volume 21, pages 25-34, 1987.
[3] A. Michotte. The Perception of Causality. Basic Books,
New York, 1963.
[4] Colin Ware, Eric Neufeld and Lyn Bartram. Visualizing
Causal Relations. In IEEE Information Visualization 99,
pages 39-42, 1999.
[5] T.C. Lethbridge and Colin Ware. Animation Using
Behavior Functions. In: T Ichikawa, E Jungert, RR
Korfhage, eds. Visual Languages and Applications.
Plenum Press, New York, 1990, pages 237-252.
[6] Peter Kramer and Steven Yantis. Perceptual Grouping in
Space and Time: Evidence from the Ternus Display.
Percept Psychophys. Volume 59, pages 87-99, 1997.
[7] Lyn Bartram and Colin Ware. Filtering and Brushing with
Motion. Journal of Information Visualization. Volume 1,
pages 66-79, 2002.
[8] B. Anthony Kadrovach and Gary B. Lamont. A Particle
Swarm Model for Swarm-Based Networked Sensor
Systems. In ACM symposium on Applied Computing,
pages 918-924, ACM Press, 2002.
[9] James Macgill and Stan Openshaw. The Use of Flocks to
Drive a Geographic Analysis Machine. In International
Conference on GeoComputation, 1998.
[10] Andrew Vande Moere, Kuk Hwan Mieusset and Markus
Gross. Visualizing Abstract Information Using Motion
Properties of Data-Driven Infoticles. In Conference on
Visualization and Data Analysis 2004 (IS&T/SPIE
Symposium on Electronic Imaging), SPIE, 2004.
[11] SWCP. Historical Data for S&P 500 Stocks, 2003, URL,
http://kumo.swcp.com/stocks

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

