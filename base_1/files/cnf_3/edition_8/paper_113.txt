A Three-dimensional Authoring/Presentation System
for Immersive Virtual Environments: Poster3D
Noritaka OSAWA1,2 and Kim. Sangtae3
1

National Institute of Multimedia Education, JAPAN
The Graduate University for Advanced Studies, JAPAN
3
Art & Design, University of Tsukuba, JAPAN
osawa@nime.ac.jp

2

Abstract
We have proposed and developed a simple 3D
authoring/presentation system for immersive virtual
reality environments. Our system enables a user to
create and edit presentation content both by using a 2D
graphical user interface (GUI) on a PC desktop, and
through direct manipulation by hand gestures in an
immersive environment. The user can thus enjoy the
advantages of both simple GUI operations on the
desktop and efficient tuning of 3D layout by direct
manipulation. The system exploits various features of
3D visualization including 3D nested structures, 3D
graph structures for hyperlinks, and 3D depth for
zooming or focus+context visualization. In other words,
our system utilizes 3D virtual space to produce
effective and interactive 3D presentations in immersive
virtual environments.

1 Introduction
The performance of both graphics processors and
computational processors (or in general, CPUs) for
personal computers is rapidly improving. This is
making it easier to construct PC-based immersive
virtual reality systems. Such systems can now be used
more widely than ever before. In virtual reality systems,
simulation results or data can be visually presented in
3D. The type of visualized data depends on the
application, such as molecular biology or numerical
calculation. Although various data can be effectively
visualized in a virtual reality system, it is difficult to
explain the application itself or the meaning of the data
in this application-based approach.
Conventional presentation graphics systems such as
PowerPoint[3], Freelance[2], and Keynote[1] are
usually utilized in a 2D graphical user interface (GUI).

Although these software packages do provide pseudo
3D transition effects, there are no real 3D presentation
graphics systems for simple presentations in an
immersive virtual environment. This is partly because
even a simple 3D presentation of an explanation would
require special application software and much work is
required to develop such software.
Therefore we have proposed and developed a simple
3D authoring/presentation system for immersive virtual
reality environments. A screenshot of the system is
shown in Figure 1. Our system enables a user to create,
edit and display presentations.
The layout and
arrangement of presentation content can be performed
both on the desktop GUI and in an immersive virtual
reality environment by using hand gestures. In other
words, the system allows the user to perform simple
editing of a 3D presentation in the same environment
as used to display the presentation resulting in an
effective and interactive presentation in the immersive
environment. It is important to edit a 3D presentation
in an immersive environment using a large format
display because the format size of a display influences
the visibility of 3D contents. For example, rapid
movements, which are appropriate on a desktop display,
are often inappropriate in the immersive environment.
The editing functions in the immersive environment
allow the novice users to confirm easily the
appropriateness of 3D contents in the same
environment.
The effective presentation system utilizing 3D space
on the desktop is also important and should be
investigated. The proposed system can also be used on
desktop systems, that is, fishtank-type VR systems or
usual PC systems. Thus we believe that our system will
attract interests in 3D presentation utilizing VR and
promote the advanced research on immersive 3D
presentation systems.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Presentation Space

Handles

Property Panel
Hyperlinks

Poster
Prototypes

Title

2D image
File Operation
3D model

Panel

Link Button

is a component that can be copied and moved.

Proxy of Presentation Space

Figure 1: Screenshot of the system. All handles are displayed.

2 3D visualization
Our system takes advantage of the features of threedimensional visualization. It employs nested 3D
structures, 3D depth for zooming, and 3D graph
structures for hyperlinks.
2.1 Nested structure
In our approach, the presentation is based on nested
structures, which is similar to existing presentation
graphics software. In this system, however, these
structures are displayed in 3D. Each component among
the components of a nested structure is represented by a
plane. In this paper, we call the top-level component in
a space is a “poster”. Components at the deeper levels
are positioned above the plane at various displacements.
This representation provides a simple zooming effect. If
the deeper components are placed further back, they are
zoomed out while if they are placed closer to the front
(or the viewpoint), they are zoomed in. This nested
structure can be shown by not only depth but also
normal indentation (horizontal offset). Figure 2 shows a
screenshot of a nested structure.

Figure 2: Visualization of a nested structure

2.2
Handle
Each component has a handle shaped like a cylinder
or a square pillar, which is a default shape and can be
customized. The handle is used for copying and moving
the component, and opening its property panel.
Handles are necessary for ease of use in an
immersive virtual environment as explained in our

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

paper [11]. Without handles, the nested structures
would have to be large enough to provide separation
between the outermost and innermost structures.
Otherwise, it would be difficult to choose structures in
the middle through direct manipulation by hand without
touching the neighboring structures.
Handles are not usually displayed because they may
limit visibility and clutter the interface. Instead, they
are generally displayed on demand. When the user’s
hand approaches a component in the immersive display,
the handle is displayed. On the desktop GUI interface,
the display of the handles can be turned on or off.
Figure 2 also shows a nested structure with handles.

the viewpoint appear large and distant virtual objects
appear small. This is similar to the 3D utilization in
Perspective Wall [9] but the proposed 3D presentation
system is not restricted to wall shapes. Figure 3 shows
an example of focus+context display in our system.

2.3 Graph structure
A relationship or transition between posters or
components is represented by a hyperlink. A hyperlink
from a component to another component is represented
by an arrow (yellow line in color) as shown in Figure 3.
This type of hyperlink representation is impossible in
conventional 2D presentation graphics software.

Figure 4: Relationships between components and
their property panels

Figure 3: A focused poster and surrounding context
posters

2.4 3D focus + context
By arranging posters appropriately, we can place a
main topic poster in front of the user’s viewpoint and
related posters around the topic poster. This type of
arrangement achieves focus+context visualization [5] of
the topic. In 2D visualization, focus+context
visualization requires distortion techniques, which
include a fisheye view [7][12], and a stretchable rubber
sheet[13] whereas 3D visualization can support
focus+context visualization by simply exploiting the
3D characteristics of depth, since virtual objects near

2.5 Multiple property display
The displacements and other attributes of a
component, such as its color or font size, can be
specified from its property panel. For example, by
setting a poster’s background color to translucent, the
3D scene behind it can be viewed. This can be done to
show viewers the context of the poster. Usual 2D
presentation graphics software cannot produce this
effect.
Multiple property panels can be displayed
simultaneously.
The correspondence between a
component and its property panel is indicated by a line
with an arrow (red line in color) as shown in Figure 4.
This type of visualization allows the users to edit the
properties of one component while looking at properties
of another, or to copy properties from one component to
another. This makes it easier to edit properties. This
type of visualization can also be utilized in a
cooperative virtual environment. While one user edits
the properties of one component, another user can edit
the properties of another component. The users can
easily understand the relationships between multiple
property panels and components.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

3 Authoring
As stated before, presentations can be authored by
using the desktop GUI and through direct manipulation
by hand in the immersive virtual environment. Each
presentation is composed of a combination of basic
components, which are simple and flexible. The basic
components include poster components, text
components, 2D image components, link button
components, and 3D model components. The 3D
offsets of the components in a nested structure can be
specified through their property panels.

hyperlinks can also be used in conventional 2D
presentation software, it is difficult to understand what
happens when a hyperlink is selected since the target is
displayed only by a text label, icon or image. Our
system, however, can indicate the target with an arrow,
and it can also show the context around the origin of the
hyperlink. The display of hyperlinks can be turned off
because the display of all hyperlinks may become
visual clutters.

3.1 Poster component
The poster component corresponds to a slide in 2D
presentation graphics software. It can include any of the
other basic components. The position of a poster
component can freely be specified in 3D space, and
other basic components can be included in a poster
component or a text component. The position of a
component included in another component (parent) is
relative to the parent’s position.
3.2 Text component
The text component can have a text string and child
components. By adding text components into another
component, a nested structure can be formed. It is
easier to input texts in a desktop GUI than in an
immersive virtual environment. The user can thus
create nested structures of texts on the desktop in the
same way as with conventional 2D presentation
graphics software.
In general, it is also possible to input texts in an
immersive virtual environment by using a wearable
keyboard or a virtual keyboard. However, it usually
takes more time to input text in an immersive
environment than in a desktop GUI. Speech recognition
input system can also be used to input text but the cost
of free text input using speech recognition including
error correcting cost is often expensive than the cost of
free text input in a desktop GUI.
3.3 2D image component and 3D model component
The 2D image component displays an image, which
can be loaded from a picture file. Our current system
supports the JPEG image file format. Figure 5 shows an
example of 2D image component in a poster.
The 3D model component can contain a 3D model in
it. The VRML file format is supported. Figure 6 shows
a screenshot including a 3D model, which is a shape
like the sun.
3.4 Hyperlink button component
The hyperlink button component consists of a label
string and a hyperlink to another component. Although

Figure 5: 2D image in a poster

Figure 6: 3D model on a poster

3.5 Prototypes
The operations on components are implemented
through prototype-based object orientation. A new
component can be created by cloning an existing
component. Not only text and image components but
also hyperlink button components can be cloned.
For 3D presentation components, prototypes are
prepared as shown in Figure 1. The user can copy
components from templates. If she copies a text
component that has a child component, the copied
component will have the same structure and properties.
Since the prototypes can be edited, the user can

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

customize prototype components to create presentation
templates.
3.6 3D Layout
The user can arrange components in 3D space by
using the mouse with the desktop and moving her hand
in the immersive environment. In the latter case,
handles are directly manipulated in order to move or
copy components. The users can move a component by
pinching its handle between her thumb and forefinger.
If she picks up a component between her thumb and
forefinger, the component is copied rather than moved.
The copying is actually completed by releasing the
component at the target position. An unwanted
component can be discarded by moving it into the
virtual trash.
We think a user should be able to place components
in 3D space approximately by using the mouse. The
position of the component can then be tuned by hand in
the immersive virtual environment. Without the handediting functions of the virtual environment, the user
would have to use the desktop PC in the immersive
virtual environment to adjust the positions of the 3D
components. These adjustments would be tedious and
time-consuming because the display formats of the PC
and the immersive environment are different. Our
system can thus make 3D presentation authoring and
layout of virtual objects easier for the immersive virtual
environment.
4 Presentation
A finished presentation can be shown in both the
immersive virtual environment and on the desktop.
Figure 7 shows a snapshot using the system in the
immersive environment.

4.1 Transition
When a hyperlink button on a poster is clicked (or
pushed), the viewpoint is moved to a position from
where the target component of the hyperlink can be
viewed. The transition is animated according to the
path between the origin and the target.
The transition animations of conventional
presentation graphics software provide some visual
effects but usually only show the transitions from one
poster to another. These transitions do not show the
context around the current poster. Our 3D transition
capability, however, can show the context of the new
poster in addition to visual effects, as long as the
transition path is appropriately designed. For example,
if the user designs a transition path that is first elevated
to give a bird’s eye view and then descends to the target,
the location of the current topic within the whole
presentation will be shown in 3D space.
4.2 Navigation
In addition to performing transitions along paths
between posters, the user can navigate in 3D virtual
space. The hand gesture of forming a fist can be used
to grasp and move the virtual space. If the user moves
her fist closer to her (backward), the viewpoint moves
forward from the original position. This motion creates
the illusion of grasping the virtual space.
As with transitions, the bird’ eye view by navigation
is also useful in navigation to show the overview of the
presentation. The 3D virtual space can thus be used
effectively. Figure 8 shows an example of bird’s eye
view in our system.

Figure 7: Snapshot in an immersive environment

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Figure 8: Bird’s eye view

5 Input/Output
5.1 Internationalization
The labels and menus in the presentation system can
be easily customized. Multilingual texts can be handled
through the internationalization functions in Java. The
texts in the labels or menus are easy to customize to
each language. Figure 1 shows a screenshot in an
English setting. Figure 9 shows the startup screen in a
Japanese setting.
5.2 Data Exchange
The user can export a presentation into a file or
import one from a file. The use of Java’s serialization
functions makes it easy to save and restore the content
of presentations.

Figure 9: System’s startup screen shown with
Japanese texts.

6 Implementation
The system was developed with the Java
programming language [6], the Java3D graphics library
[10] and the it3d library [7]. The use of Java makes the
system portable and it is thus expected to work in many
environments. The 3D widgets in it3d support
prototype-based object orientation, that is, a delegationbased mechanism.
As described before, the system operates on both a
desktop PC and in a virtual reality environment. The
immersive virtual environment system called TEELeX
(Tele-Existence Environment for Learning eXploration)
[4] at National Institute of Multimedia Education in
Japan was used for the immersive projection display.
TEELeX is a kind of surround display system like
CAVE [6]. Each TEELeX screen measures 3 by 3
meters. The circular polarization method is used to give
a stereoscopic view; in other words, TEELeX employs
a passive stereo system.

7 Applications
As explained in the introduction, our proposed 3D
presentation system has been designed for simple 3D
presentations on research and new products. We think
that this system can be extended to other applications,
such as projecting educational materials in immersive
virtual environments. For example, the hyperlink
capability could be utilized to present drills or provide
quiz functions in educational environments like
museums. A participant would see a quiz on a poster in
3D and answer the quiz by pushing hyperlink buttons.
Depending on the answers, the appropriate explanations
or information in 3D would then be shown in 3D to the
participant. Our system should help reduce the work
required to develop such educational materials in
immersive environments.
Our system can also be useful and effective even if it
is only on the desktop. It will attract interest from
audiences in typical business presentations. The quiz
system mentioned above can also be used on the
desktop.
8 Summary
We have developed a 3D authoring/presentation
system for immersive virtual reality environments. Our
system takes advantage of the features of 3D
visualization. It is not a simple extension of
conventional 2D presentation graphics software, but a
novel approach to presenting information interactively
in three dimensions. In addition to the presentation
functions, our system enables the user to create and edit
presentation content both by using a 2D graphical user
interface on a desktop and through direct manipulation
by hand in an immersive virtual environment.
We plan to enhance the functionality of the system.
Our future system will support 3D video components
which will use the Java Media Framework. This
enhancement will enable users to enrich their 3D
presentations. This video capability could also be
improved to support video conferencing in a 3D space.
Acknowledgements
This research was partially supported by a Grant-inAid for Scientific Research (14380090) in Japan, and
by "The R&D support scheme for funding selected IT
proposals" program of the Ministry of Public
Management,
Home
Affairs,
Posts
and
Telecommunications in Japan.
The toolkit library "it3d" was developed with
funding by the Support Program for Young Software
Researchers, which was implemented by the Research
Institute of Software Engineering (RISE) commissioned
by Information-technology Promotion Agency (IPA) in
Japan.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

References
[1] Apple Computer, Inc.,
<http://www.apple.com/keynote/>
[2] International Business Machines Corporation,
<http://www.lotus.com/products/smrtsuite.nsf/wPo
sters/freelance>
[3] Microsoft Corporation,
<http://www.microsoft.com/office/powerpoint/defa
ult.asp>
[4] Kikuo Asai, Noritaka Osawa, and Yuji Y.
Sugimoto, “Virtual Environment System on
Distance Education,” Proc. of EUROMEDIA '99,
pp. 242-246, 1999.
[5] Stuart K. Card, Jock D. Mackinlay, and Ben
Shneiderman,
Readings
in
Information
Visualization - Using Vision to Think, Morgan
Kaufmann Publ., 1999.
[6] Carolina Cruz-Neira, Virtual Reality Based on
Multiple Projection Screens: The CAVE and its
Applications to Computational Science and
Engineering, doctoral dissertation, University of
Illinois at Chicago, 1995.
[7] George W. Furnas, Generalized Fisheye Views,
Proc. ACM SIGCHI '86 Conference on Human
Factors in Computing Systems, pp.16-32, 1986.
[8] James Gosling, Bill Joy and Guy Steele, The
JavaTM Language Specification, Addison-Wesley,
1996.

[9] Jock D. Mackinlay, George G. Robertson, and
Stuart Card, "The perspective wall: detail and
context smoothly integrated," Proc. of ACM
SIGCHI Conf. on Human Factors in Computing
Systems, pp.173-179, 1991.
[10] Noritaka Osawa, Kikuo Asai and Fumihiko Saito,
"An Interactive Toolkit Library for 3D
Applications: it3d," Eighth Eurographics Workshop
on Virtual Environments, (EGVE2002), pp.149157, 2002.
[11] Noritaka Osawa, Kikuo Asai, Motofumi Suzuki,
Yuji Y. Sugimoto and Fumihiko Saito, "An
Immersive Programming System: Ougi," The 12th
International Conference on Artificial Reality and
Telexistence (ICAT 2002), pp.36-43, 2002.
<http://www.ic-at.org/>
[12] Manojit Sarkar, and Marc H. Brown, "Graphical
fisheye views," Comm. of the ACM, Vol.37, No.12,
pp.73-83, 1994.
[13] Manojit Sarkar, Scott S. Snibbe, Oren J. Tversky,
and Steven P. Reiss, "Stretching the Rubber Sheet:
A Metaphor for Viewing Large Layouts on Small
Screens," Proc. of UIST'93, 1993, pp.81-91.
[14] Henry Sowizral, Kevin Rushforth and Michael
Deering, The Java 3D API Specification, AddsonWesley, 1998.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

