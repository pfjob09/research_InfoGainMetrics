Adaptive Site Map Visualization based on Landmarks
Dirk Kukulenz
Luebeck University, Ratzeburger Allee 160
23538 Luebeck, Germany
kukulenz@iﬁs.uni-luebeck.de

Abstract
Site maps are frequently provided on Web sites as a navigation support for Web users. The automatic generation of
site maps is a complex task since the structure of the data,
semantical and layout aspects have to be considered. One
main problem is a concise presentation of site maps since
the data to be displayed is usually extensive. The focus of
this article is a new method to offer concise site map presentations to Web users by adaptation of site maps to landmarks and search queries. By landmarks we denote important data objects in a Web site, that are determined by Information Retrieval (IR) methods and used to simplify the
Web site graph such that a layout may be generated efﬁciently. Adaptation of site maps to user queries provides
personalized maps that reﬂect the part of a Web site that
is relevant for a speciﬁc user. By these means the fraction
of the Web site is visualized efﬁciently as a site map that
is adapted to the speciﬁc needs of a user. In contrast to
previous approaches, the landmark presentation provides a
concise view of a larger Web space, which may be applied
to disambiguate search results.

1. Introduction
The ’lost in hyperspace’-problem expresses the disorientation users frequently encounter when searching for information in hyperspace [8]. In the Web this disorientation
problem is especially signiﬁcant due to the large size of the
Web and the unstructured or semi-structured presentation
of information. Diverse approaches have been proposed to
make it easier for users to navigate in Web sites and to face
the disorientation problem. One method concerns the information architecture of a Web site itself [13], since a clear
structure of the information space and a clear structure of
Web pages simplify orientation. A different approach is to
visualize a user’s navigation history [31], [16].
A different information source that may be used for a navigation support are the data on a Web site itself. This in-

formation may be considered at different levels. Search engines usually consider Web information at the level of terms
in documents. A different information source is the structure between documents, an approach which is well-known
from page-rank calculations and Web graph visualizations.
The latter information is commonly used for visualizations
of the Web [11], [26]. In the context of navigation support one idea is to show maps of the data on a Web site,
so-called site maps, similar to maps in the real world [14].
Site maps are frequently provided on Web sites showing the
contents of a site in a clear form comparable to the table of
contents of a book. Site maps are presented either in textual
or in graphical form. Empirical studies and guidelines describe the advantages and problems users encounter when
applying site maps. Although site maps provide a navigation support and users applying site maps were observed to
solve certain search problems in a shorter time [6], different
authors report that site maps are often too extensive and too
complex and thereby difﬁcult to understand by a user [25],
[9].
The main idea described in this article is to automatically
generate clear site map presentations of reasonable size by
adapting the maps to certain aspects of the data on the site
and furthermore by adapting maps to a user’s needs. In general, there are different information sources, such adaptive
site maps may depend on. Site maps may be adapted to the
behavior of a speciﬁc user, e.g. his current position in the
hyper space, the previous navigation steps and query strings
and also to registered group behavior consisting of current
or collected user transactions. We will denote this kind of
adaptation as usage adaptation. Furthermore adaptive site
maps may depend on the data and link structure on a site,
we will denote as data adaptation. The automatic site map
generation presented in this article combines usage and data
based site map adaptation. Data based adaptation is used
for an automatic evaluation and reduction of the data to be
presented on the site map for an efﬁcient layout generation.
The resulting layout is used as a basis for an adaptation of a
site map to the needs of a speciﬁc user. Search results may
be represented in a Web site view and changing parameters

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

in a search process may be visualized in the same view.
In the following section an overview of related research in
the ﬁeld of Web site maps is given and in section 3 the contribution of this article is described. Section 4 proposes and
compares possible architectures for adaptive site map generation and motivates the choice in our prototype implementation. In section 5 basic aspects for the site map generation
and the main algorithms are described. Section 6 shows example views of generated site maps that are discussed in
section 7. In section 8 we summarize the main results and
describe further aspects.

2 Related research
The main questions discussed in the literature in the ﬁeld
of site map generation concern the content to be visualized
and possible visualization techniques. As far as visualization techniques are concerned the ﬁrst question to deal with
is the ’space’ where data should be visualized. In [22] and
[14] overviews of two dimensional presentations of Web
structures are given. An overview of possible visualization
techniques in the case of a three dimensional space is given
in [2]. A fundamental question is how to map data items
into the respective 2d oder 3d space. One possibility for an
efﬁcient layout in 2 dimensions are ﬁsh-eye or fractal views
as described in [32]. In the case of 3 dimensions a hyperbolic space view is presented in [23].
The main question however concerns the visualized content
which can, similar to the distinction in the introduction, be
divided into usage based and data based visualization or a
combination of both. Data based visualization may concern
the hyperlink structure of the Web [14], [2]. The visualization may also concern clusters of data objects or hierarchies
usually acquired automatically from the Web data [35]. In
[7] a system for induction and visualization of inherent hierarchies in Web data is presented. Similar to this in [17]
logical domains (groups) in a Web site are estimated and
visualized based on meta data and the hyperlink structure.
Different methods based on clustering and projection of an
information space to a lower dimensional (and thereby presentable) space are examined in [30].
Usage based visualization is sometimes also denoted as social awareness [19]. In [5] a concept is presented to show a
user the actions of different users in the same site. In [10]
the activity on a site is visualized to provide a surveillance
tool for administrators. Some authors present visualization
of access-log information provided by Web servers [12],
[34]. A different kind of usage based visualization is the
presentation of search results in a Web structure [28], [21],
in this case ’usage’ or ’user behavior’ refers to the provided
query strings.

3 Contribution
In this article a new method to generate concise and personalized site map visualizations is presented. Further we
present an architecture to offer generated site maps as a service to visitors of a speciﬁc Web site. For the generation of
site maps a combination of different approaches is applied.
The new approach presented in this article is a topology preserving landmark view. With landmarks we denote data objects in a Web site estimated to be important by different (Information Retrieval) methods. In our developed prototype
system one aspect to determine landmarks is a page rank
calculation [3]. Landmark nodes in the Web graph constitute a basic ’grid’ for the presentation of the graph. Other
data objects between landmarks are shrinked and thereby
removed from the focus of a user while the link structure
is still visible. The link structure is ﬁltered by previously
presented hierarchization methods [17], [4]. The presented
new approach is in some respect similar to the multi-focus
ﬁsh-eye view in [27]. In [27] data objects are arranged in
a grid-like structure and speciﬁc parts are highlighted by
an increased size. In contrast to this approach we present a
multi-focus graph-visualization. Relevant parts of the graph
are increased. The focus points are not chosen manually
but are estimated by automatic methods which makes the
landmark-based visualization fully automatic. In addition to
the topology-preserving landmark view, a site map is further
reduced by personalization. The presentation depends on a
user’s current position in the hyperspace. The visualization
of query results is applied to highlight parts of the site that
meet the current interests of a speciﬁc user. A main advantage of the combination of a landmark view with search
result ﬁltering compared to previous search result visualizations in [28] and [21] is the possibility to display a larger
fraction of the Web graph. We describe in section 7 that
a main beneﬁt of this presentation is to be able to disambiguate search results.

4 Architecture and implementation
There exist three basic architectures in order to realize a
system providing adaptive site maps. A main question is,
if the knowledge about one or a number of Web sites is acquired at the server or the client site. In the ﬁrst case the
component of the adaptive site map tool responsible for this
task runs at the server side. An example for this case is a
service that is provided by the owners of the Web site, as are
currently most static site maps. In a client based architecture, the knowledge about the Web is acquired at the client
side. This architecture is well-known from different information agents, e.g. in [18].
There are obvious advantages and disadvantages of these architectures concerning the possibility to store and to prepare

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Web server
access−log
collector
Web browser

Web server

adaptive sitemap server
adaptive site
map client

Web server

graph
visualizer

Web crawler
considered
Web area

Java applet

search engine

Web server

Internet

server side

client side

Figure 1. Architecture and components of the site map generation tool.

information about Web sites, to acquire knowledge about
users and to present information. For client side systems it
is usually easier to acquire knowledge about a user, especially if navigation takes place on a number of servers and
server side session control is therefore more difﬁcult. Furthermore, client side systems may usually provide more reﬁned visualization and interaction techniques. On the other
hand server side systems may acquire and prepare more detailed knowledge about a server and thereby provide a faster
access to the support information.
In the system implemented in this work we applied a third
architecture, the combination of a server and client side architecture (ﬁgure 1). The architecture is realized by a component of the site map generation tool on the server side
and a java applet component on the client side which is sent
to a client when the site map service is launched. Figure
1 shows the components and the communication links of
the developed system. The Web crawler used to acquire the
link structure of a server is described in [1]. The search engine component for indexing and query search is presented
in [20]. The visualization and graph layout component is
described in [29].
By applying this architecture the owner of a Web site may
provide adaptive site maps as a service for Web users. The
architecture provides a fast access to the precompiled site
map data and personalization by search queries, by user
proﬁles or by a user’s current Web position or navigation
history may easily be integrated.

5 Site map generation
In this section the main aspects for the site map generation are described, like the ﬁltering of landmarks by page
rank and access count estimation and the induction of a Web
site’s intrinsic hyperlink hierarchy. Further aspects like a
method for locating search results in a Web graph are discussed in order to display search results not contained as
data objects in a current site map view.

5.1 Landmark deﬁnition and extraction

The presented site map layout is based on landmarks.
Landmarks denote data objects in a Web site (e.g. Web
pages) that exceed a number of threshold values with respect to speciﬁc properties as deﬁned below. The threshold
values are provided by a user using the user interface described in section 6. Thereby a user may inﬂuence which
data objects are chosen as landmarks.
The landmarks are used to simplify the Web site graph and
to implement a site map presentation that preserves the link
topology of the site by assigning a size to a node (i.e. item
in the map) that corresponds to its estimated importance.
Thereby a focus on relevant Web areas is performed.
One property landmarks may depend on is based on the
link structure. Well-known examples of link-based ranking methods are the HITS [15] and the PageRank [3] algorithms. In the presented work PageRank values of individual nodes are approximated by considering the local hyperlink structure. This local page computation is similar to an
approach presented in [33]. The method is based on a link
database built by the Web crawler component. In an initial
step page rank values are initialized with a certain value (of
one). Links pointing to a certain page are considered for the
page rank computation as long as the data objects are part
of the respective Web site.
A different property of data objects considered to determine landmarks is based on visitation frequencies of Web
data. Visitation frequencies are estimated by the access-log
counts provided by the considered servers. In the prototype
system access-log ﬁles are passed regularly from the Web
servers to the adaptive site map engine (ﬁgure 1). The numbers of visitations for each data objects are computed per
week providing the visitation frequencies.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Figure 2. A site map view of the site ’www.iﬁs.uni-luebeck.de’ displaying search engine result for a query term
(’IFIS’) with retrieval priority numbers attached to each result node.

5.2 Hierarchization
Web site hierarchization is applied to simplify the Web
graph of the considered Web space. Different hierarchization methods have been presented in [35] based on access
patterns. In our approach we acquire a hierarchization from
the link structure and the relative addresses of hyperlinks
applying a spanning tree algorithm. Links are grouped according to relative path addresses contained in URL addresses. Group 1 consists of the links between pages in the
same directory. Group 2 consists of links between a page in
a directory and a page in a direct or indirect subdirectory.
Group 3 contains links from a page to another page in a direct or indirect ancestor directory. All other links constitute
group 4. The links in groups 1 to 3 are supposed to contain
information about the hierarchical structure of the Web site
and are used for the spanning tree algorithm.

5.3 Shortest path computation
In the presented method one approach to reduce the site
map graph is based on a localization with respect to a user’s
Web position. Therefore a site map presentation is usually
only a fraction of the entire Web site graph. This fraction

is centered around the current position of a user up to a certain depth according to the link structure. When displaying
landmarks or search results that are not contained in this
Web area it may be necessary to link further data objects to
the presented site map view and thereby to extend the current view. For this purpose a shortest path ﬁnding algorithm
is applied. In this work we apply a breadth ﬁrst search algorithm that operates on the Web graph registered by the
crawler.

5.4 Graph layout
The subgraph obtained in 5.2 has a hierarchical structure
which may be displayed efﬁciently. For the graph layout
computation we apply a spring layout algorithm [24], [29].

6 UI and Visualization examples
In this section we describe the user interface and visualization examples of a prototype of the adaptive site map
presentation tool. A typical view showing a site map of the
Web server at our institute (www.iﬁs.uni-luebeck.de) is presented in ﬁgure 2. At the top of the image different buttons
and text-ﬁelds are displayed that are necessary to control

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Figure 3. A site map view reduced by landmarks, based on PageRank ﬁltering.
the site map presentation. The text-ﬁeld on the top on the
left is used to insert a URL address, the root element for the
site map presentation. Next to this text-ﬁeld the depth of the
presented graph with respect to the root element and the hyperlink structure may be adjusted for the site map presentation. The text-ﬁeld titled ’Search’ below the URL-text-ﬁeld
accepts query strings that are forwarded to the adaptive site
map server. Below on the right in the control ﬁeld are different buttons to adjust the landmark selection. The minimal
PageRank or the minimal average access count value for
data objects to be displayed as landmarks may be adjusted.
The window in ﬁgure 2 shows a site map graph centered around the initial URL address provided by the user
(www.iﬁs.uni-luebeck.de/index.html). The nodes in this
graph are labeled by the title-strings acquired from the respective Web pages. The edges between nodes show the
computed hierarchical Web structure. Pointing onto a node
with a mouse opens a second window that displays further
information about the respective Web page as can be seen
in ﬁgure 3 below on the right. In the site map view in ﬁgure
2 the user provided a query string (’IFIS’, the short name
of our institute). The site map in ﬁgure 2 is personalized
by highlighting of query results in the site map view and by
displaying of retrieval weights of query result pages as an
attachment to each result node.
It is obvious that this site map view may become very ex-

tensive if the depth-value is increased. In this case a user
may apply the topology-preserving landmark view in ﬁgure
3. Figure 3 shows a site map presentation that is simpliﬁed by landmark highlighting and decreasing of other data
items based on PageRank estimates (the page-rank button is
activated).
Both visualizations in ﬁgures 2 and 3 display the same data.
The topology of the data is unchanged in ﬁgure 3 (topology
preservation) while the landmark view in ﬁgure 3 lays focus
on relevant data and is suitable for a concise presentation of
a larger Web area. By using the interface a user may adjust
and optimize the presentation of the site map view.

7 Discussion and further applications
A main problem concerning the presentation of site maps
is to simplify the data structure to be visualized. The topology preserving landmark view in ﬁgure 3 may be regarded
as a multi-focus view of a site map. The focus points are
computed automatically by a landmark estimation. Comparing the site map presentations in ﬁgures 2 and 3 it may
be seen that the landmark-based view is less complex and is
suitable for the presentation of a larger fraction of the Web
site graph.
Search engines display results usually as lists ordered by estimated priority. However query strings provided by users

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

to a search engine are usually only preliminary descriptions
of a requested semantical content. This is the reason why
there is usually a semantical ambiguity in the process of estimating relevant data objects based on query terms. It is
obvious that this semantical ambiguity may hardly be expressed by a priority list provided by common search engines. A semantical ambiguity has to be expressed by graph
structures that allow a more complex (semantical) neighborhood structure of data objects.
The visualization in ﬁgure 2 shows one possible approach
to deal with this problem. Search results are mapped onto
the data and hyperlink structure of the considered Web area,
represented by a site map. By this means a user may realize
search results in speciﬁc ’areas’ of the Web and thereby derive a semantical ambiguity of the search results from their
location in different Web areas that deal with a different semantical content. However this disambiguation is only possible if the rough structure of the Web site is clear. This
problem motivates the presented topology preserving landmark view. It may be observed that the adaptive site maps
in ﬁgures 3 and 2 are displayed with a similar layout of the
basic graph structure. The number of displayed data objects
and edges is the same. Only the shape of objects, the color
and additional information attached to the nodes is different.
There is an additional advantage of this approach. An ordered list provided by a search engine may only display a
combination of different retrieval aspects, as e.g. term similarity weights or page rank values. When the function used
to combine different retrieval or ranking aspects is changed,
the order of the items displayed and also the selected items
themselves are likely to change too. In contrast to this,
a presentation of search results in a (topology preserving)
site map may show different aspects of the retrieval process
without major changes to the layout of the data presentation, as demonstrated by the above site map views. Applying site maps for search result visualization, one single data
layout is possibly sufﬁcient to display different search aspects (successively). Applying ranking in a list the layout
may change completely each time.
Therefore, applying the described method the search process may be reﬁned by making it easier for users directly to
take inﬂuence on the search process itself. However the proposed search result visualization is only suitable in a local
Web area since the graph presentation has to be tractable.

8 Conclusion
In this article we describe a method to automatically generate site map views of a Web site. In our approach, ﬁrst
the data on the site are ﬁltered and pruned by applying a
page rank or visitation frequency computation. The obtained ’important’ data objects, denoted as landmarks are

used as grid points in the Web graph presentations that are
emphasized by a larger size, while the size of intermediate
data is decreased. Thereby a structure presentation is obtained that preserves the topology with respect to the Web
structure. This structure is induced by assuming an intrinsic
hierarchical structure of the Web site. Site map presentations are applied to visualize search results in a site map
view. This visualization demonstrates that a semantical ambiguity concerning query terms provided by a user may partially be solved, since different components of the hyperlink
structure usually deal with different semantical aspects.
We presented an architecture to realize an adaptive site map
presentation as a service provided by the owner of a Web
site to visitors of the site. Applying the presented architecture, such a service may only cover a small number of Web
servers. Further research may deal with different architectures and visualization techniques that are applicable to a
larger fraction of the Web.

References
[1] Arachnid
web
spider
framework.
URL:
http://arachnid.sourceforge.net/, 2004.
[2] S. Benford, I. Taylor, D. Brailsford, B. Koleva, M. Craven,
M. Fraser, G. Reynard, and C. Greenhalgh. Three dimensional visualization of the world wide web. ACM Comput.
Surv., 31(4es):25, 1999.
[3] S. Brin and L. Page. The anatomy of a large-scale hypertextual Web search engine. Computer Networks and ISDN
Systems, 30(1–7):107–117, 1998.
[4] K.-W. Cheung and Y. Sun. Mining web site’s clusters from
link topology and site hierarchy. In IEEE/WIC International
Conference on Web Intelligence (WI’03), page 271, 2003.
[5] D. Cohen, M. Jacovi, Y. Maarek, and V. Soroka. Collection awareness on the web via livemaps. SIGGROUP Bull.,
21(3):12–15, 2000.
[6] D. Danielson. Web navigation and the behavioral effects of
constantly visible site maps. Interacting with Computers,
Elsevier Science, 14,(5):601–618, 2002,.
[7] D. Durand and P. Kahn. Mapa: a system for inducing and
visualizing hierarchy in websites. In Proceedings of the
ninth ACM conference on Hypertext and hypermedia : links,
objects, time and space—structure in hypermedia systems,
pages 66–76. ACM Press, 1998.
[8] D. M. Edwards and L. Hardman. Lost in hyperspace: cognitive mapping and navigation in a hypertext environment.
In Hypertext: theory into practice, pages 90–105. Intellect
Books, 1999.
[9] The
problem(s)
with
sitemaps.
URL:
http://www.evolt.org/article/evolt/4090/710/, 2004.
[10] H.-W. Gellersen and A. Schmidt. Look who’s visiting: supporting visitor awareness in the web. Int. J. Hum.-Comput.
Stud., 56(1):25–46, 2002.
[11] N. Gershon, K. Andrews, S. G. Eick, J. Foley, and W. Ruh.
Visualizing the internet: putting the user in the driver’s seat.
In Conference companion on Human factors in computing
systems, pages 163–164. ACM Press, 1996.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

[12] M. C. Hao, P. Garg, U. Dayal, V. Machiraju, and D. Cotting.
Visualization of large web access data sets. In Proceedings
of the symposium on Data Visualisation 2002, pages 201–ff.
Eurographics Association, 2002.
[13] M. Y. Ivory and M. A. Hearst. Improving web site design.
Internet Computing, 6(2):56–63, 2002.
[14] P. Kahn and K. Lenk. Mapping Web Sites. Robot Vision SA,
2001.
[15] J. M. Kleinberg. Authoritative sources in a hyperlinked environment. Journal of the ACM, 46(5):604–632, 1999.
[16] D. Kukulenz and J.Pauli. Navigation-dependent visualization of distributed internet structures. IEEE Conference on
Information Visualization, pages 518–523, 2000.
[17] W.-S. Li, O. Kolak, Q. Vu, and H. Takano. Deﬁning logical
domains in a web site. In Proceedings of the eleventh ACM
conference on Hypertext and hypermedia, pages 123–132.
ACM Press, 2000.
[18] H. Lieberman. Letizia: An agent that assists web browsing.
In C. S. Mellish, editor, Proceedings of the Fourteenth International Joint Conference on Artiﬁcial Intelligence, pages
924–929. Morgan Kaufmann publishers Inc.: San Mateo,
CA, USA, 1995.
[19] O. Liechti. Awareness and the www: an overview. SIGGROUP Bull., 21(3):3–12, 2000.
[20] Jacarta
lucene
search
engine.
URL:
http://jakarta.apache.org/lucene/docs/index.html, 2004.
[21] Y. S. Maarek, M. Jacovi, M. Shtalhaim, S. Ur, D. Zernik,
and I. Z. Ben-Shaul. Webcutter: a system for dynamic and
tailorable site mapping. In Selected papers from the sixth
international conference on World Wide Web, pages 1269–
1279. Elsevier Science Publishers Ltd., 1997.
[22] A. O. Mendelzon. Visualizing the world wide web. In
Proceedings of the workshop on Advanced visual interfaces,
pages 13–19. ACM Press, 1996.
[23] T. Munzner and P. Burchard. Visualizing the structure of
the world wide web in 3d hyperbolic space. In Proceedings
of the ﬁrst symposium on Virtual reality modeling language,
pages 33–38. ACM Press, 1995.
[24] P. J. Mutton and P. J. Rodgers. Spring embedding preprocessing for www visualization. In Proceedings of 6th International Conference on Information Visualization, pages
744–749, 2002.
[25] J. Nielsen.
Site map usability.
URL:
http://www.useit.com/alertbox/20020106.html, 2002.
[26] R. M. Rohrer and E. Swing. Web-based information visualization. IEEE Comput. Graph. Appl., 17(4):52–59, 1997.
[27] F. M. Shipman, C. C. Marshall, and M. LeMere. Beyond
location: hypertext workspaces and non-linear views. In
Proceedings of the tenth ACM Conference on Hypertext and
hypermedia : returning to our diverse roots, pages 121–130.
ACM Press, 1999.
[28] M. Sifer and O. Liechti. Zooming in one dimension can
be better than two: An interface for placing search results in
context with a restricted sitemap. In Proceedings of the IEEE
Symposium on Visual Languages, page 72. IEEE Computer
Society, 1999.
[29] Touchgraph web visualization tool.
URL:
http://www.touchgraph.com/, 2004.

[30] Websom - self-organizing maps for internet exploration.
URL: http://websom.hut.ﬁ/websom/, 2004.
[31] A. Wexelblat and P.Maes. Footprints: History-rich tools for
information foraging. CHI’99, pages 270–277, 1999.
[32] C. C. Yang, H. Chen, and K. Hong. Internet browsing:
Visualizing category map by ﬁsheye and fractal views. In
International Conference on Information Technology: Coding and Computing, 2002 Las Vegas, Nevada, pages 34–39,
2002.
[33] T. S. Yen-Yu Chen, Qingqing Gan. Local methods for estimating pagerank values. In ACM Thirteenth Conference on
Information and Knowledge Management (CIKM), 2004.
[34] A. H. Yousseﬁ, D. J. Duke, and M. J. Zaki. Visual web
mining. In WWW (Alternate Track Papers & Posters) 2004,
pages 394–395, 2004.
[35] J. Zhu, J. Hong, and J. G. Hughes. Pagecluster: Mining
conceptual link hierarchies from web log ﬁles for adaptive
web site navigation. ACM Trans. Inter. Tech., 4(2):185–208,
2004.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

