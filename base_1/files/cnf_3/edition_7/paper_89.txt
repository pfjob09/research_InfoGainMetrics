Semantic Traits of Graphical Interfaces to Support Human Scheduling
Rossano Barone, Peter C-H Cheng
Department of Informatics, University of Sussex, Falmer, BN1 9RN, UK
r.barone@sussex.ac.uk, p.c.h.cheng@sussex.ac.uk
Abstract
Three semantic traits are considered central in the design
of interfaces for scheduling: (1) expressive richness, (2)
dependency constraints and (3) global homogeneity.
These traits are exploited by diagrammatic
representations that ‘structurally integrate’ systems of
domain relations through analogous systems of
diagrammatic relations. These traits are discussed in
relation to ROLLOUT - a prototype representational
system for bakery planning and scheduling. This article
provides a semantic evaluation of ROLLOUT in terms of
these representational traits and proposes explanations
of how these traits lead to increased cognitive support in
scheduling activities.

1. Introduction
Problems of planning and scheduling are important issues
in contemporary organizations. High quality plans and
schedules increase the efficiency of organizations and the
quality of products and services. The design of good
scheduling representations can substantially impact on
the problem solving process supporting a variety of tasks
in both manual and semi-automated generation of
schedules.
As with other scheduling domains we have
examined, bakery organizations consistently rely on the
use of tabular/list style representations. These systems are
used to represent selected subsets of the domain
information. This information is typically restricted to
the expression of numerical quantities and nominal
values for different kinds of dimensions of interest.
Normal modes of representation in bakery
organizations do not exploit the potential for cognitive
support in scheduling activities. It is common for bakery
schedulers to routinely reuse previous schedules rather
than exploring the potential advantages given by
alternative schedules. This may be due to a number of
factors such as the fragmentation of domain information
over different representations, the relative conceptual
impoverishment of the representational schemes
employed (e.g. tables and charts) as well as the low level
nature of the information displayed. Such a situation
negatively influences the difficulty of searching for

improved permutations, cost in time and effort as well as
the potential risk of trying out alternative schedules due
to the inability to access or recognize information relating
to undesirable situations.
Our approach to the design of external
representations that we have termed Representational
Epistemology (REEP) involves the development of
domain specific diagrams that are structured according to
the major conceptual relations that underlie the target
domain.
This approach minimizes the number of
representations required to express the scheduling domain
by developing novel diagrammatic systems that
'structurally integrate' the task relevant domain
knowledge. We use the term structural integration to
refer to a form of diagrammatic integration in which
different representing objects are systematically
interconnected through semantically interpretable
relations that exits between their multiple properties. This
paper discusses reasons for the diagrammatic design of
scheduling interfaces under the REEP approach. We will
show how the approach results in a number of
representational traits that seem to play central roles in
providing cognitive support in solving scheduling
problems. In order for the reader to get a clearer
understanding of what we mean by structural integration
and the representational traits under consideration, the
discussion will be made in the context of a prototype
diagrammatic system for bakery scheduling called
ROLLOUT. The ROLLOUT system was developed
under the REEP approach using design heuristics [3, 4,
5]. The next section will discuss the REEP approach and
relevant representational traits in more detail.

2. Representational epistemology
Representational epistemology is an approach that
focuses on the relational structure that underlies a
represented domain and in what way, if at all, this
structure is expressed in the external representation. The
REEP approach began in the development of
representational systems to support conceptual learning in
scientific and mathematical domains [3, 5]. In recent
years the approach has been applied to the design of
representations for real-world scheduling problems [1, 2,
4]. The REEP approach to designing external

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

representations involves the identification and use of the
task relevant domain relations. This procedure is a
gradual and iterative cycle in which experimentation with
prototype diagrammatic designs are used as part of the
method of incrementally explicating the domain
knowledge that is used to evaluate and refine concurrent
designs. The approach has specified a set of syntactic
and semantic representational design principles that
instantiate representational traits that tend to be
contingent on diagrammatic formats. The value of these
different traits is dependent, to some extent, on the
problem solving domain. In the following article we only
consider a subset of semantic traits previously referred to
in REEP work and relate them to cognitive support
specifically for the task of scheduling. The traits
described below are: 1) expressive richness, 2) constraint
dependencies and 3) global homogeneity.

researchers. Representational analysis had led to the
discernment of properties such as auto-consistency which
refers to the capacity of a representation to restrict the
expression of relations that are logically or arithmetically
inconsistent [9]. A further distinction may also be made
between free-rides that are said to relate to the potential
of a diagram to express one or more consequential
relations as a result of expressing another [7]. Cheng
refers to the class of diagrams that use graphical
constraints to encode the underlying laws of scientific
and mathematical domains as Law Encoding Diagrams
(LEDs) [3, 5]. When the representation is semantically
rich and there is no way of capturing all the constraints
diagrammatically, other important constraints can be
captured artificially through automated redrawing of goal
relevant properties or relations [1, 2, 4].

2.3. Globally homogenous interpretive schemes
2.1. Expressive richness
We argue that one of the important properties of a good
scheduling representation is its expressive richness. The
expressive richness of a representation is largely
dependent on the extent to which the representation
supports meaning derivations. Derivative meaning is a
phenomena that involves the interpretation of patterns of
represented instances that are not (or do not need be) part
of the semantic rules of the representation [8]. The
potential for derivative meaning is a trait of diagrams that
appears to be dependent on the amount of structural
integration present in a representation.
Meaning derivations are based on the selection of
global patterns that are composed of local features. The
potential for derivative meaning implies the tendency of a
representation to structurally integrate different levels of
abstraction and alternative perspectives. Such systems
are likely to express different levels of abstraction
because there is a compositional relationship between
global and local properties of the representing referents.
Such systems can integrate alternative perspectives
because different properties/dimensions can be selected
from the same representing elements. Designing
representations that integrate levels of abstraction and
alternative perspectives is an important design heuristic
of the REEP approach because research suggests that it
enhances conceptual learning by facilitating the
formation of coherent conceptual networks of knowledge
in the mind of the user [3, 5].

2.2. Constraint dependencies
Another important property in the design of graphical
representations concerns the extent to which it captures
the underlying constraints of the domain [2, 3, 5,]. The
capacity of diagrammatic representations to encode
constraints has been documented by a number of

We use the term “global homogeneity” to refer to another
important trait of external representations that we
consider particularly important for scheduling interfaces.
A representational scheme that is globally homogenous is
one where the higher-order dimensions or classes of
information of the represented knowledge domain are
expressed through higher-order visual dimensions,
properties or relations of the external representation.
Higher-order classes/dimensions are abstractions that are
common to the different objects, properties and relations
in the domain. Constructing representations that have
globally homogeneous interpretive schemes involves
mapping these domain invariants to unique diagrammatic
expressions. There may be a choice of dimensions that
can be selected for graphical expression, hence selecting
ones that increase global homogeneity can be viewed as a
design heuristic. Such representational schemes appear
to simplify the structure of the domain and facilitate
conceptual learning by making global similarities and
distinctions between represented elements semantically
transparent [3, 5].

3. Bakery scheduling
Bakery scheduling is a complex constraint satisfaction
problem that requires the dissemination of orders for
quantities of bakery products into units of production
called batches. Each batch is assigned to one or more
runs. Each run is a specification of a mix of dough to be
produced in a sequence of processing stages at specific
times of the schedule using particular types of equipment.
Different kinds of products vary in terms of their
ingredients, weight, size and shape. These values
determine various processing parameters such as the time
taken to go through each of the different production
stages and the extent to which dough mixes of the same
weight fill the capacity of the different kinds of
production machinery. The goal of the bakery manager is

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

to construct a schedule that satisfies a number of the
constraints. Each schedule is a specification of runs at
specific times using particular pieces of equipment.
A set of constraints that may be used in bakery
scheduling are as follows. (1) Minimal duration. All
production should be completed in the shortest period of
time. (2) Maximal shelf life. Orders must not be
produced too early for their deadline. (3) Late
completion. The deadline of an order should not be
exceeded. (4) Machine capacity excess. The capacity of
production machinery cannot be exceeded. (5) Run
clash. Different runs cannot be assigned the same
processing resources at the same time. (6) Maximum
machine capacity. Production machinery should be used
continuously and at maximum capacity. (7) Run
continuity. The production of a run should be continuous
and without breaks. (8) Schedule continuity. The whole
schedule should be a continuous plan of activity. (9)
Minimal Dough change. Runs made from similar dough
should be grouped together in time. (10) Product type
order. Certain products should be produced before
others.

4. ROLLOUT system overview
The aim of the ROLLOUT system is not to completely
replace all forms of representation associated with
planning and scheduling activities but instead to represent
a generic system to support abstract reasoning and
problem solving about the domain. Such a system is
designed to integrate and augment task relevant domain
information by exploiting diagrammatic traits described
in section 2 that we have argued are relevant to the kinds
of cognitive support required for scheduling.
The ROLLOUT interface consists of two main parts.
The planning view displays the required orders, batches
and their organization into respective sets. The
scheduling view shows how each batch decomposes into
runs. The horizontal location of all graphical objects in
the ROLLOUT interface indicates their place in time.
The software has been designed so that users can
selectively zoom in and out as well as show, hide or
resize any of the views.

4.1. Planner view
The planning view incorporates batch and order
information. Orders are shown by light grey rectangles
organized into particular sets enclosed in white bounding
rectangles. Batches are represented by coloured
rectangles where the colour represents the type of dough
involved. Each batch has a line that connects to its
corresponding order. Batches are also organized into sets
shown by their containment in the white bounding batchset rectangles. Each batch-unit has a start-line whose end
point indicates the batches’ ideal start time given the

current required completion time. If the batch is
positioned to the left of its start-line then it will be
completed before its required completion time, whereas if
it is positioned to the right of the start-line then it will be
completed later than its required completion time. The
length of the start-line indicates the magnitude of the
difference between its current and required completion
time.
Object collections such as batch-sets and order-sets
can be moved around via drag and drop methods. To
express that one or more batches will be produced
together, batch-units can be selectively aggregated into
different sets by dragging and dropping target batch-units
over the desired collection.

4.2. Schedule view
The schedule view shows each production stage as a
horizontal bar. Within each bar are one or more light
grey bars that represent particular pieces of equipment.
There are two main kinds of equipment: (1) conveyer
equipment and (2) bulk equipment.
Some bulk
equipment comprises of sub-compartments such as
shelves or cabinets. In the ROLLOUT interface these
sub-compartments are represented as subdivisions of the
equipment bar. The height of the bulk stages represent the
relative capacity of the particular equipment used. The
full height corresponds to 100% capacity.
Each run is represented by a diagonal sequence of
interconnected rectangular structures running from top to
bottom. The location of the run rectangles in the
equipment rectangles indicates the assignment of a run to
a particular piece of equipment. There are rectangular
structures for each stage of the process but there are
differences in the way bulk and conveyer type equipment
are represented. Bulk process stages are shown by single
rectangles where its width indicates its total processing
duration and its relative height expresses the percentage
that it fills the equipment.
Conveyer stages are
represented as paired rectangles. The width of the first
rectangle represents the time to load the mix and the
width of the second rectangle represents the time to
unload the mix. The distance between the left side of the
first and the right side of the second conveyer rectangles
expresses the duration to process the whole mix. These
differences in the representation of run stages for bulk
and conveyer processes encode differences in what
counts as a run clash. For bulk stages a concurrent mix
can only be assigned when the current mix is over. For
conveyer stages a concurrent mix can be assigned as soon
as the preceding mix has finished being loaded on the
process. As run clashes are shown through spatial
intersection of the stages of different runs, the different
graphical configurations correctly differentiate between
when a run clash will or will not occur for bulk and
conveyer type equipment.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

5. Semantic evaluation
Batch (single set)

In this section we provide examples of expressive
richness,
dependency
constraints
and
global
homogeneity. These lists are by no means meant to be
exhaustive.

Sets of orders

Early completion
Late
completion
(Red outline)

Schedule
dicontinuity
(Blank space)

Run clash
(Red intersection)

A
Batches (merged set)

Late completion (red line)

Bulk process stage
(single rectangle)

Run discontinuity
(Diagonal)

Mixer
(bulk)

Machine capacity excess
(Red overlap)

Figure 2. A ROLLOUT schedule with multiple
constraint violations identified by red boxes.

Divider
(conveyer)

5.1. Expressive richness
Prover (bulk/
compartments)
Moulding
(conveyer)

B
Conveyer process stage
(rectangular configuration)

Figure 1. The Rollout Interface showing mainly the
planning view (A) and the schedule only (B)

Individual runs, individual stages and groups of
stages, can be selectively moved around the schedule via
drag and drop functionality.
A collection of
neighbouring runs can be temporarily grouped together
by drawing a lasso around them using the mouse. This
allows the users to shift whole sections of production
forward or backwards in time.

The following example provides some of the main types
of semantic relations and higher-order meaning
derivations that are available in the ROLLOUT system.
The specification is intended to provide the reader with a
flavour of the expressive richness of the ROLLOUT
system. Note that the information can be viewed at
different levels of granularity from individual instances to
different groupings under different frames of reference.
(1) Minimal duration. The magnitude of spaces
between successive runs. (2) Maximal shelf life. The
magnitude of the distance of a left side start-line. (3) Late
completion. Presence of a right side start-line. (4)
Machine capacity excess. Run rectangles overlap in
equipment region. (5) Maximum machine capacity.
The extent that the machine region is filled by the run
rectangles. (6) Run clash. Spatial intersection between
stage rectangles of consecutive runs. (7) Run continuity.
The vertical alignment of successive stages. (8) Schedule
continuity. The homogeneity of spaces between
successive runs in the schedule. (9) Minimal Dough
change. The extent to which proximal runs of the same

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

colour are grouped together. (10) Type order. The
spatial order of runs in terms colour. (11) Run temporal
profile. The pattern of change in the spatial extension of
a run along the horizontal axes viewed through global
properties of the diagonal trajectory (e.g. steepness,
curvature). (12) Run spatial profile. The pattern of
change in the relative spatial extension of successive
stages of a run along the vertical axes. (13) Run time
duration. The overall steepness of the run trajectory. (14)
Equipment filling profile. The pattern of change in
fullness along the vertical axes of a particular piece of
equipment (excludes conveyer type equipment). (15)
Equipment use profile. The pattern of change in the
assignment of runs along the horizontal dimension of a
piece of equipment.

5.2. Dependency constraints
Examples in ROLLOUT of the representation of fully
and partially explicit constrained relations are given
below.
(1) Machine capacity relations. The explicit
encoding or the machine filling relations preserves a
variety of arithmetic constraints. E.g. Domain. If
equipment E has an available capacity C and run R is
assigned to equipment E then the available capacity C of
equipment E will be reduced. ROLLOUT. If rectangle E
has a non occluded vertically extending region C and
rectangle R is vertically positioned over rectangle E then
the non occluded region C of rectangle E will be reduced.
(2) Completion time relations. The representation
of start-lines is only a partial expression of the arithmetic
relations but is still dependent on automated arithmetic
constraints. E.g. Domain. If a planned batch-unit has an
ideal start time and its required completion time is
changed to a later time then it ideal start time will have
changed to a later time. ROLLOUT. If a planned batchunit has a start-line that ends at a particular horizontal
position and its order-set is moved right then the start-line
will have grown and its end point will have moved right.

5.3. Global homogenous interpretive schemes
Time and space are two of the main higher-order
conceptual dimensions of bakery scheduling.
In
ROLLOUT temporal and spatial identity are mapped to
horizontal and vertical axes of the representation. With
respect to the temporal dimensions the time for order
requirements, scheduled batches, runs as well as higherorder relations between them (e.g. orders’ ideal start
time) are instantiated by the position of these reified
objects and coherently indexed on a unitary timeline.
The temporal extension of runs, process stages and other
higher-order relations are also coherently encoded
through their spatial extension along the horizontal axes.
With regards to the spatial dimension, different kinds of

equipment are indexed along the vertical axes together
with their relations of spatial extent such as the amount of
capacity filled and available capacity left over. Note that
the choice to represent these spatial relations in terms of
more abstract percentage magnitudes was also motivated
by desire to make such relations globally homogenous for
different types of equipment. Representing relations in
terms of unit quantities would be problematic because the
spatial relations that determine how a unit of mix fills the
capacity of equipment is not uniform across different
products, process stages and machinery.

6. Cognitive support
This section will provide explanations of why the
semantic traits discussed in section 2 increases cognitive
support by considering them in the context of three
cognitive factors considered important in scheduling
activities: 1) dependency recognition, 2) comparison
procedures and 3) heuristic interpretation.

6.1. Dependency recognition
Capturing the dependency constraints of the domain is
particularly important characteristic of scheduling
representations. The cognitive support given by diagrams
in terms of recognition process is well documented in the
cognitive science literature [6, 10]. Much of the
difficulty with complex scheduling problems is in
recognizing the dependencies associated with each edit to
a schedule. When attention is focused on a particular goal
it is easy to forget or ignore the many dependencies
associated with a particular edit. By providing a
representational scheme that captures dependencies in
relatively explicit ways, we propose that users are given
greater support in acts of imaginary look-ahead and are
more likely to use the representation to experiment with
‘what if’ scenarios [1, 2].

6.2. Comparison procedures
Much of the scheduling activities involve making
comparisons between different objects and object
groupings along particular dimensions of the domain (e.g.
spatial temporal, product type etc.). The question of why
the rich capacity for derivative meaning is so important in
scheduling representations can be appreciated in terms of
this basic cognitive attribute of scheduling. The
opportunity to make different kinds of comparisons is
really a function of the derivative meaning available in
the representation which is enhanced by the extent to
which the representation exploits coding schemes that are
globally homogenous. For example making comparisons
of when runs from different orders use particular pieces
of equipment or how different runs differentially fill the
capacity of equipments is helped by the presence of the

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

global interpretive schemes discussed in section 5.3. Note
that these are just two examples taken from many types
of possible comparisons that could be made. The more
comparisons available the greater potential for the user to
behave in informed ways. This is what we have observed
in the domain of examination scheduling in experiments
comparing a conventional tabular style interface with a
diagrammatic interface designed using REEP design
principles. Participants who used the REEP interface
were more likely to actively sample different information
to satisfy a goal [1].

6.3. Heuristic interpretation
The ROLLOUT representation appears to make a number
of scheduling heuristics readily apparent through its
capacity to express derivative patterns that also encode
task relevant constraints that are analogous to the
representing relations. An example of this is the Ordersimilar-next heuristic observed by members of the
research team. This corresponds to the proposition that
the time taken to get production done can be reduced by
coupling successive runs based on the similar shape of
their overall diagonal. Note that the acquisition of this
heuristic appears to be dependent on recognizing the
derivative pattern of temporal magnitudes that exists
between the stages of concurrent runs. Moreover, we
suggest that the diagrammatic constraints that preserve
the relational structure underling these derivation patterns
provides
additional support to the acquisition of
heuristics/rules because they allow users to explore
changes in the relational structure of the problem by
manipulating the diagram directly or via mental lookahead.

7. Summary and conclusion
We have proposed that interfaces for scheduling domains
should be designed using knowledge rich diagrammatic
schemes that structurally integrate the underlying domain
relations. We argue that this approach allows the designer
to exploit three important representational traits for
supporting scheduling activities: expressive richness,
dependency constraints and global homogeneity. These
traits in turn support the capacity of the user to recognize
complex dependencies, make contextually sensitive
comparisons and discover abstract rules and heuristics.

Cauvan and Linda Young for sharing with us their
expertise of the baking industry.

References
[1]

Barone, R., Cheng, P. C.-H., Ahmadi, S., & Cowling, P.
I., (2003). The strategic influence of conceptual structure
in graphical interfaces for scheduling. In P. G. T. Healey
(Eds.),. Interactive Graphical Communication Workshop
2003. Working Papers. Queen Mary: University of
London, 7-20.
[2] Barone, R., Cheng, P. C.-H. (2004). Representations for
Problem Solving: On the Benefits of Integrated Structure.
In E. Banissi, K. Borner, C. Chen, M. Dastbaz, G.
Clapworthy, A. Faiola, E. Izquierdo, C. Maple, J.
Roberts, C. Moore, A. Ursyn, J. J. Zhang (Eds.), Eighth
International Conference on Information Visualization,
IV04. IEEE Computer Society, 575-580.
[3] Cheng, P. C-H. (1999) Unlocking conceptual learning in
mathematics and science with effective representational
systems. Computers in Education, 33(2-3), 109-130.
[4] Cheng, P. C.-H., Barone, R., Cowling, P. I., & Ahmadi,
S. (2002). Opening the information bottleneck in complex
scheduling problems with a novel representation: STARK
diagrams. In M. Hegarty, B. Meyer, & N. H. Narayanan
(Eds.), Diagrammatic representations and inference:
Second International Conference, Diagrams 2002. Berlin:
Springer, 264-278.
[5] Cheng, P. C-H. (2002). Electrifying diagrams for
learning: principles of complex representational systems.
Cognitive Science, 26, 685-736.
[6] Larkin, J. H., & Simon, H. A: (1987) Why a diagram is
(sometimes) worth ten thousand words. Cognitive
Science, 11, 65-99.
[7] Shimojima, A. (1996). Operational Constraints in
Diagrammatic Reasoning. In: G. Allwein and J. Barwise
(Eds.): Logical Reasoning with Diagrams. Oxford:
Oxford University Press, 27-48.
[8] Shimojima, A. (1999). Derivative meaning in graphical
representations. Proceedings of 1999 IEEE Symposium
on Visual Languages, 212-219.
[9] Stenning, K., Inder, R. & Neilson, I. (1995). Applying
semantic concepts to analyzing media and modalities. In:
Glasgow, J., Narayanan, N. H., & B. Chandrasekaran, B.,
(Eds.): Diagrammatic Reasoning: Cognitive and
Computational Perspectives. AAAI Press Menlo Park,
CA, 303-338.
[10] Zhang, J. (1997). The nature of external representations
in problem solving. Cognitive Science, 21, 179-217.

Acknowledgements
The research was supported by an ESRC research grant
(RES-328-25-001) under the PACCIT programme. We
would like to acknowledge Nikoleta Pappa for valuable
comments on earlier designs of ROLLOUT and Stan

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

