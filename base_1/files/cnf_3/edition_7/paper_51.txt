Representation of Graphs on a Matrix Layout
Benoît Otjacques, Fernand Feltz
Centre de Recherche Public – Gabriel Lippmann, Luxembourg
{otjacque@crpgl.lu, feltz@crpgl.lu}

Abstract
The need to visualize network data becomes
increasingly crucial, as it appears in numerous
domains like web visualization, computer network
monitoring, or social studies. Graphs and matrices
are two well-known techniques to visualize network
data. Depending on which task has to be carried out
on the data, each of them offers complementary
useful properties. This paper describes an attempt to
combine some advantages of both techniques within
a single representation. The proposed visualization,
called Mat’Graph, is based on the adaptation of a
graph to fit a matrix layer. This approach provides a
new trade-off between advantages and drawbacks of
both techniques. The matrix-based adapted graph
has been used to visualize electronic message
interactions.

1. Introduction
The correct management of the interactions
between individuals represents a crucial element in
project management. Therefore, any attempt to
optimize this task can lead to substantial benefits. In
this context, data visualization techniques offer a
great potential to help the participants to get a right
perception of the history and the dynamics of the
project information flows.
Nowadays, a growing part of these interactions
uses electronic media. Most of the research initiative
in this domain relates thus to the specific subset of
interactions that rely on information technologies.
This paper is part of a research aiming to propose
efficient visualizations of such data with a focus on a
right and rapid perception of the current state of the
interactions.

2. Definitions
Taxonomies are a powerful mean to precisely
position a specific research work within a given
domain. In the information visualization domain,
several taxonomies have been proposed for many

years in the literature. Some of them focus on the
data to be visualized (e.g. [3] [13] [19] ) while others
classify visualization techniques (e.g. [3] [9] ),
interaction techniques (e.g. [17] ) or tasks to be
carried out on the data (e.g. [13] [19] ). This
distinction is worth being noted because the different
levels of analysis are sometimes confused, due to the
usage of similar vocabularies. This is especially the
case of network data and graph-based visualization
techniques. Network data refers to a basic property
of the data set itself while graph representation is a
visualization technique that may be used to display
network data.
First of all, the concept of ‘network data’ has thus
to be defined. Shneiderman [13] defines it as data in
which ‘items are linked to an arbitrary number of
other items’. Card and Mackinley [3] speak in terms
of ‘NxN’ data, i.e. ‘a nominal set mapped to itself’.
We propose a similar definition, consistent with the
above-mentioned ones. A dataset is composed of
‘network data’ when each element of the set can
potentially have an arbitrary number of relations with
any element of the set, including itself’. It must be
noted that each relation can possibly be characterized
by some specific properties (e.g. time, quantity,
frequency…).
Second, the visualization issue of network data
has to be discussed. Matrices and graphs (sometimes
also
called
‘networks’
or
‘node-links’
representations) are probably the two most common
ways of visualizing network data. Many years ago,
Bertin [1] effectively described the construction
basics of those two techniques. A ‘network’ is
constructed by representing the elements with points
and the relations by lines. The coordinates of the
points within the plane are usually meaningless.
Inversely, a ‘matrix’ is constructed by representing
the elements by lines and the relations by points.
In order to avoid confusion, we will use the term
‘graph’, instead of ‘network’ for the visualization
technique and keep the term ‘network’ to refer to the
data type.
The authors’ purpose can now be clearly stated:
trying to enhance a specific visualization technique

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

of network data, namely graphs, by reflecting on
matrix-based representations.

3. Matrix or graph representation?
In certain circumstances, graph and matrix
representations can be considered as equivalent from
a semantic viewpoint. Indeed, an adjacency matrix
can be built using the following algorithm [5] in
order to express the semantics conveyed by a graph.
The matrix cell located at coordinates (u,v) contains
the number of edges between u and v if u is not equal
to v and the number of self-loops at v if u is equal to
v. If the graph is oriented (i.e. digraph), the matrix
cell at coordinates (u,v) contains the number of arcs
from u to v if u is not equal to v and the number of
self-loops at v if u is equal to v.
However, graphs and matrices differ in their
ability to convey semantics to a given user in a given
context. Some researchers have studied this
difference.
Novick and Hurley [10] have studied the
structural
properties
of
three
graphical
representations, among which matrices and networks
(i.e. ‘graphs’ in our naming convention). Their
purpose was to identify which properties can be used
to support the choice of one representation instead of
another. On the basis of an experimental study, they
identified three properties that are significant to
assess if a matrix representation is appropriate. First,
a matrix permits to specify values along two distinct
variables. Second, a matrix usually displays purely
associative links (i.e. nondirectional links). Third, the
matrix allows easily displaying an absence of link
between two elements. Similarly, they found out that
a graph representation should be chosen when any
node may be linked to any other node, without
specific constraints. Moreover, graph is appropriate
when the properties related to the potential of
movement in the representation are important. These
properties are: the capability to represent that any
number of lines can enter and leave each node and
the ability to visualize simultaneously one-to-many
and many-to-many relations; the capability to show
paths connecting subsets of (more that two) nodes;
the ability to traverse the representation.
Ghonien, Fekete and Castagliola [4] compared
the readability of graph and matrix representations.
They mention that the matrix representation has two
main advantages: the absence of crossover problems
and the ability to be ordered. They also note that
graphs are interesting when some paths between the
nodes have to be built. They experimental study
brings them to conclude that for graphs having more
than
approximately twenty nodes,
matrix
visualization allows to carry out most of the

evaluated tasks more efficiently than the graph
representation. Only the search of path is easier in
the graph visualization.
In addition to the above-mentioned findings,
some complementary characteristics of graph
representations can be pointed out. The spatial layout
plays a major role in the meaning and the readability
of a graph. Unfortunately, drawing a successful
graph representation need to overcome critical wellknown issues, like crossover and occlusion [16] .
Graphs also have difficulties to represent the
ordering of a data set. For instance, including an
efficient representation of time within a graph raises
significant difficulties. Including animation into
graphs or coloring the links are some examples of
solution that have been proposed to tackle this
specific issue but they cannot be considered as fully
satisfying.
Several arguments speaks thus to conclude that
graphs and matrices offers different views of the
data, that fits different needs.

4. Visualization of interactions
The interactions occurring during a project
among individuals or among individuals and
resources (e.g. documents, tools…) are, by
definition, network data. Very naturally, graphs or
matrices have thus been commonly used to visualize
them.
Sociograms, imagined by Moreno in 1933 [12]
are considered as the most ancient example of graphbased visualization of social interactions. They are
drawings in which social entities are represented as
points and relations between entities as lines. They
have been adapted in numerous ways, such as, for
instance, by making the links width proportional to
the frequency of the exchanges [7] , by coloring with
specific hues different types of links [2] , or by
representing nodes as icons [6] . The evolution of the
technology also allowed researchers to propose some
representations of interactions as animated or threedimensional graphs.
Matrices are the second visualization technique
that we focus on in the context of graphical
representation of interactions. Social network
analysis theory [12] is a well-known example of the
usage of this approach to study the interactions
between
persons.
Some
matrix-oriented
representations are also used in other research works,
such as the visualization of actions carried out on a
document [15] or the visualization of electronic
conversations [11] .

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

5. Representation of graphs on a matrix
layout
A specific class of visualization problems
underpins the research work presented in this paper:
the representation of a limited amount of network
data (1), where links between the elements must be
intuitively perceivable (2), where the links are
oriented (3), where links are time-stamped (4), where
the perceived positioning of links in time is
important (5), and finally where the absence of
relations is as important to highlight as their presence
(6). This collection of constraints may seem artificial
and one may wonder if it is sometimes encountered
in practice. In fact, several real-life visualization
problems satisfy them, such as, for instance,
representing the e-mail exchanges within a group or
the routing of some documents within a
company/department. Indeed, it may be useful, for
example, to represent the temporal succession of
message flows or the absence of reaction to the
reception of a given document.
Of course, the total amount of data of this kind
may be huge (e.g. e-mail exchanges within a
multinational company). However, this limiting
constraint may be relaxed in some real cases. Indeed,
considering the use case underpinning this research
(i.e. visualization of electronic interactions, such as
e-mails, within a project), two complementary
hypotheses can be added. First, the visualization
aims to represent network data from the viewpoint of
a unique and identified individual. In other words,
only the interactions in which a given person takes
part have to be displayed. Second, only the data
relative to a given period of time (including n time
intervals) has to be displayed. Thanks to these
complementary hypotheses, the amount of data to be
visualized becomes significantly lower but still
remain at a meaningful level from an operational
viewpoint. Pragmatically, the typical network data
set to be visualized includes about ten to twelve
elements (e.g. participants) and about a dozen of
time intervals (e.g. days).
A solution to this visualization problem seems
quite immediate: using two separate views of the
data, a matrix-based and a graph-based
representation. These two representations might even
be dynamically coupled within a same graphical
interface, in order to enhance the ease-of-use of the
visualization. Indeed, it may be observed that the
graph representation globally satisfies the set of
constraints associated to ‘links’ visualization (2, 3)
while the matrix answers to the time-related issues
(4,5) and to the ‘absence of relation’ visualization
(6). Another approach to this issue, which has been
followed by the authors, aims to combine the

advantages of graph and matrix within a single
representation.
The Figure 1 provides an example of graph
representation of the interactions between some
entities (identified by the capital letters A, B… I).
The entity called A is considered as the reference
entity, which means that only the interactions
concerning A are represented. The interactions are
oriented and time-stamped (cf. codes I0, I2 … I8
corresponding to successive time intervals).

Figure 1. Graph representation of
interactions
This kind of visualization has several advantages.
It correctly renders the orientation of the interactions.
It allows easily identifying (groups of) entities
interacting with each other, providing that the total
number of nodes and/or links remains relatively
small. Nevertheless, this visualization also presents
some drawbacks. The occlusion issue becomes
significantly perturbing as the amount of data
increases. Another obvious limitation concerns the
visual positioning of links in time, which is quite
difficult to perceive. The Figure 1, which is a
favorable case, illustrates how non-intuitive it is to
realize that no interactions occurred during some
time intervals (I2 and I6). In addition, only the small
amount of data permits to easily identify the absence
or presence of link between two entities.
The initial idea about how to handle these
limitations originates in reflecting on visualizations
using distortion techniques [8] . Usually, distortion is
applied to a representation in order to allocate a
larger part of the display space to some specific
elements under focus without loosing the relation to
the environment of these elements (i.e. displaying
focus + context of these items) [18] . The authors’
purpose is basically different. How can a graph be
adapted in order to gain some of the matrix

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

representation advantages without loosing too many
advantages of the graph visualization?
The basic idea is to use the matrix not as a
semantically equivalent representation of the graph
but as a basic frame which structures the display
space and on which a graph representation is
projected (cf. Figure 2). The entities of the network
data set are placed along one axis of the matrix. In
our example, the vertical axis is used to visualize the
entities in interaction (A…I entities). Each entity is
thus associated to a given line of the matrix.

Figure 2. Mat’Graph representation
The other axis (i.e. the horizontal axis in our
example) is used to visualize time. More precisely it
is used to visualize the ‘time-stamp’ property
associated to the links. Therefore, each column of the
matrix represents a specific period of time (I0…I8).
The interactions (i.e. oriented links between
entities of the dataset) are visualized as arrows. The
origin of the link is represented as a bold point and
the end of the link as a tip. Links are thus represented
in a very natural way, similarly as it is in a (directed)
graph. The arrow starts in the matrix cell
corresponding to the coordinates (start element of the
link, period of time to which the link relates) and
ends in the matrix cell(s) corresponding to the
coordinates (end element of the link, period of time to
which the link relates). An arrow is thus always
located among cells belonging to the same column of
the matrix. For instance, one can read on Figure 2
that entity A instantiated an interaction to entities B,
E and G during the period I1. This might represent
the sending of an e-mail to several receivers.
It appears now more clearly that the matrix used
in this visualization technique is not the earlier
defined adjacency matrix that is equivalent to the
graph of interactions. Indeed, the matrix maps the set
of entities to a value range of a specific attribute of
the relations among those entities (i.e. time-stamped
attribute). More precisely, a relation is not
represented as a single glyph/value within a matrix

cell but as (n+1) glyphs corresponding to the set of
values (start entity, relation, relation attribute
value), (end entityi, relation, relation attribute
value)i=1..n , and an line between them. Consequently,
the resulting matrix-based adapted graph can be
considered neither as a real graph nor as a real matrix
but rather as a hybrid form between the two
visualization techniques. This new visualization
technique has been called ‘Mat’Graph’.
The Mat’Graph representation has several
advantages. Some of them originate from the ‘graph’
nature of the representation. Directed links among
elements of the network dataset are clearly
visualized. The representation allows visualizing
one-to-one but also one-to-many links. Navigating
through the flow of links is possible. Other
advantages come from the ‘matrix’ nature of the
representation. Time axis is clearly visualized, which
allows to intuitively see the temporal repartition of
the links, as well as to rapidly locate links related to
a given period of time (e.g. which interactions
occurred during the I4 interval?). The absence of
links is as easy to view as their presence. (e.g. no
interactions occurred during the I6 interval) Finally,
the specific nature of the matrix-based adapted graph
allows solving the crossover issue, thanks to the
vertical orientation imposed to links and to the timeslicing operation.
Unfortunately, it also presents some drawbacks.
The readability of the representation decreases as the
size of data set grows. The perception of continuity
among successive links that characterizes the usual
graph representation is lost. Indeed, the
connectedness property is semantically present but
not explicitly displayed, which requires the user to
mentally connect the links across the matrix
columns. Finally, contrary to some classic graphs,
the visualization does not highlight some subsets of
the network dataset.

6. Visualization of e-mails
The Mat’Graph visualization technique has been
implemented with the example of e-mail exchanges
(cf. Figure 3).
People interacting via e-mails are the placed on
the vertical axis. The reference user (i.e. the
connected user called D. Robby in the example) is
placed on the first line and is specifically colored.
Time is placed on the horizontal axis. Each
column corresponds thus to a specific period of time.
In the example, each column corresponds to one day.
The messages (i.e. the interactions) are
represented as arrows. The message sender is
identified by the bold circle at the origin of the arrow
and the receiver by the tip at the end of the arrow.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Arrows having several tips visualize the mails with
more than one receiver.

visualizing network data, namely graph and matrix.
The result is an adaptation of graphs on the basis of a
matrix layer.
This hybrid approach, called Mat’Graph, offers a
new combination of advantages and drawbacks
which make it interesting to visualize some specific
kinds of network data. Among the new advantages,
the most interesting one is probably the ability to
clearly represent chronology in a static link-oriented
visualization.
This approach has been used to visualize e-mail
exchanges. Further research will study how this
technique can be enhanced and applied to other real
cases.

References
Figure 3. Visualization of e-mails
A given message can be selected by clicking on
the corresponding arrow, which is then highlighted
by being specifically colored (e.g. the second
message of Thursday, 7th October is highlighted in
Figure 3). When a message is selected, some details
are displayed, such as the subject and the precise sent
date and the type and number of attached files.
The e-mail sent date is used as time-stamp for
locating the arrow in a given column (i.e. in a given
period of time). If several messages are sent during
the same period of time, then the corresponding
arrows are squeezed along the horizontal axis and
distributed evenly within the corresponding column
from left to right in chronological order (e.g. Four
messages were sent on Wednesday, 6th October). The
occlusion issue that is raised when too many
messages must be displayed within a single column
has been tackled by implementing a zoom
functionality. This feature changes the time scale of
the representation, which results in using all the
available columns to display the subdivisions (e.g.
periods of two hours) of the time interval that has
been selected at the ‘deactivated zoom’ level.
A filtering feature has also been implemented. It
allows displaying only the messages that concerns
some of the interacting people.
To conclude, this implementation of the
Mat’Graph visualization technique globally satisfies
Shneiderman’s famous mantra [14] : ‘Overview first,
zoom and filter, then details on demand’.

[1]

[2]

[3]

[4]

[5]
[6]

[7]

[8]

Conclusions
Representing network data has gained an
increasing interest in the information visualization
discipline, following the growing number of real life
examples of such data. This paper describes an
attempt to combine two widely used techniques for

[9]

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

J. Bertin, Sémiologie graphique, 1998 reprint of the
2nd edition of 1973, Editions des hautes Etudes en
Sciences Sociales, Paris.
D. Boyd and J. Potter, Social network fragments : an
interactive tool for exploring digital social
connections,
Proceedings
of
International
Conference on Computer Graphics and Interactive
Techniques 2003, 27-31 July 2003, San Diego,
California.
S. Card and J. Mackinlay, The Structure of the
Information
Visualization
Design
Space,
Proceedings of the IEEE Symposium on
Visualization (InfoVis’ 97), 18-25 October 1997,
Phoenix, Arizona, pp. 92-100.
M. Ghoniem, J.-D. Fekete and P. Castagliola,
Comparaison de la lisibilité des graphes en
représentation nœuds-liens et matricielle, Actes de la
16ème Conférence Francophone sur l’Interaction
Homme-Machine (16th French Conference on HCI),
30 August – 3 September 2004, Namur, Belgium,
pp. 70-84.
J. Gross and J. Yellen, Graph Theory and Its
Applications, CRC Press, London, 1999, pp. 76-77.
G. Halin and D. Hanser, Vers une visualisation
contextuelle de la conception coopérative, Actes de
la 15ème Conférence francophone sur l’interaction
homme-machine (15th French Conference on HCI),
Caen, France, 24-28 November 2003, pp. 208-211.
R. Howard and E. Petersen, Monitoring
communications in partnering projects, Electronic
Journal of Information Technology in Construction,
Vol. 6, 2001, http://itcon.org/2001/1.
Y. K. Leung and M. D. Apperley, A Review and
Taxonomy of Distortion-Oriented Presentation
Techniques, ACM Transactions on ComputerHuman Interaction, Vol. 1, N° 2, June 1994, pp.
126-160.
G. Lohse, K. Biolsi, N. Walker and H. Rueter, A
Classification
of
Visual
Representations,
Communications of the ACM, Vol. 37, N° 12,
December 1994, pp. 36-49.

[10] L. Novick and S. Hurley, To Matrix, Network, or
Hierarchy: That is the Question, Cognitive
Psychology, Vol. 42, 2001, pp. 158-216.
[11] B. Otjacques and F. Feltz, VisuThread: un module
de visualisation de conversations électroniques,
Actes de la 16ème Conférence Francophone sur
French
l’Interaction
Homme-Machine (16th
Conference on HCI), 30 August – 3 September
2004, Namur, Belgium, pp. 239-242.
[12] J. Scott, Social Network Analysis, a handbook, 2nd
Edition, Sage Publications, 2000.
[13] B. Shneiderman, The Eyes Have It: A Task by Data
Type Taxonomy for Information Visualizations,
Proceedings of the IEEE Symposium on Visual
Languages, September 1996, Boulder, Colorado, pp.
336-343.
[14] B. Shneiderman and C. Plaisant, Designing the user
interface, 4th Edition, Addison Wesley, Boston,
2005, p. 581.

[15] B. St Ger and M. Engeli, Information Technology
for Virtual Enterprises, Meta-Visualizations of
Document Structures, Research Report ETH, Swiss
Federal Institute of Technology, Zurich, 1998,
available at the Internet address : http://ecollection.ethbib.ethz.ch, accessed 17 February
2005.
[16] R. Spence, Information Visualization. AddisonWesley, ACM Press, London, 2001, pp. 134-140.
[17] L.
Tweedie,
Characterizing
Interactive
Externalizations, Proceedings of Conference on
Human Factors in Computing Systems (CHI’97),
March 1997, Atlanta, Georgia, pp. 375-382.
[18] C. Ware, Information Visualization, Perception for
Design, 2nd Edition, Morgan Kaufman Publishers,
San Francisco, California, pp. 340-342.
[19] S. Wehrend and C. Lewis, A problem-oriented
Classification
of
Visualization
Techniques,
Proceedings of the 1st IEEE Conference on
Visualization, October 1990, San Francisco,
California, pp. 139-143.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

