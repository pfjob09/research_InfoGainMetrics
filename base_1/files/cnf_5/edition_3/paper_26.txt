Fifth International Conference on Computer Graphics, Imaging and Visualization
Visualisation

Neural Network Implementation of Image Edge Detectors
Majid Aghababaie
Electrical Engineering Department
Iran University of Science and Technology
Majid_aghababaie@iust.ac.ir

Gholamali Rezairad
Electrical Engineering Department
Iran University of Science and Technology
rezai@iust.ac.ir

ABSTRACT
Edges are basic low level primitives for image
processing. Edge detection is one of the most common
operations in image analysis. In this paper a new
implementation for edge detection methods using LVQ
neural nework is proposed. For instance Susan and
Canny and Sobel edge detectors are modeled by neural
network and simulation results are very promising.

2. Basic Principles
Classical edge detectors use a pre-defined group
of edge patterns to match each image segments of a fixed
size. 2-D discrete convolutions are used here to find the
correlations between the pre-defined edge patterns and the
sampled image segment.

( f * m)( x, y )

KEY WORDS
Edge detection ,LVQ network ,Canny ,Susan ,Sobel

j)

(1)

j

Where f is the image and m is the edge pattern defined by
the following matrix.

1. Introduction
An edge in an image is a contour across which
the brightness of the image changes abruptly. In image
processing, an edge is often interpreted as one class of
singularities. In a function, singularities can be
characterized easily as discontinuities where the gradient
approaches infinity. However, image data is discrete, so
edges in an image often are defined as the local maxima
of the gradient. This is the definition we will use here.
Edge detection is an important task in image
processing. It is a main tool in pattern recognition, image
segmentation, and scene analysis. An edge detector is
basically a high pass filter that can be applied to extract
the edge points in an image. Thus edge detection is one of
the most common operations in image processing. This
topic has attracted many researchers and many
achievements have been made [1]-[10].
Such as: J. Canny, proposed canny method for
edge detection [1]. S. Mallat et al generalized the Canny
approach using wavelets to singularity And edge
detection in signals [2]. Mallat et al refined the wavelet
edge detector using a particular wavelet transform
designed for fast multiscale computation [3]. Ivan
Christov and Jun Li used wavelet methods for image edge
detection [4].
The popular edge detection operators are
Roberts, Sobel, Prewitt, Frei-Chen, and Laplacian [10][13]. They are all defined on a 3 by 3 pattern grid, so they
are efficient and easy to apply. In certain situations where
the edges are highly directional, some edge detector
works well because their patterns fit the edges better.

978-0-7695-3359-9/08 $25.00 Â© 2008 IEEE
DOI 10.1109/CGIV.2008.38

f (i , j ) m ( x i , y
i

m( 1,-1)

m( 1, 0)

m( 1, 1)

m(0,- 1)

m(0, 0)

m(0, 1)

m(1, 1)

m(1, 0)

m(1, 1)
(2)

From the point of view of functions, filters are
discrete operators of directional derivatives. Instead of
finding the local maxima of the gradient, we set a
threshold and consider those points with gradient above
the threshold as edge points. Given the source image
f(x, y), the edge image E(x, y) is given by:

E

(( f * r ) 2

( f * s) 2 )

(3)

Where : r and s are two filters of different directions.

3. Implementation with LVQ network
3.1. LVQ network
LVQ network plays an important role in
classification. In LVQ network, each output unit has a
known class, since it uses supervised learning thus
differing from Kohonen SOM network, which uses
unsupervised learning. After training, an LVQ network
classifies an input vector by assigning it to the same class
as the output unit that has its weight vector closest to the
input. The classes learned by the competitive layer are
referred to as subclasses and the classes of the linear layer
as target classes. [15]
This network is constructed with two layers ,first
layer is the competitive which learns to classify input
vectors, and second is a linear layer. The linear layer

171

transforms the competitive layer's classes into target
classifications defined by the user.
In this paper for implementation of the image
edge detection methods, the competitive neural network is
used for classification the edge points and the other
points, so we classify the output image to two classes ,one
class for edge points and another for the other points.
Each pixel as a input of network is defined by
n n block that is constructed by itself and its neighbors .
n is related to basic operation of edge detection method
that we want to implement. For example in Susan edge
detection method n is 7 and for Canny and Sobel
methods n is 3. Image is divided to n n mask as input of
neural network and the output is edges that have
calculated based on Susan or Canny or other detectors. M
is number of neurons. Figure.1 shows structure of neural
network that we have applied for edge detection:

3.4.Sobel edge detection
The Sobel edge detection masks look for edges
in both the horizontal and vertical directions and then
combine this information into a single metric.
The masks are as follows [16]:
1
RowMask

2

0

1

0

1

2

ColumnMask

(4)

0
1

1

0

1

2

0

2

1

0

1

(5)

These masks are each convolved with the image.
At each pixel location we now have two numbers: s1
corresponding to the result from the row mask, and s 2
from the column mask. We use these numbers to compute
the edge magnitude which is equal to [17] :
result=

s1

2

s2

2

(6)

In sobel edge detector modeling, image has been divided
to 3 3 masks as input of neural network so n is 9.
Number of neurons (M) in Sobel modeling is chosen 250.
Figure 2 shows the result.

Figure1: structure of neural network

4.Conclusion

In this paper, Susan ,Canny and Sobel edge
detectors are modeled .

The new implementation method can be used for
modeling every edge detector operator. So we can divide
the image to n n blocks as input of the network, n^2 is
the dimension of edge detector basic mask and classifying
the output image to two classes.
Susan, Canny and Sobel edge detectors have
been modeled by using a LVQ network. In this
implementation time for edge detection is less than
previous similar methods. The simulation results are very
promising , as shown in figure 2 .

3.2. Susan edge detector
The SUSAN edge detector has been
implemented using circular masks to give isotropic
responses [17]. Although much of the previously
discussed methods include at least one non-linear stage,
the Susan approach represents a somewhat different
method for edge and feature extraction, since it is almost
entirely based on non-linear filtering. The basic idea of
the SUSAN method is to associate to each pixel of the
image a small area of neighbor pixels with similar
brightness to this center pixel [18]. This method can
operate in noisy image better than other methods.
To model Susan edge detector with LVQ
network, image has been divided to 7 7 masks as input
of neural network so n is 49. Number of neurons (M) is
chosen 250. Figure 2 shows the result of modeling this
method.
3.3. Canny edge detection
Canny edge detection [4] is an important step
towards solving edge detection problems mathematically.
This edge detection method is optimal for step edges
corrupted by white noise.
To model Canny edge detector with LVQ
network, image has been divided to 3 3 masks as input
of neural network so n is 9. Number of neurons (M) is
chosen 250. Figure 2 shows the results.

Figure 2. comparison the results with previous works:
(a) Original image, (b) Laplacian result; (c) Susan
modeled with LVQ network (d) Canny modeled with
LVQ network (e) Sobel modeled with LVQ network

172

[10] Y. Meyer, 1987, '
%
analyses gradu( %
8703.
[11] Y. Meyer, 1987, '
Op(
% $ *
Hermann.
[12] A. Zygmund, 1968,
!
% +
,%
Cambridge: Cambridge Univ.Press.
[13] G. Beylkin, R. Coifman, V. Rokhlin, 1991, wavelet transform and numericalalgorithms: I, Commun.
Pure and Appl. Math. 44, pp. 141-183.
[14] M. Ruskai, G. Beylkin, R. Coifman, I. Daubechies,
S. Mallat, Y. Meyer, L. Raphael,
1992,
%
% . *
Jones and Bartlett.
[15]S N SIVANADAM, Intoduction to Neural network
using matlab6.0
[16] Scott E Umbaugh, Computer vision and image
processing, Prentice Hall, 1999.
[17] Gholamali Rezai-Rad , Majid Aghababaie
!/! 0
! 1
"
MRI Images for Feature Extraction ,IEEE conference
2006 in suria
[18] Marcelo M. Perez and Tim J. Dennis,
Implementation of the SUSAN Method Image Edge and
Feature Detection

References
[1] J. J. Benedetto, M.W. Frazier, 1994,
Mathematics and Applications,
Press, Inc.
[2] R. J. Beattie, 1984,
based early visual processing, dissertation, Univ.
Edinburgh, Edinburgh, UK..
[3] B. K. P. Horn, 1971,
-Horn line-finder,
Artificial Intell. Lab., Mass. Inst. Technol., Cambridge,
AI Memo 285.
[4] L. Mero, 1975,
Hueckel operator for finding optimal edges in pictures,
Pric. IJCAI, pp. 650-655.
[5] R. Nevatia, 1977,

edge-line detector, Comput.,Graph. Image Process.,
vol. 6, no. 6, pp. 582-588.
[6] Y. Y. Tang, L.H. Yang, L. Feng, 1998,
by Lipschitz exponent and MASW wavelet transform,
Proc. 14th Int. Conf. Pattern Recognit., Brisbane,
Australia, pp. 1572-1574.
[7] K. A. Stevens, 1980, !
analysis of texture and contour,
Artificial Intell. Lab., Mass. Instr. Technol., Cambridge,
Tech. Rep. AI-TR-512.
[8] K. R. Castleman, 1996, "
#
$
%
Englewood Cliffs, NJ: Prentice-Hall.
[9] M. Hueckel, 1971,
&
in digital pictures, J. ACM, vol. 18, no. 1, pp. 113-125.

173

