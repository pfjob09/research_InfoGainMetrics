Fifth International Conference on Computer Graphics, Imaging and Visualization
Visualisation

Bezier Triangular Neural Network

Tang van To and Kotchakorn Sa-Ingthong
Department of Computer Science
Faculty of Science and Technology
Assumption University, Bangkok, Thailand
Email: tvto@scitech.au.edu and ks_sao@yahoo.com

However these models for surface approximation are
based on rectangular mesh domain. In many situations
modeling surface using rectangular domain is very
tedious, but it will be easy to model using triangle domain
[4,5]. The purpose of this paper to explore the ability of
using neural network for approximating surfaces using
Bezier Triangular (BT) model that is called Bezier
Triangular Neural Network (BTNN).

Abstract: Bezier Triangular Neural Network (BTNN) is a
multilayer back propagation neural network which used
for surface approximation. The approximation is solved
by learning process of BTNN from observation data
points.

Keywords: Bezier Triangular Surface, Neural Network,
Surface Approximation

2. Fundamental
1.Introduction
2.1 Bezier Triangular Patch
Neural Network is a good mechanism of learning.
Especially, Neural Network can be applied well to
geometric approximation[1,2,3]. B-spline Neural Network
(BNN) has been proposed by Vien and To [3], it is a good
model for approximating and learning a B-spline curve. It
means that given curve points along the curve, the Bspline Neural Network will approximate the given curve
by a B-spline curve, that is finding the B-spline control
points for the approximate curve if knot sequence has
been given. In case the knot sequence is not given the
genetic approach is used to obtain the good knot sequence.
Thus, B-spline Neural Network with Genetic learning
framework proposed in [3] has been a good tool to
approximate the complex curves and also surfaces
because it does not only finding the good control points
and also determine the good knot sequence. To and
Tanawat [1,2], proposed Non-Uniform Rational B-spline
Neural Network (NURBNN) for approximation of curves
and surfaces. Rational B-spline model plays a very
important role because we have an extra way to control
the shape of curves and surfaces, that are the weights [49]. Weight is the level that one control point affects to the
local shape of the curve

978-0-7695-3359-9/08 $25.00 © 2008 IEEE
DOI 10.1109/CGIV.2008.37

The patch is defined under the triangular domain

'(T1 , T2 , T3 )  R 2 . A point u  R 2 can be expressed in
the barycentric coordinates with respect to ' (T1 , T2 , T3 )
3

as u=

¦u T

i i

3

where

1

¦u

i

1 . If u lies inside the

1

domain then ui0 for all i. A point (0,u2,u3) with u2+u3=1
is on the edge T2T3. The Bernstein Polynomials of degree
n over the triangle are defined as

BIn (U )

§n· i j k
¨¨ ¸¸u v w
©I¹

n! i j k
uv w ,
i! j!k!

I

n

(1)

Here U=(u,v,w) a barycentric coordinate; I=(i,j,k) and
i,j,k0. The Bernstein Polynomials can be computed
under the de Casteljau scheme as

B In (U )

uB Ine11 (U )  vBIne12 (U )  wB Ine13 (U ) (2)

Where e1=(1,0,0), e2=(0,1,0) and e3=(0,0,1)
A BT patch of degree n has ( n  1)(n  2) / 2 of control
points. Each control point is labeled as bijk where i,j,k0

143

and i+j+k=n. For n=3 there are 10 control points and are
labeled as in Fig. 1

example of two patches of degree 3 is given in Fig.3.
Then condition for Cs continuity between two patches as

bˆr , j ,k

b 030

0

x

b 012 b 111 b 210

b 003 b 102 b 201 b 300

The triangular Bezier patch of degree n defined on Bezier
control points ^b I `| I | n
|I | n

I

n

(U )

x

b (U ) bI
b (U ) ub

r 1
I e 2

(U )  vb

r 1
I e3

(U )  wb

bˆ0,1, 2

b00,1, 2

b0,1, 2

bˆ0, 2,1

b00, 2,1

b0, 2,1

bˆ0,3,0

b00,3,0

b0,3, 0

bˆ1,1,1
bˆ

0
I

r 1
I  e1

1, 2 , 0

(U )

b3,0,0

b 0201

b

1
011

b 012

b

b

1
002

b 003

2
001

b 102

b 0003

b 1011

b2,0,1

b 120
b

b 1002

b 201

b 2001

b 300

b0,2,1

T

b0,3,0
bˆ0,3,0

bˆ0,2,1

0,1,2

bˆ1,0,2

bˆ1,2,0

bˆ1,1,1

bˆ2,0,1

T and Tˆ be two triangular patches defined on
neighboring
domain
'(T1 , T2 , T3 )
and

'(T1 , T2 , T3 which share the boundary at u

b0,1,2
bˆ

b0,0,3
bˆ0,0,3

b 210

2.2 C Continuity between patches

^

b1,2,0

1
110

r

two

b2,1,0
b1,1,1

b1,0,2

Fig. 2: De Casteljau algorithm of degree 3

Let

v1b1, 2, 0  v 2 b0,3, 0  v3 b0, 2,1

1

(3)b0, 2, 0

b 030

b 0102

v1b1,1,1  v 2 b0, 2,1  v3b0,1, 2

b01,1,1

As given in Fig.2

b 021

(3)

C 1 continuity need further following conditions
(2)
bˆ1,0, 2 b01,0, 2
v1b1,0, 2  v 2 b0,1, 2  v3 b0, 0,3

Which can be computed using de Casteljau Algorithm as

r
I

0,..., s

2

C 0 continuity condition
bˆ0,0,3 b00, 0,3 b0, 0,3

Fig.1: The control net of a cubic BT patch.

¦b I B

r
1

Conditions for C ,C and C between two cubic triangular
patches as

b 021 b 120

b (U )

b0r, j ,k (v);

bˆ2,1,0

bˆ3, 0, 0

^

0 and T3

Figure 3: The control points of two

has a baryncentric coordinate v= on ' (T1 , T2 , T3 ) .
Suppose b and bˆ are the control points of T and Tˆ . An

neighboring patches

x

144

T and Tˆ

of degree 3.

C 2 continuity we need further following conditions

Tˆ

bˆ2,0,1

v1b11,0,1  v 2 b01,1,1  v3 b01,0, 2

b02, 0,1

data training points Pi, m control points bI, I

v1 (v1b2, 0,1  v 2 b1,1,1  v3 b1,0, 2 ) 

n(n+1)/2 then for each data training point Pi we have m
Bernstein Polynomial

v 2 (v1b1,1,1  v 2 b0, 2,1  v3b0,1, 2 ) 

bˆ2,1, 0

1
1 1,1, 0

b

vb

v b

1
2 0, 2,0

i

B (u ) . Let N be a matrix that
I

i

has p rows, each has m elements that is corresponding to
these Bernstein Polynomials then the error is measure as

v3 (v1b1, 0, 2  v 2 b0,1, 2  v3 b0, 0,3 )
2
0 ,1, 0

m=

2

ª
º
i
¦1 «¬ Pi  ¦I BI WI »¼ / 2 then the LSE method
p

E=

v b

1
3 0 ,1,1

v1 (v1b2,1,0  v 2 b1, 2, 0  v3 b1,1,1 ) 

using gradient descent method to update W as

'W

v 2 (v1b1, 2,0  v 2 b0,3,0  v3b0, 2,1 ) 

K w E K ( P  NW ) N T ,Where K is the

learning rate

v3 (v1b1,1,1  v 2 b0, 2,1  v3b0,1, 2 )

Then the general algorithm for approximate a BT patch as
Step 1: Set the parameter values as follows
Set desired degree n of surface
Set maximum error Emax
Set the maximum number of cycle , Kmax
k=0
Step 2: Layer 1 , Set the number of training points
and find each baryncentric coordinates and its data
point
Step 3: Layer 2:Calculate the output of hidden layer
that is N

More continuity can be found in [11-13]

3. Bezier Triangular Neural Networks
BIn1
W I1

BIn2

Up

W I2

W I3

U (u,v ,w )p

¦

Step 4 : Layer 3, Calculate the output of the output
layer, MSE and update W

S

Step 5 : k = k+1
Do Step 3 through Step 4 until MSE < Emax or
k = Kmax

n
I3

B

.
.
.

4. Experiments

WIC

We use the BTNN to approximate spheres, cones
and lotuses.
We try with different numbers of patches
(12,16,24, 32 for sphere and lotus and 6,9,12,18 for cone)
and with different degrees (3,4,5,6). The primary results
here is for C0. However, with these regular shape the
obtained results obviously satisfy Cn-1. Some typical result
are given in the following paragraph

BInC
Fig. 4: Bezier triangular neural network model.

The proposed BTNN has three layers as given in
Fig.4. The first layer generates baryncentric coordinates
for training data points. The second layer generate the
basic Bernstein Polynomials and the output layer that
sums the weighted outputs from the basis functions to
produce the network output. This is similar to the model
that was proposed by Brown and Harris [10]. The output
is compared with the target (training point) and use the
backpropagation method to adjust the weights. The
general algorithm is given as;

4.1 Experiment 1
The data set used in this experiment is the sphere that
evaluate from the function

x2  y2  z 2

1 . Fig. 5 is the result of approximate the

sphere by using 12 domain triangular patches , each has
100 data points. It means that we need to input 1,200 data
points in the interval of [-1,1] x [-1,1] x [-1,1]. We want to
approximate these data points by BTNN with degree 3, so

Consider BTNN for one patch, let assume that we have p

145

we have 10 basis functions in x-direction, 10 basis
functions in y-direction and 10 basis functions in zdirection .We use the learning rate of 0.25. After training
the network 1,000 epochs, we obtained a means square
error of 1.032255e-007. Table 1 gives the comparison
between different experiments based on the number of
patches and degrees.

This result is plotted in Fig. 6. It is easy to see that the
error is smaller when we increase the number of patches
or increase the degree.

1.20E-07
1.00E-07
3

value

8.00E-08

4

6.00E-08

5

4.00E-08

6

2.00E-08
0.00E+00
12
16
24
32
patches patches patches patches
number of patches

Fig. 6 : MSE of approximate sphere with different degrees.
MSE is smaller when we increase the number of patches or
degree

4.2 Experiment 2

Fig. 5: Approximate a sphere by 12 patches of degree 3

The data set used in this experiment is the cone that
evaluate from the function x

3
4
5
6

12
patches
1.03e-7
4.58e-8
3.60e-8
3.96e8

Mean Square Error (MSE)
16
24
patches
patches
3.76e-8
1.64e-8
2.15e-8
8.94e-9
1.73e-8
8.53e-9
1.70e-8
9.20e-9

 y2

1  z where

z  [0,1] . We used 6 patches and 100 data points for
each patch. The first experiment used degree 3 and
learning rate of 0.25. After training the network 1,000
epochs, we obtained a means square error of 9.837907e008 and the result is given in Fig. 7. The comparison
between different experiments based on different number
of patches and degree is given in Table 2 and the graph of
MSE vs. number of patches and degrees is shown in Fig. 8

Table 1: Mean Square Error of Approximate Sphere Vs
Number of patches and degrees

Degree

2

32
patches
9.44e-9
5.83e-9
5.82e-9
6.87e-9

Table 2 Mean Square Error of Approximate Cone vs.
Number of Patches and degree

degree
3
4
5
6

146

Mean Square Error (MSE)MSE
12
18
6 patches 9 patches
patches
patches
9.84e-8
9.56e-9
1.98e-09 2.35e-10
5.71e-8
5.87e-9
1.19e-09 1.35e-10
4.50e-8
4.66e-9
8.77e-10 1.12e-10
4.14e-8
4.24e-9
9.29e-10 1.10e-10

.

Fig. 9 Approximate Lotus by 12 BT patches with degree 3.

In the first experiment, 12 domain triangular patches
are used with 100 points for each patch. It means that we
need to input 1,200 data points in the interval of [-1,1] x [1,1] x [-1,2]. We want to approximate these data points by
BTNN with degree 3. We use the learning rate of 0.25.
After training the network 1,000 epochs, we obtained a
means square error of 1.011530e-007 and the result is
given in Fig. 9. The comparison of MSE vs. number of
patches and degree is given in Table 3. These data is
plotted in Fig. 10

Fig. 7 Approximate Cone by 6 BT patches with degree 3.

1.20E-07
1.00E-07
3

8.00E-08
value

4
6.00E-08

5
6

4.00E-08
2.00E-08
0.00E+00
6 patches

Table 3 MSE of Approximate Lotus vs Number of Patches
and degrees
9 patches
12 patches
number of patches

18 patches

Mean Square Error (MSE)

Fig. 8: MSE of approximate sphere with different degrees
MSE is smaller when we increase the number of patches or
degree

degree

12
patches

16 patches

24 patches

32
patches

3
4
5
6

1.01e-7
4.56e-8
3.60e-8
3.93e-8

3.95e-8
1.91e-8
1.79e-8
1.90e-8

1.85e-8
1.08e-8
8.91e-9
1.10e-8

1.17e-8
6.32e-9
6.34e-9
7.11e-9

4.3 Experiment 3

5. Conclusion and Future Work

The data set used in this experiment is the lotus that
evaluate from the function

x

cos(t ) cos(T ),

y

cos(t ) sin(T ),

ztop
zbottom

sinh(t ),

.where

We have developed a framework for approximating
surfaces using BTNN. Through experiments the model
can be used to approximate the surfaces. From Fig. 6, 8,
and 10 it is easy to see that whenever we increase the
number of patches or increase the degree then the MSE
will be decreased. Adopt various continuity to the system
is a little bit difficult problem when we compare with
BNN or RBNN. Beside that if a complex surface is
approximated we should considered how to divide it into

S

t  [0, ],T  [0,2S ].
2

 tanh(t )

147

[2] To T.V, Tanawat K. (2005)., Approximation Curves and
Surfaces Using Rational B-Spline Neural Networks,
pp.
289-296, WSEAS Transactions on Mathematics, Issue 3, Vol. 4,
July 2005
[3] Vien, T.D and To , T.V.( 2003), A learing framework of Bspline Neural Networks for Geometric Modeling, INtech’03,
Chiangmai, Thailand
[4] Farin, G.E (1992), Curves and Surfaces for Computer
Aided Geometric Design: A practical Guide, 3rd edition,
Academic Press
[5] Farin G. (1986), Triangular Bernstein Bezier Patches,
CAGD, Vol 3, pp 83-127
[6] Piegl, L.,1989, Modifying the Shape of Rational B-spline
Curves, Computer Aided Design, Vol. 21, pp. 509-518
[7] Piegl, L.,1991, On NURBS: Survey, IEEE CG&A, Vol. 11,
pp 55-71
[8] To, T.V and Phien H.N, (1996), Polar form approach to
subsurface modeling, Annals of Numerical Mathematics, Vol
3- Special Number on Computer Aided Geometric Design,
Baltzer Science Publishers
[9] To TV and Phien HN., (1990), Application of Polar Form
to Curve Modeling, Proc. 4th International Congress and
Exhibition (Electronic Automation, 1990), New Dehli, India, pp
6-15
[10] Brown M., Harris C. (1994), Neurofuzzy adaptive
modeling and control, Prentice Hall, 1994
[11] Boehm W. (1988), On the Definition of Geometric
Continuity, CAD, Vol. 20, pp 370-372
[12] Boehm W. (1988), Visual Continuity, CAD Vol 20, pp
307-311
[13] Farin G. (1982), Design C1 Continuity of Triangular
Cubic Patches, CAD Vol 14, pp 253-256

patches and what kind of continuity should be adopted.
These will be considered in future work
1.20E-07
1.00E-07
3

value

8.00E-08

4
6.00E-08

5
6

4.00E-08
2.00E-08
0.00E+00
6 patches

9 patches
12 patches
number of patches

18 patches

Fig. 10: MSE of approximate sphere with different degrees
MSE is smaller when we increase the number of patches or
degree

.

References
[1] To T.V, Tanawat K. (2005), Using Rational B-Spline
Neural Networks for Curve Approximation, Proceeding 7th
WSEAS Internal Conference on Mathematical Methods and
Computational Techniques in Electrical Engineering
(MMACTEE’05) Sofia Bulgari, Oct 27-29, 2005

148

