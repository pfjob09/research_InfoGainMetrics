Three-Dimensional EncCon Tree
Mao Lin Huang, Quang Vinh Nguyen
Faculty of Information Technology, University of Technology, Sydney, Australia
maolin@it.uts.edu.au, quvnguye@it.uts.edu.au
Wei Lai
Faculty of Information and Communication Technologies, Swinburne University of Technology
wlai@swin.edu.au
Xiaodi Huang
Department of Mathematics, Statistics and Computer Science, University of New England
xhuang@turing.une.edu.au

Abstract
This paper describes a three-dimensional extension of
a enclosure+connection layout technique, called EncCon
tree. The three-dimensional visualization includes layout
and navigation. The layout algorithm directly generalizes the two-dimensional EncCon tree layout algorithm to
three-dimensional space in which nodes at the same level
of the hierarchy are placed onto the same plane. The interactive navigation uses standard three-dimensional viewing
techniques which include view transformation, rotation and
zoom.

1

Introduction

Graph and tree visualization has been widely used in
many application domains in business, system and networks
analysis, and others. A graph and a tree commonly include a
set of nodes and a set of edges to represent entities and relationships between entities respectively. Graphs generated in
real-world applications could be very large with thousands
or perhaps millions of nodes, such as citation and collaboration networks and the World Wide Web (WWW). As the
result of rapid increasing of the size in networks, the large
scale visualization has become one of the hottest topics in
Information Visualization. The question about how to comprehensively display large graphs on the screen becomes the
key issue in graph visualization.
Research in graph and tree visualization in twodimensional (2D) space can be roughly classiﬁed into two
main streams the enclosure and the connection. They are
both effective approaches for the visualization of hierar-

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

chies and which one we should use depending primarily on
the properties of the data in a particular application domain.
Connection approach displays the relationships of information explicitly by drawing a set of graphical edges in the
diagram that gives users an immediate perception of the relationships. Techniques in this approach, named a few, are
Hierarchical View [12], Radial View [4], Balloon View [8],
NicheWorks [17], Rings [14]. Enclosure approach is usually
a better solution in term of optimizing the use of display
space. However, techniques in this approach do not show
explicitly the relational structures of information. This can
cost extra cognitive effort of viewers to understand the relational structures that are presented implicitly in the enclosure manner. Techniques in this approach, named a few, are
Tree-maps [6], Cushion Tree-maps [15], Squariﬁed Treemaps [3], Voronoi Treemaps [2]. Some techniques combine both the enclosure and the connection concepts into
one so that it could take the advantages of both above approaches. Although techniques in this approach need further improvement, they have shown some interesting initial
results. Techniques in this approach are Space-Optimized
Tree [10] and EncCon Tree [11].
Three-dimensional (3D) graph and tree visualization
techniques are another approach that uses an extra dimension to achieve the display of more information on the
screen. These techniques also aim to provide the ”natural
look” of the information. Three-dimensional layout algorithms can also use enclosure to partition the layout or use
node-link diagrams in their displays. Although 3D techniques are not always better than 2D techniques [16], this
approach could provide an alternative way to present the
information in different applications. Some 3D visualization techniques for graphs and trees are Cone Tree [13],

Botanical Visualization [7], 3D Narcissus [5], 3D Hyperbolic Browser [9], Information Pyramids [1].

1.1

Motivation

With the fast growth of technology, hardware devices for
supporting three-dimensional graphics have become more
and more powerful. The price of such devices is decreasing
rapidly. This makes three-dimensional information visualization more feasible on a normal personal computer compared to a decade ago.
EncCon Tree [11] is a layout algorithms which it is
aimed to optimize the display space while retaining the clarity of the display by using a node-link diagram. The success
of these layout algorithms motivates us to study the feasibility of extending the algorithm in three-dimensions. In
short, the model reuses the two-dimensional layout algorithms to display the hierarchical data in three-dimensional
(3D) space so that nodes at same level are projected onto
the same plane. This property aims to provide not only an
alternative approach to the visualization, but also a more realistic look to the three-dimensional model as well as a possible improvement of the clarity in layout. We now present
the technical detail of the layout and navigation of the 3D
EncCon tree.

2

Layout Algorithm
Figure 2. An example of projecting a 2D layout onto planes in 3D space.

Figure 1. An example of two-dimensional visualization with a large dataset using EncCon Tree.
Our layout algorithm is responsible for positioning of all
nodes in a given hierarchical graph or a tree in a threedimensional geometrical space, including a vertex subset
{v1 , v2 , ..., vn } in V and a cluster subset {v1 , v2 , ..., vn } in
V’. A clustered graph C = {G, T} is derived by a general
graph G = {V, E} and a cluster tree T whose leaves are in

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

V. Each cluster vi = C is a sub cluster graph, contains
a subset of V given by the leaves of the sub-tree T’ rooted
at r’. The root r’ of the sub-tree T’ is also called a supernode. The super nodes are not displayed in our visualization
but they are used for partitioning process of calculating the
local region for sub cluster graph. For the partitioning of
clustered graph C, We deﬁne a virtual tree consisting of a
set of super-nodes for area division. We deﬁne a super-node
r(vi ) for each cluster vi .
The layout algorithm of this 3D technique is a generalization of 2D EncCon tree layout algorithm [11]. The 2D
layout of a graph or a tree is ﬁrst achieved using 2D EncCon, the ﬁnal layout is then computed by projecting the layout onto different planes in three-dimensional space. The
algorithm is described by following processes:

2.1

2D Layout

First, the x-coordinate and y-coordinate value of every node is calculated using the modiﬁed 2D EncCon tree
layout algorithm [11]. Technically, EncCon is an enclo-

Figure 3. An example of thee-dimensional visualization with a dataset of 170 nodes.

sure+connection approach for visualizing and navigating
large hierarchical information in a two-dimensional space.
The layout algorithm maximizes the utilization of display
space by using enclosure partitioning approach. EncCon
uses a rectangular division method to partition the layout so
that it provides the user a more straightforward way to perceive the relational information. The partitioning ensures
each vertex to be bounded by a rectangular local region.
The area of each local region of a vertex is equal to the
sum of the local region areas of all its child vertices. Thus,
the value of a vertex’s local region area is proportional to
the number of the vertex’s descendants. A sub-hierarchy is
drawn within the rectangular boundary of the sub-root vertex. The local regions produced by the EncCon layout algorithm are square-like rectangles. In this partitioning process, the width and height of the display are normalized as
one-unit scale. This step ensures the utilization of the display space of the display space on each plane when the layout of each hierarchical layer is projected onto a plane. Figure 1 shows an example of the visualization of a large structure in 2D using EncCon Tree layout algorithm in which the
utilization of display space is very high in this example.

2.2

Figure 4. An example of thee-dimensional
visualization with a large dataset of 6500
nodes.

number of planes in equal to the number of levels of the hierarchy. These planes are placed along the z-axis. Although
the distance between two planes can be adjusted and varied
for each level, this prototype only applies the same distance
between each two planes. Figure 2 presents an example of
the projection a 2D layout onto different planes to form a
3D layout. Figure 2a shows the actual 2D layout of the entire hierarchy, Figure 2b shows 3D view when projecting
three levels of the hierarchy onto three different planes.
Suppose that the z-coordinate value of the root node is
z = 0 and the distance between two planes is D, the zcoordinate value of a node at level k is calculated by the
formula:
z = −kD

(1)

Finally, the (x, y, z) coordinate value of every node is recalculated to translate from the normalized coordinate system to the real display system corresponding the view-point.
Figure 3 and Figure 4 presents two examples of theedimensional visualization of the EncCon tree layout that
uses the datasets of respectively 170 nodes and 6,500 nodes.

Projecting onto Planes
2.3

Next, the z-coordinate value of each node is calculated
based on its level that nodes with the same level have the
same z-coordinate value. This step is formalized as a projection of the entire hierarchy on the different planes. The

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

Edge Occlusion’s Minimization

Although the three-dimensional visualization from this
algorithm performs quite well on these datasets (see igure 3 and Figure 4), the overcrowded look of edges could

reduce the visualization quality. This problem normally
occurs with a very large dataset on nodes having several
child nodes (see Figure 4). To overcome this occlusion, we
modify the representation of edges by replacing straightline links with bended links. Technically, an edge is not
drawn directly from a parent node to a child node through a
straight-line link, but a bended link including two segments.
The ﬁrst segment is drawn from this node to the center of
the rectangular local area of its child nodes. And the second segment is drawn from this center point to a child node.
Figure 5 and Figure 6 shows examples of the visualization
from this modiﬁcation that uses the same datasets as Figure 3 and Figure 4 respectively.

Figure 6. An example of thee-dimensional visualization with the same dataset as Figure 4
using the modiﬁcation of edge layout.

the entire University of Technology, Sydney (UTS) web
site-map. And Figure 8 shows the visualization of the web
site-map during a navigation state.

Figure 5. An example of thee-dimensional visualization with the same dataset as Figure 3
using the modiﬁcation of edge layout.

2.4

Interactive Navigation

The interactive navigation uses standard threedimensional viewing techniques including view transformation, zoom and rotation. The view transformation is a
shifting image when a user interactively drags the display
to a desirable location. This navigation allows the user
to focus onto a particular area or a substructure from the
entire visualization. The zoom navigation can enlarge a
focus substructure so that more detail of the information,
i.e. node labels and attributed properties, can be further
display. Finally, the visualization can allow the user to
rotate visualization the image to obtain a desirable view
of the structure. Figure 7 illustrates the visualization of

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

Figure 7. The 3D visualization of UTS’s web
site-map.

3

Conclusions

This paper has presented an ongoing three-dimensional
extension of the 2D EncCon tree visualization. The layout extends the original two-dimensional EncCon tree into a
three-dimensional space. This property aims to provide not

Figure 8. The 3D visualization of UTS’s site
map.

only an alternative approach for the visualization, but perhaps a more realistic look of the three-dimensional model
as well as a possible improvement of the clarity in layout.
We use two different edge representations, the straight-line
and the bended-line, to implement this three-dimensional
EncCon tree. This three-dimensional system is just at the
initial state and there is still need for improvement. However, this initial work shows a good potential in developing
alternative visualization of clustered graphs or trees.

Acknowledgements
This project is partly supported by Australia Research
Council (Discovery Research Grant: DP0665463).

References
[1] K. Andrews, J. Wolte, and M. Pichler. Information pyramids: A new approach to visualising large hierarchies. In
Proc. IEEE Visualization’97, pages 40–42, 1997.
[2] M. Balzer and O. Deussen. Voronoi treemaps. In Proc. IEEE
Symposium on Information Visualization 2005, pages 49–
56, 2005.
[3] M. Bruls, K. Huizing, and J. J. van Wijk. Squariﬁed
treemaps. In Proc. Joint Eurographics and IEEE TCVG
Symposium on Visualization, pages 33–42, 2000.
[4] P. Eades. Drawing free trees. In Bulleting of the Institute of
Combinatorics and its Applications, pages 10–36, 1992.
[5] R. J. Hendley, N. S. Drew, A. M. Wood, and R. Beale. Narcissus: Visualizing information. In Proc. IEEE Information
Visualization ’95 Symposium, pages 90–96, 1995.
[6] B. Johnson and B. Shneiderman. Tree-maps: A spaceﬁlling approach to the visualization of hierarchical information structures. In Proc. IEEE Visualization 1991, pages
288–291, 1991.
[7] E. Kleiberg, H. van de Wetering, and J. J. van Wijk. Botanical visualization of huge hierarchies. In Proc. IEEE Symposium on Information Visualization 2001 (INFOVIS’01),
pages 87–94, 2001.

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

[8] G. Melancon and I. Herman. Circular drawings of rooted
trees. In Technical Report: INS-R9817, CWI (Centre
for Mathematics and Computer Science), Amsterdam, The
Netherlands, 1998.
[9] T. Munzner. Exploring large graphs in 3d hyperbolic space.
IEEE Comp. Graphics and Applications, 18(4):18–23, 1997.
[10] Q. V. Nguyen and M. L. Huang. Space-optimized tree: a
connection+enclosure approach for the visualization of large
hierarchies. Information Visualization Journal, 2(1):3–15,
2003.
[11] Q. V. Nguyen and M. L. Huang. Enccon: An approach
to constructing interactive visualization of large hierarchical
data. Information Visualization Journal, 4(1):1–21, 2005.
[12] E. M. Reingold and J. S. Tilford. Tidier drawing of trees.
IEEE Transactions on Software Engineering, 7(2):223–228,
1981.
[13] G. G. Robertson, J. D. Mackinlay, and S. K. Card. Cone tree:
Animated 3d visualizations of hierarchical information. In
Proc. ACM SIGCHI conference on Human Factors in Computing Systems ’91, pages 189–194, 1991.
[14] S. T. Teoh and K. L. Ma. Rings: A technique for visualizing
large hierarchies. In Proc. Graph Drawing 2002, pages 268–
275, 2002.
[15] J. J. van Wijk and H. van de Wetering. Cushion treemaps:
Visualization of hierarchical information. In Proc. IEEE
Symposium on Information Visualization 1999 (INFOVIS’99), pages 73–78, 1999.
[16] C. Ware. Information Visualization: Perception for Design,
Second Edition. Morgan Kaufmann, San Francisco, CA,
2004.
[17] G. J. Wills. Nicheworks - interactive visualization of very
large graphs. Journal of Computational and Graphical
Statistics, 8(2):190–212, 1999.

