The Application of Multi-grid Method to Smooth Noising Image
XU Rongcong, CHEN Fei
College of Mathematics and Computer Science, Fuzhou University, Fuzhou, Fujian 350002,
School of Sciences, Jimei University, Xiamen, Fujian, 361021
( P. R. China)
preserving edges well and avoiding blocky effects. You and
Kaveh [3] proposed equations with the following form

Abstract
The PDE-based image restoration has drawn much
attention in the recent years. In this paper, we first propose
two novel improved models based on the Perona-Malik
anisotropic diffusion model and the fourth-order PDE
model. Then, we use multi-grid numerical solutions to solve
our PDE models. Numerical experiments show that our
improved algorithms are efficient and fast convergent.
Keywords: image restoration; PDE; anisotropic diffusion;
multi-grid

1. Introduction
Much attention has been paid to the use of Partial
Differential Equations (PDE) for image restoration which is
an important area of image processing. Conventional
gaussian filter can be viewed as an isotropic diffusion,
making the entire image uniformly smoothed and thus
blurring the image edges. To remedy this problem, Perona
and Malik [1] proposed a nonlinear anisotropic version of
the heat diffusion equations, in which the conduction
coefficient is a decreasing function of the magnitude of the
image gradient with the form

∂u ( x, y, t )
= div ( g (| ∇ u |) ∇ u )
∂t

(1)

A typical thresholding function g is

g (x) =

1

( k)

1+ x

2

(2)

where k is a constant to be tuned for a particular
application.
Although the Perona-Malik equation reduces noise
effectively while maintaining edges, the resulting images
have large jumps in intensity, which make them appear
“blocky” [2]. This effect is visually unpleasant and is likely
to cause a computer vision system to recognize falsely as
edges. The boundaries of different blocks that actually
belong to the same smooth area in the original image.
Later, a number of authors have proposed fourth order
PDEs models for image smoothing and denoising with their
hope that these methods would perform better than those
second order analogues. Indeed, there are good reasons to
consider fourth order equations. Approximating image with
a piecewise planar image can remove noises while

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

∂u
= −∇ 2 [ g (| ∇ 2 u |) ∇ 2 u ] = − Δ[ g ( Δ u ) Δ u ]
∂t

(3)

Then, Tumblin and Turk [4] and Wei [5] introduced a
different form of fourth-order diffusion

∂u
= −∇ [ g ( Δ u ) ∇ Δ u ]
∂t

(4)

By analyzing the advantages and disadvantages of
anisotropic diffusion and fourth-order PDEs, we propose
two novel improved PDE models to achieve good tradeoff
between noise removal and edge preservation. However
there remains an urgent need to develop fast iterative
solvers, as the underlying problem sizes are large.
Therefore, we use multi-grid method to provide efficient
numerical solutions for modified PDEs.
In Section 2, we propose particularly an improved
method by adding the same direction gradient (SDG)
diffusion to the Perona-Malik model. In Section 3, a
coupled PDE method for image smoothing based on the
Perona-Malik model and fourth order PDE model is
proposed. Because Multi-grid method not only provides a
significant acceleration, but also increases the calculative
precision, we propose a multi-grid method for SDG
diffusion in Section 4. The similar algorithm is applied to
our coupled PDE model. Finally, experiment results and
conclusions are presented in Section 5.

2. Improve on the SDG diffusion
The Perona-Malik model processes poorly to the
images with isolated noise points, whose intensity values
are either much larger or smaller than their neighboring
pixels, and will leave isolated black and white speckles.
Because | ∇u | is very large around isolated noise points,
and the function g(.) is designed in (2) such that it decreases
rapidly in order to preserve edges, and so the function g(.)
will have small values around isolated noise points.
Consequently, the isolated noise points are likely to be left
intact, just as the edges. In [6], authors proposed to use a
function g (| ∇u * Gσ |) depending on the convolved gradient
norm | ∇ u * Gσ | , rather than simply considering | ∇u | ,
where Gσ is a normalized 2D Gaussian kernel, as follows.

∂u ( x, y , t )
= div ( g (| G σ ∗ ∇ u |) ∇ u )
∂t

(5)

This method can simply remove the isolated noise
points. But it considers a larger neighborhood in the
computation, and will cause a little blur at the edges in
smoothing process. So we need improve the g(.) to get
better result. Therefore, we design firstly a new SDG
diffusion.
i+2

j-2

j-1

j

j+1

i+1

j+2

i+2

j-2

j-1

j

j+1

j+2

i+1
ui,j

ui,j
i

i

i-1
i-1
i-2

i-2

(a)

(b)
Fig.1 The SDG diffusion

In Fig. 1(a), if ui,j is a isolated noise point, the intensity
difference between ui,j and ui,j+1 is hard to reflect the
right-hand situation of ui,j. So we consider the right-hand
neighboring pixels of ui,j+1 , and design sdg(ui,j, ui,j+1)
function to replace | ui,j-ui,j+1|. The sdg(.) is defined as
follows.

sdg ( u i , j + 1 , u i , j )
= mv (u i , j + 2 -u i , j + 1 , u i − 1 , j + 2 -u i , j + 1 , u i + 1 , j + 2 -u i , j + 1 )
where mv(.) is the mean of two minimal parameters values.
In Fig. 1(b), we can similarly have that

sdg (u i +1, j +1 , u i , j )
=mv (u i + 2 , j + 2 -u i +1, j +1 , u i +1, j + 2 -u i +1, j +1 , u i + 2 , j +1-u i +1, j +1)
The expressions of other six directions can be defined
similarly.
Secondly, we improve the g(·) by adding spatial
function g s ( p, s ) and the SDG diffusion g i ( p, s) in the
Perona-Malik model, where p denotes the neighboring
pixel of s. We let
g~ ( p , s )=g s ( p , s ) ⋅ g r ( p , s )1−t ( s ) ⋅ g i ( p , s ) t ( s ) (6)
where

⎛ ⎛ p-s ⎞ 2 ⎞
⎛ ⎛ u -u
⎟⎟ ⎟ , g r ( p , s)=exp ⎜ -⎜⎜ p s
g s ( p , s)=exp ⎜ -⎜⎜
⎜ ⎝σs ⎠ ⎟
⎜ ⎝ σr
⎝
⎠
⎝

⎞
⎟⎟
⎠

2

⎞
⎟
⎟
⎠

⎛ ⎛ sdg ( u p , u s ) ⎞ 2 ⎞
⎟⎟ ⎟
g i ( p , s ) = exp ⎜ - ⎜⎜
⎜ ⎝
σi
⎠ ⎟⎠
⎝

q 2=

1
1
∑ p 2 −(
∑ p) 2
| n s | p∈n s
| n s | p∈ n s

And we let

1
⎧
∑ p | 2 > mq
⎪ 1 , if |u s −
t ( s )= ⎨
| n s | p∈ n s
⎪⎩ 0 ,
otherwise

2

where t(s) denotes thresholding function, m is a constant
that may be adjusted for a specific application, |ns| denotes
the number of the neighborhood pixels, σ s is spatial

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

parameters, And σ r ,σ i are diffusion parameters. If t(s)=0,
Eq. (6) is anisotropic diffusion.
If q is small and | u s − 1

∑ p | >>q, this pixel is
| n s | p∈n s

greatly larger or smaller than their neighboring pixels,
which is considered as isolated noise point.
Finally, the improved model is given as
∂u ( x, y, t )
(7)
= div( g~ ( p, s )∇u )
∂t
Thus we have the numerical approximation:
λ
u st + 1 = u st +
∑ g~ ( p , s ) ∇ u s , p
| n s | p∈ n s
where
2
⎛ ⎛ p-s ⎞2 ⎛ u p-us ⎞2
⎞
⎛ sdg (u p , us ) ⎞
⎟⎟ ⋅t (s) ⎟
⎟⎟ - ⎜⎜
⎟⎟ ⋅(1- t (s)) -⎜⎜
g~( p, s)=exp⎜ - ⎜⎜
⎜ ⎝ σs ⎠ ⎝ σr ⎠
⎟
σi
⎠
⎝
⎝
⎠

3. A coupled PDE for image smoothing
The fourth order PDEs are able to avoid the blocky
effects widely seen in images processed by anisotropic
diffusion, while achieving the degree of noise removal and
edge preservation, but they need lots of iterations.
Meanwhile, it may cause unsmoothing phenomenon due to
noise removal. Therefore, based on the Perona-Malik
model and fourth order PDE model, we propose a coupled
PDE method for image denoising with the following form

∂u
= −∇ [ g 1 ( ∇ u ) ∇ u + a ⋅ g 2 ( Δ u ) ∇ Δ u ] (8)
∂t
where the parameter a is the weighting coefficient, and a>0.
For this PDE, we use the following function
2
⎛
⎞
2
g1 ( s) = exp - (s k1 ) , g 2 ( s) = 1 ⎜1+⎛⎜ s ⎞⎟ ⎟
⎜ ⎝ k2 ⎠ ⎟
⎝
⎠
where k1 and k2 are constants.

(

)

4. Multi-grid method for image smoothing
Multi-grid methods can be used to solve the discrete
systems arising from certain positive elliptic PDE’s, like
Poisson’s equation with O(n) complexity [7-8]. It is well
known that the choices of both the discretization and
iterative methods to solve the resulting PDE system are
very important. Here, we use multi-grid methods to solve
this problem.
By image restoration we mean obtaining the solution
u of an operator equation [9-10] with the form
Au=F
(9)
where Au is a nonlinear function on the image u, and the
data F is assumed to be contaminated by error, and A, u and
F have dimensions N×N. Since the precise solution of (9) is
assumed to be unknown, an approximate solution image
u will be computed. Smoothing or noise removal can be
interpreted as relaxation methods for the equation (9),
where Au =0.
For obtaining approximate solutions to remove the
noise in Gauss–Seidel iteration, (9) can be used in a

relaxation process as follows.

u t +1 ← u t + A(u t )

(10)
A may be typically linear, but not necessarily. It must
also be observed that a Gauss–Seidel–Newton method can
be used for nonlinear problems. In this case, (10) is
replaced by a single Newton iteration with the following
form
A( x)
ut ( x ) = u ( x ) −
∂A( x) / ∂u ( x)
To achieve relaxation, a diffusion function A(x) must
be chosen. As mentioned above, three classes of diffusion
PDE model are used here.
A. Multi-grid method for anisotropic diffusion
(1) can be used in a relaxation process with the form

ust +1£½
ust +

λ

∑g(∇u

s, p

| ns | p∈ns

)∇us, p

(11)

B. Multi-grid method for SDG diffusion
(7) can be used in a relaxation process with the form

u st +1 = u st +

λ

| ns |

∑ g~ ( p , s )∇ u

p∈ n s

s, p

(12)

C. Multi-grid method for Coupled PDE diffusion
(8) can be used in a relaxation process with the form

u

t +1
s

=u st +

λ

∑ (g 1 (∇u )∇u+a⋅g 2 (Δu )∇Δu )

| n s | p∈n s

(13)

5. Experiment Results and Conclusions
Experimental results show that our method can
remove noises while preserving edges well only by a little
iteration, and avoid blocky effects.
By experiment, we compare the computational
expense between the fine grid approach and the multi-grid
method evaluated for each work unit. It is shows that the
multi-grid method is better.
Denote by U the computing quantity for one sweep of
the standard anisotropic diffusion technique (refer to [11]).
And denote by w the computing quantity for the iteration of
multi-grid V-cycle. Then, we have

w = 2v(N 2 + N 2 / 22 + N 2 / 24 + N 2 / 26 + ...+ N 2 / 22log2 N )U
Hence, w<(8/3)U when v=1.
In order to illustrate the computational efficiency of
multi-grid method for each work units, we let
t

|| u - u ||
=
|| R ||=
|| u ||

1
N

N −1 N −1

∑ ∑ (u

t

(i , j ) - u (i , j )) 2

i =0 j =0

1
N

N −1 N −1

∑ ∑ u (i , j )

2

i =0 j =0

Fig.3 is the result by performing anisotropic diffusion
iterations for Lenna image with noise in fine grid method
and multi-grid method respectively.

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

Fig.3 The norm of the residual for the fine grid and
multi-grid diffusion
It is obvious that the main benefits of using the
multi-grid approach are the reduction of the computational
expense of diffusion and the rapid elimination of
low-frequency error. From Fig.3, we know that the
multi-grid method is able to rapidly reduce the norm of the
residual. Curve(a) in Fig.3 demonstrates the norm of
residual versus time using anisotropic diffusion
(corresponding to result in Fig.6(b)). Curve(b) is the norm
of residual versus time using multi-grid anisotropic
diffusion (corresponding to result in Fig.6(e)). Time is
expressed in work units—the computation quantity for
performing an iteration of anisotropic diffusion. Table 1
lists the algorithm and related experiment parameters.
Table 1. Algorithm and related experiment parameters
(corresponding to comparison in Fig.3)
Related
parameters
50 iterations,
|ns|=4, k=10,
λ=1

When ||R|| got
minimal value
The fine grid
50 iterations (20
anisotropic
work units), ||R||
got minimal value
diffusion Eq.
0.145023
(1) Fig. 3. (a)
Multi-grid
18 iterations, 3 iterations (8
anisotropic
|ns|=4, k=10, work units), | R||
got minimal value
diffusion Eq. λ=1,V=1,
0.144753
(11)Fig. 3. (b)
v1=1, v2=1
The following results illustrate the performance
obtained by the proposed models. We first consider an
one-dimensional curve. In Fig.4, (a) is the original curve
and (b) contains a section of Gaussian noises. And others
show that the images are processed by anisotropic diffusion,
the fourth-order PDE and the coupled PDE method
respectively. We notice the over smoothing at the corners
of curve in the (c), and a little unsmoothing phenomenon in
the (d). The satisfied result (e) is obtained by our method.
Then, we consider a two-dimensional image in Fig.5. We
can see (b) appears “blocky” processed by anisotropic
diffusion, and (d) looks more natural. Table 2 lists the
algorithm and related experiment parameters.
Finally, we perform an experiment on the Lena image
in Fig. 6. (a) is the original image which contains Gaussian
noises and isolated speckle noises. (b) is obtained by
anisotropic diffusion. It shows that this method is incapable
of dealing with isolated noises. We employ anisotropic
diffusion with 3×3 Gaussian kernel to process this
degraded image and show the processed image in the (c).
We notice a little blur especially at the edges of hat while

smoothing. (d) is obtained by the SDG diffusion. We can
see that the SDG diffusion can remove the isolated noises
more effectively while keep image edges. The images
processed by anisotropic diffusion and SDG diffusion
based on multi-grid method are shown in the (e) and (f). We
notice that a good result is obtained only for 2 iterations.
The experimental results show that the SDG diffusion
can remove the isolated noise points more effectively, and
the coupled PDE method can remove noises while

preserving edges well and avoid blocky effects, which is
easily seen in images processed by second-order PDE. We
apply the multi-grid algorithm in Section 4 to the two PDE
models. Numerical experiments show that our algorithms
are efficient and fast convergent. The main benefits of
using the multi-grid approach are the reduction of the
computational expense of diffusion and the rapid
elimination of low-frequency error.
Table 2 The algorithm and related experiment parameters
(corresponding to comparison in Fig. 4 and Fig. 5)

(a) Original image

(b) degraded by
Gaussian noise

(c) processed by
(d) processed by the 4th
anisotropic Diffusion
order PDE method

(e) processed by the coupled PDE
Fig.4 Comparison of tested results

(a) image plus noises

(b) anisotropic diffusion

(c) fourth-order PDE (d) coupled PDE method
Fig. 5 comparison of implementations

Anisotropic diffusion
Eq. (1) Fig.4 (c)
Fourth-order PDE Eq.
(3) Fig.4 (d)
Coupled PDE method
Eq. (8) Fig.4 (e)
Anisotropic diffusion
Eq. (1) Fig. 5 (b)
Fourth-order PDE Eq.
(3) Fig. 5 (c)
Coupled PDE method
Eq. (8) Fig. 5 (d)

Related parameters
25 iterations, |ns|=4,
k=10, λ=1
2000 iterations,
|ns|=4, k=0.5, λ=1
200 iterations, k1=1.5,
|ns|=4, k2=1, a=1, λ=1
15 iterations, |ns|=4
k=10 λ=1
500 iterations
|ns|=4 k=1.0 λ=1
200 iterations k1=10
|ns|=4 k2=5, a=1 , λ=1

(a) image with noises (b) anisotropic diffusion

(c) anisotropic diffusion (d) SDG diffusion
with Gσ

(e)multi-grid anisotropic (f)multi-grid SDG
Diffusion
diffusion
Fig.6 Comparison of implementations
Table 3 The algorithm and related experiment parameters

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

(corresponding to comparison in Fig.6)
Anisotropic diffusion Eq.
(1) Fig. 6 (b)
Anisotropic diffusion with
Gσ Eq. (5) Fig. 6 (c)
SDG diffusion Eq. (7)
Fig. 6 (d)
Multi-grid
anisotropic
diffusion Eq. (11) Fig. 6
(e)
Multi-grid SDG diffusion
Eq. (12) Fig. 6 (f)

Related parameters
20 iterations, |ns|=4, k=10,
λ=1
20 iterations, 3×3 Gaussian
kernel, |ns|=4, k=2.0, λ=1
10 iterations, |ns|=8, k=10,
a=1, λ=1
2 iterations, |ns|=4, k=10,
a=1, λ=1,V=1, v1=1, v2=1
2 iterations, |ns|=8, k=10,
a=1, λ=1,V=1, v1=1, v2=1

References
[1] Perona P., Malik J., Scale-space and edge detection
using anisotropic diffusion, IEEE Trans. PAMI,
1990,12(7): 629-639.
[2] You Yu-Li, Xu W., Tannenbaum A., Kaveh M.,
Behavioral analysis of anisotropic diffusion in image
processing, IEEE Transactions on Image Processing,
1996, 5 (11): 1539-1553.
[3] You Yu-Li, Kaveh M., Fourth-Order partial differential
equations for noise removal, IEEE Trans Image
Processing, 2000, 9(10): 1723-1729.
[4] Jack Tumblin, Greg Turk, LCISA boundary hierarchy
for detail-preserving contrast reduction, In Proceedings
of the SIGGRAPH 1999 Annual Conference on
Computer Graphics, 1999, 8(13): 83-90.
[5] Guo W. Wei, Generalized Perona-Malik equation for
image processing, IEEE Signal Processing Letters,
1999, 6(7): 165-167.
[6] L. Alvarez, P. L. Lions, J. M. Morel, Image selective
smoothing and edge detection by nonlinear diffusion
(II), SIAM Journal of Numerical Analysis, 29: 845-866,
1992.
[7] W. L. Briggs, V. E. Henson, S. F. McCormick, A
Multigrid Tutorial, 2nd Ed, Society for Industrial and
Applied Mathematics, Philadelphia, 2000.
[8] P. Wesseling, An introduction to multi-grid methods,
New York, 1992.
[9] M. Unser, Multigrid adaptive image processing, In Proc.
of IEEE Int’l Conf. on Image Proc., Washington DC,
USA, 1995, I(10): 49–52.
[10] S. Henn, K. Witsch, A Multigrid approach for
minimizing a nonlinear functional for digital image
matching, Computing, 2000, 64(4): 339–348.
[11] S. T. Acton, Multigrid anisotropic diffusion, IEEE
Trans. on Image Processing, 1998, 7(3): 280–291.

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

