Curve reconstruction in the presence of noise
Asish Mukhopadhyay

Augustus Das

School of Computer Science
University of Windsor, Canada
e-mail: asishm@cs.uwindsor.ca

School of Computer Science
University of Windsor, Canada
e-mail: dasb@uwindsor.ca

Abstract
In this paper we propose a heuristic for the reconstruction of a planar curve from a noisy sample. This is based
on an earlier scheme we had proposed for reconstructing
a curve from a noise-free sample, based on the Relative
Neighbourhood Graph. We also report on the performance
of our heuristic on a variety of noisy samples.

1

Introduction

The rest of the paper is organized as follows. In the next
section we briefly review previous work related to this problem, both when the sample is noisy as well as noise-free. In
the following section we give a very brief discussion of the
RNG and other terminolgy. In the fourth section we quickly
review our RNG-based heuristic for a noise-free sample as
the heuristic for noisy samples relies upon this. In the following section, we describe our heuristic for a noisy sample. In the last and final section, we conclude. The output
of our heuristic on a variety of samples are provided in an
appendix.

The curve reconstruction problem is to reconstruct an
unknown curve C in a given class (for example smooth
and closed, or smooth and open etc.) from a sample S
of n points {p1 , p2 , p3 , . . . , pn } (See Fig. 1). In view
of the practical importance of the problem it has received attention from a large mumber of researchers.
The main thrust of some of the recent work has been on
reconstructing curves whose correctness are guaranteed
provided the sample S satisfies some sampling conditions.
We will briefly review some of this work in the next section.
In [12], we proposed a curve reconstruction algorithm
based on the Relative Neighborhood Graph (RNG for short,
see [5]) that works extremely well on a variety of samples
- smooth single curves, nested curves, multiple curves and
bench-mark curves.
In this paper we propose a simple heuristic to deal with
a noisy sample. Our noise model assumes that the noise
is confined to a narrow region around the unknown curve,
with no outliers present. We generate noisy inputs by assuming that we have an -sample, and induce noise around
each point of this sample. We then propose a heuristic for
filtering the noisy sample. It seems to work effectively on
a variety of inputs as the experiments indicate. However,
we have not provided any theoretical guarantees as to the
correctness of the output.

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

Figure 1. Sample points and the reconstructed Curve

2

Previous Work

Many of the ideas surrounding some of the recent
Delaunay triangulation-based reconstruction algorithm
originate in the work by Brandt and Algazi [4], who
showed how to obtain the skeleton of an r-regular shape
from the Voronoi diagram of a set of points sampled along
the boundary of that shape.
Dominique Atali [9] borrowed this notion of an rregular shape and provided a correct reconstruction for
shapes in this class under some guarantee on the sample.
Her ideas were further refined and amplified by subsequent
researchers. Amenta,Bern and Epstein [3] showed how to
reconstruct a smooth curve from a non-uniform -sample.
Their most important contribution was the idea of local fea-

ture size f (p) at a point p on the unknown curve C, which
determines the sampling density in the neighbourhood of p.
Subsequently Dey and Kumar [2] considerably simplified
the ideas of [3] to correctly recomstruct smooth closed
curves in any dimension from an -sample, where < 1/3.

The local feature size f (p) at a point p on the curve C
is the distance from p to the nearest point on the medial axis.
An -sample S satisfies the following condition: for any
point p on the curve C, the distance to the nearest sample
point is at most ∗ f (p).

In a significant departure, Giesen [7] proposed a global
technique based on computing a Travelling Salesman Tour
of the sample points and showed that it is a subgraph of
the Delaunay triangulation. Subsequently, Althaus and
Melhorn [10] showed how to compute such a tour in
polynomial time.
While all of the above papers we have referred to are
based on the Delaunay triangulation, Guha and Tran [8]
proposed a non-Delaunay-based technique that reconstructs
a curve in 2 or 3 dimensions from a sample of points S.
Their proposed method determines monotone pieces of the
curve, using the idea of bounding curvature.
The literature on curve-reconstruction from noisy samples is rather sparse, unlike the situation for surface reconstruction from noisy samples. Our principal reference for
this work has been the rather complex algorithm by Cheng
et al [11]. Their proposed noise model starts with a sample drawn from a curve C that is locally uniform, with a
density function 1/(Lf (p)), where f (p) is the local feature
size at p. The noise is assumed to be generated by a random
uniform perturbation of a sample point on the curve in an
interval of size δ along the normal to the curve at p. For a
noisy sample conforming to this noise model, they describe
a filtering mechanism such the curve reconstructed with the
filtered point set is a faithful reconstruction with a probability that approaches 1 as the number of sample points
increases.

3

Some terminology

The RNG is a subgraph of the the Delaunay Triangulation (DT) on a point set S. An edge pi pj of the DT is in
the RNG if the lune (region of intersection of the circles
centred at pi and pj , each of radius length(pi pj )) of the
edge pi pj does not contain any point of S. Fig. 2 shows an
RNG.
Another subgraph of the DT on S is the Gabriel Graph.
An edge of the DT is in the Gabriel Graph if the diametral
circle on this edge contains no points of S.
The medial axis of a smooth curve C is the locus of the
centers of maximal disks that touch the curve at two or
more points.

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

Figure 2. A point set and its RNG

4

The RNG-Algorithm

This algorithm is closely related to the work of [1]. They
extract the Gabriel graph from the Delaunay triangulation
of the sample point set S, and show that it contains all
the edges that connect adjacent points along the curve,
provided S is an -sample with < 1/3. We have shown
that the RNG is a viable substitute, albeit with a smaller
value of .
We proved this using the following lemmas.
Lemma 1 Let S be an -sample from a smooth, planar
curve C and H its polygonal reconstruction from S. Then
1. If a closed disk B contains 2 or more points C, then its
intersection of with B is either a toplogical 1-disk or
contains a point of the medial axis [3].
2. For < 1, if ab is an edge of H, then length(ab) <
2 /(1 − ) ∗ f (p), where f (p) is the local feature size
at a or b [2].
Lemma 2 Any Voronoi disk (a maximal empty disk centered at a Voronoi vertex of a Voronoi diagram) of a set of
sample points S of a smooth, planar curve, C, must contain
a point of the medial axis of C. [3]
Theorem 1 Given an -sample S from a smooth closed
curve C, where < 1/5, the graph H on S, obtained
by joining successive points on the unknown curve C is
contained in the RNG of S.

ond type consists of noise points, called outliers, that lie far
from the curve. Most current algorithms deal with the first
type of noise, assuming the absence of the second type of
noise. We do the same here.

c
d
f (a)

a

e

b

B(a, f (a))

5.1

Figure 3. An edge joining adjacent points along the
curve is in the RNG

From this point we proceed quite differently from the
paper of [1]. What we have proposed is a simple heuristic
for removing the edges that join pairs of non-adjacent
points along the unknown curve C that works remarkably
well. It goes as follows. We construct the Voronoi diagram
on S. For each RNG edge pi pj , we compute the maximum
distance from pi to the vertices of its Voronoi polygon. Let
this distance be di ; do the same for the point pj , obtaining a
distance dj . We delete the edge pi pj if its length is greater
than the maximum of di and dj .
Here is a formal description of the algorithm.
Algorithm CR
Input: A set of sample points S
from an unknown smooth curve C
Output: A poygonal reconstruction of C
1. Compute the Delaunay Triangulation, DT on S.
2. Extract the RNG from the DT .
3. Compute the Voronoi Diagram, V D, as the
dual of the DT obtained in Step 1.
4. For each edge pi pj of the RNG computed in 2 do:
4.1 Compute the maximum distance di from pi
to the vertices of its Voronoi polygon.
4.2 Compute the maximum distance dj from pj
to the vertices of its Voronoi polygon.
4.3 Set dmax = max(di , dj ).
4.4 If length(pi pj ) > dmax , delete edge pi pj .
5. Output the remaining set of edges.

5

Dealing with noisy samples

In general, noise in an input sample point set can be classified into two types, depending on the location of the noise
points with respect to the original curve. The first type consists of noise points that lie very close to the curve; the sec-

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

Creating a noisy sample

In [11], a noisy input sample is derived from a set of
n sample points assumed to lie on the unknown curve,
following the probability density 1/(Lf (p)), where f (p)
is the feature size at the point p. From this sample input,
a noisy input is derived by perturbing each sample point
along a direction normal to the curve at this point in a
δ-neighbourhood of this point.
We derive a noisy sample from an -sample, where
< 1/5, that allows a correct reconstruction using our
RNG-algorithm above. This approach allows us to compare our reconstruction from the noisy sample with the
reconstructon from the -sample.
Given an -sample, we create a noisy sample by introducing four random points in a disk around each sample point, p, where the radius of the disk is less than
1/2 ∗ ∗ f (p). The quantity f (p) is estimated from the
Voronoi polygon of p, setting it to the minimum distance
from p to a Voronoi vertex, while is set to a value less than
1/5. Thus our noisy sample is 5 times the size if the initial -sample and lies in a narrow band around the original
curve.

5.2

Filtering the noisy sample

When we obtain a noisy sample from a source, the
reconstruction is difficult as we have no idea as to which
are the points from the original curve and which are the
noise points that crept in during the scanning process. In
such a case we try to filter the input sample and obtain
a set of points that would be useful in approximating
the original curve. In this section we propose a simple
heuristic to filter a noisy sample. This algorithm is called
the curveReconstructionWithNoise algorithm or CRW N
for short.
To begin with, we compute a quantity ρ as follows:
• For each point p of the -sample, we determine its minimum distance to a vertex of its Voronoi polygon.
• Compute the average of these minimum distances over
all points of the -sample, and set this value to ρ.
Fig. 4 shows a noisy input sample, created following the
above scheme.

(a)

(b)

Figure 4. (a) Noisy point set showing part of a curve
(b) pruneCircle and seed point on the noisy point set

Figure 6. Points inside the PRUNECIRCLE

We filter a noisy sample, created by the above scheme,
as follows.
To begin with, we choose a sample point p with the
miminmum y-coordinate as a seed-point (We could have
very well chosen any other point instead. There is no magic
in this choice.). Next, we determine all the sample points
that lie inside a circle of radius ρ/2, called a pruneCircle,
around p (see Fig. 4(a) and Fig. 5 for an enlarged version).
Figure 7. Extreme points and mid-point p∗ of the line
joining them

Figure 5. Enlarged view of pruneCircle and SEED
POINT on the noisy point set

We determine a pair points inside the current pruneCircle that are at a maximum distance apart; the mid-point on
the edge connecting this pair is set to p∗ (see Fig. 6 and
Fig. 7). If p∗ does not lie inside the previous pruneCircle,
it replaces all the points inside the current pruneCircle.
Otherwise, we choose a pair of points inside the current
pruneCircle whose mutual distance is the second largest
and repeat the above process. Indeed we carry on in a loop
with the third largest distnce, the fourth largest distance
and so on until we find a p∗ that lies outside the previous
pruneCircle; p∗ is added to a set S , called the filtered point
set.
In the next step, we update the seed point to a point from

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

Figure 8. Validity test on the new filtered point: q is
rejected as it falls inside the previous PRUNECIRCLE
and the mid-point of ac is taken as p∗.

among the remaining points of the noisy sample S that
lies outside the current pruneCircle and is closest to it (see
Fig. 9(a)).
The algorithm terminates when S is empty. We now
use our RN G-algorithm to reconstruct the unknown curve
from S , and compare with the reconstruction from the
original -sample.
Fig. 9(b) shows how this process occurs on the noisy
point set (part of an unknown curve).

(a)

(b)

Figure 9. (a) Filtered point is blue and the new seed
point is green (b) A snapshot of the entire process

Figure 10. (a) A normal sample from an unknown
curve (b) a noisy sample derived from it (c) points
obtained by filtering the noisy sample (c)

A formal description of the CRWN algorithm is given
below.
Algorithm CRW N
Input: A set of sample points with noise S
from an unknown smooth curve C.
Output: A polygonal reconstruction of C.
1. Find a point p of S which has the minimum
y-value and use it as a seed point SP .
2. Draw a PRUNECIRLCE of radius r around the ,
seed point where r = ρ/2.
3. Find a pair of points inside the PRUNECIRCLE
at a maximum distance from each other.
4. Compute the mid point of the line joining the
extreme points and perform the validity test
to find the new filtered point p∗.
5. Add the new filtered point p∗ to S and
discard all other points inside the circle.
6. Set the new seed point SP to a sample point
which lies outside the current PRUNECIRCLE
and is closest it.
7. Repeat steps 2 to 6 over the remaining
points of the noisy sample point set.
8. Use CR algorithm on the filtered point set
S to find the polygonal reconstruction of the
unknown curve.

6

Experimental results

The algorithm was implemented in Java and experiments
were performed on a variety of sample points. In each of
the the figures from Fig. 10 to Fig. 14 we show a normal
sample point set, a noisy sample point set derived from it
and the pruned point set obtained by applying the CRW N
algorithm to the noisy point set.

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

Figure 11. (a) A normal sample from an unknown
curve (b) a noisy sample derived from it (c) points
obtained by filtering the noisy sample (c)

Figure 12. (a) A normal sample from an unknown
curve (b) a noisy sample derived from it (c) points
obtained by filtering the noisy sample (c)

7

Conclusion

As future work, it would be worthwhile trying to place
our heuristic in a more formal framework that provides
some guarantees on the correctness of the reconstrucion.
It would also be worth exploring the effectiveness of this
heuristic in three dimensions.
It would also be interesting to compare the experimental
results here with results from other noise models. Unfortu-

ACM Symposium Computational Geometry, 1999,
197-206.
[2] T. K. Dey, and P. Kumar. A simple provable algorithm
for curve reconstruction, Proc. ACM-SIAM Symposium on Discr. Algorithms, 1999 , pages 893-894.
Figure 13. (a) A normal sample from an unknown
curve (b) a noisy sample derived from it (c) points
obtained by filtering the noisy sample (c)

[3] N. Amenta, M. Bern and D. Eppstein. The crust and
the β-skeleton: combinatorial curve reconstruction.,
Graphical Models and Image Processing, Vol.60, 1998,
pages 125-135.
[4] J. Brandt and V. R. Algazi. Continuous skeleton computation by Voronoi diagram, Computer Vision, Graphics,
Image Process, Vol.55, 1992, pages 329-338.
[5] G. T. Toussaint The relative neighborhood graph of a
finite planar set, Pattern Recognition,vol.12(4), 1980,
pages 261-268.
[6] J.W. Jaromczyk. and G.T. Toussaint. Relative neighborhood graphs and their relatives, Proc. IEEE ,Vol.80,
1992, pages 1502-1517.
[7] C. Gold. Crust and anti-crust: a one step boundary and
skeleton extraction Algorithm, Proc. ACM Symposium
on Computational Geometry, 1999, pages 189-196.
[8] Sumanta Guha, and Son Dinh Tran. Reconstructing
curves without Delaunay computation, Algorithmica,
Vol.42, 2005, pages 75-94.
[9] D. Attali. r-regular shape reconstruction from unorganized points,Proc. ACM Symposium on Computational
Geometry, 1997, pages 248-253.

Figure 14. (a) A normal sample from an unknown
curve (b) a noisy sample derived from it (c) points
obtained by filtering the noisy sample (c)

nately, the principal work that we have referred to [11] has
not reported any implementation, and we are not aware of
any other implementations that are publicly available for
comparison purposes.

Acknowledgements
We would like to thank the reviewers for their comments.

References
[1] T. K. Dey, K. Mehlhorn, and E. A. Ramos. Curve reconstruction: connecting dots with good reason,Proc. 15th

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

[10] E. Althaus, and K. Melhorn. Polynomial time TSPbased curve reconstruction, Proc. 11th ACM-SIAM
Sympos. Discrete Algorithms, 2000, pages 686-695.
[11] Siu-Wing Cheng, and Stefan Funke, and Mordecai
Golin, and Piyush Kumar, and Sheung-Hung Poon, and
Edgar Ramos. Curve Reconstruction from Noisy Samples, Proc. ACM Symposium on Computational Geometry, 2003, pages 302-311.
[12] Asish Mukhopadhyay, and Augustus Das. An RNGbased heuristic for curve recinstruction, Proceedings
of the International Symposium on Voronoi Diagrams,
2006, pages 246-251.

