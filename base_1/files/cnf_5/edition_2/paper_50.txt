2009 Sixth International Conference on Computer Graphics, Imaging and Visualization

A K-means Based Generic Segmentation System
Arash Azim Zadeh Irani, Bahari Belaton
Department of Computer Science, Universiti Sains Malaysia
{arashazim.cod08@student.usm.my, bahari@cs.usm.my}
Abstract

1. Introduction

This paper presents a creative general purpose
segmentation system, potentially capable of object
extraction from RGB images. The segmentation takes
place by initially performing K-means clustering and
then recombination. K-means algorithm uses RGB color
values, diagonal busyness factor (sum of color
differences among central and diagonal pixels) and
epsilon spatiality factor (sum of Euclidian distances of
pixels belonging to a particular cluster from their cluster
center) as its clustering parameters in order to produce
optionally compact or loose clusters representative of
inherent color and texture. In addition, three different
distribution methods are introduced to initialize central
points and therefore improve the clustering accuracy.
The methods are evenly spaced values, random values
and evenly spaced samples respectively. In evenly spaced
values, clusters (central points) are evenly distributed
along the range of RGB colors available with in the
image so that each cluster may partially represent a sub
range of the total range of colors available with in the
image. In random values, the distribution of clusters
(central points) is not even. To define a central point an
RGB color is randomly selected from the range of RGB
colors available with in the image. In evenly spaced
samples the distribution of clusters (central points) is
based on X and Y (width and height) coordinates rather
than color. To obtain an even distribution, total number
of image pixels are calculated and then divided by the
number of clusters (central points). Recombination is
performed by scanning the neighborhood of each pixel in
eight connected directions and determining the class
(cluster) to which majority of neighbors belong. The
class of central pixel (the pixel whose neighborhood is
scanned) is then changed to the class (cluster) that
majority of neighbors belong.

Segmentation is a key step towards derivation of
semantics from digital images. The crucial need of
numerous high level applications to certain level of
semantics is a fact that has drawn considerable attention
in the field of image processing. Content based image
retrieval (CBIR) systems are obvious examples of such
high level applications. The desire to develop a generic
segmentation system that produces moderately good
segmentation results for a wide verity of images led to
this paper. Development of a general purpose
segmentation system via creative rectification of major
limitations of K-means algorithm is the main objective of
this paper. Now, the least characteristics that a general
purpose segmentation system must have include
computational efficiency, ability to properly compromise
among multiple parameters, customizability and
reliability. In this work, computational efficiency,
customizability and to an extend ability to properly
compromise among multiple parameters are addressed.
However, since the reliability means nearly constant
quality of results for various images, is a very difficult
task indeed. A segmentation system must be tested
multiple times and be amended accordingly to reach
certain maturity or in other words reliability level. In this
work, K-means algorithm is used to address
computational efficiency since K-means algorithm is a
very fast and computationally trivial algorithm as
compared to many other clustering algorithms [1].
Epsilon spatiality factor and recombination are used to
handle spatiality issues. Diagonal busyness factor is used
for texture detection. Different methods of central points
initializations are employed in order to reduce local
optima convergences. Multiple widget panels are
provided to enable user input towards fine tuning among
different parameters and achieving the best possible
compromise.

Keywords--- K-means, Image Segmentation, Texture,
Color, Spatiality
978-0-7695-3789-4/09 $25.00 © 2009 IEEE
DOI 10.1109/CGIV.2009.8

300

algorithms are based on fuzzy sets. Each pixel may
belong to two or more clusters with different degrees of
membership. Final result is produced either in a ranked
manner or by selecting an appropriate degree of
membership for each pixel [3]. Probabilistic clustering
algorithms are entirely based on probability. They
develop probabilistic models (each model is represented
by a particular cluster) and attempt to optimally match
between the patterns that pixels may form and the
models [3]. Exclusive clustering algorithms exclusively
group pixels, such that if a pixel belongs to a particular
cluster then it could not belong to any other cluster [3].
K-means is an instance of exclusive clustering
algorithms and is the backbone of this paper’s
methodology. K-means algorithm starts clustering by
determining k initial central points, either at random or
using some heuristic data. It then groups each image
pixel under the central point it is closest to. Next, it
calculates new central points by averaging the pixels
grouped under each central point. The two former
algorithmic steps are repeated alternately until
convergence (central points no longer change by
averaging) [4]. There are a number of limitations to Kmeans algorithm. First, it does not guarantee to return a
global optimum solution since it can not determine
appropriate numbers and locations of cluster centers that
may be required for a particular image. Second, it can
not address spatiality issues. Third, it works best only
when clusters are naturally available with in dataset.
Forth, many iterative rounds may be required. Fifth, too
small or too large clusters may be formed. This work
strives to address first, second, fourth and fifth
limitations in the context of a generic segmentation
system.

2. Literature review
2.1. Introduction
Segmentation refers to the process of partitioning a
digital image into multiple regions (sets of pixels), where
each region is different from the other regions in respect
to some characteristics such as color, intensity, texture
and spatiality. The goal of segmentation in general is to
simplify and/or change the representation of an image
into something that is more meaningful and easier to
analyze [2]. Several general-purpose methods have been
developed for image segmentation. However, since there
is no general solution to the image segmentation
problem, these methods often have to be combined with
domain knowledge in order to effectively solve an image
segmentation problem for a particular domain. Some of
the general-purpose segmentation methods are region
growing, histogram evaluation, graph cut and clustering.
Region growing starts with a single pixel (current region)
and progresses by recursively examining the adjacent
pixels. If they are sufficiently similar, they are added to
the current region, otherwise a new region is formed [2].
Histogram evaluation takes place by computation of a
color or intensity based histogram from all of the pixels
in the image. The peaks and valleys in the histogram are
then used to locate different regions in the image [2].
Graph cut models the image into a weighted undirected
graph. Each pixel is a node in the graph, and an edge is
formed between every pair of pixels. The weight of an
edge is a measure of the similarity between the pixels.
The image is partitioned into disjoint sets (segments) by
removing the edges connecting the segments. Clustering
refers to the process of grouping pixels of an image such
that pixels which are in the same group (cluster) are
similar among them and are dissimilar to the pixels
which belong to the other groups (clusters). Similarity is
measured by distance and defined by an N dimensional
feature space. Feature distance calculation differs from
spatial distance calculation. Feature distance calculation
is based on features such as color or intensity and texture
while spatial distance calculation is based on x, y (width,
height) coordinates. Devising an appropriate distance
calculation method is an important task since it greatly
affects final clustering result. Distance calculation
method should be able to effectively compromise among
multiple parameters. Furthermore, defining similarity
parameters based merely on feature space may lead to
clustering errors. For instance, two objects with similar
color and texture properties but different shapes will be
grouped under the same cluster. Errors of this kind could
be fatal in a content based retrieval system where shape
is of substantial importance in production of appropriate
search results. Clustering algorithms may be generally
classified into four main categories which are
hierarchical, overlapping, probabilistic and exclusive [3].
Hierarchical clustering algorithms are based on union
between two nearest clusters. They start by setting every
pixel as a cluster and progress until final result (few
desired clusters) reached [3]. Overlapping clustering

2.2. K-means based segmentation
Currently the amounts of data stored in databases
(online and offline) are so huge that create a crucial need
for effective and speedy data analysis methods [5].
Cluster analysis is one of the primary data analysis tasks
that helps in interpretation and understanding of natural
grouping or structure in a dataset [5]. Analysis of various
clustering methods such as CURE, SINGLE LINK,
BIRCH, CLIQUE, PAM, CLARA, CLARANS and
DBSCAN justify the use of K-means clustering as an
effective method, capable of producing good clustering
results for many practical applications [5]. K-means
clustering is the most widely used and studied method
among clustering formulations that are based on
minimizing a formal objective function [5].
Modifications to K-means clustering method that makes
it faster and more efficient are proposed [5]. The main
argument of the proposed modifications is on the
reduction of intensive distance computation that takes
place at each run (iteration) of K-means algorithm
between each data point and all cluster centers [5]. To
reduce the intensive distance computation, a simple
mechanism by which, at each iteration, the distance
between each data point and the cluster nearest to it is

301

over segmented regions are merged and boundaries of
regions are refined [1].
A segmentation algorithm for object based image
retrieval systems is proposed [6]. It is capable of finding
regions that represent objects or meaningful parts of
objects [6]. The segmentation algorithm can be divided
into two main parts which are j-means clustering
algorithm and spatial constraints [6]. J-means clustering
algorithm is a combination of k-means clustering
algorithm and fisher discriminant [6]. K-means algorithm
receives a RGB image as input and performs clustering
based on a six dimensional feature space. The
dimensions are R (red color value), G (green color
value), B (blue color value), V (vertical busyness factor),
H (horizontal busyness factor) and D (upper diagonal
busyness factor), the first three dimensions are used to
detect color similarities and the last three dimensions are
used to detect texture properties [6]. Input RGB image is
converted to a gray scale image prior to calculation of V,
H and D values for each pixel [6]. Then, V, H and D
values are calculated by counting the number of intensity
changes in the column, row and upper diagonals [6].
Fisher discriminant ratio is used for pixel reassignment
task in contrast with traditional distance calculation
methods [6]. Using fisher discriminant ratio for
reassignment task reduces the required number of
iterations significantly and increases clustering precision
[6]. Fisher discriminant is defined as ratio of sum of
difference in means to sum of variances of each class [6].
The reassignment decision depends entirely on the
decrease or increase in fisher discriminant ratio [6]. A
pixel is reassigned only if its reassignment causes an
increase in fisher discriminant ratio [6]. When there are
multiple clusters a particular pixel will be assigned only
to the cluster that upon its assignment increases the fisher
discriminant ratio most [6]. Thus, each time a pixel is
reassigned the means and variances of its old and new
clusters are recalculated [6]. The spatial constraints are
applied after the first iteration of j-means clustering
algorithm [6]. A spatial term is calculated using a small
window W of dimensions (2w + 1) centered around each
pixel [6]. In each window, the pixels that have the same
class as the central pixel are counted. If all of the pixels
in the window have the same class as the central pixel
the spatial term is emphasized by a certain weight [6].
Based on these counts a membership probability (spatial
term) is calculated that enables the algorithm to tell the
likelihood that the Tth pixel belong to the same class as
the pixels in a particular window [6]. Each time a pixel is
reassigned the membership probability will be
recalculated [6]. The spatial term is added to the fisher
discriminant ratio formulation in order to directly affect
the reassignment decision [6].
An innovative segmentation algorithm which is
based on human visual system and its responses to colors
and spatial frequencies of colors is implemented [7, 8].
The algorithm is implemented in four main phases. Phase
1- Perceptual filter(s) is applied to construct a perceptual
tower [7]. It is known from the researches conducted on
human vision that human visual system’s responses to

computed and recorded in a data structure is suggested
[5]. Thus, on the following iteration(s) the distance
between each data point and its previous nearest cluster
is recomputed [5]. If the newly computed distance is less
than or equal to the previously recorded distance the data
point remains in the same cluster and there is no need to
compute the distances between the data point and all
other clusters [5]. However, if the newly computed
distance is greater than the previously recorded distance,
the distances between the data point and all other clusters
must be computed and the least of them must be selected
to over write the data structure’s previous record [5]. It
may be noticed that a major improvement in
computational time takes place only when the data points
move towards their previous nearest cluster and not away
from it [5].
A general segmentation system capable of
segmenting color images is proposed [1]. Only few
available segmentation systems can produce reasonable
results for a broad diversity of images [1]. An effective
general purpose segmentation system is of great
importance for content based image retrieval [1]. The
proposed system uses K-means clustering algorithm as
its basis. It observes spatiality and small meaningless
clusters as two major shortcomings of K-means
clustering algorithm and strives to address them in a
creative manner [1]. Figure 1 demonstrates the overall
structure of the system.

Figure 1 System Architecture [1]
As appears from figure 1, in the first stage
downscaling takes place. The width and height of the
input image are reduced to 320 pixels [1]. Downscaling
increases processing speed with out significantly
affecting segmentation precision [1]. In the second stage
the downscaled image is divided into several N by N
blocks (value of N is a matter of preference) [1]. Then, a
four dimensional feature is extracted from each of these
blocks to construct feature space [1]. The four
dimensional feature include three color dimensions and
one texture dimension [1]. The color dimensions are
obtained by transformation of H, S and V color space
[1]. In the third stage the actual segmentation takes place.
K-means algorithm and region growing are run
alternatively such that after each round of k-means
clustering, region growing of those pixels belonging to
the same feature cluster is carried out by a connected
component labeling algorithm [1]. Thus, these alternative
runs lead to a stable propagation of regions, well
matched with spatial constraints [1]. In the fourth stage

302

bear and retrieved very few pictures of bears in return
[10]. 3- For general image collections, there is currently
no system that can automatically classify images or
organize the objects they contain [10]. These
shortcomings are claimed to be addressed by the
proposed region based indexing and retrieval algorithm.
The proposed algorithm has three main characteristics. 1A novel k-means segmentation algorithm as a basis for
indexing. It is modified so as to take into account the
coherence of the regions [10]. 2- A new color distance is
defined. The LAB color space is used, which is related to
CIE 1931 XYZ standard observer through a nonlinear
transformation [10]. 3- In the context of similarity based
querying, the user is allowed to view the internal
representation of submitted image and the query results
[10]. More specifically, in a querying task, the user can
directly analyze the retrieved image and specify which
aspects of it are central (key) to the query results and
improve his query based on those key aspects and
gradually obtain optimum retrieval results [10].

colors are highly dependant to spatial frequency [7]. The
higher spatial frequencies an object has, the more it tends
to get blurred by human eyes [7]. Likewise, the lower
spatial frequencies lead to clearer object [7]. Thus,
perceptual tower is an effort to resemble the dependency
between spatial frequency and clarity in human visual
system [7]. Perceptual tower is implemented by
generating a series of images that are increasingly
blurred [7]. Phase 2- Formation of initial clusters using
K-means algorithm [7]. Before the blurred image can be
passed to the next phase, k-means clustering with a very
large k (10000 to 50000) is performed on it to produce
many small clusters [7]. A five dimensional feature space
(L, A, B, X, Y) is used. L, A and B refer to color space
and X and Y refer to spatial coordinates [7]. Phase 3Core Clusters are formed by merging similar small
regions iteratively [7]. Two regions are merged if their
mean values are close [7]. The closeness of two mean
values is determined by a threshold [7]. The iterative
merging finishes when no more regions can be found that
satisfy the threshold [7]. Phase 4- Multiscale
probabilistic relaxation algorithm is performed to refine
the core clusters generated in phase 3 [7]. It initially
operates on the coarsest image and then moves down
ward to much clearer images [7]. It enables the
calculation of membership probability for a specific pixel
[7]. The probabilities are calculated in an iterative
manner (relaxed manner) and are updated at each
iteration as the algorithm moves through images from
coarse to fine [7].
Content based image retrieval is facilitated [9]. A
new and interesting form of image representation which
is called “blob world” is proposed [9]. Blob world
representation is based on segmentation of color and
texture features using Expectation Minimization [9]. The
blob world descriptors form a summary representation
because they are small and relatively simple to process in
a querying format [9]. Each image is visualized by a
number of 2D blobs, each of which processes a number
of attributes [9]. Each blob represents an approximately
coherent (homogeneous) region with respect to color and
texture similarities [9].
Very large, diverse and poorly indexed collections of
images in the databases (online and offline) as well as
inappropriate indexing and retrieval systems are
identified as motivation for proposing a region based
color image indexing and retrieval algorithm [10]. The
limited functionality of currently available indexing and
retrieval systems are mainly due to type of image
representation they use and to their methods of accessing
those representations [10]. Further elaborations are
organized into three main arguments. 1- While users
often would like to find images containing particular
objects, most existing image retrieval systems represent
images based only on their low level features, with little
regard for spatial organization of those features [10]. 2Systems based on user queries are often unintuitive and
offer little help in understanding why certain images
were returned and how to refine the query [10]. Often the
user knows only that he has submitted a query for, say, a

3. Methodology
3.1. Overview
This work recognizes that initial distribution of
central points is of considerable importance in
production of reasonable segmentation results. Different
images may require different type of initialization
depending on their color and texture characteristics
and/or the physical locations of objects of interest with in
them. Three different types of initialization methods are
therefore proposed as an effort to cover the entire feature
space and reduce the risk of local optima (local
convergences). Initialization method could be selected by
user depending on the type of image at hand.
An epsilon factor is used to provide spatial
uniformity that may be useful for object extraction. It
may also help towards reducing the risk of too small or
too large cluster formations. Epsilon factor could be set
by user depending on the type of image at hand. The
required K (number of averaging iterations) may also be
reduced since it is adjusted in relevance to epsilon factor.
As mentioned in the prior sections epsilon factor is the
sum of Euclidian distances of pixels belonging to a
particular cluster from their cluster center. We can
assume a tolerance (limit of deviation from epsilon
value) for the clusters in order to increase segmentation
flexibility.
Recombination is used to further improve the
clustering accuracy by removing instances where a pixel
of a different class is surrounded by pixels of same class.
Recombination is performed for each of the pixels of the
image in eight connected directions.
RGB color values and diagonal busyness factor are
used as the feature for clustering. The reasoning behind
merely using diagonal direction and ignoring horizontal
and vertical directions is that attempting to add other
directions will lead to unrepresentative (overloaded)
texture feature and obscured texture detection.

303

RGB value of each central point is calculated by
traversing from lower bound to upper bound
based on interval.

3.2. Proposed system
An overall flowchart may be of great importance
towards better understanding of the segmentation system
presented in this section. Figure 2 is therefore provided
prior to any further elaboration.

(a)

(b)
Figure 3 (a) Range Calculation (b) Interval
Calculation
•

Random values. In random values distribution,
RGB value of each central pixel is obtained by
random selection from a range of RGB colors
available with in the image (figure 4). The range
definition is done in the same way as evenly
spaced values distribution.

Figure 4 Random Selection
•
Figure 2 Overall System Flowchart
3.2.1. Phase 1- preprocessing is an optional step
that can take place upon user preference. Operations such
as histogram equalization and noise removal using
readily available filters can take place. Figure 12 is a
representative example that implements histogram
equalization prior to actual segmentation.

Evenly spaced samples. In evenly spaced
samples distribution, RGB values of central
points are determined based on X, Y
coordinates (where X denotes width and Y
denotes height). Once, the location of a
particular central point in the image is
determined, its color value will be the color
value of the pixel that resides on that location.
Even distribution of central points through out
the image is performed via an interval (figure
5).

3.2.2. Phase 2- initialization
•

Evenly spaced values. In evenly spaced values
distribution, initially, the range of RGB colors
available with in the image is obtained (figure 3
(a)). In order to define a range, the smallest and
the largest color values with in the image are
obtained and their difference is calculated.
Then, an interval is calculated (figure 3 (b)).

Figure 5 Interval Calculation
3.2.3. Phase 3- clustering is performed using RGB
color values and diagonal busyness factor as features.

304

Diagonal busyness factor calculation is demonstrated by
figure 6.

(a)

3.2.4. Phase 4- stop conditions. In this phase, two
stop conditions which are maximum number of iterations
and epsilon are checked to decide whether to stop or
resume clustering. If any of these conditions are met, the
clustering will halt. Maximum number of iterations
refers to the number of times that the averaging process
should take place. Epsilon refers to sum of Euclidian
distances of pixels belonging to a particular cluster from
their cluster center. Apart from being a stop condition
epsilon is a measure of clustering accuracy as well, since
it shows how compact clusters should be. A tolerance is
assumed for epsilon factor.

DF (R) = abs (cn (r) - ur (r)) + abs (cv (r) - ul (r))
+
abs (cn (r) - br (r)) + abs (cn (r) - bl (r))

3.2.5. Phase 5- recombination. In this phase, the
image is traversed from top to bottom and each pixel is
scanned in 8 connected directions. For each pixel, the
cluster to which majority of pixels in the 8 connected
neighborhood belong is determined. If the central pixel
(pixel whose neighborhood is being scanned) belongs to
the same cluster as the majority of its 8 connected
neighborhood pixels, its cluster will not change, other
wise, its cluster will change to the cluster that the
majority of its 8 connected neighborhood pixels belong.
Figure 7 clearly demonstrates the recombination process.

ul

ur
cn

bl

br

Let
cn = central pixel
ur = upper right pixel
ul = upper left pixel
br = bottom right pixel
bl = bottom left pixel
df = diagonal factor

DF (G) = abs (cn (g) - ur (g)) + abs (cn (g) - ul (g))
+ abs (cn (g) - br (g)) + abs (cn (g) - bl (g))
DF (B) = abs (cn (b) - ur (b)) + abs (cn (b) - ul
(b)) + abs (cn (b) - br (b)) + abs (cn (b) - bl (b))
where abs is the absolute value
(b)
Figure 7 Recombination

Figure 6 (a) Directions (b) Diagonal Busyness
Factor Calculation

305

4. Experimental Results
4.1 Demonstration

(a)
(a)

(b)

(c)

(b)

Figure 9 (a) RGB Image (b) This Paper’s Segmentation
(c) Reference 5’s Segmentation

Figure 8 (a) RGB Image (b) Segmented Image

(a)
(a)

(b)
(b)

(c)

(c)

Figure 11 (a) RGB Image (b) This Paper’s Segmentation
(c) Reference 5’s Segmentation

Figure 10 (a) RGB Image (b) This Paper’s Segmentation
(c) Reference 5’s Segmentation

306

details and uniformity. Different methodologies may
produce varied balance.
(a)

(c)

(b)

Conclusions
This paper proposes a creative K-means based
generic segmentation system that allows both RGB and
gray scale image segmentation and can be extended to
other standard color formats. The creativity of this work
is due to three main factors. First, K-means clustering
does not merely rely on unguided search of color and
texture feature space. It is rather guided by different
methods of initializations. Thus, avoiding local optima
convergences and producing finer results. Second, stop
condition for clustering or in other words K is not just a
large guess (ex. above 100). It is rather a compromise
with epsilon spatiality factor (sum of Euclidian distances
of pixels belonging to a particular cluster from their
cluster center). Thus, enabling meaningful uniformity.
Third, majority count based recombination is used to
ensure further spatial refinement.

(d)

Figure 12 (a) Gray Scale Image (no
Preprocessing performed) (b) Segmentation of
Part a (c) Gray Scale Image (preprocessed) (d)
Segmentation of Part c. Please Note the Effect
of Preprocessing on Segmentation Outcome

4.2 Analysis

References

This section elaborates on the figures presented in
section 4.1. As may be noticed, figures 8 and 12 merely
present the segmentation methodology of this paper.
However, figures 9, 10 and 11 strive to validate the
contributions of this paper by comparing the
segmentation results produced by this paper and
reference 5. Figure 8 demonstrates the accuracy with
which color based grouping is done. Here evenly spaced
values type of central point initialization (phase 2 of
figure 2) is used. Please note that the grayish water drops
(grouped in light blue pseudo color) are well
differentiated.
Figure
12
demonstrates
the
implementation of this paper’s methodology on a gray
scale image. It also shows the effect of preprocessing
(phase 1 of figure 2) on segmentation outcome. Images
(RGB or gray scale) may have issues such as
considerable noise, poor contrasting, etc that lead to
distortion of important features. Therefore, without an
appropriate preprocessing treatment, segmentation may
not produce revealing results. In figure 12, Parts a and b
represent an MRI image and its segmentation
respectively. Parts c and d represent a preprocessed
(histogram equalization is used) version of part a and its
segmentation respectively. Note the difference in quality
of parts b and d.
This paper proposes an adjustable epsilon factor
(phase 4 of figure 2) and mild recombination (phase 5 of
figure 2) while reference 5 proposes intensive rounds of
region merging and some other spatiality considerations.
Figure 9 evidently shows the difference. Details such as
the cliffs and some parts of the boat are omitted by
reference 5. However, it is fair to say that reference 5
offers better uniformity in grouping. Again in figure 10
this paper segments the wings of butterfly and leaves
better, but has some distortion in its grouping uniformity.
Please note that there is a compromise between extra

[1]

Ming Luo, Yu Fei Ma and Hong Jiang Zhang. A Spatial
Constrained K-means Approach to Image Segmentation.
In Proceedings of 4th Pacific Rim Conference on
Multimedia. IEEE, 738-742. December 2003.
[2] Linda G. Shapiro and George C. Stockman. Computer
Vision. New Jersey, Prentice Hall. 2001. 279-325.
[3] A Tutorial on Clustering Algorithms. Politecnico Di
Milano University Press. [Online]. Available:
http://www.polimi.it. [Accessed: 2007].
[4] J. B. MacQueen. Some Methods for Classification and
Analysis of Multivariate Observations. In Proceedings of
5th Berkeley Symposium on Mathematical Statistics and
Probability. 281-297. January 1967.
[5] Fahim, Salem, Torkey and Ramadan. An Efficient
Enhanced K-means Clustering Algorithm. Journal of
Zhejiang University. 1626-1633. October 2006.
[6] Sridhar R. Avula, Jinshan Tang and Scott T. Acton. An
Object Based Image Retrieval System for Digital
Libraries. Journal of Multimedia Systems. 260-270.
November 2006.
[7] Angela Chau and Jeff Walters. Perceptual Color Image
Segmentation. Stanford University Press, 2003. [Online].
Available:
http://scien.stanford.edu/class/cs223b.
[Accessed: 2007].
[8] M. Petrou, M. Mirmehdi and M. Coors. Perceptual
Smoothing and Segmentation of Color Textures. In
Proceedings of the 5th European Conference on
Computer Vision. 623-639. 1998.
[9] Serge Belongie, Chad Carson, Hayit Greenspan and
Jitendra Malik. Color and Texture Based Segmentation
Using EM and Its Application to Content Based Image
Retrieval. In Proceedings of 6th International Conference
on Computer Vision. IEEE, 675-682. 1998.
[10] Ioannis Komatsiaris, Evagelia Triantafillou and Michael
G. Strintzis. Region Based Color Image Indexing and
Retrieval. In Proceedings of 11th International
Conference on Image Analysis and Processing. IEEE,
392-395. 2001.

307

