2009 Sixth International Conference on Computer Graphics, Imaging and Visualization

Real-time Simulation of Large Area Nearshore Wave for Marine Simulator

1

Yongjin Li1,2∗ , Yicheng Jin1† , Yong Yin1‡ , Helong Shen1§
Laboratory of Marine Simulation and Control, Dalian Maritime University, Dalian 116026, China
2
Vessel Command Department, Public Security Marine Police Academy, Ningbo 315801, China
∗
liyj.cn@gmail.com, † jycdmu@dlmu.edu, ‡ bushyin dmu@263.net, § shenhelong@gmail.com

Abstract—A new method for nearshore wave simulating
is introduced. Firstly, parabolic mild-slope equations are set
up according to the simulation area and input waves. After
solving the equations, the integral wave parameters such as
the root mean square wave height, the peak wave period
and the mean wave direction can be calculated. Instantaneous
surface elevations can also be obtained from the model. Then,
the integral wave parameters and an instantaneous surface
elevation are composed into a float texture. Finally, a viewpointdependent sea surface is rendered using this texture as wave
parameters. Experimental results show that this method can
be applied to simulate large area nearshore wave in real-time
with realistic effect. It is suitable for the application of real-time
simulation, particularly for marine simulator.

Figure 1.

A photo taken in one of our marine simulators

Keywords-nearshore wave simulation, physical consideration
wave modeling, real-time wave rendering, marine simulator

Fig. 1 is a photo of our marine simulator. Our method
described in this paper will be applied in this system.
In this paper, we will present a method for simulating the
nearshore wave in coast area for marine simulator, which is
capable of exhibiting the combined behavior of nearshore
wave such as shoaling, refraction, diffraction and energy
dissipation, etc.

I. I NTRODUCTION
Ocean wave simulating has been among the most important problems in marine simulator, because the realistic
waves can not only increase the realism of the virtual
ocean scene, but also provide correct wave-parameters to
the ship maneuvering model. For the following reasons it
has also become one of the most challenging problems int
marine simulator. Firstly, ocean wave is an important factor
for ship maneuvering, which requires reproducing waves
accurately. Secondly, the visual system in marine simulator
is commonly multi-channel, so the ocean waves in each
channel must stitch up seamlessly. Finally, the virtual scene
also contains many other objects, such as ships, islands,
buildings, etc., so the ocean waves must be rendered quickly
enough to ensure that the whole scene is rendered in realtime.
There are many different types of waves in ocean: tides,
tsunamis, wind wave, ship wave. This paper focuses on
simulating the nearshore wave, which is generated by open
ocean wave transmitting to the shore. The simulation of
nearshore wave is more difficulty than that of open ocean
wave, because the sea floor, coast and marine structures can
all effect the propagation of wave.
Among the marine simulator market, many companies
such as: Kongsberg, STN Atlas, Transas, etc. contributed
great inventions to its development. Unfortunately, we cannot find any realistic nearshore wave simulation in their
simulator. The marine simulators produced by us before also
used the open ocean wave model in the coast areas [1], [2].
978-0-7695-3789-4/09 $25.00 © 2009 IEEE
DOI 10.1109/CGIV.2009.57

II. P REVIOUS W ORK
Some previous works on water simulation modeled water
as a surface using parametric representations [3]–[7]. Wave
refraction caused by water depth varying was simulated
using wave tracing. [3] used this method for simulating
wave near the shore in their maritime training simulator.
[8] proposed a geometrical model accounting for refraction,
diffraction, reflection, transmission and multi-waves trains,
and described a specific algorithm for the rendering of
multi-waves trains. These methods can only simulate water
waves in the simple environment, and the accuracy of wave
parametric calculation is low.
Others rely on solving the hydrodynamics equations to
simulate shallow water wave. [9] used finite differences
to solve simplified 2D shallow water equations over a
dynamic height field. This method can generate the effects
of wave refraction with depth, wave reflection, etc. [10]
made the computation more stable by using the implicit
semi-Lagrangian integration for 2D shallow water equations.
These methods can not simulate large area of nearshore wave
in real-time.
There is a lot of work has been done on solutions to 3D
101

Navier-Stokes equations for simulation of fluids [11]–[13].
Although these methods can generate high quality results of
water wave simulation, therefore all of these methods are
computationally expensive, can not simulating large area of
nearshore wave.
We also presented a method for simulating nearshore
wave using Boussinesq-type equations [14]. This method can
simulate nearshore waves in real-time with realistic effect,
but the pre-computing requires long time and large memory.

∇ · (CCg ∇ϕ(x, y)) + (k 2 CCg + iωW )ϕ(x, y) = 0, (1)
ϕ(x, y) = ϕ(x, y, z, t)

ω
cosh(kd)
eiωt .
g cosh(k(η + d))

The dissipation function W in the parabolic mild-slope
equation is calculated as:
W = Wb + Wf ,

III. WAVE PARAMETERS C OMPUTING

(3)

where Wb and Wf are the dissipation functions due to
wave breaking and bottom friction respectively. The wave
breaking dissipation is [17]:

Several different models for computing nearshore wave
are commonly adopted, e.g. Navier-Stokes equation,
Boussinesq-type equation, mild-slope equation, SWAN
model, etc. Each model has its scope of application. The
detailed comparison of each model is given in [15].
The parabolic mild-slope equation can be applied to the
study of wave disturbance in open coastal areas and for
computing wave fields in coastal areas with structures (e.g.
groynes, detached breakwaters) when back-scatter (reflection
into the incoming waves) can be neglected and diffraction
is predominantly perpendicular to the main wave direction.
The parabolic mild-slope equation is a linear refractiondiffraction model. The model takes into account the effects
of refraction and shoaling due to varying depth, diffraction
along the perpendicular to the predominant wave direction
and energy dissipation due to bottom friction and wave
breaking. The model also takes into account the effect of
frequency and directional spreading using linear superposition.

2αQb ln(Qb )
,
(4)
Tm 1 − Qb
where α controls the rate of energy dissipation, Qb is
the percentage of breaking waves in the irregular (Rayleigh
distributed) wave train, Tm is the energy-averaged mean
wave period. The rate of energy dissipation due to bottom
friction is formulated:
Wb =

Wf = √

−Cf w ω 3
Hrms ,
πg sin3 (kd)

(5)

where Hrms is the root mean square wave height.
The parabolic mild-slope equation (1) is solved using the
Crank-Nicholson numerical scheme for parabolic differential
equations. The resulting tridiagonal system of equations is
solved using the double-sweep algorithm. The output data
from the model are integral wave parameters such as the
root mean square wave height, the peak wave period and the
mean wave direction. The instantaneous surface elevations
η can be obtained from the model by formula [18]:

Table I
SYMBOL LIST IN PARABOLIC EQUATION

∇
C(x, y)
Cg (x, y)
ϕ(x, y)
k
L
ω
f
W
Ediss
E
g
d
η

(2)

two-dimensional gradient operator
phase speed
group velocity
mean surface velocity potential
wave number = 2π/L
wave length
circular frequency = 2πf
frequency
Dissipation term = Ediss/E
mean energy dissipation rate per unit time per unit area
mean energy per unit area
gravitational acceleration(= 9.8 m/s2 )
still water depth
water level elevation

η = ϕ(x, y)e−iωt+π/2 .

(6)

IV. S EA S URFACE R ENDERING
Because our simulation area is usually very large, the
number of grids for computing wave parameters is very big.
Thereby we can not use this girds to construct sea surface
directly. We create the sea surface with viewpoint-dependent
grid and use the wave parameters as a textures sampled by
the sea surface.
A. Geometry of Sea Surface
We can use two kinds of viewpoint-dependent grids, one
is a projected grid and another is a radial grid, as shown
in Fig. 2. In projected grid method, the vertexes of the grid
are even-spaced in view plan and then project to sea level.
In radial grid method, the center position of the radial grid
is the camera position on sea level and it provides more
detail closer to the viewer. They all have LOD effects. We
recommend that the interested reader refer to [19], [20] for
detailed explanations separately.

In this paper, we prefer to simulate large area of nearshore
wave in less time. So we choose the parabolic mild equation
to compute the wave parameters. The equation was first
derived by [16]. The symbols we used are listed in Table
I. The elliptic mild-slope equation can be written as:

102

Table II
T ERMS USED IN RENDERING

Y

Y

Cf inal
Csurf ace
Cf oam
Cref lect
Cref ract
Csky
Csun

X

Sea level

View plan
X
(a)Projected grid

Figure 2.

(b)Radial grid

Clocalref lect
Cobject
Cwater
S(h)
F (θ)
h
h0
hmax
θ
atten
dist
γ

Projected grid and radial grid

B. Motion of Sea Surface
The geometrical model of the sea surface created above
is only a static plan. We must make it move in every frame
during rendering. The vertex elevation of the sea surface is:
Vz = Hrms cos(φ0 − ωt),

(7)

where the initial phase φ0 is determined by the instance
elevation ηi and the value of its neighbor grid ηi+1 :
{

i
φ0 = Hηrms
π, ηi ≤ ηi+1
.
i
φ0 = − Hηrms
π, ηi > ηi+1

Final color of the sea surface
Sea surface color without foam effect
Color of the foam
Reflect color from outside of water
Refract color from inside of water
Color of the sky
Height light color from the sun
Reflect color from object near to camera
Color of object in water
Color of water itself
Dense factor of foam
Fresnel factor, saved in an 1D texture
Height of current pixel
Height begin to generate foam
Height at which foam is the maximum
Angle of view direction to current normal
Attenuation factor
Distance from sea surface to object in water
e−atten∗dist

(8)

In order to make the choppy effect of rough wave, the
horizontal value of the vertex was modified by the elevation
of vertex along the wave direction γ:
{
Vx − = β sin(φ0 − ωt) cos(γ)
,
(9)
Vy − = β sin(φ0 − ωt) sin(γ)
where the β is the choppy factor.
C. Color of Sea Surface
The color formulas of the sea surface in our method are:
Cf inal
Csurf ace
Cref lect
Cref ract
S(h)

Figure 3.

Table III
C OMPARATIONE OF THE PREVIOUS METHOD

= S(h) ∗ Csurf ace + (1 − S(h)) ∗ Cf oam(10)
= F(θ) ∗ Cref lect + (1 − F(θ)) ∗ Cref ract
(11)
= Csky + Csun + Clocalref lect
(12)
= γ ∗ Cobject + (1 − γ) ∗ Cwater
(
)
h − h0
= saturate
hmax − h0

Compare the result to previous method

(13)

Method

Pre-computing time

Memory needed

paper [14]

8711s

415M

Visual Effect
wonderful

this paper

6s

153M

very good

(14)

A. Compare with Previous Method

The terms used in these formulas are summarized in Table

The experiment for simulating shallow water wave in
Dalian Port is given here. The region of simulation area is
9000m × 8100m, and the grid interval is 4.5m, the number
of grid points are 2001 × 1801. The ocean wave comes from
east, the wave height is 4m and the wave period is 12s. The
configuration of the experimental PC is: Intel Core2 Duo
CPU E7300 at 2.66GHz, 2.0G RAM and a WinFast PX7900
GTX Extreme graphics card. The up row of Figure 3 are the
results using method of the paper [14], the bottom row is

II.
V. R ESULTS
In this section we compare the results from the method
presented in this paper with the method in our previous paper
in the same sea area. Then, an example of application of
our method for simulating nearshore wave in Qingdao Port
is introduced.

103

Figure 7.

Figure 4.

Water depth, wave direction and amplitude

Figure 5.

Render result of different environment

B. Application on Qingdao Port
The region of simulation area is 51200m × 51200m, and
the grid interval is 12.5m, the number of grid points are 4096
× 4096. The ocean wave comes from southeast and the wave
height is 4m, the wave period is 12s. The experimental PC
is the same one used for pre experiment.
The color of Fig. 4 represent the depth of water, the
direction of the arrow denote the wave direction and the
length of the arrow indicate the amplitude of the wave. The
influence of the sea bed and the shore is clearly evident, as
well as the reduction of the heights in the bay due to wave
diffraction.
Fig. 5 is the instance surface elevation of the whole
simulation region. Because the area of the simulation region
is too large, we cannot clearly see the wave crest line. A
selected rectangle region was shown in Fig. 6. In this figure
a good visual impression of refraction and diffraction effect
can be got. Fig. 7 are some frames captured from our system
of different environment. The frame rate is at average of 120
fps.

Surface elevations of whole area

VI. C ONCLUSION AND F UTURE W ORK

Figure 6.

In this paper, we propose a new method to simulate large
area of nearshore wave in coastal area. Using this method,
the nearshore wave can be rendered with realistic effect in
real-time. The parabolic mild slope equation guarantees the
accuracy of the wave parameters. The viewpoint-dependent
sea surface grid and vertex textures allow the system to
render large sea surface in real-time.
Compare to the method in [14], this method needs fewer
time to pre-computing and occupies little memory, but has
the near visual effect to the former.
However we can not get the realistic effect of wave curling
and breaking because we still use only 2D equations. How
to introduce these effects to our system will be studied later.

Surface elevations of local area

ACKNOWLEDGMENT

the result using this paper’s method. The pre-computing time
and memory requirements are showed in Table III.

We would like to thank the anonymous reviewers for their
helpful comments and the support by the 973 Program of

104

China (No. 2009CB320805).

[15] M. Feng, W. Sha, and S. Zhou, “Study on some numerical methods calculating waves in shore,” Marine Forecasts,
vol. 20, no. 1, pp. 52–59, 2003.

R EFERENCES
[1] C. Xie, Y. Jin, and X. Liu, “Real-time ocean wave in
multi-channel marine simulator,” in Proceedings of the 2004
ACM SIGGRAPH international conference on Virtual Reality
continuum and its applications in industry (VRCAI’04). Singapore: ACM Press New York, NY, USA, 2004, pp. 332–335.

[16] J. Berkhoff, “Computation of combined refractiondiffraction,” in Procedings of the 13th Intl. Conference
On Coastal Engineering, Vancouver, Canada, pp. 471–490.
[17] J. Battjes and J. Janssen, “Energy loss and set-up due to
breaking of random waves,” in Proceedings of the 16th Intl.
Conference On Coastal Engineering.

[2] Y. Yin, Y. Jin, and H. Ren, “Wave simulation of visual
system in marine simulator based on wave spectrums,” in
Proceedings of International Conference On Marine Simulation and Ship Maneuverability (MARSIM’03), vol. 1,
KANAZAWA,JAPAN, 2003, pp. RA–28–RA–28–8.

[18] R. Dean and R. Dalrymple, “Water wave mechanics for
engineers and scientists,” 1984.

[3] J. M. Cieutat, J. C. Gonzato, and P. Guitton, “A new efficient
wave model for maritime training simulator,” in Proceedings of the 17th Spring conference on Computer graphics
(SCCG’01). Budmerice, Slovakia: IEEE Computer Society,
2001, pp. 202–209.

[19] C. Johanson, “Real-time water rendering,” Master thesis,
Lund University, 2004.
[20] Y. Kryachko, “Using vertex texture displacement for realistic
water rendering,” in GPU Gems 2, 1st ed., ser. GPU Gems,
M. Pharr, Ed. Addison-Wesley Professional, 2005, pp. 283–
294.

[4] A. Fournier and W. T. Reeves, “A simple model of ocean
waves,” Computer Graphics, vol. 20, no. 4, pp. 75–84, 1986.
[5] J. C. Gonzato and B. L. Sa¨ec, “A phenomenological model of
coastal scenes based on physical considerations,” Computer
Animation and Simulation, vol. 97, pp. 137–148, 1997.
[6] D. R. Peachey, “Modeling waves and surf,” Computer Graphics, vol. 20, no. 4, pp. 65–74, 1986.
[7] P. Y. Ts’o and B. A. Barsky, “Modeling and rendering waves:
wave-tracing using beta-splines and reflective and refractive
texture mapping,” ACM Transactions on Graphics, vol. 6,
no. 3, pp. 191–214, 1987.
[8] J. C. Gonzato and B. L. Sa¨ec, “On modelling and rendering
ocean scenes,” The Journal of Visualization and Computer
Animation, vol. 11, no. 1, pp. 27–37, 2000.
[9] M. Kass and G. Miller, “Rapid, stable fluid dynamics for
computer graphics,” Computer Graphics, vol. 24, no. 4, pp.
49–57, 1990.
[10] A. T. Layton and M. v. d. Panne, “A numerically efficient
and stable algorithm for animating water waves,” The Visual
Computer, vol. 18, pp. 41–53, 2002.
[11] D. Enright, S. Marschner, and R. Fedkiw, “Animation and
rendering of complex water surfaces,” ACM Transactions on
Graphics, vol. 21, no. 3, pp. 736–744, 2002.
[12] N. Foster and D. Metaxas, “Realistic animation of liquids,”
Graphical Models and Image Processing, vol. 58, no. 5, pp.
471–483, 1996.
[13] T. Takahashi, H. Fujii, A. Kunimatsu, K. Hiwada, T. Saito,
K. Tanaka, and H. Ueki, “Realistic animation of fluid with
splash and foam,” Computer Graphics Forum, vol. 22, no. 3,
pp. 391–400, 2003.
[14] Y. Li, Y. Jin, Y. Yin, and H. Shen, “Simulation of shallowwater waves in coastal region for marine simulator,” in VRCAI
’08: Proceedings of The 7th ACM SIGGRAPH International
Conference on Virtual-Reality Continuum and Its Applications in Industry. New York, NY, USA: ACM, 2008, pp.
1–5.

105

