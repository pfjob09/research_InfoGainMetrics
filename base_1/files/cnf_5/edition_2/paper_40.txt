2009 Sixth International Conference on Computer Graphics, Imaging and Visualization

A New Model of Triangular DP Surfaces and Its Properties

Podcharid Krungkarnchana

Natasha Dejdumrong

Department of Computer Engineering
King Mongkut’s University of Technology Thonburi
Bangkok, 10140, Thailand
e-mail: podcharidk@gmail.com

Department of Computer Engineering
King Mongkut’s University of Technology Thonburi
Bangkok, 10140, Thailand
e-mail: natasha@cpe.kmutt.ac.th
In this paper, a new model of triangular patches has been
introduced with the quadratic evaluation algorithm. The
notion of this model is directly applied from the formation of
DP curve [3]. The reasons that this basis is taken in our
consideration are
1) evaluation algorithm is linear time complexity.
2) Its blending functions possess normalized totally
positive property. In other words, it is shape preserving.
3) There is no need to calculate for the coefficients of
the polynomials.

Abstract—A recent proposed model for triangular DP surfaces
provided in [3] has been found that there is an inappropriate
property in its recurrence formulae. It is lack of convexity, i.e.,
the summation of blending functions is not equal to one. This
paper presents a new triangular DP surfaces that possesses the
convexity property and quadratic evaluation complexity. These
two characteristics are realized to be very important attributes
in surface modeling.
Keywords-Triangular DP Surface

I.

INTRODUCTION

In this connection, the characteristic of DP blending
functions and becomes the key requirements of the bivariate
polynomials of this new surface are
• The proposed polynomials are defined with no
coefficient values in order to reduce the coefficient
calculation.
• One or two middle points are the most influential
points for odd and even cases, respectively.

Nowadays, there are two major varieties of surfaces:
Rectangular and Triangular surfaces. Although rectangular
patches are broadly employed in a wide spectrum of graphics
applications, triangular Bézier surfaces still have been
specifically used in several CAD/CAM and CAGD
applications, especially in subtle geometric and shape design.
However, both of them require cubic computational
complexity. There are some impressive works paid attentions
to the reduction of the evaluation time of the rectangular
surfaces [12]. The technique is simply to convert a Bézier
control net into a new form of several curves with linear
complexity, i.e., Said-Ball, Wang-Ball, and DP curves.
Although this technique can reduce the evaluation time from
cubic into quadratic, unfortunately, this technique could not
be readily applied for the cases of triangular patches.
Triangular surfaces are expressed in the forms of bivariate
polynomials while curve and rectangular surfaces are simple
used univariate functions.
There have been several attempts to proposed brand-new
models of triangular surfaces in order to decrease the surface
generating time [3, 8, 10] as well as propose new unified
approaches of triangulation. Triangular Said-Ball surface
was first introduced in 1991 by Goodman and Said. This
surface has not much been referred to because it still requires
cubic time computation (O(n³)). That is the same as that of
Bézier patch. Later, two types of triangular surfaces were
established in 1998 by Hu et. al. [10] and in 2008 by Chen
[3]. Nevertheless, the computational time of these two types
of surfaces cannot be reduced into the quadratic
computations (O(n²)). In addition, both models are lack of
convexity property that is one of the most important
characteristics of the geometric modeling.
978-0-7695-3789-4/09 $25.00 © 2009 IEEE
DOI 10.1109/CGIV.2009.80

Figure 1. The Triangular Schema of DP curve.

245

Figure 2. The Geometric interpretation diagram of DP curve.

From the triangular schema of DP curve in Fig.1 and the
geometric interpretation diagram of DP curve in Fig.2, it is
shown how a DP curve is constructed and the most important
points are located near one or two middle points.
II.

TRIANGULAR DP BASIS

In this section, the DP basis functions we can be
constructed on a triangular domain by control nets. The nets
are represented as C i , j ,k where i + j + k is equal to the
degree . The DP basis, denoted by

n
C i , j ,k ( u , v , w )

will then be

used for defining the new model as follows:

∑i+

C
Cn
(u , v , w)
j + k = n i, j, k i, j, k
u , v , w ≥ 0, u + v + w = 1

C (u , v , w) =

Figure 3. The Schema of triangular DP surfaces.

A. Interpolation Interpretation
From the schema of the triangular DP surfaces in Fig. 3
shows us how to interpolate the control points for degree 3,
4, and 5, respectively. The notions of DP interpolation can be
listed by
1) Any points at each corner will interpolate with u, v,
and w.
2) Any points around the center points of the triangle
will interpolate in the direction to the center point.
3) The points at center (not only center point of the
triangle) will be assigned to interpolating with 1/3.
4) The remaining points remain the same.

246

n = 5:

The DP basis functions are defined as follows:

n
C
i, j , k

⎧{u 5 }, {u 4 v}, {u 4 w}, {u 3 v}, {v ( u + w ) + u ( v + w ) + ( u + v ) w},⎫
⎪
⎪
3 3
3 3
3 3
⎪ 3
⎪
3
2
2
2
2
3
4
⎪{u w}, {uv }, {u v + uv }, {u w + uw }, {uw }, {uv },
⎪
⎪ u w
⎪
v w
u v
2
2
⎨{v ( 3 + 3 ) + u ( 3 + 3 ) + ( 3 + 3 ) w}, {v w + vw },
⎬
⎪
⎪
⎪{v ( u + w ) + u ( v + w ) + ( u + v ) w}, {uw 4 }, {v 5 }, {v 4 w},
⎪
⎪ 3 3
⎪
3 3
3 3
⎪ 3
⎪
3
4
5
⎩{v w}, {vw }, {vw }, {w }
⎭

⎧
u i v j w k , (i == n) || ( j == n) || ( k == n)
⎪
n
n
n
⎪
3
3
3
( u + v ) w + ( u + w) v + ( v + w) u , ( i == j == k )
⎪
⎪
u i v + uv j , (i == j > k )
⎪
u i w + uw j , ( k == i > j )
⎪
v i w + vw j , ( j == k > i )
⎪
⎪
u i v, ( k == 0 ) & &(i > ⎣n / 2 ⎦)
⎪
v j u , ( k == 0 ) & &( j > ⎣n / 2 ⎦)
⎪
⎪
u i w, ( j == 0) & &(i > ⎣n / 2 ⎦)
⎪
=⎨
wk u , ( j == 0) & &(k > ⎣n / 2 ⎦)
⎪
v j w, (i == 0) & &( j > ⎣n / 2 ⎦)
⎪
⎪
w k v, (i == 0) & &(k > ⎣n / 2 ⎦)
⎪ u
v
u
w
v
w
)w + (
)v + (
+
+
+
)u ,
⎪(
⎢n⎥ ⎢n⎥
⎢n⎥ ⎢n⎥
⎪ ⎢n⎥ ⎢n⎥
⎢3⎥ ⎢3⎥
⎢3⎥ ⎢3⎥
⎪ 3⎢⎣ 3 ⎥⎦ 3 ⎢⎣ 3 ⎥⎦
3⎣ ⎦ 3 ⎣ ⎦
3 ⎣ ⎦ 3⎣ ⎦
⎪
⎪(i == 1) || ( j == 1) || ( k == 1)
⎢n ⎥
⎢n⎥
⎢n⎥
⎪
⎢
⎥
⎢
⎥
⎪ u v ⎣ 3 ⎦ u w ⎣ 3 ⎦ v w ⎢⎣ 3 ⎥⎦
+ ( + )v
+ ( + )u
( + )w
, otherwise
⎩⎪ 3 3
3 3
3 3

n = 6:

⎧{u 6 }, {u 5 v}, {u 5 w}, {u 4 v}, v ( u + w ) + u ( v + w ) + ( u + v ) w},⎫
⎪
⎪
9 9
9 9
9 9
⎪
⎪
u w
v w
u v
⎪{u 4 w}, {u 3 v + uv 3 }, {v ( + ) + u ( + ) + ( + ) w},
⎪
9 9
9 9
9 9
⎪
⎪
⎪ u w
⎪
v w
u v
3
3
4
⎪{v ( 9 + 9 ) + u ( 9 + 9 ) + ( 9 + 9 ) w}, {u w + uw }, {uv },
⎪
⎪
⎪
⎪{v ( u + w ) + u ( v + w ) + ( u + v ) w},
⎪
9 9
9 9
⎪ 9 9
⎪
⎪ 2
⎪
2
2
⎪{v (u + w) + u (v + w) + (u + v) w },
⎪
⎪⎪ u w
⎪⎪
v w
u v
4
5
⎨{v ( 9 + 9 ) + u ( 9 + 9 ) + ( 9 + 9 ) w}, {uw }, {uv },
⎬
⎪
⎪
⎪{v ( u + w ) + u ( v + w ) + ( u + v ) w},
⎪
⎪ 9 9
⎪
9 9
9 9
⎪ u w
⎪
v w
u v
⎪{v ( + ) + u ( + ) + ( + ) w},
⎪
9 9
9 9
⎪ 9 9
⎪
⎪ u w
⎪
v w
u v
⎪{v ( 9 + 9 ) + u ( 9 + 9 ) + ( 9 + 9 ) w},
⎪
⎪
⎪
⎪{v ( u + w ) + u ( v + w ) + ( u + v ) w}, {uw 5 }, {v 6 }, {v 5 w},
⎪
9 9
9 9
⎪ 9 9
⎪
⎪{v 4 w}, {v 3 w + vw 3 }, {vw 4 }, {vw 5 }, {w 6 }
⎪
⎪⎩
⎪⎭

Some examples of the DP polynomials are given as:
n = 1:

{{u}, {v}, {w}}

n = 2:

{{(u 2 )}, {2 u v}, {2 u w}, {(v 2 )}, {2 v w}, {(w 2 )}}

n = 3:

⎧{u 3 }, {u 2 v}, {u 2 w}, {uv 2 },
⎫
⎪
⎪
⎨{(u + v) w + v (u + w) + u (v + w)}, ⎬
⎪ 2 3 2
2
3 ⎪
⎩{uw }, {v }, {v w}, {vw }, {w }⎭
n = 4:

⎧{u 4 }, {u 3 v}, {u 3 w}, {u 2 v + uv 2 },
⎫
⎪
⎪
⎪{v ( u + w ) + u ( v + w ) + ( u + v ) w}, {u 2 w + uw 2 },⎪
3 3
3 3
⎪ 3 3
⎪
⎪ 3
⎪
u w
v w
u v
⎨{uv }, {v ( 3 + 3 ) + u ( 3 + 3 ) + ( 3 + 3 ) w},
⎬
⎪
⎪
⎪{v ( u + w ) + u ( v + w ) + ( u + v ) w}, {uw 3 }, {v 4 }, ⎪
⎪ 3 3
⎪
3 3
3 3
⎪ 3
⎪
2
2
3
4
⎩{v w}, {v w + vw }, {vw }, {w }
⎭

247

n = 7:

⎧{u7 }, {u6 v},{u6 w},{u5 v},{v ( u + w ) + u ( v + w ) + ( u + v ) w}, ⎫
⎪
⎪
9 9
9 9
9 9
⎪
⎪
⎪{u5w},{u4 v},{v ( u + w ) + u ( v + w ) + ( u + v ) w},
⎪
9 9
9 9
9 9
⎪
⎪
⎪ u w
⎪
v w
u v
⎪{v ( 9 + 9 ) + u ( 9 + 9 ) + ( 9 + 9 ) w},
⎪
⎪
⎪
⎪{u4w},{uv4 }, {u3v + uv3}, {v2 ( u + w ) + u 2( v + w ) + ( u + v ) w2 },⎪
3 3
3 3
3 3
⎪
⎪
⎪ 3
⎪
u w
v w
u v
3
4
5
⎪{u w + uw }, {uw }, {uv }, {v ( 9 + 9 ) + u ( 9 + 9 ) + ( 9 + 9 ) w}, ⎪
⎪
⎪
⎪{v2 ( u + w ) + u 2( v + w ) + ( u + v ) w2 },
⎪
⎪ 3 3
⎪
3 3
3 3
⎪⎪ u w
⎪⎪
u v 2
2
2 v w
⎨{v ( 3 + 3 ) + u ( 3 + 3 ) + ( 3 + 3 ) w },
⎬
⎪
⎪
⎪{v ( u + w ) + u ( v + w ) + ( u + v ) w},{uw5 }, {uv6 },
⎪
⎪ 9 9
⎪
9 9
9 9
⎪ u w
⎪
v w
u v
⎪{v ( + ) + u ( + ) + ( + ) w},
⎪
9 9
9 9
⎪ 9 9
⎪
⎪ u w
⎪
v w
u v
⎪{v ( 9 + 9 ) + u ( 9 + 9 ) + ( 9 + 9 ) w},
⎪
⎪
⎪
⎪{v3w + vw3}, {v ( u + w ) + u ( v + w ) + ( u + v ) w},
⎪
9 9
9 9
9 9
⎪
⎪
⎪ u w
⎪
v w
u v
6
7
6
5
⎪{v ( 9 + 9 ) + u ( 9 + 9 ) + ( 9 + 9 ) w},{uw }, {v }, {v w},{v w}, ⎪
⎪
⎪
⎪{v4 w},{vw4 }, {vw5 }, {vw6 }, {w7 }
⎪
⎪⎩
⎪⎭
III.

C

RECURSIVE EVALUATION ALGORITHM

The following recursive algorithm for evaluating the
triangular DP surface C (u, v, w) will be introduced in this
section.
Step 1: Let

C

(n)
i, j, k

=C

i, j, k

Step 2: For m = n − 1, n − 2,… , 3. For i + j + k = m:

(m)
i, j, k

⎧ uC ( m + 1) + vC ( m + 1) + wC ( m + 1) , ( i == m ) ||
i , j + 1, k
i, j, k + 1
⎪ i + 1, j , k
⎪ ( j == n ) || ( k == n )
⎪1
1
1
⎪ C i( m+ 1+, 1j), k + C i(,mj ++ 11), k + C i(,mj ,+k1+) 1 , (i ≥ j == k
3
3
3
⎪
⎪ & &Mod[n,2] == 0 & &Mod[j,2] == 0)
⎪ 1 ( m + 1) 1 ( m + 1) 1 ( m + 1)
⎪ 3 C i + 1, j , k + 3 C i , j + 1, k + 3 C i , j , k + 1 , (j ≥ i == k
⎪
⎪ & &Mod[n,2] == 0 & &Mod[k,2] == 0) )
⎪ 1 C ( m + 1) + 1 C ( m + 1) + 1 C ( m + 1) , (k ≥ i == j
⎪ 3 i + 1, j , k 3 i , j + 1, k 3 i , j , k + 1
⎪ & &Mod[n,2] == 0 & &Mod[i,2] == 0)
⎪1
1
1
⎪ C i( m+ 1+, 1j), k + C i(,mj ++ 11), k + C i(,mj ,+k1+) 1 , (i ≥ j == k
3
3
⎪3
≠
≠ 0)
&
&Mod[n,2]
0
&
&Mod[j,2]
⎪
⎪ 1 ( m + 1) 1 ( m + 1) 1 ( m + 1)
⎪ 3 C i + 1, j , k + 3 C i , j + 1, k + 3 C i , j , k + 1 , ( j ≥ i == k
⎪
⎪ & &Mod[n,2] ≠ 0 & &Mod[k,2] ≠ 0 )
⎪ 1 C ( m + 1) + 1 C ( m + 1) + 1 C ( m + 1) , (k ≥ i == j
⎪ 3 i + 1, j , k 3 i , j + 1, k 3 i , j , k + 1
= ⎨
& &Mod[n,2] ≠ 0 & &Mod[i,2] ≠ 0 )
⎪
uC ( m + 1) , (j == k > i)
⎪
i + 1, j , k
⎪
(
vC m + 1) , (k == i > j)
⎪
i , j + 1, k
⎪
wC ( m + 1) , (i == j > i)
⎪
i, j, k + 1
⎪ ( m + 1)
⎪ uC i + 1, j , k , (k > i > j & & Mod[j,2] == 0) || (k < i < j
⎪
⎪ & & Mod[k,2] == 0)
⎪vC ( m + 1) , (i > j > k & & Mod[k,2] == 0) || (i < j < k
⎪ i , j + 1, k
⎪ & & Mod[i,2] == 0)
⎪ wC ( m + 1) , (j > k > i & & Mod[i,2] == 0) || (j < k < i
⎪ i, j, k + 1
⎪ & & Mod[j,2] == 0)
⎪
⎢n⎥
⎪
uC ( m + 1) , i ≥
i
j
k
+
1
,
,
⎢⎣ 2 ⎥⎦
⎪
⎪
⎢n⎥
vC ( m + 1) , j ≥
⎪
i , j + 1, k
⎢⎣ 2 ⎥⎦
⎪
⎢n⎥
wC ( m + 1) , k ≥
⎪
i
j
k
,
,
1
+
⎢⎣ 2 ⎥⎦
⎩

Step 3: Let

C ( u , v , w) = C

IV.

(0)
0 , 0, 0

COMPUTATIONAL COMPLEXITY

The relationship between the degree and the number of
interpolations can be shown as

248

VI.
Degree n

1

2

3

4

5

6

7

DP

1

4

7

11

14

20

24

We can find the number of interpolations as equation
follows:
2
2
⎧ 1
1 n
1 n
1
1
⎪ (36 + 14n − 9⎡ − ⎤ + 9⎡ − ⎤ + 54⎢ (n − 9)⎥ + 18⎢ (n − 9)⎥
⎢⎢2 6 ⎥⎥ ⎢⎢2 6 ⎥⎥
⎢⎣6
⎥⎦ ⎢⎣6
⎥⎦
⎪ 6
⎪
2
⎪ + 9⎢n ⎥ + 27⎢n ⎥ ), Mod[n,3] == 0
⎪ ⎢⎣6 ⎥⎦ ⎢⎣6 ⎥⎦
2
⎪ 1
⎪ (28 + 14n − 9⎡2 − n⎤ + 9⎡2 − n ⎤ + 18⎡1 (n − 1)⎤ + 54⎢1 (n − 10)⎥
⎢⎢6
⎥⎥ ⎢⎣6
⎥⎦
⎢⎢3 6⎥⎥ ⎢⎢3 6 ⎥⎥
⎪ 6
a =⎨
n
2
2
⎪
⎢1 (n − 10)⎥ + 9⎢1 (n − 1)⎥ + 27⎢1 (n − 1)⎥ ), Mod[n,3] == 1
18
+
⎪
⎢⎣6
⎥⎦ ⎢⎣6
⎥⎦ ⎢⎣6
⎥⎦
⎪
2
⎪1 (32 + 14n − 9⎡5 − n ⎤ + 9⎡5 − n ⎤ + 18⎡1 (n − 2)⎤ + 54⎢1 (n − 11)⎥
⎪6
⎢⎢6 6 ⎥⎥ ⎢⎢6 6 ⎥⎥
⎢⎢6
⎥⎥ ⎢⎣6
⎥⎦
⎪
2
2
⎪ ⎢1
⎥ ⎢1
⎥ ⎢1
⎥
⎢n ⎥
⎪+ 18⎢6 (n − 11)⎥ + 9⎢6 (n − 2)⎥ + 27⎢6 (n − 2)⎥ + 18⎢6 ⎥), Mod[n,3] == 2
⎦ ⎣
⎦ ⎣
⎦
⎣⎦
⎩ ⎣

REFERENCES
[1]
[2]

[3]

[4]

[5]

[6]
[7]

Thus, this new triangular DP surface can be generated
within the quadratic computations, or O(n2). It is less
computational time than the triangular Bézier patch which is
O(n3).
V.

[8]

[9]

CONVEX HULL PROPERTY

From u + v + w = 1 and u , v , w ≥ 0
Since
the
triangular
DP
C i , j ,k ( u , v , w )( i + j + k = n ) , satisfy

basis

[10]
[11]

functions

•

Positivity

C i , j ,k ( u , v , w ) > 0

•

Normality

∑
(u , v , w) = 1
C
i + j + k =n i , j ,k

CONCLUSION

In this paper, a new model of triangular DP surfaces that
use real concept of DP is presented with its properties:
convex hull property, quadratic complexity or O(n²). We also
present a recursive algorithm for the evaluation. It is proved
to be more efficient than the algorithm for evaluating
triangular DP surfaces proposed by [3].

[12]
[13]
[14]

It can be concluded that the triangular DP surface,
denoted by C(u, v, w) is a convex combination of its control
points, hence the surface lies in the convex hull of its control
net.

[15]

249

Ball A.A., Consurf Part 1: Introduction of conic lofting title,
Computer Aided Design 7 (1975), pp. 243–249.
Böehm W, Farin G E, Kahmann J. A survey of curve and surface
methods in CAGD. Computer Aided Geometric Design, 1984, 1: 1–
60.
Chen J. and Wang G-J, Construction of triangular DP surface and its
application, Journal of Computational and Applied Mathematics,
219(1), 2008, 312-326.
Dejdumrong N., Efficient Algorithms for Non-Rational and Rational
Bézier Curves, The 5th International Conference on Computer
Graphics, Imaging and Visualization (CGIV'08), Penang, Malaysia,
109-114, 2008.
Delgado J. and J. M. Peña. A Shape Preserving Representation with
an Evaluation Algorithm of Linear Complexity. Computer Aided
Geometric Design, 20(1):1-20, March 2003.
Farin G E. Triangular Bernstein-Bézier patches. Computer Aided
Geometric Design, 1985, 2: 83–127.
Goodman, T.N.T. and Said, H.B., Properties of generalized Ball
curves and surfaces. Computer Aided Design. v23 i8, 1989. 554-560.
Goodman T. N. T., Said H. B., Shape preserving properties of the
generalised Ball basis, Computer Aided Geometric Design, v.8 n.2,
p.115-121, May 1991
Hu S. M., Wang G Z, Jin T G. Properties of two types of generalized
Ball curves.Computer Aided Design, 1996, 28(3): 125–133.
Hu, S.M., Wang, G.J. and Sun, J.G., A Type of triangular Ball surface
and its properties. J. Comput. Sci. Technol. v13 i1, 1998. 63-72.
Jiang S-R and Wang G-J., Conversion and evaluation for two types of
parametric surfaces constructed by NTP bases, Computers and
Mathematics with Applications. 49(2-3):321-329 (2005)
Phien H.N. and Dejdumrong N., Efficient algorithms for Bézier
curves, Computer Aided Geometric Design 17 (2000), pp. 247–250.
Said H.B., Generalized Ball curve and its recursive algorithm, ACM.
Tran. on Graphics 8 (1989), pp. 360–371.
Wang G J. Ball curve of high degree and its geometric properties (in
Chinese).Applied Mathematics: A Journal of Chinese Universities,
1987, 2: 126–140.
Wang G.J. and Cheng M., New algorithms for evaluating parametric
surface, Progress in Natural Science 11 (2001), pp. 142–148.

