Adaptive Parameter Selection for Improved Fuzzy Image Enhancement
H. S. KAM
Engr. Fac., Multimedia University
MALAYSIA
hskam@mmu.edu.my
Abstract
Previously, an effective parameter controlled method for
noise reduction and sharpening of images corrupted by
Gaussian noise was presented [1]. However, the same
parameter value was used for the entire image resulting in
excess smoothing or sharpening of image features. In this
paper, we adapted that method for impulse noise reductio
and propose an efficient means to obtain the parameter
value adaptively. After evaluating pixel local features
through a fuzzy membership, each pixel location is assigne
a different parameter value. Results of the proposed m ethod
are compared with the previous method and with results of
other methods for sharpening of image features.
Experimental results indicate that the proposed method has
effectively assigned the parameter values, yielding superior
performance.

1. Introduction
There are many applications nowadays that require some
sort of image processing such as edge detection ,
segmentation, patter and object recognition, feature
extraction and so on. In the presence of noise,pre-processing
steps such as noise reduction and edge sharpening are often
needed to minimise errors being propagated to these latter
processes.
Noise reduction, however, is not as straightforward as it
seems because it typically also blurs edges which are usually
important to latter processes. To facilitate edge detection and
other similar processes, sharpening of the image is required.
However, sharpening operations would tend to emphasize
the noise present. An example of this occurring can be seen
in using the linear unsharp masking operator [2].
Many
methods have been proposed to address this issue and most
agree that the most effective approaches are nonlinear and
adaptive [3-4].
Thus, the best option for noisy image enhancement is one
that is adaptive to local information and a combination of

W. H. Tan
Engr. Fac., Multimedia University
MALAYSIA
twhaw@mmu.edu.my
both smoothing and sharpening. In this paper, we propose to
improve the performance of Russo’s image enhancement
technique [1] by adaptively obtaining the parameter values
through evaluating local features in the image.
The paper is organized as follows. Section 2 describes the
image enhancement technique combining smoot hing and
sharpening. Section 3 describes how the smoothing and
sharpening outputs are combined. Section 4 describes the
proposed method for adaptively obtaining the parameter,
Section 5 describes the results and finally Section 6 reports
conclusions.

2. Smoothing and Sharpening
Russo’s technique [1] has several slight variations but they
share the same basic idea, which is described as follows:
The image enhancement technique operates on a 3x3
window. Let us consider a digitised image having L gray
levels. Let xi , j be the pixel intensity at location (i, j) show
in Figure 1.

j
i

xi, j

Figure 1. 3x3 window
We first obtain an estimate of noise amplitude. This
amplitude is computed by considering fuzzy relations
between the centre pixel and its neighbours. Let A denote
the set of N = 8 neighbouring pixels. The noise estimate is
calculated thus:

∆xi , j =


Kα 
 ∑ µ R1 (xi , j , xm, n , α ) − ∑ µ R2 (xi , j , xm, n , α )
N  xm . n ∈A
xm . n ∈ A


(1)
where K = 1 and Rq (q = 1,2) represents the class of fuzzy
relations described by the parameterised membe rship
function:

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE


 | u − v − α |  
,0q = 1
MAX 1 −
2α
 


µ Rq (u , v,α ) = 
MAX 1 − | u − v + α | ,0q = 2
 


2α
 


(2)

By varying the value of
(0 < α ≤ L − 1), different
nonlinear behaviour can be obtained. The estimated noise
free value y i , j for the centre pixel at location (i, j) is then
 

increase the enhancement effect. Each pixel goes through a
phase of smoothing, followed by a phase of smoothing and
sharpening. Each phase deals with an appropriate choice of
pixel patterns.
The first operation only performs smoothing. The output
y i , j is computed by processing the pixel intensities in the
pixel pattern A (Figure 3).

j

obtained by subtracting the noise estimate (or correction
term) ∆xi , j from the original pixel luminance xi , j :

y i , j = xi , j − ∆x i , j

xi−1, j −1
xi, j

i

(3)
Figure 2. 4 x 4 window

We can think of sharpening as the opposite of smoothing.
Sharpening is implemented by using the same fuzzy
equations as defined by (1-2). In this case, as stated in [1],
α = α max = L − 1 and K=2. The corresponding output,

xi−1, j −1
xi, j

∆x 'i , j is added to the original pixel luminance xi , j :
y i , j = xi , j + ∆x' i , j

A

(4)

For noisy images, sharpening and smoothing operations
are combined in the same processing system. The former
aims at increasing the intensity differences between the
central pixel and its neighbourhood, while the latter aims at
reducing the increase in noise. Thus we have a two-phase
operation in which smoothing is first performed, followed by
smoothing and sharpening on the filtered pixels.
The role of the parameter
✂

✄

☎

✆

✝

✆

✞

☎

✟

✆

✠

☎

✡

☛

✄

☎

✟

☛

✞

☞

☎

✡

✆

B

Figure 3. Different pixel patterns for multipleoutput processing
Following the method described in Section 2, the output

y i , j is given by the following relationship:
yi, j

✌

=

xi , j

-

∆xi , j

( A)

(5) where

✁

✍

✎

✏

✏

✑

✒

✓

✔

✕

✖

✔

✗

✍

✒

✖

✘

✙

✚

✔

✓

✔

✕

✛

✜

✔

✖

✙

✙

✘

✏

✙

✘

✓

✖

✑

✚

✢

✒

✏

✓

✢

✚

✏

✣

✤

✓

✔

✑

✒

✚

smoothing case permits us to effectively remove noise in the
✥

✦

✧

★

✩

✪

✫

✬

✩

✭

✧

✮

★

✩

✮

✯

✬

✩

✰

✱

✯

✬

✩

✦

✲

✮

✩

✳

✦

✲

✲

✯

✬

✥

✴

★

✲

✵

✵

✶

✮

✳

✪

However, increased noise removal is at the cost of a possible
increased blurring of details. Depending upon the
application and the amount of noise corruption, the optimal
choice is typically a trade-off between noise removal and
detail preservation.
✷

❊

✸

✹

✺

✻

✼

✽

✾

✻

✿

❀

✾

✺

✽

❁

❂

✻

✸

❃

✸

❄

❅

✽

❆

✽

❁

❄

✻

❇

✽

❆

❈

✻

✿

❀

❉

✼

✽

❈

✾

✻

❨

❩

●

❨

❍

❬

■

❭

❏

❪

❫

❑

❴

▲

❵

▼

❛

◆

❜

❖

❝

❋

❭

●

❨



❪

❋

❞

◗

❭

❖

❡

❴

❘

❙

❬

■

❨

❚

❢

❨

❋

❣

❯

❴

◆

❭

❚

❴

❍

❢

❚

❤

❱

✐

◆

❜

❲

■

❲

❳

❭

❡

❨

❭

❭

❡

❴

❨

❬

❬

❢

❜

❬

❢

❪

❨

❭

❴

amount of smoothing and sharpening is applied to each
pixel. This function is described in section 4.

3

( A)


Kαsmooth
 ∑µR1 (xi, j , xm,n,αsmooth) − ∑µR2 (xi, j , xm,n,αsmooth)
N xm.n∈A
xm.n∈A


This y i , j

(
6)
value immediately replaces the old value of

xi , j so it can be used in further processing.

✾

sharper contrast among pixels. For sharpening in [1], the
−1, for all regions.
This decreases the smoothness of uniform areas and
emphasizes the noise that was not completely removed in the
smoothing step.
In this paper we use a fuzzy membership function to
❋

∆xi, j =

Combining Fuzzy Outputs

The second operation performs smoothing and
sharpening. Output y i −1, j −1 is computed by processing pixel
intensities in pixel pattern B (see Figure 3). Note that the
second operation is actually done on the results of the first
operation since the window scans the image from top to
bottom and from left to right. Because the second operation
acts on pixels pre -filtered by the first operation, the
effectiveness of the image enhancement process is increased.
The output y i −1, j −1 is given by the following relations:

(

y i −1, j −1 = x i −1, j −1 ⊕ ∆x i(−B11,)j −1 − ∆xi(−B12, )j −1

As mentioned earlier, filt ring is done in two phases. We
combine the smoothing and sharpening operations to
Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

)

(7)

K α sharp 
 ∑ µ R1 (x i −1, j −1 , x m ,n , α sharp ) −
N
 xm . n ∈ B

µ R 2 (x i −1, j −1 , x m , n , α sharp )
∑
x m . n ∈B

(8

4.1 Detecting Impulse Noise

∆ x i(−B11, )j −1 =

The membership function for the linguistic label “is impulse
noise” is given by:

( 2)

∑ µ (x
R2

xm . n ∈B

i −1, j −1

❦

❧

❧

♠

♥

♦

♣

q

r

s

❥

t

s

✉

♦

✈

s

✇

①

②

③

❧

♠

♦

✉

s

♠

♥

0.9

④

♠

⑤

s

⑥

s

♣

❧

♠

s

⑦

⑧

❧

0.8
0.7
Me 0.6
mb
ers 0.5
hip

r

smooth and for sharpenin
sharp.
From these relations, i t can be observed that the nonlinear
behaviour of the overall system is controlled by the value of
parameter (0 < α ≤ L − 1) . The strength of the smoothing
and sharpening effect depends on
in relations (6), (8) and
(9).
❥

❦

❧

❧

♠

♥

♦

♣

q

④

❥

q

⑦

④

❥

⑦

0.4
0.3

⑦

⑨

❷

➌

➍

➎

❸

➏

❹

➐

❸

➌

❺

➎

❻

➑

❼

➒

❸

➓

❽

➔

❸

❾

→

❾

❿

➔

❻

➌

❼

➎

❸

➣

❾

↔

↕

❻

❺

➙

➀

❻

➛

❸

➜

➁

➂

→

➍

❻

→

➒

➃

❾

→

➑

➐

⑩

❸

❽

➌

❸

➏

0.2

❶

➄

❻

➎

➀

➏

➅

➝

➃

➞

➆

➌

❻

➍

➍

➇

➌

➈

➀

➟

❽

➠

❹

➒

➡

➀

➒

❽

→

➉

❸

➝

➊

➐

➐

➃

❺

➏

0.1

➋

➐

➜

0
→

0

50
100
150
200
Difference between Central Pixel and Median

user according to whether he/she wants more or less
➢

➤

➥

➥

➦

➧

➨

image,
Ó

Ô

Õ

Ö

×

Ø

➩

Ù

➚

➫

➪

➭

➶

Ö

Ú

➹

➯

Ö

➚

➦

➘

Û

➨

➥

➴

➩

Ü

➪

➲

➷

Ú

➷

➳

Ý

➬

Ö

➧

➮

➵

Þ

➮

➢

Û

Û

➪

➹

➭

Ó

➤

Ô

➱

✃

➵

Õ

➚

ß

➸

➪

➨

➷

➢

à

❐

Õ

❒

ß

➭

➱

➺

❮

á

Ú

➢

❒

Ó

➥

➻

Ø

❰

➢

➹

Õ

â

➚

➵

Ý

Ú

➪

➼

à

➽

➶

❒

Õ

Û

➬

ß

➥

❰

➾

➦

Ö

Ï

ã

ä

Ð

å

➧

➵

➮

➵

➩

æ

Ñ

➦

Õ

❒

➨

Ö

Ö

➾

➷

Þ

è

é

ê

ë

ê

ì

í

î

ï

ð

ñ

ð

ò

ó

ô

ó

ñ

Ø

➴

➹

â

➚

â

➶

➪

Ò

ç

õ

We propose to improve the performance of the above
rs according to a
membership function, which detects the local noise pattern.
For this we use the sigmoid function. The sigmoid function
is no stranger to fuzzy processing. Zadeh operator, which is
a non-parametric sigmoid function, has been used as the
fuzzy intensification operator, INT [7]. Parametric form of
sigmoid function proposed in [8] for grey image contrast
intensification was applied to colour image contrast
intensification [9]. This function termed as the new
intensification operator, NINT, has more flexibility in
determining the exact shape of the sigmoid than INT.
We adopt the sigmoid function in [2]. The simplified
form looks like this:
ö

÷

ø

ù

ú

µ

û

ü

=

ý

ø

þ

ÿ

 

1
1 + e − t (d − a )

ÿ

✁

ø

ù

÷

✂

✄

☎

✆

☎

ö

÷

ø

250

Figure 4 “Is Impulse noise”
➵

the noise might not be removed.

4

L −1
"Is Impulse Noise"


, x m , n , α smooth )


♠

)

1

(9
)
Relations (8) and (9) are related to sharpening and

❥

1+ e

K α smooth 
 ∑ µ R1 (x i −1, j −1 , x m ,n , α smooth ) −
N
 xm .n ∈B

∆x i −B1, j −1 =

(

−t median( A )− xm ,n −a

µi(xm,n,t,a)=

)

1

÷

(1)

Parameter ‘t’ controls the steepness and ‘a’ con trols the
position of the curve. Variable ‘d’ is the same value
calculated from the image information, e.g., intensity
differences. By setting the parameters to suitable values, it
can act as a membership function to detect impulse noise.

The difference in intensity between the central pixel and the
median of its neighbours is used to check for impulse noise.
If the difference is large then most likely it is an impulse
noise. High memberships are assigned only to those
differences above ‘a’. ‘t’ is easier to set as we usually want
the turning point to have a strong gradient for higher
selectivity. Values above 20 have shown to work relatively
well. It is trivial to change the sensitivity of this impulse
noise detector through these two parameters.

4.2 Determining the Value for Alpha
As mentioned earlier, larg
✓

✔

✕

✕

✖

✗

✘

✙

✚

✛

✓

✜

✢

✣

✣

✛

✓

✓

✗

✛

✤

✥

✢

✙

✘

✝

✞

✙

✟

✚

✛

✠

✦

✖

✡

✘

☛

✕

✙

☞

✧

✌

★

✍

✢

✎

✤

✏

✢

✩

✢

✑

✤

✌

✤

✡

✢

✝

✪

✒

✖

✕

✫

☞

✩

✞

✕

✝

✤

sharp. Since both
actions of smoothing and sharpening are opposite to each
other, it is to be noted that, in general, α smooth ≠ α sharp .
✓

✔

✕

✕

✖

✗

✘

✙

✚

✛

✓

✫

✛

✙

✪

✩

✕

✤

✓

✗

✛

✤

✥

✢

✙

✘

✙

✚

✛

✓

✫

smooth

When impulse noise is present, more smoothing action
should be assigned. For a particular pixel, impulse noise is
indicated by membership to the function “is impulse noise”,
µi
smooth should be proportional to µi. Thus it has
the following relationship:
α smooth = µ i ∗ (L − 1)
(13)
✬

✭

✮

✯

✰

✯

✱

✲

✰

✯

✳

✴

On the contrary, in the presence of impulse noise,
✵

✶

✷

✸

✹

✺

✻

✼

✻

✽

✵

✶

✾

✿

❀

❁

❂

✺

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

❃

✺

✹

❄

❄

✾

✷

❅

✼

✻

✼

❅

✿

❅

❆

❇

✺

✻

❈

✺

❉

❊

sharp

should be small in the presence of impulse noise and larger
in areas which are relatively noiseless. The resulting
sharp is a decreasing function of µ i :
❋

●

❋

❍

●

■

❏

❑

▲

▼

◆

❖

P

◗

❘

▲

❙

P

❙

◆

❚

 µ1

= min e i , (L − 1)



α sharp

The proposed operator manages to remove noise and
preserve edges, looking almost like the original.
The root-mean-square errors (RMSE) of the edge maps of
the process ed images with respect to the original
uncorrupted image are reported in Table 1.

(14)

6 Conclusion

❯

❑

●

❋

▲

P

❙

▼

●

■

❱

❘

❙

■

▲

❏

■

●

❲

❖

▲

■

●

❳

❘

❙

❨

▲

❋

▲

❘

❘

❑

●

❙

❖

❘

▼

❖

❘

❩

❱

❨

❖

●

❙

◆

❚

❱

❏

follows: α ≤ L − 1 .
smooth
sharp for each pixel based on the presence of impulse
noise, edges are preserved and noisy areas are not further
emphasised by sharpening.
❬

❪

❣

❫

❭

❪

❫

❪

❴

❵

❛

❜

❝

❞

❭

❪

❡

❡

❛

❢

❣

❛

❣

❢

❜

❪

❞

❤

❝

❡

❵

✐

❥

❥

5 Results and Discussion
In our experiment, we used the 256x256 Lena (Figure 5 (a))
and Testpat (Figure 6 (a)) images. The images were digitized
into 256 gray levels. We adopted 3x3 sample windows. Fo
addition of noise, the source image was corrupted by
additive impulse noise (salt and pepper noise) with
probability p. The pixels take a positive (salt) or negative
(pepper) with an equal probability (p/2) and remain noiseless
with (1-p) probability. We used p = 0.1 noise density for the
noisy images ( Figure 5(b) and Figure 6(b)). The noise matrix
was generated using a MATL AB subroutine. We set K = 1
for our proposed method. For these experiments, sigmoid
parameters a and t were set to 50 and 20 respectively.
The performance of the proposed method and other
techniques can be analysed by assessing the images below.
We first examine t he Lena images. The result of the 3x3
median filter can be seen in Figure 5(c). To mimic the
operation of the proposed operator, which is to smooth then
sharpen, this image is further sharpened by linear unsharp
masking operator [2] as shown in Figure 5 (e). The operator
noticeably adds noise to the smooth areas in the course of
sharpening. The result yielded by the Russo operator with
sharp fixed at Lsmooth =255 for maximum
smoothing of impulse noise is shown in Figure 5(d). Noise
has been attenuated but still remains quite noticeable.
Blurring also occurs. However, it probably cannot be
directly compared because his method was designed for
Gaussian noise. Finally, the result given by the proposed
e 5(e). A big
improvement from the previous results can be seen. Most of
the impulse noise has been removed and the edges are wel
preserved. The image is almost as noiseless as the original,
with sharper details.
The testpat images further reinforce these conclusions.
This set is meant to show that the proposed method
introduces less distortion compared to other methods. As
expected, the median manages to remove noise very wel
(Figure 6(c)). However the boundaries between the black
and white bands are so mewhat blurred and crooked
Applying unsharp masking makes it worse. (Figure 6(e)).
❥

s

t

❦

s

✉

✈

✇

①

②

✈

③

④

✇

④

⑤

⑥

❧

⑦

⑧

♠

♥

✇

♥

⑨

♦

⑨

♣

⑩

q

⑥

r

❶

④

✇

④

❷

✇

⑤

③

This paper presents an approach for image enhancement, in
the presence of impulse noise, by smoothing and sharpening.
The proposed approach utilises Russo’s[ 1] operator
❹

❺

❻

❼

❽

❻

❹

❺

❾

❿

➀

❿

➁

❿

➂

➃

➄

➃

➁

➅

➆

➇

➃

➈

➃

❻

➃

❽

❼

➀

➃

➈

❿

➉

❿

➊

➄

❼

➄

➋

❺

➃

➅

according to a membership function “is impulse noise”.
Since the approach detects the level of impulse noise, it is
able to adaptively determine an optimum value for the
parameter, which affects the whole filtering process
Experimental results have shown that the proposed approach
performs better than other techniques in enhancing images
corrupted with impulse noise. Presently, work is in progress
to deal with other types of noise.
Table 1 RMSE Values
Type of Image
Noisy
Median
Median, then unshar
masking
Russo [1]
Proposed Method

Lena
31.2621
7.6802
19.5468

Testpat
45.6765
11.1631
32.5169

21.3399
10.5531

30.1274
17.1814

References
[1]

[2]
[3]
[4]
[5]

❸

[6]

[7]

[8]

[9]

F. Russo, “An Image Enhancement Technique Combining
Sharpening and Noise Reduction”, IEEE Trans. Instrum.
Meas., Vol. 51, Aug. 2002, pp. 824-828,
A. K. Jain, Fundamentals of Digital Image Processing.
Englewood Cliffs, NJ: Prentice Hall, 1989.
I. Pitas and A. N. Venetsanopoulos, Nonlinear digital filters
Principles and Applications, Kluwer, 1990.
S. K. Mitra and G. Sicuranza (Eds.), Nonlinear Image
Processing, Academic Press, 2000.
J. F. Canny, “A computational approach to edge detection”,
IEEE Trans. Pattern Analysis and Mach. Int., PAMI8(6):679-98, Nov 1986.
Y. S. Choi and R. Krishnapuram, “A Robust Approach to
Image Enhancement Based on Fuzzy Logic”, IEEE Trans.
Image Proc., vol. 6, pp. 808-825, June 1997.
L.A. Zadeh, “Outline of a new approach to the analysis of
complex systems and decision processes”, IEEE Trans. Sys.
Man and Cyber, SMC-3: 29-44, 1973
M. Hanmandlu, S.N. Tandon,, and A.H. Mir, “A new fuzzy
Proc. 34th Rocky
logic based image enhancement”,
Mountain Symposium on bioengineering, Dayton, Ohio,
USA, April 11-13, 1997.
M. Hanmandlu, D. Jha, and R. Sharma, “Color image
Pattern
enhancement using fuzzy
intensification”,
Recognition Letters, Vol. 24(1-3): 81-87, 2003.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

(a)

(b)

(c)

(d)

(e)

(f)

Figure 5 : (a) Original image, (b) noisy image, (c) median filtered image, (d) result obtained using
Russo’s technique with fixed •=255, (e) result yielded by the unsharp masking operator after median
filtering, (f)result obtained using Russo’s technique with our proposed adaptive • selection method.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

(a)

(b)

(c)

(d)

(e)

(f)

Figure 6 : (a) Original image, (b) noisy image, (c) median filtered image, (d) result obtained using
Russo’s technique with fixed •=255, (e) result yielded by the unsharp masking operator after median
filtering, (f) result with our proposed adaptive • selection method

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

