G1 Scattered Data Interpolation with Minimized Sum of Squares of Principal
Curvatures
A. Saaban1, A.R. M. Piah2, A.A. Majid3, L. H. T. Chang4
Faculty of Quantitative Sciences, Universiti Utara Malaysia, 06010 Sintok, Kedah, MALAYSIA.
2,3
School of Mathematical Sciences, Universiti Sains Malaysia,
11800 USM Pulau Pinang, MALAYSIA.
4
Mathematics Unit,
Northern Malaysia University College of Engineering, 01007 Kangar, Perlis, MALAYSIA.
azizan.s@uum.edu.my1, arahni@cs.usm.my2, majid@cs.usm.my3, lawrence@kukum.edu.my4

1

Abstract
One of the main focus of scattered data interpolation
is fitting a smooth surface to a set of non-uniformly
distributed data points which extends to all positions in a
prescribed domain. In this paper, given a set of scattered
data V ={(xi ,yi) , i=1,...,n}  R2 over a polygonal domain
and a corresponding set of real numbers ^z i `i

n
1,

we wish

to construct a surface S which has continuous varying
tangent plane everywhere (G1) such that S(xi,yi) = zi.
Specifically, the polynomial being considered belong to
G1 quartic Bézier functions over a triangulated domain.
In order to construct the surface, we need to construct the
triangular mesh spanning over the unorganized set of
points, V which will then have to be covered with Bézier
patches with coefficients satisfying the G1 continuity
between patches and the minimized sum of squares of
principal curvatures. Examples are also presented to
show the effectiveness of our proposed method.

1. Introduction
Scattered data interpolation refers to the problem of
fitting smooth surfaces through a non-uniform
distribution of data points. In practice, this subject is very
important in various sciences and engineering where data
are often measured or generated at sparse and irregular
positions. The goal of interpolation is to construct
underlying functions which may be evaluated at certain
set of positions.
There are 3 principal sources of scattered data [10]:
measured value of physical quantities (such as in geology
and meteorology), experimental results (in sciences and
engineering) and computational values (in various
applications of computer graphics and vision with
functional data).

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

For the purpose of this paper, we will only focus on
the scattered data from functions to be used by our
proposed method. We will construct a G1 continuous
surface which interpolates these given functional data.
The geometric continuity needed between adjacent
parametric patches especially in the case of Bézier
patches has been given attention due to the free shape
parameters which it provides and can be used to construct
and modify very complicated geometric objects. In
practice, geometric continuity avoids the usual
dependence on the parameterisation of the constructed
patches. The conditions required for patches to be Gncontinuous and subsequent construction of the
corresponding Gn-continuous surfaces are amongst
important topics in Computer Aided Geometric Design
[17].
Although several papers have dealt with Gn
interpolating surfaces (e.g. see [5] and [12]), but very few
touched on the scattered data interpolation. We thus
propose a method to construct an interpolating G1 surface
using a set of scattered data in R3 as well as provide
examples to test the ability of this proposed scheme.
If we simply use G1 continuity conditions, the
resulting surfaces might have an undesired undulation or
over flatness. To overcome this problem, several global
optimal fairness criteria of the constructed surfaces have
been introduced in various literatures. Amongst the
earliest surface fairing aimed at minimizing fairness
criteria as an anology to the one for curve was based on
the strained energy in a thin elastic plate which is related
to the total curvature in a surface. Thus, the resulting
surface can then be approximated using its geometric and
curvature related properties ([4],[14]).
In this paper, we consider the method of minimized
sum of squares of principle curvatures ([6], [9]). The
objective function can then be approximated using a
corresponding quadratic form. The extremum of the

integral function is then calculated with respect to the G1
continuity conditions along the shared edges as a
constrained function.
Quadratic functions can generate good surface fit to
the data points. The range of applications can be extended
by using iterative procedures which will successively
improve the parameter values assigned to these data
points.
We have chosen quartic Bézier triangular patches
since degree 4 is necessary and sufficient to satisfy the
patch boundary interpolation constraints while at the same
time allows some control points in the interior of the
patch to have certain freedom to be used for surface
fairing.
This paper is organized as follows: Relevant
background materials including the definition of quartic
Bézier form of triangular patches and G1 continuity
conditions between two adjacent patches at vertices of
triangle meshes are given in section 2; a method to
construct surfaces using the minimized sum of squares of
principle curvature is covered in section 3; examples are
given in section 4 and finally in section 5, the concluding
remarks will be given.

2. Background
The nth degree Bernstein polynomials over a triangle
are defined by
n! i j k
n
(u , v, w)
(1)
Bijk
uv w
i! j! k!
where u,v,w are barycentric coordinates such that u + v +
w =1 and i+j+k = n.
The nth degree Bézier triangular patch is defined by
n
P(u,v,w) = ¦ bijk Bijk
(u, v, w)
(2)
i j k n

F(x,y)= ax2 + bxy + cy2 + dx + ey + f
(5)
where a, b, c, d, e and f are unknown coefficients.
Let vertex P0 of the triangular mesh surrounded by
vertices {P1, P2, . . . ,Pk} and the height of the vertices
{P0, P1, . . . ,Pk} be represented by {z0, z1, . . . ,zk}
respectively. We turn our attention to the vertex
represented by (1,0,0) which corresponds to P0(x0,y0). We
can derive the first order partial derivative at P0 as
Fx(x0,y0) = 2ax0 + by0 + d and
Fy = bx0 + 2cy0 + e
(6)
If we substitute the height of vertices z0, z1, . . ., zk
into (5), we obtain a linear system
Uc = z

(7)

where
ª x0 2
«
« x1 2
«
.
U «
«.
«
«.
« 2
¬ xk
ªa º
«b »
« »
«c »
c « »
«d »
«e »
« »
«¬ f »¼

x0 y 0 y 0 2 x0 y 0 1 º
»
x1 y1 y1 2 x1 y1 1 »
»
.
.
. . . »
,
.
.
. . . »
»
.
.
. . . »
»
xk y k yk 2 xk y k 1 ¼
ªz0 º
« »
« z1 »
«. »
and z « » .
«. »
«. »
« »
«¬ z k »¼

where bijk are called Bézier ordinates of P. We will use
quartic Bézier triangular patches (with n = 4). Each patch
is defined by a control net of 15 vertices as shown in
Figure 1.
With bijk as the height of a control point, a quartic
Bézier triangular patch can be represented by
4
S(u,v,w) = ¦ Bijk Bijk
(u , v, w)
(3)

Matrix U in (7) is always in the form of rank deficient
matrix (that is, rank of U is less than number of
unknowns) and we can solve the systems by using the
simple linear algebra [ 7] using pseudo inverse of U in the
least square method.

where Bijk = (i/4,j/4,k/4,bijk).
Let T be a triangle with vertices V1, V2, V3 and
barycentric coordinates u, v and w such that any point V
on T can be expressed as
V = uV1 + vV2 + wV3 ,
(4)
where u + v + w = 1 and u, v, w  0.
S interpolates the Bézier ordinates B400, B040 and B004
at the vertices V1, V2, V3 of T respectively. The normal at
each vertex is estimated using the surrounding triangles
with a quadratic approximation function,

Theorem 1: Consider the (m x n) system Ax=b
(a) The associated system ATAx = ATb is
always consistent
(b) The least-squares solutions of Ax=b are
precisely the solutions of ATAx = ATb
(c) The least square solution is unique if and
only if rank A(4)
= n.
Proof of the Theorem 1 can be found in [7]. Thus,
the values of a, b, c, d, e and f can be obtained, using the
least square method,
C = (UTU)-1UTz,
(8)

i j k 4

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

and the values of Fx and Fy at vertex P0 can then be
calculated.
B031
B040

B121
B130
B112
B004

B103 B202

(0,0,1)

B211

B220

(0,1,0)

B310

B301

(12)

or
1
(13)
De S (1,0,0)  B400
4 12
1
B301 = De13 S (1,0,0)  B400 .
(14)
4
Similarly, B130, B031, B103 and B013 can be determined
from B040 and B004 respectively, with 6 more control
points left to be determined.

2.1 G1 continuity between adjacent patches
B400

(1,0,0)
Figure 1. Control net of quartic Bézier triangular
patch
Let V, V1, V2 and V3 be located as shown in Figure 2.
The vertices V1 ,V2 and V3 correspond to the barycentric
coordinates (1,0,0), (0,1,0) and (0,0,1) respectively.

V3(xc, yc)

V(x, y)

V1(xa, ya)

4( B400  B301 ) .

B310 =

B022
B013

De13 S (1,0,0)

V2(xb, yb)

Figure 2. Vertices of a triangle element

Two patches with a common boundary curve satisfy
G1 continuity if both have continuously varying tangent
plane along the common curve. Figure 3 shows an
example of Bézier control points of two adjacent quartic
Bézier triangular patches. H0 and H4 are the given vertices
of the patches. G0, F0, H1, G3, H3 and F3 are obtained from
the patch gradients while G1, F1, H2, G2 and F2 are points
to be determined.
We only have to consider {Hi, i = 0, 1,…4} as the
(8i,Fi, i= 0, 1…3} which
common boundary (7)
curve and {G
consist of the control points in each patch. Details of
derivation with regard to the G1 conditions can be found
in [3].
If the heights of {Gi}, {Hi}, {Fi} are denoted by {gi},
{hi} and {fi} respectively, the conditions satisfying G1
continuity between the two adjacent patches can be
written as
Įg0 + (1-Į)f0 = ȕh0 + (1-ȕ)h1
(15)
Įg1 + (1-Į)f1 = ȕh1 + (1-ȕ)h2
(16)
Įg2 + (1-Į)f2 = ȕh2 + (1-ȕ)h3
(17)
Įg3 + (1-Į)f3 = ȕh3 + (1-ȕ)h4
(18)
where Į and ȕ are constants.
Since the values of g0, f0, h0, h1, g3, h3 , h4 and f3
are already known, Į and ȕ can thus be determined from
(15) and (18). (16) and (17) can also be written as
A1x1 =b-.A2x2
(19)
where
0 º
is a 2x2 scalar matrix, x1
D »¼
1D
0
E 1
unknown vector, A2 ª«
0
1
D
E
¬
A1

Let e12 = (-1,1,0) and e13= (-1,0,1) represent the
direction of edges V1V2 and V1V3 respectively. The
directional derivatives along e12 and e13 at V1 are
wx wx
wy wy
De12 S (1,0,0) (  ) Fx ( x a )  (  ) Fy ( x a )
wv wu
wv wu
= (xb- xa)Fx (xa) + (yb – ya )Fy (xa)
(9)
wx wx
wy wy
 ) Fx ( x a )  (  ) Fy ( x a )
ww wu
ww wu
= (xc - xa)Fx (xa) + (yc– ya )Fy (xa)
(10)
Thus, we have
(11)
De12 S (1,0,0) 4( B400  B310 )
De13 S (1,0,0) (

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

ªD
«0
¬

matrix, x2

b

ª f1
«
« f2
«¬h2

ª g1 º
« » is the
¬ g2 ¼
º
» is a 2 x3
¼

º
» is a vector of free parameters and
»
»¼

ª E h1
º
«
» is a constant vector.
E

(
1
)
h
2¼
¬

Since A1 is a non-singular matrix for Į  0, we can
always solve (19) for x1, that is,
(20)
x 1 A 11(b  A2 x2 )

If x2 can be determined adequately, all the control
points Bijk in Bézier control net will be known for the
surface to be G1 continuous.

Let I(St(u,v,w)) be defined in a triangle element Dt,
such that we can write (22) as
m

¦ I (S

I(S(x,y)) =
G3

m

=

H1

G0

H4

H3

H2

F2

F3

¦ ³³

t

t 2
t 2
( S ) 2  2( S xy
)  ( S yy
) dx dy

(24)

xx

Using the parametric transformation from (x,y) to the
local coordinates (u,v), we can write the double integral of
second order partial derivatives of S with respect to u and
t
t
t
v, S uu
, S uv
and S vv
and thus (24) can be expressed as
I(S(x,y))=

F0
where

1

1 v

0

0

¦³ ³
t 1

Figure 3. Control points of adjacent quartic
Bézier triangular patches

t

D

t 1

m

F1
H0

(u, v, w))

t 1

G2
G1

t

w ( x, y )
dudv
w (u , v)

(25)

wx wy wx wy

and
wu wv wv wu

w ( x, y )
w (u, v)

G t (u, v)

G t (u , v)

2

t
t
t
t
t
t
c1t S uu
 c 2t S uu
S uv
 c3t S uu
S vv
 c 4t S uv

2

2

3. Surface with minimized sum of squares of
principle curvartures
A surface fairing objective will be the integral of the
sum of squares of principle curvartures
I(S(x,y)) =

³³D k1

2

 k 2 2 dxdy

(21)

where k1 and k2 are the principle curvartures and D
represents the surface to be constructed. (21) is not widely
used to fair composite surfaces with many free
parameters, perhaps because of the complexity of its
parametric form and computational difficulties. A much
more popular method [19] is the linearized form of (21)
which uses second-order parametric derivatives in place
of the principal curvartures and can be written as,
I(S(x,y)) =

³³D S xx

2

 2 S xy 2  S yy 2 dxdy .

(22)

Now, our aim is then to find the function S(x,y)
which will minimize the integral I(S). Assume that the
whole surface can be constructed by a collection of Bézier
triangular patches with each patch defined as in (3). We
can represent each patch as a convex combination of 15
control points,
15

St(u,v,w) =

¦ Bkt I k (u, v, w) ,

(23)

k 1

where t =1,2…m (m is the number of triangles in a mesh),
t
t
t
t
t
t
{B1t , B2t , B3t , . . ., B15
} {B 400
, B310
, B130
,B040
, B301
,
t
t
t
t
t
t
t
t
t
t
}
B031
, B103
, B013
, B004
, B 220
, B 211
, B121
, B 202
, B112
, B022

{I1 , I 2 , . . ., I15 } = {u4, 4u3v, 4uv3, v4, 4u3w, 4v3w, 4uw3,
4vw3, w4, 6u2v2, 12u2vw, 12uv2w, 6u2w2 ,12uvw2, 6v2w2 }.

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

t
t
t
,
 c5t S uv
S vv
 c 6t S vv

with ({c tj }, j 1, 2, ..., 6

as constants).

form, the functional I(St(u,v,w)) =
1 1 v t
w ( x, y )
³0 ³0 G (u, v) w(u, v) dudv can be represented as

In

matrix

B t Qt ( B t ) T where Bt is a (1 x 15) matrix represented by
t
[ B1t B 2t B3t . . . B15
] and Qt is a (15 x 15) matrix with its
(i,j) entry defined as
[Qt ] ij c1t (I i ) uu (I j ) uu  c 2t (I i ) uu (I j ) uv

 c 3t (I i ) uu (I j ) vv  c 4t (I i ) uv (I j ) uv
 c 5t (I i ) uv (I j ) vv  c 6t (I i ) vv (I j ) vv ,
Thus, (25) can be written as,
M

I(S(x,y))=

¦ B t Qt ( B t )T

.

(26)

t 1

The right hand side of (26) is in quadratic form with
6 Bézier coefficients unknown. We can also rewrite
I(S(x,y)) in terms of a matrix-vector representation
I(S(x,y))= zT Mz + ez + c,
(27)
where M is a real (n x n) symmetric matrix, e is a (1x n)
row vector, z is a (n x 1) column vector representing the
unknown Bézier points for the entire triangular mesh and
c as a real constant.
In order to find a function S(x,y) which will
minimize I(S(x,y)) lead us to an optimisation problem of
zT Mz + ez + c subject to the G1 continuity constraints
Ax = b.
To solve for the required values of z, we can use an
optimization toolbox in MATLAB software and obtain

the coefficients of St(u,v,w) in (23). The interpolated G1
surface with the minimized sum of squares of principle
curvartures optimized can then be constructed.

4. Examples
To test the accuracy of our method, we choose 36
data points from the 3 well-known functions in [15];
F1(x,y) = 0.75exp(-((9x-2)2 + (9y-2)2)/4
+ 0.75exp(-(9x+1)2/49 – (9y+1)/10)
+ 0.50exp(-((9x-7)2 + (9y-3)2)/4)
-0.20exp(-(9x-4)2 – (9y-7)2 ,
(x,y) H [0,1.2]x[0,1.2]
F2(x,y)= (1.25 +cos(5.4y))/(6+6(3x-1)2,
(x,y) H [0,1]x[0,1]
F3(x,y)=exp(-20.25((x-0.5)2+(y-0.5)2)), (x,y) H [0,1]x[0,1]
For each data set, the two-dimensional region (x,y)
is divided into triangular elements using Delaunay
triangulation. For each patch, the corresponding surface
was constructed using MATLAB 7 sofware. The measure
of error norm [15] was taken to be SSE/SSM, where SSE
is the sum of squared errors (deviation from test function
values), and SSM is the sum of squared of deviation ot
the 1296 test function values (36x36 grid points) from
their mean. We also compute the coefficient of
determination r2=1-SSE/SSM as shown in Table 1.
According to [15], the values of r2 show that our method
is a very good fit for the functions, F1 and F2 and a good
fit for F3. These results are shown in Figures 4, 5 and 6
respectively.

(a)

(b)
Figure 4. (a) Test function F1 (b) Proposed
method

5. Conclusions
This paper describes an approach to construct smooth
interpolating surfaces using a combining method of the
minimized sum of squares of principle curvarture with the
G1 continuity conditions between adjacent patches. The
examples show that the surface obtained are fairer
compared with surfaces which are constructed based on
just G1 continuity conditions. We will focus on G2
continuity conditions in future research.

(a)

Table 1. Error norms and coefficient of
determination ,r2
Fcn
F1
F2
F3

Error norms
0.007873
0.002942
0.01681

r2
0.992127
0.997058
0.98318
(b)
Figure 5. (a) Test function F2 (b) Proposed
method

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

9.

10.

11.

12.

(a)

13.

14.

15.

16.

(b)
Figure 6. (a) Test function F3 (b) Proposed
method

References
1.
2.
3.

4.

5.

6.

7.

8.

Amidror, I. Scattered Data Interpolation Methods for
Electronic Imaging System : a Survey. Journal of
Electronic Imaging 11(2), 157–176,2002
Farin, G. Triangular Bernstein-Bezier patches . Computer
Aided Geometric Design 3(2), 83–128, 1986.
Farin, G. Curves and Surfaces for Computer Aided
Geometric Design-A Practical Guide . Academic Press,
San Diego, 1992
Hagen, H. and Schulze, G. Automatic Smoothing with
Geometric Surface Patches. Computer Aided Geometric
Design 4(3), 231–236, 1987.
Hahmann, S., and Bonneau, G. Triangular G1 Interpolation
by 4-splitting Domain Triangles.
http://wwwlmc.imag.fr/lmcmga/Stefanie.Hahmann
/PUBLICATIONS/HB00.pdf download on 08/03/04 ,1999.
Halstead, M., Kass, M., DeRose,T.D. Efficient Fair
Interpolation
using
Catmull-Clark
Surfaces.
SIGGRAPH’93 Conference Proceedings, New York, 35–
44, 1993.
Johnson, L. W., Riess, R.D. and Arnold, J.T.. Introduction
to Linear Algebra 5th. Edition. Pearson Education,
Inc.,New York,2002.
Jungi, H.B., and Kim K. A New Parameterisation Method
for NURBS Surface Interpolation. Int J Adv Manuf
Technol 16, 784–790, 2000.

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

17.

18.

19.

Kobbelt, L. Discrete Fairing. Proceedings of Seventh IMA
Conference on the Mathematics of Surfaces, 101–
131,1996.
Lee, S., Wolberg G., and Shin, S.Y. Scattered Data
Interpolation with Multilevel B-splines. IEEE Transactions
on Visualization and Computer Graphics, 3(3), 228–
244,1997.
Lin, J., and Huang, Z. (1999). Adaptive scattered data
interpolation with multilevel nonuniform B-splines. Proc.
Eurographics 1999.
Loop, C. Smooth Splines Surfaces over Irregular Meshes.
Computer Aided Geometric Design 11(3), 303–330, 1994.
Murotani, K., and Sugihara, K. G1 Surface Interpolation for
Irregularly Located Data. Geometric Modeling and
Processing, 187–196,2002.
Nowacki, H. and Reese, D. Design and Fairing of Ship
Surfaces. Barnhill, R.E. and Boehm, W., eds., Surfaces in
Computer Aided Geometric Design, North Holland Publ.
Co., pp. 25-33,1983.
Renka, R. J. and Brown, R..Algorithm 792: Accuracy Tests
of ACM Algorithms for Interpolation of Scattered Data in
the Plane .ACM Transaction on Mathematical Software,
Vol. 25 (1), pp. 78-94, 1999.
Saraga, R,F. A Variational Method to Model G1 Surfaces
over Triangular Meshes of Arbitrary Topology in R3. ACM
Transactions on Graphics, 19(4), 279–301, 2000.
Ye, X., Liang, Y. and Nowacki, H. Geometric Continuity
Between Adjacent Bézier Patches and Their Constructions.
Computer Aided Geometric Design 13(6), 521–548, 1996.
Walton, D.J. and Meek, D.S. A triangular G1 Patch from
Boundary Curves. Computer Aided Design 28(2), 113–123,
1996.
Welch, W.C.. Serious Putty: Topological Design for
Variational Curves and Surfaces. PhD thesis, Carniege
Mellon University, 1996.

