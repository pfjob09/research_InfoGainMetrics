An Algorithm for JPEG Compressing
with Chaotic Encrypting
Huang Yuanshi, Xu Rongcong, Lin Weiqiang
College of Mathematics and Computer Science
Fuzhou University, Fujian 350002, China
Abstract
In the papel: we brzng forwurd an zmage
enctyptzon algorzthm durzng the process of
JPEG compresszon Accordzng to the chuotzc
theory of dynamrc systems and modern
cr,vptogruphv, we solved the followzng technzque
Fzrst, how to generate chaotzc sequence havzng
good randomness accordng to the characterrstrc
that Logzstzc chuotrc systems are extremely
sensztzve to the znztzal condrfron? Secondly, how
to create a serres ofone-way hash bezng as block
ke-v from the chaotrc sequences? Thrrdly, dorzng
the procesr of JPEG compresszon codzng, how to
rmplement the rmage compressron and
enccvpt~onby uszng the block crpher7 In the
ana[vszs of the algorrthm, we dr~cuss the
randomness o f the chaotzc sequence zn detazl We
alro analyze the securzty and antz-collrs~onof the
chuotzc hash sequence by reverul vurrunt
methods The results rndrcate that our afgonthm
completelv sutzsfied the securzty requrrement zn
the rense of cryptographv

1. lntroduction
In this paper, we present a rapid
cryptographic algorithm for image files in
process of JPEG compression coding. Our
algorithm is divided to the following three steps.
At first, we apply
chaotic system to
.. . logistic
generate a sequence that is called a chaotic
sequence,
which
possesses
approved
pseudo-randomness.
Secondly, using the chaotic sequence
generated as above, we construct a sequence of
one-way hash. We call it a chaotic hash
sequence.
Last, we use the chaotic sequence as block
cipher key to encrypt the Huffman code table in
the entropy code stage during the process of
JPEG compression coding. Consequently, we

implement the joint of compression and
encryption. It is high efficient and expeditious
because we needn't to encrypt whole image file.
The decryption process is the inverse of the
encryption process.
In analysis of the algorithm, we discuss the
randomness of the chaotic sequence in detail.
We also discuss security and anticollision of the
chaotic hash sequence by several different
methods. The results indicate that our algorithm
completely satisfied the security requirement in
the sense of cryptography.
Our algorithm for the image compression
and encryption possesses following advantages.
First, the joint of compression and encryption
enhance the strength of cipher. Second, we only
encrypt the Huffman code table, so that the
encryption efficiency increases greatly. Third,
encryption is performed in the stage of Huffman
coding and will not influence the effect of
image's compression.
From above, we could find that our
algorithm for compression and encryption of
JPEG images possessed the good significance of
theory and practical applied prospects.

2. Design of the algorithm
2.1 Generation of the Logistic Chaotic
Sequence
Our target is to create the pseudorandom
numbers which uniform distribute in the interval
of
The pseudorandom numbers generated by
computer must possess the following property:
(1) Hoinogeneity of distribution, that is,
the numbers should be the u(0,l)

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

distribution in so far as possible;
(2) Statistical Independence;
(3) Sufficient long period.
One of the strongest pseudorandom number
generators is to utilize the characteristic that
Logistic chaotic systems are extremely sensitive
to its initial value and parameters. The key is
how to select the initial value and parameters to
make sure that the chaotic sequence generated
by it has good randomness.
Consider the Logistic system

where x, E [-I, I], and p ( O , 2). System (2.1)
has the Ly~zpztnovexponent
n-l

n -1

h= lim x l n f i ( . x i ) = l i m x l n l - 2 y x i l .
123m

=o

,

1

n --)m

r=O

Only when the suitable xo and y be
choused to satisfy A >0, then that system is
chaotic.
Nowadays, the pseudorandom number generator
base on Logistic chaotic system most choose
E
I]
parameter y =2.00000, initial value X ~ [-1,
When design the chaotic sequence
generator, according to the characteristic of
double-period bifurcation for Logistic systems,

we extend the range of the parameter to ~ E ( K > ,
2.01, where ~=1.40115518909205.As far as the
value of the parameter y in this range, the
period of the sequence generate from the
Logistic system is infinite long. So, Let's choose
any initial value xo€[-l, I] and parameter
t(€(pm,2.0]. After that, for strict consider, we
must calculate Lyapzrnov exponent R . Only if /i
rO, we can make sure that the system are
chaotic.
Then, by iterating said system, we can get a
chaotic sequence {xi X, , ,E [-I, 11. Last, using
the map
11
we can got the chaotic sequence {zi,, I Z~,+~E-[O,
just as what we want.
After randomness analysis the chaotic
sequences which generate by the variable initial
value and parameter, we may obtain the range of
initial value xu and parameter p wh~chcan
generate the best chaotic sequence. For example,
we chose the xo=0.7, p=1.9989 here. Calculate
the Lyapunov exponent h , we got A =0.680246,
it absolutely meet the request. The algorithm
flow chart is as Fig. 1.

output u, I I
Fig. I . The algorithm flow chart
sequence from the chaotic sequence.
As we know, when parameter p = 1.9989
2.2 Constitution of the chaotic hash
and
initial
value xo=0.7, Logistic system (2.1) is
sequence
chaotic. Fig. 2 is when xo=0.7, p = 1.9989,
1.99891, 1.99892, the orbits of system (2.1) after
C. E. Shannon brings forward two basic
40
times iteration. From the figure, we can find
technologies to concealment the redundancy in
when parameter p of system (2.1) offset
that
plaintext messages: confusion and diffusion.
0.00001,
if times of iteration less than 20, the
Confusion uses to conceal the relation between
orbits
don't
have greatly difference. It means that
plaintext and ciphertext. It can beat the attempt
system
(2.1)
does not entry the chaos status.
for trying to get the redundancy and the pattern
However,
when
the iteration over 20 times, the
of statistics via study ciphertext. Diffusion
difference is distinct. Therefore, in the process of
distributes the redundancy of the plaintext
constructing chaotic hash sequence, we will
among ciphertext, so that the Crypt-analyzers are
ignore those results which get from the first 20
more difficult to search this redundancy.
times iteration.
Based on the above idea, we construct the
chaotic hash sequence as our block cipher key

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

Fig. 2. orbits of system (2.1) when xo= 0.7
It is well known that the process of JPEG
The algorithm is described as following.
coinpression coding mainly consists of DCT
Based on the results in section 2.1, we can
transformation, quantification and variant length
choose a suitable initial value x,and parameter
code valuation, here, variant length code
g as the input of our block cipher generator,
valuation involve run coding and Huffman
then perform iterate for system (2.1). x, which
coding. After run coding, it need use Huffman
got at the end of each iteration should be input as
coding to perform the entropy coding for the
the Initial value of the next iteration, and
purpose to get high compression ratio. In order
parameter g is invariant. At first, we perform the
iteration 20 times. Then each 20 times iteration
to complete Huffnan coding, it need use 4
different Huffman coding tables, which
will be named as I round. It should generate a
correspond the sub block data of a DC
floating number with 64 bits. Thus, by passing 6
ro~lndswe can get 6 floating numbers with 64
coefficient, the sub block data of 63 AC
coefficients, brightness data and chrominance
bits. Denote it by Hashi (i=l, ..., 6), where the
data. If we perform encryption before Huffman
precision of Hash, is 64 bits. Perform
Hashi
with
coding, it must change the effect of JPEG
transformation
for
each
compression. Therefore, we choose the stage of
corresponding one-way mapping g,. Let Hi
(i=l ...6) denote the results of above
Huffman coding to perform encrypt.
triansformation, where H,, . . . , H6 are binary
Whenever to perform JPEG encoding or
series, the lengths of which are 40,48,40,40, 48,
decoding, we must use the 4 Huffman coding
40 bits correspondingly. Join H,, . . ., f f 6 together,
tables as mentioned above. Hence, we only need
we can get a binary number with 256 bits, that is
encrypt these tables to implement the encryption
to say 6 floating numbers with 64 bits are
of the whole image. Although JPEG has
provided these 4 coding tables, application
mapped to a hash value with 256 bits in binary.
It is j~lstthe first block cipher key we demanded.
programs can use custom coding tables. The
In a word, by passing each 6 rounds of
basic idea of our algorithm is to create custom
Huffman coding tables, then encrypt them to
iteration, we can get a block cipher key with 256
achieve the goal of encrypting whole JPEG
bits. Repeat above steps, a sequence of block
image file. Obviously, it benefits to reduce
cipher key will be created.
operating quantity of encryption, raise greatly
As mentioned above, one-way mapping gi
maps 64 bits message to 40 or 48 bits message.
efficiency and not influence effect of
It not only ensures the irreversibility of the
compression.
mapping, but also makes the hash value
Therefore, we apply the method of the
block cipher encryption to encrypt 4 Huffman
possessed less mutuality.
code tables. (See Fig. 3.)
In Fig. 3, the Initial cipher key is the joint
2.3 Compression and encryption of image
of initial value xo and parameter g , the
The main characteristic of our algorithm is
plaintext is 4 Huffman code tables, the
to perform encryption in the process of JPEG
encryption transformation is the bit-by-bit
compression coding. In other words, it is the
exclusive-OR function. The description of the
joint of compression and encryption.
algorithm is as follows.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

Stepl. The plaintext is divided into several
blocks, and each block denoted by M, has 256
bits. Assume that there are n blocks, and last
block M, 1 has I bits.
Step2. By performing 6n rounds iteration,
the block cipher generator will generate 6n
chaotic hash values strHash , and each has
256-bits.
Step3. Apply the bit-by-bit exclusive-OR

function to M, and strHash,, then obtain the
ciphertext C, (z=0, ,n-2).
Step4. Apply the bit-by-bit exclusive-OR
function to M,,l and the first 1 bits of strHash,,.],
and then obtain the ciphertext C,
The process of decryption is the inverse of
the process of encryption. Its model refers to Fig.
4.

Initial cipher key
XO,

Xi

k

l ~ l o c kcipher strHashi
Plaintext block M,

Encryption

Ciphertext block

Big. 3. Encryption model

-

Initial cipher kcy
Xu,

EJ-

XI

Block ciphcr key generator
l ~ l o c kcipher ~ t r f f ~ ~ h ;
Plaintext block h$

Ciphcrtext block C ,
Pig. 4. Decryption model

3. Analysis for our algorithm

Bif. Chaos, 2000;10(12). 283 1-2839.
131
E. Alvarez, A. Fernandez, P. Garcia, .I.
J~mtnez,
.
and A. Marcano, New approach to chaotic
encryption, Physics Letters A 263, pp. 373-375,
1999.
[4] G. Alvarez, F. Monotoya, G. Pastor, and M.
Romera, Chaotic cryptosystems, in Proc. IEEE
Int. Carnahan Conf. Sccurity Technology, pp.
332-338, 1998.
[5] L. Kocarev, T. S. Goce Jakimoski, and U. Parlitz,
From chaotic maps to encryption schemes. in
Proc. IEEE Int. Symposi~lmCircuits and Systems
4, pp. 514-517, 1998.
[6] J. Scharinger, Fast encryption of imagc datas
~lsingchaotic Kolmogorov flows[A]. Proceeding
of the International Societv for Ontical
Engincering[C], San Jose, California, 1997, 3022:
278-289
[7] D. E. Knuth, The Art of Computer Programming.
Val. 2 (3" Edition), 2001, p. 342.
[8] William Stallings, Cryptography and Network
Security: Principles and Practice, 2nd Edition,
Prcntice-Hill Inc. 1999.
[9] T. Y. Li and J. A. York, Period three implies
chaos, Am. Math. Monthly. 1975, 82: 985.
[lo] C. E. Shannon, A Mathematical Theory of
Communication, Bcll Systcm Technical Journal,
v.27, n.4, 1948, pp.379-423, 623-656.
-

The security of block cipher depends on the
block cipher key that is the chaotic hash
sequence. It turns to depend on the security of
initial secret key. Experiments indicate that if the
parameter p offset 0.00001, it will cause over
half bits of the chaotic hash sequence to be
changed. It illustrate that the chaotic sequence
can effectively diffuse the plaintext. Moreover,
by using several different methods, we analyze
the security and anticollision of the chaotic hash
sequence in detail. The results indicate that our
algorithm completely satisfied the security
requirement in the sense of cryptography.

Reference

[I] L S~LIJLLII,
M Xuanqin, and C Yuanlong,
"Pseudo-random blt generator based on couple
chaotic systems and its appl~catlons In
stream-clphcr cryptography", In Progrcss In
Cryptology - Indocrypt 2001, Lecture Notes in
Computer
Science 2247, pp
3 16-329,
Springer-Verlag, 2001
[2] M 1 Sobhy, et al , Scc~lrc computer
commun~cationusing chaotic algor~thms,Int. J

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

