Rational DP-Ball Curves
Natasha Dejdumrong
King Monkut’s University of Technology Thonburi
Department of Computer Engineering
Bangkok, 10140, Thailand
natasha@cpe.kmutt.ac.th

Abstract
In this paper, a normalized totally positive (NTP) basis
given by Delgado and Pe˜na [5] is used to form non-rational
and rational DP-Ball curves. The relationships between rational B´ezier and rational DP-Ball curves are given using
homogeneous coordinates. Consequently, an efﬁcient algorithm with linear computational complexity is introduced
in order to be used in evaluating the points on rational
B´ezier curve. Although the elegant de Casteljau algorithm
is proven to be simple and stable. Unfortunately, compared
with the linear time complexity of the proposed algorithm,
it is not efﬁcient. This algorithm can be used as an altertive
algorithm to the popular Wang algorithm.

curve to Delgado-Pe˜na curve, this paper will use DP-Ball
for the sake of simplicity. In this paper, the DP-Ball curve
(or Delgado-Pe˜na curve) is considered and its rational form
is investigated.

2
2.1

Deﬁnitions
B´
ezier Curves

A B´ezier curve of degree n deﬁned by n + 1 control
points {bi }n0 in E 3 , is given as
n

B(t) =

1. Introduction
In the CONSURF system, a kind of cubic polynomial basis was introduced by Ball [1]. From the work of Jiang and
Wang [8], it is known that there exist three generalizations
of the cubic Ball curve introduced as an alternative model to
the popular B´ezier curves. The ﬁrst generalization of Ball
curves was developed by Said [12] and its extension to the
rational form have been considered extensively [13]. The
second generalization was introduced in Chinese by Wang
[14] in 1987 and publicized by Hu et al. [7] in 1996. The
algorithm developed for evaluating the rational Wang-Ball
curves were introduced in the work by Dejdumrong et al.
[2]
The recent generalization was introduced by Delgado
and Pe˜na [5] in 2003 and referred to as a generalization
of Ball curves by Jiang and Wang [8] in 2005. They have
named this new curve as DP-Ball curve although this new
curve is not related to the cubic Ball curve. In other words,
the cubic DP-Ball bases are not equivalent to the original
cubic Ball bases while both Said-Ball and Wang-Ball curves
share the same cubic Ball bases. In fact, we should not call
it as DP-Ball curve. However, instead of renaming DP-Ball

bi Bin (t),

0 ≤ t ≤ 1.

(1)

i=0

The basis functions, {Bin (t)}n0 , are the nth -degree Bernstein polynomials given by
Bin (t) =

n i
t (1 − t)n−i
i

(2)

with
n
i

=

n!
i!(n−i)!

0

, if 0 ≤ i ≤ n
, otherwise.

(3)

The points {bi }n0 are called the B´ezier control points.
A rational B´ezier curve of degree n in E 3 is the projection of an nth -degree B´ezier curve in E 4 into the hyperplane w = 1. Here a point in E 4 is given by its coordinates
[wx wy wz w]T . Then an nth -degree rational B´ezier
curve is given by
B(t) =

n
n
i=0 wi bi Bi (t)
.
n
n
i=0 wi Bi (t)

(4)

The {wi }n0 are the weights corresponding to the B´ezier control points {bi }n0 .

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

2.2

DP-Ball Curves

3.1

In 2003, Delgado and Pe˜na introduced a new generalized
curve with linear computational complexity as well as being
formed by NTP basis.[5, 4] Due to these geometric properties, this curve will have the shape-preserving properties, in
other words, the shape of the curve preserves the shape of
the polygon (See [6, 3, 5, 8, 9]), and optimal stability (See
[10]). Thus, a DP-Ball curve of degree n with control points
{di }n0 can be expressed as
n

C(t) =

di Cin (t),

0 ≤ t ≤ 1,

(5)

i=0

The conversions from B´ezier to DP-Ball control points
and vice versa are introduced and proven in [5]. The relationship can be rewritten in the following proposition.
Proposition 1 The B´ezier points of a DP-Ball curve of degree n can be given in terms of DP-Ball control points and
n+1
= [ci,k ] by
an (n + 1) × (n + 1) conversion matrix Cn+1
[b0

where
are the DP-Ball basis functions. Using the
expression given in [5], these functions can be deﬁned for
both odd and even values of n as:

=

1
2

K2n (t)

=

(

K3n (t)

=

n
2

−

n
2

[1 − t

n
2

+1

− (1 − t)

n
2

+1

n+1
dn ] · Cn+1
(8)

...

c0,0
c1,0
..
.

c0,1
c1,1
..
.

···
···
..
.

c0,n
c1,n
..
.

cn,0

cn,1

···

cn,n

⎤
⎥
⎥
⎥
⎦

(9)

⎧
1,
k = 0 or k = n,
⎪
⎪
⎪
i−1
⎨ (i−k
)
,
1 ≤ k ≤ n2 − 1, 1 ≤ k ≤ i,
ci,k =
(nk)
⎪
n−i−1
⎪
)
⎪
n
⎩ ( i−k
,
2 + 1 ≤ k ≤ n − 1, i ≤ k ≤ n − 1,
(nk)
(10)
if n is even, then
n
2

,k

= F n (k),
min(

n

1 ≤ k ≤ n − 1;

n
2

−1,k−1)

F (k) =
l=max(0,k−

(7)

where {ψi }n0 are the weights corresponding to the control
points, {di }n0 .

3

⎢
⎢
n+1
=⎢
Cn+1
⎣

d1

(11)

where

Similarly, the rational form for an nth -degree rational DPBall curve can be deﬁned by
n
n
i=0 ψi di Ci (t)
,
n
n
i=0 ψi Ci (t)

⎡

c

]

n
n
n
−
)t(1 − t) 2 +1
2
2
n
n
n
−
)t 2 +1 (1 − t)
(
2
2

C(t) =

bn ] = [d0

and

(6)

where n2 and n2 denote the the greatest integer less than
or equal to n2 and the least integer greater than or equal to
n
2 , respectively, and
K1n (t)

...

b1

where

Cin (t)

⎧
i=0
(1 − t)n ,
⎪
⎪
⎪
⎪
1 ≤ i ≤ n2 − 1
⎨ t(1 − t)n−i ,
K1n (t) + K2n (t), i = n2
Cin (t) =
⎪
⎪
K n (t) + K3n (t), i = n2
⎪
⎪
⎩ n1
n
Cn−i (1 − t),
2 + 1 ≤ i ≤ n,

Relationships between Non-Rational
B´
ezier and Non-Rational DP-Ball
Curves

Relationships between B´ezier and DP-Ball
Curves

In this section, the relationships between B´ezier and DPBall curves are considered. The curves are deﬁned by their
control points and their blending (or basis) functions. It
can be readily veriﬁed that each set of the basis functions,
{Bin (t)}n0 or {Cin (t)}n0 is a basis of the vector space of
polynomials of degree at most n in t ∈ [0, 1] with real coefﬁcients. As such, a curve given in one form (one basis)
can also be represented in the other form. The relationships
between B´ezier and DP-Ball curves are considered now.

n
2

)

n
2

+1
k−l
n
l

n
2

l

(12)

if n is odd, then
⎧
n −1
( n2 −k)
⎨ 1 n
2
F
(k)
+
, 1 ≤ k ≤ n2
n
2
c n2 ,k =
(
k)
⎩ 1 n
n
2 F (k),
2 ≤ k ≤ n − 1,
(13)
⎧ 1 n
1 ≤ k ≤ n2
⎨ 2 F (k),
n −1
( 2n )
c n2 ,k =
n
⎩ 1 F n (k) + k− n2 −1 ,
2
2 ≤ k ≤ n − 1,
(k )
(14)
and ci,k = 0, otherwise.
Example 1 The relationships between B´ezier and DP-Ball
control points when the degree n = 3 to 5 are illustrated as
follows.
• for n = 3 The matrix of conversion from DP-Ball to
B´ezier control points is
⎡
⎤
1 0 0 0
1
2
⎢ 0
0 ⎥
3
3
⎥
(15)
C4×4 = ⎢
⎣ 0 1 2 0 ⎦
3
3
0 0 0 1

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

b0
b1
b2

and the matrix of conversion from B´ezier to DP-Ball
control points is
⎡

-1
C4×4

⎤
0 0
−1 0 ⎥
⎥
2 0 ⎦
0 1

1 0
⎢ 0 2
=⎢
⎣ 0 −1
0 0

b3
b4

(16)

b5

=
=

d0
(2d1 + 5d2 + 3d3 )/10

=
=

(11d2 + 9d3 )/20
(9d2 + 11d3 )/20

=
=

(3d2 + 5d3 + 2d4 )/10
d5

Thus, the relationships between them are
=
d0
= (2d1 + d2 )/3
= (d1 + 2d2 )/3
=
d3

b0
b1
b2
b3

=
=
=
=

d0
d1
d2
d3

b0
2b1 − b2
2b2 − b1
b3
(17)

• for n = 4
⎡
C5×5

⎢
⎢
=⎢
⎢
⎣

and

1
0
0
0
0

0

0
0

0
0

0
0

1
4
3
4

⎡

=
=
=
=
=

0
0
0
0
1

3
2
1
4

0

⎤

3.2

⎥
⎥
⎥
⎥
⎦

0
0

d0
(d1 + 3d2 )/4
3
2 d2
(6d2 + d3 )/4
d4

d0
d1
d2
d3
d4

=
=
=
=
=

C6×6

⎢
⎢
⎢
=⎢
⎢
⎢
⎣

0

1
5
1
2
3
10

0
0

0
0

11
20
9
20

0
0

0
0

9
20
11
20

0
0

0
0

3
10
1
2
1
5

0

-1
C6×6

⎢
⎢
⎢
=⎢
⎢
⎢
⎣

1 0
0 5
0 −7
0 3
0 0
0 0

0
0

11
2

− 92
0
0

0
0
− 29
11
2

0
0

5b1 − 7b2 + 3b2
(11b2 − 9b3 )/2

d4

=
=

(−9b2 + 11b3 )/2
3b2 − 7b3 + 5b4

d5

=

b5

Relationships
between
Rational
B´
ezier and Rational DP-Ball Curves

ψ
ψ
n+1
w
w
ψ
[bw
0 , b1 , . . . , bn ] = [d0 , d1 , . . . , dn ] · Cn+1 .

(23)

Consequently, we have
b0
4b1 − 2b2
2
3 b2
4b3 − 4b2
b4
(20)

0
0
0
0
1
1

⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎦

(21)

⎤
0 0
0 0 ⎥
⎥
3 0 ⎥
⎥
−7 0 ⎥
⎥
5 0 ⎦
0 1

w0 b0
w0

...
...

wn bn
wn

ψ0 d0
ψ0

=

...
...

ψn dn
ψn

n+1
·Cn+1
,

(24)
and
wk bk
wk

n

=

ψi di
.
ψi

ci,k ·
i=0

(25)

Equations (24) and (25) lead to the two following propositions.
Proposition 2 The B´ezier weights of a rational DP-Ball
curve of degree n can be expressed in terms of the DP-Ball
weights as follows:
[w0

...

wn ] = [ψ0

ψ1

...

n+1
ψn ] · [Cn+1
]. (26)

The B´ezier control points of a rational DP-Ball curve are
given by

and
⎡

=
=

(19)

• for n = 5
1
0
0
0
0
0

d1
d2
d3

i
dψ
= ψψi di i , respectively. Thus, from equation (8), the
i
B´ezier control points of a rational curve can be expressed in
terms of the DP-Ball control points and their weights as:

⎤

0 0
0 0 ⎥
⎥
−4 0 ⎥
⎥
4 0 ⎦
0 1

⎡

b0

Using homogeneous coordinates, a B´ezier point bi and
i
= wwi bi i and
a DP-Ball point di can be expressed as bw
i

0
0
2
3

=

(18)

1 0
⎢ 0 4
⎢
=⎢
⎢ 0 −2
⎣ 0 0
0 0

-1
C5×5

b0
b1
b2
b3
b4

3
2

0
0

d0

n+1
ψn dn ] · [Cn+1
].
(27)
Proof: The proof is similar to the proof provided in [8].
Given a rational nth B´ezier curve deﬁned by its control
points {bi }ni=0 . The rational DP-Ball weights and points

[w0 b0

(22)

...

wn bn ] = [ψ0 d0

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

...

as follows.

for the same curve can be determined by solving a matrix
inversion in equations (26) and (27).
Proposition 3 The DP-Ball weights of a rational B´ezier
curve of degree n can be expressed in terms of the B´ezier
weights as follows:
...

[ψ0

ψn ] = [w0

w1

n+1 -1
wn ] · [Cn+1
] . (28)

...

The DP-Ball control points of a rational B´ezier curve are
given by
[ψ0 d0

...

ψn dn ] = [w0 b0

ψ0
ψ1
ψ2
ψ3
ψ4

...

wn bn ] ·

w0
4w1 − 2w2
2
3 w2
4w3 − 4w2
w4

4

4.1

b2
w3 b3 −w2 b2
w3 −w2
b4

The de Casteljau algorithm can be expressed as
w

w

i,r−1
i+1,r−1
+ tbi+1,r−1
.
bi,ri,r = (1 − t)bi,r−1

The weights and control points of the B´ezier curve obtained from a given rational DP-Ball curve are listed as
follows.
=
=
=
=

ψ0
(2ψ1 + ψ2 )/3
(ψ1 + 2ψ2 )/3
ψ3

=
=
=
=

b0
b1
b2
b3

d0
2ψ1 d1 +ψ2 d2
2ψ1 +ψ2
ψ1 d1 +2ψ2 d2
ψ1 +2ψ2

The weights and control points of the DP-Ball curve
calculated from a corresponding rational B´ezier curve
are expressed as follows.
=
=
=
=

w0
2w1 − w2
2w2 − w1
w3

d0
d1
d2
d3

=
=
=
=

b0
2w1 b1 −w2 b2
2w1 −w2
2w2 b2 −w1 b1
2w2 −w1
(31)

• for n = 4
Similarly, the weights and control points of the B´ezier
curve obtained from a given rational DP-Ball curve are
listed as follows.
=
=
=
=
=

ψ0
(ψ1 + 3ψ2 )/4
3
2 ψ2
(6ψ2 + ψ3 )/4
ψ4

b0
b1
b2
b3
b4

=
=
=
=
=

wi,r = (1 − t)wi,r−1 + twi+1,r−1

d0
ψ1 d1 +3ψ2 d1
ψ1 +3ψ2
d2
6ψ2 d2 +ψ3 d3
6ψ2 +ψ3
d4

(32)
The weights and control points of the DP-Ball curve
obtained from a given rational B´ezier curve are listed

(35)

and
bi,r =

(1 − t)wi,r−1 bi,r−1 + twi+1,r−1 bi+1,r−1
, (36)
wi,r

for r = 1, . . . , n and i = 0, . . . , n − r.
The algorithm (expressed by Equations (35) and (36))
requires n(n + 1) additions, 3n(n + 1) multiplications and
n(n + 1)/2 divisions to calculate a point.

4.2

b3

(34)

This can be expressed explicitly as follows:

d3

(30)

w0
w1
w2
w3
w4

b0
2w1 b1 −w2 b2
2w1 −w2

Rational B´
ezier curve

• for n = 3

ψ0
ψ1
ψ2
ψ3

=
=
=
=
=

Computational Considerations on Rational
Curves

w

w0
w1
w2
w3

d0
d1
d2
d3
d4

(33)

n+1 -1
[Cn+1
] .

(29)
Proof: The proof is similar to the proof provided in [8].
Example 2 The relationships between rational B´ezier and
rational DP-Ball control points when the degree n = 3 and
n = 4 are expressed.

=
=
=
=
=

Rational DP-Ball Curves

In the work by Delgado and Pe˜na [5, 4], they also introduced a new evaluation algorithm with linear complexity, called DP algorithm. Using the homogeneous coordinates, the DP algorithm for computing a point on the DPBall curve can readily be extended to the rational DP-Ball
curve. The extension can be expressed as following algorithm.
Algorithm 1: To compute a point on a rational DP-Ball
curve,
1. If n is odd, let
⎧
i=0
(1 − t)ψ0 + tψ1 ,
⎪
⎪
⎪
⎪
1 ≤ i ≤ n2 − 1
⎨ ψi+1 ,
1
i = n2
ψi =
2 (ψi + ψi+1 ),
⎪
n
⎪
ψi ,
⎪
2 ≤i≤n−2
⎪
⎩
(1 − t)ψn−1 + tψn , i = n − 1
(37)

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

when n is odd, the numbers of additions for the curves are
respectively as

and

⎧
(1 − t) ψ0 d0 + t ψ1 d1 ,
⎪
⎪
ψ
ψ
⎪
⎪
⎪
⎪
⎨ di+1 ,
ψi+1
1 ψi
ˆi =
d
2 ( ψ di + ψ di+1 ),
⎪
⎪
⎪
di ,
⎪
⎪
⎪
⎩ (1 − t) ψn−1 dn−1 + t ψn dn ,
ψ

ψ

i=0
1≤i≤
i = n2

n
2

−1
n(n + 1) >

n
2

≤i≤n−2
i=n−1
Similarly, the number of multiplications are
(38)

If n is even, let
⎧
(1 − t)ψ0 + tψ1 ,
i=0
⎪
⎪
⎨
1 ≤ i ≤ n2 − 1
ψi+1 ,
ψi =
n
ψi ,
⎪
2 ≤i≤n−2
⎪
⎩
(1 − t)ψn−1 + tψn , i = n − 1
(39)

ψ

ψ

i=0
1 ≤ i ≤ n2 − 1
n
2 ≤i≤n−2
i=n−1

(40)
Then replace the curve with control points di (i =
0, 1, . . . , n) by a new DP-Ball curve of degree n − 1
with control points di (i = 0, 1, . . . , n − 1).
2. n ← n − 1. If n ≥ 3 then let di = di and ψi = ψi for
all i and go back to (1).
3. The value of Cn (t) corresponding to the value t is obtained as:
Q

=

(1 − t) ψψQ0 d0 + t ψψQ1 d1

R
= (1 − t) ψψR1 d1 + t ψψR2 d2
ψ
Cn (t) = (1 − t) ψQS Q + t ψψRS R,
where

ψQ
ψR
ψS

=
=
=

(1 − t)ψ0 + tψ1
(1 − t)ψ1 + tψ2
(1 − t)ψQ + tψR .

(41)

It can readily be veriﬁed that the rational B´ezier curve
requires the most computational time while the Wang-Ball
curve requires the least. It should be noted that among the
algorithms presented, the Wang and DP algorithms have
a linear computational complexity, O(n) while the others
have a quadratic computational complexity. This interesting result leads to the development of a new algorithm for
the rational B´ezier curve, based upon the relationships between the rational B´ezier and rational DP-Ball curves.

4.4

A Proposed Algorithm

In the view of the efﬁcient algorithm developed above
for the rational DP-Ball curve, we can obtain an efﬁcient
method for the evaluation of the rational B´ezier curve using
the established relationships between the two models and
the algorithm in evaluation of the points on the rational DPBall curves. This can be stated formally as in the following
algorithm.
Algorithm 2: To compute a point on a rational B´ezier
curve,
Step 1: Convert a rational B´ezier curve into a rational DPBall curve of the same degree.
Step 2: Use algorithm for the rational DP-Ball curve to
evaluate the points.

(42)

The algorithm requires 5n − 3 additions, 15n − 9 multiplications and (5n − 3)/2 divisions for n odd, and 5n − 4
additions, 15n−12 multiplications and (5n−4)/2 divisions
for n even.

4.3

(n > 3)

2n(n + 1) > (n + 1)2 > 15n − 9 > 6n − 2 (n > 3).

and
⎧
(1 − t) ψ0 d0 + t ψ1 d1 ,
⎪
⎪
ψ
ψ
⎪
⎨
di+1 ,
ˆ
di =
di ,
⎪
⎪
⎪
ψn
⎩ (1 − t) ψn−1 d
dn ,
n−1 + t

(n + 1)2
> 5n − 3 > 3n − 1
2

Comparisons

According to the work by Dejdumrong et al. [2], the
computational complexity analysis of the algorithms for
computing a point on a rational B´ezier curve, a rational
Said-Ball curve, a rational DP-Ball curve and a rational
Wang-Ball can be compared as follows. For examples,

Equations (28) and (29) in Proprosition 3 can be used in
Step 1 and in Step 2, Algorithm 1 is used in evaluating the
points on the rational DP-Ball curve.

5

Discussions
1. At a ﬁrst glance, it seems that inversion of an n × nmatrix is required in Step 1. Althought this operation is
time consuming (computational complexity of O(n3 )),
in practice, the conversion matrices from the B´ezier
form to the DP-Ball form should be calculated in advance. However, this conversion is needed only once
in plotting the curve where many (about 30-50) points
are calculated.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

6. Conclusions
Table 1. Computational Complexity Comparison between de Casteljau and Proposed Al´
gorithm for Rational Bezier
Curves.
n
3
4
5
6
7
8
9
10
11
12
13
14
15

de Casteljau Algorithm
Additions
Multiplications
360
1080
600
1800
900
2700
1260
3780
1680
5040
2160
6480
2700
8100
3300
9900
3960
11880
4680
14040
5460
16380
6300
18900
7200
21600

Algorithm 2
Additions
Multiplications
360
1080
480
1440
660
1980
780
2340
960
2880
1080
3240
1260
3780
1380
4140
1560
4680
1680
5040
1860
5580
1980
5940
2160
6480

2. The de Casteljau algorithm for computing a point on
a B´ezier curve of degree n has a time complexity of
O(n2 ). For the proposed algorithm (Algorithm 2), the
time complexity (in Step 2) is only O(n). As such,
these algorithm is much more efﬁcient as compared to
the de Casteljau algorithm but less than Wang algorithm.
3. To see the improvement of the proposed algorithm over
the de Casteljau algorithm, the actual number of operations is calculated for different values of n. The results
are collected in Table 1. It is remarked here that because of not enough space for the division columns, the
number of divisions for both algorithms can be shown
as the half of the number of their additions of the same
degree n. In the table, it is assumed that 30 points are
used to plot the curves involved and look-up tables are
used in conversion from B´ezier form to DP-Ball form.
It is clear that for n > 3, the proposed algorithm is
much more efﬁcient than the de Casteljau algorithm.
4. In view of the complexity of the de Castlejau algorithm, the rational B´ezier curve has a time complexity
of O(n2 ) as for its non-rational case. Step 2 in Algorithm 2 has a linear time complexity, O(n) as the DP
algorithm. It is clear that Algorithm 2 is much more efﬁcient than the de Casteljau algorithm. As for the case
of the nonrational B´ezier curve, Algorithm 2 becomes
to more efﬁcient when n becomes large.

In this paper, the relationships between rational B´ezier
and rational DP-Ball curves are developed. Using the relationships, two algorithms for computing a point on the rational B´ezier and the rational DP-Ball curves are introduced.
The algorithm for rational DP-Ball curves is obtained by
extending the DP algorithm to the rational case. This algorithm is used to devise the algorithm for rational B´ezier
curves. The resulting algorithm is proved to be much more
efﬁcient than the de Casteljau’s because it has a linear time
complexity. As such it is recommended for use in plotting
rational B´ezier curves.

References
[1] A. A. Ball. CONSURF Part I: Introduction of conic lofting
title. Computer Aided Design, 6(4):243–249, October 1974.
[2] N. Dejdumrong, H. N. Phien, H. L. Tien, and K. M. Lay.
Rational Wang-Ball curves. International Journal of Mathematical Education in Science and Technology, 32(4):565–
584, July 2001.
[3] J. Delgado and J. M. Pe˜na. Monotonicity preservation of
some polynomial and rational representations. Proceedings
of the sixth International Conference on Information Visualization (IV’02), 2002.
[4] J. Delgado and J. M. Pe˜na. A linear complexity algorithm
for the Bernstein basis. Proceedings of the 2003 International Conference on Geometric Modeling and Graphics
(GMAG’03), 2003.
[5] J. Delgado and J. M. Pe˜na. A shape preserving representation with an evaluation algorithm of linear complexity. Computer Aided Geometric Design, 20(1):1–20, March 2003.
[6] T. N. T. Goodman and H. B. Said. Shape preserving properties of the generalised Ball basis. Computer Aided Geometric Design, 8(2):115–121, May 1991.
[7] S. M. Hu, G. Z. Wang, and T. G. Jin. Properties of two generalized Ball curves. Computer Aided Design, 28(2):125–133,
February 1996.
[8] S. R. Jiang and G. J. Wang. Conversion and evaluation for
two types of parametric surfaces constructed by NTP bases.
Mathematical and Computer Modelling, 49:321–329, 2005.
[9] J. M. Pe˜na. Shape Preserving Representations in Computer
Aided Geometric Design. Nova Science Publishers, Inc.,
1999.
[10] J. M. Pe˜na. On the optimal stability of bases of univariate
functions. Numerische Mathematik, 91(2):305–318, 2002.
[11] H. N. Phien and N. Dejdumrong. Efﬁcient algorithms
for B´ezier curves. Computer Aided Geometric Design,
17(3):247–250, March 2000.
[12] H. B. Said. Generalized Ball curve and its recursive algorithm. ACM Transactions on Graphics, 8:360–371, 1989.
[13] H. L. Tien, D. Hansuebsai, and H. N. Phien. Rational Ball
curves. International Journal of Mathematical Education in
Science and Technology, 30(2):243–257, March 1999.
[14] G. J. Wang. Ball curve of high degree and its geometric
properties. Appl. Math.: A Journal of Chinese Universities,
2:126–140, 1987.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

