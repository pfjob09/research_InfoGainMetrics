Optimized NURBS Ship Hull Fitting using Simulated Annealing
Ang Swee Wen
Department Of Graphics and
Multimedia
Faculty of Computer Science
and Information System
Universiti Teknologi
Malaysia
angeline_aasw@hotmail.com

Siti Mariyam Hj. Shamsuddin
Department Of Graphics and
Multimedia
Faculty of Computer Science
and Information System
Universiti Teknologi
Malaysia
mariyam@fsksm.utm.my

Abstract
The shape of a NURBS curve or surface is defined
by the location of its control points, the control points’
weights, and the knot vectors. Most of the curve and
surface design tried to modify the control points.
However, it is still impossible to obtained accurate
control points for a reconstructed NURBS curve or
surface. The fitness of these surfaces is generally
considered a subjective notion depending on the
judgment of the designers (eg. visually pleasing,
devoid of unnecessary bumps or wiggles, satisfying
certain continuity requirements). One of the restriction
in ship hull design is that the existing details of a ship
design on paper or a ship that already been
constructed physically couldn’t be reconstructed
accurately and concisely in a ship hull design
software. This research strives to solve this problem by
creating fair ship hull surface using NURBS. An
optimized NURBS ship hull fitting approach using
simulated annealing is developed. Evaluation and
analysis (accuracy, fairness and speed of processing)
on the proposed approach is done.

Keywords: NURBS, simulated annealing, ship hull,
fitting, ship design, fairing and surface reconstruction.

Yahya Samian
Department Of Marine
Technology
Faculty of Mechanical
Engineering
Universiti Teknologi
Malaysia
yahya@fkm.utm.my

these are taken into account in developing the best
approach. In the field of surface modeling of hull form,
geometric complexity of hull form gives many
difficulties. This leads to the issue of what is the best
surface reconstruction method for ship hull? NURBS is
the best available method as it is state in [6] that it is
the dominant mathematical technique available and [1]
standard of computer modeling for many industries.
The generation of NURBS curves and surfaces are used
for the fitting of the ship hull because of its high level
of continuity, fairness and flexibility. Besides, the
amounts of control points needed are less compared to
other available parametric surfaces like parabolic
blending, bezier, etc.

2 NURBS
2.1 NURBS formulation
A NURBS curve of degree p is a piecewise
polynomial curve defined as follows:
n

C w (u )   N i, p (u ) Pi w
where

i 0
w

Pi , i  0,..., n, form the so-called control

polygon defined by a set of weighted control points

1. Introduction
This research reconstructs a concise and accurate
approximated physical surface of the ship hull. It can
take on many different characteristics, depending on
the goal of the reconstruction, the origin of the offset,
and tools or methods available to tackle the job. All of

and
Pi w  ( wi xi , wi yi , wi zi , wi ) ,
N i , p(u ), i  0,..., n , are the B-spline basis functions
defined over a knot vector

U  {u0 ,..., u m }, ui  ui 1 , i  0,..., m  1
Throughout this research the knot vector has the
following form (open knot vector):

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

U  {a
, a,...,
, b,...,


a, u p 1 ,..., um  p 1, b


b}
p 1

p 1

where in most practical applications a = 0 and b = 1.

Skinning is the most suitable method for ship hull
fitting because it produces rectangular spline meshes. It
will be more difficult to fair non-rectangular meshes
[6].

A NURBS surface of degree (p, q) is defined
similarly as:
n

m

S ( u, v)   N i , p (u ) N j , q (v ) Pi ,wj
w

i 0 j 0

where

P , i  0,..., n; j  0,..., m , form the sow
i, j

called control net defined by a set of weighted control
points

Pi ,wj  ( wi , j xi , j , wi , j yi , j , wi , j zi , j , wi , j ) , and

the basis functions

N i , p(u ), i  0,..., n , and

N j , q(v ), j  0,..., m , are defined over the knot
vectors

U  {u0 ,..., ur }, ui  ui 1 , i  0,..., r  1
V  {v0 ,..., vs }, v j  v j 1 , j  0,..., s  1
For an in depth treatment of NURBS the reader is
referred to [4], [8] and [9].

Figure 1 NURBS skinning: surface
interpolation through cross-sectional curves
2.2.2 Free-form surface design

The most common surfaces used in CAGD with
NURBS representation are the natural quadrics (plane,
sphere, cylinder, cone), torii, ruled surfaces, extruded
surfaces and surfaces of revolution (refer to [3] or [7]
for an overview of the common used surfaces).
Therefore, it is useful to understand their NURBS
representation and characteristics. Other types of
surfaces such as cross-sectional design and free-form
surface design are covered in the section below which
are used in this research.

In the previous sections, the most important
properties and the mathematical NURBS representation
of commonly used surfaces are summarized. However,
the real power of NURBS lies with their ability to
model complex free-form curves and surfaces. The
available fitting techniques can be categorized in two
different
groups
mainly:
interpolation
and
approximation [10].
There are several ways of approximating the
surface with the NURBS definition:
i. Reposition control points.
ii. Change the weights.
iii. Modify the knot vector.
iv. Move data points and re-interpolate.

2.2.1 Cross-sectional design

3 Optimization using Simulated Annealing

Cross-sectional design is concerned with surface
construction based on curve to generate B-spline
surfaces. The most frequently used techniques are
skinning, sweeping and swinging. Briefly, NURBS
skinning works as follows: a set of NURBS curves
through which a NURBS surface is to pass. In practice
these curve are usually planar curves positioned in 3D
space with a so-called spine curve. The skinned surface
is obtained in three steps (see Figure 1).
NURBS sweeping is a special case of skinning that
uses a constant section curve. If the curve is a v curve,
then the constant section curve is positioned along the
spine at the same u value. Whereas, NURBS swinging
is a generalization of rational sweeping (refer to [7] ).

There are many ship design softwares available in
market. For example, AutoShip, MaxSurf, Tribon,
Catia, Defcar, Foran, Intergraph, Napa, NupasCadmatic, PCG-Goddess, Pro/Engineer, FastShip dan
ShipConstructor. A survey in boatdesign.net referring
to best marine design software for hull design that
naval architects prefer to use for year 2001-2005[12]
and 2006[11]. The result shows that Maxsurf has the
highest percentage of usage. For the time being,
Maxsurf has been the only ship design with
optimization method. It uses genetic algorithm (GA)
for fitting. Other global optimization methods used are
Simulated
Annealing
(SA),
Particle
Swarm
Optimization (PSO), Ant Colony Optimization (ACO),

2.2 Used surfaces with NURBS representation

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

Genetic Programming (GP), Cultural Algorithms,
Evolutionary Strategies and etc [5]. The proposed
method is using SA to generate control points of the
NURBS surface.
The simulated annealing optimization is done on
the cross sectional curves instead of surface because
the surface optimization decreases the probability to
obtain optimal results and is too slow for interactive
applications [2]. The process tries to find a control
point for which the quality of the curve is optimum
taking into account that this is a large dimensional,
non-linear optimization, with many local minima and
maxima. If some greedy optimization method is used,
then would end up in a local optimum. On the other
hand, the function to be optimized is not available in a
simple algebraic form but it can be evaluated at certain
points using numeric approximation.
Such hard optimization problems can be solved by
the simulated annealing algorithm, which is based on
the metaphor of the cooling process of a material
composed by particles. If the absolute temperature is T,
then the probability that a particle is at energy level E
is proportional to exp (−E/kT), where k is the
Boltzmann constant. At the beginning of the cooling
process the temperature is high, and the particles can
reach high energy states easily. When the cooling
process starts, the particles will find its lower energy
states. Since even at lower temperatures, a particle can
have higher energy with a small probability, the
particles are given the chance to jump over local
minima. The particles finally will find the optimal, i.e.
the lowest energy state.
Note that due to accepting higher energy states,
such an algorithm would never converge for a given
temperature. To force convergence, the temperature
should be decreased in subsequent iteration steps.
When it comes to optimizing the control points, the
particle states, the temperature and the Boltzmann
constant should be translated to the actual terms of our
geometric problem. The actual state of the particles
will be the actual control points, and the energy is an
appropriate quality measure of the resulting curve.
The initial temperature and the Boltzmann constant
should be selected to set the acceptance probability to
about 80% at the beginning of the algorithm. In order
to vary the state randomly proportional to exp (−E/kT),
Metropolis sampling is used [MRR+53, SK99]. Based
on the actual state, it selects a new random, tentative
state in the neighborhood of the actual state. The
tentative state can be imagined as a small perturbation
of the actual state. Then the algorithm compares the
energy of the tentative and the actual states. If the
tentative state has lower energy, then it is accepted as
the new next state. On the other hand, if the tentative
state has higher energy, it might still be accepted
randomly, with probability exp (−ΔE/kT), where ΔE is

the energy increase. Such sampling would
asymptotically sample a state with a probability
proportional to exp (−E/kT).

4 Implementation
The data offsets of a defined ship hull are taken
from an existing ship design on paper (first process).
The ship design plan consists of three views; top view
(Half Breath Plan – (x, y)), side view (Sheer Plan – (x,
z)) or front view (Body Plan – (y, z)). The
implementation is only tested on 4 ship offset data
(40m btv, fishing vessel, fire fighting and yacht)
because these are the only few that are allowed by the
marine lab. The rest of the ship drawings are owned by
other organization which are confidential. These
drawings (40m btv, fishing vessel, fire fighting and
yacht) are actually drawings of ships that have already
been successfully constructed physically.
The implementation consists of four major steps:
(1) extract ship definition/data offsets from ship hull
drawings, (2) control points generation using b-spline
fitting, (3) data offsets generation using NURBS
surface with knot interpolation and (4) surface
optimization on either Y or Z coordinate using
simulated annealing. The implementation of this
research was graphically summarized in Figure 2.
The need of control points generation (Algorithm 1)
before the surface generation using NURBS is needed
because the surface generated with NURBS doesn’t
touch the initial offset data except for the first and last
data for each curve/cross-section. This is one if the
characteristic of NURBS. B-spline fitting method is
used instead of surface fitting in order to increase the
accuracy of the generated data.
Algorithm 1 – B-spline fitting [10]
Input :

Pi n ( x, y, z ),

ship hull offset points

Output :

Qin ( x, y, z ), offset data
Algorithm :

N in  NURBS basis function
( N in ) 1  Inverse ( N in )
FOR i = 0 to n DO

Qi

 Multiply

( N in ) 1 with Pi

END.

The implementation starts with a generated NURBS
surface whose weights are set to 1 and has a set of
default knot vectors. Interpolation is done on the each v
direction knot vector (x-coordinate) in order to obtain
the best fit cross-sectional curves. The surface fitting
using cross-sectional design concept is done by making

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

all the cross-sectional curves compatible and joining
them with one another. The algorithm of this process is
shown below (Algorithm 2 and 3).
Ship Definition
(Waterlines, Sections, etc)
Initial offset points/data

S w (u, v),

skinned surface

Algorithm :
make curves compatible if necessary (algorithm 3)
n  highest index in control point arrays

U

 knot vector of any

Ckw

v0 ,..., vk for curve interpolation
compute V by averaging v parameters

compute

Control points Generation
Input : Initial Ship offset data
Output : Control points for
surface generation
Method : b-spline fitting

FOR i = 0 to n DO
FOR j = 0 to k DO

Q wj  ith control point of C wj
END

{Pi ,wj }kj  0  interpolate {Qiw, j }kj  0 with a degree q

curve

END

Algorithm 3 – Making Cross-sectional Curves
Compatible

T=
100

Input :

Surface fitting
Input : Control points
Output : Generated offset data
(cross-sectional curves)
Method : NURBS surface with
Knot interpolation – xcoordinate
(cross-sectional design)
T=T-1

no

Surface optimization
Input : Cross-sectional curves
Output : Cross-section with
minimized error
Method : Simulated Annealing
on y or z-coordinate

<
Approximated
Error or

yes
Final Result
Faired Surfaces

Figure 2 Process in order to produce expected
results
Algorithm 2 – NURBS surface generation
Input :

Ckw ( x, y, z ), cross-sectional curves
q, degree of surface in the skinning direction
Output :

Ckw ( x, y, z ),

cross-sectional curves

Output :

Ckw ( x, y, z ),

compatible cross-sectional curves

Algorithm :
make curve definitions compatible (all rational or non-rational,
2D or 3D)
scale knot vectors to a common interval
find the highest degree
raise the degree of the lower degree curve (if any)
merge knot vectors
refine cross-sectional curves

The surface generated may not be one hundred
percent perfect fit or according to what the naval
architecture desire. Optimization using simulated
annealing on the ship hull surface is implemented. In
each step of the Metropolis iteration the control points
are perturbed a little. In the implementation a control
point is allowed to go at most distance 5% from its
default setting. Before perturbing the knot vectors in
random order, the specified NURBS property defined
in section 3 considered as the energy of the actual
curve is measured. The energy is the appropriate
quality measure of the resulting curve by calculating
the Root Mean Square error (RMS error) of the curve.
After perturbing the control points, comparison of the
actual energy value with the original one. If this energy
is lower, this new control point is kept.
If the new energy is higher, i.e. new property is
worse than the original one then the new configuration
with a calculated probability is kept only. This decision
can be formulized in a very simple way: a pseudorandom number between 0 and 1 is generated. If this
value is less then the calculated probability, the new
settings is kept. Otherwise, throw away. The
temperature decrease gradually giving smaller chance
to increase the energy. If the cooling speed is low, then
the algorithm will need a long time to converge. On the

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

other hand, if the cooling is fast, the algorithm can miss
the global minimum and end up in a local minimum.
However, the quality of the NURBS could still be
much better in this local minimum than at the
beginning of the process. The optimization process is
summarized in the following code:
Algorithm 4 – Simulated Annealing
Set the control point

Qi

to its default;

Set temperature T and Boltzmann constant k;
repeat
repeat // Metropolis

Qi randomly to obtain Qi new ;
ΔE = Φ( Qi new ) − Φ( Qi );
perturb

P = min{1, exp (−ΔE/kT)};
if (random() < P)

Qi

=

Qi new ;

until (equilibrium);
decrease T;
until (T > Tmin);
return

Qi ;

The Metropolis sampling generates samples with
the required probability only in an asymptotic state.
That is why there is a need to iterate until
“equilibrium”. Unfortunately, it is not easy to decide
when we reached that state. In practice, the
“equilibrium” state is when the curve reaches a desired
approximation (RMS error less than 0.005). the
number of Metropolis iterations equals to 5–10 times
the number of elements in the control points. On the
other hand, if the cooling is slow, then the probability
distribution changes slowly, thus it is enough to iterate
only once in the Metropolis loop.

4. Result and Discussion
The data offsets used in this research are existing
ship that already been build physically. For the time
being, only manage to get 4 types of ship data offsets
(40m btv, Fishing Vessel, Fire Fighting and Yacht)
because many other ships are confidential (reserve
rights of companies that own the ship drawings).
Prototype of each module/process has been
developed (control points generation, data offset
generation, surface fitting, surface optimization).
Analysis of the effectiveness of the NURBS surface for
fitting the ship hull surface is done by calculating Root
Mean (RMS) Square error. The formula shown
below :n

 RMS 

 (P  P

i 1

i

i 0

n

Results in Table 1 prove that after each module or
process improves the approximation of the surface.
There is a reduction in the RMS error.
There is also a comparison done of the proposed
approach with Maxsurf (the best marine design
software for hull design). Maxsurf also uses
optimization method to generate the control points for
NURBS surface generation and it calculates the
maximum distance error of the generated data offset
with the original data offset of the ship hull.
Table 1. RMS error calculation of surface
generated after process of each module.
Ship
name
40m
btv
Fire
fighting
Fishing
vessel
Yacht

Without
knot op.

RMS error
With
B-spline
knot op.
Fit

0.389475

0.080133

0.080115

0.071472

453.3619

79.01589

59.97385

54.66217

0.198218

0.045018

0.043156

0.03103

0.167026

0.022743

0.022622

0.022257

Table 2. Comparison of maximum error with
Maxsurf
Ship name
40m btv
Fire
fighting
Fishing
vessel
Yacht

Maximum error (m)
Proposed Method
Maxsurf
(SA)
(GA)
0.045806 (1000i)
0.06613 (100i)
21.56557
20.3242 (1000i)
(100i)
0.051424 (1000i)
0.06808 (25i)
0.174978 (1000i)

0.24611 (100i)

* i = iteration (eg. 100i = 100 iteration)

There are some limitations of the Maxsurf software.
The increase of the iteration may improve the surface
fitness but it may also distort the generation of the
surface. This problem occurs when the iteration is set
to 100 for Fishing Vessel. Therefore, the iteration for
this ship is only set to 25. However, this problem does
not occur using SA. The increase of iteration enables it
to obtain a better fitness but it affects the speed of
processing. In Table 2, the results shown that the
overall approximation using SA is better compare to
Maxsurf because the maximum error less compare to
Maxsurf.
Table 3. Comparison of processing speed with
Maxsurf
Ship name

)2
40m btv
Fire fighting
Fishing vessel
Yacht

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

SA

Processing speed
(hh:mm:ss:ms)
Proposed
Maxsurf
Method (SA)
00:00:15:2
00:00:03:6
00:00:03:9
00:00:03:0
00:00:02:0
00:00:01:0
00:00:23:2
00:00:03:8

There are also limitations of the SA approach.
Sometimes the cooling process of SA to obtain the
“equilibrium” state (RMS error less than 0.005) make a
longer processing time. It really depends because the
selection of control points is by random. Therefore the
processing time may differ if run at different time even
thou the parameters are the same. The comparison of
processing speed with Maxsurf is shown in Table 3.

5. Conclusion
There are some constraints in this research. One of
them is that there is no researches that really evaluate
on parameterize curves and surfaces method on ship
hull thoroughly. So it is hard to compare the usage of
NURBS on ship hull with other parameterize method
like parabolic blending, Bezier, B-spline, etc. What is
known is that NURBS is the best available method as it
is state in [6] that it is the dominant mathematical
technique available and [1] standard of computer
modeling for many industries. Other constraints are
unable to obtained journals or papers from conferences
or symposiums that might be useful for this research.
The main objective of this research is to reconstruct
the ship definition surfaces accurately using NURBS.
The surface fitness of the ship hull is taken more
consideration compare to the speed of processing and
the fairness. This development of this research may
also be a contribution to the local naval architecture
field. This may also encourage other local software
developers to produce local software which are more
economical and also meet the local needs. However for
future works, an approach to improve the speed of
processing and also fairness may be done to improve
the ship hull surface.

Reference
[1] Alexanov A. 2003. Generalize Some Practical Principles
of Ship Modeling. Steelcad Consultantas AS Norway.
[2] Aszodi B., Czuczor S. and Szirmay-Kalos L. 2004. Nurbs
Fairing by Knot Vector Optimization. Journal of WSCG.
Vol. 12, No. 1-3., ISSN 1213-6972.
[3] Dimas E. and Briassoulis D. 1999. 3D geometric
modelling based on NURBS: a review. Advances in
Engineering Software. 30: 741-751.
[4] Fisher J., Lowther J. and Shene CK. 2004. If You Know
B-Spline Well, You Also Know NURBS! SIGCSE 2004.
343-347.
[5] Haupt RL. and Haupt SE. 2004. Practical Genetic
Algorithm. John Wiley & Sons Inc. Hoboken, New Jersey,
US.
[6] Hollister SM. 1997. The Dirty Little Secrets of Hull
Design by Computer, New Wave Systems Inc.
[7] Piegl L. 1991. On NURBS, a survey. IEEE Computer
Graphics and Applications. 11(1): 55–71.
[8] Piegl. L. and Tiller. W. 1995. The NURBS Book.
Springer-Verlag, New York.
[9] Piegl. L. and Tiller. W. 1996. Algorithm for
approximating NURBS skinning. Computer Aided Design.
28(9): 699–706.
[10] Sarkar B. and Menq CH. 1991. Parameter optimisation
in approximating curves and surfaces to measurement data.
Computer Aided Geometric Design. 8: 267–290.
[11] http://boatdesign.net/forums/showthread.php?t=9924
[12] http://boatdesign.net/forums/showthread.php?t=82

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

