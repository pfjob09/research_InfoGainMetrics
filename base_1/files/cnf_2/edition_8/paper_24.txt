Volume 27 (2008), Number 2

EUROGRAPHICS 2008 / G. Drettakis and R. Scopigno
(Guest Editors)

Fast Force Field Approximation and its Application to
Skeletonization of Discrete 3D Objects
D. Brunner and G. Brunnett
Chemnitz University of Technology, Germany

Abstract
In this paper we present a novel method to approximate the force field of a discrete 3d object with a time complexity
that is linear in the number of voxels. We define a rule, similar to the distance transform, to propagate forces
associated with boundary points into the interior of the object. The result of this propagation depends on the
order in which the points of the object are processed. Therefore we analyze how to obtain an order-invariant
approximation formula. With the resulting formula it becomes possible to approximate the force field and to use
its features for a fast and topology preserving skeletonization. We use a thinning strategy on the body-centered
cubic lattice to compute the skeleton and ensure that critical points of the force field are not removed. This leads
to improved skeletons with respect to the properties of centeredness and rotational invariance.
Categories and Subject Descriptors (according to ACM CCS): I.3.5 [Computational Geometry and Object Modeling]: Physically based modeling

1. Introduction
To define a scalar or vector-valued field based on the geometry of a 3d object is an idea that has been successfully applied in different areas of computer graphics. Such fields are
used to compute 1d skeletons [CSYB05] which are important tools for applications as mesh decomposition [BB04],
shape matching [BI04], and animation [YBS03]. Shape associated fields are also used for shape deformation [vFTS06]
and collision detection [HA92].
In this paper we consider the approximation of a particular vector-valued field (the force field) and its application
to skeletonization. However, we are convinced that the presented method of fast force field approximation will have an
impact on other applications which use force fields.
According to [CM07] there are four major approaches to
skeletonize an object: thinning and boundary propagation
(e.g. [BM94]), distance field based (e.g. [WDK01]), generalfield functions (e.g. [CTK00]) and geometric (e.g. [BA92]).
If we exclude those methods that create a 2d skeleton and
join distance field and general field based methods into one
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

category “shape based fields” there remain two basic ideas
for the computation of a 1d skeleton.
Thinning algorithms iteratively delete boundary points
from a discretized object until a curve-like skeleton remains.
Thinning algorithms have the advantage of being extremely
fast and moreover the topological equivalence of the original
object and the skeleton can be assured. However, it is difficult to perform the deletion uniformly from all directions
which results in a lack of centeredness of the skeleton. Also,
the result is not rotationally invariant.
Based on shape fields (as distance field or force field) it
is possible to compute rotationally invariant features of the
object that are defined as critical or extreme points of the
field. Vector-valued fields have proved to be superior to the
scalar valued distance field for two reasons. First, the set of
extreme points of the distance field (with largest minimal
distance to the background) can be a surface within the object and thus has to be post-processed to yield a 1d skeleton.
Second, for thin objects all points may have the same distance to the background.
The most prominent example of a vector-valued shape

262

D. Brunner and G. Brunnett / Fast Force Field Approximation and its Application to Skeletonization of Discrete 3D Objects

field is the force field which is defined by (1) and (2). Let
O be a discretized object, p ∈ O an interior point and b ∈ O
a border point. The repulsion r which is exerted by b on p is:
r(b, p) =

1
p−b
·
p−b
p−b

m

.

(1)

The value m is the order of the function and controls how
strongly p is influenced by remote points. The overall force
f on p due to all nB border points bi is then given by:
nB

f (p) =

∑ r(bi , p).

(2)

i=1

A critical point p of a vector field f is defined as the
point p where f (p) = 0 holds. Connecting the critical points
of the force field along field lines results in skeletons that
are rotationally invariant and extraordinarily robust against
noise in the data. Furthermore, the definition of hierarchical
skeletons is possible. However, this method is computationally very expensive. This drawback restricts the resolution
on which the skeletons can be computed and thus limits the
detailedness that can be achieved.
The contribution of this paper is twofold. First we will
present a method that provides a good approximation of the
force field in linear time with respect to the number of lattice
points. Second we will show how the ideas of thinning and
force field based skeletonization can be combined into one
method that has the advantages of both methods.
The layout of this paper is as follows. Section 2 and 3
summarize related work and introduce basic definitions and
notations. In section 4 we will first remind the reader of
the distance transform which provides the basic idea of our
method. This is to propagate the values of the field from
points close to the background (i.e. border points) towards
the interior. In contrast to the distance transform that is based
on a minimum operation we define a propagation rule that
takes care of the vector-values of the field. The result of this
propagation depends on the order in which the points of the
object are processed. Therefore we analyze how to obtain an
order-invariant approximation formula. For a chosen traversal order (i, j, k) the set of boundary points that influence
the force of a particular point p of the object can be described by a spatial region Ri jk . The geometries of these regions are characterized both for the Cartesian and the bodycentered cubic lattice (bcc lattice). We show that the bcc lattice is more appropriated for the force field approximation
for the following reason. The regions that are obtained for
the bcc lattice can be combined in such a way that the 3d
Euclidian space E3 is uniformly covered. This means that
(besides points belonging to a common face of two regions)
all boundary points belong to the same number of regions.
Thus, it is possible by combining different traversals to derive an approximation formula with the property that the
effect of each boundary point (besides the special ones) is
considered equally often in the computation of the repulsive

force f (p) for an object point p. We also show that such
covering does not exist for the Cartesian lattice. Our results
on different objects clearly show that our method approximates the force field with high accuracy with respect to the
deviation of angles and the position of critical points.
In section 5 we propose a new skeletonization method that
combines the advantages of thinning and force field based
skeletonization. For this we use a variant of the topological
invariant thinning algorithm on the bcc lattice [BBS06]. Into
this thinning method we introduce the additional condition
that critical points of the force field are not removed. This
approach leads to skeletons with improved centeredness and
rotational invariance.
2. Related work
An exhaustive survey of methods to compute curve skeletons
is given in [CM07]. Most of these methods require the previous transformation of the polygonal surface mesh into a volumetric representation on a lattice. This discretization step
is extensively described in [WME03] especially on common
sampling lattices.
Among the approaches to compute a skeleton only thinning algorithms preserve the topology. For this property to
be fulfilled the original object and the skeleton must have
the same number of connected components, tunnels and cavities [KR89]. Thinning algorithms iteratively delete points
from a discretized object that is given as a subset of some lattice. In this process, it is ensured that the resulting point set is
topologically equivalent to the original object. It is common
to call a point simple if its removal does not change the topology of the discretized object. An efficient thinning approach
achieved by parallelization has been suggested by Tsao and
Fu [TF81]. Bertrand and Malandain proved that conditions
for the simplicity of a point can be formulated that involve
only the local neighborhood of the point [BM92]. This criterion has been generalized to bcc lattices by Strand and Brunner [SB06]. An efficient parallel thinning strategy has been
developed [BBS06].
Another important class of skeletonization methods rely
on the definition of a field associated with the shape of an object. Distance fields on the Cartesian lattice have been used
in skeletonization by [BNdBS00], for an application on the
bcc lattices see [BBS06]. These approaches have been generalized to more general fields [CTK00]. A widely used variant
is the force field. The computation of the repulsive force for
all object points results in a 3d vector field. Within this field
critical points and saddle points can be identified and in a
post-process be connected to a skeleton. This is for instance
done by a so-called force following algorithm [CSYB05].
In [BST05] a vector field is obtained by computing gradients from the distance field. The authors of this paper admit
that this method works well only for tube-shaped objects.
An alternative definition of the force field includes a visc 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

D. Brunner and G. Brunnett / Fast Force Field Approximation and its Application to Skeletonization of Discrete 3D Objects

ibility term that suppresses the effects of border points on
p that are not visible from p. However, the computation of
visibility is so expensive that this approach is not feasable
without limiting the number of border points considered
[WML∗ 03, LWM∗ 03].
Force fields have also been considered in applications that
do not involve skeletonization. In [HA92] repulsive forces
have been used to prevent collisions. Another very newsworthy work presents a vector field based approach for shape
deformation [vFTS06].
For the solution of n-body simulations fast summation
methods have been developed. Two of the most well-known
are the Barnes-Hut algorithm [BH86] and the Fast Multipole Algorithm (FMA) [GR87]. Both approaches belong to
the family of Tree Code algorithms and have (besides special cases) a complexity of O(n log n). It seems possible to
modify these methods for the computation of force fields.
This has not been done because of the known superlinear
compexity.

3. Basic definitions and notations
We consider discretized objects on the basis of two different
lattice structures. The first is the Cartesian lattice Z3 and the
second the bcc lattice. The coordinates of a lattice point p ∈
Z3 are denoted by pi , i ∈ {1, 2, 3}. For the Cartesian lattice
we consider the N26 −neighborhood (see fig. 1(d)) which is
defined by
N26 (p) = q ∈ Z3 : max

3

|pi − qi |

i=1

=1 .

(3)

The bcc lattice B is defined as the subset of Z3 that consists
of all points having either only even or only odd coordinates:
B = p ∈ Z3 : p1 ≡ p2 ≡ p3

(mod 2) .

(4)

For p ∈ B we consider the N14 −neighborhood (fig. 1)
which is the union of six neighbors of p with equal (N6 )
and eight neighbors of p with unequal parity (N8 ):
3

3

i=1

i=1

N14 (p) = q ∈ B : ∑ |pi − qi | = 2 ∨ ∑ |pi − qi | = 3 . (5)
Note that the point p itself does not belong to the neighborhood (neither in N14 (p) nor N26 (p)).
The volumetric elements (usually called voxels) used to
tessellate E3 are defined as the Voronoi cells of the lattice
points. For each point we associate a Voronoi cell. In case
of the bcc lattice these cells are truncated octahedra whereas
for the Cartesian lattice these cells are cubes.
A 3d binary image is a discrete box of size n1 × n2 ×
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

(a) N6

(b) N8

(c) N14

263

(d) N26

Figure 1: The neighborhoods of the bcc lattice (a)-(c) and
of the Cartesian lattice (d).
n3 (ni ∈ N)
B = p ∈ B : 1 ≤ p1 ≤ n1 , 1 ≤ p2 ≤ n2 , 1 ≤ p3 ≤ n3
(6)
together with a map i : B → {0, 1} . The points p ∈ B with
i(p) = 0 form the background and with i(p) = 1 the foreground of the binary image. In our application the points of
the foreground belong to a single object O. The complementary set B \ O is denoted by O and called background.
In the following sections we will consider algorithms that
involve a traversal over all points of B. To denote the traversal order (i.e. the order in which the directions of the volume
are processed) we introduce the following notation. A triple
(i, j, k) with i, j, k ∈ {1, 2, 3} and i = j, j = k, i = k is used to
specify the traversal order expressed by the following pseudocode:
for pk = 1 to nk
for p j = 1 to n j
for pi = 1 to ni
if pi ≡ p j ≡ pk (mod 2)
inspect p

In addition we use a minus sign to express that a direction is
processed in reverse order. E.g. (−1, 2, 3) denotes the traversal order
for p3 = 1 to n3
for p2 = 1 to n2
for p1 = n1 downto 1
if p1 ≡ p2 ≡ p3 (mod 2)
inspect p

Considering the possibility of reversing the orientation of
a direction there are 48 different traversal orders of the
form (i, j, k) with i, j, k ∈ {1, −1, 2, −2, 3, −3} and i = j, j =
k, k = i. The set of these traversal orders is denoted by I.
A point set P ⊂ Q ⊂ B is a connected component of Q, if
for any two points p, q ∈ P, a sequence of points p1 , ..., pm ∈
P exists such that p1 = p, pm = q and pi+1 ∈ N14 (pi ) for
1 ≤ i < m. A connected component P ⊂ Q ⊂ B is maximal
if there is no point r in Q such P ∪ {r} is a connected component of Q. C(Q) denotes the number of maximal connected
components of Q. We distinguish the number of maximal
connected foreground components of Q ⊂ B: C(Q ∩ O) and
the number of maximal connected background components:
C(Q ∩ O).

264

D. Brunner and G. Brunnett / Fast Force Field Approximation and its Application to Skeletonization of Discrete 3D Objects

4. Force Field Approximation
4.1. Distance transform on the bcc lattice
Let O be a discrete 3D object. The process of computing the
closest distance d(p) to the background for any point p ∈ O
is called distance transform. The basic idea of this approximation is to propagate estimated distance values of points
close to the background of the object towards the interior.
This idea can be formalized for a bcc lattice (and similar for
the Cartesian) as follows. Suppose that for all q ∈ N14 (p) the
minimal distance d(q) of q to the boundary is known. Then
a reasonable propagation rule is given by
d(p) =

min {d(q) + p − q }.

q∈N14 (p)

(7)

However, since the distance values are obtained successively, only for a subset M(p) ⊂ N14 (p) the distance values
are available. In fact, this subset M(p) depends on the chosen traversal order (see 4.2).
For the distance transform this problem can be overcome
by traversing twice over the digital image B. In this way it
can be achieved that the computation of d(p) involves the
distances of all points in N14 (p). For both traversals (forward
and backward pass) the distances are initialized as

d f w (p) = dbw (p) =

∞
0

p∈O
.
p∈O

(8)

min {d(q) + p − q },

q∈M f w (p)

(9)

where M f w (p) is the subset of points in N14 (p) already encountered in the traversal. M f w (p) will be called traversal
mask.
For the backward pass the order in which the three directions are processed is kept the same but the orientation of
these directions are reversed. I.e. if (i, j, k) is the traversal
order of the forward pass, then (−i, − j, −k) is the traversal
order of the backward pass. The distances dbw (p) are updated according to
dbw (p) =

min {d(q) + p − q }.

q∈Mbw (p)

(10)

The final approximation of the distance field is computed
from
d(p) = min{d f w (p), dbw (p)}

(b)

(11)

in the backward pass.
4.2. The propagation rule for the force field
approximation
To approximate the force field we proceed in a similar way.
We determine the force f (p) of a point p ∈ O with respect

(c)

Figure 2: Calculation of the force for neighboring points in
the background (a): The vectors are given by the difference
between p and its respective neighbor (b). Summing these
vectors results in the local repelling force (c).

(a)

(b)

(c)

Figure 3: Propagating the force from neighboring points
in the foreground. (a): The already computed forces of the
neighbors (b): will be inversely weighted by the distances to
the background, (c): and added.
to a particular traversal order by propagating values from
the boundary towards the interior. May this order be given
by (i, j, k) and let the iteration mask Mi jk (p) be the set that
contains the N14 -neighbors of p which either belong to the
background or have already been visited during the traversal
process (so that the force at these points is determined).
For a background point q ∈ Mi jk (p) ∩ O we define the
repulsion r(q, p) by
r(q, p) =

Then for each p d f w (p) is updated according to
d f w (p) =

(a)

p−q
p−q

(12)

which is necessary to initialize the traversal. Fig. 2 illustrates
this definition for the 2d case where N(p) contains six points
and Mi j (p) contains only three points. Note that due to this
definition the boundary points obtain a force vector which
is a slight difference to the original definition of the force
field (1), (2) where only interior points are considered. For
q ∈ Mi jk (p) ∩ O we define
r(q, p) =

fi jk (q)
1
·
(di jk (q))m
fi jk (q)

(13)

where di jk (q) is the value of the approximate distance transform pass with respect to the traversal order (i, j, k) and m is
the damping exponent which determines the influence of the
border region (see fig. 3).
The force fi jk (p) on p with respect to the traversal order
(i, j, k) is then defined by
fi jk (p) =

∑

r(q, p).

(14)

q∈Mi jk (p)

Clearly, the overall force vector f (p) can not be well approximated by (14) because fi jk (p) does not include the effect of all boundary points on p. Therefore we have to investigate how to combine the result of different traversals into a
reasonable approximation formula.
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

D. Brunner and G. Brunnett / Fast Force Field Approximation and its Application to Skeletonization of Discrete 3D Objects

4.3. Regions of influence
In this section we will analyze which boundary points are included in the computation of fi jk (p) for a particular traversal
order (i, j, k).
We begin by describing the structure of the mask Miαjk for
the Cartesian lattice with α = 26 and for the bcc lattice with
α = 14. Irrespectively of the lattice these masks are given by
three disjoint subsets
˙ αj (p)∪M
˙ kα (p)
Miαjk (p) = Miα (p)∪M

(15)

Rαi jk (p) that depends on the traversal order. Rαi jk (p) is called
the region of influence on p for (i, j, k). In the following we
will drop the superscript α in Miαjk (p) and Rαi jk (p), if a formula is valid irrespectively of the lattice.
The shape of Ri jk (p) is determined by the combination of
masks in the traversal process and can be obtained as follows. Initialize
R0i jk (p) = Mi jk (p).

Mkα (p) =

q:

(16)

Then

with q ∈ Nα (p) and

n
Rn+1
i jk (p) = Ri jk (p) ∪

k

k

q <p
q|k| > p|k|
j

j

M αj (p) =

q:

q <p
q| j| > p| j|

Miα (p) =

q:

qi < pi
q|i| > p|i|

k>0
k<0

265

Mi jk (q)

(17)

q∈Rnijk (p)

,
and

j>0 k
, q = pk ,
j<0
i>0 j
, q = p j , qk = pk .
i<0

Ri jk (p) = lim Rnijk (p).

(18)

n→∞

This process is illustrated in fig. 5 for a planar Cartesian lattice.

The fig. 4 illustrates the shapes of both masks Mi26jk (p) and

Mi14jk (p)

and their submask.
(a) R012 (p)

(b) R112 (p)

(c) R212 (p)

(d) R312 (p)

Figure 5: Definition of the region of influence.
(a) Mi26jk (p)

(b) Mk26 (p)

(c) M 26
j (p)

(d) Mi26 (p)

(e) Mi14jk (p)

(f) Mk14 (p)

(g) M 14
j (p)

(h) Mi14 (p)

Figure 4: The masks and their submasks for the Cartesian
(a)-(d) and bcc lattice (e)-(h) are shown .
Analyzing the possible shapes of Mi14jk (p) we find
Lemma 1 For all traversal orders (i, j, k) ∈ I: Mi14jk (p) =
M 14
jik (p).
Proof For the bcc lattice M 14
j (p) consists only of one point q
which has the additional property that qi = pi . Thus for this
lattice the definition of Mi14jk (p) is symmetric with respect to
i and j.
Lemma 1 has the important consequence that in the case
of the bcc lattice there are only 24 different masks whereas
for the Cartesian lattice there are 48 different masks.
For a chosen traversal order (i, j, k) the computation of
fi jk (p), p ∈ O, involves only the effect of a subset of the
boundary points on p. This subset can be described as that
part of the boundary that is contained within a spatial region
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Definition 1 e1 = (1, 0, 0)T , e2 = (0, 1, 0)T , and e3 =
(0, 0, 1)T denote the canonical basis vectors of E3 . We denote opposite directions by defining e−i := −ei for i =
1, 2, 3.
Lemma 2 For any traversal order (i, j, k) ∈ I the region
Ri jk (p) on p is given by
Ri jk (p) = p + λ1 ai + λ2 b j + λ3 ck

(19)

with λ1 , λ2 , λ3 ∈ N ∪ {0}. For the Cartesian lattice the three
vectors are given by:
ai = −ei ,

b j = −e j + ei ,

ck = −ek + e j + ei

(20)

while for the bcc lattice (19) holds with
ai = −2ei ,

b j = −2e j ,

ck = −ek + e j + ei .

(21)

Proof For n = 0 we have for the bcc lattice
R0i jk (p) = Mi jk (p) = p + σ1 ai + σ2 b j + σ3 ck

(22)

with σ1 , σ2 , σ3 ∈ {0, 1} except for σ1 = 1 ∧ σ2 = 1 ∧ σ3 = 0.
For the Cartesian lattice R0i jk (p) can be similar constructed.
Now, we assume that
Rnijk (p) = p + λ1 ai + λ2 b j + λ3 ck

(23)

holds. From (17) it follows that any point q ∈ Rn+1
i jk (p)

266

D. Brunner and G. Brunnett / Fast Force Field Approximation and its Application to Skeletonization of Discrete 3D Objects

(a)

(a)

(b)

(c)

(b)

Figure 7: Overlapping regions.

Figure 6: Region of influence in respect of the forward pass
(a) and both, the forward and backward pass (b).
and q ∈
/ Rnijk (p) must be in the mask Mi jk (r) for some
n
r ∈ Ri jk (p), i.e. q is of the form
q = r + σ1 a1 + σ2 b2 + σ3 c3 .

(24)

The induction assumption applied to r yields

scheme used in the approximation of the distance field which
consists of only two traversals with directions (i, j, k) and
(−i, − j, −k) does not form a uniform polyhedral partition
because E3 is not covered (see fig. 6(b)). This does not cause
a problem because the propagation rule for the approximated
distance field is based on a minimum-operation.

(25)

Since λi + σi ∈ N ∪ {0} this concludes the proof.

As described in Lemma 2 the region of influence R14
i jk for
the bcc lattice is a polyhedron that can be described as an
extended octant with two skew faces. Therefore it is not surprising that eight of such regions are needed to cover E3 .

Fig. 6(a) shows the region R123 (p) for the bcc lattice
spanned by three vectors. Note that there are 24 different
regions of influence for the bcc lattice while there are 48 different such regions for the Cartesian lattice.

For example a covering of E3 can be obtained in the following way. Choose a traversal order (l, m, n) ∈ I. Then form
all possible traversal orders by varying the orientations of
these directions:

q = p + (λ1 + σ1 )a1 + (λ2 + σ2 )b2 + (λ3 + σ3 )c3 .

Ilmn = (l, m, n), (l, m, −n), (l, −m, n), (l, −m, −n),
4.4. The traversal scheme
In this section we will derive an appropriate traversal scheme
for the propagation rule from section 4.2. For this we consider a convex object O. Since any point p ∈ O is visible
from any boundary point of O we require that the computation of f (p) includes the effect of all boundary points on p.
Therefore the traversal scheme must combine regions of influence such that the whole space E3 is covered. Furthermore
the coverage should be such that the effect of each boundary
point on p should be considered equally often. This requirement can be expressed with the help of the following definition.
Definition 2 A uniform polyhedral partition of E3 is a set of
m
3
polyhedra Π= {Πi }m
i=1 such that i=1 Πi = E and for any
3
q ∈ E not contained in a face of an element of Π the number
nΠ (q) of polyhedra of Π that contain q in their interior is
independent of q. nΠ is called the multiplicity of Π.
Obviously any such partition must contain unbounded
polyhedra to cover E3 .
In the above definition we use the interior of the polyhedra because we tolerate that polyhedra have common faces.
Thus boundary points that belong to a common face of two
polyhedra will contribute more often than the multiplicity
nΠ to the computation of f (p). Since the influence of these
special points on the result of f (p) is very small we refrain
from computing these points and correcting the result.
We will now require that the regions of influence created by the traversal scheme form a uniform polyhedral partition of E3 for any point p ∈ O. Note that the traversal

(26)

(−l, m, n), (−l, m, −n), (−l, −m, n), (−l, −m, −n) .
Now
R14
i jk

Rlmn =

(27)

(i, j,k)∈Ilmn

forms a non-uniform coverage of E3 . To illustrate the non14
uniformity we consider I123 . R14
123 and R1−23 overlap in a
wedge-shaped spatial region as illustrated in fig. 7(a). The
14
14
14
four regions R14
123 , R1−23 , R−123 and R−1−23 overlap in the
set with a shape of two orthogonal wedges (shown in fig.
7(b)). Fig. 7(c) shows the overlap of the eight regions of
R123 . These figures illustrate that if all directions of I123
are used in the traversal scheme to compute f (p) the corresponding regions of influence form a non-uniform partition
of E3 . Due to this non-uniformity there are points within O
that contribute four times to the computation of f (p) (these
points lie in the pyramid formed by two intersecting wedges)
while other points contribute twice (they lie in a wedge but
outside of the pyramid) or once (if they do not lie within a
wedge).

Figure 8: Decomposition of one influence region (R14 ).

c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

267

D. Brunner and G. Brunnett / Fast Force Field Approximation and its Application to Skeletonization of Discrete 3D Objects

We conclude that the traversal scheme consisting of all
traversal orders of Ilmn is not appropriate for the approximation of the force field. However, an appropriate traversal scheme can obtained by using two further index sets
Inlm , Imnl and two corresponding sets of regions Rnlm , Rmnl :
ˆ = Rlmn ∪ Rnlm ∪ Rmnl corTheorem 1 The 24 regions of R
responding to traversal orders Iˆ = Ilmn ∪ Inlm ∪ Imnl form a
uniform partition of multiplicity 7 of E3 .

(a) Wlmn

(b) Wnlm

(c) Wlmn ∪Wnlm

Figure 9: Four wedges cover the E3 uniformely.

Proof Let (i, j, k) ∈ Iˆ be an arbitrary traversal order. An inˆ
fluence region R14
i jk ∈ R spanned by the vectors ai , b j , ck according to lemma 2 can be separated into (see fig. 8)
R14
i jk = Oi jk ∪Ui jk ∪Vi jk

(28)

with the octant Oi jk spanned by the vectors −2ei , −2e j
and 2(ei × e j ) = 2 det(ei , e j , ek )ek . Ui jk is spanned by the
vectors ai , ck , 2(ei × e j ) and Vi jk is spanned by the vectors
b j , ck , 2(ei × e j ). More precisely any point q ∈ Ui jk (p) is of
the form
q =p − 2λ1 ei − 2λ2 det(ei , e j , ek )ek

(d)

and any point q ∈ Vi jk (p)
(30)

+ λ3 (−ek − e j + ei ).
Now we combine all regions Ui jk (p) within Rlmn into one
set
Wlmn (p) =

Ui jk (p).

of (b) wedges
Rnlm

of (c) wedges
Rmnl

of

(29)

+ λ3 (−ek − e j + ei ),

q =p − 2λ1 e j − 2λ2 det(ei , e j , ek )ek

(a) wedges
Rlmn

(31)

(e)

(f)

Figure 10: The overlapping regions (a)-(c) are rearranged
to illustrate the uniform covering of E3 (d)-(f).
twelve wedges in E3 (shown in 10(a)-10(c)) can be combined to a partition of E3 of multiplicity 1. Thus any point in
E3 is contained in one region with single and in three regions
with double influence which leads to the multiplicity of 7.

(i, j,k)∈Ilmn

Any element q of Wlmn (p) can be represented in the form
q = p + 2λ1 ei + λ2 (−ek − e j ) + λ3 (−ek + e j )

(32)

with λ1 ∈ Z and λ2 , λ3 ∈ N ∪ {0}. From this formula
one sees that Wlmn (p) consists of two (unbounded) wedgeshaped regions as shown in fig. 9(a). By combining the V parts of Rnlm we obtain a set
Wnlm (p) =

Vi jk (p).

Based on theorem 1 we propose to compute the force field
in p as
f (p) =

(33)

(i, j,k)∈Inlm

Any element q of Wnlm (p) can be represented in the form
q = p + 2λ1 ei + λ2 (−e j − ek ) + λ3 (−e j + ek )

As an important property of the partition it can be shown
ˆ
that there is no uniform partition of E3 build from sets R,
that consists of less than 24 regions (see [BB07]).

(34)

with λ1 ∈ Z and λ2 , λ3 ∈ N ∪ {0}. Combining (32) and (34)
one see that Wlmn (p) ∪Wnlm (p) = E3 (fig. 9). Note that this
partition of E3 is of multiplicity 2 because each wedge is an
intersection of two sets.
In the same way it can be shown that the remaining sets Ui jk
ˆ can be combined into two further partitions of
and Vi jk of R
3
E each of multiplicity 2. Fig. 10 illustrates this rearrangement of wedges by showing the wedges of Rnlm , Rmnl and
then the resulting rearrangements.
In a similar way can be shown that the complements of the
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

fi jk (p)
1
·
m
(d
(p))
fi jk (p)
i
jk
(i, j,k)∈Iˆ

∑

(35)

with Iˆ = Ilmn ∪ Inlm ∪ Imnl , fi jk (p) according to (14), and
di jk (p) =

min {di jk (q) + p − q }.

q∈Mi jk (p)

(36)

In our method we use the bcc lattice not only because it
reduces the number of regions that have to be considered.
More important is the fact that an analogous construction to
theorem 1 using the Cartesian lattice does not yield a uniform polyhedral partition of E3 (established in [BB07]).
4.5. Non-convex objects
In this section we consider the properties of our method for
the case of non-convex objects. As an example we use the

268

D. Brunner and G. Brunnett / Fast Force Field Approximation and its Application to Skeletonization of Discrete 3D Objects

object of genus 3 shown as cross section in fig. 11. For the
point p marked by a red circle the region of influence on p
for a particular traversal order is emphasized by arrows of a
darker color.
It can be observed that this region contains points that
are not visible from p. This is an unwanted but unavoidable
property because we require linear time complexity for our
method. However, it can also be observed that many points
which are not visible from p have been removed from the
original region of influence.

satisfy two conditions. First, it has to be simple, i.e. it can be
removed without changing the topology of the object. It has
been proved in [SB06] that for the bcc lattice the simplicity
of p ∈ O ⊂ B is equivalent to

Condition 1: C(N14 (p) ∩ O) = C(N14 (p) ∩ O) = 1.
This condition implies that a removable point is a border
point, i.e. it has at least one common face with the background. Furthermore it ensures that the deletion of p neither
disconnects the local foreground nor the local background.
To create curve-like skeletons it is necessary that those
points with only one neighbor in the object (end points) are
not removed. This condition can be formulated as

Condition 2: |N14 (p) ∩ O| > 1,
where |N14 (p) ∩ O| denotes the number of foreground
neighbors for p. Without this condition branches of the
skeleton would be completely removed.

Figure 11: Region of influence on a particular point in the
Cartesian lattice relating to one traversal order.
This built-in filter function of the method gives rise to
the question whether there may be any visible points among
those that do not have an influence on p. We will explain
why this can not happen.
Let O be a possibly non-convex object, p an interior point
of O and b a boundary point of O. Since the regions of influence on p cover E3 b must lie in at least one such region Ri jk .
Since O is a discrete object visibility between p and b means
that all volume elements qi , i = 1, ..., m, q1 = p, qm = b traversed by the line segment pb belong to O. Since Ri jk is
convex in this extended sense the volume elements qi of pb
belong to Ri jk . The fact that the sequence of qi forms a discrete line segment implies the relation qi+1 ∈ Mi jk (qi ) for
i = 1, ..., m − 1 which means that b has an effect on p.
Thus, in our method the influence of any border point that
sees p is considered in the computation of f (p). Our experiments showed that our method applied without modification
to non-convex objects yield good results.
5. Integrating force field features into thinning
The force field approximation is performed on an object that
has been discretized on the bcc lattice. Since we want to
integrate features of the force field into the thinning process, the thinning must also be performed on this lattice.
In [BBS06] the authors have presented an efficient parallel
thinning method on the bcc lattice. In this method a point is
defined to be removable if four conditions are satisfied. Two
of these conditions are needed only because the points are
processed in parallel. To explain the idea of the new method
more clearly we will assume that during thinning the points
are sequentially processed. Then a removable point has to

It is common in thinning based skeletonization to define
further conditions that intend to improve the quality of the
skeleton. However, it is difficult to come up with conditions
that are effective and can also be efficiently evaluated. We
will use the critical points of the approximated force field
to improve the quality of the skeleton (rotational invariance
and centeredness). We define

Condition 3: p ∈ O is removed only if the Voronoi
region v(p) does not contain a critical point of the
force field.
p is a critical point of the force field if f (p) = 0. In
[GLL91] a heuristic is introduced for the identification of
zero vectors within a lattice structure. This is done by analyzing small neighborhoods. If the signs of all three components (x−, y−, z−components of the vector field evaluated
at points in the neighborhood) change within this neighborhood a region containing a critical point is found. Through
subdividing that region, the actual position of the critical
point is approximated. We apply this heuristic for the bcc
lattice in the following way: If the signs of all three vector
components of the force field change for the points in the
N14 -neighborhood of a point p, p is chosen as a representative of a region that contains a critical point.
Condition 3 can be applied in different ways. If condition 3 is simply added to the previous conditions a skeleton
results that contains the critical points. If condition 2 is replaced by condition 3 one obtains the so-called core skeleton [HH91] that has only critical points as end points. Fig.
12 illustrates the process of extracting the core skeletons
through thinning.
6. Results
To evaluate the quality of our method we computed the exact force field f for different objects and compared it to the
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

D. Brunner and G. Brunnett / Fast Force Field Approximation and its Application to Skeletonization of Discrete 3D Objects

269

Figure 12: The discretized object, the critical points, and the
skeleton are shown.

Figure 15: Comparison of run times for the force field computation.

(a)

(b)

(c)

Figure 13: Comparison for the Beethoven model: (b) - the
force field according to (2); (c) - the approximation based on
(35).
approximation fapprox (see for instance fig. 13 and 14). To
measure the deviation between the fields we used the angle
between f (p) and fapprox (p) for each p. The deviation in
length was not considered because this property is irrelevant
for the skeletonization application.
The expected value µ is the sum of all angles for all interior points p ∈ O, i.e. ∀q ∈ N14 (p) is q ∈ O. Furthermore, we
consider the standard deviation to obtain a better evaluation
of our results. We obtained for diverse objects on a moderate
resolution (1003 ) expected values between µ = 4.3◦ and 7.8◦ .
The standard deviation ranges within 2.5◦ and 9.5◦ .
Besides the good quality the computational complexity is
particularly interesting: The diagrams in fig. 15 show the run
times for three objects with different shapes. The quadratic
complexity of the conventional and the linear complexity of
the approximation is clearly obvious. The thinning process
itself has also a linear complexity and needs e.g. for 1 million
object points about a half second (see [BBS06]).

(a)

(b)

Figure 14: Comparison for the non-convex holes model. (a)
shows the approximated and (b) the original force field for
m = 5. The ascertained critical points are emphasized.

c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Figure 17: Rotationally invariant thinning by the use of critical points.
The thinning on the basis of critical points generates
skeletons which are properly centered within the object, preserve the topology, and are rotationally invariant (up to aliasing effects on the lattice) (fig. 16 and 17).

References
[BA92] B RANDT J. W., A LGAZI V. R.: Continuous
skeleton computation by voronoi diagram. CVGIP: Image Underst. 55, 3 (1992), 329–338.
[BB04] B RUNNER D., B RUNNETT G.: Mesh segmentation using the object skeleton graph. In Proc. of the
7th IASTED International Conference on Comp. Graphics and Imaging (2004), ACTA Press, pp. 48–55.
[BB07] B RUNNER D., B RUNNETT G.: High Quality
Force Field Approximation in Linear Time and its Application to Skeletonization. Tech. rep., Chemnitz University
of Technology, 2007.
[BBS06] B RUNNER D., B RUNNETT G., S TRAND R.: A
High-Performance Parallel Thinning Approach Using a

270

D. Brunner and G. Brunnett / Fast Force Field Approximation and its Application to Skeletonization of Discrete 3D Objects

Figure 16: Thinning results basing on critical points.
Non-cubic Grid Structure. Tech. rep., Chemnitz University of Technology, 2006.
[BH86] BARNES J., H UT P.: A hierarchical O(n log n)
force-calculation algorithm. Nature 324, 4 (1986), 446–
449.
[BI04] B RENNECKE A., I SENBERG T.: 3d shape matching using skeleton graphs. In Proc. Simulation and Visualization (Magdeburg, Germany, 2004), pp. 299–310.
[BM92] B ERTRAND G., M ALANDAIN G.: A new topological classification of points in 3d images. In ECCV
’92: Proc. of the 2nd European Conference on Comp. Vision (UK, 1992), Springer-Verlag, pp. 710–714.
[BM94] B ERTRAND G., M ALANDAIN G.: A new characterization of three-dimensional simple points. Pattern
Recogn. Lett. 15, 2 (1994), 169–175.
[BNdBS00] B ORGEFORS G., N YSTRÖM I., DI BAJA
G. S., S VENSSON S.: Simplification of 3d skeletons using distance information. In Vision Geometry IX, volume
4117 of Proc. of SPIE (CA, USA, 2000), pp. 300–309.
[BST05] B OUIX S., S IDDIQI K., TANNENBAUM A.: Flux
driven automatic centerline extraction. Medical Image
Analysis 9, 3 (2005), 209–221.
[CM07] C ORNEA N. D., M IN P.: Curve-skeleton properties, applications, and algorithms. IEEE Transactions on
Visualization and Computer Graphics 13, 3 (2007), 530–
548. Member-Deborah Silver.
C ORNEA N. D., S ILVER D., Y UAN X., BAL R.: Computing hierarchical curveskeletons of 3d objects. The Visual Computer 21, 11
(2005), 945–955.

[CSYB05]

ASUBRAMANIAN

[CTK00] C HUANG J.-H., T SAI C.-H., KO M.-C.: Skeletonization of three-dimensional object using generalized
potential field. IEEE Trans. Pattern Anal. Mach. Intell.
22, 11 (2000), 1241–1251.
[GLL91] G LOBUS A., L EVIT C., L ASINSKI T.: A tool
for visualizing the topology of 3d vector fields. In VIS
’91: Proc. of the 2nd conference on Visualization ’91 (CA,
USA, 1991), IEEE Comp. Society Press, pp. 33–40.
[GR87] G REENGARD L., ROKHLIN V.: A fast algorithm
for particle simulations. J. Comput. Phys. 73, 2 (1987),
325–348.

[HA92] H WANG Y. K., A HUJA N.: A potential field
approach to path planning. In IEEE Transactions on
Robotics and Automation, 8(1) (1992), pp. 23–32.
[HH91] H ELMAN J. L., H ESSELINK L.: Visualizing vector field topology in fluid flows. IEEE Comput. Graph.
Appl. 11, 3 (1991), 36–46.
[KR89] KONG T. Y., ROSENFELD A.: Digital topology:
introduction and survey. Comput. Vision Graph. Image
Process. 48, 3 (1989), 357–393.
[LWM∗ 03] L IU P.-C., W U F.-C., M A W.-C., L IANG R.H., O UHYOUNG M.: Automatic animation skeleton construction using repulsive force field. In Proc. of the 11th
Pacific Conference on Comp. Graphics and Appl. (DC,
USA, 2003), IEEE Comp. Society, p. 409.
[SB06] S TRAND R., B RUNNER D.: Simple points on the
body-centered cubic grid. Tech. Rep. 42, Centre for Image
Analysis, Uppsala University, Uppsala, Sweden, 2006.
[TF81] T SAO Y., F U K.: A parallel thinning algorithm for
3d pictures. Comp. Vision, Graphics and Image Processing (1981), 315–331.
[vFTS06] VON F UNCK W., T HEISEL H., S EIDEL H.P.: Vector field based shape deformations. ACM Trans.
Graph. 25, 3 (2006), 1118–1125.
[WDK01] WAN M., DACHILLE F., K AUFMAN A.:
Distance-field based skeletons for virtual navigation. In
VIS ’01: Proc. of the conference on Visualization ’01 (DC,
USA, 2001), IEEE Comp. Society, pp. 239–246.
[WME03] W IDJAYA H., M ÖLLER T., E NTEZARI A.:
Voxelization in common sampling lattices. In Proc. of
the 11th Pacific Conference on Comp. Graphics and Appl.
(DC, USA, 2003), IEEE Comp. Society, p. 497.
[WML∗ 03] W U F.-C., M A W.-C., L IOU P.-C., L AING
R.-H., O UHYOUNG M.: Skeleton extraction of 3d objects
with visible repulsive force. In Proc. of Comp. Graphics
Workshop 2003 (2003).
[YBS03] YOSHIZAWA S., B ELYAEV A. G., S EIDEL H.P.: Free-form skeleton-driven mesh deformations. In SM
’03: Proc. of the 8th ACM symposium on Solid modeling
and appl. (NY, USA, 2003), ACM Press, pp. 247–253.

c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

