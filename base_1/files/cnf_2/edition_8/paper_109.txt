Eurographics/ IEEE-VGTC Symposium on Visualization 2008
A. Vilanova, A. Telea, G. Scheuermann, and T. Möller
(Guest Editors)

Volume 27 (2008), Number 3

Topology-Preserving λ2-based Vortex Core Line Detection for
Flow Visualization
T. Schafhitzel1

J. E. Vollrath2

J.P. Gois3

D. Weiskopf2

A. Castelo3

T. Ertl1

1 Institute

of Visualization and Interactive Systems, Universität Stuttgart, Germany
2 VISUS, Universität Stuttgart, Germany
3 Instituto de Ciências Matemáticas e de Computação, USP, Brazil

Abstract
We propose a novel vortex core line extraction method based on the λ2 vortex region criterion in order to improve
the detection of vortex features for 3D flow visualization. The core line is defined as a curve that connects λ2
minima restricted to planes that are perpendicular to the core line. The basic algorithm consists of the following
stages: (1) λ2 field construction and isosurface extraction; (2) computation of the curve skeleton of the λ2 isosurface to build an initial prediction for the core line; (3) correction of the locations of the prediction by searching
for λ2 minima on planes perpendicular to the core line. In particular, we consider the topology of the vortex core
lines, guaranteeing the same topology as the initial curve skeleton. Furthermore, we propose a geometry-guided
definition of vortex bifurcation, which represents the split of one core line into two parts. Finally, we introduce
a user-guided approach in order to narrow down vortical regions taking into account the graph of λ2 along the
computed vortex core line. We demonstrate the effectiveness of our method by comparing our results to previous
core line detection methods with both simulated and experimental data; in particular, we show robustness of our
method for noise-affected data.
Categories and Subject Descriptors (according to ACM CCS): CCScatI.3.3Computer GraphicsPicture/Image Generation J.2 [Physical Sciences and Engineering]:

1. Introduction
One of the open challenges for flow visualization is the appropriate display of 3D flow, in particular, for unsteady and
intricate flow. Immediate, direct visualization of such input data leads to cluttered, hardly comprehensible images.
Therefore, feature extraction is instrumental for appropriate visualization because it removes unnecessary parts of
the data set to allow the user to focus on important elements. This paper focuses on vortex detection and visualization because vortices represent most important features
for many applications and they transport most of the energy
in vortical flow, strongly affecting flow evolution over time.
A fundamental issue is the lack of a unique mathematical
or physical definition of a vortex. As detailed in Section 2,
the literature provides a range of different vortex criteria and
corresponding detection algorithms, with respective advantages and disadvantages. Adopting the taxonomy of Jiang et
al. [JMT05], vortex-detection algorithms can be classified
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

according to three categories: (1) whether they detect 3D
vortex regions or 1D vortex core lines; (2) whether they are
Galilean invariant or not; (3) whether they are local or global
(i.e., whether they require operations only in the local neighborhood of a grid cell or not). Generally, 3D region-based
methods are easier to implement and more efficient, whereas
1D line-based methods have to determine vortex core lines
accurately and might be more sensitive toward noise. On the
other hand, a line-based visual representation is more concise than a 3D region and, thus, is preferable from a visualization point of view. With respect to the second category,
we only consider Galilean invariant criteria because they
are immediately applicable to moving vortices in unsteady
flows. Finally, local methods tend to be easily computed by
local operations whereas global methods typically are more
costly. However, since vortices are global features, a global
method tends to be more accurate.
The basic idea of this paper is to enrich the λ2 crite-

1024

T. Schafhitzel et al. / Topology-Preserving λ2 -based Vortex Core Line Detection for Flow Visualization

rion [JH95], which is a region-based, Galilean invariant, and
local vortex criterion, such that it allows us to construct
1D vortex core lines. In this way, λ2 serves as basis for
global, line-oriented vortex core detection. We have chosen
λ2 because it is considered by many fluid-mechanics engineers to be most effective and reliable for detecting vortices
in incompressible flows (except for very special cases with
strong axial stretching [WXY05]). Our algorithm consists
of the following stages: First, the scalar field of λ2 is constructed and the corresponding isosurface is extracted. Second, the isosurfaces are reduced to 1D representations by
skeletonization. These skeletons serve as initial prediction
of the core lines. Third, the locations of the skeleton prediction are corrected by searching for λ2 minima on planes
perpendicular to the core line.
The main contributions of this paper are: (1) We propose
a vortex core line detection method that is based on skeletonization and that makes use of a local direct search for
core line points. (2) A geometric model for vortex bifurcations, where two vortex cores merge, is introduced. (3) Vortex breaks are supported by the automatic computation of λ2
isovalues at which vortex regions separate.
Our approach is generic in the sense that it would work
with scalar fields other than λ2 , as long as vortex core lines
can be found by local extrema on planes of that scalar field.
λ2 -based vortex core line detection offers several benefits.
First, it combines the simplicity and conciseness of a vortex core line with excellent detection quality of λ2 . Second,
the core lines are guaranteed to reflect the connectedness of
the underlying λ2 isosurface: there is the same number of
connected components of core lines and isosurfaces. Furthermore, we even guarantee that the core line has the same
topology as the λ2 isosurface skeleton. Third, the core line
detection is less sensitive to noise and other fluctuations in
data values, as demonstrated by the evaluation with noisy
experimental data sets. In summary, our approach leads to a
compact and reliable presentation of the vortical structure of
flow.
2. Previous Work
Feature-based flow visualization in general and vortex detection in particular are well-investigated research fields, an
overview of which can be found in the survey articles [JH95,
PVH∗ 03]. A popular region-based, local vortex criterion is
the λ2 method by Jeong and Hussain [JH95], which is based
on the evaluation of the Jacobian of the vector field by matrix decomposition and eigenvalue computation. Related earlier methods based on the Jacobian include the Q criterion
[HWM88] and the ∆ criterion [CPC90, Dal83]. Other typical criteria use helicity or magnitude of vorticity. These criteria are the basis for a variety of vortex core extraction algorithms, including [BS95, BP02, PR99, SB94, SWH05, SH95,
TSW∗ 05]. The parallel-vectors approach [PR99] generalizes several prior extraction approaches, including [SH95].

Adopting the concept of feature flow fields [TS03], the
parallel-vectors operator can be used to trace ridge and valley lines of local criteria like λ2 from local extremum points
[SWH05]. This idea can be extended to track core lines over
time [TSW∗ 05]. Recently, Weinkauf et al. [WSTH07] have
extended this class of algorithms by proposing the coplanarvectors operator, which is applied to the extraction of cores
of swirling particle motion in transient flows. The parallelvectors/feature flow field approach and our method share the
same basic goal: extracting minimal lines of λ2 . However,
our method avoids the higher-order derivatives of the λ2
scalar field that are required by the parallel-vectors/feature
flow field approach. Furthermore, we propose a robust core
line search algorithm that guarantees that only one connected core line component is extracted for one connected
λ2 region. In contrast, higher-order derivatives of λ2 are sensitive toward fluctuations of the vector field, they require
a careful filtering or reconstruction of the input, and they
might lead to a large number of unwanted core lines (i.e.,
false positives).
Our method is similar to those of Banks and Singer
[BS95, SB94] and Stegmaier et al. [SRE05] in the sense
that all three methods apply a predictor-corrector approach,
with direct search [HJ61] for extremum values on 2D planes
in order to correct the predicted core line locations. Banks
and Singer [BS95, SB94] search for pressure minima and
Stegmaier et al. [SRE05] search for λ2 minima. Both previous approaches use vorticity in order to predict subsequent
positions on the core line. We also use λ2 minima for the correction step, but the prediction part utilizes the initial skeleton of the λ2 isosurface because vorticity might not lead to a
good prediction. More importantly, Stegmaier et al. [SRE05]
only consider single core lines, without any vortex bifurcations or vortex break.
Skeletonization is the process of extracting a medial surface or medial axis, the curve skeleton, from a geometric
object. In particular, curve skeletons offer a condensed 1D
representation of the topology of an object and are thus
used in a variety of applications, ranging from animation
to virtual endoscopy. A comprehensive survey is given by
Cornea and Min [CM07].

3. Theoretical Basis
This section briefly reviews the region-based λ2 criterion
[JH95], which serves as basis for our vortex core line detection. Then, the λ2 criterion is related to core line detection in
the form of valley lines.

3.1. λ2 Vortex Criterion
The λ2 vortex criterion bases on the assumption of low pressure inside vortical structures. It improves the accuracy of
detecting vortical regions by disregarding components that
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

T. Schafhitzel et al. / Topology-Preserving λ2 -based Vortex Core Line Detection for Flow Visualization

where ν denotes the viscosity, p,i j the Hessian of the pressure, and S and Ω the symmetric and antisymmetric parts
of the velocity gradient tensor, respectively. The first two
terms of the left-hand side are neglected; the first stands for
unsteady irrotational straining, which can create a pressure
minimum without a vortical or swirling motion. The second
represents viscous effects, which might eliminate a pressure
minimum inside a vortical region. This leads to a new matrix
M = S2 + Ω2 , i.e., the addition of the quadratic strain tensor
and the quadratic rotation tensor, which represents the reformulated Hessian of pressure. Since M is real and symmetric, it has exactly three real eigenvalues, which can be sorted
according to λ1 ≥ λ2 ≥ λ3 . The value for the λ2 vortex criterion is identical to the above eigenvalue λ2 . According to
Jeong and Hussain [JH95], a vortical region is identified if
M has two negative eigenvalues, i.e. λ2 < 0, and is covered
by λ2 isosurfaces with isovalue 0. Decreasing negative λ2
values correspond to increasing vortex strength. Therefore,
vortices are often extracted by isovalues less than 0 in order
to remove weak vortices.
3.2. Vortex Core Lines
The motivation for defining core lines is based on the idea
of minimum lines of λ2 because large negative values of λ2
denote strong vortex behavior. A non-degenerate λ2 would
lead to isolated local minima of λ2 , i.e., to 0D instead of 1D
features. In general, a sufficient condition for a local minimum of a 3D scalar function f (x) is a vanishing gradient,
∇ f (x) = 0, and three positive eigenvalues of the Hessian
H f containing the second order partial derivatives of f (x),
which is a real, symmetric matrix.
The generalization of minimum points to minimum lines,
also called valley lines, requires us to relax these conditions.
Since we want to allow for a variation of the gradient along
the valley line, we require a point on it to be only a minimum
on a plane orthogonal to its tangent vector. In [MK97,PR99]
it has been shown that valley lines are required to have the
minimal slope |∇ f (x)| of all points of the same elevation
f (x). This means that |∇ f (x)| needs to be a minimum in direction of smallest change of f , which can be approximated
by a plane orthogonal to ∇ f . In detail, that requires the gradient to be an eigenvector of the Hessian H f . If the eigenvalues of H f are defined in a consecutive order η0 ≥ η1 ≥ η2
and εi denotes the respective eigenvectors, then a point lies
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Generate λ2-isosurfaces
Segment components
for each component

Skeletonize
Detect Vortex Core Line
Check Vortex Break Events

if a saddle < iλ2 detected → recompute

might lead to inaccuracies between the existence of a pressure minimum and the existence of a vortex. Galilean invariance is retained, i.e., the λ2 method delivers identical solutions even when a constant vector is added to the vector field.
This is quite important when different reference frames are
used. Actually, the λ2 method bases on the symmetric part
of the acceleration gradient of the Navier-Stokes equations
and leads to
DSi j
1
− νSi j,kk + Ωik Ωk j + Sik Sk j = − p,i j ,
(1)
Dt
ρ

1025

no saddles detected

Visualization

Figure 1: Program flow for the computation of vortex core
lines.

on a valley line if η1 > 0 and ε2 = const · ∇ f are fulfilled.
That implies that f (x) is a minimum on the plane orthogonal
to the valley line, but not necessarily on the valley line itself.
The problem of finding valley lines was reformulated by
Peikert et al. [PR99] by using the parallel-vectors operator.
According to their definition, an extremum line of f is defined by ∇ f ||( H f )∇ f , which claims, similar to the description above, ∇ f to be an eigenvector of the Hessian H f .
Also the definition of a valley line is similar: let ε2 be aligned
with ∇ f , then η0 > η2 and η1 > η2 have to be fulfilled.
A similar formulation was given by Haralick [Har83] and
Eberly [Ebe96].
In this paper, we follow a search approach on the planes
perpendicular to the vortex core line. However, the vortex
core yet needs to be determined and, thus, the aforementioned perpendicular direction is not yet known. It is guaranteed that the deflection of the eigenvectors of H from those
at the point x0 is rather small for any point within a close
distance. In other words, a point on the vortex core line can
be identified as a minimum on a plane P through a predicted
position x′ if the distance |x′ − x0 | is small enough and the
orientation of the plane differs not too much from the plane
spanned by ε0 and ε1 at x0 . We implement this search idea
by following a predictor-corrector scheme. In the first stage,
a position nearby the vortex core line is determined. Then, in
order to find the next point on the vortex core line (i.e., the
corrected position), a plane is created at the predicted position perpendicular to the tangent vector of the curve skeleton
of the λ2 isosurface.

4. Vortex Core Line Detection
This section describes the individual steps of our
algorithm—in the order of their appearance in the program
flow (Figure 1).

1026

T. Schafhitzel et al. / Topology-Preserving λ2 -based Vortex Core Line Detection for Flow Visualization

4.1. Isosurface Generation, Segmentation, and
Skeletonization
The algorithm starts by computing the λ2 field and its corresponding isosurface. The isovalue λ2 = 0 yields the representation of all vortical regions, enclosed by the isosurface
[JH95]. To treat vortical regions individually, segmentation
is applied to the λ2 isosurface: individual vortical regions
are identified by searching the isosurface for disjoint components. By confining the skeletonization process to each
component individually we obtain a curve skeleton for each
vortical region. In the remainder of this paper we refer to the
curve skeleton of a vortical region as isoskeleton.

4.2. Searching the Core Line
According to Section 3.2, the vortex core line is defined as
a connected set of plane-restricted local λ2 minima, where
the search plane is perpendicular to the tangent vector of the
core line. However, the core line and its tangent vector are
yet unknown during the detection phase. This makes it necessary to find an appropriate estimate of the core line. We
approximate the tangent vector of the vortex core line by the
tangent vector of the isoskeleton. Since the vortex core line
is generally defined as a one-parameter, 3D space curve that
serves as a geometrical, and often dynamical, simplification
of a vortex, the isoskeleton provides a good initial approximation of the vortex core line.
In contrast to the vorticity vector used by
Stegmaier et al. [SRE05] or the second derivative of
λ2 used by the parallel-vectors operator [PR99], the
isoskeleton has been shown to be less sensitive to the
presence of noise in the data, as discussed in Section 6.
Furthermore, the isoskeleton provides information about
the possibly non-trivial topology of the vortex core line:
vortex bifurcation is an example of the split of a vortex core
line into two lines, which is supported by the isoskeleton
description (see Section 4.3).
Algorithm 1 shows how the isoskeleton curve Γ(s) is used
to find a single-component vortex core line. Metaphorically
speaking, we view the isoskeleton as a handrail guiding the
core line search algorithm. Starting at the first point of the
isoskeleton, Γ(0), we step along the isoskeleton until the
endpoint, Γ(numPoints − 1), where numPoints describes the
number of points of the polygonal representation of Γ. At
the first sample point on the isoskeleton, the plane perpendicular to the isoskeleton tangent vector dΓ/ds is created to
search the plane-restricted λ2 minimum. The search region is
restricted to the part of the plane contained within the λ2 isosurface. Using the minimum found as first point of the vortex core line, pos[0], the algorithm loops over the remaining
points Γ(i) of the isoskeleton to construct the rest of the vortex core line. The tangential vector of the isoskeleton is used
to predict the position of the next minimum. The predicted
position pred is computed by moving from the current point

pos[i − 1] on the vortex core line along the tangent direction
dΓ/ds at location (i − 1). The idea is to move piecewise parallel to the isoskeleton, where the stepsize is defined by the
distance between the sample points on the isoskeleton. Once
we have found the predicted position pred, again a plane is
created, orthogonal to the tangent vector of the current sample on the isoskeleton. The λ2 minimum on the plane defines
the corrected position pos[i] of the next sample of the vortex
core line. Subsequently, the algorithm loops over all sample
points on the isoskeleton. Once the endpoint of the isoskeleton is reached, the algorithm terminates. The result is a number of plane-restricted λ2 minima connected according to the
topology of the isoskeleton. Note that the computed vortex
core line is independent of the starting point of the algorithm
(Γ(0) or Γ(numPoints − 1)) because the orientations of the
search planes are always given by dΓ/ds, which is independent of the order of curve traversal when computed through
central differences.
One problem is the issue of different parameterizations of
the isoskeleton and the vortex core line curves because one
curve might propagate faster than the other, particularly in
areas of high curvature. As a consequence, sample points on
the isoskeleton might be wrongly related to points on the
vortex core line. This problem is overcome by adaptively
choosing the sampling distance along the two curves, implying an intrinsic reparameterization of the curves. In detail,
for each new point on the vortex core line, the distance to its
corresponding sample point on the isoskeleton is computed.
If the distance is larger than a threshold, e.g., one cell, the position on the core line is recomputed using the half step size
for integration. In the case the distance became larger after
correction, the core line seems to grow more slowly than the
isoskeleton, and therefore, the initial step size is doubled.
This process is repeated until the distance between the core
line and the skeleton is smaller than the given threshold. Figure 2 illustrates an example of the problem and its solution
by reparameterization.

Algorithm 1 Detection of vortex core lines.
void computeVortexCoreLine(IsoSkeleton Γ)
{

// Compute the first position on the vortex core line
(0) at Γ(0);
create plane P ⊥ dΓ
ds
pos[0] = min(λ2 ) on P;
numPoints = NumOfDiscreteSamplePoints(Γ);
// Loop along the isoskeleton
for i=1 to numPoints-1

// Predict the new position
pred = pos[i-1] + stepsize * dΓ
(i − 1);
ds
// Create a plane perpendicular to the isoskeleton tangent vector:
create plane P ⊥ dΓ
(i) at pred;
ds
// Correct the predicted position
pos[i] = min(λ2 ) on P;
endfor
}

c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

T. Schafhitzel et al. / Topology-Preserving λ2 -based Vortex Core Line Detection for Flow Visualization

1027

furcations by a geometric, skeleton-based approach: we propose that the vortex core line has the same topology as the
isoskeleton of the λ2 isosurface enclosing a vortical region.
We assume bifurcation of the vortex core line in regions
where the isoskeleton has a bifurcation, i.e., as a result of
scalar reconnection with respect to λ2 .
Figure 2: Parameterization issues: the red curve of the vortex core line grows faster than the blue curve of the isoskeleton (left). Therefore, the tangent vector for generating the
search plane becomes corrupted. This problem is addressed
by reparametrization of the vortex core line (right).

Figure 3: Isosurface (left) and core of a hairpin vortex in
a transitional flow (right); both arms are growing temporally and are connected with the existing vortex structure.
The vortex core line is colored in red and the isoskeleton in
blue.
4.3. Vortex Core Line Splits
We define a bifurcation point as a point where a vortex core
line splits into two parts (see Figure 3). A bifurcation is often
the result of a temporal change of topology, e.g., due to vortex reconnection, which can be ascribed to a merge of two
vortices rotating in opposite directions. Kida et al. [KT94]
defined three types of reconnections: the vortex reconnection, the scalar reconnection, and the vorticity reconnection.
While the vortex and scalar reconnection depend on isosurfaces of vorticity and any scalar quantity, respectively, the
vorticity reconnection treats the topological changes of vorticity lines. Although it is known that in regions of vortex reconnection the closest vorticity lines are canceled by viscous
diffusion [KT94], it was shown that the assumption of vanishing vorticity is only valid in 2D, not in 3D [YOH∗ 90]. The
bifurcation of a vortex core line can also be ascribed to the
generation of new vortices, e.g, in terms of an autogeneration process [Adr07]. Here, a so-called feeder vortex [BS95]
might be generated, i.e., a vortex core line that enters an existing vortex structure to spiral towards its center.
However, to the authors’ knowledge, there exists no formal definition of the bifurcations that might result from the
previous discussion. To overcome this deficit, we model bic 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

In Algorithm 2, we introduce a treatment of bifurcation
points on the isoskeleton and the connecting isoskeleton segments, respectively. Now, Algorithm 1 is applied to individual segments and unsafe regions near bifurcations (i.e. where
local λ2 minima might be shared by two or more segments,
or regions where the spatial boundaries of the λ2 minimum
search are not defined clearly) are treated in the following
way: the search for plane-restricted λ2 minima is always performed in direction toward the bifurcation, starting from a
remote safe region. Two types of segments are considered
(Figure 4): a segment that either starts or ends at a bifurcation, and a segment that both starts and ends at a bifurcation.
In the first case, the isoskeleton is traversed starting at the
non-bifurcation point by adapting the order of the isoskeleton’s sample points (function sortSegment(Γ)). In the second case, the traversal is started in the middle of the segment
in both directions (function splitSegment(Γ)).
Unsafe regions are detected by testing the vortex core
lines for discontinuities. Similar to previous predictorcorrector approaches [BS95, SRE05], we identify discontinuities by checking for a large Euclidean distance between
the predicted and the corrected λ2 minima. If a discontinuity is detected, adaptive search—with reduced stepsize along
the isoskeleton—is employed to come as close as possible to
the unsafe region by reliably computed λ2 minimum points.
Finally, the missing piece between two adjacent vortex core

Algorithm 2 Extended algorithm for vortex bifurcations.
void computeAllSegments(IsoSkeleton Θ)
{
numSegments = getNumberOfSegments(Θ);

// Loop over all segments
for j=0 to numSegments-1

// Get the segment and its type
Γ = GetCurrentSegment(Θ, j);
type = getSegmentType(Γ);
if(type == end-bif) // endpoint-bifurcation
sortSegment(Γ);
computeVortexCoreLine(Γ);
else // bifurcation-bifurcation
splitSegment(Γ, ΓL , ΓR );
sortSegment(ΓL );
computeVortexCoreLine(ΓL );
sortSegment(ΓR );
computeVortexCoreLine(ΓR );
// connect with segments sharing the same bifurcation points
connectCoreLineSegments();
endfor
}

1028

T. Schafhitzel et al. / Topology-Preserving λ2 -based Vortex Core Line Detection for Flow Visualization

(a)

(b)

Figure 4: Connection types in an isoskeleton: connection
of two red bifurcation points – by splitting the connecting
segment and starting the search for local λ2 minima at the
blue point it is assured that the search propagates toward
the bifurcations (a); connection of cyan endpoints and red
bifurcation points (b).

lines is filled by directly connecting the closest known λ2
minimum points (see function connectCoreLineSegments()
in Algorithm 2). In our experience, the size of the missing
piece depends largely on the resolution of the vector field
and does typically not exceed one cell (mostly, it is much
smaller). Due to the connection step, this method only delivers a topology preserving approximation of the bifurcations.
5. Semi-Automatic λ2 -Isovalue Determination
In Jeong et al. [JH95] vortical regions are defined as spatial
areas where λ2 < 0. However, in practice, the condition of
λ2 < 0 is rather insufficient because of its dependency on
the accuracy of the λ2 values. The problem of potential inaccuracies is not easy to solve, regardless of they are caused
due to a resampling process, i.e. by interpolating the data, or
noise which mostly occurs in experimental data. Engineers
usually overcome this problem by manually determining an
appropriate λ2 isovalue. Considering the computation of vortex core lines, there are two issues to solve: on the one hand,
the λ2 isovalue has to be chosen very small(i.e., large negative) to emphasize the vortical structures, and on the other
hand, the λ2 isovalue should not be chosen too small because it would reduce the length of the detected vortex core
lines, caused by shrinking isosurfaces when λ2 → −∞. This
makes it desirable to compute an optimal λ2 isovalue for
each vortical region which is small enough to uncover all the
individual vortex structures, but also only as small as necessary in order to prevent the vortex core lines to be shortened
unnecessarily.
In this section we propose an algorithm for determining an appropriate λ2 isovalue. Since the desired visualization strongly depends on the user’s experience, the proposed
method works in a semi-automatic manner where the user’s
influence is given by a decay offset in terms of a parameter ε (i.e., a window of λ2 values). The result of this method
should be a number of vortex structures, each holding its individual optimal λ2 isovalue.

Typically, decreasing values of λ2 produce a hierarchy of nested isosurfaces with changing topology (and
thus with changing vortex cores), akin to the contour
tree [vKvOB∗ 97]. These changes of topology take place at
the position of critical points contained in the interior of the
initially computed isosurface. In particular, a break of an isosurface takes place at the positions of local λ2 maxima on
the vortex core line, which we call a vortex break. Since all
points are supposed to be minima on a plane perpendicular to the vortex core line, these curve related maxima can
be considered as critical points, particularly as saddles in
3D. Therefore, saddle points may lead to vortex break events
when the isovalue falls below the saddle’s λ2 value. In contrast, if there is no saddle on the core line, the core line is
guaranteed not to break.
We reduce the possible set of vortex break events by applying the following criterion to the saddle points: |λ2 (x) −
iλ2 | < ε, where ε is the global user defined decay offset which
is given as a percentaged value of the global λ2 minimum, iλ2
the current isovalue (λ2 = 0 at beginning) and x the position
of a critical point, which is supposed to be a saddle in 3D
and a global λ2 maximum on the respective vortex core line.
If such a saddle is found, the isosurface is recomputed with
λ2 (x). Since we assume the critical points of the λ2 field and
thus also the saddles to be isolated, the part of the isosurface within the vortical region under consideration will decompose into two disjoint components at the new isovalue.
For these components, the entire process of vortex core line
detection, including the aforementioned vortex break detection, is performed in a recursive manner (see Figure 1). The
recursive way of operation guarantees the core detection to
operate locally on vortical regions, traversing the hierarchy
of nested components of the λ2 isosurfaces for different isovalues from top to bottom. In addition, it allows for the detection of different vortex cores to be based on different values of λ2 . It furthermore offers control to the user via the
parameter ε.
6. Implementation Details, Results, and Discussion
For λ2 isosurface extraction we make use of a marching cubes implementation with topological guarantees [LLVT03]. This implementation is beneficial because
individual vortical regions are identified based on the
topology of the isosurface geometry, as described in the following paragraph. In order to process vortices individually,
a segmentation of the λ2 isosurface into disjoint components
is carried out. Given the output of the isosurfacing algorithm
as a triangle soup encoded in indexed triangle and vertex
lists, such components are identified by using the instance
of a shared vertex between triangles as a grouping criterion.
For our purposes the isoskeleton, which guides the core
line extraction algorithm, is required to be a smooth (C1
continuous) curve. The skeletonization algorithm proposed
by Cornea et al. [CSYB05] has the property of producing
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

T. Schafhitzel et al. / Topology-Preserving λ2 -based Vortex Core Line Detection for Flow Visualization

1029

Figure 5: Our approach faithfully extracts a vortex core line that consists of several connected components (left). The approach
by Stegmaier et al. extracts components of the vortex core line that are equivalent to our results but remain unconnected
(middle). The λ2 -based parallel-vectors approach extracts unconnected points on the vortex core line; several outliers are
present as well as sections where no core line points were detected (right).
of isovalue determination would be preferable and could be
investigated in future research.

Figure 6: Semi-automatic isovalue determination: original
vortical region (left); decomposition with color coding by
isovalue (middle); the respective vortex core lines (right).
smooth curves and was thus the method of choice. Clearly,
not all skeletonization algorithms produce smooth curves.
Since any isoskeleton can be smoothed after extraction, our
algorithm is essentially independent of the actual skeletonization algorithm.
Comparing our approach to other vortex core line extraction methods we make the following observations: the algorithm of Stegmaier et al. [SRE05] is a variation of the
approach by Banks and Singer [BS95], which constructs a
vortex core line from initial seedpoints, following the vorticity vector. It is therefore intrinsically incapable of modeling vortex bifurcations, since the vorticity vector field does
not reproduce the bifurcations of the core line. The same
holds for the algorithm by Theisel et al. [TSW∗ 05]. In Section 4 of their paper they model various notions of bifurcation in space-time. However, a model for sole bifurcation
in space is not given and can therefore not be detected by
their method. Furthermore, the algorithm by Stegmaier et al.
may erroneously identify a coherent vortical region as disconnected. Finally, the parallel-vectors approach by Peikert and Roth [PR99] for finding minimal lines is sensitive
to noise due to the evaluation of the Hessian (see also Subsection 3.2). Figure 5 compares our approach, the approach
of Stegmaier et al., and the parallel-vectors operator for a
specific vortex in experimental wake flow behind a cylinder
at Reynolds number 540 (measured by tomographic PIV).
To illustrate the effect of the semi-automatic λ2 isovalue
determination, we run our algorithm with ε at 0% and at 5%
of the absolute range of λ2 in the dataset. Figure 6 shows
that the ε parameter gives control over the degree of decomposition of vortical regions. While this user-guided solution
is a step in the right direction, a fully automated procedure
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

In our approach, the accuracy of the extracted vortex core
line is a function of the initial prediction by the isoskeleton.
Thus, good results cannot be guaranteed for arbitrarily bad
isoskeletons. Figure 6 demonstrates this issue. On the bottom of the right structure a part of the vortex core line cannot be detected due to a missing isoskeleton. Without going into further details of the particular skeletonization approach, we note that skeletonization is still an active field of
research and that there is a number of competing approaches
(of which very recent work by Hassouna and Farag [HF07]
seems promising). Furthermore, provided that a correct and
smooth isoskeleton is extracted, the core line prediction and
correction process might be iterated in order to improve the
accuracy of core line computation (by using the extracted
core line as the prediction for the next iteration). While we
leave a theoretical proof of convergence as future work, our
initial results give reason to believe that such a conjecture is
based on solid grounds.

7. Conclusion and Future Work
We have introduced a novel λ2 -based vortex core line extraction algorithm that relies on skeletonization of λ2 isosurfaces to guide the construction of the core line. Our approach
shows a number of benefits. First, it guarantees the same
topology as the curve skeleton. Therefore, the method is robust and can even handle noise-affected data. Second, spatial bifurcation of the vortex core is supported by a model for
vortex bifurcations based on connecting core line segments.
Third, the determination of the appropriate λ2 isovalue for
core line extraction is facilitated in a semi-automatic way
through analysis of the topological structure of the λ2 scalar
field in order to determine appropriate saddle points at which
individual core lines tear. Due to the fact, that the proposed
method is a geometric approach, it relies on the quality of
the underlying vortex detection criterion. Although we exclusively use the λ2 criterion as basis for vortex core line extraction, any other region-based, local vortex criterion might
be applied as long as core lines can be found by searching for
local extrema on planes. Future work could investigate the
extension of core line extraction to facilitate tracking over

1030

T. Schafhitzel et al. / Topology-Preserving λ2 -based Vortex Core Line Detection for Flow Visualization

time. Although our current technique with its Galilei invariance allows us to extract core lines of unsteady flow, it provides core lines for each time step independently. Explicit
tracking would relate core lines of different times, similarly
to previous tracking methods like [BP02, TSW∗ 05].

8. Acknowledgements
We would like to thank Fulvio Scarano (Technische Universiteit Delft) for providing the experimental data set used in
Figure 5 and Ulrich Rist (Universität Stuttgart) for the simulated data set used in Figures 3 and 6. Special thanks to
Bettina Weiskopf for proof-reading.

References
[Adr07] A DRIAN R.: Hairpin vortex organization in wall turbulence. Physics of Fluids 19 (2007), 041301.
[BP02] BAUER D., P EIKERT R.: Vortex tracking in scale-space.
In Proc. EG / IEEE TCVG Symposium on Visualization ’02
(2002), pp. 233–240.
[BS95] BANKS D. C., S INGER B. A.: A predictor-corrector technique for visualizing unsteady flow. IEEE Transactions on Visualization and Computer Graphics 1, 2 (1995), 151–163.
[CM07] C ORNEA N. D., M IN P.: Curve-skeleton properties, applications, and algorithms. IEEE Transactions on Visualization
and Computer Graphics 13, 3 (2007), 530–548.
[CPC90] C HONG M. S., P ERRY A. E., C ANTWELL B. J.: A
general classification of three-dimensional flow field. Physics of
Fluids A (1990), 795.
C ORNEA N. D., S ILVER D., Y UAN X., BALASUB R.: Computing hierarchical curve-skeletons of 3D
objects. The Visual Computer 21, 11 (2005), 945–955.

[CSYB05]

RAMANIAN

[Dal83] DALLMANN U.:
Topological structures of threedimensional flow separation. Tech. Rep. DFVLR 221-82-A07,
Deutsche Forschungs- und Versuchsanstalt für Luft- und Raumfahrt, 1983.
[Ebe96] E BERLY D.: Ridges in Image and Data Analysis. Computational Imaging and Vision. Kluver Academic Publishers, 1996.
[Har83] H ARALICK R. M.: Ridges and valleys on digital images.
Computer Vision, Graphics, and Image Processing 22, 1 (1983),
28–38.
[HF07] H ASSOUNA M. S., FARAG A. A.: On the extraction of
curve skeletons using gradient vector flow. Proc. ICCV 2007
(2007), 1–8.
[HJ61] H OOKE R., J EEVES T. A.: “Direct search” solution of numerical and statistical problems. Journal of the ACM 8, 2 (1961),
212–229.
[HWM88] H UNT J. C. R., W RAY A. A., M OIN P.: Eddies,
stream, and convergence zones in turbulent flows. Tech. Rep.
CTR-S88, 1988.
[JH95] J EONG J., H USSAIN F.: On the identification of a vortex.
Journal of Fluid Mechanics 285 (1995), 69–94.

[JMT05] J IANG M., M ACHIRAJU R., T HOMPSON D.: Detection
and visualization of vortices. In The Visualization Handbook,
Hansen C. D., Johnson C. R., (Eds.). Elsevier, Amsterdam, 2005,
pp. 295–309.
[KT94] K IDA S., TAKAOKA M.: Vortex reconnection. Annual
Review of Fluid Mechanics 26 (1994), 169–189.
[LLVT03] L EWINER T., L OPES H., V IEIRA A. W., TAVARES
G.: Efficient implementation of Marching Cubes’ cases with
topological guarantees. Journal of Graphics Tools 8, 2 (2003),
1–15.
[MK97] M IURA H., K IDA S.: Identification of tubular vortices in
turbulence. Journal of the Physical Society of Japan 66, 5 (1997),
1331–1334.
[PR99] P EIKERT R., ROTH M.: The "parallel vectors" operator –
a vector field visualization primitive. In Proc. IEEE Visualization
’99 (1999), pp. 263–270.
[PVH∗ 03] P OST F. H., V ROLIJK B., H AUSER H., L ARAMEE
R. S., D OLEISCH H.: The state of the art in flow visualization:
Feature extraction and tracking. Computer Graphics Forum 22,
4 (2003), 775–792.
[SB94] S INGER B. A., BANKS D. C.: A predictor-corrector
scheme for vortex identification. Tech. Rep. ICASE 94-11,
NASA CR-194882, 1994.
[SH95] S UJUDI D., H AIMES R.: Identification of swirling flow in
3D vector fields. Tech. Rep. AIAA 95-1715, Dept. of Aeronautics
and Astronautics, MIT, Cambridge, MA, 1995.
[SRE05] S TEGMAIER S., R IST U., E RTL T.: Opening the can
of worms: An exploration tool for vortical flows. In Proc. IEEE
Visualization ’05 (2005), pp. 463–470.
[SWH05] S AHNER J., W EINKAUF T., H EGE H.-C.: Galilean
invariant extraction and iconic representation of vortex core lines.
In Proc. EG / IEEE VGTC Symposium on Visualization (Eurovis)
(2005), pp. 151–160.
[TS03] T HEISEL H., S EIDEL H.-P.: Feature flow fields. In
Proc. EG / IEEE TCVG Symposium on Visualization ’03 (2003),
pp. 141–148.
[TSW∗ 05] T HEISEL H., S AHNER J., W EINKAUF T., H EGE H.C., S EIDEL H.-P.: Extraction of parallel vector surfaces in 3D
time-dependent fields and application to vortex core line tracking.
In Proc. IEEE Visualization ’05 (2005), pp. 631–638.
[vKvOB∗ 97] VAN K REVELD M., VAN O OSTRUM R., BAJAJ C.,
PASCUCCI V., S CHIKORE D.: Contour trees and small seed sets
for isosurface traversal. In SCG ’97: Proc. Computational Geometry (1997), pp. 212–220.
[WSTH07] W EINKAUF T., S AHNER J., T HEISEL H., H EGE H.C.: Cores of swirling particle motion in unsteady flows. IEEE
Transactions on Visualization and Computer Graphics (Proc. Visualization 2007) 13, 6 (2007), 1759–1766.
[WXY05] W U J.-Z., X IONG A.-K., YANG Y.-T.: Axial stretching and vortex definition. Physics of Fluids 17 (2005), 038108.
[YOH∗ 90] YAMADA M., O NO Y., H AYAKAWA A., K ATSURAI
M., P ERKINS F. W.: Magnetic reconnection of plasma toroids
with cohelicity and counterhelicity. Physical Review Letters 65,
6 (1990), 721–724.

c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

