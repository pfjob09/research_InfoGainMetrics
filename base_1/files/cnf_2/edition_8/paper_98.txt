Eurographics/ IEEE-VGTC Symposium on Visualization 2008
A. Vilanova, A. Telea, G. Scheuermann, and T. Möller
(Guest Editors)

Volume 27 (2008), Number 3

Visual Abstractions of Solvent Pathlines near Protein Cavities
Katrin Bidmon†1 , Sebastian Grottel†1 , Fabian Bös‡2 Jürgen Pleiss‡2 and Thomas Ertl†1
1 Visualisation
2 Institute

Research Center, Universität Stuttgart, Germany
of Technical Biochemistry, Universität Stuttgart, Germany

Abstract
Water is known to play a crucial role in protein structure, flexibility and activity. The use of molecular dynamics
simulations allows detailed studies of complex protein-solvent interactions. Cluster analysis and density-based
approaches have been successfully used for the identification and analysis of conserved water molecules and hydration patterns of proteins. However, appropriate tools for analysing long-time molecular dynamics simulations
with respect to tracking and visualising the paths of solvent molecules are lacking. Our method focuses on visualising the solvent paths entering and leaving cavities of the protein and allows to study the route and dynamics
of the exchange of tightly bound internal water molecules with the bulk solvent. The proposed visualisation also
represents dynamic properties such as direction and velocity in the solvent. Especially, by clustering similar pathlines with respect to designated properties the visualisation can be abstracted to represent the principal paths
of solvent molecules through the cavities. Its application in the analysis of long-time scale molecular dynamics
simulations not only confirmed conjectures based on previous manual observations made by chance, but also led
to novel insights into the dynamical and structural role of water molecules and its interplay with protein structure.
Categories and Subject Descriptors (according to ACM CCS): I.3.7 [Computer Graphics]: Three-Dimensional
Graphics and Realism, I.3.8 [Computer Graphics]: Applications, J.3 [Life and Medical Sciences]:

1. Introduction
Water is important for protein structure, dynamics and activity and plays a key role in many biological processes. Below
a certain threshold of hydration level, enzymes are inactive
and nonfunctional [RC91]. Water mediates protein-protein
and protein-ligand contacts by forming hydrogen bonds to
side chain and backbone atoms of proteins and to polar
atoms of substrates and ligands. Therefore, protein-solvent
systems are being studied using various experimental and
theoretical methods to gain insight into the interactions of
solvent molecules, in particular water, with protein structure
and dynamics (for reviews see [PS06, Hel07]).
X-ray crystallography has long been used to analyse water at protein surfaces, since crystal structures determined
at high resolution provide a detailed picture of protein hydration [Nak04]. Analysis of multiple crystal structures of a

† {bidmon | grottel | ertl}@visus.uni-stuttgart.de
‡ {fabian.boes | juergen.pleiss}@itb.uni-stuttgart.de
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

protein or a protein family showed that certain positions particularly in the interior of the protein are repeatedly occupied
by conserved water molecules [BWT06].
Water molecules in the interior of a protein form an integral part of its structure and do also exchange with the external bulk solvent as a result of protein conformational fluctuations [GH00]. Experimental mean residence time was determined to be in the sub-nanosecond time scale for surface
bound water, whereas interior water molecules exchange
within the nanosecond to millisecond time scale [OLW91].
Molecular dynamics (MD) simulations provide a detailed
atomic description of biomolecules enclosed by a shell of
solvent molecules. Based on Newton’s equations of motion,
MD simulations are ideally suited to provide detailed information on the fluctuations and conformational changes of
proteins and the surrounding solvent. These simulations result in many gigabytes of data, hence, visualisation plays an
important role in understanding and analysing these results.
However visualisation in this context often focuses on the
protein itself, thus, there is a lack of visualisation methods

936

K. Bidmon & S. Grottel & F. Bös & J. Pleiss & T. Ertl / Abstract Solvent Pathlines

supporting the growing interest in the protein’s interaction
with the solvent.
Protein-solvent interactions have been studied for a microbial antibiotic resistance protein using long-time scale
MD simulations. An already available protein-centric algorithm was applied to identify so-called water bridges
[San04]. This resulted in the discovery of water molecules
located inside a cavity and involved in water bridges connecting a functionally relevant loop and the protein core. Being among the most highly-occupied water bridges throughout the whole simulation, they play a possible role in the
stabilisation of this loop.
Conventional tools like VMD [HDS96] can visualise the
positions of the water molecules inside the cavity. However,
as the identification of the water bridges is a time-averaged
process, all information about the motion and movement of
the individual water molecules is lost. From plain visualisation and animation of the trajectory, even with all water
molecules over a certain cut-off distance from the cavity
omitted, it became clear that the amount of remaining water and its high fluctuation prevents further visual investigation. However, it was observed that water molecules enter or
leave the cavity via at least two distinct routes. Directly visualising the water molecules’ pathlines in existing viewers
was not feasible, as the resulting picture was cluttered by the
unsteady pathlines of the water molecules.
In this work we present a new abstract way to identify and
visualise the pathways of solvent molecules, namely water in
the simulation examined, in and around protein cavities from
MD simulation trajectories. The visualisation retains the directions of how the water molecules enter and leave the cavity and can give information on the velocities and residence
times of water molecules following these routes.
2. Related Work
The visualisation of macromolecular structures is a busy
research area. Starting from early works about the definition of molecular surfaces [Ric77] and their efficient
implementation [Con83, VBW94], nowadays work mainly
deals with the interactive high-quality representation of
large molecular structures–often exploiting the programmability of modern GPUs. Just to mention a few of them,
Lampe et al. [LVRH07] presented an approach for visualising proteins using a point-based method. For a better understanding of the 3D structure, Tarini et al. [TCM06] presented
a GPU-accelerated method for applying ambient occlusion
to the real-time visualisation of the spacefill representation.
Other approaches are more focused on visualising the conformational changes of the molecules (e.g. [SEBH02]).
Additionally, there are various tools for the visualisation
of protein-solvent trajectories from MD simulations such
as VMD [HDS96] and Chimera [PGH∗ 04]. Most of them
are being developed over a long period of time and hence

offer a wide range of functionality for analysing the protein but usually lack special features for processing the solvent. On the other hand there is a growing number of GPUoptimised viewers like the BioBrowser [HOF05] and TexMol [BDST04], which feature good performance and rendering quality but lack support for time-dependent datasets
such as offered by VMD and Chimera. Unfortunately, none
of these solutions takes special care of the solvent surrounding the protein. Representing the solvent molecules as this
leads to a box filled up with tiny molecules obstructing the
protein inside–illustrated in Fig. 1. Obviously, this is of no
use for the investigation of protein-solvent interactions.

Figure 1: A protein-solvent system represented without any
filtering of the solvent molecules.
So far, the water distribution was represented either using a clustering or density-based approach. The clustering
approach identifies water molecules occupying the same
position in all trajectory frames, resulting in distinct cluster points that represent water molecules tightly bound
to the protein [MB04]. Density-based approaches place a
3D grid onto the protein and represent the histogram of water
molecules for each grid element, resulting in a density distribution of the solvent around the protein with high density
peaks constituting areas of tightly bound water molecules
[PMA98]. As both approaches require an initial superposition of the trajectory frames onto a reference frame, thus
treating the protein essentially as inflexible, the clusterbased approaches fail to identify water molecules associated
with flexible protein residues as they move along with the
residues over the course of the simulation. In the densitybased approaches this results in a smeared-out density distribution around the flexible protein residues. To circumvent these problems, methods have been employed which
use a protein- or water-centric coordinate system instead of
a global one and calculate water binding relative to the protein atoms [San04, HM02].
Although these representations of solvent distribution
mentioned above only show a static view of the water distribution, they may be sufficient for many purposes. They allow
for identifying water-filled cavities on the surface and deeply
buried structural water molecules. In [BvG02] a tight hull
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

K. Bidmon & S. Grottel & F. Bös & J. Pleiss & T. Ertl / Abstract Solvent Pathlines

volume of the cavity is identified and water molecules inside
are detected. Similar to our approach, statistics on which exit
these water molecules take when exchanging with the bulk
are made, but these water molecules are neither tracked to
examine and visualise the pathways inside the cavity nor the
information if water molecules enter and leave the cavity by
the same exit is provided. Besides, a visualisation preserving the data’s dynamics is desired, such as the routes water
molecules take into and out of the cavity–a detail that cannot
be seen in a cluster or density representation.

937

3.1. Data Extraction
Before filtering solvent molecules of the trajectory, a superposition of each frame in the trajectory onto a common reference frame, e.g. the first frame, is applied using the standard
analysis tools provided by the AMBER molecular dynamics package [CCD∗ 05]. The superposition is based only on
the protein’s backbone atoms and thus removes the overall
translational and rotational motion of the protein whereas
preserving the protein’s flexibility.

VMD provides the functionality of tracking individual
atoms over the whole trajectory. For the task described here
especially long trajectories with tens of thousands of time
steps are processed, containing easily over 50000 atoms in
the solvent per frame. Already tracking a single atom over
such a trajectory usually results in erratic pathlines extending throughout the whole simulation domain. However, this
is useful when selecting atoms being in the cavity at a chosen frame and to determine whether this molecule leaves the
cavity at all. To explore the more general behaviour of solvent molecules entering and leaving the ROI an approach
providing a more specific interaction support is necessary.
In order to handle the numerous pathlines resulting from a
large trajectory, we decided for an abstract representation of
the main routes, clustering pathlines and visualising them as
tubes, similar to the approach in [TvW99], where pathlines
in vector fields are simplified for flow visualisation. Nevertheless, the wide range of techniques commonly used in flow
visualisation do not apply to our task, as we do not have a
vector field and our attention is turned to explore the trajectory as a whole in a single frame.

3. Pathlines
In order to keep the application most flexible, we decided
to implement the calculation of the solvent molecules’ pathlines as well as their subsequent processing as a preprocessing step in an independent tool decoupled from the viewer
and store the resulting pathlines in a file. Additionally, some
statistical details are calculated and written to an optional
output file. This data includes information about the lengths
of the extracted pathlines together with the average pathlengths and the exits taken when entering and leaving the
cavity. Doing so, at least the basic part of the tool can be used
by a wider range of users, by loading the extracted pathline
coordinates into another MD viewer, e.g. PyMOL [DeL02],
VMD or Chimera, since they are extensible by scripts or plugins. A python script for PyMOL is provided with the tool.
Since it should be possible to adjust the clustering parameters to the particular dataset during visualisation, the clustering of the pathlines together with their representation described in section 4, as well as the protein’s visualisation can
be chosen and changed interactively in the viewer. We will
go into more detail in the following sections.
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Figure 2: The protein in spacefill representation. The grey
sphere marks the region of interest enclosing the cavity. Solvent molecules outside are neglected in further processing.
Visualising the paths of all solvent molecules would result in a box stuffed with pathlines. Thus, we select a region of interest (ROI) within which the solvent molecules are
tracked. In the following, this region is defined by a bounding sphere with its centre S inside the protein’s cavity and
a radius to surround the cavity together with its possible
exits (see Fig. 2 and 3). Alternatively, this ROI can be defined by other shapes suiting the cavity more tightly, namely
cylinders, boxes, or–planned for future work–the cavity’s geometry extracted by external tools (e.g. [PKKO07, WPS07])
well-established in the application domain.
3.2. Pre-Processing
The dynamic behaviour of solvent molecules close to the
protein surface and in protein cavities is very different from
that of bulk solvent molecules. The latter ones have no impact on the behaviour we want to explore. Hence, we want
to visualise only likely relevant solvent molecules.
In order to get an initial set of pathlines in each frame of
the trajectory the solvent molecules located inside the ROI
are extracted. Reading the whole trajectory, we get all positions of solvent molecules within the selected area. This also
includes molecules of the surrounding bulk solvent passing
the ROI with high velocity and being of no interest for the
phenomenon to explore. Therefore, the initially extracted
paths are filtered and only pathlines persistent over a userchosen minimum of frames are kept.

K. Bidmon & S. Grottel & F. Bös & J. Pleiss & T. Ertl / Abstract Solvent Pathlines

938
p3

d p3
w3

dw2
w2

p2

d p2

d p1

p1

S d
p4

dw4

w4

p4

dw1
w1

Figure 3: Schematic example for filtering solvent molecules
of the bulk from those inside the cavity. Solvent molecules wi
further away from the sphere’s centre S than their nearest
protein molecule pi are skipped as they are on the outer side
of the protein and thus probably part of the bulk.
Depending on the shape of the examined area of the protein solvent, molecules passing the ROI at the outer side
of the protein are included. Since solvent molecules close
to the protein surface move more slowly than those in
the bulk, these might pass the previously described filtering. Hence, additional filtering might be included, removing
those molecules (illustrated in Fig. 3). When dwi denotes the
distance between the solvent molecule wi and the selection
sphere’s centre S, and d pi the distance between S and the
protein atom pi located closest to wi , respectively, we skip
all solvent molecules wi : d pi < dwi as they can be assumed
to be on the outer side of the molecule.
To ensure the visibility of contextual information, that is,
water entering and leaving the cavity, every pathline is extended up to a user-chosen distance (either in angstrom or
number of frames) beyond the selection volume taking into
account adjoining pathlines of the same solvent molecule as
well as the trajectory’s boundaries.

for checking the plausibility of the abstract representations,
as mentioned above, but also for analysing small datasets.
When the number of relevant solvent molecules can be reduced to just a few, the direct visualisation can be sufficient
to gain the required insight. The availability of this visualisation makes our tool also more comparable to existing visualisations in this research area which also increases the acceptance by the community of the application domain. However, using this visualisation as reference for the more abstract ones is the main aim of this implementation.
Since the extracted pathlines represent a static view of the
trajectory, the dynamic properties have to be mapped to supplementary graphical attributes. We want to encode the three
most interesting aspects: direction of the movement, velocity, and the point in time. However, it is not necessary to represent the exact values. A qualitative impression is sufficient
(e.g. whether a given position is at the beginning or at the end
of the trajectory.). The position in time is mapped to a colour
gradient from red, over yellow and cyan, to blue. Figure 4
shows that this allows to roughly compare the time frames
of near positions. The velocity is mapped to the saturation
of the colour. Since we are interested in slow movements,
low velocity is mapped to high saturation, whereas paths of
high velocity are represented in gray. The velocity as well
as the direction of the movement is also shown by a small,
repeated, and animated luminance gradient pattern.The pattern length is chosen in proportion to the local velocity to
emphasise the mapping. The mapping of these three values
to the colour of the pathlines is not optimal for all cases. We
therefore enable the user to modify this mapping in multiple
ways (e.g. changing the colour gradient).
As a first processing step on the pathlines we want to get
rid of the chaotic small-scale motion of the molecules, obscuring the principal movements, for better perceptibility. To

4. Rendering
Even the filtering described in section 3.2 does not prevent
the view from being cluttered with too many individual pathlines. Therefore, additional processing is applied in order to
get a more comprehensible abstract representation–reduced
to the principal paths traversed by the solvent molecules entering and leaving the protein’s cavity in question.
However, creating an abstract representation always implies the risk of discarding or distorting relevant information
and so leading to wrong conclusions. We therefore also implemented the direct visualisation using pathlines for the filtered solvent molecules for reference and as a base for the
abstract representations.
4.1. Rendering Pathlines
We implemented a direct and straight-forward rendering of
all pathlines within the selected ROI not only as a reference

Figure 4: Properties mapped to the pathlines: The time
within the trajectory is represented by a colour gradient from
red (start of the trajectory) over yellow and cyan, to blue
(end of the trajectory). An additional luminance ramp encodes the molecule’s direction of motion as can be seen in
the cut-out. The velocity is encoded in the saturation. Fast
pathlines (on the right side) are shown in gray.

c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

K. Bidmon & S. Grottel & F. Bös & J. Pleiss & T. Ertl / Abstract Solvent Pathlines

resolve this problem, we applied a rather simple but effective
smoothing operator to the pathlines. We used a filter kernel based on cos2 in the interval [0, π2 ] because of its compact support. The size of the kernel is user defined and, of
course, any other filter with compact support could also be
used (e.g. a truncated gaussian). Although this does not reduce the total number of pathlines visualised, it simplifies
the representation and, thus, helps to understand the structure of the dataset. Figure 5 shows the effect of smoothing
on a small region of the dataset.

c1,1

c

1

w1 (t1 )
w1 (t2 )
e11,2 c2,2 c 2
w2 (t1 ) w (t )
2 2
e21,2
c3,1
c2,1
w3 (t2 )
w3 (t1 )
w3 (t0 )
w4 (t2 )
w4 (t0 )
w4 (t1 )

w1 (t0 )
w2 (t0 )

939
p1
c2,3
c4,1

p2
p3
c

3

p4

Figure 6: Clustering of the pathlines: vertices wi (blue)
along a pathline pi with low enough velocity values form
a spherical cluster ci,n (marked in light blue). Those clusters
overlapping define a new major cluster ck (green) connecting these pathlines. Finally, all paths (red) connecting the
same major clusters are merged to a single directed edge
between these two clusters.
Figure 5: The original pathlines are smoothed (right) to emphasise the principal directions of motion normally obscured
by the molecule’s chaotic small-scale fluctuations (left).

4.2. Abstract Representation
As described above, an abstract representation is needed to
gain deeper insight into the characteristics of the data. To
reduce the number of paths, adjacent pathlines with similar dynamic properties are merged into bundles of pathlines,
which we call edges. A specialised clustering algorithm that
takes into account the specific properties of our data will now
be presented.
The interesting parts of the dataset can be classified in two
groups: positions of conserved water molecules, which are
the areas of low velocity of the solvent molecules, and the
principal paths of the solvent molecules between these positions. So we extract the positions of low velocity as nodes
of a graph and build edges using the pathlines’ positions in
between. As a first step our clustering detects these positions
of low velocity and further supporting points for the abstract
pathways. Since we try to construct this structure as quickly
as possible to be able to change all clustering parameters interactively, we handle all pathlines separately, before a clustering over the whole data is performed. Each sequence of
vertices wi of a pathline pi with velocity values below a defined threshold vmax forms a cluster ci,n of its own, where
n reflects the fact that on each pathline several clusters can
emerge (see Fig. 6). The velocity threshold must be adapted
to the given dataset and the behaviour of the solvent in the
selected area of interest. For the situations presented in this
paper a 60 percentile on the velocity worked very well as
threshold. We use spheres to represent these clusters. The
positions of the spheres are given by the mean positions of
all clustered pathline vertices and its radius rci,n is chosen
that the sphere covers 90 percent of all of these vertices.
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

The second step of our clustering merges overlapping
spheres to new clusters ck , coloured green in Fig. 6. This
connects the individual pathlines and each segment of a pathline connecting two clusters cn and cm forms a directed edge
ein,m between them (marked red in Fig. 6).
Finally, all edges between a pair of clusters are grouped
into a single edge en,m . The number of pathline segments
ein,m forming this final edge is defined to be the weight of
this edge. We also introduce helper clusters at each end of all
pathlines. These allow for creating edges between the previously detected clusters at the conserved water positions and
the bulk solvent at the border of the selected area of interest. These helper clusters are merged together based on their
distance using a threshold. To further reduce the clutter of
the images, edges with a weight of only one are (optionally)
removed, since these paths are usually not of any interest.
Using straight lines to connect the clusters would not
yield satisfactory results because some clusters are placed
close together, but are intentionally not merged. Therefore,
straight lines would produce overlaps, since edges are rendered as tubes with the edge weight encoded as tube radius.
Additionally, edges with a smaller weight could be completely occluded by thicker ones. To resolve this we used
a cubic bézier curve to represent each edge. This curve is fitted through the vertices of all pathline segments forming this
edge and seemed therefore to be a good trade-off between
the original trajectory and the principal path of the solvent
molecules.
However, real-world datasets still showed strong overlaps.
So we decided to further modify the bézier curves. The goal
was to reduce the overlap by only changing the curve as few
as necessary by moving the inner control points of the bézier
curves. For each of these control points we accumulate the
scaled distance vectors to all line segments between all inner control points of all other curves. The distance vectors,

940

K. Bidmon & S. Grottel & F. Bös & J. Pleiss & T. Ertl / Abstract Solvent Pathlines

pointing from the line segment to the control point, are being
normalised before they are scaled, depending on the length
of the distance vectors and the weights of the corresponding
edges. The smaller the distance is, the larger the scaling factor is chosen, so that edges close together affect each other
more than edges which have a large distance to each other.

5. Results and Performance
The pathline extraction and visualisation method proposed
in this work has been applied to study the interaction of
water molecules with the protein TEM β-lactamase, which
plays a major role in the antibiotic resistance of gramnegative bacteria. The main datasets we used to evaluate our
approach are 50ns MD simulation trajectories of two variants of this protein surrounded by approximately 25000 water molecules. A special scientific focus lies on the interplay
of water molecules with parts of the protein structure.
Our novel approach to identifying and visualising solvent pathlines was applied to the MD trajectories, so that
all pathlines of water molecules that pass through the ROI
(the water-filled cavity) during the simulation were identified. Figure 8 shows that the direct rendering of all pathlines
within the selected area confirmed the prior observation that
two distinct exits (marked in green) exist through which water molecules can enter or leave the cavity. One route is the
obvious opening of the cavity (on the right side of the images) that was also visible in the initial crystal structure. The
additional route (on the lower left side of the images) pro-

Figure 7: Abstraction of the pathlines. The upper figure
shows all pathlines. The middle figure shows the vertices
of all pathlines, coloured based on the detected clusters of
slower motion. Positions of conserved water correspond to
the larger clusters. The lower figure shows the extracted
principal paths.
The final visualisation of this path structure, as shown in
Figure 7, optionally contains spheres representing the detected cluster spheres. Normally only tubes along the bézier
curves representing the edges are rendered. The direction of
the edge is shown using a yellow to blue colour gradient.
The graphical primitives used (sphere and cylinder) were
created by a point-based GPU raycasting, for optimal visual quality and performance. The basic technique is shown
in [Gum03, KE04]. These are used for the abstract representation as well as for some elements of the protein rendering,
like in the stick, ball-and-stick and spacefill representation.
The colour mapping of the pathlines is also performed in a
fragment shader. Exchanging this shader allows to easily exchange the whole mapping process.

Figure 8: 5ns trajectory (5000 frames) compared to 50ns
trajectory (50000 frames). The shorter trajectory in the upper image could be evaluated manually using existing tools.
However, results gained on such short datasets must be
judged with care, since interesting values depend on the frequency of the water exchange. The 50ns trajectory, shown in
the lower image, on the other hand is far too cluttered and
too complex to be efficiently evaluated with existing tools.

c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

K. Bidmon & S. Grottel & F. Bös & J. Pleiss & T. Ertl / Abstract Solvent Pathlines

ceeds through a dynamically formed opening in the middle
of the loop and was not evident in the initial crystal structure.
From the direct rendering of all pathlines and the statistical output of the preprocessor it is evident that fewer water
molecules follow this route. But to gain a better understanding of the flow inside and through the cavity a more abstract
representation was needed.
The detected cluster positions (middle image in Fig. 7)
mark the regions of slower motion. The sequences of tubes
represent the principal paths of faster motion. Figure 7 shows
that this abstract visualisation represents the real distribution
of pathlines very well, as the structure of the tubes can also
be observed in the image showing all pathlines.
The visualisation of the clusters of slower motion agreed
with the positions of the conserved water bridges detected
in the previous analysis, and was therefore a confirmation of
the chosen clustering approach. The tubes representing the
main paths of faster motion between these clusters help to
follow and comprehend the movement of water molecules
between conserved positions inside the cavity. Even though
not all individual paths are shown, the principal structure of
the motion of the solvent is represented and allows interpretation of the data (Fig. 7 and 9). It becomes evident that there
is no straight route for a water molecule once it has entered
the cavity, rather it seems that water molecules quickly exchange between their relatively long stays at conserved water bridge positions. Another interesting fact is that the sol-

941

vent molecules’ motion inside the cavity is rather structured
compared to the chaotic motion in the bulk solvent area.
We ran our performance tests on a Intel Core2 Duo 6600
processor and an NVidia GeForce 8800 GTX graphics card.
The viewport size was fullscreen (1600 by 1200, reduced by
a small area used by the GUI controls). The cartoon rendering of the protein uses the geometry shader while all other
elements are rendered using point-based GPU raycasting
glyphs as mentioned in Sec. 4.2. This results in optimal visual quality and high rendering performance. Table 1 shows
the rendering performance is always at interactive rates, even
using this large a viewport. The performance of the calculation of the pathline clustering needs less than 3 seconds and
can therefore also be considered interactive. The preprocessing of the dataset needs less than 4 minutes for extracting the
pathlines in the ROI and an additional 2 to 5 minutes for extending the pathlines as described in Sec. 3.2.
protein
visualisation
Stick
Cartoon
Stick
Cartoon

solvent
visualisation
pathlines
pathlines
principal paths
principal paths

fps
(max. - min.)
89 - 63
55 - 42
365 - 317
182 - 175

Table 1: Performance for different rendering styles for protein and solvent. The range of fps values results from different filtering parameters resulting in different numbers of
pathlines or principal motion structures of the solvent.

6. Conclusion
We presented an approach to visually analyse the solvent
molecules’ pathlines on an abstract level, supporting long
trajectories with tens of thousands of time frames. A fast
clustering algorithm was applied to extract the principal
structure of solvent transport.
Different levels of abstraction are provided facilitating the
exploration of solvent-protein-interaction on various levels
of detail. The clusters observed in the abstract representation
of solvent pathlines within the ROI confirm the positions of
conserved water found with other approaches but additionally information about the dynamic behaviour of the solvent
molecules is provided. Thus, we were able to substantiate
conjectures based on previous observations on particular solvent molecules in solvent-protein interactions.
Figure 9: Structure extraction of solvent paths. The upper
image shows all water molecule pathlines. The lower image
shows the extracted main solvent paths. The time frame is
mapped to a colour gradient from yellow (start of the trajectory) to blue (end of the trajectory).

c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

7. Acknowledgment
This work is partially funded by Deutsche Forschungsgemeinschaft (DFG) as part of Collaborative Research Centre
SFB 716 and the Priority Programme SPP 1170.

942

K. Bidmon & S. Grottel & F. Bös & J. Pleiss & T. Ertl / Abstract Solvent Pathlines

References
[BDST04] BAJAJ C., D JEU P., S IDDAVANAHALLI V.,
T HANE A.: TexMol: Interactive visual exploration of
large flexible multi-component molecular complexes. In
VIS ’04: Proceedings of the conference on Visualization
’04 (2004), pp. 243–250.
[BvG02] BAKOWIES D., VAN G UNSTEREN W. F.: Water
in protein cavities: A procedure to identify internal water and exchange pathways and application to fatty acidbinding protein. Proteins 47, 4 (Jun 2002), 534–545.
[BWT06] B OTTOMS C. A., W HITE T. A., TANNER J. J.:
Exploring structurally conserved solvent sites in protein
families. Proteins 64, 2 (2006), 404–421.
[CCD∗ 05] C ASE D., C HEATHAM T., DARDEN T.,
G OHLKE H., L UO R., K.M. M ERZ , J R ., O NUFRIEV A.,
S IMMERLING C., WANG B., W OODS R.: The amber
biomolecular simulation programs. Journal of Computational Chemistry 26 (2005), 1668 – 1688.
[Con83] C ONNOLLY M. L.: Analytical molecular surface calculation. Journal of Applied Crystallography 16,
5 (1983), 548–558.
[DeL02] D E L ANO W.: Pymol: An open-source molecular
graphics tool. CCP4 Newsletter On Protein Crystallography 40 (2002). http://pymol.sourceforge.net/.
[GH00] G ARCÍA A. E., H UMMER G.: Water penetration
and escape in proteins. Proteins 38, 3 (2000), 261–272.
[Gum03] G UMHOLD S.: Splatting illuminated ellipsoids
with depth correction. In Workshop on Vision, Modelling,
and Visualization VMV ’03 (2003), pp. 245–252.
[HDS96] H UMPHREY W., DALKE A., S CHUL TEN K.:
VMD – visual molecular dynamics.
Journal of Molecular Graphics 14 (1996), 33–38.
http://www.ks.uiuc.edu/Research/vmd/.
[Hel07] H ELMS V.:
Protein dynamics tightly connected to the dynamics of surrounding and internal water
molecules. ChemPhysChem 8 (2007), 23–33.
[HM02] H ENCHMAN R. H., M C C AMMON J. A.: Extracting hydration sites around proteins from explicit water
simulations. J Comput Chem 23, 9 (Jul 2002), 861–869.
[HOF05] H ALM A., O FFEN L., F ELLNER D.: BioBrowser: A Framework for Fast Protein Visualization. In
Proceedings of Eurographics - IEEE VGTC Symposium
on Visualization 2005 (2005).
[KE04] K LEIN T., E RTL T.: Illustrating Magnetic Field
Lines using a Discrete Particle Model. In Workshop on
Vision, Modelling, and Visualization VMV ’04 (2004),
pp. 387–394.
[LVRH07] L AMPE O. D., V IOLA I., R EUTER N.,
H AUSER H.: Two-level approach to efficient visualization of protein dynamics. IEEE Transactions on Visualization and Computer Graphics 13, 6 (Nov./Dec. 2007),
1616–1623.

[MB04] M USTATA G., B RIGGS J. M.: Cluster analysis
of water molecules in alanine racemase and their putative
structural role. Protein Eng 17, 3 (2004), 223–234.
[Nak04] NAKASAKO M.: Water-protein interactions from
high-resolution protein crystallography. Philos Trans R
Soc Lond B Biol Sci 359, 1448 (2004), 1191–1204.
[OLW91] OTTING G., L IEPINSH E., W ÜTHRICH K.:
Protein hydration in aqueous solution. Science 254, 5034
(Nov 1991), 974–980.
[PGH∗ 04] P ETTERSEN E., G ODDARD T., H UANG C.,
C OUCH G., G REENBLATT D., M ENG E., F ERRIN T.:
UCSF Chimera - A visualization system for exploratory
research and analysis. Journal of Computational Chemistry 25, 13 (2004), 1605–1612.
[PKKO07] P ETREK M., KOSINOVÁ P., KOCA J.,
OTYEPKA M.: Mole: a voronoi diagram-based explorer
of molecular channels, pores, and tunnels. Structure 15,
11 (Nov 2007), 1357–1363.
[PMA98] P ETTITT B. M., M AKAROV V. A., A NDREWS
B. K.: Protein hydration density: theory, simulations and
crystallography. Curr Opin Struct Biol 8, 2 (Apr 1998),
218–221.
[PS06] P RABHU N., S HARP K.: Protein-solvent interactions. Chem Rev 106 (2006), 1616–1623.
[RC91] RUPLEY J. A., C ARERI G.: Protein hydration and
function. Adv Protein Chem 41 (1991), 37–172.
[Ric77] R ICHARDS F.: Areas, volumes, packing and protein structure. Annual Review of Biophysics and Bioengineering 6 (1977).
[San04] S ANJEEV B.: Ankush. Indian Institute of Science., 2004. http://www.geocities.com/dviip/.
[SEBH02] S CHMIDT-E HRENBERG J., BAUM D., H EGE
H.-C.: Visualizing dynamic molecular conformations.
In VIS ’02: Proceedings of the conference on Visualization’02 (2002), pp. 235–242.
[TCM06] TARINI M., C IGNONI P., M ONTANI C.: Ambient occlusion and edge cueing for enhancing real time
molecular visualization. IEEE Transactions on Visualization and Computer Graphics 12, 5 (2006), 1237–1244.
[TvW99] T ELEA A., VAN W IJK J. J.: Simplified representation of vector fields. In VIS ’99: Proceedings of the
conference on Visualization ’99 (1999), IEEE Computer
Society Press, pp. 35–42.
[VBW94] VARSHNEY A., B ROOKS , J R . F. P., W RIGHT
W. V.: Linearly scalable computation of smooth molecular surfaces. IEEE Computer Graphics and Applications
14, 5 (1994), 19–25.
[WPS07] W EISEL M., P ROSCHAK E., S CHNEIDER G.:
Pocketpicker: analysis of ligand binding-sites with shape
descriptors. Chem Cent J 1 (2007), 7.

c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

