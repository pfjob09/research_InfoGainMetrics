Pacific Graphics 2008
T. Igarashi, N. Max, and F. Sillion
(Guest Editors)

Volume 27 (2008), Number 7

Automatic Facsimile of Chinese Calligraphic Writings
Songhua Xu1,2,3†
1

Hao Jiang3

Tao Jin3

Francis C.M. Lau3

Yunhe Pan1

College of Computer Science and Technology, Zhejiang University, Hangzhou, Zhejiang, P.R. China, 310027
2 Department of Computer Science, Yale University, New Haven, Connecticut, USA, 06520
3 Department of Computer Science, The University of Hong Kong, Hong Kong, P.R.China

Abstract
To imitate personal handwritings is non-trivial. In this paper, we attempt to address the challenging problem of
automatic handwriting facsimile. We focus on Chinese calligraphic writings due to their rich variation in style,
high artistic values and also the fact that they are among the most difficult candidates for the problem. We first
analyze the structures and shapes of the constituent components, i.e., strokes and radicals, of characters in sample
calligraphic writings by the same writer. To generate calligraphic writing in the style of the writer, we facsimile
the individual character elements as well as the layout relationships used to compose the character, both in the
writer’s personal writing style. To test our algorithm, we compare our facsimileing results of Chinese calligraphic
writings with the original writings. Our results are found to be acceptable for most cases, some of which are
difficult to differentiate from the real ones. More results and supplementary materials are provided in our project
website at http://www.cs.hku.hk/∼songhua/facsimile/.
Categories and Subject Descriptors (according to ACM CCS): I.2.1 [Artificial Intelligence]: Applications and Expert
Systems; I.3.3 [Computer Graphics]: Picture/Image Generation; J.5.C [Arts and Humanities]: Fine arts.

1. Introduction and Related Work
Chinese calligraphy is one of the most important art forms of
Chinese traditional culture, as well as one of the most complicated hand-written character systems currently in use in
the world. To produce facsimiles (i.e., exact copies) of Chinese calligraphic writings is an intellectual challenge, even
for human beings. In this paper, we explore the possibility
to achieve the challenging goal of Chinese calligraphy facsimile by the computer, i.e., to generate Chinese calligraphic
characters in the style of a particular human writer. Tackling
this problem has a number of applications in the practical
world. For example, with a good algorithm capable of facsimileing handwriting, the computer can generate an whole
document in handwritten style as if it were manually written character by character by the human author. Documents
in handwriting style produced this way are more “personal”
and can draw the reader closer to the author than “typed”
documents.

† Contact him at songhua DOT xu AT gmail DOT com.
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

A body of work exists for solving the computational problems arising from processing calligraphic characters. Adachi
and Ishii [MAI93] applied fuzzy theory to teaching computers to learn handwriting. Yamasaki and Hattori [YH96]
tackled the Japanese calligraphy generation problem through
treating calligraphic characters as being composed of fundamental brush strokes in a hierarchic manner, which provides
a good reference for calligraphy generation in our work.
Gader et al. [GKK∗ 97] adopted fuzzy logic for recognizing calligraphic letters. Mano et al. [MHN∗ 99] applied interpolation to fuzzy spline curves to generate Japanese calligraphy. Wang and Lee [WL01] studied the problem of denoising and binarization of ancient calligraphic writing images through sophisticated image processing procedures. Yu
and Peng [YP05] applied image synthesis algorithms to capture the aesthetic appearance of cursive Chinese calligraphy. Wong et al. [WLI05] created Chinese calligraphic writings interactively via a geometric modeling approach. Okabe et al. [OSN05] proposed a new rendering method for
generating line renditions in paintbrush styles using Hidden
Markov Models. Also related is Freeman et al. [FTP03]’s

1880

S. Xu, H. Jiang, T. Jin, F.C.M. Lau, & Y. Pan / Automatic Facsimile of Chinese Calligraphic Writings

work on style facsimile for cartoon drawings, which can
capture the relationship between different artists’ styles in
line art drawings through a nearest-neighbour-based local
learning approach. Their work inspires us directly for our
character element facsimile process. More recently, Wang et
al. [WWPF08] introduced a style preserving Chinese character synthesis method based on hierarchical representation
of characters. Their synthesis method is based solely on
reusing existent writing examples previously created by a
person; in contrast, our method, in addition to reusing existent writing examples, can generate calligraphic characters not previously written by the person. Obviously, their
reuse-based calligraphy synthesis is a degenerate case of
our hybrid reuse-and-generation-based calligraphic writing
facsimile algorithm. In our prior work, we introduced a
constraint-based spatial reasoning method for the generation
of novel calligraphic writings based on a few parameterized
calligraphic samples [XLP03, XLCP04, XLCP05]. More recently, we introduced a neural-network-based approach to
evaluate the aesthetics of Chinese calligraphy for providing
feedback to guide the automatic Chinese calligraphy generation process [XJLP07]. These previous projects aimed
at generating good-looking Chinese calligraphy, which is
different from facsimileing a person’s handwriting. Our research here is to capture and then mimic the calligraphic
writing style of a particular human writer through a learningbased approach.
The rest of our paper is organized as follows. We first discuss how to decompose existent calligraphic writings and
store in a personal handwriting database in Sec. 2. Since a
Chinese character is an assemblage of strokes or radicals
following a certain spatial layout, we discuss how to facsimile strokes and radicals in Sec. 3, and then explain how
to facsimile the layout in order to compose a character in
Sec. 4. We discuss how to generate an optimal facsimile result when multiple candidate results are available in Sec. 5.
We report experimental results in Sec. 6 and conclude the
paper in Sec. 7.

2. Personal Handwriting Database
All the available calligraphic writings by the same person
will first be decomposed into a hierarchy of radicals which
then form the basic strokes; the results are parametrically
stored in a “Personal Handwriting DataBase” (PH-DB).
The decomposition process is realized through applying
the stroke decomposition algorithm proposed in [XJLP07],
which we consider to be one of the most suitable algorithms
for extracting a hierarchical and parametric representation
of Chinese calligraphic characters. The result of the parameterization is that each character element will be vectorized
as a triplet (Cx , Cy , Cw ) of which each element is a onedimensional curve. The curves of Cx and Cy give the trajectory of a stroke and the curve Cw records the width of
the stroke. Two example character decomposition results are

(a)

(b)

Figure 1: Two example character decomposition results.

Figure 2: The curve triplet (Cx , Cy , Cw ) for parametrically
representing a stroke.
shown in Figure 1. Figure 2 shows how we use the curve
triplet to represent a stroke decomposed from a character. To
be able to apply algebraic operations including multiplication and addition to these stroke representing curves to create
a new stroke, which is discussed in Sec. 3, we represent these
curves discretely in the form of matrices whose dimensionalities are normalized. With such a matrix form discrete curve
representation, ordinary matrix multiplication and addition
operations can be applied. Some detailed discussions of matrix operations over our discrete stroke representing curves
can be found in [XLCP05].
In the PH-DB, strokes and radicals decomposed from the
image of a written character are called the “character’s constructive elements”, which we abbreviate as “character elements”, or simply “elements” when there is no ambiguity.
Each character element ξ has a type property τ(ξ), representing the category of stroke/radical that ξ belongs to according to the conventional Chinese character formation method.
For example, in Figure 1, P1 and P8 both belong to the category of “single person’s radicals”, thus τ(P1 ) = τ(P8 ). Similarly, τ(P4 ) = τ(P11 ) = τ(P18 ) as they all belong to the category of “vertical strokes”, and τ(P5 ) = τ(P6 ) = τ(P15 ) =
τ(P16 ) = τ(P17 ) = τ(P20 ) because they all belong to the category of “horizontal strokes”. Such a categorization is important for our algorithm as elements having the same type
property will be referred to when facsimileing new elements
in the category. In our prototype system implementation, we
support five basic stroke types: “point stroke”, “left-slanting
stroke”, “right-slanting stroke”, “vertical stroke” and “horizontal stroke”, as well as fifty most frequently used radicals
in Chinese character formation.
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

S. Xu, H. Jiang, T. Jin, F.C.M. Lau, & Y. Pan / Automatic Facsimile of Chinese Calligraphic Writings

3. Facsimileing Individual Character Elements
Two potential approaches exist for facsimileing individual
character elements—one is through reusing a similar element written by the same writer previously, and the other
is through generating a facsimile of the element in question
according to other character elements previously written by
the writer. Both approaches have their pros and cons. The
first, reuse-based approach can efficiently produce a correct
facsimile if the element indeed has been previously written
by the writer. But if the user has never written the element
or a similar one before, the approach cannot create a facsimile and thus would fail. The second approach works more
generically. It might not however achieve the same degree of
correctness as the reuse-based approach. We therefore introduce a hybrid approach combining the two. In the following,
we first discuss the reuse-based and generation-based facsimile methods in Sec. 3.1 and Sec. 3.2 respectively. After
that, we introduce our hybrid method for character element
facsimile in Sec. 3.3.
3.1. Reuse-based character element facsimile
We rely on the character context to evaluate the fitness of
reusing one character element previously written by a person for facsimileing a written character element ξ. Recall
in Sec. 2, we acquire all the available sample character elements written by a person through character decomposition. For a character that has the character element ξ in
the character’s composition, we find ξ’s parent element in
the character’s hierarchical construction tree. For example,
in Figure 1, P1 ’s parent element is P0 and P16 ’s parent element is P12 . We can also find ξ’s ancestor elements via
the construction tree. Here we denote ξ’s i-th ancestor element as Anci (ξ). We also represent the maximum level
of ξ’s ancestors as γ(ξ). Assuming ξ is at the x-th level
in the character construction tree, then γ(ξ) = x − 1. For
i > γ(ξ), Anci (ξ) does not exist because the root of the
tree (i.e., the whole character) is Ancγ(ξ) (ξ). For this situation, we specifically define Anci (ξ) = NULL for i > γ(ξ).
Revising the examples shown in Figure 1, Anc0 (P3 ) = P3 ,
Anc1 (P3 ) = P1 , Anc2 (P3 ) = P0 , Anc3 (P3 ) = NULL, γ(P3 ) =
2 and Anc0 (P15 ) = P15 , Anc1 (P15 ) = P12 , Anc2 (P15 ) = P9 ,
Anc3 (P15 ) = P7 , Anc4 (P15 ) = NULL, γ(P15 ) = 3. Given
these notations, we can now define the character context similarity between two character elements ξ and ξ′ as:
∆(ξ, ξ′ )

max{γ(ξ),γ(ξ′ )}

∑

z j · δ Anc j (ξ), Anc j (ξ′ )

, (1)

j=0

where
δ(a, b) =

1
0

if τ(a) = τ(b), and a, b = NULL;
otherwise.

Here z j ’s are the fall-off coefficients, defined as z j =
2/(3 j+1 ). The purpose of introducing these fall-off coefficients is to emphasize more the local context in the characc 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

1881

ter construction hierarchy than the remote context. Such a
similarity measurement reflects the character context around
the character element to be facsimiled, which is used as the
most important information in determining whether a character element shall be reused for the facsimileing or not. A
larger value of ∆(ξ, ξ′ ) suggests more suitability to use ξ′ as
a facsimile for ξ. The value range for ∆(ξ, ξ′ ) is between 0
and 1.
Given this content similarity metric, the search for a most
suitable element to be used as the facsimile over ξ in the
writer’s style is reduced to searching among all the character
elements stored in the person’s PH-DB which can maximize
the character context similarity with ξ, i.e., to find a ξi so
that ξi = arg maxξ j ∆(ξ, ξ j ). More specifically, we look for
ten ξi ’s that yield the highest similarity scores with ξ to form
a candidate set of facsimile results Ω(ξ). We then randomly
select the character element ξi in Ω(ξ) as the facsimile result
for ξ with a probability of pi . The probabilities pi ’s controlling the random selection process are defined in (2), which
implement a random selection mechanism with the property
that the more similar ξi is to ξ by character context, the more
likely ξi will be selected as the facsimile result over ξ.
pi

∆(ξi , ξ)
.
∑ξ j ∈Ω(ξ) ∆(ξ j , ξ)

(2)

3.2. Generation-based character element facsimile
We denote the shape of the character element ξ in the
personal handwriting style of the writer X as ξ(X). To
generate it, we look for the element’s handwritings by
other writers in PH-DB, which are denoted as Re f (ξ)
{ξ(W1 ), ξ(W2 ), · · · , ξ(Wnw )}. Note that standard fonts from
a commercial font system are also stored in our PH-DB
and thus Re f (ξ) would never be empty since the font system comprehensively covers all the character elements. Each
standard font is treated as one separate writer’s style. In our
experiment, we adopt ten popular Chinese fonts, most of
which have come with the Microsoft Word software. In a
nutshell, the way we generate ξ(X) is to find an optimal linear combination of these samples to approximate ξ(X), i.e.:
nw

ξ(X) ≈

∑ λi ξ(Wi ),

(3)

i=1

in which λi ’s are the combination weights satisfying
∑nw
i=1 λi = 1. To determine the most suitable weight configuration, we first search for ten character elements ξ j ( j =
1, · · · , 10) which have already been written by X, as well as
by the writers W1 , · · · ,Wnw . If there are more than ten such
elements, we select ten of them which achieve the highest
content similarity scores with ξ according to (1). Given a certain assignment over λi ’s, we can approximate ξ j (X) based
on the linear combination of ξ j (W1 ), · · · , ξ j (Wnw ) through a
form similar to (3), i.e., ξ j (X) ≈ ∑nw
i=1 λi ξ j (Wi ). We derive
the approximation error as e j
|ξ j (X) − ∑nw
i=1 λi ξ j (Wi )|.

1882

S. Xu, H. Jiang, T. Jin, F.C.M. Lau, & Y. Pan / Automatic Facsimile of Chinese Calligraphic Writings

This error is measured as the number of pixels that are different in the corresponding positions in the binary images of the
element ξ j (X) and ∑nw
i=1 λi ξ j (Wi ). We optimally determine
λi ’s in (3) for facsimileing ξ(X) through finding an optimal
assignment over λi which can minimize ∑nw
j=1 |e j ∆(ξ, ξ j )|.
We use a simulated annealing process to solve the optimization problem and denote the optimal assignment so found
opt
opt
over λi ’s as λ1 (ξ), · · · , λnw (ξ). Here the parameter “ξ” in
brackets means such assignment over λi ’s is optimized for
facsimileing the character element ξ.

4.1. Efficiently finding relevant character layout
examples
Here we first look at how to characterize the spatial layout of
a character according to a few layout features organized as
feature matrices (Sec. 4.1.1). Based on these matrices, we
can categorize all the known spatial layouts stored in the
personal handwriting database in advance so that our algorithm can efficiently retrieve relevant layout examples on the
fly (Sec. 4.1.2). With these preprocessing work, we can efficiently find relevant layout examples (Sec. 4.1.3).
4.1.1. Feature matrices of character layout

3.3. A hybrid method for character element facsimile
As mentioned earlier, if the reuse-based facsimile approach
works out, the facsimile result expectedly has a higher
facsimile faithfulness than what may be achieved by the
generation-based approach. In situations where the reusebased approach may not work out because of the lack of sufficient reference samples, we introduce a mechanism which
randomly outputs the facsimile result by the reuse-based approach with a probability of α and outputs the result of the
generation-based approach with a probability of 1 − α where
1
∆(ξ j , ξ) where |Ω(ξ)|
α is defined as α
|Ω(ξ)| ∑ξ j ∈Ω(ξ)
returns the cardinality of the set Ω(ξ). Recall at the end
of Sec. 3.1 we define Ω(ξ) as the set of candidate character element facsimile results for ξ. It is easy to see that the
higher the average character context similarity between ξ
and ξ j ( j = 1, · · · , n), the more likely our algorithm will output results produced by the reuse-based facsimile approach
rather than the generation-based approach.

4. Facsimileing Character Layout
After all the character elements needed for composing a
character ξ have been facsimiled through the procedure discussed in Sec. 3, we need to facsimile the layout into which
these elements of ξ are assembled. Similar to our method for
facsimileing character elements as studied in Sec. 3, we propose also a hybrid method for facsimileing the spatial layout
of a character due to the same reason—reuse-based layout
facsimileing will fail if the reference samples are not plenty
enough whereas generation-based facsimileing may succeed
even when the system only has access to very limited samples. In situations when they both work, the quality of the
results produced by reuse-based facsimile is generally better than that of the generation-based approach. Since both
reuse-based and generation-based approaches need to refer
to layout examples for facsimileing a character’s composition layout, we first look at the way to efficiently find relevant spatial layout examples in Sec. 4.1. And then we discuss
our method for facsimileing the spatial layout of a character
according to the retrieved example layouts from the personal
handwriting database in Sec. 4.2.

To facsimile the layout of a character ξ, we assume the character is composed of n character elements in the lower levels of the character construction hierarchy. We denote that
as S(ξ) = ξ1 · · · ξn where ξ1 , · · · , ξn are the character elements at the lower levels of the character constructive tree of
the character ξ. We call S(ξ) a constructive approach to the
character ξ. Note that for the same character, there could exist multiple possible constructive approaches because some
approaches utilize radicals to compose the character, some
use strokes and some use both. For a particular constructive
approach S(ξ) = ξ1 · · · ξn , we derive each character element
ξi ’s bounding box as Bi . We also denote Bi ’s center coordinates as (xi , yi ) and its width and height as wi and hi respectively. For every pair of elements ξi and ξ j in S(ξ), we
calculate two values fx (ξi , ξ j ) and fy (ξi , ξ j ) to characterize
the spatial relationship between ξi and ξ j :
fx (ξi , ξ j )
fy (ξi , ξ j )

(xi − x j )/(wi + w j )
,
(yi − y j )/(hi + h j )

(4)

Based on these two spatial layout features, we can further
construct two matrices Fx and Fy each of dimensionality n ×
n to characterize the spatial layout inside the character. The
elements on the i-th row and j-th column of the matrices Fx
and Fy are the corresponding f (ξi , ξ j ) values, i.e.: Fx (i, j) =
fx (ξi , ξ j ) and Fy (i, j) = fy (ξi , ξ j ).
4.1.2. Categorizing character layout examples
In the traditional Chinese character formation method, all
the Chinese characters conform to some rectangular structures. For example, the two characters shown in Figure 1
are both composed of two radicals in a horizontal manner, i.e., P0 = P1 P2 and P7 = P8 P9 . This is conventionally
called the “left-right structure” (Figure 3(b)). A constructive approach S(ξ) = ξ1 · · · ξn for a certain character ξ written by a certain writer X corresponds to a set of bounding
boxes, {Bi |i = 1, · · · , n}, where Bi is the bounding box of
the character element ξi . The spatial relationships between
these bounding boxes define a layout for the character in the
constructive approach. To make our layout facsimile process
more reliable and also more efficient to execute on the fly,
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

S. Xu, H. Jiang, T. Jin, F.C.M. Lau, & Y. Pan / Automatic Facsimile of Chinese Calligraphic Writings

(a)

(b)

(c)

(d)

(e)

(f)

Figure 3: First row: six categories of most frequently used
spatial layouts for Chinese character composition; second
and third rows: some example Chinese characters (in standard font) constructed using the layouts.
we categorize layout examples from sample characters in an
offline process beforehand so that only a suitable category of
layout examples will be referenced during the facsimile process (see Sec. 4.1.3). To carry out the layout categorization,
we enumerate ten most frequently used character composition layout classes, six of which are illustrated in Figure 3.
To carry out the categorization process, we need a distance
metric to measure the sample-to-category distance, i.e., how
likely a character is constructed using a certain category of
spatial layout. We denote the layout used in character ξ’s
construction approach S(ξ) written in the writer X’s personal
handwriting style as L S(ξ), X . We define the layout similarity function Θ L S(ξ), X , Ti for measuring the likelihood of L S(ξ), X belonging to the i-th category of character layout Ti as follows.
Θ L S(ξ), X , Ti

minuj=1
0

B j ∩B∗j
B j ∪B∗j

if v = u
if v = u

, (5)

where {B1 , B2 , · · · , Bu } is the set of bounding boxes corresponding to L S(ξ), X and {B∗1 , B∗2 , · · · , B∗v } is the set
of bounding boxes corresponding to Ti , which are manually specified in advance. According to the layout similarity
function (5), L S(ξ), X will be assigned to the layout category Ti with which Θ L S(ξ), X , Ti is maximized. During
the above matching process, we consider all the permutations between matches of the two sets of bounding boxes.
However, if the largest similarity achieved is below 0.2,
which is considered too low, we will assign L S(ξ), X to the
category shown in Figure 3(a), which is the “single structure
character composition category”, namely the character is not
composed of multiple elements. Through the above process,
we categorize all the layout examples of sample characters
that are stored in the personal handwriting database.
4.1.3. Finding relevant character layout examples
Now we look at how to facsimile L S(ξ), X through referring to suitable character layout examples. We denote the
layout used for the character ξ using the standard style, i.e.,
the font style “Kai” (GB2312) in China’s national standard
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

1883

as L S(ξ),Wstd . We assume even though each writer has
his personal handwriting style, the variation of his personal
handwriting style from the standard font style shall not
affect the category to which the layout belongs. That is, if
L S(ξ),Wstd is a “left-right” structure as shown in Figure 3,
then L S(ξ), X shall also be “left-right” structured. We feel
this is a safe assumption as otherwise characters written
in that person’s style would not be easily recognized by
other people. Under the above assumption, we first classify
the layout L S(ξ),Wstd into one of the layout classes via
the layout classification procedure discussed in Sec. 4.1.2.
Without loss of generality, we assume it falls into the
layout class of Ti . Among all the layout relationships in
Ti , we find ten most similar layouts to L S(ξ), X . The
distance metric Θ(La , Lb ) we use to evaluate the similarity
between two layouts La and Lb is very similar to the
layout similarity function Θ L S(ξ), X , Ti defined in
(5) except that we compare the sets of bounding boxes
corresponding to the two constructive approaches rather
than a construction approach and a standard layout example.
The layout thus found might be collected from characters
previously written by the writer X or by other writers.
We denote the layout found which belongs to the first
self
{L S1self (ξ1 ), X , · · · , L Ssn
(ξsn ), X }
case as Lself
(assuming there are sn of them) and templates
found which belong to the latter case as Lother
other
(assuming
(ξon ),Won }
{L S1other (ξ1 ),W1 , · · · , L Son
there are on of them).
4.2. Character layout facsimileing
4.2.1. Reuse-based character layout facsimileing
In this facsimile approach, we try to facsimile the layout of
a character through reusing one of the character layout examples in Lself . We feel this reuse-based facsimile is a safe
move because the layout example to be reused is produced
by the same writer. More concretely, we randomly select the
layout example L Siself (ξi ), X from Lself with a probability
qi when facsimileing the character layout L S(ξ), X . The
probability qi is estimated as follows:
qi

Θ L Siself (ξi ),Wstd , L S(ξ),Wstd
self
∑sn
j=1 Θ L(S j (ξ j ),Wstd ), L S(ξ),Wstd

.

(6)

4.2.2. Generation-based character layout facsimileing
If the set Lself is empty, it means we would have to generate L S(ξ), X according to the spatial layout produced by
other writers, namely those templates in Lothers . For each
layout L Siother (ξi ),Wi ∈ Lothers , we find its corresponding layout L Siother (ξi ),Wstd , i.e., the layout of the character ξi written in the standard font (the “Kai” GB2312
style). We use (4) to derive their corresponding feature maand Fstd
trices, denoted as Fix = Fx L Siother (ξi ),Wi
x =

1884

S. Xu, H. Jiang, T. Jin, F.C.M. Lau, & Y. Pan / Automatic Facsimile of Chinese Calligraphic Writings

Fx L Siother (ξi ),Wstd

respectively. Based on these two

feature matrices, we derive their difference matrix as Disix
Fix − Fstd
x . And then we will be able to synthesize an over-

construction approach Si (ξ) = ξ1 · · · ξn . Φ(Si (ξ), X) is then
intuitively defined according to the percentage in the facsimile result that the user X has previously written:

all feature difference for facsimileing the spatial layout of
L S(ξ), X based on the layout examples in Lothers as:
Disoverall
x

i
other
(ξi ),Wstd , L S(ξ),Wstd
∑on
i=1 Disx Θ L Si

∑on
i=1 Θ

L

Siother (ξi ),Wstd

.

, L S(ξ),Wstd

(7)
is derived through weighted summing
Basically, Disoverall
x
over Disix using Θ L Siother (ξi ),Wstd , L S(ξ),Wstd as the
respective weight. Given Disoverall
we can derive the feature
x
Disoverall
+
matrix Fx on L S(ξ), X as: Fx L S(ξ), X
x

n

Φ Si (ξ), X

∑

j=1

φ(ξ j , X)Area(ξ j )
Area(ξ j )

(8)

where Area(ξ j ) denotes the area occupied by ξ’s character
element ξ j and
1
if X has previously written ξ j ;
opt
opt
max{λ1 (ξ j ), · · · , λnw (ξ j )}
otherwise.

φ(ξ j , X)
opt

Fstd
x . Through a similar way, we can derive Fy L S(ξ), X .
Given these two feature matrices describing the layout of
the bounding boxes of the constituent character elements of
the character ξ written in the writer X’s personal handwriting style following the constructive approach of S, we can
reversely compute the optimal sizes and locations of these
bounding boxes which would produce these two feature matrices. To do this, we employ a gradient-descent-based optimization process with the target function to be minimized
defined as the L2 norm of the distance between the expected
feature matrices as estimated above and the feature matrices
of the layout relationship under optimization. The layout so
found is our facsimile result through the generation-based
approach.

in which λi (ξ j )’s are the optimal assignment over λi ’s as
determined in Sec. 3.2 for facsimileing the character element
ξ j following a generation-based approach. The rationale
opt
opt
behind assigning max{λ1 (ξ j ), · · · , λnw (ξ j )} to φ(ξ j , X)
when the user has not previously written the character eleopt
opt
ment is because the higher the max{λ1 (ξ j ), · · · , λnw (ξ j )},
the more confident the algorithm is in facsimileing the
character element through the generation-based approach
via (3). This can be intuitively understood as the higher
opt
opt
max{λ1 (ξ j ), · · · , λnw (ξ j )}, the more likely X’s writing
style is similar to one of the reference writers Wi , in which
case the generation-based facsimile approach behaves more
like the reuse-based facsimile approach. Given the above
facsimile reliability function, our algorithm selects the candidate facsimile result with the highest reliability score and
outputs it as the final facsimile result.

4.2.3. Hybrid method for spatial layout facsimileing

6. Experiment Results

If Lself is empty but Lothers is not, we can only facsimile a spatial layout through the generation-based approach;
if Lothers is empty but Lself is not, we can only get one
facsimiled spatial layout from the reuse-based approach.
However, typically both approaches can produce a facsimile result, in which case we use a random selection process to choose one result. That is, we select the result
produced by the reuse-based approach with probability z
and select the result produced by the generation-based approach with probability 1 − z. Here z is calculated according to the similarity scores of the two sets Lself and
A
Lothers . More concretely, z is defined as z
A+B where
self
1 sn
sn ∑ j=1 Θ L(S j (ξ j ),Wstd ), L S(ξ),Wstd
other
1 on
(ξ j ),Wstd , L S(ξ),Wstd .
on ∑ j=1 Θ L S j

A

and B

5. Optimal Selection Over Candidate Results
It is obvious that the more parts of a character previously
written by a writer that are available, the easier and more
reliably the character can be facsimiled. This leads to a simple but effective heuristic: we define a facsimile reliability
function Φ(Si (ξ), X) for evaluating the reliability of facsimileing ξ in X’s personal handwriting style following ξ’s i-th

We first compare our calligraphy facsimile results with the
original handwritings of two Chinese calligraphists in Figure 4. In this experiment, only 24 other characters written by
the respective calligraphists are accessible to our algorithm
for learning. Our facsimile results are not exactly identical
to the ones written by the calligraphists, which is to be expected. Nevertheless, for most of the characters, the facsimile results appear to be very close in appearance and style
to the authentic handwritten ones. And then we present Figure 5 for examining the faithfulness of the facsimiled results
produced by our algorithm when the algorithm has access to
different sizes of training set of sample calligraphic characters. The analysis clearly shows the enhancement of our algorithm’s performance when it has access to more characters
written by the target calligraphist. The analysis results also
suggest when our algorithm has seen 40 characters written
by a writer, it can facsimile the handwriting of the writer to
the degree such that the handwritten samples and the facsimiles are almost indistinguishable. Practically, it is not hard to
collect 40 characters of handwriting by a person.
We also present the results of a facsimile experiment over
a famous Chinese poem in Figure 6. As can be easily seen,
a high degree of faithfulness has been achieved. Using the
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

S. Xu, H. Jiang, T. Jin, F.C.M. Lau, & Y. Pan / Automatic Facsimile of Chinese Calligraphic Writings

Figure 4: Facsimileing results compared with the original
handwritings of two Chinese calligraphists. The first and
third rows are the original handwritings of the two Chinese
calligraphists; the second and fourth rows are the facsimiled
results.

results of this experiment, we conducted a small-scale quantitative user study in the form of a quasi Turing test. We
invited eight educated Chinese individuals to tell apart the
facsimiled results by our algorithm from the authentic writings by the calligraphist. Six of them are computer science
graduate students, and two of them are middle school literacy teachers. We showed them 16 sample characters written by the calligraphist, followed by 20 characters facsimiled by our algorithm. After that we showed them a set of
32 new characters and asked them to tell which ones are
written by the calligraphist and which ones are facsimiles.
Among these 32 characters, 17 characters are from authentic handwritings and 15 characters are machine facsimiled
ones, as labeled * in Figure 6. Figure 7 shows the respective
accuracies achieved by these eight individuals. Their accuracy rates are 62.5%, 53.1%, 46.9%, 68.8%, 43.8%, 34.3%,
59.3%, 50.0% respectively, and the overall accuracy rate is
52.3%. From these data we see that the best human judge
achieves the accuracy of 68.8% while the poorest achieves
about 34.3%. The overall accuracy of these human judges
is 52.3%, which does not differ much from the accuracy
of random guess. This shows the facsimile results are sufficiently indistinguishable from the authentic handwritten
ones to people in our user study group.

1885

(Aa )

(Ba )

(Ca )

(Da )

(Ea )

(Fa )

(Ga )

(Ha )

(A0 )

(B0 )

(C0 )

(D0 )

(E0 )

(F0 )

(G0 )

(H0 )

(A10 ) (B10 ) (C10 ) (D10 ) (E10 ) (F10 ) (G10 ) (H10 )

(A20 ) (B20 ) (C20 ) (D20 ) (E20 ) (F20 ) (G20 ) (H20 )

(A40 ) (B40 ) (C40 ) (D40 ) (E40 ) (F40 ) (G40 ) (H40 )
Figure 5: Analyzing the faithfulness of our algorithm’s
handwriting facsimile results using different sizes of training set. (A)–(H) show eight sets of such results. The rows
from top to bottom respectively correspond to the authentic
handwriting by a calligraphist (Xa ), facsimiled results when
our algorithm has no access to any characters written by the
calligraphist (X0 ), facsimiled results when our algorithm has
learned 10, 20 and 40 characters written by the calligraphist
as training samples (X10 , X20 , X40 ), respectively.

faithfulness. We also would like to extend our methods to
cover more languages which might introduce new character
features for our algorithm to consider. Right now, the styles
of handwriting our algorithm is capable of facsimileing exclude the very cursive ones. The bottleneck is with the character decomposition and parameterization step. We plan to
look for more advanced algorithmic approaches to attack the
problem. Our generation process so far has not touched upon
style consistency between adjacent characters, which is invariably an important consideration by human calligraphists.

Due to space limitation, more experiment results are available in our project website at
http://www.cs.hku.hk/∼songhua/facsimile/.

References

7. Conclusion

[GKK∗ 97] G ADER P. D., K ELLER J. M., K RISHNAPU RAM R., C HIANG J.-H., M OHAMED M. A.: Neural and
fuzzy methods in handwriting recognition. Computer 30,
2 (1997), 79–86.

This paper presents our attempt to generate facsimiles of
Chinese calligraphic writings through an example-based
learning approach. The resultant intelligent graphical design
system can facsimile calligraphic writings with a high degree of realism in most situations, as verified by the experiment results. For the future, we will continue to refine
our algorithm, aiming at an even higher degree of facsimile
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

[FTP03] F REEMAN W. T., T ENENBAUM J. B., PASZTOR
E. C.: Learning style translation for the lines of a drawing. ACM Transactions on Graphics 22, 1 (2003), 33–46.

[MAI93] M. O., A DACHI Y., I SHII N.: Fuzzy theory in
hand writing learning system. In Proc. of International
Joint Conference on Neural Networks (1993), pp. 766–
769.

1886

S. Xu, H. Jiang, T. Jin, F.C.M. Lau, & Y. Pan / Automatic Facsimile of Chinese Calligraphic Writings

(1*) (2) (3) (4) (5*) (6*) (7*) (8) (9*) (10) (11) (12)

(13) (14) (15)(16*)(17) (18)(19*)(20*)(21) (22)(23*)(24*)

(25) (26) (27) (28)(29*)(30*)(31) (32) (33)(34*)(35) (36)

(37*)(38) (39)(40*)(41) (42)(43*)(44) (45) (46)(47*)(48)

(49)(50*)(51*)(52*)(53*)(54)(55*)(56) (57) (58) (59) (60)

(61) (62) (63) (64) (65)(66*)(67*)(68) (69) (70)(71*)(72)

(73*)(74*)(75) (76) (77)(78*)(79) (80) (81) (82) (83) (84)

Figure 7: The human identification results based on our facsimile experiment reported in Figure 6. Here we give the
raw data recording each participant’s performance. Each
row in the bitmap corresponds to a user and each column
corresponds to a character. Eight Chinese individuals participated in this user study, hence eight rows. Each user is
asked to tell whether a character is written by the original
writer or a machine facsimiled one, for a total of 32 characters. Hence the bitmap has 32 columns. The 32 characters
used in the survey are marked by * in Figure 6. A black color
in a block indicates the user made a correct guess, and white
color for a wrong answer. The accuracy rates of the eight individuals are 62.5%, 53.1%, 46.9%, 68.8%, 43.8%, 34.3%,
59.3%, 50.0% respectively, while the overall accuracy rate
is 52.3%. This shows the facsimile results are sufficiently indistinguishable from the authentic handwritten ones to people in our user study group.

(85*)(86*)(87) (88) (89) (90) (91)(92*)(93) (94)(95*)
Figure 6: A facsimile experiment over a famous Chinese
poem by the great Chinese poet Shu Shi (1037AD-1101AD).
The first four rows, i.e., (1)–(48), are written by a modern
calligraphist while the remaining rows, i.e., (49)–(95), are
facsimile results by our algorithm. In this experiment, our algorithm only has access to the characters (1)–(48) as training examples. Characters with * in their labels are used in
the user study reported in Figure 7.
[MHN∗ 99] M ANO J., H E L., NAKAMURA T., E NOWAKI
H., M UTOH A., I TOH H.: A method to generate writingbrush-style Japanese Hiragana character calligraphy. In
Proc. of IEEE International Conference on Multimedia
Computing and Systems (1999), vol. 1, pp. 787–791.
[OSN05] O KABE Y., S AITO S., NAKAJIMA M.: Paintbrush rendering of lines using hmms. In GRAPHITE
’05: Proc. International Conference on Computer Graphics and Interactive Techniques in Australasia and South
East Asia (2005), pp. 91–98.
[WL01] WANG S.-Z., L EE H.-J.: Dual-binarization and
anisotropic diffusion of Chinese characters in calligraphy documents. In ICDAR ’01: Proc. of the 6th International Conference on Document Analysis and Recognition
(2001), pp. 271–275.
[WLI05] W ONG S. T. S., L EUNG H., I P H. H. S.: Modelbased analysis of Chinese calligraphy images. In Proc. of
the 9th International Conference on Information Visualisation (2005), pp. 221–226.

[WWPF08] WANG Y., WANG H., PAN C., FANG L.:
Style preserving Chinese character synthesis based on hierarchical representation of character. In Proc. of IEEE
International Conference on Acoustics, Speech and Signal Processing (2008), pp. 1097–1100.
[XJLP07] X U S., J IANG H., L AU F. C.-M., PAN Y.: An
intelligent system for Chinese calligraphy. In AAAI ’07:
Proc. of the 22nd AAAI Conference on Artificial Intelligence (2007), pp. 1578–1583.
[XLCP04] X U S., L AU F. C., C HEUNG K.-W., PAN Y.:
Automatic generation of artistic Chinese calligraphy. In
AAAI ’04: Proc. of the 19th National Conference on Artificial Intelligence (2004), pp. 937–943.
[XLCP05] X U S., L AU F. C. M., C HEUNG W. K., PAN
Y.: Automatic generation of artistic Chinese calligraphy.
IEEE Intelligent Systems 20, 3 (2005), 32–39.
[XLP03] X U S., L AU F., PAN Y.: Automatic artistic calligraphy generation. Technical Report, HKU-CSIS-TR2003-02, Department of Computer Science and Information Systems, The University of Hong Kong.
Computer
[YH96] YAMASAKI T., H ATTORI T.:
calligraphy–brush written Kanji formation based on the
brush-touch movement. In Proc. of IEEE International
Conference on Systems, Man, and Cybernetics (1996),
pp. 1736–1741.
[YP05] Y U J., P ENG Q.: Realistic synthesis of Cao Shu
of Chinese calligraphy. Computers and Graphics 29, 1
(2005), 145–153.
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

