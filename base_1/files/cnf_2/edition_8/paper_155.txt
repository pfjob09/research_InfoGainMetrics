Eurographics Symposium on Geometry Processing 2008
Pierre Alliez and Szymon Rusinkiewicz
(Guest Editors)

Volume 27 (2008), Number 5

Dental Inlay and Onlay Construction by
Iterative Laplacian Surface Editing
Tillmann Steinbrecher and Maik Gerth
Fraunhofer IGD, Germany

Figure 1: Automatic generation of an inlay for the first upper molar

Abstract
We propose a new method for automatic construction of inlays and onlays. Mesh models from a small
tooth library are adapted to the remaining healthy surface of the patient’s tooth. In the area above the
cavity, the general morphology of the model tooth (fissures, cusp tips, etc) is preserved, but precisely
adjusted to the intra-oral situation. Our approach uses iterative Laplacian Surface Editing to deform the
model tooth. This allows the automatic generation of highly individual, functional and anatomically
correct inlays/onlays, without having to resort to a large library of different tooth shapes.
Categories and Subject Descriptors (according to ACM CCS): I.3.8 [Computer Graphics]: Applications

1. Introduction
1.1. CAD/CAM in the Dental Lab
Traditionally, kdental kreconstructions ksuch kas kcrowns kor
inlays are designed and produced manually by lost-wax
casting, a time-consuming and expensive process where the
quality of the result ultimately depends on the experience
of the dental technician carrying out the work.

to scan the teeth directly in the patient’s mouth. This
eliminates the need for plaster casts - at the cost of lower
accuracy. Usually multiple scans will be performed from
different angles, and subsequently registered and triangulated. The resulting triangle mesh, representing the precise
intraoral situation, is the base for the CAD construction of
the dental restoration.

Manual production is still common today, though the
availability of new ceramic materials - less suitable for
manual processing - as well as increased pressure to work
as cost-efficiently as possible, has led to the proliferation of
CAD/CAM methods in the dental lab.
Typically, a plaster cast of the situation in the patient’s
mouth is created by the dentist. In the dental lab, the plaster
model is then scanned with a 3D scanner (e.g. using
structured light projection or laser lines).
As an alternative, a small intraoral 3D camera can be used
Figure 2: Scanning of a plaster cast using structured light
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

1442

T. Steinbrecher & M. Gerth / Dental Inlay and Onlay Construction by Iterative Laplacian Surface Editing

If the initial design suggestion from the CAD software does
not properly consider this exact situation, then the resulting
reconstruction will be unsatisfactory - unless the dental
technician invests a significant amount of work to manually
correct the design. Hence, reliable automatic construction
of tooth restorations is nowadays crucial for quality and
efficiency in the dental lab, and is currently an important
research topic.
The result of the CAD construction is a closed triangle
mesh representing the restoration (crown, inlay, bridge,
etc), suitable for production by CAM milling or Selective
Laser Melting.
1.2. Terminology
A dental cavity is a part where the structure of a tooth was
damaged, e.g. by caries and subsequent drilling by the
dentist.
The boundary between healthy tooth surface and a cavity
that was prepared by the dentist is referred to as the
preparation margin.
An inlay is a solid filling fitted into a tooth cavity in order
to restore the tooth’s functional and ideally also optical
properties. It is applied when the tooth cavity is too large
to allow direct restoration, e.g. by composite filling. If one
or more cusp tips are damaged and need to be restored, the
respective restoration is called an onlay.

adjacent teeth or antagonists. So far, this methodology has
apparently only been applied to molars and premolars.
Adolph and Gürke [AG01] adapt a “model tooth” to the
healthy tooth surface by using Geometrically Deformable
Models, where first a low-resolution mesh of the model
tooth is adapted by energy-driven deformation, and then
subsequently refined step-by-step. This method provides
attractive results in many cases; however, for reasons to be
explained further on, it does not have the necessary
robustness to cover the full range of possible clinical
situations.
We draw inspiration from this approach in the sense that
we also use a “model tooth” which we adapt to the
patient’s tooth. After the adaptation, the part of the model
tooth that lies above the cavity will be joined with the
cavity mesh to create the actual inlay reconstruction.
The choice of mesh deformation method has a great
influence on the overall quality of the end result. We were
able to achieve particular robustness over a very wide
range of different clinical situations using the so-called
Laplacian Surface Editing [SCL*04] elucidated in the next
section. A variant of this method has previously been
successfully used for fitting template models to point
clouds [SKR*06].
This mesh deformation method eliminates the need for
level-of-detail-based mesh processing for our application
(see also section 4.4).
3. Mesh Deformation
In this section, we describe how tooth meshes are
deformed by a small number of positional constraints in a
shape preserving way. The Laplacian Surface Editing
allows deformation of a mesh while retaining much of the
original shape, and without introducing new overlaps if
possible.

Figure 3: Inlay preparation of a premolar
In Figure 3, the dental cavity is shown in lighter color; the
preparation margin is marked by a thin green line.

In this context, we assume to have connected, triangular
and two-manifold meshes in ℝ 3 , with or without
boundaries.
Let V = {v1 , …, vn } ∈ ℝ 3 be the vertices of such a mesh

2. Related Work
Mehl et al [MBH05, MBL07] use a biogeneric model for
reconstruction of tooth surfaces. A large set of sample teeth
- according to [MLB07], 400 individual teeth for each
molar and premolar type - is used to calculate an “average
tooth”. In a further step, differences between each
individual tooth and the average tooth are measured and
evaluated, to obtain a list of typical deviations from the
average. Tooth reconstruction is then performed using the
average tooth and the list of deviations with their
respective probability, by matching a certain amount of
construction points - e.g. cusp tips, contact points to

and A ∈ {0,1}n× n its adjacency matrix. We want to deform
that given mesh into a new mesh with the same adjacency
matrix but new vertex positions V ′ = {v1' , …, vn' } . Our
deformation constraints are described by specifying desired
deformation vectors ci := vi' − vi which are weighted by
deformation weights ωi ∈ [0,1] . If ωi = 0, then we call

vi passively deformed, since its movement is completely
determined by the original shape of the mesh and the other
deformation vectors with ωi > 0 . The vertices with
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

T. Steinbrecher & M. Gerth / Dental Inlay and Onlay Construction by Iterative Laplacian Surface Editing
deformation weights ωi > 0 are called actively deformed
and their weights determine the influence on the new shape
of the mesh.
The technique of Laplacian Surface Editing (described in
[SCL*04] is to represent a mesh by so called differential
coordinates {δ1 , …, δ n } ∈ ℝ 3 instead of the absolute
coordinates V , where

δ i := vi −

∑a

∑a v ,
ij

(1)

j

j =1

i.e. each δ i points from the centroid of the neighbors of
to the absolute coordinate

vi . The differential

coordinates δ i are also called Laplacian vectors and are
exactly the vectors that appear in the common technique of
Laplacian Mesh Smoothing [Tau95].
The advantage of using differential coordinates instead of
absolute coordinates during a deformation process is that
the Laplace vectors are related to the (negative) mean
curvature normal multiplied by the local area of the mesh
in each vertex (see [MDSB02]). Hence the process of our
deformation tries to maintain the local curvature of the
mesh in some way.
If we consider the vertex set V as a matrix V ∈ ℝ n×3 of
the absolute coordinates in each row and ∆ ∈ ℝ n×3 as the
matrix of Laplace vectors in each row, then equation (1)
can be written as a simple matrix multiplication

∆ = V − D −1 ( AV ) = ( I − D −1 A)V =: LV ,

I ∈ ℝ n× n
n

is

the

n

identity

D := diag ( ∑ a ,…, ∑ a ) ∈ ℝ
j =1 1 j

j =1

nj

(3)

This over determined linear equation system is solved in a
least square sense, such that for the absolute coordinates
vi' ∈ V ' and the differential coordinates δ i' ∈ ∆ ' = LV '
of our deformed mesh the following error is minimized:
n

E (V ′) := ∑ δ i − δ i'
i =1

j =1

where

∆
L

 


 


=



 
⋅ V ′
n ×3
 Ω(V + C )  

Ω

 
 ∈ℝ

n

1
n

ij

vi

1443

n× n

matrix,

(2)
and

is a diagonal matrix

with the number of neighbors d i for each vertex.
The matrix L = ( I − D −1 A) ∈ ℝ n× n is also called
Laplacian operator. It is translation-invariant and for a
connected two-manifold mesh holds rank ( L) = n − 1 .
Therefore, a mesh with a fixed adjacency matrix is
completely defined by its set of differential coordinates as
long as we fix a single vertex position in space.
For each of our active deformed vertices with deformation
vectors C := {c1 ,..., cn } ∈ R n×3 and their weights

Ω := diag (ω1 ,..., ωn ) , we introduce new rows in equation
(2) to find the new vertex set V ' of our deformed mesh:
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

2

n

+ ∑ ωi2 vi' − (vi + ci ) ,
2

(4)

i =1

i.e. we minimize the discrepancy of the differential
coordinates (the approx. mean normal curvature vectors)
and the compliance with the positional constraints. The
corresponding normal equations are simplified to

LT ∆ + Ω 2 (C + V ) = (( LT L) + Ω 2 )V ′,

(5)

which is our final linear equation system with unknowns in
V’. The symmetric, positive definite square matrix
n

aki2
2
 1 + ωi + ∑ 2 , i = j
k =1 d k

(( LT L ) + Ω 2 )ij = 
n
 − a ji − aij + aki akj , i ≠ j
∑
 d j di k =1 d k2


(6)

is “very sparse”, because the i-th row corresponds to a
vertex vi in the original mesh, and if the j-th column in the
i-th row is non-zero, then there must be a direct neighbor
or at least a direct neighbor of a direct neighbor of vi in
the mesh. Assuming an average neighbor count
of 6, this leads to an average number of
6 + 1 ⋅ 3 + 4 ⋅ 2 + 1 ⋅1 = 18 non-zero elements in each row,
and for a constrained vertex with ωi > 0 just one more.
Using the sparse matrix reordering library metis (see
[KK98]) and the open source library taucs (see [Tol03]),
we can either create a Cholesky factorization of the whole
matrix, or we can use iterative solver to get the absolute
vertex coordinates V ′ = {v1' , …, vn' } of the deformed mesh
with the same adjacency matrix as our original mesh. The
advantage of a Cholesky factorization is that once it is
done, a set of new deformation vectors C can be applied
immediately by a simple and fast back substitution, which
is extensively used for interactive free forming in other
parts of our dental application [LSO*04].
To further improve the results, especially on non-uniform
triangulated meshes, one could introduce edge weights into
the adjacency matrix A, e.g. cosine weights or tangent

1444

T. Steinbrecher & M. Gerth / Dental Inlay and Onlay Construction by Iterative Laplacian Surface Editing

weights depending on the neighboring triangles. We can
also weight the differential coordinates in the least square
problem by the local Voronoi area weights, see
[BS08,NISA06].
During the tests with our tooth models, we came to the
conclusion that even the simple weighting scheme using
the adjacency matrix already gives pleasing results, and we
are using it in practice.
4. Segmentation and Adaptation

model would not be correctly recognized as “above cavity”
by this method alone.
Therefore, we additionally rely on ray collisions for
segmentation. In practice, a collision model such as a
bounding box tree should be applied.
From each vertex vi that is not yet classified as “above
cavity”, two rays are cast, one towards the center of the
tooth to be reconstructed, and one away from it. We
consider only the closest hit point hi , and limit the search

4.1. Segmentation

range to the distance between vi and the center of the

After adapting the model tooth to the patient’s tooth, the
part of the model’s mesh that lies above the cavity will
form the surface of the actual inlay. The part of the model
tooth that lies above the healthy part of the tooth should be
adapted to the remaining tooth surface (that is, the part of
the tooth outside of the cavity). Thus, the model tooth
should be segmented into parts that lie “above cavity” or
“on surface”. The respective segments will be subjected to
different treatment during the actual adaptation.

prepared tooth. The location/existence of hi gives us the
classification:
• hi lies on the cavity: classify vi as “above cavity”.
• hi lies on healthy surface: classify vi as “on surface”.
• no hit point in search range: classify vi as “undefined”
Obviously, the quality of the segmentation is better if the
model tooth matches the shape of the prepared tooth
closely.
4.2. Adaptation
At first, the tooth model is placed above the prepared tooth
by translation, rotation and scaling, to provide an initial
rough matching of known features such as cusp tips. Then,
the user may perform an optional manual correction of the
placement by moving the model with the mouse. This
correction step is the only user interaction in the process,
and is unnecessary in the vast majority of cases.

Figure 4: After placement (left) and segmentation
For fast and sufficiently accurate segmentation, we use a
combination of two heuristics. First, the cavity will be
projected onto a plane orthogonal to the tooth axis, and
rasterized. The result is a mask image, allowing us to find
out whether a vertex lies directly above the cavity by a
simple lookup in the image.
Cavity projected along
tooth axis
Healthy tooth surface
Area in which mask image
based heuristic fails
Figure 5: Mask image based segmentation
While this is very fast, it is not suitable as the sole method
of segmentation. In the case shown in Figure 4, it is
obvious that the vertices on the right side of the tooth

After a first vertex classification, the adaptation can be
started.
The adaptation is an iterative process, alternating segmentation and deformation. On one hand, this augments segmentation quality towards the final result. On the other
hand, the individual deformation vector lengths are
reduced, which causes Laplacian Surface Editing to behave
more gracefully (see also section 4.3). The so-called “local
rotations” of the model mesh, as mentioned in [SCL*04],
are also approximated by the stepwise approach.
Vertices classified as “above cavity” or “undefined” will be
assigned a deformation weight of zero, causing them to be
passively deformed only (with notable exceptions, as
explained in the “Fine tuning” section further down).
For vertices classified as “on surface”, we once again rely
on the result of the ray collisions with the tooth to be
reconstructed, as explained in the previous section.
During iteration j of a total of N, the deformation vector
used for the Laplacian Surface Editing is:
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

T. Steinbrecher & M. Gerth / Dental Inlay and Onlay Construction by Iterative Laplacian Surface Editing

ci =

hi − vi
N +1− j

(7)

For vertices classified as “on surface”, the deformation
weight ωi is set to 1. Thus, after the last iteration
( j = N ), all vertices classified as “on surface” should be
projected right on the healthy tooth surface.

1445

accommodate the cement used to glue the inlay to the
tooth.
Finally, we create the actual inlay/onlay shape by merging
the two meshes using a simple mesh stitching algorithm,
similar to the method described in [HZLB05].The result is
a watertight two-manifold mesh without boundaries, thus
suitable for any CAM production method, including
Selective Laser Melting.

Figure 6: Ray casts and deformation vector directions
In each iteration, the Laplacian Surface Editing is reinitialized.

Figure 7: Inlay, ready for CAM
4.4. Fine Tuning

We introduce a global deformation weight G which is a
scaling factor for all weights. A suitable global
deformation weight for the respective iteration was
determined empirically to be

G =

2j
+ 0.1 .
N

(8)

Tests with a variety of clinical situations have suggested a
suitable number of iterations of N=12. Further increasing
the number does not necessarily yield better results.
4.3. Generating the inlay/onlay
The final classification, after the adaptation is completed,
will separate the tooth model into a part inside and a part
outside the preparation margin.

As pointed out by [ZHS*05], various mesh deformation
techniques, including Laplacian Surface Editing, do not
preserve the volume of the deformed shape very well with
larger deformations.
While in our particular application, volume preservation is
not generally required and may even be undesired (when
deforming the occlusal surface), we did observe situations
where the equator of the model tooth was overly deformed
- resulting in a reconstruction that will not meet the
standards expected by dental technicians. In particular,
approximal contacts (contact points to adjacent teeth) that
were present after the initial placement of the tooth model
could get lost during adaptation. This issue can be avoided
if certain vertices of the tooth model – located on the side
of the tooth, and classified as “above cavity” - are assigned
a nonzero deformation weight.

We now remove all vertices (and their associated triangles)
that are classified as “on surface” and do not have a
neighbor that is classified as “above cavity”. What remains
is a mesh that covers the cavity, with its boundary aligned
to the preparation margin.
Furthermore, we extract the “cavity mesh” from the scan of
the patient’s tooth by discarding all vertices/triangles that
do not lie within the preparation margin. The remaining
triangles will have their orientations inverted, and, if
required, an additional “cement gap” will be inserted to
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Figure 8: Weights

1446

T. Steinbrecher & M. Gerth / Dental Inlay and Onlay Construction by Iterative Laplacian Surface Editing

Fig. 8 shows a suitable selection for such vertices. Vertices
marked in black are assigned a weight of 1 and a zero
deformation vector (thus retaining them statically at their
initial location). The surrounding vertices marked in lighter
color are deformed with a weight of 0.5. This allows a
smoother transition between the “static” vertices and the
purely passively deformed ones. A finer grained weighting
did not lead to additional improvements.
To mark vertices appropriately, we consider their surface
normal (to make sure only vertices on the side of the tooth
are locked to their positions, and not those on the chewing
surface), and their distance to the nearest point classified as
“on surface”. The following straightforward method is
used:
For all “above cavity” vertices (weight=0) where the
surface normal is nearly orthogonal to the tooth axis:
• Calculate distance d to closest “on surface” vertex.
• If d > staticLimit: set weight to 1 (static), else
• If d > fuzzyLimit: set weight to 0.5
In practice, we set the constants fuzzyLimit to 0.75mm and
staticLimit to 1.3mm.
We may also insert additional deformation weights/vectors
to ensure a minimum thickness of the reconstruction, to
implement approximal contacts, or to optimize the
functional aspects of the occlusal surface – e.g. to consider
static occlusion if a properly registered antagonist scan is
available.

4.6. Comparison to a Level of Detail-based approach
Previous developments at our institute [AG01] used a
Level of Detail-based approach for the adaptation of the
tooth model to the remaining tooth surface. Below, the
tooth model for the second upper molar is shown at
different resolutions.

Figure 10: Refinement of a tooth model
With this approach, at lower level of detail a higher
movement of vertices is allowed during the energy-driven
deformation. As vertices located above the healthy tooth
surface will be treated differently from those above the
cavity, a false segmentation at a low level of detail will
result in problems that the algorithm cannot properly
recover from once a refinement step has been completed.
Fig. 11 below shows an artifact due to false classification
of a vertex in the lowest detail level.

Figure 11: Result of a LOD-based approach (left) and our
new algorithm (right)

Figure 9: Without and with fine tuning of weights (right)
4.5. Timing and memory information
Using library models with around 10.000 triangles, and
scans of patient teeth with about 150.000 triangles, the
automatic inlay generation for a single tooth takes between
10 and 20 seconds on a standard PC (2.2GHz, single core).
Segmentation accounts for around 45% of the run time, and
the Laplace deformation and related calculations for 55%
(approximate values; precise values depend on the individual data set).
Memory usage is moderate, between 20 and 50 MB, not
including the memory used by the involved meshes.

In order to achieve better reliability, efforts were made to
improve segmentation. However, despite a classification
based on a very complex set of rules, the dependability
required for integration in a commercial product could not
be achieved. This eventually led to the development of the
new algorithms presented here, which consistently provide
good results, even with the straightforward segmentation
algorithm described in section 4.1.
With our new approach, the mesh will be processed in full
resolution at all time during the iterative adaptation
process, so false classification of single vertices during the
early stages of the adaptation is not prone to cause artifacts
that are still noticeable once the adaptation is completed.
5. Discussion and Outlook
Thanks to advanced mesh deformation methods, our
algorithms allow the construction of functionally correct
and visually attractive inlays and onlays with just a small
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

T. Steinbrecher & M. Gerth / Dental Inlay and Onlay Construction by Iterative Laplacian Surface Editing
library of model teeth (1-2 different models for each tooth).
Due to the high level of automation of our approach, user
interaction during the construction is kept at an absolute
minimum, allowing fast and efficient design of dental
reconstructions.
If desired, dental technicians may use their own preferred
library teeth for their reconstructions, instead of having to
rely on whatever tooth library came with the Dental CAD
package they purchased.
After evaluation by experienced dental technicians, our
technology has been successfully integrated into a
commercially available Dental CAD/CAM solution, and is
now being used in production environments on a daily
basis. Thus, it has been applied to a wide range of different
clinical situations, with very promising results.
The robustness of the adaptation algorithm eliminates the
need for overly restrictive preparation rules that would lead
dentists to remove more of the healthy tooth substance than
strictly required.
With only minor modifications, the algorithms presented
here could be used for the automated design of ceramic
veneers, or could be applied in the construction of
Maryland bridges. We also use related technologies for the
construction of anatomic crowns – where Laplacian
Surface Editing helps to optimize the shape of the occlusal
surface, with regard to static and dynamic occlusion – and
for the generation of connectors for dental bridges.

1447

[MBH05] MEHL A., BLANZ V., HICKEL R.: Biogeneric
tooth: a new mathematical representation for tooth
morphology in lower first molars. Eu J Oral Sci, Volume
113, Number 4 (Aug 2005), 333-340.
[MDSB02] MEYER M., DESBRUN M., SCHROEDER P., BARR
A. H.: Discrete Differential-Geometry Operators for
Triangulated 2-Manifolds. VisMath, 2002.
[MLB07] MEHL A., LITZENBURGER A., BLANZ V.:
Functional Occlusal CAD-Reconstruction of Inlay and
Onlay Situations: the Biogeneric Approach (Title of
English abstract). aesthetische zahnmedizin, Vol 10,
Number 1 (2007), 12-18.
[NISA06] NEALEN A., IGARASHI T., SORKINE O., ALEXA M.:
Laplacian mesh optimization. GRAPHITE '06:
Proceedings of the 4th international conference on
Computer graphics and interactive techniques in
Australasia and Southeast Asia (2006), 381-389.
[SCL*04] SORKINE O., COHEN-OR O., LIPMAN Y., ALEXA
M., RÖSSL C., SEIDEL, H.-P.: Laplacian surface editing
Proceedings of the 2004 Eurographics/ACM
SIGGRAPH symposium on Geometry processing (2004),
179-188.
[SKR*06] STOLL C., KARNI Z., RÖSSL C., YAMAUCHI H.,
SEIDEL H.-P.: Template Deformation for Point Cloud
Fitting. Symposium on Point-Based Graphics (2006),
27-35

References
[AG01] ADOLPH S., GÜRKE S.: Modeling of a fitting inlay
from various information. VMV Stuttgart (2001), 309316.
[BS08] BOTSCH M., SORKINE O.: On Linear Variational
Surface Deformation Methods. IEEE Transactions on
Visualization and Computer Graphics, Vol. 14, Issue 1
(2008), 213-230.
[HZLB05] HASSNER T., ZELNIK-MANOR L., LEIFMAN G.,
BASRI R.: Minimal-Cut
Model
Composition.
Proceedings of the IEEE Int'l Conf. Shape Modeling

and Applications (SMI '05) (2005), 72-81.
[KK98] KARYPIS G., KUMAR V.: METIS 4.0: Unstructured
graph partitioning and sparse matrix ordering system.
Technical report, Department of Computer Science,
University of Minnesota (1998).
http://www.cs.umn.edu/˜metis/.
[LSO*04] LIPMAN Y., SORKINE O. COHEN-OR D., LEVIN D.,
RÖSSL C., SEIDEL H.-P.: Differential coordinates for
interactive mesh editing. Proceedings of Shape
Modeling International 2004, IEEE Computer Society
Press (2004), 181–190.
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

[Tau95] TAUBIN G.: A signal processing approach to fair
surface design. Proceedings of the 22nd Annual
Conference on Computer Graphics and interactive
Techniques S. G. Mair and R. Cook, Eds. SIGGRAPH
'95. ACM, 1995. 351-358.
[Tol03] TOLEDO S.: TAUCS: A Library of Sparse Linear
Solvers, version 2.2. Tel-Aviv University (Sep 2003)
http://www.tau.ac.il/~stoledo/taucs/.
[ZHS*05] ZHOU K., HUANG J., SNYDER J., LIU X., BAO H.,
GUO B., SHUM H.-Y. Large mesh deformation using the
volumetric graph Laplacian. ACM Transactions on
Graphics, Vol 24, Issue 3 (July 2005), 496-503

