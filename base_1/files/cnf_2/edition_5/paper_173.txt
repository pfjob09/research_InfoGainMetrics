DOI: 10.1111/j.1467-8659.2011.01884.x

COMPUTER GRAPHICS

forum

Volume 30 (2011), number 6 pp. 1681–1707

A Survey on Shape Correspondence
Oliver van Kaick,1 Hao Zhang,1 Ghassan Hamarneh1 and Daniel Cohen-Or2

1 School

of Computing Science, Simon Fraser University, Canada
{ovankaic, aoz, hamarneh}@sfu.ca
2 School of Computer Science, Tel Aviv University, Israel
dcor@tau.ac.il

Abstract
We review methods designed to compute correspondences between geometric shapes represented by triangle
meshes, contours or point sets. This survey is motivated in part by recent developments in space–time registration,
where one seeks a correspondence between non-rigid and time-varying surfaces, and semantic shape analysis,
which underlines a recent trend to incorporate shape understanding into the analysis pipeline. Establishing a
meaningful correspondence between shapes is often difficult because it generally requires an understanding of the
structure of the shapes at both the local and global levels, and sometimes the functionality of the shape parts as
well. Despite its inherent complexity, shape correspondence is a recurrent problem and an essential component of
numerous geometry processing applications. In this survey, we discuss the different forms of the correspondence
problem and review the main solution methods, aided by several classification criteria arising from the problem
definition. The main categories of classification are defined in terms of the input and output representation, objective
function and solution approach. We conclude the survey by discussing open problems and future perspectives.
Keywords: geometry processing, registration, shape analysis, semantic structure
ACM CCS: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling, Geometric algorithms,
languages, and systems.

1. Introduction
Finding a meaningful correspondence between two or more
shapes is a fundamental shape analysis task. The problem can
be generally stated as: given input shapes S1 , S2 , . . . , SN ,
find a meaningful relation (or mapping) between their elements, for example see Figure 1.Under different contexts, the
problem has also been referred to as registration, alignment
or simply matching. Shape correspondence is a key algorithmic component in tasks such as 3D scan alignment and
space–time reconstruction, as well as an indispensable prerequisite in diverse applications including attribute transfer,
shape interpolation and statistical modelling.
The correspondence problem has been traditionally studied in the image analysis communities, but this survey
is targeted towards the computer graphics audience. We
c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics
Association and Blackwell Publishing Ltd. Published by
Blackwell Publishing, 9600 Garsington Road, Oxford OX4
2DQ, UK and 350 Main Street, Malden, MA 02148, USA.

focus on methods operating on geometric shapes represented
by triangle meshes, contours or point sets, as opposed to images or volumes. We pay special attention to 3D shapes—
they provide explicit geometry information, but generally
lack a simple parameterization domain. Another distinction
is that image analysis often benefits from rich local descriptors based on colour and texture, whereas the descriptors
computed for shapes are generally not as distinctive.
Several specializations of the correspondence problem can
be considered. One may ask whether it is meaningful to
establish a correspondence in full, as in Figure 1, or only for
part of the shapes, as in Figure 2. The additional need to find
the common parts of the shapes not only increases the search
space but also makes it difficult to define a proper objective
function, making the partial correspondence problem harder
[GSH*07, ZSCO*08]. One may also consider the density of

1681

1682

O. van Kaick et al. / A Survey on Shape Correspondence

Figure 1: A meaningful correspondence (blue lines) between a sparse set of feature points on two shapes. Note
the large amount of geometric variations between the shapes
which make the computation of such a correspondence difficult.

Figure 3: An example of a collection of man-made shapes
(liquid containers) for which computing a correspondence is
a challenging problem. Note how the shapes can be constituted by different types and numbers of parts (e.g. one or two
handles, neck, base), how the parts of a same type can vary
in their geometry (e.g. long vs. short handles), and how they
can connect to each other in different manners.
of the whole shape or even topology. An example of such a
semantic correspondence problem is shown in Figure 3. In
general, computing such correspondences is difficult because
it involves understanding the structure of the shapes at both
the local and global levels, and possibly understanding the
functionality of the shape parts.

Figure 2: An example of a partial correspondence problem:
the goal here is to find a correspondence between Neptune’s
statue (left) and the human (right), by relating the parts in
yellow and ignoring the extra parts shown in green and blue.

the correspondence computed. Sparse correspondence only
seeks to identify and match a small set of landmark points.
However, it is as difficult as its dense counterpart, because
the challenging aspect of the correspondence search remains
essentially the same—in both cases it is necessary to consider
the global structures of the shapes and possibly the semantics
of their parts to obtain a meaningful solution. Often, a dense
correspondence is derived from a sparse one via some form
of interpolation [Ale02, KS04], although the computation of
a dense correspondence can also present challenges in certain
circumstances, for example in the case of partial matching or
when there are topology differences between the shapes.
Defining what is a meaningful correspondence depends on
the task at hand. The task can range from the simpler case
of identifying portions of the shapes that are geometrically
similar, to the more complex problem of relating elements
that represent the same parts or serve the same function on
the shapes. In the latter case, the matching parts may differ
significantly in their geometry, structure within the context

Classical applications of shape correspondence, such as
3D scan alignment or shape morphing, call for traditional
approaches which include rigid alignment and feature matching. Rigid alignment is typically solved with methods based
on sampling and verifying candidate transformations [IR96],
or by applying the iterated closest point algorithm or one of
its variations [RL01]. In the case of feature matching, shape
descriptors are computed for representative points sampled
from the shapes, and the correspondence is constructed by selecting the assignments that maximize the similarity between
the descriptors. Additional constraints can also be incorporated into this class of algorithms, such as the preservation
of distances between points.
More recent works are attempting to deal with large variations in the shapes, to the point where the rigid alignment
or feature matching criterion is no longer suitable. On one
hand, emerging techniques for surface deformation have
been successfully applied to non-rigid registration of surfaces [HAWG08, ZSCO*08]. On the other hand, progress in
matching approximately isometric shapes has also been revealed in recent works [BBBK08, LF09]. Finally, there is an
apparent recent trend to look beyond low-level geometric information and to incorporate high-level shape semantics into
the shape analysis pipeline. Examples of such works include
techniques for segmenting a mesh into parts [Sha08], finding
analogies between these parts [SSSCO08], transferring information [SP04] or part styles [XLZ*10] from one shape to
another, extracting the high-level structure of the shapes for
manipulation or deformation [XWY*09, GSMCO09], and
using prior knowledge to learn how to label a shape [KHS10]
or establish a correspondence [vKTS*11]. Computing a correspondence between shapes is one of the key problems that
can benefit from semantically-driven techniques, because the

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

O. van Kaick et al. / A Survey on Shape Correspondence

goal is to understand the structure of the shapes to find a
meaningful correspondence between their parts.
The rest of the paper is organized as follows. In Section 2,
we start by discussing the statement of the correspondence
problem and its different specializations. Next, in Section 3,
we give a more concrete overview of the problem in terms
of some example applications. Our classification criteria are
presented in Section 4, along with a detailed discussion of
the literature. In Section 5, we review the main solution
paradigms, whereas in Section 6, the validation of results
is considered. Applications that make use of correspondence
methods are summarized in Section 7. In Section 8, we review the previous surveys that covered the correspondence
problem. Finally, in Section 9, we summarize our view on
the state-of-the-art and elaborate on future perspectives.
2. Problem Statement
A variety of problems can be classified under the scope of
shape correspondence. As we will see in Section 3, significant
differences exist between these problems and the computational paradigms used for their solution also differ. However,
because all these different problems address the same fundamental task, we can view them all in a unified manner
by considering the problem statement: given input shapes
S1 , S2 , . . . , SN , establish a meaningful relation R between
their elements. When two elements are related to each other
[i.e. (s, z) ∈ R, for elements s ∈ Si and z ∈ Sj , with i = j ],
we say that they are in correspondence or that they match
to each other. The relation can be constrained in different
manners, such as asking for a one-to-one, one-to-many or
many-to-many correspondence.
The ultimate goal behind shape correspondence is to recognize the parts of the shapes and infer their purpose, so
that the mapping established from one shape to the other
is semantically meaningful. However, in several cases when
geometry provides enough information about the shapes, it is
sufficient to pose shape correspondence as the task of identifying homologous elements of two or more shapes, that is
the elements that possess the same or similar structure in
terms of their local appearance and context. The meaning
of elements and similar structure depend on the problem at
hand. However, a shape will be usually composed of multiple elements (primitives such as points, feature points, faces,
skeletal features or higher-level entities such as parts) and we
seek to find a correspondence between these elements.
It is important to distinguish between the problems of
shape correspondence and retrieval. Retrieval is the task
where, given a query shape, the goal is to find shapes from
a database that are similar to the query, tolerating a variety
of transformations and possibly considering partial similarities. Therefore, the focus is only in quantifying the similarity between shapes. In correspondence, however, the goal
is to find an explicit relation between the elements of two
or more shapes. The evaluation of shape similarity is some-

1683

times called shape matching in the literature (e.g. [VH01]),
which conflicts with the nomenclature followed by other authors who refer to shape matching exclusively as computing
a correspondence. Perhaps the reason for the interchangeable
use of these terms in the literature is that retrieval and correspondence are closely related problems, because computing
a correspondence and evaluating its quality is one possible
manner of assessing shape similarity.
The general correspondence problem stated earlier can be
specialized in different ways, which we discuss as follows.
2.1. Full versus partial correspondence
Following the problem definition, here we focus on the inclusion properties of the relation R. The required correspondence can be full (defined for all the shape elements) or
partial (defined for a subset of the elements). The motivation
for the latter is that the shapes under consideration may be
constituted by different parts (i.e. one shape can have missing or additional parts when compared to the others), and
so it may not be meaningful to establish a correspondence
between all their elements. These parts can differ by their
geometry, scale and connecting location on the object. An
example is shown in Figure 2.
Computing a partial correspondence is a more difficult
problem than computing a full correspondence, due to the
combinatorial explosion in the solution space. If we consider
all one-to-one assignments between shapes with n elements,
the solution space is composed of n! correspondences. If we
add the possibility for partial matching, the solution space includes all the possible subsets of these n!. Moreover, searching for the right subset increases the complexity of the problem and also requires a careful definition of the optimality
criterion.
2.2. Dense versus sparse correspondence
Another aspect to take into account is the density of the
relation R. A dense correspondence is defined for all the elements or primitives on the shape (e.g. mesh faces). A sparse
correspondence is defined for a small number of pre-selected
elements. The elements are usually a set of features. For example, to infer the semantics of human shapes, it is sufficient
to match representative points located at the legs, arms, head
and body of the shapes (a sparse correspondence). On the
other hand, for applications such as morphing or attribute
transfer between two shapes, a dense correspondence is required to guarantee global smoothness in the morphing or
transfer result.
Computing a sparse correspondence between representative points is a problem as hard as computing a dense one
between two shapes, because both problems necessarily involve taking into consideration the global structure of the
shapes [ZSCO*08]. A common approach to compute a dense

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1684

O. van Kaick et al. / A Survey on Shape Correspondence

in the computation [WH09]. Another example is to register
a group of shapes simultaneously, so that the group information can serve as an additional constraint in the solution
search [GF09, XLZ*10]. Moreover, a robust correspondence
between a group of shapes is the desired input for tasks
such as building a statistical description of a group of shapes
[DTT08], although in these methods the correspondence and
statistical model are typically computed in conjunction and
not as two independent procedures.

3. Overview of Correspondence Problems

Figure 4: Motivation for group correspondence: in this example, the skeletonization computed individually for each
2D shape (top row) is compared to the result of pruning
these skeletons with the method in [WH09] (bottom row),
which takes group information into account. It can be seen
how using group information improves the coherence of the
skeletons across shapes and also the quality of the branch
correspondence (shown by coinciding colours).
correspondence is to extend a sparse one with techniques such
as cross-parameterization or interpolation [Ale02].
2.3. Group correspondence
A specialized form of shape correspondence involves a group
of shapes simultaneously (i.e. N > 2, in our problem definition). Although this problem can be straightforwardly
solved by computing correspondences between all the pairs
of shapes in the group, considering all the shapes at once can
have advantages in the process. For example, as illustrated
in Figure 4, the group of shapes can provide information
to distinguish what structures or parts are common to all
the shapes and should be considered in the correspondence,
and which parts can be characterized as noise and ignored

Now, we give an overview of correspondence problems by
discussing them in a more concrete manner, while also describing some example applications. We can obtain a correspondence directly from the similarity of the elements, or we
can first align the shapes and then derive a correspondence
from the proximity of the aligned elements. Moreover, we
can also iterate between the two procedures. These options
directly affect which strategy should be selected to find the
correspondence. It is worth noting that the alignment between
the shapes is a side product of the computation which is useful and sometimes essential to the underlying application. We
will start by considering the case in which no alignment is
utilized, and then we discuss the scenarios where the relation
R is derived from aligning the shapes in a rigid or a non-rigid
manner. The distinction between these cases is illustrated in
Figure 5. We finalize with the instance where time dimension
is added to the data sets.
3.1. Similarity-based correspondence
One of the most fundamental ways of computing a correspondence is to estimate the similarity between pairs of shape elements or feature points collected from the shapes and derive
a correspondence from those estimates, which is sometimes
called the feature matching approach. The elements are commonly characterized by shape descriptors. A correspondence

Figure 5: Different manners of solving the correspondence problem for the input shapes shown in (a) and their feature points
(indicated by the dots): (b) computing a correspondence without explicitly bringing the shapes into alignment, (c) computing a
global rigid transformation to align the two shapes and (d) computing local non-rigid transformations for the shape primitives
to deform one shape into the other.
c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

O. van Kaick et al. / A Survey on Shape Correspondence

1685

is then obtained by selecting assignments between pairs of
elements while optimizing an objective function composed
of two terms. The first term seeks to maximize the similarity
between the descriptors of corresponding elements, whereas
the second term seeks to minimize the distortion that would
be introduced in the shapes if they were deformed to align
their corresponding elements. However, the second term is
estimated without explicitly aligning the shapes. Ideally, satisfying these objectives should translate into a solution that
is geometrically or semantically meaningful. Such a solution
is typically obtained with a standard optimization method
(e.g. quadratic programming). Feature matching can be applied in any context where it is possible to compute a set of
descriptors for the elements. Example applications include
registration of 3D scans [CCFM08] and deforming surfaces
[ASP*05], or skeleton matching [BMSF06].

rigid alignment can be posed as: find the rigid transformation
that, when applied to S, maximizes the number of points in
S that align to points in Z. This goal is usually dependent on
a threshold that indicates when two points are close enough
and can be considered as matching to each other [IR96]. Following this formulation, alignment with rigid or even affine
transformations is a problem with a clear objective function,
and efficient algorithms also exist to optimally solve such
instances. However, as the complexity of these algorithms is
still at least quadratic in the number of input elements, heuristics can be used to speed up the solution search, for example
by exploring candidate assignments suggested by the feature
matching approach, or randomizing steps of the algorithms
[IR96]. Alternatively, a local-search algorithm such as the
Iterated Closest Point (ICP) [RL01] can also be used.

A correspondence problem that takes into account only the
similarity of shape descriptors can be solved effectively by
posing it as a linear assignment [PS82]. With the introduction of the distortion term, the problem becomes NP-hard.
However, when the two shapes differ by a limited amount
of deformation, good approximate solutions can still be obtained with heuristic algorithms, especially with a relaxation
of the problem to the continuous domain (e.g. the softassign
technique [GR95] or spectral clustering [LH05]). Moreover,
the feature matching approach is not restricted to its own domain and can be combined with alignment-based approaches
to provide a proper initialization to these methods [RL01], or
to restrict the size of the solution space [GMGP05, AMCO08,
CZ08, ACOT*10], which also contributes to a practical solution of these problems.

3.3. Non-rigid alignment

3.2. Rigid alignment
Under certain assumptions, it is possible to pose the correspondence problem as a search for a geometric transformation that aligns the shapes. One example application is the
rigid alignment of geometry scans used for shape acquisition. The goal here is to capture a real-world static 3D shape
and obtain its digital representation. However, it may not be
possible to capture the entire object in a single scanning pass
due to self-occlusions and physical constraints of the scanner, so it is often necessary to acquire multiple scans and
optimally align them to reconstruct the full object [TL94,
RL01, GMGP05, AMCO08]. The key characteristic of the
rigid alignment problem is that the objects do not change
from one scanning pass to another. Thus, it is assumed that
each scan can be transformed with a single rigid transformation in order to align it perfectly with the other scans. Rigid
transformations comprise mainly translations and rotations,
and one of their important characteristics is that they reside
in a low-dimensional space.
Scan alignment is just one example of many applications
that rely on the assumption of rigidity in the data sets. For
two shapes given as 3D point sets S and Z, the problem of

It might be necessary to lift the assumption that each scan can
be perfectly aligned with a rigid transformation, for example
when large amounts of noise are present in the scans. More
significant examples of such data sets include the correspondence of articulated shapes [EK03, ASP*05, JZvK07, CZ08,
HAWG08], where certain parts of the shapes can bend independently, the correspondence of anatomical shapes (e.g.
organs) [AFP00], which can deform in an elastic manner and
introduce stretching to localized portions of the shape, and
finally the correspondence of shapes with different geometries but that represent a class of objects with parts that are
semantically related [ACP03, ZSCO*08]. In the latter case,
we can see the problem as that of establishing a correspondence between shapes that can differ in both local stretching
and bending.
In this setting, it becomes necessary to add more freedom
to how the shapes can be brought into correspondence. This
can be achieved by generalizing two aspects of the problem.
First, non-rigid (possibly non-linear) transformations can
be taken into consideration, for example thin-plate splines
[CR03]. Secondly, these transformations can be applied separately to local portions of the shape. For example, the transformation applied to a shape can be represented as a set
of displacement vectors (one per shape vertex) [PMG*05].
Then, finding the best transformation amounts to computing
the displacements that bring each vertex in correspondence
with the target shape. The distinction from the rigid case is
that the space of geometric transformations being considered
is now inherently high dimensional.
Because of the high-dimensional nature of the solution
space, these problems are typically solved with a form of
local or approximate search, for example gradient descent
[ACP03] or a combination of the non-linear transformations
with the feature matching approach [CR03]. However, although heuristic solution methods are available, the quality of the results will typically depend on the complexity of the problem instance and the level of approximation

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1686

O. van Kaick et al. / A Survey on Shape Correspondence

introduced by the methods. As in the case of feature matching
approaches, if there are more constraints available, they can
be used to guide the algorithms more effectively to a correct
solution.

3. meaningful → which correspondence should be selected (which correspondence is closer to our objective)?
4. establish → what approach is used to compute the correspondence?

3.4. Time-varying registration
Because of recent technological advances, an application that
is attracting increasing attention is the reconstruction of 3D
shapes acquired over time while moving and deforming. In
this setting, a fixed number of scans is acquired per time step,
and these scans have to be registered to allow the reconstruction of both the object and the motion sequence [MFO*07,
WJH*07, SAL*08, PG08, dAST*08, LAGP09, GSdA*09,
CZ09, TBW*09, ZST*10].
Although this may seem like another instance of the nonrigid alignment problem, there are certain particularities that
make this problem unique. In the classic registration problem,
it is assumed that all the scans can be registered to compose
a single and coherent object. On the other hand, the timevarying setting introduces the additional difficulty that the
shape might have deformed significantly from one frame to
the other. Therefore, scans acquired later in time may only
be registered to the earlier scans if the deformation is taken
into account. Moreover, additional challenges are the large
amount of missing data (due to occlusion) that can be present
in each frame [PG08], and data sets that were captured over
sparse time frames [CZ09, ZST*10]. However, the addition
of temporal constraints can also help in reducing the size of
the search space (e.g. kinematic constraints [MFO*07]).
Having established the basic notions related to shape correspondence, we next divide the problem into its relevant
components and analyse each of them in more detail.
4. Classification of Correspondence Methods
In this section, we present several ways of classifying the
correspondence methods discussed in this report. The purpose of these classifications is to allow readers to compare
the methods not only by their algorithmic aspects, but also
by the properties of the problems that can be handled and the
requirements of the methods. These include questions such
as what subproblems the method can handle (e.g. partial correspondence, rigid registration, etc.), what data sets can be
handled, what initialization the method requires, etc.
We group the classification criteria based on the problem statement, which we review here once more: given input
shapes S1 , S2 , . . . , SN , establish a meaningful relation R between their elements. To make this statement more concrete,
we link its keywords to the following questions.

Answering these questions leads to the different classification categories. We follow with a detailed discussion of
these criteria, summarized in Figure 6.
4.1. Input shapes
The geometry of the input data sets can be represented as
point sets, oriented points (points with normals), surfaces,
skeletons, images, volumes or parts. Their dimensionality
can be 2D, 3D, or they can be spatio-temporal: 2D + time
or 3D + time. We focus on 2D and 3D shapes (point sets,
surfaces and skeletons). Surfaces can be represented implicitly (e.g. level sets) or explicitly (e.g. triangle meshes). One
extra distinction in the case of triangle meshes is whether
they need to represent well-defined manifolds or if they can
be made up of triangle soups.
Classic registration methods such as RANSAC [FB81],
geometric hashing [WR97], pose clustering [Ols97] and
alignment [HU90] typically work with point sets. Surfaces are the common representation for recent methods
based on deformation [HAWG08, ZSCO*08], methods that
work on isometric surfaces [BBBK08, LF09] or articulated
shapes [CZ08] and graphics applications based on template
matching [ACP03, PMG*05, LAGP09]. Time-varying surfaces are the focus of works on motion reconstruction of
deforming surfaces [MFO*07, WJH*07, SAL*08, PG08,
GSdA*09, LAGP09, ZST*10]. Skeleton is a more general
name for shape representations such as the medial axis, Reeb
graphs, curve skeletons or M-reps [SP08, CSM07, HSKK01,
PCFea03, SSGD03, BMSF06, ACOT*10].
These data sets can be obtained from a variety of sources,
such as 3D scanners (based on LASER, structured light,
physical contact, etc.) that provide point clouds, manual
modelling via software which commonly results in triangle meshes, or images and volumes obtained with different imaging equipment, such as digital cameras, ultrasound,
magnetic resonance imaging (MRI) and computed tomography (CT). Surfaces are typically extracted from images or
volumes via image segmentation or isosurfacing. Skeletons
are commonly obtained from surfaces by an extra processing
step [CSM07], and they capture more structural information (such as shape parts represented as branches and their
associated thicknesses).

Keyword → Question
1. shapes → how are the input shapes represented?
2. relation → how is the output correspondence represented and what properties does it possess?

4.1.1. Shape descriptors
Instead of making use of the data sets in their original representation, an alternative characterization can be obtained by

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1687

O. van Kaick et al. / A Survey on Shape Correspondence

Figure 6: Schematic view of the classification criteria followed in this work (a hierarchy read from left to right). The first entries
are the components of the problem statement used to group the different criteria.

extracting representative points (features) from the shapes
and computing descriptors for these points. The descriptors will typically be scalar values or vectors of scalars
that capture some property of the shape around the neighbourhood of the interest point. The shape descriptors are
then used to indirectly establish the similarity between the
data sets by assessing the similarity between the descriptors. Ideally, if two descriptors are similar, their corresponding points should also be similar. Alternatively, the descriptors can be used to guide the search for initial solutions,
whereas the final verification of the correspondence quality
is performed with the original data set (e.g. [AMCO08]).
Note that we can see the approach of comparing descriptors
as a general correspondence framework, because the positions of the feature points themselves can be regarded as
descriptors.
A variety of descriptors have been proposed in the literature and a discussion of their characteristics can be found in
[VH01, BKS*05, TV08], whereas a comparison of descriptors for the image case is presented in [MS05]. In Table 1,
we list a partial set of descriptors, which can be computed
for each shape primitive and used in conjunction with correspondence algorithms for 2D surfaces or 3D point sets. Such
a set of descriptors is the typical input to optimization- or

Table 1: A subset of the shape descriptors proposed in the literature
that can be used for shape correspondence.

Descriptor

Type of data set

Shape context [BMP00, KPNK03]
Spin images [JH99]
Multiscale features [LG05]
Curvature maps [GGGZ05]
Integral invariants [GMGP05, MCH*06]
Spherical harmonics and wavelets [FS06,
NSN*07, CHDD08, KH08]
Salient geometric features [GCO06]
Part-aware metric [LZSCO09]
Heat Kernel Signature [SOG09]

Point sets
Oriented points
Oriented points
Surfaces
Surfaces
Surfaces
Surfaces
Surfaces
Surfaces

search-based matching methods used in vision and graphics [MC03, ASP*05, BBM05, LH05, GMGP05, ZSCO*08].
A descriptor that has recently attracted a lot of interest is the Heat Kernel Signature [SOG09], related to the
Laplace-Beltrami operator on surfaces and the spatial embeddings derived from it (Section 5.4). This signature is preserved under isometries [OMMG10] and can be defined in a

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1688

O. van Kaick et al. / A Survey on Shape Correspondence

multiscale manner to aid in the search of partial correspondences [OMMG10, DLL*10].
Another interesting related problem is how to choose the
set of descriptors that gives the best correspondence results, a
problem known as feature selection in the machine learning
literature [GE03, WH07, KHS10, vKTS*11].
4.2. Output correspondence
A correspondence between shapes can be represented in different manners and can possess different properties, which
we discuss as follows.
4.2.1. Correspondence representation
A correspondence can be represented as a transformation applied to the shapes (either a single transformation or multiple
transformations) or simply as a relation between elements of
the data sets, that is a set of pairwise assignments between
vertices, parts, etc.
Correspondence + transformation: When utilizing a single
transformation or a set of them, one of the distinguishing factors is the type of transformation that is utilized. These transformations can be ordered by increasing number of degrees
of freedom: translation, rigid transformation (translations and
rotations), similarity transformation (includes isotropic scaling), affine transformation (adds shearing) and non-linear
deformation (includes non-linear transformations).
A rigid transformation preserves the pairwise distances
between points and can be decomposed into translations, rotations and reflections. Therefore, it is the common choice
when dealing with problems such as scan registration [RL01,
GMGP05]. Similarity transformations incorporate the possibility of uniform scaling into the rigid transformations, which
might be necessary in certain contexts such as matching patterns to limited portions of larger data sets (e.g. repeated
pattern detection as in [PMW*08]). Moreover, affine transformations extend the previous set of transformations by also
taking into consideration the possibility of shearing, which
can be used at a global [IR96, AMCO08] or a local [ACP03,
SP04] level. When matching non-rigid surfaces that possess the topology of a sphere, the natural transformation to
use is the group of homographic or M¨obius transformations
(Figure 7), which are conformal (preserve angles) and contain the group of isometric transformations (which preserve
distances) [LF09]. Finally, in more general cases of non-rigid
alignment, it might be necessary to allow the shape elements
to move freely to match with the corresponding data set,
which can be seen as assigning a non-linear deformable
transformation (e.g. a displacement) to each element
[PMG*05].
We must also distinguish whether the transformation is
applied to the shape as a whole (a global transformation),

Figure 7: Utilizing M¨obius transformations for shape correspondence [LF09]: the meshes for a cat in two different poses
are flattened onto the complex plane. Next, a M¨obius transformation can be defined from three corresponding pairs of
points (red, green and blue). By applying the transformation
to the flattening of the first pose (top-left), the result at the
bottom-left is obtained, which looks similar to the flattening
of the second pose (bottom-right).

or whether it is applied in a local manner, i.e. to parts or
elements of the shape. The global case is a central concept
in the problem of rigid alignment, whereas the local case is
usual in tasks of a non-rigid nature.
Correspondence only: When working only with a correspondence, the relation R can be limited to represent a bijection (one-to-one mapping), an injection (the relation has
to be defined for every element of one of the shapes taken as
reference, but it can be a one-to-many mapping), or a full relation can be allowed (many-to-many). Moreover, we might
require a one-to-one or one-to-many mapping only for a subset of elements, such as in a partial correspondence where
we allow some elements not to be part of any assignment.
Certain methods allow the user to select which type of
mapping is desired, such as [LH05], where the final correspondence is obtained by filtering an initial result according
to the mapping constraints. Other approaches assume that the
focus of interest is only on a specific type of mapping and
proceed to build their method over such an assumption (e.g.
[MC03, BBM05], in which the correspondence problem is
posed as an optimization where the mappings are constrained
to be one-to-one).
A correspondence can also be characterized by whether
a confidence value is assigned to the pairwise assignments.
The assignments can be characterized as crisp (either an assignment is part of the correspondence or not) or fuzzy (they
have a degree of confidence or probability attached to them).

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1689

O. van Kaick et al. / A Survey on Shape Correspondence

The first case can be seen as that where a binary confidence
is associated to each assignment. The type of confidence
measure that is available depends on the correspondence algorithm. For example, the method in [ZS08] formulates the
correspondence problem in a probabilistic context and returns a probability associated to each assignment. The methods based on relaxation to the continuous domain also return
a confidence weight attached to each assignment, for example
the softassign technique [CR03, GRL*98] or spectral clustering [LH05]. On the other hand, the methods in [MC03,
BBM05] return mainly binary outputs, because they formulate the problem in terms of integer optimization.

4.2.2. Full versus partial correspondence
Some methods are only suitable for contexts in which the
full extent of the shapes is considered, whereas others are
able to compute a partial correspondence. In general, if a
method can find solutions to the partial case, it will also
be applicable to the full correspondence case (whereas the
reverse is not necessarily true). Because computing a partial
correspondence is an important problem, we discuss such
methods in more detail in Section 5.5.
4.2.3. Dense versus sparse
The advantage of defining the problem in terms of a sparse
correspondence is that the complexity of the computation (in
time and space) might be reduced by considering smaller sets
of elements. Some techniques were designed by taking this
view into consideration, such as the search-based methods
described in [GMGP05, ZSCO*08]. Despite their associated
exponential search space, these methods can be utilized in
practice by considering a sparse set of feature points extracted
from the shapes. Other methods do not make a strong distinction between these two cases and work interchangeably for
computing both sparse and dense correspondences, because
their complexity increases linearly with the number of elements in the shapes (e.g. some of the optimization methods
discussed in Section 5). Finally, a collection of methods have
been created to compute a dense correspondence from an initial sparse one, such as the cross-parameterization methods
surveyed in [Ale02] or more general algorithms which take
an initial set of markers as input for computing a non-rigid
correspondence [ACP03, SP04, PMG*05, SSB05]. The definition of a distance metric on the surfaces can also be used for
extending a sparse correspondence, such as the biharmonic
distance [LRF10].

function. Its formulation depends on the type of input data
set (points, surfaces, etc.), and also on the specific problems
to be solved (partial correspondence, rigid alignment, etc.).
Here, we will mainly look at the objective function from the
perspective of the overview given in Section 3.
4.3.1. Similarity-based correspondence
When the goal is to find a correspondence between two data
sets without first aligning the shapes, shape descriptors and
intrinsic measures to quantify the quality of the correspondence must be used. Therefore, for two shapes P and Q and
a correspondence relation R, the objective takes the form
Obj(P, Q, R) = Sim(P, Q, R) + α Distor(P, Q, R),
(1)
with a similarity term that is linear on the number of feature points and a distortion term that is usually quadratic
on the number of feature points, because it commonly involves comparing properties of pairs of points. The weight α
controls the influence of each term in the objective function.
Automatically setting α to a value that reflects the user’s goal
can also be a challenging problem [CMC*09].
Similarity term: This term encodes the similarity of the
shape descriptors of points in correspondence (Section 4.1).
The descriptors can also include geometric attributes such as
point normals or local frames, which can give an indication
of whether the orientation of the points is coherent across the
two matched point sets [ASP*05].
Distortion term: The distortion term quantifies how much
the shapes would be deformed if their corresponding elements were brought into alignment. A common candidate for
a distortion measure is the disparity in the distances between
pairs of matched points. The disparity is an approximate way
of measuring the distortion introduced by the correspondence
without having to first align the shapes. It can be expressed
as
Dispar(p1 , p2 , q1 , q2 ), (2)

Distor(P, Q, R) =
{p1 , p2 } ⊂ P
{q1 , q2 } ⊂ Q

where (p1 , q1 ) ∈ R and (p2 , q2 ) ∈ R. The disparity term between two pairs {p 1 , p 2 } and {q 1 , q 2 } can be given by the
difference in the distances between the pairs of points
Dispar(p1 , p2 , q1 , q2 ) = |distP (p1 , p2 ) − distQ (q1 , q2 )| . (3)

4.3. Objective function

Any appropriate distance measure can be used. Examples
include Euclidean distance [CZ08], or geodesic distance in
the case of surfaces [ASP*05],

The objective function provides a measure of how good a
given correspondence is, or how far it is from the desired
solution. It is sometimes referred to as the error measure,
the cost function or the energy, in the case of methods that
formulate the problem as the minimization of some energy

Alternatively, the compatibility between pairs of assignments can be evaluated with the intersection configuration
distance [SCF10], which utilizes fuzzy geodesics (a generalization of surface geodesics) to measure the similarity in the
structural arrangement of points on the shapes.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1690

O. van Kaick et al. / A Survey on Shape Correspondence

metric parts of the shape (Figure 9), which usually pass undetected when only pairwise distances are utilized. Note that
the deformation can also be performed at the part level and
with the aid of binary relations between parts [XLZ*10].
(a)

(b)
4.3.2. Rigid alignment
For the problem of rigid alignment between two or more data
sets (e.g. point sets), the objective is commonly defined in
terms of the number of matching points, or given by a metric
that quantifies how well the data sets align to each other.
(c)

Figure 8: Example of using a deformation to assess the
quality of a correspondence (with the method described in
[ZSCO*08]): the triceratops in (a) is deformed to match the
pig in (b), according to a set of pairwise assignments between
feature points (coloured in red and blue). The result of the
deformation is shown in (c).

Largest common point set (LCP): Here the interest is in finding a transformation that brings the largest number of points
into correspondence [IR96, AMCO08], given a threshold
which indicates whether two points are close enough and
can be considered as matching to each other. Therefore, the
objective is to maximize the cardinality of the set of matched
points. It can be expressed for two point sets P and Q as
Match(p, Q),

LCP (P, Q) =
Deformation: A more elaborate form of quantifying distortion is to use a global deformation measure, such as described in [HAWG08, ZSCO*08]. Once the matching of feature points is known, one shape can be deformed into the
other so that the matched points are aligned. An example of
this procedure is shown in Figure 8. Notice that this is different from the non-rigid deformation case, because here a
correspondence is already available and only an estimate of
the distortion is needed, while on the former case the shapes
are deformed to establish the actual correspondence. For this
step, one of the recently proposed deformation methods can
be utilized, as in the surveys [Sor06, SSP07]. Then, measuring how much the surfaces had to deform to align to each
other (an intrinsic rigidity energy) gives an indication of the
distortion introduced by the correspondence. One advantage
of using a surface-based deformation energy is that it is able
to differentiate between correspondences that switch sym-

(4)

p∈P

where
Match(p, Q) =

1 if ∃ q ∈ Q, s. t. p − q <
0 otherwise

(5)

for some distance measure . . . .
Geometric distance: Another common objective function
does not rely on a parameter but minimizes the alignment
error given by the sum of squared distances between points.
That is, for each point in the transformed set, the closest point
in the reference set is found and the distance between these
two points is added to the error measure, expressed as
Dist(p, Q),

Dist(P, Q) =

(6)

p∈P

Figure 9: When searching for a correspondence between the two dinosaur models shown on the left, a rigidity energy assigns
a higher value to a correspondence that switches the limbs of the dinosaur (to the right), than to a correspondence that does not
switch any symmetric parts of the shape [ZSCO*08].
c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

O. van Kaick et al. / A Survey on Shape Correspondence

where

1691

Section 5. Here we consider additional classification criteria
based on particular properties of the solution approaches.
Dist(p, Q) = min p − q .
q∈Q

(7)

This is the common measure utilized in algorithms such as the
Iterated Closest Point (ICP) [RL01]. Variants of this scheme
can also be utilized, for example by adding orientation or
surface information [CM92], where Dist(p, Q) is replaced
by a more elaborate point-to-surface measure when our data
sets P and Q are given as surfaces.
From the above, the LCP formulation has the advantage
that partial matching can be directly handled by the objective function, because the largest set of matching points will
correspond to the region of overlap between the two point
sets. The sum of squared distances will necessarily consider
all the points in the objective, unless the user provides the
algorithm with an estimate of the amount of overlap between
the point sets or a threshold to identify points that are too far
away from each other [RL01].
4.3.3. Non-rigid alignment
In the case that the shapes are aligned to each other by a
non-rigid deformation, the objective will have to incorporate
terms to quantify when such a transformation is meaningful. That is, if each vertex can move freely according to its
own transformation or displacement, some form of global
consistency (regularization) has to be enforced. Such a regularization can be obtained by limiting the number of degrees
of freedom of the transformations or by penalizing large
deformations. For example, we can demand the transformations of neighbouring vertices to be similar (which provides
a smooth transition of transformations from one vertex to the
other). Such a transformation similarity can be measured in a
direct manner (e.g. by the norm between the matrix representations of the transformations [ACP03, SP04]) or according
to derivatives [PMG*05].
Moreover, as in the case of similarity-based matching, the
error measure in the non-rigid case also includes a quantification of how well the data sets are aligned. This can be given
by a measure of geometric distance (similar to the rigid case
discussed above) [SP04, PMG*05] or point to plane distance
in the case of surfaces [ACP03].
4.4. Solution approach
A variety of techniques can be utilized to search for the best
correspondence. In terms of the solution paradigm, there
are methods that search for a transformation that aligns the
shapes, methods that only consider the pairwise assignments
between elements and find a solution using well-known optimization or search techniques, and methods that perform a
hybrid search, alternating between alignment and correspondence computation. We discuss these solution strategies in

4.4.1. Fully-automatic versus semi-automatic
Semi-automatic methods require user input, such as a proper
initialization or a set of corresponding landmarks between
the shapes. Fully-automatic methods do not require any
user input besides a few parameter values. Semi-automatic
methods include the approaches for cross-parameterization
[Ale02] and methods that take markers as input [ACP03,
SP04, PMG*05, SSB05].
Although user input is required for the proper initialization
of certain methods, this can also be seen as a necessary requirement when the semantics of the shapes cannot be easily
inferred. Therefore, a track open for future research is that of
methods based on a feedback loop, where the user gradually
improves a correspondence based on his or her preferences.
Ideally, such a method would minimize the amount of user
interaction and provide hints on what information is missing
to refine the correspondence.

4.4.2. Global versus local search
The distinction here is whether the method explores the whole
solution space in search of a good solution (e.g. by performing an exhaustive search [GMGP05, ZSCO*08]) or whether
the results of the method depend directly on its initialization. The initialization can be given by a user, as with semiautomatic methods, or by a fully-automatic method, whose
solution will be used as the starting point for the local search
of the algorithm.
The most prominent example of the local search category
is the ICP algorithm [RL01], which alternates the computation of correspondences between points (given by the closest
points) with the computation of an aligning transformation.
Because this iterative process follows a single path in the
solution space, it can end up with a result that is a local minimum. Thus, the initial state clearly influences the final result
of the algorithm, and therefore different forms of initialization have been proposed for this algorithm (which take the
form of computing a pre-alignment between the shapes to be
matched). These are discussed in detail in Section 5.
Another example of algorithms that perform local search
are the methods for non-rigid alignment based on explicitly computing the transformation for each shape element.
Because these transformations are computed with a method
based on gradient descent or Newton’s optimization, the initialization will also necessarily influence the final correspondence result [ACP03, SP04, PMG*05].

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1692

O. van Kaick et al. / A Survey on Shape Correspondence

4.4.3. Pairwise versus groupwise
Methods for group correspondence appear predominantly
in the computational anatomy community [HM09], where
a coherent correspondence between a group of shapes is
important for the accurate construction of a statistical model.
A successful class of methods for this case is based on the
minimum description length approach, where quality criteria
of the statistical model are used to guide the computation of
the group correspondence and simultaneous construction of
the statistical model [DTT08].
Although the term group correspondence is not used in the
field of time-varying reconstruction, a certain class of methods applied to this problem can also be seen as following this
approach, because all scans are considered simultaneously
in the registration. The difference to the case of anatomical
shapes is that each scan can deform over time and there can be
a significant amount of missing data between frames, while in
the anatomy case the goal is typically a full correspondence
between complete shapes, which are seen as variations from
the same mean shape of an organ or bone. The time-varying
reconstruction methods pose the problem as the reconstruction of a space–time surface [MFO*07, SWG08, SAL*08],
or obtain a skeleton that is coherent for all the time frames
[ZST*10]. The advantage of such formulations is that missing data can be filled in with data from frames that are further
away in time.
5. Representative Methods
We use the classification based on how the correspondence
is obtained as the starting point to cover the discussion of
individual methods. Thus, the methods are primarily classified into those that search for an aligning transformation,
those that search directly for a correspondence without performing alignment, and the ICP method, which works in
a hybrid manner alternating between transformation search
and correspondence search. Next, we discuss the use of embeddings, which can be applied for non-rigid alignment by
combining them with methods for the rigid case, and then we
conclude with a discussion on methods for computing partial
correspondences.
It is worth noting that many of the methods discussed here
are also applicable to images. The differences lie in the procedures that extract feature points, compute shape descriptors
and quantify the distortion introduced by a correspondence,
which are dependent on the data representation. In the case of
images, the problems of measuring distances and preserving
the neighbourhood structures of elements are simplified by
the regular parameterization that is enforced by these data
sets [TH08]. Furthermore, we might also have to consider
different types of transformations (e.g., the projection of a
3D shape onto a 2D plane), for problems such as matching
stereo images or registration of images taken from different
viewpoints [Bro92].

Figure 10: Example of the alignment procedure in 3D for
two partial scans of the Coati model (shown to the left):
three points are sampled on each scan (the coloured dots)
and a rigid transformation is derived. The solution is found
when the candidate transformation aligns the largest possible
number of points (to the right) [AMCO08].

5.1. Transformation and alignment search
We recall that methods in this class first search for a transformation that aligns the shapes, and then derive the correspondence from the proximity of the aligned elements.
5.1.1. Rigid alignment
Methods for rigid alignment rely on the fact that the transformations used for alignment can be derived from a small
set of sample points. For example, if considering a rigid
transformation between two point sets in 3D, its parameters
(given by a rotation matrix and a translation vector) can be
derived from an initial configuration of three points and their
transformed positions. After sampling a transformation, the
algorithm can either verify the quality of the alignment or
vote on the transformation.
Sample and verify: Under assumptions of rigidity, a naive
alignment algorithm is given by a direct application of the
sampling idea above [HU90]. Specifically, the algorithm
samples three points from the first shape and three points
from the second shape, derives a rigid transformation, and
tests how well the transformation aligns the two shapes (e.g.
with one of the objectives discussed in Section 4.3). This is
illustrated in Figure 10. After testing all possible triplets of
points in the two shapes, the best transformation is returned.
This naive algorithm in 3D has a complexity of O(m3 n3 )
for sampling the triplets of points and O(mlog n) for the
verification, yielding a total complexity of O(m4 n3 log n) for
aligning two point sets of size m and n.
Clearly, such an algorithm is far from efficient. Thus, different modifications have been proposed to improve upon the
idea. Approaches following the philosophy of the random
sample consensus (RANSAC) method propose to randomize
the different steps in the procedure described earlier [FB81].
Instead of sampling all possible triplets of points on one
shape, only a constant-sized set of random samples has to be

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

O. van Kaick et al. / A Survey on Shape Correspondence

1693

considered, reducing the complexity by a factor of O(m ).
Furthermore, the verification step can also be randomized,
reducing the complexity by another factor of O(m) in the
typical case [IR96].
3

Other approaches propose to explore geometric invariances maintained by the transformations. One such case is
the ratio of distances between three coplanar points, which
is preserved by rigid and affine transformations. Thus, the
problem of searching for triplets of points that provide the
optimal transformation can be transposed to that of finding
four sets of coplanar points that share the same ratios [Hut91].
By pre-processing these invariances and keeping them in
appropriate data structures that allow for efficient retrieval,
output-sensitive methods can be achieved [AMCO08], reducing the complexity of the alignment problem even further
to O(n2 + k), where k is the size of the reported output.
Sample and vote: Instead of sampling a transformation and
evaluating its quality, the verification step can be replaced by
a voting procedure. For this purpose, pose clustering utilizes
an accumulation table [Sto87, Ols97]. After enumerating two
triplets of points and deriving a transformation, a vote indexed by the parameters of the transformation is stored in
the table. At the end of this O(m3 n3 ) process, the cells with
most votes correspond to the best candidate transformations
that align the point sets. Note that processing the accumulation table requires an extra O(h) step dependent on the size
h of the table.
Geometric hashing is a voting-based method that makes
use of pre-processing to speed up the alignment [WR97]. Its
main idea is to store in a hash table all the possible configurations of a group of reference point sets, so that when
we seek the reference point set that best matches to a query
point set, this search can be performed efficiently. We can
informally look at this method as breaking the O(m3 n3 )
complexity of the naive enumeration into an O(m3 log m)
pre-processing phase (which samples all the possible configurations of a reference set and stores them in the hash table)
and an O(n3 log n) query phase (which samples all the possible configurations of the query set and accumulates votes
in the hash table to allow the retrieval of the best matching
reference set). The increase in speed in the query phase is
gained at the cost of using more memory.
Remarks: As we see from the discussion, these alignment
techniques are all closely related and their complexity can be
compared as in Table 2. Randomized versions of geometric
hashing and pose clustering were also proposed in the literature. Note that a special case of rigid alignment arises when
the goal is to minimize the mean squared error between two
point sets. In this case, a search for the best aligning transformation is not needed, because the transformation can be
obtained directly via the singular value decomposition of
a covariance matrix [Ume91]. Another observation is that
the principle of sampling and verifying transformations also

Figure 11: Example of non-rigid alignment of articulated
shapes: candidate correspondences are obtained by matching vertices with similar shape descriptors (top left). The
candidates are used to derive transformations, which are
then clustered (top right) and assigned to the shape vertices
according to a labelling algorithm [CZ08]. The result of
labelling two corresponding shapes is shown on the bottom.

applies to other contexts with different types of transformations. For example, in [LF09], M¨obius transformations are
used to establish a correspondence between shapes that are
approximately isometric. These transformations can also be
derived from triplets of points sampled from each shape (as
illustrated in Figure 7).

5.1.2. Piecewise-rigid alignment
The methods discussed so far utilize one global transformation to match one shape to another. A different class of
methods generalizes this idea by applying transformations
to local portions of the shapes. In [CZ08], these transformations are applied in a piece-wise rigid manner to establish a correspondence between articulated shapes. The
problem is formulated as labelling the vertices of the shapes
with candidate transformations, which were estimated by
aligning the local frames of vertices with similar descriptors
(Figure 11). Since now the vertices are restricted to possess a
transformation from a pre-defined set, the solution search is
greatly simplified, in contrast to the methods that allow any
transformation to be assigned to a vertex. By also adding a
regularization term to the labelling optimization, a grouping
of the vertices into rigid components is guaranteed. An alternative to this approach is to explicitly fit the shapes to a
kinematic skeleton of articulated bones, so that the skeleton
can be used to track the movement of the shape and also
infer in which regions there is missing data [PG08, CZ09,
GSdA*09].

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1694

O. van Kaick et al. / A Survey on Shape Correspondence

Table 2: Complexity of rigid registration methods for two sets with m and n points.
Approach

Alignment

Pose clustering

Method

Naive algorithm
Randomized
Randomized verification
Sets of four coplanar points
Naive algorithm
Randomized

Approach
2D Geometric hashing

2D
Time

3D
Space

Time

Space

O(m3 n2 log n)
O(mn2 log n)
O((n2 r + lm)log n) ≈ O(n2 log n)
O(n2 + k)
O(m2 n2 + h)
O(mn2 + h)

–
–
–
O(n)
O(h)
O(h)

O(m4 n3 log n)
O(mn3 log n)
≈O(n3 log n)
O(n2 + k)
O(m3 n3 + h)
O(mn3 + h)

–
–
–
O(n)
O(h)
O(h)

Method

Pre-processing

Space

Query

Original algorithm
Randomized

O(m3 log m)
O(r 3 log r)

O(m3 )
O(r 3 )

O(n3 log n)
O((n3 + lm)log n) ≈ O(n3 log n)

Note: r is the size of a subset of points used for random verification. l is the number of times that such a subset of points match consistently and
further verification is needed. kis the size of the output. h denotes the size of the accumulation table in pose clustering.

5.1.3. Non-rigid alignment
For the methods described in [ACP03, SP04, PMG*05],
different transformations are assigned to each vertex on
the shape. The problem is formulated as finding the best
transformation that brings each vertex in a reference shape
close to its counterpart in the target shape, and a regularization term is added to enforce the similarity of transformations across neighbouring vertices. The difficulty in
this setting is avoiding solutions that are local minima.
This is achieved by initializing the methods with a set of
corresponding marker points and solving the optimization
in a multi-level fashion. The optimization can be posed
as a non-linear least squares problem and solved with a
Newton-based method. This mainly involves the computation of derivatives of the high-dimensional problem and leastsquares optimization at each step. Alternatively, the optimization can be performed by labelling a Markov random field
[PH03].
Instead of computing local deformations or displacements
for the vertices, in [SSB05], the displacements are implicitly
obtained by learning a function that warps one shape into the
other. The warp is obtained by solving a convex optimization
problem similar to learning a support vector machine classifier (which includes a form of regularization in its definition).
Thus, global minima are avoided.
An extension of this class of methods which circumvents
the need of marker points is proposed in [LSP08], where the
alignment between two shapes is performed with two separated transformations: a global rigid transformation which
roughly aligns the shapes, and per-vertex affine transformations that bring the non-rigid shapes into full alignment. A
robust alignment can also be obtained by deforming one

shape into the other in terms of a 3D optical flow [dATSS07]
or a Laplacian deformation of the meshes [dAST*08].
Image registration: Deforming one shape into the other can
also be achieved by adopting methods developed for image
registration [MV98]. First, the shapes are transformed into
2D images (or 3D volumes) by mapping each feature point
to its nearest pixel (or voxel). The value that is assigned
to the pixel can be a vector of descriptors computed at the
point [TH08], or the generated image can represent a level
set function of the shape [HNM06]. Finally, the resulting images or volumes are registered by computing a global alignment followed by a non-rigid deformation. The advantage
of such an approach is that the shapes are transformed into
a parameterized representation where a variety of registration algorithms can be utilized [MV98]. However, creating
a volume with enough resolution to capture all the details
on the shapes can imply considerable memory consumption
in 3D.

5.2. Correspondence search
The characteristic of the methods discussed in this section is
that they work primarily with the pairwise assignments between feature points, without searching for transformations
that align the shapes. The correspondence problem is typically posed as optimizing an objective function of the form
Obj(P, Q, R) = Sim(P, Q, R) + α Distor(P, Q, R), as described in Section 4.3. The objective is based on the quality
of pairwise assignments (a linear term) and the compatibility
between pairs of such assignments (a quadratic term). The
solution is found by using well-known discrete or continuous optimization methods. A special group of methods in

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

O. van Kaick et al. / A Survey on Shape Correspondence

1695

use of metaheuristics for combinatorial optimization, such
as ant colony optimization [vKHZW07]. One more option is
to sample the space of correspondences in search of a solution, guided by geodesic distances and importance sampling
[TBW*09].

Figure 12: Example of search-based correspondence for a
set of feature points [ZSCO*08]: each node of the tree encodes a partial correspondence. All possible assignments are
added when expanding a new level of the tree.
discrete optimization utilize a tree-based search to explore
the solution space.
5.2.1. Optimization
If the objective being optimized is only composed of a similarity term Sim(P, Q), then the formulation becomes a Linear
Assignment Problem (LAP). This simplified objective can be
solved by the simplex algorithm, because it is a special case
of a linear program [PS82]. However, if the correspondence
is constrained to a one-to-one mapping, the problem becomes
that of finding an optimal matching in a weighted bipartite
graph, which can be solved more efficiently by the Hungarian
algorithm in O(n3 ) time, where n is the number of feature
points in each shape [PS82].

2D contour correspondence: A considerable part of the literature has also focused on the specific case of 2D contour
correspondence, because these data sets can be easily extracted from 2D images. A collection of techniques were
developed by taking into account the fact that the vertices
on a contour can be linearly ordered. This observation is
used in combination with optimization techniques such as
dynamic programming [LWZ*04, SN06], which can also be
used to solve the problem posed in terms of computing shortest paths [MCH*06], and graph cuts [STCB07]. The last two
techniques are able to find an optimal correspondence for
two contours.
5.2.2. Tree-based search
One specific group of methods in discrete optimization finds a
solution by making use of tree-based search techniques, such
as branch-and-bound or priority search [GMGP05, FS06,
ZSCO*08, ACOT*10, XLZ*10]. During the tree expansion,
each node represents a partial solution. A full solution is
found by following the path from the root of the tree to
one of its leaves. Although the specific strategy in which
the tree is expanded differs from method to method, these
techniques usually involve three important steps: expanding
a node that represents a new partial solution (branching),
estimating how far the partial solution is from the optimum
solution (bounding), and eliminating nodes that will not lead
to the optimum solution (pruning).

On the other hand, if the objective comprises both the linear and quadratic terms, we arrive at a Quadratic Assignment
Problem (QAP), which is known to be NP-hard [PRW94].
Several techniques have been proposed to compute approximate solutions to this problem. One group of methods poses
the problem as an integer optimization, which is relaxed to the
continuous setting and solved with a continuous optimization technique. Examples include the softassign technique
[GR95] (which iteratively normalizes rows and columns of
an affinity matrix), concave programming [MC03], approximations based on linear programming [BBM05], spectral
clustering [LH05] or relaxation labeling [ZD06]. It can also
be formulated in probabilistic terms and solved as a convex
optimization problem [ZS08].

In the case of correspondence, solutions are mainly represented as collections of assignments between pairs of feature
points, and the expansion step involves adding a new pairwise assignment to a given solution (Figure 12). Bounding
and pruning can be performed by verifying the quality of the
registration given by the current solution, either by aligning
the shapes [GMGP05] or by deforming one shape into the
other [ZSCO*08]. Other pruning methods include testing the
compatibility between pairwise assignments, such as quantifying the distortion introduced in the Euclidean [GMGP05,
FS06] or geodesic distances [ZSCO*08, ACOT*10] between
pairs of points, or testing the agreement in the spatial configuration of the shapes [ACOT*10]. Naturally, the descriptors
computed for the feature points are also considered in the
bounding and pruning steps.

Another group of methods solves the problem in the discrete setting without resorting to the continuous domain. One
common solution approach in the discrete case is to solve the
problem by computing an optimal labeling of a graph, for
example the problem can be posed in terms of a Markov network where the set of labels corresponds to matching points
on the target shape [ASP*05, ZST*10]. Other methods make

When a hierarchical or multiresolution structure is extracted from the shape representation, this information can
also be considered in the solution search. Skeletons are commonly represented as trees or graphs for which a tree can
be easily extracted. Therefore, in this context, it is common
to resort to search-based algorithms that take this hierarchy
into account [SSGD03]. Methods of a more greedy nature

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1696

O. van Kaick et al. / A Survey on Shape Correspondence

can also benefit from such hierarchical [BMSF06] or coarseto-fine representations of the shapes [HSKK01].

5.3. ICP and variants
This section discusses mainly the ICP method, which iteratively computes a correspondence by alternating between two
steps. In the first step, the method searches for an alignment
between the shapes. In the second step, a correspondence is
derived from the alignment. Finally, this procedure is reiterated by using the correspondence to estimate a new aligning
transformation. Thus, we call it a hybrid search method,
because it searches for both alignment and correspondence
solutions, which in turn affect each other. The different variants of the ICP algorithm are obtained when the two steps
are solved in different manners (e.g. by changing the type of
transformation or the way in which the correspondences are
determined) [RL01].
5.3.1. Rigid alignment
In the ‘classic’ variant of the ICP algorithm for rigid alignment, given two point sets P and Q, an assignment is established between every point p ∈ P and its closest point in
Q, according to a given distance metric. Next, from all the
pairwise assignments that were defined in the previous step,
the best rigid transformation that aligns the two point sets is
estimated by solving a linear system and the point sets are
then realigned according to this transformation. Finally, the
two-step procedure is repeated until there is no significant
change in the alignment.
The initial positions of the point sets tremendously influence the final result of the ICP algorithm, because the
first correspondence is derived from this initial configuration.
Thus, a crucial step in ICP-based methods is to perform a prealignment of the shapes so that the algorithm does not get
trapped in local minima. Different forms of pre-alignment
have been proposed in the literature to address this issue.
The classic solutions are to rely on a set of matching feature
points, an initial set of markers given by a user, or to automatically pre-align the shapes with principal component analysis
(PCA) [RL01]. Recently, pre-alignment based on the reflectional symmetry axes of the shapes has been suggested as
another effective solution [PSG*06].
5.3.2. Non-rigid alignment
The ICP method can also be used for non-rigid alignment
by modifying some of its components. One set of methods
computes a weighted correspondence where each assignment
has an associated confidence value. These values are crucial
for robust outlier detection. After rigidly aligning the shapes
with the weighted ICP, the shapes are non-rigidly deformed
into each other by computing a warp function based on thinplate splines [CR03, BR07]. In [HAWG08], the rigid trans-

formation of the original ICP algorithm is substituted by a
deformation based on rigid-body components, to address the
registration of approximately isometric shapes. Moreover,
the alignment of articulated shapes can also be obtained by
first embedding the shapes in a space that normalizes them for
bending (Section 5.4), and then rigidly aligning the shapes
in this space.
Recently, variants of ICP have also been utilized in the context of time-varying surface reconstruction to align the geometry of adjacent time frames [WJH*07, PG08, WAO*09,
LAGP09]. If a sufficient number of scans is acquired per
unit of time, it can be assumed that only small changes take
place in the spatial configuration of the shapes (i.e. rigidbody components can be consistently tracked), and so the
initial alignment of each frame is not a strong issue in the
registration.
5.4. Use of embeddings
The non-rigid alignment of shapes, especially that of articulated shapes, can also be accomplished by first embedding
the shapes in a space where the configuration of the rigid
parts is normalized, and then treating the problem simply as
a case of rigid alignment in this embedding space (shown in
Figure 13). The rigid alignment can then be obtained by any
of the methods discussed so far. The key to create such an embedding is to obtain an intrinsic representation of the shape
which is invariant to bending (e.g. by collecting geodesic
distances between surface points) and then utilize this representation to embed the shape in a new ambient space, so
that the intrinsic geometry of the shape is translated into its
extrinsic geometry in this new space. This embedding can be
obtained with techniques such as multidimensional scaling
(MDS) [EK03, BBK06, BBBK08] or the spectral transform
[JZvK07, MHK*08, SY10]. A comprehensive coverage of
different forms of embeddings is given in [ZvKD10]. Embedding the shapes for normalization can also be used for
other types of data sets (Figure 14).
Another collection of methods also makes use of spectral
properties of shapes for correspondence, although these are
utilized to compute pose-invariant point signatures and not
to explicitly embed the shapes in a pose-normalizing space.
Examples include the global point signatures based on the
Laplace-Beltrami operator [Rus07], the use of the heat kernel
for shape matching [SOG09, OMMG10, DLL*10] and the
definition of the biharmonic distance for extending a sparse
correspondence [LRF10].

5.5. Partial correspondence
Because computing a partial correspondence is an important
specialization of shape correspondence, we discuss in this
section a few strategies proposed for this task. The problem
is defined as finding a subset of shape elements for which a
meaningful correspondence can be computed, as opposed to

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

O. van Kaick et al. / A Survey on Shape Correspondence

1697

Figure 13: Example of shape normalization: by applying multidimensional scaling (MDS) to the meshes on the top row, the
embeddings on the bottom row are obtained. Note how the pose of limbs and fingers is normalized, turning the non-rigid
alignment problem into that of rigid alignment. The last column shows an example containing topological noise, where two
fingers were connected after the reconstruction [GSCO07].

finding a full correspondence that could include additional
parts or features which do not exist in both shapes. This task
can be seen as composed of two subproblems: searching for
an optimal subset of k feature points that match consistently,
and finding the correspondence between these k elements.
One approach to determine the subset is to examine the
objective function in search of sharp increases in the alignment error, which appear when an outlier point is added to
the set of matched points [GMGP05, ZSCO*08]. Alternatively, an estimate on the number of outlier features can be
provided to the optimization, which limits the number of
points that appear in the computed correspondence [MC03,
BBM05]. Such an estimate can be derived from the data itself
[OEK08].

the problem of subgraph isomorphism, whose decision variant is known to be NP-complete. Because different heuristics
have been proposed to address this problem, it is also possible to use these methods for shape correspondence. For
example, the notion of matching two graphs by finding a set
of operations that transform one graph into the other (e.g. by
merging nodes [NB07]) is used to derive heuristic algorithms
for skeleton matching in 2D [SKK04] and 3D [BMSF06].
Then, the subset of matching features is given by the nodes
that are not removed during the editing of the graph.

Another strategy to determine the subset of features is to
rely on voting [LF09, ACOT*10]. Here, a series of candidate correspondences is computed and votes are cast on the
pairwise assignments that constitute each candidate. At the
end of this process, the assignments that are certain emerge
as the ones with the highest number of votes, while the assignments relating points that do not have any meaningful
matching possess a negligible quantity of votes. This procedure acts as a group reinforcement, where we only vote on an
assignment if it can be part of a consistent correspondence.
It is also natural to look at the partial correspondence problem as that of matching two graphs. The feature points on
a shape or skeleton can be seen as the nodes in a graph,
where every pair of nodes is connected with an edge whose
weight is proportional to some geometric quantity (e.g. distance between the nodes). Then, partial matching becomes

Figure 14: The skeletons of the dog in two different poses
(to the left) are normalized by applying MDS (to the right).
The embeddings are used to measure the spatial consistency
of a correspondence, which acts as a pruning test in the
search-based method of [ACOT*10].

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1698

O. van Kaick et al. / A Survey on Shape Correspondence

6. Validation of Correspondence Methods
Validation is an important and necessary aspect of the correspondence problem, because we need to be able to effectively
compare results from different methods. The most common
form of validation is visual inspection of results. Displaying
a morph between shapes is a similar way of assessing the
visual quality of correspondences, where we expect to see
a smooth transition from one shape to the other for a good
correspondence [KS04, ZSCO*08]. Such procedures allow
for a qualitative comparison of the results. However, because
this form of evaluation can be subjective, more objective or
quantitative procedures are also sought.
One possibility for more objective comparisons is to use
the output of an objective function (Section 4.3) to derive a
similarity measure, so that the correspondence method can be
indirectly evaluated in terms of retrieval [FS06, JZ07]. This
assumes that the accuracy of the retrieval results will be proportional to the accuracy of the computed correspondences.
In addition, in the computational anatomy community, it is
common to assess the computed correspondences in terms of
the quality of the statistical shape models that they generate,
which can be evaluated with measures such as generality,
specificity or compactness [DTC*02, SRN*03, KE06]. As
in the case of retrieval, this assumes that more accurate correspondences will lead to better models.
However, to allow for a direct comparison of results, the
most reasonable procedure is to utilize a set of shapes already
in correspondence, so that the computed correspondences can
be compared against the ground-truth. This can be achieved
with a discrete measure such as the Hamming loss (counting the number of points incorrectly matched [CMC*09]) or
more continuous measures such as the endpoint error (where,
for each point, we compute the distance from its matching
point to its known ground-truth). We can add up the endpoint
errors [KE06] or compute statistics on them [CMC*09].
These considerations lead us to the question of a benchmark for shape correspondence. A number of data sets developed for shape retrieval and analysis have been utilized for
evaluating results. Shapes from the well-known Princeton
Shape Benchmark [SMKF04] and McGill 3D Shape Benchmark [SZM*08] have been widely used for the comparison
of methods that work on articulated shapes. Moreover, the
data sets related to the various tracks of the Shape Retrieval
Contest (SHREC) have also been considered. These data sets
are aimed at various problems such as partial shape retrieval
and retrieval of specific models, for example CAD models
and human faces. Recently, data sets involving non-rigid deformations have been made available, such as the SCAPE
data set [ASK*05], the Non-rigid World Data set [BBK06],
and the TOSCA data set [BBK08].
From the above list, the TOSCA data set can be characterized as a true benchmark for correspondence, because
the models have a compatible triangulation (i.e. the order-

ing of vertices corresponds across all the deformations of
a same model), and thus the correct correspondences can
be obtained. This data set has been further extended into
a correspondence benchmark for the 2010 Shape Retrieval
Contest (SHREC’10) [SHR10]. It includes 138 meshes divided into three classes (human, dog and horse), modified by
different types of deformations (e.g. global and local scaling) or topological changes (e.g. introduction of holes). The
creation of a data set with ground-truth correspondences has
also been considered for anatomical shapes, where a reduced
set of shapes in correspondence was enlarged by applying
random (yet realistic) deformations on the original shapes
[HJT08].
However, there is still the absence of a benchmark directed at more general correspondence problems (e.g. including man-made shapes that possess significant geometric
and topological differences, where semantic information or
functionality play a more essential role in linking the parts
of different shapes). Such a data set would have to include
a collection of challenging correspondence cases and also a
list of prominent features or parts on the shapes with their
ground-truth correspondence across the data set.
7. Applications of Correspondence
In this section, we discuss what we view as the most important applications that make use of correspondence methods.
Examples of these applications are illustrated in Figure 15.
7.1. Shape registration
Given a number of scans in arbitrary initial positions, the goal
of registration is to match regions that correspond across the
scans, so that the scans can be aligned and the target object
can be fully reconstructed. It can be assumed either that the
shapes do not change during the scanning (rigid registration)
[RL01, AMCO08] or that they are free to deform during
the acquisition (non-rigid registration) [ASP*05, JZvK07,
BR07, CZ08, HAWG08].
7.2. Time-varying surface reconstruction
The goal in this task is to reconstruct a 3D shape that was
scanned over time while moving and deforming. The challenge is to take the great amount of generated data and
organize it into one single model that represents the deforming shape. Correspondence methods are central to timevarying surface reconstruction, because the point sets of different time frames have to be registered to yield the final
model [MFO*07, WJH*07, SAL*08, PG08, LAGP09, CZ09,
TBW*09, ZST*10].
7.3. Shape interpolation
In interpolation or morphing, one shape is gradually transformed into another. The transformation has to satisfy

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1699

O. van Kaick et al. / A Survey on Shape Correspondence

(a) Rigid registration [GMGP05]

(b) Non-rigid registration [CZ08]

(d) Deformation transfer [SP04]

(c) Shape morphing [KS04]

(e) Self-similarity detection [GCO06]

(f) Time-varying surface reconstruction [PG08]
Figure 15: Examples of applications that make use of correspondence methods: (a) a set of scans (to the left) is rigidly aligned
to reconstruct the shape of the bunny (to the right), (b) the horse in two different poses (to the left) is non-rigidly aligned (result
shown to the right), (c) the teapot is morphed into the cup, (d) the motion defined on the horse (top line) is transferred to the
camel (bottom line), (e) an application of partial matching: the suction cups on the tentacles of the octopus are detected as
being similar (highlighted in yellow), (f) a set of range scans of an object in motion (shown to the left in blue) provides a single
reconstructed model on which the motion is defined (shown to the right in colour).

certain aesthetic requirements, so that the gradual change
of the shape has a visually pleasing aspect [Ale02]. One
important property in this aspect is that the correspondence
between the reference shape and the target shape should be
meaningful, that is it should relate parts in the shapes that are
semantically equivalent.

7.4. Information transfer
A task that is becoming common is to transfer information
from a source 3D object to a target 3D object, especially to
enable the reuse of attributes or motion information associated to the source shape. Examples include transferring a deformation or morph from one mesh to another [SP04], transferring textures while deforming a mesh [DYT05] and transferring the style of one group of shapes to another [XLZ*10].
Such tasks clearly require a correspondence, because the motion, attribute or style of each element in the source shape has
to be transferred to its corresponding element in the target
shape.

7.5. Symmetry detection
The symmetries of a shape can act as an important cue
when solving several tasks, such as registration, segmentation, compression, modelling and editing [GPF07]. Detecting the symmetries of a shape (a set of transformations
that when applied to the shape do not modify its geometry)
can be posed as the problem of finding a correspondence
from the shape to itself. Therefore, it is natural that symmetry detection algorithms possess many similarities with
correspondence methods, such as the use of transformation
or point sampling for extrinsic [MGP06, PSG*06] or intrinsic [XZT*09, KLCF10] symmetry detection or the use of
embeddings [OSG08, LCDF10].
7.6. Recognition and retrieval
Understanding a scene described by a range image is one
of the classic challenges in computer vision [FP03]. Shape
correspondence is one of the approaches that can be used
for this task. This is realized by computing a correspondence
between a query shape and the models in a data set. The

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1700

O. van Kaick et al. / A Survey on Shape Correspondence

Figure 16: A progression of development in shape correspondence methods.
identity of the query shape is inferred from the best match
to one of the models (according to a correspondence quality measure). A similar procedure can be utilized for shape
retrieval [FS06].

7.7. Statistical shape modelling
The analysis of anatomical structures such as organs or bones
can be facilitated when a statistical shape model is available.
These models are useful for extracting shapes from images,
because they are able to describe the valid variations in the
appearance and the size of a shape. Such models are typically
constructed while computing a group correspondence for a
collection of shapes that represent a common anatomical
structure [DTT08].
7.8. Change detection
Another application of correspondence is to track changes in
a shape (e.g. displacements, growth) over time. In the medical
field, an example application is to track the change in the
number and density of moles on a patient’s skin (for cancer
prediction), which can be posed as a problem of point cloud
correspondence [MHL09]. In remote sensing, one example
is to track the change over time in the layout of cities and
their land usage [LLFM00].
8. Previous Surveys on Shape Correspondence
Surveys that review a partial list of the topics covered in this
report have appeared before. We discuss the most recent and
relevant references here.
Tangelder and Veltkamp [TV08], Iyer et al. [IJL*05] and
Bustos et al. [BKS*05] provide comprehensive surveys on
content based 3D shape retrieval, mostly discussing global
shape signatures. Biasotti et al. [BFF*07] present a tutorial
on 3D shape description based on properties of real functions,
which can be used as signatures for shape matching.
In terms of correspondence surveys, Alexa [Ale02] covers
recent advances in mesh morphing, where the computation

of dense correspondences from an initial set of sparse correspondences is also part of the discussion. Veltkamp and
Hagedoorn [VH01] discuss similarity measures and algorithms for shape matching. This publication is the most
similar to this report, and includes a solid introduction to
the correspondence problem. However, most of the survey
focuses on similarity metrics, while the discussion on the
algorithms is brief, and important new developments have
appeared since the publication of that survey.
The book by Bronstein et al. [BBK08] is a recent and comprehensive discussion on the analysis of non-rigid shapes. It
covers problems such as determining the similarity between
non-rigid shapes and techniques for correspondence based
on MDS.
Audette et al. [AFP00] present an overview of surface
registration techniques for medical imaging. The survey discusses in detail techniques based on applying geometric
transformations to the data (rigid-body motion, etc.), but does
not discuss techniques that work in the correspondence space.
Heimann and Meinzer [HM09] survey the topic of statistical
shape modelling and briefly review techniques for registration and group correspondence. Statistical shape models and
group correspondence are also extensively covered in the
recent book by Davies et al. [DTT08].
9. Summary and Future Perspectives
In Figure 16, we show a progression in the development of
solutions to shape correspondence. On one hand, significant
progress has been made to compute rigid or pose-invariant
alignments (through the correspondence of approximately
isometric shapes). Because these problems have well-defined
objectives, remaining work is mainly focusing on improving
efficiency and accuracy, or on handling more difficult specializations of the problem, such as partial matching. In part,
the success in these areas is also due to the fact that the correspondence can be obtained reliably from purely geometric
information extracted from the shapes, and shape alignment
can be described in terms of unambiguous transformations
or objective functions.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

O. van Kaick et al. / A Survey on Shape Correspondence

1701

On the other hand, finding a meaningful correspondence
between shapes belonging to the same class but differing
(sometimes significantly) in their geometry, structure, or even
topology, remains a challenge. Traditional methods which
rely on assumptions of rigidity, isometry, or sufficient geometric similarity between corresponding parts are simply
inadequate. Man-made shapes such as the ones shown in
Figure 3 are particularly challenging to deal with, because
these objects often differ not only by geometric deformations, but also by their part constitutions. Shape correspondence then departs from the low-level sphere of geometry
analysis and becomes the higher-level problem of semantic
reasoning, where we seek to recognize the parts of shapes
and infer their semantics or functionality. A meaningful correspondence can then be established between the recognized
parts. The utilization of prior knowledge is seen as a promising solution, where the main difficulty is how to model the
knowledge and make use of it effectively.

and correspondence. Therefore, we conjecture that the ultimate approach for the semantic analysis of shapes would not
treat these problems separately, but solve them all simultaneously and with the aid of group or prior information.

Some recent works have taken the first steps towards
knowledge-driven shape correspondence. Knowledge can be
incorporated by utilizing a set of examples where a few landmark points have already been matched by an expert user
[WH07], by using a set of examples already in full correspondence [PDT07], or by relying on a set of pre-segmented
and pre-labelled shapes, so that classifiers can be trained
on these examples and applied to label the primitives of
an unknown shape [KHS10, vKTS*11]. Another direction
is to learn how the terms in the various objective functions should be weighted, depending on the restricted domain of the problem that we are considering [CMC*09]. One
more possibility is to consider group information when performing correspondence-related tasks, such as skeletonization [WH09] or automatic segmentation [GF09, XLZ*10].
Directly addressing the non-homogeneous part scaling can
greatly improve the results of co-segmentation [XLZ*10].

References

As the variety of correspondence methods is still increasing, the need for objective evaluation via benchmark data
sets is important. The envisioned benchmark should contain
different classes of problems (rigid, non-rigid) and certainly
a sufficient collection of man-made objects to reflect the
challenge they represent. To alleviate the amount of work
required to create such a benchmark, one possible strategy
is to take a reduced set of shapes for which the correspondence ground-truth is known and deform the shapes with
random (yet statistically or physically plausible) transformations, similar to what is done for anatomical shapes [HJT08].
We have seen the recent development of a benchmark for
mesh segmentation [CGF09], which is subsequently tagged
with semantic part labels by Kalogerakis et al. [KHS10].
These results naturally reflect how humans tend to segment
shapes and then establish a correspondence between these
segments. Such a correspondence reflects the process of
recognition. Hence it seems apparent that there is a deep
connection among the three tasks: segmentation, recognition

Acknowledgments
The authors thank the reviewers for their valuable comments
and the authors who granted us permission to use their figures in our work. The models used in our illustrations are
from the AIM@SHAPE Repository, the SHREC 2007 Watertight Track, and the Non-rigid World Data set. This work
was supported in part by NSERC Grants (Nos. 611370 and
611393), a MITACS Research Grant (No. 699127) and the
Israel Science Foundation founded by the Israel Academy of
Sciences and Humanities.

[ACOT*10] AU O. K.-C., COHEN-OR D., TAI C.-L., FU H.,
ZHENG Y.: Electors voting for fast automatic shape correspondence. Computer Graphics Forum (Proc. EUROGRAPHICS) 29, 2 (2010), 645–654.
[ACP03] ALLEN B., CURLESS B., POPOVIC´ Z.: The space of
human body shapes: reconstruction and parameterization
from range scans. ACM Transactions on Graphics (Proc.
SIGGRAPH) 22, 3 (2003), 587–594.
[AFP00] AUDETTE M. A., FERRIE F. P., PETERS T. M.: An
algorithmic overview of surface registration techniques
for medical imaging. Medical Image Analysis 4, 3 (2000),
201–217.
[Ale02] ALEXA M.: Recent advances in mesh morphing.
Computer Graphics Forum 21, 2 (2002), 173–198.
[AMCO08] AIGER D., MITRA N. J., COHEN-OR D.: Fourpoints congruent sets for robust surface registration. ACM
Transactions on Graphics (Proc. SIGGRAPH) 27, 3
(2008), 1–10.
[ASK*05] ANGUELOV D., SRINIVASAN P., KOLLER D., THRUN
S., RODGERS J., DAVIS J.: SCAPE: shape completion and animation of people. ACM Transactions on Graphics (Proc.
SIGGRAPH) 24, 3 (2005), 408–416.
[ASP*05] ANGUELOV D., SRINIVASAN P., PANG H.-C., KOLLER
D., THRUN S., DAVIS J.: The correlated correspondence algorithm for unsupervised registration of nonrigid surfaces.
In Advances in Neural Information Processing Systems
17. L. K. Saul, Y. Weiss, and L. Bottou (Eds.). MIT Press,
Cambridge, MA (2005), pp. 33–40.
[BBBK08] BRONSTEIN A. M., BRONSTEIN M. M., BRUCKSTEIN
A. M., KIMMEL R.: Partial similarity of objects, or how

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1702

O. van Kaick et al. / A Survey on Shape Correspondence

to compare a centaur to a horse. International Journal of
Computer Vision 84, 2 (2008), 163–183.

[CM92] CHEN Y., MEDIONI G.: Object modelling by registration of multiple range images. Image Vision Computer 10,
3 (1992), 145–155.

[BBK06] BRONSTEIN A. M., BRONSTEIN M. M., KIMMEL R.:
Efficient computation of isometry-invariant distances between surfaces. SIAM Journal of Scientific Computing 28,
5 (2006), 1812–1836.

[CMC*09] CAETANO T. S., MCAULEY J. J., CHENG L., LE Q.
V., SMOLA A. J.: Learning graph matching. IEEE PAMI
31, 6 (2009), 1048–1058.

[BBK08] BRONSTEIN A. M., BRONSTEIN M. M., KIMMEL R.:
Numerical Geometry of Non-Rigid Shapes. Springer, New
York, NY, 2008.

[CR03] CHUI H., RANGARAJAN A.: A new point matching
algorithm for non-rigid registration. Computer Vision and
Image Understanding 89 (2003), 114–141.

[BBM05] BERG A. C., BERG T. L., MALIK J.: Shape matching and object recognition using low distortion correspondences. In Proceedings of IEEE Conference on CVPR (San
Diego, CA, USA, 2005), vol. 1, pp. 26–33.

[CSM07] CORNEA N. D., SILVER D., MIN P.: Curve-skeleton
properties, applications, and algorithms. IEEE Transactions on Visualization and Computer Graphics (TVCG)
13, 3 (2007), 530–548.

[BFF*07] BIASOTTI S., FALCIDIENO B., FROSINI P., GIORGI D.,
LANDI C., MARINI S., PATANE´ G., SPAGNUOLO M.: 3D shape
description and matching based on properties of real functions. In Eurographics Tutorial (2007), Eurographics Association, pp. 949–998.

[CZ08] CHANG W., ZWICKER M.: Automatic registration for
articulated shapes. Computer Graphics Forum (Proc.
SGP) 27, 5 (2008), 1459–1468.

[BKS*05] BUSTOS B., KEIM D. A., SAUPE D., SCHRECK T.,
VRANIC´ D. V.: Feature-based similarity search in 3D object
databases. ACM Computer Surveys 37, 4 (2005), 345–387.
[BMP00] BELONGIE S., MALIK J., PUZICHA J.: Shape context: a
new descriptor for shape matching and object recognition.
In Proceedings of the NIPS (Denver, CO, USA, 2000), pp.
831–837.
[BMSF06] BIASOTTI S., MARINI S., SPAGNUOLO M.,
FALCIDIENO B.: Sub-part correspondence by structural descriptors of 3D shapes. Computer-Aided Design 38, 9
(2006), 1002–1019.
[BR07] BROWN B. J., RUSINKIEWICZ S.: Global nonrigid alignment of 3-D scans. ACM Transactions
on Graphics (Proc. SIGGRAPH) 26, 3 (2007), doi:
10.1145/1275808.1276404.
[Bro92] BROWN L. G.: A survey of image registration techniques. ACM Computer Surveys 24, 4 (1992), 325–376.
[CCFM08] CASTELLANI U., CRISTANI M., FANTONI S., MURINO
V.: Sparse points matching by combining 3D mesh
saliency with statistical descriptors. Computer Graphics
Forum (Proc. EUROGRAPHICS) 27, 2 (2008), 643–652.
[CGF09] CHEN X., GOLOVINSKIY A., FUNKHOUSER T.: A
benchmark for 3D mesh segmentation. ACM Transactions on Graphics (Proc. SIGGRAPH) 28, 3 (2009), doi:
10.1145/1531326.1531379.
[CHDD08] CHUNG M. K., HARTLEY R., DALTON K. M.,
DAVIDSON R. J.: Encoding cortical surface by spherical
harmonics. Satistica Sinica 18 (2008), 1269–1291.

[CZ09] CHANG W., ZWICKER M.: Range scan registration
using reduced deformable models. Computer Graphics Forum (Proc. EUROGRAPHICS) 28, 2 (2009), doi:
10.1111/j.1467-8659.2009.01384.x.
[dAST*08] DE AGUIAR E., STOLL C., THEOBALT C.,
AHMED N., SEIDEL H.-P., THRUN S.: Performance capture from sparse multi-view video. ACM Transactions
on Graphics (Proc. SIGGRAPH) 27, 3 (2008), doi:
10.1145/1399504.1360697.
[dATSS07] DE AGUIAR E., THEOBALT C., STOLL C., SEIDEL
H.-P.: Marker-less deformable mesh tracking for human
shape and motion capture. In Proceedings of the IEEE
Conference on CVPR (Los Angeles, CA, USA, 2007), pp.
98–108.
[DLL*10] DEY T. K., LI K., LUO C., RANJAN P., SAFA I., WANG
Y.: Persistent heat signature for pose-oblivious matching
of incomplete models. Computer Graphics Forum (Proc.
SGP) 29, 5 (2010), 1545–1554.
[DTC*02] DAVIES R. H., TWINING C. J., COOTES T. F.,
WATERTON J. C., TAYLOR C. J.: A minimum description
length approach to statistical shape modeling. IEEE Transactions on Medical Imaging 21, 5 (2002), 525–537.
[DTT08] DAVIES R., TWINING C., TAYLOR C.: Statistical Models of Shape: Optimisation and Evaluation. Springer, London, UK, 2008. ISBN: 978-1-84800-137-4.
[DYT05] DINH H. Q., YEZZI A., TURK G.: Texture transfer during shape transformation. ACM Transactions on
Graphics 24, 2 (2005), 289–310.
[EK03] ELAD A., KIMMEL R.: On bending invariant signatures for surfaces. IEEE PAMI 25, 10 (2003), 1285–1295.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

O. van Kaick et al. / A Survey on Shape Correspondence

1703

[FB81] FISCHLER M. A., BOLLES R. C.: Random sample consensus: a paradigm for model fitting with applications to
image analysis and automated cartography. Communications of the ACM 24, 6 (1981), 381–395.

[GSH*07] GAL R., SHAMIR A., HASSNER T., PAULY M., COHENOR D.: Surface reconstruction using local shape priors. In
Proceedings of the Symposium on Geometry Processing
(SGP) (Barcelona, Spain, 2007).

[FP03] FORSYTH D. A., PONCE J.: Computer Vision: A Modern
Approach. Prentice-Hall, Upper Saddle River, NJ, 2003.

[GSMCO09] GAL R., SORKINE O., MITRA N. J., COHEN-OR
D.: iWIRES: an analyze-and-edit approach to shape manipulation. ACM Transactions on Graphics (Proc. SIGGRAPH) 28, 3 (2009), pp. 33–43.

[FS06] FUNKHOUSER T., SHILANE P.: Partial matching of 3D
shapes with priority-driven search. In Proceedings of
the Symposium on Geometry Processing (SGP) (Cagliari,
Italy, 2006), pp. 131–142.
[GCO06] GAL R., COHEN-OR D.: Salient geometric features
for partial shape matching and similarity. ACM Transactions on Graphics 25, 1 (2006), 130–150.

[HAWG08] HUANG Q.-X., ADAMS B., WICKE M., GUIBAS L.
J.: Non-rigid registration under isometric deformations.
Computer Graphics Forum (Proc. SGP) 27, 5 (2008),
1449–1457.

[GE03] GUYON I., ELISSEEFF A.: An introduction to variable
and feature selection. The Journal of Machine Learning
Research 3 (2003), 1157–1182.

[HJT08] HAMARNEH G.,
tion of ground-truth
and statistically-based
puter Science (Proc.
467.

[GF09] GOLOVINSKIY A., FUNKHOUSER T.: Consistent segmentation of 3D models. Computers & Graphics (Proc. SMI)
33, 3 (2009), 262–269.

[HM09] HEIMANN T., MEINZER H.-P.: Statistical shape models for 3D medical image segmentation: a review. Medical
Image Analysis 13, 4 (2009), 543–563.

[GGGZ05] GATZKE T., GRIMM C., GARLAND M., ZELINKA S.:
Curvature maps for local shape comparison. In Proceedings of the Conference on Shape Modeling and Applications (Cambridge, MA, USA, 2005), pp. 244–253.

[HNM06] HUANG X., PARAGIOS N., METAXAS D. N.: Shape
registration in implicit spaces using information theory
and free form deformations. IEEE PAMI 28, 8 (2006),
1303–1318.

[GMGP05] GELFAND N., MITRA N. J., GUIBAS L. J., POTTMANN
H.: Robust global registration. In Proceedings of the Symposium on Geometry Processing (SGP) (Vienna, Austria,
2005), pp. 197–206.

[HSKK01] HILAGA M., SHINAGAWA Y., KOHMURA T., KUNII T.
L.: Topology matching for fully automatic similarity estimation of 3D shapes. In Proceedings of the SIGGRAPH
(Los Angeles, CA, USA, 2001), pp. 203–212.

[GPF07] GOLOVINSKIY A., PODOLAK J., FUNKHOUSER
T.: Symmetry-aware mesh processing. TR-782-07,
Princeton University, 2007.

[HU90] HUTTENLOCHER D. P., ULLMAN S.: Recognizing solid
objects by alignment with an image. International Journal
of Computer Vision 5, 2 (1990), 195–212.

[GR95] GOLD S., RANGARAJAN A.: Softmax to softassign:
neural network algorithms for combinatorial optimization.
Journal of Artificial Neural Network 2, 4 (1995), 381–399.

[Hut91] HUTTENLOCHER D. P.: Fast affine point matching:
an output-sensitive method. In Proceedings of the IEEE
Conference on CVPR (Maui, HI, USA, 1991), pp. 263–
268.

[GRL*98] GOLD S., RANGARAJAN A., LU C.-P., PAPPU S.,
MJOLSNESS E.: New algorithms for 2D and 3D point matching: pose estimation and correspondence. Pattern Recognition 31, 8 (1998), 1019–1031.
[GSCO07] GAL R., SHAMIR A., COHEN-OR D.: Pose-oblivious
shape signature. IEEE Transactions on Visualization and
Computer Graphics (TVCG) 13, 2 (2007), 261–271.
[GSdA*09] GALL J., STOLL C., DE AGUIAR E., THEOBALT C.,
ROSENHAHN B., SEIDEL H.-P.: Motion capture using joint
skeleton tracking and surface estimation. In Proceedings
of the IEEE Conference on CVPR (Miami, FL, USA,
2009).

JASSI P., TANG L.: Simulavalidation data via physicallywarps. Lecture Notes in ComMICCAI) 5241 (2008), 459–

[IJL*05] IYER N., JAYANTI S., LOU K., KALYANARAMAN Y.,
RAMANI K.: Three-dimensional shape searching: state-ofthe-art review and future trends. Computer-Aided Design
37, 5 (2005), 509–530.
[IR96] IRANI S., RAGHAVAN P.: Combinatorial and experimental results for randomized point matching algorithms. In
Proceedings of the Symposium on Computational Geometry (Philadelphia, PA, USA, 1996), pp. 68–77.
[JH99] JOHNSON A., HEBERT M.: Using spin-images for efficient multiple model recognition in cluttered 3D scenes.
IEEE PAMI 29, 5 (1999), 433–449.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1704

O. van Kaick et al. / A Survey on Shape Correspondence

[JZ07] JAIN V., ZHANG H.: A spectral approach to shapebased retrieval of articulated 3D models. Computer-Aided
Design 39, 5 (2007), 398–407.
[JZvK07] JAIN V., ZHANG H., VAN KAICK O.: Non-rigid
spectral correspondence of triangle meshes. International
Journal on Shape Modeling 13, 1 (2007), 101–
124.
[KE06] KARLSSON J., ERICSSON A.: A ground truth correspondence measure for benchmarking. In Proceedings of the
International Conference on Pattern Recognition (ICPR)
(2006), vol. 3, pp. 568–573.
[KH08] KHAIRY K., HOWARD J.: Spherical harmonics-based
parametric deconvolution of 3D surface images using
bending energy minimization. Medical Image Analysis
12, 2 (2008), 217–227.
[KHS10] KALOGERAKIS E., HERTZMANN A., SINGH K.: Learning 3D mesh segmentation and labeling. ACM Transactions on Graphics (Proc. SIGGRAPH) 29, 3 (2010),
102–114.
[KLCF10] KIM V. G., LIPMAN Y., CHEN X., FUNKHOUSER
T.: M¨obius transformations for global intrinsic symmetry analysis. Computer Graphics Forum (Proc. SGP) 29,
5 (2010), 1689–1700.
[KPNK03] K¨ORTGEN M., PARK G.-J., NOVOTNI M., KLEIN R.:
3D shape matching with 3D shape contexts. In Proceedings of the 7th Central European Seminar on Computer
Graphics (Budmerice, Slovakia, 2003).
[KS04] KRAEVOY V., SHEFFER A.: Cross-parameterization
and compatible remeshing of 3D models. ACM Transactions on Graphics (Proc. SIGGRAPH) 23, 3 (2004),
861–869.

[LH05] LEORDEANU M., HEBERT M.: A spectral technique
for correspondence problems using pairwise constraints.
In Proceedings of the International Conference on Computer Vision (ICCV) (Beijing, China, 2005), vol. 2, pp.
1482–1489.
[LLFM00] LECLERC Y. G., LUONG Q.-T., FUA P. V., MIYAJIMA
K.: Detecting changes in 3-D shape using self-consistency.
In Proceedings of the IEEE Conference on CVPR (Hilton
Head, SC, USA, 2000), vol. 1, pp. 395–402.
[LRF10] LIPMAN Y., RUSTAMOV R., FUNKHOUSER T.: Biharmonic distance. ACM Transactions on Graphics 29, 3
(2010), 27–38.
[LSP08] LI H., SUMNER R. W., PAULY M.: Global correspondence optimization for non-rigid registration of depth
scans. Computer Graphics Forum (Proc. SGP) 27, 5
(2008), 1421–1430.
[LWZ*04] LIU L., WANG G., ZHANG B., GUO B., SHUM H.-Y.:
Perceptually based approach for planar shape morphing.
In Proceedings of Pacific Graphics (Seoul, Korea, 2004),
pp. 111–120.
[LZSCO09] LIU R., ZHANG H., SHAMIR A., COHEN-OR D.: A
part-aware surface metric for shape analysis. Computer
Graphics Forum (Proc. EUROGRAPHICS) 28, 2 (2009),
397–406.
[MC03] MACIEL J., COSTEIRA J. P.: A global solution to sparse
correspondence problems. IEEE PAMI 25, 2 (2003),
187–199.
[MCH*06] MANAY S., CREMERS D., HONG B.-W., YEZZI A. J.,
SOATTO S.: Integral invariants for shape matching. IEEE
PAMI 28, 10 (2006), 1602–1618.

[LAGP09] LI H., ADAMS B., GUIBAS L. J., PAULY M.: Robust
single-view geometry and motion reconstruction. ACM
Transactions on Graphics (Proc. SIGGRAPH Asia) 28, 5
(2009), 175–185.

[MFO*07] MITRA N. J., FLORY S., OVSJANIKOV M., GELFAND
N., GUIBAS L., POTTMANN H.: Dynamic geometry registration. In Proceedings of the Symposium on Geometry
Processing (SGP) (Barcelona, Spain, 2007), pp. 173–
182.

[LCDF10] LIPMAN Y., CHEN X., DAUBECHIES I., FUNKHOUSER
T.: Symmetry factored embedding and distance. ACM
Transactions on Graphics (Proc. SIGGRAPH) 29, 4
(2010), 103–115.

[MGP06] MITRA N. J., GUIBAS L., PAULY M.: Partial and
approximate symmetry detection for 3D geometry. ACM
Transactions on Graphics (Proc. SIGGRAPH) 25, 3
(2006), 560–568.

[LF09] LIPMAN Y., FUNKHOUSER T.: M¨obius voting for surface
correspondence. ACM Transactions on Graphics (Proc.
SIGGRAPH) 28, 3 (2009), 72–84.

[MHK*08] MATEUS D., HORAUD R., KNOSSOW D., CUZZOLIN
F., BOYER E.: Articulated shape matching using Laplacian eigenfunctions and unsupervised point registration.
In Proceedings of IEEE Conference on CVPR (Anchorage, AL, USA, 2008), pp. 1–8.

[LG05] LI X., GUSKOV I.: Multi-scale features for approximate alignment of point-based surfaces. In Proceedings of the Symposium on Geometry Processing (SGP)
(Vienna, Austria, 2005).

[MHL09] MIRZAALIAN H., HAMARNEH G.,
Graph-based approach to skin mole

LEE T.:
matching

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

O. van Kaick et al. / A Survey on Shape Correspondence

incorporating template-normalized coordinates. In
Proceedings of the IEEE Conference on CVPR
(Miami, FL, USA, 2009), pp. 2152–2159.
[MS05] MIKOLAJCZYK K., SCHMID C.: A performance evaluation of local descriptors. IEEE PAMI 27, 10 (2005),
1615–1630.
[MV98] MAINTZ J. B. A., VIERGEVER M. A.: A survey of
medical image registration. Medical Image Analysis 2, 1
(1998), 1–36.
[NB07] NEUHAUS M., BUNKE H.: Bridging the Gap Between
Graph Edit Distance and Kernel Machines. World Scientific, River Edge, NJ, 2007.
[NSN*07] NAIN D., STYNER M., NIETHAMMER M., LEVITT J.
J., SHENTON M. E., GERIG G., BOBICK A., TANNENBAUM A.:
Statistical shape analysis of brain structures using spherical wavelets. In Proceedings of the IEEE International
Symposium on Biomedical Imaging (Arlington, VA, USA,
2007), pp. 209–212.
[OEK08] OLSSON C., ENQVIST O., KAHL F.: A polynomialtime bound for matching and registration with outliers. In
Proceedings of the IEEE Conference on CVPR (Anchorage, AK, USA, 2008), pp. 1–8.
[Ols97] OLSON C. F.: Efficient pose clustering using a randomized algorithm. International Journal of Computer
Vision 23, 2 (1997), 131–147.
[OMMG10] OVSJANIKOV M., M´ERIGOT Q., M´EMOLI F., GUIBAS
L.: One point isometric matching with the heat kernel. Computer Graphics Forum (Proc. SGP) 29, 5
(2010), 1555–1564.
[OSG08] OVSJANIKOV M., SUN J., GUIBAS L.: Global intrinsic
symmetries of shapes. Computer Graphics Forum (Proc.
SGP) 27, 5 (2008), 1341–1348.

1705

dences. Lecture Notes in Computer Science 2732 (2003),
1–12.
[PMG*05] PAULY M., MITRA N. J., GIESEN J., GROSS
M., GUIBAS L. J.: Example-based 3D scan completion. In Proceedings of the Symposium on Geometry Processing (SGP) (Vienna, Austria, 2005), pp. 23–
32.
[PMW*08] PAULY M., MITRA N. J., WALLNER J., POTTMANN
H., GUIBAS L.: Discovering structural regularity in 3D
geometry. ACM Transactions on Graphics (Proc. SIGGRAPH) 27, 3 (2008), 43–54.
[PRW94] PARDALOS P., RENDL F., WOLKOWICZ H.: The
quadratic assignment problem: a survey and recent developments. In Quadratic Assignment and Related Problems. American Mathematical Society, 1994, pp. 1–
42.
[PS82] PAPADIMITRIOU C., STIEGLITZ K.: Combinatorial Optimization: Algorithms and Complexity. Prentice-Hall, Englewood Cliffs, NJ, 1982.
[PSG*06] PODOLAK J., SHILANE P., GOLOVINSKIY A.,
RUSINKIEWICZ S., FUNKHOUSER T.: A planar-reflective
symmetry transform for 3D shapes. ACM Transactions on Graphics (Proc. SIGGRAPH) 25, 3
(2006), 549–559.
[RL01] RUSINKIEWICZ S., LEVOY M.: Efficient variants of the
ICP algorithm. In Proceedings of the 3rd International
Conference on 3D Digital Imaging and Modeling (Quebec
City, Canada, 2001), pp. 145–152.
[Rus07] RUSTAMOV R.: Laplace-Beltrami eigenfunctions for
deformation invariant shape representation. In Proceedings of the Symposium on Geometry Processing (SGP)
(Barcelona, Spain, 2007), pp. 225–233.

[PCFea03] PIZER S. M., CHEN J., FLETCHER P. T., et al.: Deformable M-Reps for 3D medical image segmentation.
International Journal of Computer Vision 55, 2/3 (2003),
85–106.

[SAL*08] SHARF A., ALCANTARA D. A., LEWINER T., GREIF
C., SHEFFER A., AMENTA N., COHEN-OR D.: Space-time
surface reconstruction using incompressible flow. ACM
Transactions on Graphics (Proc. SIGGRAPH Asia) 27, 5
(2008), 110–120.

[PDT07] PITIOT A., DELINGETTE H., THOMPSON P. M.: Learning shape correspondence for n-d curves. International Journal of Computer Vision 71, 1 (2007), 71–
88.

[SCF10] SUN J., CHEN X., FUNKHOUSER T.: Fuzzy geodesics
and consistent sparse correspondences for deformable
shapes. Computer Graphics Forum (Proc. SGP) 29, 5
(2010), 1535–1544.

[PG08] PEKELNY Y., GOTSMAN C.: Articulated object reconstruction and markerless motion capture from depth video.
Computer Graphics Forum (Proc. EUROGRAPHICS) 27,
2 (2008), 399–408.

[Sha08] SHAMIR A.: A survey on mesh segmentation
techniques. Computer Graphics Forum 27, 6 (2008),
1539–1556.

[PH03] PAULSEN R. R., HILGER K. B.: Shape modelling using Markov random field restoration of point correspon-

[SHR10] Shape Retrieval Contest (SHREC) – Correspondence Benchmark, 2010. http://tosca.cs.technion.ac.il/
book/shrec_correspondence.html. Accessed 9 June 2011.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1706

O. van Kaick et al. / A Survey on Shape Correspondence

[SKK04] SEBASTIAN T. B., KLEIN P. N., KIMIA B. B.: Recognition of shapes by editing their shock graphs. IEEE PAMI
26, 5 (2004), 550–571.
[SMKF04] SHILANE P., MIN P., KAZHDAN M., FUNKHOUSER T.:
The Princeton shape benchmark. In Proceedings of the
Conference on Shape Modeling and Applications (Genova, Italy, 2004), pp. 167–178.
[SN06] SCOTT C., NOWAK R. D.: Robust contour matching via
the order preserving assignment problem. IEEE Transactions on Image Processing 15, 7 (2006), 1831–1838.
[SOG09] SUN J., OVSJANIKOV M., GUIBAS L.: A concise and
provably informative multi-scale signature based on heat
diffusion. Computer Graphics Forum (Proc. SGP) 28, 5
(2009), 1383–1392.
[Sor06] SORKINE O.: Differential representations for mesh
processing. Computer Graphics Forum 25, 4 (2006),
789–807.
[SP04] SUMNER R. W., POPOVIC´ J.: Deformation transfer for
triangle meshes. ACM Transactions on Graphics (Proc.
SIGGRAPH) 23, 3 (2004), 399–405.
[SP08] SIDDIQI K., PIZER S. (Eds.): Medial Representations:
Mathematics, Algorithms and Applications. Springer,
New York, NY, 2008.
[SRN*03] STYNER M. A., RAJAMANI K. T., NOLTE L.-P.,
ZSEMLYE G., SZE´ KELY G., TAYLOR C. J., DAVIES R. H.: Evaluation of 3D correspondence methods for model building. Lecture Notes in Computer Science 2732 (2003),
63–75.
[SSB05] SCHO¨ LKOPF B., STEINKE F., BLANZ V.: Object correspondence as a machine learning problem. In Proceedings
of the 22nd International Conference on Machine Learning (Bonn, Germany, 2005), pp. 776–783.
[SSGD03] SUNDAR H., SILVER D., GAGVANI N., DICKINSON S.:
Skeleton based shape matching and retrieval. In Proceedings of the Conference on Shape Modeling and Applications (Seoul, Korea, 2003), pp. 130–142.
[SSP07] SUMNER R. W., SCHMID J., PAULY M.: Embedded deformation for shape manipulation. ACM Transactions on Graphics (Proc. SIGGRAPH) 26, 3 (2007), doi:
10.1145/1276377.1276478.
[SSSCO08] SHALOM S., SHAPIRA L., SHAMIR A., COHEN-OR
D.: Part analogies in sets of objects. In Proceedings of
Eurographics Symposium on 3D Object Retrieval (Crete,
Greece, 2008), pp. 33–40.
[STCB07] SCHMIDT F. R., T¨oppe E., CREMERS D., BOYKOV Y.:
Efficient shape matching via graph cuts. In Proceedings

of the Energy Minimization Methods in Computer Vision
and Pattern Recognition (Ezhou, China, 2007), pp. 39–54.
[Sto87] STOCKMAN G.: Object recognition and localization
via pose clustering. Computer Vision, Graphics, and Image Processing 40, 3 (1987), 361–387.
[SWG08] S¨ußmuth J., WINTER M., GREINER G.: Reconstructing animated meshes from time-varying point clouds.
Computer Graphics Forum (Proc. SGP) 27, 5 (2008),
1469–1476.
[SY10] SAHILLIOG˘ LU Y., YEMEZ Y.: 3D shape correspondence
by isometry-driven greedy optimization. In Proceedings
of the IEEE Conference on CVPR (San Francisco, CA,
USA, 2010).
[SZM*08] SIDDIQI K., ZHANG J., MACRINI D., SHOKOUFANDEH
A., BOUIX S., DICKINSON S.: Retrieving articulated 3-D
models using medial surfaces. Machine Vision and Applications 19, 4 (2008), 261–275.
[TBW*09] TEVS A., BOKELOH M., WAND M., SCHILLING A.,
SEIDEL H.-P.: Isometric registration of ambiguous and partial data. In Proceedings of the IEEE Conference on CVPR
(Miami, FL, USA, 2009).
[TH08] TANG L., HAMARNEH G.: SMRFI: Shape matching
via registration of vector-valued feature images. In Proceedings of the Computer Vision and Pattern Recognition
(CVPR) (Anchorage, AK, USA, 2008), pp. 1–8.
[TL94] TURK G., LEVOY M.: Zippered polygon meshes from
range images. In Proceedings of the ACM SIGGRAPH
(Orlando, FL, USA, 1994), pp. 311–318.
[TV08] TANGELDER J. W. H., VELTKAMP R. C.: A survey of
content based 3D shape retrieval methods. Multimedia
Tools and Applications 39, 3 (2008), 441–471.
[Ume91] UMEYAMA S.: Least-squares estimation of transformation parameters between two point patterns. IEEE
PAMI 13, 4 (1991), 376–380.
[VH01] VELTKAMP R. C., HAGEDOORN M.: State of the art
in shape matching. In Principles of Visual Information
Retrieval. M. S. Lew (Ed.). Springer-Verlag, London, UK,
2001, pp. 87–119.
[vKHZW07] VAN KAICK O., HAMARNEH G., ZHANG H.,
WIGHTON P.: Contour correspondence via ant colony optimization. In Proceedings of the Pacific Graphics (Maui,
HI, USA, 2007), pp. 271–280.
[vKTS*11] VAN KAICK O., TAGLIASACCHI A., SIDI O., ZHANG
H., COHEN-OR D., WOLF L., HAMARNEH G.: Prior knowledge for part correspondence. Computer Graphics Forum
(Proc. EUROGRAPHICS) 30, 2 (2011), 553–562.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

O. van Kaick et al. / A Survey on Shape Correspondence

[WAO*09] WAND M., ADAMS B., OVSJANIKOV M., BERNER A.,
BOKELOH M., JENKE P., GUIBAS L., SEIDEL H.-P., SCHILLING
A.: Efficient reconstruction of non-rigid shape and motion
from real-time 3D scanner data. ACM Transactions on
Graphics 28, 2 (2009), 1–15.
[WH07] WARD A. D., HAMARNEH G.: Statistical shape modeling using MDL incorporating shape, appearance, and
expert knowledge. Lecture Notes in Computer Science
(Proc. MICCAI) 4791 (2007), 278–285.
[WH09] WARD A. D., HAMARNEH G.: The groupwise medial axis transform for fuzzy skeletonization and pruning.
IEEE PAMI 32, 6 (2009), 1084–1096.
[WJH*07] WAND M., JENKE P., HUANG Q.-X., BOKELOH M.,
GUIBAS L., SCHILLING A.: Reconstruction of deforming
geometry from time-varying point clouds. In Proceedings of the Symposium on Geometry Processing (SGP)
(Barcelona, Spain, 2007), pp. 49–58.
[WR97] WOLFSON H. J., RIGOUTSOS I.: Geometric hashing:
an overview. IEEE Computational Science & Engineering
4, 4 (1997), 10–21.
[XLZ*10] XU K., LI H., ZHANG H., COHEN-OR D., XIONG
Y., CHENG Z.: Style-content separation by anisotropic part
scales. ACM Transactions on Graphics (Proc. SIGGRAPH
Asia) 29, 5 (2010), 184–194.
[XWY*09] XU W., WANG J., YIN K., ZHOU K., VAN DE PANNE
M., CHEN F., GUO B.: Joint-aware manipulation of de-

1707

formable models. ACM Transactions on Graphics (Proc.
SIGGRAPH) 28, 3 (2009), 35–44.
[XZT*09] XU K., ZHANG H., TAGLIASACCHI A., LIU L.,
LI G., MENG M., XIONG Y.: Partial intrinsic reflectional symmetry of 3D shapes. ACM Transactions on Graphics (Proc. SIGGRAPH Asia) 28, 5
(2009), 138–148.
[ZD06] ZHENG Y., DOERMANN D.: Robust point matching for nonrigid shapes by preserving local neighborhood structures. IEEE PAMI 28, 4 (2006), 643–
649.
[ZS08] ZASS R., SHASHUA A.: Probabilistic graph and hypergraph matching. In Proceedings of the IEEE Conference
on CVPR (Anchorage, AK, USA, 2008).
[ZSCO*08] ZHANG H., SHEFFER A., COHEN-OR D., ZHOU Q.,
VAN KAICK O., TAGLIASACCHI A.: Deformation-driven shape
correspondence. Computer Graphics Forum (Proc. SGP)
27, 5 (2008), 1431–1439.
[ZST*10] ZHENG Q., SHARF A., TAGLIASACCHI A., CHEN B.,
ZHANG H., SHEFFER A., COHEN-OR D.: Consensus skeleton
for non-rigid space-time registration. Computer Graphics Forum (Proc. EUROGRAPHICS) 29, 2 (2010), 635–
644.
[ZvKD10] ZHANG H., VAN KAICK O., DYER R.: Spectral
mesh processing. Computer Graphics Forum 29, 6 (2010),
1865–1894.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

