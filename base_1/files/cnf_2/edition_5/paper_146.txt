DOI: 10.1111/j.1467-8659.2011.02013.x
Eurographics Symposium on Geometry Processing 2011
Mario Botsch and Scott Schaefer
(Guest Editors)

Volume 30 (2011), Number 5

Rational bi-cubic G2 splines for design with basic shapes
Ke¸stutis Karˇciauskas1 and Jörg Peters2
1 Vilnius

University 2 University of Florida

Abstract
The paper develops a rational bi-cubic G2 (curvature continuous) analogue of the non-uniform polynomial C2
cubic B-spline paradigm. These rational splines can exactly reproduce parts of multiple basic shapes, such as cyclides and quadrics, in one by default smoothly-connected structure. The versatility of this new tool for processing
exact geometry is illustrated by conceptual design from basic shapes.
Categories and Subject Descriptors (according to ACM CCS): I.3.5 [Computer Graphics]: Curve, surface solid and
object representation—Splines

(b)

(a)

(d)

(e)

(c)

(f)

(g)

Figure 1: Both the meshes (a) and (c) map to the exact torus
(b) represented as a piecewise rational spline of degree bi-3
(bi-cubic). The two different mesh structures allow for different designs: (a) is geometrically modified to (d) yielding
the bi-3 surface (e) and (c) is geometrically modified to (g)
yielding the bi-3 surface (f). The golden components remain
exactly on the torus.

1. Introduction
This paper develops a rational G2 spline analogue of the
polynomial C2 cubic B-spline paradigm to be able to include
a sequence of approximate or exact rational primary shapes,
such as tori, cyclides, spheres etc. and automatically combine them into a smooth whole. The new splines support ab
initio design, re-design starting with CSG models or reconstruction in reverse engineering. We focus on use in conceptual design as illustrated in Fig. 1: a popular approach to
conceptual design of outer surfaces is to start from primary
shapes, such as quadrics or cyclides, that represent funcc 2011 The Author(s)
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd. Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ,
UK and 350 Main Street, Malden, MA 02148, USA.

tionality or simplicity of shape, and modify them. Extending this way of thinking to implementation, however, creates
challenges. When multiple pieces are created in isolation, as
separate entities, they must be combined using intersections,
fillets and blends. This complicates downstream manipulation, design refinement and analysis. This paper therefore
proposes a class of curvature continuous rational splines that
generalize C2 splines in that they reproduce classical shapes
without the need to, a posteriori, stitch the conceptual pieces
together. Such built-in blending is useful when varying designs while preserving constraints as part of a shape optimization process.
Bi-cubic polynomial B-splines are well-known and
widely used at all levels of geometry processing since they
combine smoothness and flexibility with simplicity. However, even for the regular tensor-product layout, let alone in
the presence of extraordinary points, designing surfaces as
fair as the classical basic shapes, is a challenge. Moreover,
for mechanical applications, for example for ball and socket
joints, basic non-polynomial shapes have to be reproduced
exactly. Rational geometric splines have been developed as
early as [Boe87,GB88] and both [Joe89,Bar93] observe that
the parameter β of first order geometric continuity can represent local knot spacing. This classical work is primarily interested in algebraic generality. It treats the many scalars of
geometric continuity and rational weights as free parameters
and does not provide constructive recipes. In our approach,
all parameters are initialized to reproduce basic shapes and
modifying them is entirely optional. Concerning shape reproduction, there are two approaches in the literature. The
first, exemplified by modeling circles as projections of C2

1390

Ke¸stutis Karˇciauskas and Jörg Peters / Rational bi-cubic G2 splines for design with basic shapes

curves in homogeneous space, leads to high degree parameterizations, e.g. degree 6 for circles [BP97]. The second is
to use rational pieces in Bernstein-Bézier form to model individual conic shapes; this lacks built-in smooth transitions.
A concrete framework, that guarantees both built-in smoothness and reproduction of multiple basic shapes is missing in
the literature. We now present such a framework, based on
4-tuples of rational G2 splines of lowest possible bi-degree.
The structure of this paper is as follows. Section 2 specifies the construction of rational cubic G2 spline curves that
can reproduce basic curve shapes. Section 3 gives a tensoring procedure that yields rational bi-cubic G2 splines capable of reproducing cyclides and tori. Section 5 adds spheres
and sphere-like shapes to the toolkit. General, multi-sided
blends fall outside the rational bi-3 G2 paradigm and are not
covered by this paper.

Bk (u) :=

3
(1 − u)3−k uk .
k

First we recall the notion of geometric continuity, i.e. matching of derivatives after reparameterization. This notion is
central to our splines when we express them piecemeal
in Bézier-form: it plays a role akin to non-uniform knotspacing for standard splines.
Definition 1 (G2 continuity) The maps f : [0..1] → Ê and
g : [0..1] → Ê join G1 at a common point f (1) = g(0) if for
some scalar β > 0
g′ (0) = β f ′ (1),

(1)

and G2 if additionally there exists γ ∈ Ê
2 ′′

bi2

bi0

pi+1
bi3
pi+2

pi−1
Wi−1

w2i−1

Wi

wi1

βi , γi

wi2 Wi+1 w1i+1

Wi+2

βi+1 , γi+1

Figure 2: The control structure of a rational cubic G2 curve.

From the control structure, we determine the affine coefficients bik ∈ Êd ,
bi0 :=(1 − xi )b2i−1 + xi bi1 , b3i−1 := bi0 .

When defining splines, here first in one variable, we make
use both of a B-spline-like control polygon with points pi
and of functions f of degree 3 in rational Bernstein-Bézier
form to represent curve segments. For example, with u ∈
[0..1] (cf. [Far88, PBP02] for canonical expositions)

′′

bi1

bi1 :=(1 − ti )pi + ti pi+1 , bi2 := t˜i pi + (1 − t˜i )pi+1 ,

2. Rational Cubic G2 Curves

3
wk bk Bk (u)
∑
,
f(u) := k=0
3
∑k=0 wk Bk (u)

pi

′

g (0) = β f (1) + γ f (1) .

(2)

We note that if f numer and gnumer join G2 with scalars β, γ
and f denom and gdenom join G2 using the same scalars then
numer
f numer
and ggdenom join G2 with these parameters β, γ.
f denom
As illustrated in Fig. 2, the control structure of our rational
cubic G2 curves consist of
• the affine B-spline-like control points pi ∈ Êd (d = 2 for
planar curves; we will also use d = 1, 3, 4);
• the parameters of G2 continuity βi ,γi , associated with the
junction of consecutive cubic segments fi−1 and fi and
• the weights wik ∈ Ê of maps fi such that w3i−1 = wi0 =: Wi .

li := −

2Wi w1i−1 (wi1 + w2i−1 βi )β2i
,
c1 βi + c2 β2i + c3 γi

l˜i :=

wi2
l
i−1 2 i
w1 βi

,

c1 :=2w2i−1 (3(wi1 )2 −Wi wi2 −Wi wi1 ) ,

c2 :=2wi1 (3(w2i−1 )2 −Wi w1i−1 −Wi w2i−1 ) ,
c3 :=w1i−1Wi wi1
ti := −

l˜i

(3)

(4)

,

1 − li+1 − l˜i

, t˜i := −

wi
li+1
, xi := i−1 1
.
1 − li+1 − l˜i
w2 βi + wi1

The formulas (3) have the same structure as the standard
conversion from B-spline to Bézier form. The additional
flexibility guaranteeing reproduction and smoothness comes
at the cost of the complex but explicit formulas (4). For polynomial C2 splines, these formulas simplify since wik = 1,
γi = 0 and βi is the ratio of the i − 1st and ith knot interval.
With the help of symbolic computation, one can verify the
following theorem.
Theorem 1 [KP, Thm 1] Let fi−1 , fi be rational cubic curves
with weights wki−1 , wik and control points bki−1 , bik defined by
(3). Then
′′
′
′
(1) + γi fi−1
(1) .
(1) , fi′′ (0) = β2i fi−1
fi′ (0) = βi fi−1

Conversely, we can derive the control points pi of the cuj
bic G2 spline curve from the Bézier-coefficients bk . As for
C2 splines, they are simply the intersections of lines through
b1i−1 , b2i−1 and bi1 , bi2 (cf. Fig. 2 and Fig. 3 (a)).
Circular arcs. As illustrated in Fig. 3 (a), circle arcs fi
with opening angles αi can be represented as rational cubic splines with G2 continuity: we simply degree-raise their
standard rational degree 2 representation, with end-weights
c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1391

Ke¸stutis Karˇciauskas and Jörg Peters / Rational bi-cubic G2 splines for design with basic shapes

p

i

pi+1

3

αi αi−1
αi+1

0

pi+2

pi, j+1
2

ij

h1
pi j

11 21

ij

pi+1, j
00

(a) p → h
(a) circle

(b) arc-preserving design

b10

(b) h → b

Figure 4: Bi-cubic Construction

Figure 3: Exact circle (a) defined from the asymmetric control polygon p j as G2 rational spline of degree 3. (b) Design
variation that preserves circle arcs exactly (thick arcs).

Theorem 2 The bi-cubic rational functions (6) defined by
the Bi-cubic Construction form a G2 spline complex.
Proof We show that
ij
i−1, j
fu (0, v) = β˙ i fu
(1, v) ,

equal to 1 and end-points b3i−1 = bi0 on the circle [Far88] to
obtain
bi B + wbi1 B1 + wbi2 B2 + bi3 B3
,
fi := 0 0
B0 + wB1 + wB2 + B3
α
1 2
w := + cos i .
3 3
2

(5)

βi =

αi
2
αi−1
2

sin

, γi = 2βi tan

αi−1
4

+ tan

αi
4

sin

ij

3

∑3 ∑3s=0 wrs brs Br (u)Bs (v)
f (u, v) := r=0
ij
∑3r=0 ∑3s=0 wrs Br (u)Bs (v)

ij

j

Bi-cubic Construction: We set wrs := w˙ ir w¨ s and compute
the averaging quantities t¨j , t¨˜j , x¨ j of (4) for one direction to
get, as shown in Fig. 4, (a),
ij
:=(1 − t¨j )p + t¨j p
, h2 := t¨˜j pi j + (1 − t¨˜j )pi, j+1 ,
i, j−1
ij
i, j−1
ij
:=(1 − x¨ j )h2
+ x¨ j h1 , h3
:= h0 ; (Fig. 4 (a))
i, j+1

and then t˙i , t˙˜i , x˙i to compute for the other direction
ij

ij

i−1, j

i+1, j

b0s :=(1 − x˙i )b2s

ij
ij
i+1, j
, b2s := t˙˜i hs + (1 − t˙˜i )hs
,

ij

3

r=0

s=0

j

(7)

Let j be fixed and define w¯ k (v) := w¨ k Bk (v)/ ∑3s=0 w¨ s Bs (v).
Then ∑3k=0 w¯ k (v) = 1 and
j

i−1, j

+ x˙i b1s , b3s

ij

:= b0s . (Fig. 4 (b))

As in any tensoring procedure, the result is unchanged if we
change which direction is first.
c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

f i j (u, v) =

j

∑3r=0 w˙ ir ∑3s=0 w¯ s (v)brs Br (u)
.
∑3r=0 w˙ ir Br (u)

With the abbreviations
3

bir (v) :=

∑ w¯ s (v)birsj

(6)

from a regular quadrilateral grid of (B-spline-like) control
points pi j ∈ Êd with associated scalars w˙ ir , β˙ i , γ˙ i in the uj
direction and scalars w¨ s , β¨ j , γ¨ j in the v-direction.

ij

3

3

and

pi (v) :=

s=0

ij ij

b1s :=(1 − t˙i )hs + t˙i hs

ij

ij

We obtain rules for a tensor-product spline surface essentially by tensoring the construction in Section 2. That is, we
ij
ij
derive control points brs and weights wrs ∈ Êd of the bicubic patches in Bernstein-Bézier form on the unit square

ij

3

r=0 s=0

3. Bi-cubic Rational G2 Splines

ij
h1
ij
h0

j

∑ ∑ wrs Br (u)Bs (v) = ∑ w˙ ir Br (u) ∑ w¨ s Bs (v) .

αi
2.

We will use (5) repeatedly to replace cos and sin expressions.

ij

ij
i, j−1
By the symmetric argument fv (u, 0) = β¨ j fv
(u, 1),
ij
i, j−1
2 i, j−1
¨
fvv (u, 0) = β j fvv (u, 1) + γ¨ j fv
(u, 1) then follows. By

definition of the weights, wrs := w˙ ir w¨ s , and therefore

This rational G2 circle parameterization has scalars
sin

ij
i−1, j
i−1, j
(1, v).
fuu (0, v) = β˙ 2i fuu (1, v) + γ˙ i fu

f i j (u, v) =

∑ w¯ s (v)pisj ,

s=0

∑3r=0 w˙ ir bir (v)Br (u)
,
∑3r=0 w˙ ir Br (u)

(8)

bi1 (v) =(1 − t˙i )pi (v) + t˙i pi+1 (v) ,
bi2 (v) =t˜˙i p (v) + (1 − t˜˙i )p (v) ,
i

i+1

bi0 (v) =(1 − x˙i )bi−1,2 (v) + x˙i bi1 (v),
bi−1,3 (v) = bi0 (v).

The proof then follows from Theorem 1.
Using (7) and following the steps of the tensoring procedure, we get the following corollary.
Corollary 1 Considering one coordinate at a time, let
{ fi (u)} be the rational cubic pieces of a G2 spline with control points p˙ i as in Theorem 1; and let {g j (v)} be another
piece with control points p¨ j .
(a) Then the bi-cubic functions f i j (u, v) := fi (u)g j (v) form
a bi-cubic rational G2 spline with control points pi j := p˙ i p¨ j .
(b) If all pi j := 1 then f i j ≡ 1.

1392

Ke¸stutis Karˇciauskas and Jörg Peters / Rational bi-cubic G2 splines for design with basic shapes

3.1. Reproduction of Basic Shapes
We consider several families of basic shapes. Many of these
basic shapes have a natural trigonometric representation in
real projective 3-space È3 , i.e. equivalence classes of 4tuples of real numbers. By re-representing cos-sin-pairs as
rational G2 cubics and applying Corollary 1, we will be able
to express them as d = 4-tuples of rational, scalar-valued coij
ordinate maps fk , k = 1, 2, 3, 4 of type (6), with coefficients
ij
brs,k ∈ Ê. Since the denominators of all four splines are identical, they are cancelled when we form the rational spline in
Ê3 and since all fikj share the same β, γ, the remark following
Definition 1 guarantees G2 continuity.

(a) designer

(c) designer

(d) algorithm

Figure 5: Design workflow: (a) the designer partitions, (b)
the algorithm creates the mesh and sets the parameters, (c)
the designer modifies, (d) the algorithm creates the surface.

1. The first family to be reproduced has the homogeneous
parameterization (h1 , h2 , h3 , h4 ) ∈ È3 where
hk :=ak0 + ak1 cos u + ak2 sin u + ak3 cos v + ak4 sin v+

(b) algorithm

(a)

(b)

(c)

(d)

(e)

(f)

(9)

(ak5 cos u + ak6 sin u) cos v + (ak7 cos u + ak8 sin u) sin v.
This includes the torus and cyclides. For given partitions
(opening angles) {α˙ i } in the u-direction and {α¨ j } in the vdirection, we convert the cos-sin-pairs by (5), apply Corollary 1 and gather coefficients after scaling by aks to obtain
ij ij ij ij
the 4-tuples (p1 , p2 , p3 , p4 ) that the Bi-cubic Construction
converts to the standard form (6).
2. The second family includes all quadric surfaces except for
the hyperbolic paraboloid which appears in 3. In particular,
the family includes the sphere with or without composition
with Möbius transformations. Its È3 parameterization, for
k = 1, 2, 3, 4, is
3

hk :=

∑ (aks0 + aks1 cos u + aks2 sin u)vs .

Figure 6: Alternative designs based on meshes of three torus
segments (red and green in (d) and (e)) and of one onesheeted hyperboloid (orange). The transitions are gray.

(a)

(b)

(e)

(f)

(g)

(h)

(c)

(d)

(i)

(j)

(10)

s=0

For given opening angles in the u-direction, we convert the
cos-sin-pairs by (5) and Corollary 1 into rational cubic G2
ij
form and set all v-direction weights to 1 so that wrs := w˙ ir .
The v-direction is treated as a spline by expressing vs as a C2
v −v j
spline with knot sequence {v j }. Then β¨ j := v jj+1
−v j−1 , γ¨ j := 0.
We then combine with coefficients aks to obtain the 4-tuple
ij ij ij ij
(p1 , p2 , p3 , p4 ) ∈ Ê4 which the Bi-cubic Construction converts to the standard form (6).
3. The third family has a bi-cubic homogeneous parameterization and includes the hyperbolic paraboloid. In general, we
proceed as in 2 above. As a special case, we include a nonuniform bi-cubic polynomial spline by setting all weights
to 1, γ˙ i := 0 =: γ¨ j and all scalars β˙ i , β¨ j to the ratio of the
lengths of consecutive knot intervals. The G2 control mesh
is the spline control net.

Figure 7: Alternative designs for joining a torus with a cyclide. Red and green regions remain as pieces of the original
shapes; transitions are gray; (i) mean curvature of (h), (j)
highlight lines (zoomed in).

4. Design With G2 Splines
Bi-cubic rational splines (6) offer a number of scalar
ij
and vector-valued parameters: w˙ ir , β˙ i , γ˙ i and brs . In contrast to the classical algebraic treatment [Boe87, GB88,

(a)

(b)

(c)

(d)

Figure 8: Designs appreciated in particular by very young
audiences, joining a torus (red) with a sphere (green).
c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1393

Ke¸stutis Karˇciauskas and Jörg Peters / Rational bi-cubic G2 splines for design with basic shapes

Joe89, Bar93], here the designer is not expected to set
these parameters. Rather, all parameters of the 4-tuples
ij
ij
( f1 (u, v), . . . , f4 (u, v)) are initialized to reproduce basic
shapes (including bi-cubic NURBS) and modifying them is
entirely optional. The suggested workflow is summarized in
Fig. 5. In (a) the designer indicates a local region to work
on, in (c) the designer manipulates the spline control points
ij ij ij ij
(p1 , p2 , p3 , p4 ) by standard CAD tools in 3-space as
ij

ij

ij

p1 p2 p3
, ij , ij
ai j :=
ij
p4 p4 p4

∈ Ê3 ,

ij
Wˆ i j := p4 .

the 4-tuple of functions fk represents a function in È3 , the
common denominator can be discarded to obtain a 4-tuple
of polynomial maps with control points
ij

(wrs brs,1 , wrs brs,2 , wrs brs,3 , wrs brs,4 ) ∈ Ê4
ij ij

ij ij

(b) unfolded and
poles split
1
3

(c) defined by
grey mesh

v˜

2
3

∂2 f cap

(11)

In return, the algorithm reverses (11) to obtain pi j ∈ Ê4 from
ai j , Wˆ i j , applies the Bi-cubic Construction to obtain new
ij
affine Bézier coefficients brs,k ∈ Ê, k = 1, . . . , 4 and, since

ij ij

(a) polar mesh

ij ij

∂2 f body
(d) by mesh +
poles

(e)
capped
sphere

(f)

C2

completion

Figure 9: Bi-cubic spline sphere. (a) and (b) Control mesh
with polar configuration. (f) Logical diagram (layers of control points) of a C2 completion of a 3-piece polar cap.

that define a rational bi-3 spline patch in Ê3 .

Examples In the following examples, parts of the G2
meshes {pi j } of several basic shapes are merged into one G2
mesh, without adding any control points! While more subtle
transitions can potentially be designed by adding transition
layers, the examples show that even straightforward use of
the new spline representation yields satisfactory results.
Fig. 6 shows G2 design variations that merge torus pieces
with a one-sheeted hyperboloid. Fig. 7 shows G2 design variations that merge a cyclide with a torus. Fig. 8 shows G2 design variations that merge a torus with a sphere. Note that the
cut torus piece does not meet the sphere at axially symmetric points. Changing the location of the poles, by a Möbius
transformation, will be addressed in the next section.
5. Free-form Sphere-Based Design
To allow design variations, the sphere is re-represented as a
bi-cubic G2 spline patchwork where the patches surrounding
the poles form a specially constructed assembly of bi-cubic
patches with one edge collapsed to the pole. This explicit
singularity is acceptable to CAD packages and allows for
much lower degree than the construction in [BP97].
5.1. Polar Construction
As illustrated in Fig. 9 (a), (b), the control mesh of our construction is a regular tensor-product mesh with control points
collapsed to form a northern and a southern triangle fan,
called polar configurations [KP09]. Apart from these configurations, the algorithm of Section 3.1 applied to the (gray)
mesh in Fig. 9 (a) yields the equatorial part of the sphere
shown in Fig. 9 (c). Interpreting the carefully-set polar control points as collapsed edges and choosing the proper scalar
c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

parameters in the pole-to-pole direction (see General Construction at Poles below) the algorithm yields the additional
sphere-reproducing spline rings of Fig. 9 (d).
To exactly reproduce a spherical cap, we reparameterize
the inverse stereographic projection ×−1 := (2x, 2y, 1 − x2 −
y2 , 1 + x2 + y2 ) ∈ È3 by (x(u, v), y(u, v)) = ρ(u, v)
ρ(u, v) :=

1−v
1−v
cos u,
sin u .
v
v

(12)

That is, we form ×−1 (ρ) where v = 0 corresponds to south
pole and v = 1 to the north pole. Multiplication by v2 clears
the common denominators of the 4-tuple to yield a rational
bi-3 G2 spline.
General Construction at Poles For the south-to-north direction parameterized by v, we pick the knot sequence
[0, v1 , . . . , vm , 1], scalars β0 , βm+1 , γ0 = 0 = γm+1 and the
polar control points
psouth :=(0, 0,
north

p

3 − 3v1 + 2v21
, 1) , β0 := 1 − v1 ,
3(v1 − 1)

2 − vm + 2v2m
1
:=(0, 0,
, 1) , βm+1 :=
.
3vm
vm

(13)

We construct the polar caps so that the free-form G2 bi-cubic
spline defaults to the sphere (Fig. 9 (e)). A polar spline cap
is periodic in u. In v, it is partitioned into three C2 -connected
rings with the outer ones interpolating, respectively, data at
the pole and of the existing body (Fig. 9 (f)). The expansion
at the pole is obtained by generalizing ×−1 to

Õ :=(Õ1 , Õ2 , Õ3 , Õ4 ) ∈ È3 ,
Õk :=qk0 + qk1 x + qk2 y + qk3 (x2 + y2 ),

(14)

1394

Ke¸stutis Karˇciauskas and Jörg Peters / Rational bi-cubic G2 splines for design with basic shapes

with, as yet, undetermined coefficients qks and form

Õ(ρ(u, vm (1 − v)
˜ + v)),
˜

v˜ ∈ [0..1].

(15)

As before, we replace the sin u, cos u pairs in this expression by (5) and remove the common denominator of the 4tuple. This yields a bi-2 map that is expressed in our bi-cubic
form as f cap . We determine the coefficients qks so that the
boundary of the bi-cubic cap best matches the boundary of
the already constructed bi-cubic patches f body of Fig. 9 (d).
Concretely, we minimize the two-norm distance of position,
first and second derivative, i.e. the 2-jet along the boundary, ∂2 f body . As a reparameterization of a quadratic, the constructed bi-cubic cap is infinitely smooth at the pole, but typically does not join smoothly with f body . A simple remedy is
to trisect the cap in the v direction and have the sub-patches
adjacent to f body inherit its 2-jet (Fig. 9 (f)). Then the 2-jets
of f cap and f body uniquely determine the remaining Bézier
coefficients since we require that the patches join parametrically C2 as 4-tuples in the v direction.
Since the map Õ can in particular represent ×−1 , the cap
construction completes a sphere if the data ∂2 f body come
from a sphere.

(a) sphere

(b) merged with cylinder

(c) design

Figure 10: Design with poles (a) Mesh segmented to admit
(b) merging with cylinder mesh; (d) design variation.

(a)

(a)

(b)

(b)

(c)

(d)

(e)

Figure 13: Morphing the sphere-torus G2 spline (a) of
Fig. 8 to a single torus (e).

(a)

(b)

(c)

(d)

(e)

Figure 14: Möbius transformation for free-form spheroids.
(a) Bi-cubic patchwork on sphere of the surface from Fig. 8.
(b) polar mesh of sphere stemming from composition of M(z)
with inverse of stereographic projection. (c) corresponding
bi-cubic patchwork of sphere. (d) perturbed polar mesh. (e)
perturbed spheroid.

bi-3 with caps of degree bi-3. Note for comparison that the
algorithm in [KP09] results in a cap of degree 6 in the udirection. An analogous capping procedure applies to the elliptic paraboloid and the two-sheeted hyperboloid as shown
in Fig. 12.
While for typical design, the initial choice of scalars
j
w˙ ir , β˙ i , γ˙ i and w¨ s , β¨ j , γ¨ j are defined to reproduce the basic
shapes in Section 3.1 and need not be modified, they and
the control points can be continuously changed to morph between basic shapes, as in Fig. 13.

2
2b
, 0, 1−b
1+b2
1+b2

(b)

(d)

Möbius transformations Figures 8 and 14 demonstrate the
need for controlling the placement of poles for design with
sphere-like free-form shapes: the ends of the cut torus do not
meet the sphere at opposing points. To adjust poles, we use
the Möbius transformation of the sphere, a composition of
the stereographic projection ×√with the rational linear mapping M(z) := az+b
cz+d , z = x + −1y and the inverse stereographic projection: × ◦ M ◦ ×−1 . For our application, we can
z+b
, b ∈ Ê which moves the north pole to
restrict M(z) := bz+1

Figure 11: Design with poles Tube-design.

(a)

(c)

(e)

Figure 12: Elliptic paraboloid (green) merged with a twosheeted hyperboloid (red) into a smooth whole. (b) and (c)
show two different viewpoints.
Fig. 11 illustrates the capping of NURBS tubes of degree

and the south pole to

2
2b
, 0, − 1−b
1+b2
1+b2

.

In general, we compose Õ ◦ M ◦ ρ to obtain for each coordinate (hence dropping the index k)

Õ :=q0 b2 + q1 b + q3 +

q1 c + q2 s − 2q3

+ 2(q0 c − q1 + q3 c)b − (2q0 − q1 c + q2 s)b2 v
+ q0 − q1 c − q2 s + q3 − 2(q0 c − q1 + q3 c)b

+ (q0 − q1 c + q2 s + q3 )b2 v2 ,

c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

Ke¸stutis Karˇciauskas and Jörg Peters / Rational bi-cubic G2 splines for design with basic shapes

where c := cos u, s := sin u. With the scalars βi , γi of (13)
2

)(3 − 3v1 + 2v21 )

psouth :=(2b, 0,

(1 − b

pnorth :=(2b, 0,

(1 − b2 )(2 − vm + 2v2m )
, 1 + b2 )
3vm

3(v1 − 1)

, 1 + b2 ),
(16)

generalizes (13).

(a)
saddle
mesh

(b) Õ

(c) general

(d) 4-saddle, Õ

Figure 15: Non-elliptic cappings of cylinder.

1395

be used to localize deformations, but also gives a first subdivision algorithm able to combine basic shapes in one smooth
whole.
We focused on the use of splines to support conceptual design, starting from primary shapes that represent functionality or simplicity of shape. Since portions of the basic shapes
are reproduced exactly, the spline constructions can also be
viewed as a form of interpolation.
The approach taken is novel in the way it combines G2
continuity and projective trigonometric parameterizations.
The classical work, on rational spline curves [Boe87, GB88,
Joe89, Bar93] and surfaces [ZWL92, ZWL95], focused on
general necessary and sufficient constraints for smoothness
but missed out on the specific useful constructions we presented here. Only looking for and finding formulas such as
(4) allows combining the exact pieces smoothly – which may
explain why no such construction existed to date.
References

Saddle-like Polar Constructions Polar configurations are
typically used with elliptic designs. For completeness, we
consider here the hyperbolic case. The mesh in Fig. 15 (a)
calls for a saddle. The construction using Õ of the form (14)
results in the oscillating surface (b). This can be repaired to
obtain (c), by replacing Õ with a general quadratic with six
coefficients per coordinate, at the cost of increasing the bidegree to 4. On the other hand, Õ works well for higher-order
saddles that have central points with zero curvature (d).

[AJS11] A NDREWS J., J OSHI P., S ÉQUIN C.: Interactive extraction and re-design of sweep geometries. In Computer Graphics
International (2011), W. Lee N. M.-T., Stam J., (Eds.), p. to appear. 7
[Bar93] BARSKY B. A.: Rational beta-splines for representing
curves and surfaces. IEEE Computer Graphics and Applications
13, 6 (Nov. 1993), 24–32. 1, 4, 7
[BMV01] B ENKÖ P., M ARTIN R. R., V ÁRADY T.: Algorithms for reverse engineering boundary representation models.
Computer-Aided Design 33, 11 (2001), 839–851. 7
[Boe87] B OEHM W.: Rational geometric splines. Computer
Aided Geometric Design 4, 1-2 (July 1987), 67–77. 1, 4, 7

6. Conclusion
We created an analogue of tensor-product C2 bi-cubic
splines, the workhorse of CAD geometry processing, in order to exactly reproduce parts of the classical shapes automatically joined into a smooth whole. This opens up a number of applications in design, localized re-design or reconstruction in reverse engineering (see e.g. [BMV01, AJS11]).
An analogous rational bi-2 G1 spline construction generalizes C1 bi-2 splines but yields surfaces of lower quality.
Extending the approach to more general settings such as
in Fig. 16, requires multi-sided blends that lead to splines of
higher degree than bi-3, with additional techniques outside
the scope of this presentation. Subdividing the splines can

[BP97] BANGERT C., P RAUTZSCH H.: Circle and sphere as rational splines. Neural, Parallel and Scientific Computations, 5
(1997), 153–162. 2, 5
[Far88] FARIN G.: Curves and Surfaces for Computer Aided Geometric Design: A Practical Guide. Acad. Press, 1988. 2, 3
[GB88] G OLDMAN R. N., BARSKY B. A.: Beta Continuity and
Its Application to Rational Beta-splines. Technical Report CSD88-442, UC Berkeley, Aug. 1988. 1, 4, 7
[Joe89] J OE B.: Multiple-knot and rational cubic beta-splines.
ACM Transactions on Graphics 8, 2 (1989), 100–120. 1, 4, 7
ˇ
K., P ETERS J.: Rational G2 splines. Graph[KP] K AR CIAUSKAS
ical Models, 1–23. in press. 2
ˇ
K., P ETERS J.: Finite curvature contin[KP09] K AR CIAUSKAS
uous polar patchworks. In IMA Mathematics of Surfaces XIII
(2009), Hancock E., Martin R., (Eds.), pp. 222–234. 5, 6

[PBP02] P RAUTZSCH H., B OEHM W., PALUSZNY M.: Bézier
and B-spline techniques. Springer, 2002. 2
[ZWL92] Z HENG J., WANG G., L IANG Y.: Curvature continuity
between adjacent rational Bézier patches. Comp Aided Geom
Design 9, 5 (1992), 321–335. 7

(a)

(b) reflection lines

Figure 16: G2 multi-sided blend of degree bi-6.
c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

[ZWL95] Z HENG J., WANG G., L IANG Y.: GCn continuity conditions for adjacent rational parametric surfaces. Comp Aided
Geom Design 12, 2 (1995), 111–129. 7

Acknowledgement This work was supported in part by
NSF Grant CCF-0728797.

