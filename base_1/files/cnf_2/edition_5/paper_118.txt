DOI: 10.1111/j.1467-8659.2011.01962.x
Eurographics / IEEE Symposium on Visualization 2011 (EuroVis 2011)
H. Hauser, H. Pfister, and J. J. van Wijk
(Guest Editors)

Volume 30 (2011), Number 3

Tablorer - An Interactive Tree Visualization System
for Tablet PCs
HyunJu Shin1,2 , GwangHyun Park1 and JungHyun Han1
1 Korea
2 Samsung

University, Seoul, Korea
Electronics Co., Ltd, Korea

Abstract
A variety of mobile devices are available today, but there is no dominant tree visualization system in the devices.
This paper proposes Tablorer, a novel interactive tree visualization system for medium-sized mobile devices, especially for tablet PCs. The system shows the hierarchical information with a compact way using an expandable
table format. For efficient navigation, the system provides an integrated view of context and focus information.
The experimental results show that Tablorer can reduce the search time by about 22%.
Categories and Subject Descriptors (according to ACM CCS): H.5.2 [Information Interfaces and Presentation]: User
Interfaces—Graphical user interfaces(GUI)

1. Introduction

the files. On the other hand, typical file navigation tools on
smartphones display only the current path (in text) and the
list of files in the selected folder. See Figure 1-(b). Similarly,
tablet PCs also present the restricted views of the file structure (Figure 1-(c)).
Such differences in file navigation tools are caused by the
differences in the user interfaces of the mobile devices. Laptops mainly rely on mouse-based interfaces whereas smartphones and tablets rely on touch-based interfaces. Further,
their screen sizes are quite different. Users can select an object on the laptop screen using a mouse cursor even if the
object is very small. This is not the case for smartphones
and tablets.

(a)

(b)

(c)

Figure 1: Mobile devices. (a) Laptop. (b) Smartphone.
(c) Tablet. (The figure shows commercial devices, and their
screen sizes are 11.6, 4.0, and 7.0 inches, respectively. In the
figure, the proportion of the screen sizes is made similar to
that of the real devices.)

A notable strength of the laptop’s file navigation system is
that it displays the outline of the hierarchical file structure.
Such a capability of displaying the context information has
proven to be useful for locating a file in a complex hierarchy.
A few attempts have been made to visualize the tree structure
on small screens [HZH07, Kar03, YC06], but they could not
effectively present both the overall context and the focused
information simultaneously.

Recently, mobile devices are ubiquitous in our daily life,
and the range of devices has become wider. Figure 1 shows
three representative devices. The file explorers used for the
laptops, such as Windows Explorer shown in Figure 1-(a),
display the list of files with detailed information, and further provide the outline of the hierarchical structure among

This paper proposes a new approach to file navigation
in a tablet platform with the screen size of 5 to 10 inches.
The proposed approach provides an integrated view of the
context and focused information in a space-efficient manner.
Our experiments have proven that the novel approach significantly enhances the file navigation efficiency.

c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

1132

H.J. Shin, G.H. Park & J.H. Han / Tablorer - An Interactive Tree Visualization System

The organization of this paper is as follows. Section 2 reviews the related work. Section 3 presents the main features
of the proposed approach. Section 4 presents its additional
features. Section 5 shows the experiment results, and gives
discussions. Section 6 concludes the paper.
2. Related work
2.1. Tree Visualization
Hierarchical information is usually visualized using a tree
structure. Tree visualization techniques can be divided into
three categories: node-link, space-filling, and combined
techniques [LKS∗ 10].
The classic node-link visualization technique has aimed
at providing the parent-child relationships within the hierarchy. The main problem of the technique is that it often
wastes the screen space to illustrate the relationships with
line segments. Various space optimized node-link techniques
have been studied. For example, SOTree [NH02] and EncCon [NH05] use a space division algorithm to maximally
utilize the screen space, but the nodes can be occluded by
their ancestor.

we eliminate the problem using a novel aggregation-based
method.
Elastic Hierarchies [ZMC05] is a good instance of the
combined technique. It combines Treemaps and node-link
diagrams to clearly show the topology in a space-efficient
manner. The major characteristic of this technique is that the
combination of two representation methods can be changed
elastically depending on the user views. The combined technique is more space-efficient than the node-link visualization technique, but still suffers from the space waste problem
caused by the line segments.
The tree visualization techniques are applied in various
application domains. TreePlus [LPP∗ 06] adapted general
graph data to tree layout for effective web exploration. They
transformed graphs into trees, and displayed visual hints of
the graph structure. Tabulator [BlCC∗ 06] is an RDF (Resource Description Framework) browser which maps the
linked data into a treelike structure. The linked data are represented space-efficiently using a nested tabular format. It is
similar to our approach, but it could not avoid the problem
of scattering the context information.
2.2. Visualization on Mobile Devices
Research works on tree visualization on small screen devices
are at their infant stage. Moreover, most of the researches
have been performed on old-fashioned devices such as handheld phone with button interfaces or PDAs (personal digital
assistants) with stylus pen interfaces.

(a)

(b)

(c)

Figure 2: Space-optimized tree representations [MR10]. (a)
Treemaps. (b) Icicle. (c) SunBurst.
Treemaps [JS91] (Figure 2-(a)) is a well-known spacefilling technique which does not use link segments. The
root node corresponds to the rectangular screen space,
and the child nodes are represented by recursively subdivided rectangles. There are many variants such as Cushion
treemaps [VWVdW99] and Beamtrees [vHvW02]. They are
appropriate for grasping the entire picture, but perception of
the parent-child relationships is difficult.
Other space-filling techniques use the so-called adjacency
placement strategy. They represent the relationships by placing the child nodes next to their parent node. Icicle [KL83]
(Figure 2-(b)) places the child nodes on a linear layout,
and SunBurst [SZ00] (Figure 2-(c)) uses a circular layout.
The techniques present the relationships among the nodes
more clearly than the enclosure-based techniques such as
Treemaps, but they consume more space. As pointed out by
[MR10] and [LAAL09], the labels on small nodes are quite
difficult to read because the sizes of deeper nodes diminish exponentially in the adjacency techniques. Our approach
can be taken as an instance of the adjacency techniques, but

RELT [HZH07] uses the adjacency technique for visualizing trees. It recursively calculates a set of non-overlapped
polygonal nodes to fully utilize the screen space. However,
this visualization technique is suitable only for small-sized
trees, such as menu structures.
Existing structure visualization techniques for PCs have
been transferred to mobile pocket-sized devices [Kar03].
The research is focused on displaying complex structure.
The traditional radial layout of hierarchical information was
also suggested for visualization on mobile devices [YC06].
3. Tablorer Model
This paper proposes Tablorer that stands for Table Explorer.
It visualizes a hierarchical information structure in a spaceefficient table form. This section presents its main features.
3.1. Context and Focus Areas
The hierarchical file system is one of the most notable instances of information hierarchy. In its tree structure, the
internal nodes represent directories or folders, and the leaf
nodes represent files. Users navigate the file system by repeatedly selecting or clicking the nodes, i.e., may go down
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1133

H.J. Shin, G.H. Park & J.H. Han / Tablorer - An Interactive Tree Visualization System

(a)

(a)

(b)

(b)

Figure 5: Hierarchy visualization. (a) Traditional node-link
structure. (b) Tablorer.

Figure 3: File system navigation. (a) Top down traversal.
(b) Backtracking.

the tree (Figure 3-(a)) and may backtrack up the tree (Figure 3-(b)). Suppose that, in Fig. 4, the red-colored node has
been just selected. Then, its descendants contain “the data
of current interest," and are named the focus area. In contrast, the nodes which have been so far considered in order
to select the current node are named the context area. It contains the candidate nodes that can be selected at the time of
backtracking.
LEGEND
Focus area
Context area
Selected node

Figure 4: Context and focus areas.
In mobile devices, most of the file navigation tools list
only the child nodes of the selected directory. However, the
key feature of a hierarchical file system is the parent-child
relationships among the nodes. The more parent-child relationships are revealed, the more information of the hierarchical structure can be perceived by users. Tablorer displays not
only the children but also the grandchildren of the selected
node, i.e. it displays two levels in the focus area, which we
call upper level and lower level. Furthermore, Tablorer fully
displays the context area in a space-efficient manner, instead
of (partially) hiding it, for providing the users with more
contextual information.
3.2. Expandable Table
In Tablorer, the children of a node define the representation
unit, which we call a sibling block. The node-link structure
shown in Figure 5-(a) has five sibling blocks. (Each sibling block is bounded in a box for the presentation purpose.)
In Tablorer, a sibling block is displayed either horizontally
or vertically, and the orientations alternate according to the
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

levels of the sibling blocks. See Figure 5-(b). The sibling
block containing only the root is displayed horizontally, the
second-level block (shaded in dark gray) is displayed vertically, and the three blocks at the third level are horizontal.
Note that, if two sibling blocks are adjacent and have different orientations, they represent the parent-child nodes.
Tablorer is both space-efficient and legible. It can be intuitively understood that Tablorer’s layout is quite spaceefficient if you compare the layouts shown in Figure 5.
Tablorer could be taken as an instance of the space-filling
technique based on adjacency placement strategy. Note that,
however, the traditional adjacency-based techniques represent the parent-child relationships by placing every child
node next to its parent node, and thereby the size of a child
is much smaller than that of the parent. In contrast, all nodes
in the Tablorer hierarchy have the same size, leading to enhancement of legibility. Further, because all sibling nodes
are displayed in a compact block, their brotherhood is revealed more clearly.
The layout of Tablorer is expanded dynamically through
user interactions. See Figure 6. Each sub-figure illustrates an
expansion step together with the case of the node-link tree
(shown at the top). In Figure 6-(a), the root node is selected,
and the focus area is displayed. Figure 6-(b) shows the layout expanded by selecting node a. Observe that two sibling
blocks (containing {g,h} and {i,j,k}) have collapsed. The
focus area has moved to the descendants of a, and the sibling block containing {a,b,c} now belongs to the context
area (delimited by blue boundaries).
See the focus area of Tablorer shown in Figure 6-(a). Its
“upper level” (containing {a,b,c}) is displayed vertically. In
contrast, Figure 6-(b) shows that the upper level (containing
{d,e,f}) of the focus area is displayed horizontally. The orientations of the sibling blocks depend on their levels in the
hierarchy, i.e., whether odd or even.
In the focus area, not only an upper-level node but also
a lower-level node can be selected. Figure 6-(c) shows the
result when node l is selected. Both the context and focus
areas are accordingly updated.

1134

H.J. Shin, G.H. Park & J.H. Han / Tablorer - An Interactive Tree Visualization System

a

d

b

e

f

c

g

h

i

a

j

k

d

l

m

b

e

n

f

o

p

c

collapsed

a

d

collapsed

q

l

r

a

d

e

b

g

h

c

i

j

f

k

b

e

m

n

c

f

..

collapsed

s

a

d

e

f

a

d

e

f

b

l

o

p

b

l

r

s

c

m

q

c

m

n

(a)

n

(c)

(b)
LEGEND
Focus area

Context area

Selected node

Figure 6: Interactive expansion. (a) Initial layout. (b) Node a is selected. (c) Node l is selected.

a

d

l

r

b

e

m

c

a

f

d

n

l

s

collapsed

a

d

b

l

c

m

e
r

f

b

e

m

c

f

n

t

u

a

d

e

a

d

e

f

b

l

collapsed

b

n

t

u

c

m

collapsed

c

l

n

t

f
s

u

m

n

LEGEND
Focus area

Context area

Selected node

Figure 7: Cyclic permutation relocates the newly selected node n to the first place in the sibling block.

3.3. Cyclic Permutation
In the example shown in Figure 6-(c), the selected node l
was the first node in the sibling block. What if the second
(m) or third node (n) is selected? Suppose that, as shown in

Figure 7, n is selected instead of l. The focus area is updated
to display the descendants of n. Simultaneously, the order of
l, m, and n is altered using cyclic permutation such that the
selected node n appears as the first node in the sibling block.

c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1135

H.J. Shin, G.H. Park & J.H. Han / Tablorer - An Interactive Tree Visualization System
My
Device

My
Device

Home

Julie

Adam

Eddy

Jordan

Usr

Personal

Project

Temp

Travel

Bank

Var

Study

GTK

Docs

Media

SW

Work

Etc

Down

QT

Weekly
report

Frame
work

Kernel

UI

Home
work

3D

Meeting
minutes

January

Febrary

March

Lab

EFL

Release
Note

January

Febrary

Test
result

Log
files

Tech.
notes

3D

result1

Render

UIFW

Seminar

OGL

2010.
W02
April

2010 .
Rev1

2010.
Rev2

result2

report1

APIs

tech

chart1

chart2

2010.
W03

Home

Julie

Adam

Eddy

Jordan

Usr

Personal

Project

Temp

Travel

Var

Study

GTK

Docs

Media

SW

Etc

Down

QT

Weekly
report

Frame
work

Kernel

UI

Home
work

3D

Meeting
minutes

January

Febrary

March

Lab

EFL

Release
Note

January

Febrary

Test
result

Log
files

Tech.
notes

3D

May
2010.
Rev3

Report

Work

result1

Render

UIFW

Seminar

(a)

Bank

OGL

2010.
W02
April

2010.
W03
May

2010 .
Rev1

2010.
Rev2

result2

report1

APIs

tech

chart1

chart2

2010.
Rev3

Report

(b)

My
Device

My
Device

Home

Julie

Adam

Eddy

Jordan

Usr

Personal

Project

Temp

Travel

Bank

Var

Study

GTK

Docs

Media

SW

Work

Etc

Down

QT

Weekly
report

Frame
work

Kernel

UI

Home
work

3D

Meeting
minutes

January

Febrary

March

Lab

EFL

Release
Note

January

Febrary

Test
result

Log
files

Tech.
notes

3D

Seminar

result1

Render

UIFW

OGL

2010.
W02
April

2010 .
Rev1

2010.
Rev2

result2

report1

APIs

tech

chart1

chart2

2010.
W03
May
2010.
Rev3

Home

Julie

Adam

Eddy

Jordan

Usr

Personal

Project

Temp

Travel

Var

Study

GTK

Docs

Media

SW

Etc

Down

QT

Weekly
report

Frame
work

Kernel

UI

Home
work

3D

Meeting
minutes

January

Febrary

March

Lab

EFL

Release
Note

January

Febrary

Test
result

Log
files

Tech.
notes

3D

Report

Seminar

(c)

Bank

Work

result1

Render

UIFW

OGL

2010.
W02
April

2010.
W03
May

2010 .
Rev1

2010.
Rev2

result2

report1

APIs

tech

chart1

chart2

2010.
Rev3

Report

(d)
LEGEND

Viewing window

Context area

Scrolling

Figure 8: Context panning and focus scrolling. (a) The viewing window has been automatically panned to show more information from the focus area. (b) The context area (with the dotted-line boundaries) would be considered too large. Then, the context
area can be reduced, and the focus area can be enlarged, through manual context panning. (c) The focus area is scrolled. In
this example, scrolling is limited to the vertical direction because the upper level of the focus area is located at the left. If the
upper level is located at the top, the focus area is scrolled horizontally. (d) Not the entire focus area but just the lower level is
scrolled. The upper level remains fixed.

Otherwise, the newly expanded focus area would be located
apart from the context area, causing waste of screen space.
In the implementation of the cyclic permutation, a smooth
animation technique is used for maintaining user’s mental
map [Gon96].
4. Additional Features
4.1. Panning and Scrolling
Tablorer supports two popular interaction techniques, panning and scrolling, which are needed for navigating a large
information space in a small screen. More specifically,
Tablorer supports context panning and focus scrolling. As
users navigate the information hierarchy, the context information is accumulated on the upper-left side and the context
area becomes larger. In order to show more information of
the focus area, the viewing window needs to be panned along
the lower-right direction.
For user’s convenience, automatic panning is enabled by
default, and the viewing window is automatically moved
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

to display the predefined minimum of the focus area. Figure 8-(a) shows the automatically-panned viewing window.
In addition, users are allowed to pan the viewing window by
touching and sliding the context area. Figure 8-(b) shows the
result of manual panning.
Note that, however, the manual context panning is not allowed to make the context area disappear from the screen.
Imagine that you are navigating a large table in your PC
screen. When you move too deep in the table, you may soon
lose the heading located at the top or left of the table. Without the heading, you would be lost in the middle of the table and could not keep track of which rows/columns you are
looking at. A similar situation can be encountered if the context area in Tablorer disappears. Therefore, context panning
in Tablorer leaves at least the lowest two levels of the context area, one in a horizontal form and the other in a vertical
form.
In order to be able to move deep into the focus area while
maintaining such a minimum context area, focus scrolling

1136

H.J. Shin, G.H. Park & J.H. Han / Tablorer - An Interactive Tree Visualization System

My Device

Multimedia

Photo

Movie

Music

Software

Family

Baby

Hometown

ID picture

Relatives

Travel

Work

Portrait

Friends

Members

Model

Neighbor

Office

Docs

Landscape

Bridge

Car

Flower

Night shot

Sky

Scanned

2005

2006

2007

2008

National
geograp ..

Animal

History

Nature

People

Travel
in Korea

Science

(a)

My Device

Multimedia

My Device

Photo

Movie

Music

Multimedia

Photo

Movie

Music

Name
Software
Family

Portrait

Landscape

Scanned

National
geograp ..

Work
Model

Travel

Software

Office

Work

Sky

Docs

Travel
2009

Type
Travel

25/12/01

Folder
Office

Portrait

Neighbor

Docs

Date

Family

20/10/02

Folder

Landscape

20/10/02

Folder

Scanned

19/05/06

Folder

National geographic photos [ Animals Flowers ]

11/11/03

Folder

Model

Neighbor

in Korea

in Korea

Science

Science

My_son_smile
Wallpaper

Galuxy

Wave

Orion

Sky

Travel
2009

12/12/01

JPG file

Soccer

(b)

(c)

Figure 9: Tablorer views. (a) Default view. (b) Grid view. (c) List view.

is needed. Tablorer supports scrolling either the entire focus
area or only its “lower level.”
Figure 8-(c) shows the former case. In this example, if you
want to see more children and grandchildren of the selected
node (Docs), you can scroll the entire focus area vertically.
If the scrolling were not limited to the vertical direction, the
“upper level” of the focus area (that is located at the left-hand
side of the focus area, and includes Weekly report and
Meeting minutes) would disappear, and you would not
be able to keep track of which rows you are looking at.
If you want to see more data at each “lower level” of the
focus area, you can scroll only the lower level. Figure 8-(d)
shows an example, where the lower level is scrolled horizontally while the upper level is fixed. The two modes of
scrolling enable users to navigate the focused information
without losing the related context.
4.2. Extended Views
So far, the default view of Tablorer has been presented,
where both the context area and the focus area are integrated,
and further the focus area is composed of two levels (the upper and lower levels). Figure 9-(a) shows the default view.
The context area is delimited by blue lines, and the whitecolored folders indicate the navigation path.

The two-level structure of the focus area can be released
such that only the children, not the grandchildren, are displayed. It is called the grid view, and Figure 9-(b) shows an
example. The grid view places all nodes into a grid of cells,
and is preferred for browsing photos, for example. Figure 9(c) shows another example, which we call the list view. The
nodes are displayed in a vertical list. It is useful for viewing
some detailed information of the nodes.

5. Experiment Results and Discussions
Through experiments, we have compared the visualization
and navigation efficiencies of Tablorer and other visualization models.

5.1. Reference Models
The hardware platform used for experiments is a tablet PC,
HP TouchSmart TM2. Its viewing window size is fixed to 7
inches for experiments. Its resolution is 800×480 (WVGA).
We chose three reference models which are widely used
for tree visualization. Figure 10 shows the layouts of
Tablorer and the reference models. All models display both
context and focus information at the same time for the purpose of efficient navigation. The first reference model is
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

H.J. Shin, G.H. Park & J.H. Han / Tablorer - An Interactive Tree Visualization System

1137

(a)

(b)

(c)

(d)

Figure 10: Screen shots of visualization models. (a) Tablorer. (b) Treeview. (c) Vertical tree. (d) Horizontal tree. Treeview is
provided by Prefuse toolkit, and we implemented Tablorer, Vertical tree, and Horizontal tree also using Prefuse toolkit. The
experiments with Tablorer used the default view shown in Fig. 9-(a).

the traditional node-link visualization model shown in Figure 10-(b). We used Treeview provided by Prefuse toolkit
[HCL05]. The layout of Treeview is configured such that it
displays the same amount of information as Tablorer, i.e.,
both Treeview and Tablorer display two levels of information on the focus area.

5.2. Design and Procedure

The second reference model is the indented outline model.
It is used in Windows Explorer. See Figure 10-(c). It expands
the nodes downward in an indented manner, and we call it
Vertical tree. By default, Vertical tree displays a single level
at the focus area.

The task given to the subjects was to search a tree hierarchy for a presented word. The tree contained nearly 8,000
nodes, which were used in [HCL05]. From the tree, 28 words
were selected for experiments. The average depth of the
words was 5.8 in the tree.

The last reference model is the one that is widely used
for menu display. See Figure 10-(d). The nodes on the same
level are presented as a list, and the next levels’ nodes are
expanded at the right-hand side. We call it Horizontal tree.
Horizontal tree displays just a single level at the focus area as
Vertical tree does. We implemented Tablorer, Vertical tree,
and Horizontal tree using Prefuse toolkit.
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

The experiments were performed with forty subjects. They
were computer science major graduate students (37 males
and 3 females). Most of the subjects (85%) had experiences
in the touch screen-based mobile devices, and about half of
them had over six-month experiences.

We used within-subject design, and each subject experimented with four models. The set of 28 words was divided
into four subsets, each containing 7 words. A subset was assigned to a visualization model. In order to avoid the compound effect, each subject performed a distinct subset for
each visualization model.

1138

H.J. Shin, G.H. Park & J.H. Han / Tablorer - An Interactive Tree Visualization System

Model

N

Mean

St. Dev.

Model

N

Mean

St. Dev.

Model

N

Mean

St. Dev.

Horizontal

8

184.38

11.64

Horizontal

10

11151

5394

Horizontal

10

865.3

181.9

Tablorer

8

112.63

17.48

Tablorer

10

21313

11052

Tablorer

10

687.9

127.8

Treeview

8

125.13

20.46

Treeview

10

40689

14462

Treeview

10

903.8

220.1

Vertical

8

203.75

19.39

Vertical

10

16648

4199

Vertical

10

862.6

178.0

240

80000

220

70000

1200

200

60000

1100

180

50000

1000

160

40000

900

140

30000

800

120

20000

700

100

10000

600

1300

500

0

Horizontal

Tablorer

Treeview

Vertical

Horizontal

Tablorer

(a)

Treeview

(b)

Vertical

Horizontal

Tablorer

Treeview

Vertical

(c)

Figure 11: Comparison of experiment results with four visualization models. (a) Click counts. (b) Panning distances. (c)
Completion times.

Before the experiments, the subjects were made to practice the reference models. (However, the reference models
are so popular that the subjects did not spend a good amount
of time on them.) Then, Tablorer was presented to the subjects, and they were trained for Tablorer with 16 words,
which were different from the 28 words used for the experiments. The presentation and training took about 20 minutes. When the subjects started experiments, they estimated
they were almost equally familiar with the four visualization
models.
In the experiments, 28 words were presented to the subject one by one. For each word, three items were recorded:
the number of node selections (clicks), the moving distance
caused by panning, and the completion time. The panning
distance was measured by counting the number of pixels
located between the start and end points. When the experiments were completed, the subjects answered the questionnaire regarding their satisfaction degree for each visualization model.

expected and natural result because Tablorer and Treeview
display two levels of information at the focus area whereas
Vertical tree and Horizontal tree display just a single level.
Figure 11-(b) compares the panning distances of the
four visualization models. One-way ANOVA with PLSD revealed the following:
F(3, 36) = 17.47, p < 0.001
Horizontal < Tablorer, Vertical < Treeview
Tablorer shows good performance but does not excel Horizontal tree, which has the best performance. Figure 12 explains why we have the performance differences among the
four models. In the “expanded state,” the red node represents
the clicked folder. Observe that Horizontal tree requires the
most compact area, leading to the smallest panning distance,
whereas Treeview consumes the largest area, leading to the
largest panning distance.
Figure 11-(c) compares the completion times of the four
visualization models. One-way ANOVA with PLSD revealed the following:

5.3. Results and Discussion
This subsection presents the statistical analysis of the experiment results with the four visualization models. For the sake
of simplicity, we will use the symbol < to denote the statistical differences for three items such that the ‘better’ system
has a ‘smaller’ value.
Figure 11-(a) compares the click counts of the four visualization models. One-way ANOVA with PLSD revealed the
following:
F(3, 28) = 51.12, p < 0.001
Tablorer, Treeview < Horizontal, Vertical
Tablorer and Treeview require approximately 61% of the
click counts of Vertical tree and Horizontal tree. It is an

F(3, 36) = 2.88, p < 0.05
Tablorer < Treeview, Horizontal, Vertical
The superiority of Tablorer in terms of the completion time
can be explained by the facts that it requires the smallest
click count and moderate panning distance.
A visualization model can be described by a few features.
One of them would be information depth of the focus area,
e.g., two levels of information for Tablorer and Treeview vs.
one level for Vertical tree and Horizontal tree. Another feature would be data compactness. See Figure 12. In the case
of Vertical tree, the context area (colored in dark gray) is
partitioned when the red node is selected, and the partitions
are placed apart by the focus area (colored in light gray).
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

H.J. Shin, G.H. Park & J.H. Han / Tablorer - An Interactive Tree Visualization System
initial state

expanded state

Horizontal
tree

Tablorer

Treeview

Vertical
tree

Figure 12: Illustration of the expanding mechanisms in four
visualization models.

Data are displayed not in a compact fashion. Treeview also
lacks data compactness, as illustrated in the figure. It would
hamper fast navigation in mobile devices with limited screen
sizes. Tablorer does not suffer from this problem.
According to the user survey (using the satisfaction questionnaire), Tablorer got the highest score, 3.9 in the scale of
[1,5]. The scores for Horizontal tree, Vertical tree, and Treeview were 3.1, 3.0, and 2.7, respectively.
Along with the questionnaire regarding the satisfaction
degree, the subjects were asked to write the advantages and
disadvantages of Tablorer. As advantages, 13 stated that
search was easy because the focus area showed more data
(not only children but also grandchildren) than the reference
models, and 5 stated that the parent’s siblings displayed in
a compact area helped to locate the current position in the
hierarchy. As disadvantages, 8 stated that the parent-child
relations were not intuitive, and 3 stated that cyclic permutation was confusing.
6. Conclusion
This paper presented Tablorer, a novel interactive tree visualization system for mobile devices. We adopted a sibling
block-based adjacency method, and mapped the context and
focus information into an expandable table format. By doing so, a unified view of the context and focus information
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1139

was successfully provided. Further, we showed that Tablorer
was seamlessly integrated with the traditional visualization
layouts such as grid and list views.
We performed experiments to evaluate the navigation efficiency of Tablorer. The experiment results showed that, by
using Tablorer, the search time can be saved by about 22%.
Such a performance increase was achieved because Tablorer
guaranteed fewer clicks and moderate panning distances.
The concept of Tablorer can be applied to other applications beyond file browsing. Examples might include address
search in automobile navigation system and 3D scene graph
browsing in PC.
The context panning and focus scrolling mechanisms presented in Section 4.1 helped users navigate the focus area
without losing the related context. More functions for user
interaction would be needed. For example, scrolling individual rows or columns in the context area would be helpful.
Such an extension will be pursued as a future work.
Tablorer has also weaknesses. For example, the cyclic permutation may tarnish the user’s spatial memory which has
been obtained during navigation. Further studies are needed
to help the user maintain the spatial memory as much as possible.
Tablorer may be not used for smartphones as is due to
their small screen sizes. Implementing the design philosophy
of Tablorer for smartphones will be a challenging research
issue.
Acknowledgements
We would like to thank DongHee Han and HanYoung
Jang for valuable discussions and suggestions, Prof. Gerard J. Kim for helping us design the user study, and
Prof. Kyung-Ok Lee for helping us perform the statistical analysis. This research was supported by MKE, Korea
under ITRC NIPA-2010-(C1090-1021-0008) (NTIS- 2010(1415109527)) and the National Research Foundation of Korea(NRF) grant funded by the Korea government(MEST)
(No. 2009-0086684).
References
[BlCC∗ 06]

B ERNERS - LEE T., C HEN Y., C HILTON L., C ON D HANARAJ R., H OLLENBACH J., L ERER A.,
Tabulator: Exploring and analyzing linked data on
the semantic web. In Proceedings of the 3rd International Semantic Web User Interaction Workshop (2006). 2
NOLLY D.,
S HEETS D.:

[Gon96] G ONZALEZ C.: Does animation in user interfaces improve decision making? In Proceedings of the SIGCHI conference on Human factors in computing systems: common ground
(New York, NY, USA, 1996), CHI ’96, ACM, pp. 27–34. 5
[HCL05] H EER J., C ARD S. K., L ANDAY J. A.: prefuse: a
toolkit for interactive information visualization. In Proceedings
of the SIGCHI conference on Human factors in computing systems (New York, NY, USA, 2005), CHI ’05, ACM, pp. 421–430.
7

1140

H.J. Shin, G.H. Park & J.H. Han / Tablorer - An Interactive Tree Visualization System

[HZH07] H AO J., Z HANG K., H UANG M.: Relt - visualizing
trees on mobile devices. In Advances in Visual Information Systems, Qiu G., Leung C., Xue X., Laurini R., (Eds.), vol. 4781 of
Lecture Notes in Computer Science. Springer Berlin / Heidelberg,
2007, pp. 344–357. 1, 2
[JS91] J OHNSON B., S HNEIDERMAN B.: Tree-maps: a spacefilling approach to the visualization of hierarchical information
structures. In Visualization, 1991. Visualization ’91, Proceedings., IEEE Conference on (Oct. 1991), pp. 284 –291. 2
[Kar03] K ARSTENS B.: Visualization of complex structures on
mobile handhelds. In Proceedings of International Workshop on
Mobile Computing (2003), pp. 17–18. 1, 2
[KL83] K RUSKAL J., L ANDWEHR J.: Icicle plots: Better displays
for hierarchical clustering. The American Statistician 37 (1983),
162–168. 2
[LAAL09] LTIFI H., AYED M. B., A LIMI A. M., L EPREUX S.:
Survey of information visualization techniques for exploitation
in kdd. Computer Systems and Applications, ACS/IEEE International Conference on (2009), 218–225. 2
[LKS∗ 10] L ANDESBERGER T., K UIJPER A., S CHRECK T.,
KOHLHAMMER J., VAN W IJK J., F EKETE J.-D., F ELLNER
D. W.: Visual analysis of large graphs. In Proceedings of EuroGraphics: State of the Art Report (2010). 2
[LPP∗ 06] L EE B., PARR C., P LAISANT C., B EDERSON B.,
V EKSLER V., G RAY W., KOTFILA C.: Treeplus: Interactive
exploration of networks with enhanced tree layouts. Visualization and Computer Graphics, IEEE Transactions on 12, 6 (2006),
1414 –1426. 2
[MR10] M C G UFFIN M. J., ROBERT J.-M.: Quantifying the
space-efficiency of 2d graphical representations of trees. Information Visualization 9 (2010), 115–140. 2
[NH02] N GUYEN Q. V., H UANG M. L.: A space-optimized tree
visualization. In Information Visualization, 2002. INFOVIS 2002.
IEEE Symposium on (2002). 2
[NH05] N GUYEN Q. V., H UANG M. L.: Enccon: an approach to
constructing interactive visualization of large hierarchical data.
Information Visualization 4 (2005), 1–21. 2
[SZ00] S TASKO J., Z HANG E.: Focus+context display and navigation techniques for enhancing radial, space-filling hierarchy visualizations. In Information Visualization, 2000. INFOVIS 2000.
IEEE Symposium on (2000). 2
[vHvW02] VAN H AM F., VAN W IJK J.: Beamtrees: compact visualization of large hierarchies. In Information Visualization,
2002. INFOVIS 2002. IEEE Symposium on (2002). 2
[VWVdW99] VAN W IJK J., VAN DE W ETERING H.: Cushion
treemaps: visualization of hierarchical information. In Information Visualization, 1999. INFOVIS 1999. IEEE Symposium on
(1999). 2
[YC06] YOO H. Y., C HEON S. H.: Visualization by information type on mobile device. In Proceedings of the 2006 AsiaPacific Symposium on Information Visualisation - Volume 60
(Darlinghurst, Australia, Australia, 2006), APVis ’06, Australian
Computer Society, Inc., pp. 143–146. 1, 2
[ZMC05] Z HAO S., M C G UFFIN M., C HIGNELL M.: Elastic hierarchies: combining treemaps and node-link diagrams. In Information Visualization, 2005. INFOVIS 2005. IEEE Symposium on
(2005), pp. 57 – 64. 2

c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

