DOI: 10.1111/j.1467-8659.2011.01934.x
Eurographics / IEEE Symposium on Visualization 2011 (EuroVis 2011)
H. Hauser, H. Pfister, and J. J. van Wijk
(Guest Editors)

Volume 30 (2011), Number 3

Stable Morse Decompositions for Piecewise Constant Vector
Fields on Surfaces
Andrzej Szymczak
Colorado School of Mines, Golden, CO 80401, USA

Abstract
Numerical simulations and experimental observations are inherently imprecise. Therefore, most vector fields of
interest in scientific visualization are known only up to an error. In such cases, some topological features, especially those not stable enough, may be artifacts of the imprecision of the input. This paper introduces a technique
to compute topological features of user-prescribed stability with respect to perturbation of the input vector field.
In order to make our approach simple and efficient, we develop our algorithms for the case of piecewise constant
(PC) vector fields. Our approach is based on a super-transition graph, a common graph representation of all PC
vector fields whose vector value in a mesh triangle is contained in a convex set of vectors associated with that
triangle. The graph is used to compute a Morse decomposition that is coarse enough to be correct for all vector
fields satisfying the constraint. Apart from computing stable Morse decompositions, our technique can also be used
to estimate the stability of Morse sets with respect to perturbation of the vector field or to compute topological
features of continuous vector fields using the PC framework.
Categories and Subject Descriptors (according to ACM CCS): I.3.5 [Computer Graphics]: Computational Geometry
and Object Modeling—Geometric algorithms, languages, and systems

1. Introduction
Because of numerical and measurement errors, virtually no
data describing a real physical phenomenon is known precisely. The error can lead to a variety of artifacts that could
impact one’s ability to understand the data. Features that are
not present in the real system may be present in the approximate one. Conversely, features of the physical system may
be lost because of the error. Some of the features may have
different characteristics in the original system and its approximation, potentially leading to confusion or misinterpretation. These issues tend to be more severe for weak features
that are not stable enough under perturbation of the data.
This paper presents a new approach to address this problem
in the vector field setting. The basic idea is to compute a set
of stable features (Morse sets), that are valid for any vector
field within a user-specified error bound from the input one.
In order to make this approach simple and efficient, we
focus on the Piecewise Constant (PC) vector field setting
of [SZ11]. A PC vector field is constant in the interior of
each mesh triangle. The input to our algorithm is a convex
valued piecewise constant (CVPC) vector field F, that asc 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

signs a convex set of vectors to each triangle. F defines a
set of constraints for feasible PC vector fields: their value
in any triangle is contained in the convex set assigned to
that triangle by F. Our algorithm builds a common finite directed graph representation of all feasible PC vector fields,
called the super-transition graph. Any trajectory of a feasible vector field is represented by a path in the graph. Roughly
speaking, super-transition graph’s arcs include arcs of transition graphs [SZ11] of all feasible PC vector fields. Strongly
connected components of the graph define a Morse decomposition that is coarse enough to be valid for every feasible
vector field. Apart from computing stable Morse decompositions, our algorithm can also be used to estimate stability
of features with respect to perturbation of the vector values
or to analyze continuous vector fields using the PC setting.
Our approach builds upon the natural flexibility of Morse
decompositions. In particular, a Morse decomposition for
any given vector field is not unique: it can be made coarser
or finer depending on one’s goals. Finer Morse sets tend
to correspond to simple flow features [SZ11], such as stationary points or periodic trajectories. Therefore, they are

852

A. Szymczak / Stable Morse Decompositions

relatively easy to understand. On the other hand, coarser
Morse decompositions tend to be more stable under perturbation and less dependent on a numerical integration
scheme [CMLZ08]. Our algorithm provides the user with explicit control over the stability of the output Morse sets, i.e.
the maximum perturbation of the vector field that they can
sustain. Morse sets also have in-built capability to enclose
complex dynamics while exposing its simplified topological
model (this is further explained in Figure 8), which allows
for intuitive interpretation of the output.
The paper is organized as follows. Section 2 briefly describes related work on vector field topology. Section 3 introduces CVPC vector fields and includes a discussion of
their relationship to PC vector fields of [SZ11]. In Section
4, we characterize feasible segments from which trajectories
of feasible PC vector fields are built. In Sections 5 and 6, we
describe the super-transition graph and Morse sets. Section 7
describes the experimental results. Section 8 contains a brief
summary and a discussion of possible future work.
2. Prior work
Vector field visualization has been an active research topic
during the past two decades. We refer the readers to the surveys [MLP∗ 09,LHD∗ 04,LHZP07,PPF∗ 10] for thorough reviews of vector field visualization. This section focuses only
on most relevant prior work on vector field topology.
The main focus of work on vector field topology has been
on computing basic features such as stationary points, periodic orbits and separatrices. Stationary points and separatrices can be found using the technique of [HH89]. Periodic
orbits can be computed by following trajectories until they
converge to a limit cycle [WS01]. An approach based on a
geometric interpretation of periodic trajectories as intersections of stream surfaces has been proposed in [TW04]. Vector field topology can also be analyzed based on combinatorial representations of the flow [For98, RLH10].
In [CML∗ 07], Morse decomposition is used to identify
stationary points and periodic orbits. They are incorporated
into a topological graph called the Entity Connection Graph
(ECG), which extends the original definition of vector field
topology of [HH91]. In [CMLZ08], Morse decomposition
is proposed as a coarser, but also more stable alternative to
the standard vector field topology. The same paper introduces an algorithm for computing a Morse decomposition
and a Morse Connection Graph (MCG), that encodes connections between Morse sets. An efficient and robust algorithm for computing Morse decompositions of sub-triangle
precision for piecewise constant vector fields is introduced
in [SZ11]. This paper extends this technique to the case of
convex-valued PC vector fields.
The only work on uncertain vector field topology we are
aware of is [OGHT10], where the error is modeled as a probability distribution and the output topological features are

probability distributions on the phase space that describe the
behavior of random (stochastic) trajectories of the uncertain
vector field. In contrast, our approach is fully deterministic.
Its output can be seen as a worst case estimate of the variation of the topology, since it produces coarse features that
are consistent with any perturbation within the user-specified
bound. Our algorithm by itself does not attempt to estimate
the likelihood that a given point in a Morse set belongs to
a Morse set of a randomly chosen perturbation of the input vector field (although one could speculate that it may be
possible by combining it with a suitable variant of the probabilistic approach). Another difference is that our approach
computes all recurrent features, including ones that are neither attracting nor repelling, in the same manner. Saddles
require special treatment in [OGHT10]. It would be interesting to develop algorithms or visualization environments that
combine the strengths of both methods.
3. Convex-valued piecewise constant vector fields
Let M be a triangulated manifold surface. A convex valued
piecewise constant vector field (CVPC vector field for short)
is a function that assigns a convex set F(∆) of vectors parallel to ∆ to every triangle ∆ of M.
In what follows, we assume that the reader is familiar with
the basics of the piecewise constant framework [SZ11]. Recall that a PC vector field is defined by a function f that
assigns a vector f (∆) parallel to ∆ to every triangle ∆. For
the purpose of this paper, it is convenient to drop the nondegeneracy assumptions in [SZ11] and allow f (∆) to be parallel to one of the ∆’s edges or to be the zero vector. The
key properties of PC vector fields hold in degenerate cases
(Appendix A in the supplementary material). Throughout
this paper, we assume that the stationary vertices and the
flow along mesh edges are determined from f as described
in [SZ11]. The process is briefly reviewed in this paper as
needed (Sections 4.2 and 4.3). Our ultimate goal is to compute a Morse decomposition that is coarse enough to be correct for any feasible PC vector field, i.e. a PC vector field f
such that f (∆) ∈ F(∆).
3.1. Examples of CVPC vector fields
CVPC vector fields provide a convenient way to model PC
vector fields known up to an error. If f (∆) is known up to
an error E(∆), one can define F(∆) as the set of all vectors
in ∆’s plane that are no farther than E(∆) from f (∆) (thus,
F(∆) is a disk of radius E(∆) in the ∆’s plane, centered at
f (∆)). In this case, a PC vector field is feasible if and only if
it is within the error bound from the input vector field.
CVPC vector fields can also be used to analyze a piecewise linear vector field g, defined by vector values at the
mesh vertices. The idea is to define F(∆) so that it contains
any vector value attained by g in ∆. On flat patches of the
mesh, this condition is satisfied by the envelope of g, defined
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

A. Szymczak / Stable Morse Decompositions

853

Figure 1: Edges of types C, E, I, CE, CI and CEI. Blue squares represent vectors assigned to the two incident triangles.
Examples of these vectors are shown as black arrows.

by F(∆abc) := Hull{P∆ (g(a)), P∆ (g(b)), P∆ (g(c))}, where
by Hull(A) we denote the convex hull of A and by P∆ – the
orthogonal projection to the 2D linear space parallel to ∆.
Let us stress that, even though we focus on CVPC vector
fields defined as described above in this work, our approach
is not restricted to these cases. For example, F(∆) can be
an ellipse if the known error bound is anisotropic. Similarly,
one can use an envelope of a general Lipschitz continuous
vector field g, simply by ensuring that F(∆) contains any
vector attained by g in ∆, to obtain a Morse decomposition
valid for g. The envelope can be enlarged to compute stable
Morse decompositions for g.
3.2. Relationship to PC vector fields
CVPC vector fields generalize PC vector fields introduced
in [SZ11]: a PC vector field can be viewed as a CVPC vector
field with F(∆) consisting of one vector for any triangle ∆.
Overall, the algorithm of this paper is based on the same
scheme as the algorithm for PC vector field analysis.
A CVPC vector field defines a family of PC vector fields,
consisting of all feasible vector fields. Hence in this paper
we describe what can possibly happen for a feasible vector
field rather than simply focus on trajectories of a specific PC
vector field as [SZ11] does. This affects choices related to
avoiding singularities. Most importantly, one can simulate
an infinitesimal perturbation for a single PC vector field so
that stationary points are possible only at the mesh vertices.
This is convenient since it simplifies the computation of the
fixed point index of a Morse set, which is an important component of the Morse set classification scheme. In the CVPC
case, such perturbation is no longer possible (e.g. if F(∆)
contains the zero vector in the interior for some triangle ∆)
and one has to deal with critical edges or critical triangles
consisting of stationary points.
4. Feasible segments
A trajectory of a PC vector field is a piecewise linear curve
with knots at mesh edges or vertices. The linear segments are
simple trajectory segments, that move with constant velocity
and stay inside the same triangle. In this section, we characterize feasible segments, i.e. simple trajectory segments of
feasible vector fields, which will play the key role in construction of super-transition graphs.
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

4.1. Feasible segments in triangles
Clearly, any path moving with constant velocity u ∈ F(∆)
through a triangle ∆ is a feasible segment. In what follows,
we call triangles ∆ such that F(∆) contains the zero vector critical triangles. In order to avoid degenerate configurations, we simulate an infinitesimal enlargement of F(∆) for
any triangle ∆. In particular, this means that if ∆ is a critical
triangle, then F(∆) contains infinitesimal vectors pointing in
every direction parallel to ∆.
4.2. Feasible segments along edges
Consider an edge e of M. Let ∆0 and ∆1 be triangles incident to e. We say that e is imploding if there exist vectors
v0 ∈ F(∆0 ) and v1 ∈ F(∆1 ) pointing toward e, exploding if
there exist vectors v0 ∈ F(∆0 ) and v1 ∈ F(∆1 ) pointing away
from e and crossing if there exist vectors v0 ∈ F(∆0 ) and
v1 ∈ F(∆1 ) such that one of them points toward e and the
other – away from e. To be consistent with the enlargement
simulation (Section 4.1), we treat vectors in F(∆i ) parallel
to e as pointing both toward and away from e.
In contrast to the PC vector field case, an edge may not
be of a ‘pure’ type for a CVPC vector field. For example,
it can be exploding and crossing at the same time. An edge
that is both imploding and exploding is also a crossing edge.
Edges can be classified as of type C (only crossing), E (only
exploding), I (only imploding) or of one of the three possible
mixed types CE, CI and CEI (Figure 1). Feasible segments
can move along an exploding or imploding edge. Below we
focus on describing the set of possible velocity vectors of
such segments.
For a PC vector field f , the velocity vector of trajectories that move along an exploding or imploding edge e with
incident triangles ∆0 and ∆1 is the perpendicular projection
of a weighted average w0 f (∆0 ) + w1 f (∆1 ) onto the 1D linear space E parallel to e. The weight wi is proportional to
the magnitude of the perpendicular projection of f (∆1−i )
to the plane perpendicular to e. If ∆0 and ∆1 are co-planar,
the weighted average coincides with the intersection of the
line connecting v0 and v1 with E. In the CVPC setting, the
set F(e) of velocity vectors of feasible segments moving
along e can be determined as follows. First, make the two
triangles incident upon e coplanar by rotating one of them
(together the set of vectors assigned to it by F) around e.

854

A. Szymczak / Stable Morse Decompositions

a

tions from which feasible segments can arrive at v. Unstable
directions are directions in which feasible segments leave v.

a

e
E

E

Figure 2: Computing F(e). Left: two triangles with their assigned set of vectors. Center: the two set of vectors are translated so that they are anchored at the same point. Right: the
convex hull of F(∆0 ) ∪ F(∆1 ). F(e) consists of vectors starting at a and ending in the intersection of the hull and E.

For a triangle ∆ (respectively, edge e) incident upon v, let
O∆ (Oe ) consist of all nonzero vectors pointing from v into
¯
¯
∆ (e). Let F(∆)
and F(e)
consist of all positive multiples of
¯
vectors in F(∆) and F(e) (respectively). We consider F(e)
empty if e is a crossing edge. The unstable directions are all
vectors in unstable bundles, i.e. sets:
¯
for any triangle ∆ incident to v, and
• U∆ := O∆ ∩ F(∆)
¯
for any edge e incident to v.
• Ue := Oe ∩ F(e)
Similarly, stable directions are vectors in stable bundles:
¯
for any triangle ∆ incident to v, and
• S∆ := O∆ ∩ (−F(∆))
¯
for any edge e incident to v,
• Se := Oe ∩ (−F(e))

v
Figure 3: An example of a triangle ∆ with nonempty stable
and unstable bundles. The clipped bundles S∆ and U∆ are
shown in green and red (respectively). For any such triangle, each of the bundles contains vectors running along an
edge of ∆ incident to v. Note that the sector between the two
bundles is always hyperbolic (in the sector, the flow vector
field points from the stable to the unstable bundle).

The rotation preserves the weights wi . Then, F(e) is equal to
E ∩ Hull(F(∆0 ) ∪ F(∆1 )). This is illustrated in Figure 2.

where for a set of vectors A, −A = {−v|v ∈ A}. Note that
since no triangle or edge incident upon v is critical, the sets
of stable and unstable directions are disjoint. In the generic
case, nonempty bundles U∆ and S∆ are angles of vectors with
apex at v and nonempty bundles Ue and Se are rays originating from v. Note that both U∆ and S∆ may be nonempty for
some triangles ∆ (Figure 3).
We first sort all nonempty bundles (both stable and unstable) counterclockwise around v. This boils down to scanning v’s incident triangles and edges in the counterclockwise
order using the mesh adjacency information and outputting
bundles defined by them. Of course, for triangles ∆ with
nonempty U∆ and S∆ , the two bundles need to be output in
the right order.

We conclude that a linear path moving along any exploding or imploding edge e (of type E,I,CE,CI or CEI) with
constant velocity equal to any vector in F(e) is a feasible
segment. We allow F(e) to contain the zero vector in this
paper. If this is the case, F(e) contains infinitesimal vectors
pointing in both directions along e (because of enlargement
simulation described in Section 4.1). An edge e such that
F(e) contains the zero vector is called a critical edge.

Next, we scan the bundles in the counterclockwise order
around v. A family of consecutive unstable (stable) bundles defines an unstable (stable) parabolic sector. Sectors
between an unstable bundle and a stable bundle are either
hyperbolic or elliptic. In an elliptic sector, the vector field
points from the unstable bundle to the stable bundle (as seen
from v). In a hyperbolic sector, it points from the stable bundle to the unstable bundle. One can use any vector in F(x) at
an arbitrary point x in such a sector to determine its type.

4.3. Critical vertices

Examples illustrating sector analysis are shown in Figures
4 and 5. A vertex v is critical if it has an elliptic sector, its
number of stable parabolic sectors is other than one, or its
number of unstable parabolic sectors is other than one.

For a mesh vertex v, the key question is if v is critical, i.e. if it
is stationary for some feasible vector field. If this is the case,
constant paths staying at v all the time are feasible segments.
Vertices of a critical triangle or endpoints of a critical edge
are critical. However, other mesh vertices may also be critical. In what follows, we focus on vertices with no incident
critical triangles or edges. Recall that for a PC vector field,
any mesh vertex which has an elliptic sector or whose number of attracting or repelling parabolic sectors is different
from one is stationary. In the CVPC setting, one can also use
sector analysis to determine critical vertices.
Sector analysis of a vertex v is based on the ideas of
[TSH00b, TSH00a]. First, we determine the stable and unstable directions of v. Intuitively, stable directions are direc-

It is not hard to see that if the procedure in this section
decides that a vertex v is not critical (e.g. as shown in Figure 4), then v is not stationary for any feasible vector field.
To see why, take a feasible PC vector field f . Notice that
unstable (stable) directions of f are contained in the set of
unstable (stable) directions of F. Hence the same is true for
stable and unstable parabolic sectors. Notice that f has to
have at least one unstable and one stable direction since, being constrained by F, it points from the F’s stable sector to
its unstable sector between the two sectors. We conclude that
f has two parabolic sectors, one stable and one unstable, and
the sectors between them have to be hyperbolic.
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

855

A. Szymczak / Stable Morse Decompositions
c

c

h

e

a

Figure 4: Sector analysis of a vertex. Left: F(∆) for each
incident triangle and flow direction along any incident imploding or exploding edge (black arrows pointing along the
edge). Direction of the flow crossing the two crossing edges
is indicated by a thin black arrow. Center: All stable and
unstable directions. Unstable ones point into the red areas
and along the red edge. There is one stable direction along
the green edge. Right: Sectors: stable parabolic (green – this
one consists of only one direction), unstable parabolic (red)
and two hyperbolic (blue).

c

a

5. Super-transition graph
In this section, we describe the super-transition graph, that
is used to compute a Morse decomposition valid for all feasible vector fields. A super-transition graph is similar to a
transition graph representing a PC vector field, introduced
in [SZ11]. The key difference is that transition graph represents trajectories of a single PC vector field, while supertransition graph represents trajectories of all feasible vector
fields. Nodes of a super-transition graph G are in one-toone correspondence with n-sets. An n-set is a mesh vertex
or an edge piece. Edge pieces are obtained by subdividing
the mesh edges into shorter line segments of positive length.
Our objective is to build G so that any two n-sets connected
by a feasible segment are also connected by an arc in G. To
construct G, we first build its coarse version and then apply
a series of refinement operations.
5.1. Coarse graph
The coarse graph is based on edge pieces identical to the
mesh edges. Thus, an n-set is in this case a mesh edge or a
mesh vertex. The graph is constructed as follows.
For each critical vertex v we add the type S arc v → v to
the graph. For each exploding or imploding edge e = uw
¯ we
add the following type E arcs (and record e with them as
their associated mesh edge): (i) u → e and e → w if F(e)
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

a

h

go

b

h

e

b

g1

c

g
c

a

go

h1

c

g1

b

h1

e

e
ho

a

Figure 5: Sector analysis of a vertex. The CVPC vector field
and stable and unstable direction are shown as in Figure 4.
In the right image, the elliptic sector is shown in brown.

b

g

e

h

e

go

g1

ho
b

a

go

g1

b

Figure 6: Top row: arcs of the coarse super-transition graph
generated for a triangle ∆ = ∆abc with edges e, g, h. e and
g are crossing edges and h is a CEI edge with the flow direction from b to a. No vertex of ∆ is critical. The coarse
transition graph arcs associated with ∆abc and its edges are
shown on the right (type T - in blue, type E - in green). Examples of refinement operations are shown in the lower two
rows. First, the edge g is split into two edge pieces (middle).
Note that g0 is not connected to h in the refined graph since
there is no straight line path from g0 to h following a direction belonging to F(∆). Then, h is split into two pieces
(bottom). The arc h0 → h1 belongs to the graph since F(h)
contains a vector pointing from b to c.

contains a nonnegative multiple of uw, and (ii) w → e and
e → u if F(e) contains a nonnegative multiple of wu. Note
that the conditions in (i) and (ii) are satisfied simultaneously
for critical edges.
For any two edges e and e′ of a non-critical triangle ∆,
we add the arc e → e′ if F(∆) contains a vector pointing
away from e and toward e′ . For any edge e and its opposite
vertex v of ∆, we add the arc v → e if there is a vector in
F(∆) pointing away from both edges incident upon v and toward e. Similarly, we add arc e → v if there is a vector in
F(∆) pointing away from e but toward both edges incident
upon v. For all arcs described in this paragraph, we record
the triangle ∆ and call them type T arcs. Note that if ∆ is critical, consecutive n-sets corresponding to vertices and edges
of ∆ are connected by type E arcs running in both directions
and therefore they all belong to the same strongly connected
component of the graph (Section 6). Hence type T arcs for
such triangles are redundant.
Finally, we remove isolated nodes from the graph. These
nodes correspond to the CVPC counterpart of spiral sinks,

856

A. Szymczak / Stable Morse Decompositions

a
d

b
c

v

e

Figure 7: Sets represented by type T arcs a → d (blue), b →
v (magenta) and c → e (green).

sources or centers. An example illustrating the arcs of the
coarse transition graph is shown in Figure 6 (top row).
5.2. Refinement
A refinement operation replaces a node in G corresponding
to an edge piece h with two nodes, corresponding to edge
pieces h0 and h1 obtained by splitting h into two shorter line
segments. Arcs from and into hi , i ∈ {0, 1} are constructed
so that any two n-sets connected by a feasible segment are
connected by an arc (Figure 6):
• For any arc g → h (or h → g) of type E, we add arc g → hi
(respectively, hi → g), where i is such that g ∩ hi = ∅,
• We add arc from hi to h1−i if e is imploding or exploding and there is a consistent flow direction vector in F(e),
where e is the edge containing h,
• For any type T arc g → h (or h → g) with associated triangle ∆ we add the arc g → hi (hi → g) if there exist points
p ∈ g and q ∈ hi such that the vector pq is a positive (respectively, negative) multiple of a vector in F(∆).
A super-transition graph is adaptively refined by splitting
every edge piece in a strongly connected component into
two pieces of equal length as described in [SZ11]. By iterating this process, one can obtain finer Morse decompositions,
with smaller Morse sets.
6. Morse sets
Morse sets valid for any feasible PC vector field are represented by strongly connected components of a supertransition graph G. To visualize them, we use their much easier to compute supersets (called pseudo-Morse sets). Note
that the definition of pseudo-Morse sets given in this section is tailored for the CVPC setting and somewhat different
from the one used in [SZ11]. In particular, critical triangles
need to be treated in a special manner in this paper since they
are not represented by type-T arcs. For a component A, the
corresponding pseudo-Morse set is the union of:
- N-sets corresponding to nodes in A,
- Sets represented by type T arcs connecting nodes in A. The
set represented by a type T arc h → g is the convex hull of
the union of h and g. Note that h and g belong to the same
triangle and both of them are edge pieces or one of them
is an edge piece and the other – a vertex. The convex hull
is either a triangle or a quadrilateral (Figure 7).

Dataset
Gas engine
Diesel Engine
Cooling Jacket
Hurricane Isabel slice

Triangles
26,298
221,574
227,868
498,002

Vertices
13,151
110,789
113,868
250,000

Table 1: Test dataset sizes

- Critical triangles ∆ incident to A, i.e. such that some edge
piece contained in the boundary ∂∆ of ∆ belongs to A.
Note that in this case, all edge pieces in ∂∆ and all vertices
of ∆ have to belong to A.
The definition of a Morse set in [SZ11] can be used almost
verbatim to define a Morse decomposition correct for any
feasible vector field f using strongly connected components
of super-transition graph. A discussion of necessary changes
is included in Appendix B in the supplementary material.
To classify the Morse sets, we compute their fixed point
indices and categorize them as attracting, repelling or neither attracting nor repelling. We say that a Morse set is of
type (i, −), (i, +) or (i, 0) if its index is i and it is attracting,
repelling or neither (respectively). A Morse set corresponding to a strongly connected component A of G is attracting if
there is no arc in G from a node in A to a node outside A. It
is repelling if there is no arc in G from a node outside A to a
node in A.
In order to determine the fixed point index of Morse sets,
we pick any feasible PC vector field f and compute the fixed
point index of each Morse set with respect to f using the
method of [SZ11]. The result is valid for any feasible vector PC field. To see why, take any feasible PC vector field
f1 . Define the PC vector field fh by fh (∆) = (1 − h) f (∆) +
h f1 (∆) for any h ∈ [0, 1]. Since the values of a CVPC vector field are convex, fh is feasible for any h ∈ [0, 1]. Since A
defines a Morse set for any fh , the fixed point index of that
Morse set is the same for f0 = f and f1 by the homotopy invariance property of the fixed point index [Gor06]. The only
caveat is that this argument requires extending the admissibility proof of [SZ11] to degenerate cases (i.e. f (∆) or f (e)
being the zero vector for some triangles or edges) for completeness. Admissibility is a technical condition that ensures
that the fixed point index applies. We include a discussion of
this issue in Appendix A in the supplementary material.
7. Experimental results
We applied our method to a number of 2D and 2.5D vector fields, mostly derived from fluid simulations [LGD∗ 05,
LWSH04, WBKS04]. Sizes of datasets used in this section
are shown in Table 1. Throughout this section, we show
the best results we could get on a machine with 8GB of
RAM without using its swap space. More RAM could enable
one to handle larger super-transition graphs and therefore
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

857

A. Szymczak / Stable Morse Decompositions

strengthen some of the results by making the output Morse
decompositions finer. For the tested datasets, the algorithm
required between 118 and 369 seconds to execute on a single core of an Intel Q6600 processor. The super-transition
graphs used to compute Morse decompositions shown in this
sections had between 0.5 and 3 million nodes and between
28 and 86 million arcs. The maximum memory usage was
6.2 GB. More detailed runtime statistics is provided in Appendix D in the supplementary material.
Figures included in this section show Morse sets colorcoded by type. Trivial Morse sets of type (0, 0) are shown
in grey. Repelling Morse sets of types (1, +) and (0, +) are
shown in red (the ones of the former type slightly brighter).
Similarly, attracting Morse sets of types (1, −) and (0, −)
are shown in green (slighly brighter for type (1, −)). Sets
of type (−1, 0), similar to saddles, are shown in blue. In
all examples discussed below, no Morse sets of other types
were found. Our code produces a warning if a set of type
(0, +) or (0, −) containing a stationary point is found. This
is useful since any Morse set of these types that does not
contain a stationary point has to contain a periodic orbit by
the Poincaré-Bendixson theory [KH95], if it can be flattened
onto the plane.
7.1. Stable Morse decompositions
By an N% perturbation of a PC vector field f we mean a PC
N
A f for any trianvector field fˆ such that | f (∆) − fˆ(∆)| ≤ 100
gle ∆, where A f is the average magnitude of f over all triangles. Morse decompositions valid for all N% perturbations
of f can be obtained by applying our algorithm to the CVPC
vector field F described in the first paragraph of Section 3.1,
N
A f . Figure 8 discusses interpretation of a
with E(∆) = 100
typical stable Morse decompositions.
Figure 9 shows result of the experiment whose goal was
to estimate the maximum perturbation that the large periodic
orbit in the gas engine dataset can sustain. A similar experiment for the diesel engine dataset is shown in Figure 10.
Figures 11 and 12 show results for the cooling jacket
dataset, valid for different perturbation magnitudes. As the
perturbation amount is increased, the Morse sets increase
in size and merge. The number of nontrivial Morse sets decreases. This decrease is partly due to fewer subdivision operations that our algorithm is able to perform for larger perturbations due to the memory usage constraint.
7.2. Envelopes
First, we briefly explain how CVPC vector fields can be used
to analyze Lipschitz continuous vector fields. The technique
outlined in this section can potentially be used for rigorous
analysis of such vector fields, yielding results that are not
influenced by the numerical integration scheme. We stress
that the results presented here are not strictly rigorous, since
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

(d)
(e)

(c)
(b)
(a)

Figure 8: Morse decomposition for the gas engine dataset,
valid for all 4% perturbations. (a): Morse set of type (0, +)
that does not contain a stationary point; any feasible vector
field contains a periodic orbit running around the ring. A repelling periodic orbit can be thought of as a simplified model
of all features in the ring. (b): Morse set of type (1, −). Any
feasible vector field contains a fixed point in this area. A sink
is a valid (but, possibly, simplified) model of features within
it for any feasible vector field. (c): Morse set of type (1, +);
similar to (b), but a source is a valid simplified model. (d):
Trivial Morse sets; They may contain topological features
for some feasible vector fields (in fact, they do), but all of
them cancel each other. The algorithm was not able to find
any common nontrivial feature in this area. (e): A Morse set
of type (−1, 0). It must contain a stationary point and a saddle is a simplified model for features in this area.

they do not include analysis of numerical errors that may
influence the results of CVPC based analysis.
Let g be a Lipschitz continuous vector field such that
g(∆) ⊂ F(∆) for every triangle ∆. Then, the super-transition
graph G for F represents g, in the following sense. Let σ be
a trajectory of g. For any pair of consecutive n-sets a and b
visited by g, there exists a path from a to b in G.
To see why, take a trajectory segment σ : [t1 ,t2 ] → ∆ of g
contained in a triangle ∆ starting and ending on its boundary
(i.e. with σ(t1 ), σ(t2 ) ∈ ∂∆). Notice that
1
σ(t2 ) − σ(t1 )
=
t2 − t 1
t2 − t 1

Z t2

˙
σ(s)ds.

t1

The right hand side of the above equation is the average velocity of σ. Since its velocity at any time between t1 and
t2 belongs to F(∆) and F(∆) is convex, we conclude that
σ(t2 )−σ(t1 )
∈ F(∆). But then, the vector connecting endt2 −t1
points of σ is a positive multiple of a vector in F(∆). We
conclude that if σ connects two n-sets, then the same n-sets
are connected by a path in the transition graph of F (Figure
13). Therefore, one may expect that the strongly connected
components of G define Morse sets of g. This is indeed the
case, by the argument outlined in Appendix C in the supple-

858

A. Szymczak / Stable Morse Decompositions

Figure 11: The cooling jacket dataset. Results valid for 0.1%, 0.5%, 1%, 2%, 5% perturbations obtained using 10, 8, 7, 6 and
5 refinement operations. The number of nontrivial Morse sets is 557, 497, 448, 393 and 283, respectively.

Figure 12: A zoomed in view on small features in the cooling jacket dataset. Results valid for 0.1%, 0.25%, 0.5%, 1% and
2.5% perturbations and 10, 9, 8, 7 and 6 refinement iterations (respectively). Many of the blue Morse sets indicate possible
homoclinic orbits at saddles.

(b)

(a)
Figure 9: Results for the gas engine dataset, valid for all
10% and 11% perturbations (based on 7 refinement iterations of the super-transition graph). (a): A large periodic orbit is guaranteed to exist for any vector field within 10% of
the input. However, the algorithm failed to provide the same
guarantee for 11% perturbation. Note that the Morse set (a)
merges with the sink-like one it encloses to form one similar
to a source: this can be viewed as a counterpart of the Hopf
bifurcation [HK91] for Morse sets. The sink-like and saddlelike sets (b) cancel to produce a trivial Morse set in the right
image. The large blue Morse sets contain saddles with possible homoclinic orbits that may exist for some feasible vector
fields (note that homoclinic orbits are structurally unstable
so they do not influence the Morse set type).

Figure 10: Estimate of stability of the large periodic orbit
in the diesel engine dataset. Left: 2.5% perturbation, right:
2.6% perturbation. In both cases, 8 refinement iterations
were used.
b

a

c

Figure 13: Two trajectory segments of g, starting and ending
on the boundary of a triangle ∆, are shown in blue. For the
trajectory on the right, n-sets containing the starting point
and the endpoint are connected by an arc in G, since the
green vector connecting the trajectory’s endpoints is a positive multiple of a vector in F(∆). For the trajectory on the
left, they may not be connected directly, but they are certainly
connected by a path of edge pieces contained in ab.
¯

c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

A. Szymczak / Stable Morse Decompositions

859

the vector value 0.5(g(u) + g(v)) to that vertex. Results for
envelopes of two other datasets are shown in Figure 15.
8. Conclusion and future work

Figure 14: Results for envelopes of the gas engine dataset.
The left image shows the Morse sets obtained for the dataset
of the original resolution. In this case, the algorithm fails to
find a Morse set corresponding to the large periodic orbit.
However, that Morse set does show up for the subdivided
versions of the same dataset (the image shows results for 1,
2 and 3 subdivision iterations). 8 refinement iterations were
applied to obtain the first three images and 7 – to obtain the
image on the right (because of our limits on memory usage:
note that three subdivisions increase the size of the mesh to
over 1.6 million triangles). It is interesting to note that the
Morse sets in the right image appear smaller despite using
a coarser graph. This is because they are computed using a
CVPC vector field closer to the original PL vector field.

Figure 15: Morse sets of envelopes of the diesel engine and
a slice of the hurricane Isabel datasets. In both cases, Morse
sets that capture periodic orbits of the PL vector field have
been found. Mesh subdivision was not necessary.

mentary material. We note that the Morse set MA of g defined by a strongly connected component A does not have to
be contained in the respective pseudo-Morse set, but it has to
be close: all intersections of MA with the mesh edges belong
to an n-set in A.
In Figure 14, we show the results for the gas engine
dataset. Note that the dataset contains a planar patch containing a large periodic orbit. Applying our algorithm directly to
the envelope (defined in Section 3.1) of the original PL vector field yields the image on the left: the algorithm fails to
find a Morse set that captures a periodic orbit of the PL vector field. However, it does succeed to do so for finer versions
of the dataset. In this case, we use a 1 : 4 subdivision that
preserves the mesh geometry and the vector field, i.e. we put
a new vertex at the midpoint of any edge e = uv
¯ and assign
c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

We presented a method to compute a Morse decomposition that is coarse enough to be correct for all PC vector
fields within a prescribed bound from the input one. Our
framework can be applied to estimate stability of Morse sets
with respect to perturbation or to analyze general Lipschitzcontinuous vector fields. Potentially, it could be used to compute topological descriptors of vector fields that are known
only up to an error, if the error is known. For simulated vector fields, an error bound could be derived by analyzing approximation errors of the numerical scheme and numerical
errors. In the case of vector fields obtained based on physical measurements, errors are associated with the measurement method and devices.
There are a number of research opportunities that can
arise from our work. One of them could be to provide an
efficient algorithm to compute the importance of all Morse
sets in terms of their ability to tolerate perturbation of the
vector field. This can be viewed as a natural counterpart of
persistence [ELZ02, BEK10] in the vector field setting.
We are also interested in extending the framework to
higher dimensions, particularly to the 3D case. We expect
that the main challenge will be the large size of the supertransition graph. Even in the 2.5D setting discussed in this
paper, the size of the graph tends to be large. Thus, we are
planning to explore techniques for reducing the size of the
super-transition graph while maintaining its key properties.
It would also be interesting to find a scheme that would
lead to better results by splitting edge pieces into parts that
are not necessarily of equal length when refining the supertransition graph.
Finally, providing a simple and elegant theoretical analysis of CVPC vector fields would be interesting. This could
probably be done by defining an admissible multivalued
flow of a CVPC vector field and using inheritable properties [Mro90, Mro96] such as the Conley index to provide a
unifying proof of key properties of PC vector fields, CVPC
vector fields and envelopes. An obvious drawback of our approach is that the result is to some extent influenced by the
discretization provided by the super-transition graph. We do
not know for sure what the adaptive refinement algorithm
converges to, although we suppose the limit is the chain recurrent set of the flow induced by a CVPC vector field. A
proof confirming that conjecture would put our method on a
more solid theoretical footing.
9. Acknowledgements
The author is grateful to Nicholas Brunhart-Lupo, Luming
Liang and Janeen Neri for proofreading the manuscript and
useful comments.

860

A. Szymczak / Stable Morse Decompositions

References
[BEK10] B ENDICH P., E DELSBRUNNER H., K ERBER M.: Computing robustness and persistence for images. IEEE Transactions
on Visualization and Computer Graphics 16 (2010), 1251–1260.
[CML∗ 07]

C HEN G., M ISCHAIKOW K., L ARAMEE R. S., P I P., Z HANG E.: Vector field editing and periodic orbit
extraction using Morse decomposition. IEEE Transactions on
Visualization and Computer Graphics 13, 4 (2007), 769–785.
LARCZYK

[CMLZ08] C HEN G., M ISCHAIKOW K., L ARAMEE R. S.,
Z HANG E.: Efficient Morse decompositions of vector fields.
IEEE Transactions on Visualization and Computer Graphics 14,
4 (Jul./Aug. 2008), 848–862.
[ELZ02] E DELSBRUNNER H., L ETSCHER D., Z OMORODIAN
A.: Topological persistence and simplification. Discrete Comput. Geom. 28 (2002), 511–533.
[For98] F ORMAN R.: Combinatorial vector fields and dynamical
systems. Mathematische Zeitschrift 228 (1998), 629–681.
[Gor06] G ORNIEWICZ L.: Topological Fixed Point Theory of
Multivalued Mappings, 2nd ed., vol. 4 of Topological Fixed Point
Theory and Its Applications. Springer, 2006.

[OGHT10] OTTO M., G ERMER T., H EGE H.-C., T HEISEL H.:
Uncertain 2D vector field topology. Computer Graphics Forum
29, 2 (2010), 347–356.
[PPF∗ 10] P OBITZER A., P EIKERT R., F UCHS R., S CHINDLER
B., K UHN A., T HEISEL H., M ATKOVIC K., H AUSER H.: On
the way towards topology-based visualization of unsteady flow the state of the art. In EuroGraphics 2010 State of the Art Reports
(STARs) (2010), pp. 137–154.
[RLH10] R EININGHAUS J., L OWEN C., H OTZ I.: Fast combinatorial vector field topology. IEEE Transactions on Visualization
and Computer Graphics 99, PrePrints (2010).
[SZ11] S ZYMCZAK A., Z HANG E.: Robust Morse decompositions of piecewise constant vector fields. IEEE Transactions on
Visualization and Computer Graphics (2011), to appear.
[TSH00a] T RICOCHE X., S CHEUERMANN G., H AGEN H.:
Higher order singularities in piecewise linear vector fields. In
The Mathematics of Surfaces IX (2000), Springer, pp. 99–113.
[TSH00b] T RICOCHE X., S CHEUERMANN G., H AGEN H.: A
topology simplification method for 2D vector fields. In Proceedings IEEE Visualization 2000 (2000), pp. 359–366.

[HH89] H ELMAN J. L., H ESSELINK L.: Representation and display of vector field topology in fluid flow data sets. IEEE Computer 22, 8 (August 1989), 27–36.

[TW04] T HEISEL H., W EINKAUF T.: Grid-independent detection of closed stream lines in 2D vector fields. In Proceedings
of the Conference on Vision, Modeling and Visualization 2004
(VMV 04) (2004), pp. 421–428.

[HH91] H ELMAN J. L., H ESSELINK L.: Visualizing vector field
topology in fluid flows. IEEE Computer Graphics and Applications 11, 3 (May 1991), 36–46.

[WBKS04] WANG W., B RUYERE C., K UO B., S CHEITLIN
T.:
IEEE Visualization 2004 contest: Data set.
http://vis.computer.org/vis2004contest/data.html, 2004.

[HK91] H ALE J. K., KOCAK H.: Dynamics and Bifurcations,
vol. 3 of Texts in Applied Mathematics. Springer-Verlag, 1991.

[WS01] W ISCHGOLL T., S CHEUERMANN G.: Detection and visualization of closed streamlines in planar flows. IEEE Transactions on Visualization and Computer Graphics 7, 2 (2001), 165–
172.

[KH95] K ATOK A., H ASSELBLATT B.: Introduction to the Modern Theory of Dynamical Systems, vol. 54 of Encyclopedia of
Mathematics and Its Applications. Cambridge University Press,
1995.
[LGD∗ 05] L ARAMEE R. S., G ARTH C., D OLEISCH H.,
S CHNEIDER J., H AUSER H., H AGEN H.: Visual analysis and
exploration of fluid flow in a cooling jacket. Proc. IEEE Visualization 2005 (2005), 623–630.
[LHD∗ 04] L ARAMEE R. S., H AUSER H., D OLEISCH H.,
V ROLIJK B., P OST F. H., W EISKOPF D.: The state of the art
in flow visualization: Dense and texture-based techniques. Computer Graphics Forum 23, 2 (2004), 203–221.
[LHZP07] L ARAMEE R. S., H AUSER H., Z HAO L., P OST
F. H.: Topology-based flow visualization, the state of the art.
In Topology-Based Methods in Visualization (Proceedings of
TopoInVis 2005) (2007), Hauser H., Hagen H., Theisel H., (Eds.),
Springer-Verlag, pp. 1–19.
[LWSH04] L ARAMEE R. S., W EISKOPF D., S CHNEIDER J.,
H AUSER H.: Investigating swirl and tumble flow with a comparison of visualization techniques. Proc. IEEE Visualization 2004
(2004), 51–58.
[MLP∗ 09] M C L OUGHLIN T., L ARAMEE R. S., P EIKERT R.,
P OST F. H., C HEN M.: Over two decades of integration-based,
geometric flow visualization. In EG 2009 - State of the Art Reports (2009), Pauly M., Greiner G., (Eds.), pp. 73–92.
[Mro90] M ROZEK M.: A cohomological index of Conley type
for multivalued admissible flows. J. Differential Equations 84
(1990), 15–51.
[Mro96] M ROZEK M.: Inheritable properties and computer assisted proofs in dynamics,. Scientific Computing and validated
numerics. Akademie Verlag, Berlin, 1996, pp. 245–253.

c 2011 The Author(s)
Journal compilation c 2011 The Eurographics Association and Blackwell Publishing Ltd.

