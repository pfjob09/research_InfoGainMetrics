DOI: 10.1111/j.1467-8659.2009.01349.x

COMPUTER GRAPHICS

forum

Volume 28 (2009), number 6 pp. 1572–1585

√
Biorthogonal Wavelets Based on Interpolatory 2 Subdivision
H. Wang and W. Ma
Department of Manufacturing Engineering and Engineering Management, City University of Hong Kong, Hong Kong, China
{hwwang, mewma}@cityu.edu.hk

Abstract
√
This article presents an efficient construction of biorthogonal wavelets built upon an interpolatory 2 subdivision
for quadrilateral meshes. The interpolatory subdivision scheme is first turned into a scheme for reversible primitive
wavelet synthesis. Some desired properties are then incorporated in the primitive wavelet using the lifting scheme.
The analysis and synthesis algorithms of the resulting √
new wavelet are finally obtained as local and in-place
with added levels of resolution. Numerical
lifting operations. The wavelet inherits the advantage of 2 refinement
√
experiments show that the lifted wavelet built upon interpolatory 2 subdivision has sufficient stability and better
performance in dealing with closed or open semi-regular quadrilateral meshes compared with other existing
wavelets for quadrilateral manifold meshes.
√
Keywords: second generation wavelet, lifting scheme, interpolatory 2 subdivision
ACM CCS: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling—Hierarchy and
geometric transformations; G.1.2 [Numerical Analysis]: Approximation—Wavelets and fractals

1. Introduction
The second generation wavelets attract much attention in
recent years due to their effective representation of highly
detailed geometric models of arbitrary topology in multiple
resolutions and accordingly have a wide range of applications, such as progressive transmission, data compression,
level-of-detail control and multiresolution rendering. The
construction of such a wavelet can be performed in a few
major steps. A subdivision scheme is firstly decomposed into
a series of reversible local operations and a simple wavelet is
derived accordingly. The simple wavelet is further improved
to possess some desired properties, such as stability, orthogonalization and vanishing moment, using the lifting scheme
[SS95, Swe96, Swe97]. The lifting steps can be conveniently
converted into local in-place operations in wavelet synthesis
and analysis if they are locally conducted. As a result, the
reconstruction and decomposition algorithms of the resulting
wavelet are composed of only local and in-place lifting operations and it is not necessary to allocate auxiliary memory
or solve a global system of linear equations. The fast wavelet
transform based on the lifting scheme is usually very simple
and can be performed in linear time.
c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and
Blackwell Publishing Ltd. Published by Blackwell Publishing,
9600 Garsington Road, Oxford OX4 2DQ, UK and 350 Main
Street, Malden, MA 02148, USA.

Due to the simplicity of triangular meshes, it is usually not
difficult to convert subdivision rules of a subdivision scheme
for triangular meshes into reversible local operations [Ber04,
LQS04, WQS07, Loo87, Kob00]. However, the decomposition of a subdivision scheme for quadrilateral meshes or
general polyhedral meshes is usually difficult and is sometimes not possible, even for the simplest subdivision scheme
[PR97]. In order to design a lifted wavelet based on the wellknown Catmull–Clark subdivision [CC78], Bertram et al.
modified the subdivision rules [BDHJ00, BDHJ04], while
Wang et al. made much effort later for direct decomposition [WQT06]. √
Recently, Wang et al. had to use a variant of
approximatory 2 subdivisions [VZ01, LMB04b] in order
to construct the corresponding wavelet [WTQ07] because
the original subdivision rules cannot be decomposed into
a series of reversible local operations. A complex wavelet
construction was also proposed for the quad/triangle subdivision, which supports hybrid quad/triangle meshes [SL03,
WT09].
Compared with approximatory subdivision schemes, interpolatory subdivision schemes are usually more easily dealt
with in wavelets construction. This is because vertices of the

1572

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory

old mesh are always fixed for each step of subdivision. A previous wavelet construction for the interpolatory butterfly subdivision over triangular meshes was presented by Schr¨oder
and Sweldens [SS95, DLG90]. In this paper, we propose
an
√
efficient wavelet construction for the interpolatory 2 subdivision [LMB04a] for quadrilateral
meshes based on the
√
lifting scheme. Interpolatory 2 subdivision only increases
the number of faces by a factor of two for each step of subdivision and thus offers increased number of resolution levels.
In contrast, the number of faces increases much faster for 1to-4 or 1-to-9 subdivision schemes over quadrilateral meshes
[Kob96, LMB05, WQ05, LM06]. The resulting biorthogonal
wavelet inherits the√attractive advantage of having the most
resolution levels of 2 refinement. In addition, as the analysis
and synthesis transforms of the resulting wavelet are composed of only local lifting operations allowing fully in-place
calculations, they can be performed very efficiently in linear
time.
In the rest of this paper, we first provide a brief overview of
other related work in Section 2. Section 3 describes in details
the construction
of the lifted wavelet based on the interpo√
latory 2 subdivision. Boundary treatments of the wavelet
construction are further considered in Section 4. Section 5
shows some experimental results for performance evaluation
of the resulting wavelet. We finally conclude our work in
Section 6.

2. Related Work
√
The 2 splitting operator was firstly used by Kobbelt
[Kob96] to produce quadrilateral meshes from general polyhedral meshes. Velho and Zorin proposed the 4–8 subdivision for a special class
√ of triangle meshes [VZ01], which can
be regarded as a 2 subdivision for quadrilateral meshes.
Li
√ et al. extended the 4–8 subdivision and proposed a
2 subdivision with new rules and improved performance
for general quadrilateral meshes [LMB04b]. Recently, Li
and Ma √presented a unified subdivision framework based
on the 2 splitting operator [LM07], which can reproduce many existing subdivision schemes for quadrilateral
meshes.
The lifting scheme [Swe96, Swe97] can be used to effectively construct second generation wavelets in a general
setting. It will also be used in this paper for √
constructing
the lifted wavelet based on the interpolatory 2 subdivision. A simple wavelet can be improved by several steps
of lifting to satisfy certain desired properties. Similarly,
Carnicer et al. constructed stable multiscale wavelet bases
with favourable properties by characterizing local decompositions of nested spaces in terms of matrix relations [CDP96].
Schr¨oder and Sweldens showed an example of constructing lifting wavelets on the sphere with customized properties [SS95]. Lounsbery et al. proposed a new class of
wavelets based on subdivision surfaces so as to generalize

√
2 Subdivision

1573

wavelet analysis to functions defined on compact surfaces
of arbitrary topological type [LDW97, Lou94]. Based on
hierarchical Delaunay triangulation, a multiresolution analysis on planar and spherical meshes of irregular connectivity were proposed by Bonneau [Bon98]. Valette and Prost
further extended the work of Lounsbery et al. and proposed a wavelet-based multiresolution analysis that can be
applied directly to irregular meshes using a new irregular
subdivision scheme, thus the connectivity of the processed
mesh keeps unchanged in the wavelet transforms [VP04a,
VP04b].
In connection with second generation wavelets, one can
also find various other related work in addition to the wavelets
mentioned in the previous section. For the construction of
second generation wavelets, it usually results in efficient
synthesis and analysis algorithms if the discrete subdivision masks are used instead of the limit smooth surface.
Samavati and Bartels showed how to reverse subdivision
rules and construct wavelets by straightforward matrix observations [SB99]. By using a quadrature mirror construction,
Khodakovsky et al. proposed a Loop wavelet transform
[KSS00, Loo87]. Samavati et al. constructed multiresolution surfaces of arbitrary topology by locally reversing the
Doo subdivision scheme [SMB02]. Wu and Amaratunga
used wavelets based on the butterfly scheme [DLG90,
ZSS96] to process GIS data [WA03]. Using local lifting
operations performed on polyhedral meshes, Bertram et al.
gave a new construction of lifted biorthogonal wavelets
on surfaces of arbitrary two-manifold topology and introduced the generalized B-spline subdivision surface wavelets
[BDHJ00, BDHJ04]. Based on local orthogonalization using discrete inner products, Bertram introduced an effective
biorthogonal wavelet construction for Loop subdivision
[Ber04]. Li et al. proposed another unlifted Loop subdivision wavelets by optimizing free parameters in the
extended subdivisions [LQS04]. Recently, Zhang et al.
presented a biorthogonal wavelet approach based on dual
Doo–Sabin subdivision with the aid of the barycentre of the V-faces corresponding to old vertices [DS78,
ZQQS08].
In literature, one can also find
√ a slow-growing volumetric
subdivision scheme, named n 2 subdivision, for meshes of
any topology and any intrinsic dimension n [Pas02]. Based
on a regular data organization, Linsen et al. proposed a multiresolution method√by effectively combining the topological refinement of n 2 subdivision with downsampling filters based on B-spline wavelets [LPD∗ 04]. In contrast, the
wavelet analysis proposed in our paper is applicable to semiregular quadrilateral meshes, whose base topologies can be
arbitrary. Using a two-dimensional quincunx subsampling
scheme, Van De Ville et al. constructed several families of
quincunx wavelet bases with an adjustable order parameter on regular grid, and the resulting wavelet transforms are
demonstrated to be efficient and useful in image processing
[VBU05, FVU05].

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1574

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory

p3

f′
p0,2

(a)

p0

2 Subdivision

immediately become a set of reversible lifting operations,
i.e.
⎛
⎞
ni −1
3
1
⎝α0 pi +
f = f+
αi,j pi,j ⎠,
4 i=0
(2)
j =0

p1

p2

√

p = p,

p 0,n0 −1

p0,3

(b)

√
Figure 1: Interpolatory 2 subdivision: (a) topological refinement; (b) local structure for computing a face point.
3.
√ Wavelet Construction Based on an Interpolatory
2 Subdivision Scheme
√
The interpolatory 2 subdivision [LMB04a] is shown in
Figure 1(a). At each step of refinement, a new face point is
created for each face in the mesh while all old vertices are
fixed, thus there are two types of vertices in the resulting
mesh, which are called face points and vertex points, respectively. New faces are then generated corresponding to old
edges by connecting
√ each face point to all vertices of the
face. Two steps of 2 subdivision are topologically equivalent to one step of Catmull–Clark subdivision. Corresponding
to a face p 0 p 1 p 2 p 3 , the new face point f is computed as
follows [see Figure 1(b)]:
⎛
⎞
ni −1
3
1
⎝α0 pi +
αi,j pi,j ⎠,
(1)
f =
4 i=0
j =0
where
1
(1 + cos θi,j + sin θi,j + cos θi,j −1 − sin θi,j −1 ),
2ni
1
2j π
α0 = , θi,j =
,
2
ni

αi,j =

which actually define a scheme for primitive wavelet synthesis. If all f are equal to 0, they will not contribute
to the computation of the vertices in the resulting mesh,
thus
√ Equation (2) are reduced to the original interpolatory
2 subdivision. However, as f can be of any values in general, they will contribute to the resulting mesh and thus they
can be regarded as information of local details at each level
added to the limit surface. Equation (2) can be easily reversed
as follows:
p = p,
1
f =f −
4

3

⎛
⎝α0 pi +

i=0

ni −1

⎞
αi,j pi,j ⎠.

(3)

j =0

The forward subdivision (2) and the reverse process (3) form
the synthesis and analysis transforms of the primitive wavelet
and all f can be regarded as wavelet coefficients. For the
primitive wavelet, the basis functions corresponding to face
points f (primitive wavelets ψ) and vertex points p (scaling
functions φ) are defined by the forward process (2). It is
obvious that the forward and the reverse processes are all
local and in-place calculations.
The primitive wavelet obtained above is usually of poor
performance, because the two functional spaces spanned,
respectively, by primitive wavelets and scaling functions
are not orthogonal so that the lower resolution model fitting to a higher level model is not optimal at each step
of wavelet decomposition [SDS96, BDHJ04]. However, the
primitive wavelet can be sequentially improved by using
the lifting scheme so as to possess some desired properties,
such as semi-orthogonality and vanishing moment [Swe96,
Swe97]. Lifting a primitive wavelet can be described as
follows:
ψ =ψ+

ω i φi ,

(4)

p i,j (j = 0, 1, . . . , n i − 1) are the immediate neighbours of p i
counterclockwise with the convention p i,0 ≡ p (i+1)%4 , for any
i, and n i is the valence of p i . Here, % denotes the remainder
and the valence of a vertex is the number of meeting edges
at the vertex position. Besides p 0,0 ≡ p 1 and p 0,1 ≡ p 3 , we
label all other immediate neighbours of p 0 in Figure 1(b) as
an example in order to show the meaning of the symbol p i,j
intuitively. It is known that a polyhedral mesh
√will become a
quadrilateral mesh after at most one step of 2 subdivision,
thus we assume without loss of generality that the initial
mesh is a quadrilateral mesh.

where the coefficients {ω i } can be chosen freely. For second
generation wavelets over complex two-manifold meshes, the
semi-orthogonality, i.e. the orthogonality of wavelets with
scaling functions, is a commonly used design objective in
order to eliminate the data correlation [LDW97, LQS04,
Ber04]. Thus, we usually want to find {ω i } such that the
resulting wavelet will be orthogonal with all scaling functions, i.e.

After introducing an initial value f for each
√ face point
f , the refinement rules of the interpolatory 2 subdivision

Note that the condition (5) will make the wavelet having a vanishing moment at the same time. If one sets all

ψ , φi = 0, ∀i.

(5)

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory

√
2 Subdivision

φ5

fi
1

φ0

φ6

fi,1

φ10
φ3

φ2
φ8

(b) ψ

φ11

ψ

φ7

1

fi,0

(a) φ

φ4

φ1

fi,2

1575

φ9

Figure 3: A primitive wavelet and its surrounding scaling
functions.

Figure 2: Discrete basis functions: (a) scaling function φ;
(b) primitive wavelet ψ.

vertices to be 1 = (1, 1, 1)T , the limit surface must be equal
to 1, this is to say, 1 = 1 · φi . Since ψ , φ i = 0, ∀i, one
can obtain ψ , 1 = 1 · ψ , φi = 0. The resulting equation, ψ , 1 = 0, shows that ψ has at least one vanishing
moment.
To solve the orthogonalization problem (4)–(5), we need to
choose a type of inner product between basis functions. For
subdivision surfaces defined on complex manifold meshes,
it usually results in a great deal computation to compute
the inner products using continuous functions of the limit
surfaces [Sta98]. Here we adopt the discrete inner product
operating upon subdivision masks when computing inner
products of basis functions, since the discrete inner product
has been proved to be efficient in the previous work [Ber04,
SB99, WQT06]. The discrete form of a primitive wavelet ψ
or a scaling function φ can be obtained from one synthesis
step of the primitive wavelet defined in (2). The control mesh
used for producing the basis functions is defined over the xyplane with z-coordinate being 1 for the corresponding centre
vertex for φ or the centre face point for ψ, while keeping
the z-coordinates of all other vertices and face points being
0. The final discrete basis functions are shown in Figure 2,
with
1
1
+
(2 + cos θi,1 + sin θi,1 )
8 8ni
1
(2 + cos θ(i+1)%n,1 + sin θ(i+1)%n,1 ),
+
8n(i+1)%n
1
=
(1 + cos θi,k + sin θi,k + cos θi,k−1 − sin θi,k−1 ),
8ni

fi =

fi,j

k = ni − 1 − j ,
j = 0, 1, . . . , ni − 3,

i = 0, 1, . . . , n − 1,

where n is the valence of the centre vertex (green) and n i is the
valence of the ith immediate neighbour of the centre vertex.

The discrete inner product of any two basis functions is then
defined as the sum of the corresponding multiplications of
their discrete masks.
The orthogonalization problem (4)–(5) is usually simplified as a local scheme in order to reduce the computation complexity, that is to say, only scaling functions near the wavelet
function are introduced in the orthogonalization [LDW97,
Ber04]. There is a tradeoff between a global orthogonalization and the simplicity of resulting wavelet algorithms
when choosing local scaling functions to orthogonalize a
wavelet function. We finally use the 12 local scaling functions
φ 0 ∼ φ 11 , as shown in Figure 3, to orthogonalize the primitive
wavelet ψ corresponding to a face point, and the orthogonalization problem (4)–(5) is then approximated as the following
local scheme:
11

ψ =ψ+

ω i φi ,

s.t. ψ , φi = 0,

i=0

(6)

i = 0, 1, . . . , 11.
The coefficients in (6) can be obtained from the following
linear system of equations:
Gω = −H,

(7)

where
G = (gi,j )12×12 , gi,j = φi , φj , 0 ≤ i, j ≤ 11,
H = (h0 , h1 , . . . , h11 )T , hi = φi , ψ , 0 ≤ i ≤ 11,
ω = (ω0 , ω1 , . . . , ω11 )T .
We will not list the detailed formulae of the inner products in G and H, which are usually very complicated
and can be computed using a computer program. In the
following, we will take only the case of a regular mesh
as an example to show G and H. When all the local
vertices have valence 4, G and H can be derived as

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1576

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory

follows:
⎛
⎞
⎞
⎛
5/16
a, b, c, b, b, c, d, e, e, d, c, b
⎜
⎟
⎟
⎜
⎜ 5/16 ⎟
⎜ b, a, b, c, c, b, b, c, d, e, e, d ⎟
⎜
⎟
⎟
⎜
⎜
⎟
⎟
⎜
⎜ 5/16 ⎟
⎜ c, b, a, b, e, d, c, b, b, c, d, e ⎟
⎜
⎟
⎟
⎜
⎜
⎟
⎟
⎜
⎜ 5/16 ⎟
⎜ b, c, b, a, d, e, e, d, c, b, b, c ⎟
⎜
⎟
⎟
⎜
⎜
⎟
⎟
⎜
⎜ −1/32 ⎟
⎜ b, c, e, d, a, b, e, h, g, f , e, c ⎟
⎜
⎟
⎟
⎜
⎜
⎟
⎟
⎜
⎜ −1/32 ⎟
⎜ c, b, d, e, b, a, c, e, f , g, h, e ⎟
⎜
⎟
⎟
⎜
G=⎜
⎟,H = ⎜
⎟,
⎜ −1/32 ⎟
⎜ d, b, c, e, e, c, a, b, e, h, g, f ⎟
⎜
⎟
⎟
⎜
⎜
⎟
⎟
⎜
⎜ −1/32 ⎟
⎜ e, c, b, d, h, e, b, a, c, e, f , g ⎟
⎜
⎟
⎟
⎜
⎜
⎟
⎟
⎜
⎜ −1/32 ⎟
⎜ e, d, b, c, g, f , e, c, a, b, e, h ⎟
⎜
⎟
⎟
⎜
⎜ −1/32 ⎟
⎜ d, e, c, b, f , g, h, e, b, a, c, e ⎟
⎜
⎟
⎟
⎜
⎜
⎟
⎟
⎜
⎜ −1/32 ⎟
⎜ c, e, d, b, e, h, g, f , e, c, a, b ⎟
⎜
⎟
⎟
⎜
⎝
⎠
⎠
⎝
b, d, e, c, c, e, f , g, h, e, b, a
−1/32
where a = 179/128, b = 81/512, c = 31/512, d = −5/128,
e = −9/512, f = 1/512, g = 1/1024 and h = 1/512, and
the orthogonalization coefficients can be solved:
ωi =

−265, 312
= −0.183028,
1, 449, 569

ωi =

55, 648
= 0.038389,
1, 449, 569

for i = 0, 1, 2, 3;
otherwise.

For general cases of the local structure, the discrete inner
products are computed through an algorithm briefly highlighted as follows. Each point in the local mesh is allocated
an array in advance, e.g. float DisBas[13], to save the discrete
masks of the 13 basis functions at that point. Specifically,
DisBas[i] corresponds to φ i for i = 0, 1, . . . , 11 and ψ for
i = 12, and a set of DisBas[i] at all points describe a discrete
basis function. When computing a discrete wavelet/scaling
function, we first assign DisBas[i] to 1 at the corresponding
face/vertex point and 0 at all other points, and then run one
time of the primitive wavelet synthesis on DisBas[i]. Each
of the 13 discrete basis functions will be obtained thereout
[Ber04]. In the end, the sum of DisBas[i] ∗ DisBas[j] at all
local points is namely the discrete inner product of φ i and
φ j , i.e. φ i , φ j , where there is a convention φ 12 ≡ ψ. After
calculating all inner products, one can solve the orthogonalization coefficients ω immediately from the linear system
(7).
Although the above algorithm is effective to solve the orthogonalization coefficients for local structures of arbitrary
connectivity, i.e. the vertices shown in Figure 3 and their
surrounding vertices can be of any valence, it is time consuming to run the algorithm frequently for various cases
of local structures in real time. If we simplify local structures, we may pre-compute the coefficients for fewer cases
and then use them approximately and directly in wavelet
analysis and synthesis, thus the computation cost will be

√

2 Subdivision

greatly reduced. Similar to [Ber04], our simplification strategy is to neglect the minor influence of outer extraordinary
vertices around the centre face when calculating the inner
products. That is to say, p 0 ∼ p 3 in Figure 3 can be of any
valence while all other vertices are supposed to have valence 4, thus all inner products in G and H depend only
on the valences n 0 , n 1 , n 2 and n 3 . When pre-computing a
set of orthogonalization coefficients, we will create a large
enough control mesh according to p 0 ∼ p 3 of valences
n 0 ∼ n 3 , and then run the above algorithm to obtain the
coefficients.
Note that the valence of a vertex is seldom a big number
for most polyhedral meshes. If we have pre-computed the
orthogonalization coefficients for all cases of small n 0 ∼ n 3 ,
e.g. they are all not greater than 12, then in most cases we
can directly use these pre-computed coefficients in real time.
Only if any one of n 0 ∼ n 3 is accidentally greater than 12,
we then need to run the above algorithm to calculate the
coefficients.
As an exception, if any vertex of p 0 ∼ p 3 has valence
3, e.g. n 0 = 3, the scaling function φ 11 will coincide with
the scaling function φ 4 , as shown in Figure 3. In this case,
we will formally keep the lifting scheme (6) unchanged, but
assume ω 11 to be equal to 0. To adapt the system to this case,
we make a slight modification of the linear equation (7) as
follows. If n i = 3, ∀i ∈{0,1,2,3}, i.e. φ4+2i = φ4+2i3 +1 where
i 3 = (i + 3)%4, we then update all elements in the column
4 + 2i 3 + 1 of G and the row 4 + 2i 3 + 1 of G and H to 0
but g4+2i3 +1,4+2i3 +1 to 1. The resulting linear equation (7) is
then solved and the right coefficients for orthogonalization
are obtained.
Although we use the approximate orthogonalization coefficients with regard to only the valences of p 0 ∼ p 3 , the
later experiments will show that the resulting wavelet still has
a satisfying performance in stability and surface fitting, and
meanwhile the computation is simplified greatly. Because extraordinary vertices are isolated in higher resolution meshes,
a quadrilateral face contains at most one extraordinary point
in most cases. We take the case of an isolated extraordinary
vertex p 0 as an example to show the pre-computed coefficients for orthogonalization in Table 1, where there is an
exception with ω 11 = 0 when n 0 = 3.
After computing the coefficients for orthogonalization
from Equation (7), we obtain the new lifted wavelet
11

ψ =ψ+

ω i φi .

(8)

i=0

Since the introduced orthogonalization is approximated by a
local one, the resulting wavelet is a nearly semi-orthogonal
wavelet based on the discrete inner product. The lifting of the primitive wavelet can be converted into a local lifting operation prior to the lifting operations in (2).
We thus obtain the complete lifted wavelet synthesis as

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory

√
2 Subdivision

1577

Table 1: Pre-computed coefficients for orthogonalization (with an exception: ω 11 = 0 for n 0 = 3)
n0

ω0

ω1 = ω3

ω2

ω 4 = ω 11

ω 5 = ω 10

ω6 = ω9

ω7 = ω8

3
4
5
6
7
8
9
10
11
12

−0.194948
−0.183028
−0.167962
−0.156338
−0.146869
−0.138752
−0.131590
−0.125168
−0.119353
−0.114054

−0.187294
−0.183028
−0.177081
−0.171716
−0.167518
−0.164354
−0.161965
−0.160137
−0.158715
−0.157591

−0.179998
−0.183028
−0.187028
−0.189868
−0.191976
−0.193600
−0.194887
−0.195932
−0.196797
−0.197526

0.070769
0.038389
0.018896
0.008222
0.003050
0.000622
−0.000468
−0.000898
−0.000999
−0.000938

0.033456
0.038389
0.039953
0.040061
0.039585
0.038932
0.038260
0.037627
0.037050
0.036531

0.039126
0.038389
0.038052
0.037848
0.037777
0.037794
0.037863
0.037960
0.038069
0.038184

0.037738
0.038389
0.039126
0.039609
0.039954
0.040219
0.040433
0.040610
0.040761
0.040890

f

follows
pk ← pk + ωk f, ∀f, k = 0, 1, . . . , 11;
⎛
⎞
ni −1
3
1
⎝α0 pi +
αi,j pi,j ⎠, ∀f;
f ← f+
4 i=0
j =0

(a)
(9)

p3

(b)

p ← p, ∀p.
The last operation in (9) is omitted for actual implementation.
By reversing the lifting operations in the wavelet synthesis
(9), one can easily obtain the corresponding wavelet analysis
⎛
⎞
ni −1
3
1
⎝α0 pi +
αi,j pi,j ⎠, ∀f;
f ← f−
4 i=0
(10)
j =0
pk ← pk − ωk f, ∀f, k = 0, 1, . . . , 11.
Because all lifting operations in the wavelet synthesis (9)
and analysis (10) are fully in-place operations related to
only nearby vertices or wavelet coefficients, they can be performed efficiently in linear time. In addition, the resulting
lifted wavelet is obviously biorthogonal and the dual wavelet,
as well as the dual wavelet transforms, can be obtained similar to the wavelet derived from the butterfly scheme [SS95,
Swe96].

p2

p1

p0

p1

p0

f
p2

Figure 4: Two cases of local structures for computing new
boundary vertices.
1
9
9
1
p0 + p1 + p2 − p3 , for case (a);
16
16
16
16
1
6
3
(11)
f = f − p0 + p1 + p2 , for case (b),
8
8
8

f = f−

where p 2 in case (b) is a boundary endpoint at corner positions. Similarly, (11) describes a primitive wavelet synthesis
of boundary curves and f are the corresponding wavelet coefficients. The boundary primitive wavelet can be lifted as
follows:
ψ = ψ + η0 φ0 + η1 φ1 + η2 φ2 + η3 φ3 ,
ψ = ψ + η0 φ0 + η1 φ1 ,

for case (b),

for case (a);
(12)

where ψ and φ i denote boundary primitive wavelets (corresponding to f) and boundary scaling functions (corresponding
to p i ), respectively, and ψ are expected to satisfy

4. Boundary Treatments
For open surfaces, the four-point interpolatory scheme
[DGL87] is used to generate self-governed
boundary curves
√
in connection with interpolatory 2 subdivision [LMB04a].
Boundary curves are also expected to be self-governed in
wavelet analysis and synthesis in order to avoid gaps when
multiple surface segments in a complex model share common
boundary curves. Interior edges and vertices of the control
mesh can also be marked as boundary to produce crease
features conveniently on the surface.
A boundary polygon is refined only at even subdivision
levels while kept unchanged at odd levels [LMB04a]. At
an even level, the formulae for computing new boundary
vertices are given as follows (see Figure 4):

ψ , φk = 0, k = 0, 1, 2, 3,
ψ , φk = 0, k = 0, 1,

for case (a);

for case (b).

(13)

The discrete forms of primitive wavelets ψ and scaling functions φ i are shown in Figure 5. The coefficients in (12) can
be calculated similarly as follows:
η0 = η3 = 0.070575, η1 = η2 = −0.304712, for case (a);
η0 = 0.122233, η1 = −0.410513, for case (b).
This leads to the following lifting operation
pk ← pk + ηk f, ∀f, k = 0, 1, 2, 3, for case (a);
pk ← pk + ηk f, ∀f, k = 0, 1, for case (b)

(14)

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1578

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory

(1)

-1/16

(2)
(3)

-1/8

9/16 1 9/16

-1/16

6/8 1 9/16

-1/16

9/16 1 9/16

-1/16

5. Experiments and Results

Figure 5: Discrete basis functions along boundary polygons: (1) φ i in case (a); (2) φ 1 in case (b); (3) φ 0 in case
(b); (4) ψ.
that can be
Equation (11).

used

before

2 Subdivision

thogonalization coefficients depend only on {p k , k = 0, 1, 2,
3}, each of which can be a boundary vertex or an inner vertex
of valence n k . They can also be pre-computed for all cases
with n k ≤ 12, respectively, and be directly used in real-time
computation.

1

(4)

√

applying

synthesis

of

Due to the existence of boundaries, the lifting of an inner primitive wavelet close to the boundary may be different. First of all, a scaling function close to the boundary is
usually different from that far from boundaries because the
subdivision rules near boundaries are modified [LMB04a].
Specifically, the discrete scaling function shown in Figure 2
needs to be updated as follows: the mask at a face point, i.e.
f i or f i,j , should be multiplied by 4/l i or 4/l i,j , where l i
or l i,j denotes the number of inner vertices of face f i or f i,j ,
respectively, and each item 8n1j (∗) in the formula of f i or
f i,j should be replaced by 0 if p j is on a boundary. In addition, an inner primitive wavelet will be lifted by using only
inner scaling functions because boundary curves are always
expected to be self-governed in wavelet analysis and synthesis. Note that each local scaling function shown in Figure 3
is possibly located on boundaries or even does not exist. To
avoid considering too many cases of φ 0 ∼ φ 11 , we adopt the
following simplification. The indices of the 12 scaling functions are divided into four sets: S 0 = {0, 11, 4}, S 1 = {1, 5,
6}, S 2 = {2, 7, 8} and S 3 = {3, 9, 10}. If p k (k = 0, 1, 2, 3)
is a boundary vertex, then none of φ j (j ∈ S k ) will be taken
into account, i.e. all ω j (j ∈ S k ) are set to 0. To achieve this,
we set all elements in the column j of G and the row j of G
and H to 0 but the element g j,j to 1 for any j ∈ S k . All other
inner products in G and H can be computed in the same way
as that of the algorithm given in Section 3. Thus, we always
solve a uniform linear system to obtain the orthogonalization
coefficients no matter whether a local scaling function exists
or is located on boundaries. After the simplification, the or-

We will perform a noise-filtering experiment similar to that
of [Ber04, BDHJ04]
to check the stability of the proposed
√
interpolatory 2 subdivision wavelet (to be called IR2W,
for short). The experiment can effectively show whether
a wavelet transform has a stable behaviour when the lowpass filter of the wavelet transform is applied multiple times
[BDHJ04]. The experimental model is shown in Figure 6,
where (a) is the initial control mesh with 168 faces and (b)
is the resulting mesh after 10 times of subdivision. Note that
the magenta lines in Figure 6(a) denote an inner edge path
labelled as boundary, which is used to produce a crease on the
limit surface. To show the crease more clearly, we view the
model in another angle with the crease again painted in magenta, as shown in Figure 6(c). We add the white noise to all
vertices of the mesh shown in Figure 6(b) and thereby obtain
the disturbed model of the highest level. Then, the disturbed
model will be analyzed step by step by using the low-pass
filter of IR2W. We subdivide the resulting mesh at each step
again to level 10 without considering wavelet coefficients of
finer levels so as to obtain the low-pass filtered version of the
noisy model at each level. As a result, the low-pass filtered
versions of the disturbed model are shown in Figure 7 from
level 10 to 0. It is shown in Figure 7 that the noise is reduced quickly when being filtered step by step and, after 10
times of filtering, the disturbed model looks just the same as
the undisturbed one. Moreover, because boundary curves are
self-governed, there are no gaps between different mesh parts
with a common boundary or along inner edge paths labelled
as boundary in the multiresolution process. We have further
computed the L 2 -norm error of the filtered model of each
level with respect to the undisturbed one in order to show the
filtering effect of IR2W numerically. These L 2 -norm noise
errors are listed in Table 2. For comparison, we also perform
the noise-filtering experiment with the same initial mesh and
the same white√noise for the wavelet based on a variant of
approximatory 2 subdivision [WTQ07] (R2SW, for short),
and the corresponding noise errors are also listed in Table 2.

Figure 6: The initial control mesh (a) and the limit surface (b) and (c) with a crease edge/boundary painted in magenta.
c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory

√
2 Subdivision

1579

Figure 7: The noisy model and its filtered versions at each level.
Table 2: L 2 errors between low-pass filtered models and the undisturbed one

Model in Figure 7
Level
10
9
8
7
6
5
4
3
2
1
0

Cat’s head

IR2W

R2SW

IR2W

R2SW

0.007399
0.005242
0.003726
0.002660
0.001903
0.001375
0.000995
0.000729
0.000537
0.000402
0.000316

0.007399
0.005262
0.003840
0.003004
0.002533
0.002277
0.002069
0.001950
0.001866
0.001949
0.001818

0.005431
0.003844
0.002736
0.001964
0.001408
0.001012
0.000734
0.000532
0.000392
0.000292
0.000226

0.005431
0.003859
0.002822
0.002218
0.001886
0.001709
0.001603
0.001517
0.001473
0.001448
0.001497

Let R be the ratio of the final noise error to the initial error,
i.e.
0.000316
= 0.0427,
0.007399
0.001818
= 0.2457.
=
0.007399

RIR2W =
RR2SW

One can find that R IR2W is substantially less than R R2SW .
One may also compare the results with that of two other
Catmull–Clark-like subdivision wavelets, i.e. the Catmull–
Clark subdivision wavelet [WQT06] (CCSW, for short)
and the generalized bicubic B-spline subdivision wavelet

[BDHJ00,
BDHJ04] (GBSW, for short). Note that two steps
√
of 2 refinement are topologically equivalent to one step
of Catmull–Clark refinement. As reported in [WQT06] and
[WTQ07], the ratio of the final noise after five times of filtering to the initial error for CCSW [WQT06] and GBSW
[BDHJ00, BDHJ04] usually has the following result:
RCCSW ≈ 1,

RGBSW ≈ 2,

which is again much√larger than that produced by the proposed interpolatory 2 subdivision wavelet. We have performed the noise-filtering experiment with another open
model, cat’s head, which has a real boundary. The coarsest and the finest versions of the original model are shown in
Figure 8(a) and (b), respectively. Because the visual change
in noise filtering is very similar to that shown in Figure 7,
we do not show all intermediate filtered versions of the noisy
model in details, but only those levels of 10 and 0, as shown
in Figure 8(c) and (d), respectively. The experimental results
of the noisy error are also listed in Table 2 and show the
same noise-filtering performance as the previous example.
Similar results are always observed in experiments when the
white noise is refreshed randomly or the initial mesh model
changes. The experiments show that the proposed IR2W has
substantially better stability and performance of noise reduction than R2SW, CCSW and GBSW.
The analysis algorithm of IR2W can be used to effectively decompose any closed or open highly detailed quadrilateral meshes with subdivision connectivity. Figures 9 and
10 show the analysis processes of two highly detailed mesh
models, named Venus and Feline. To show the subdivision

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1580

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory

√

2 Subdivision

Figure 8: The initial control mesh of a Cat’s head (a), the original model of the highest level (b) and the noise filtered models
of level 10 (c) and level 0 (d).
connectivity of the meshes, we plot the borderlines of base
domains on each original model with full details. For the
Venus model, we also obtain the coarsest meshes for comparison when analyzing it by using R2SW, CCSW and GBSW,
respectively, as shown in Figure 11(a)–(c). Note that all vertices in these three meshes have been pushed to their limit positions based on their respective subdivision schemes, since
the corresponding subdivision√schemes are approximatory,
in contrast to the interpolatory 2 subdivision. The resulting
low resolution meshes for R2SW, CCSW or GBSW usually
do not have a good quality if not being pushed to their limit
positions. For instance, Figure 11(d) is the original version of
Figure 11(c) before being pushed. Furthermore, we compute
the L 2 -norm errors of the resulting mesh at each level with
regard to the original model, as listed in Table 3. The results
of fitting errors for R2SW, CCSW and GBSW are shown at
the same time for comparison. Note that the L 2 -norm error
between two meshes is numerically computed when the two
meshes have been subdivided to the highest level (without
considering wavelet coefficients of finer levels). The experimental results for the Feline model are listed in Table 4. It
is shown in these tables that, with regard to the full-detailed
model, the fitting error of coarser version for IR2W is always
smaller than those for R2SW, CCSW and GBSW at each resolution level. One can thus conclude that the wavelet analysis
of IR2W is effective and stable for quadrilateral meshes of
arbitrary base topology and has a better fitting quality than
R2SW, CCSW and GBSW. In addition, when synthesizing
models with full details from the coarsest level, we estimate
the reconstruction time at each step, as shown in Table 5, for
Venus and Feline, respectively, which is linear in the number of quadrilaterals (NQ, for short). The computation time
can be further reduced by ignoring the lifting operations for
tiny wavelet coefficients. Our test platform is a PC equipped
with an Intel Core2 CPU 6600@ 2.4GHz and 2GB RAM and
running Windows XP Professional.
Similar to the previous multiresolution analyses of arbitrary meshes, the proposed wavelet based on the interpolatory

√

2 subdivision can be conveniently used in many applications [EDD∗ 95], such as progressive transmission, data compression, shape approximation and multiresolution editing.
We conduct a simple experiment to describe its performance
of data compression for highly detailed polyhedral meshes. It
needs to further consider quantization and coding of connectivity and geometric information to build a full mesh compression pipeline. Here, we will use the largest wavelet coefficients (in norm), up to 30%, while neglecting all other wavelet
coefficients to reconstruct the model, and then compute the
L 2 -norm error between the resulting approximative model
and the original one with full details. Note that, besides these
selected wavelet coefficients, the information of the coarsest
version of the model is always used in the reconstruction. The
L 2 -norm approximation errors are listed in Tables 6 and 7 in
details for Venus and Feline and for IR2W, R2SW, CCSW
and GBSW, respectively, where the first column denotes the
percent of wavelet coefficients used in the reconstruction. It
is shown in the tables that the IR2W introduced in the paper
has the best behaviour of data compression among the four
wavelets. Note that all errors in the tables throughout the paper are given as relative errors, i.e. the ratios of absolute errors
to the diameters of the respective original models of the highest level. In addition, IR2W
√requires quadrilateral meshes to
have the connectivity of 2 refinement and two steps of
√
2 refinement are topologically equivalent to one step of
Catmull–Clark subdivision, which is just the most familiar
1-to-4 refinement for quadrilateral meshes. The connectivity requirement can be conveniently established using some
existing remeshing algorithms [BDHJ00, LLS01, LSS∗ 98,
KVLS99].
6. Conclusions
In this paper, we √
propose an efficient wavelet construction
for interpolatory 2 subdivision for quadrilateral manifold
meshes using the
√ lifting scheme. The resulting new wavelet
inherits from 2 refinement the attractive advantage of
having added resolution levels. The corresponding wavelet

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory

√
2 Subdivision

1581

Figure 9: Step by step wavelet analysis of the Venus model.
algorithms are composed of only a series of lifting operations, which are all local and fully in-place, thus they can be
performed very efficiently in linear time. The experiments
show that the wavelet has sufficient stability in analyzing
any semi-regular quadrilateral meshes and offers better performance in noise reduction, fitting quality and data compression than existing wavelet analyses for quadrilateral manifold
meshes. With the boundary treatments, we can also effec-

tively integrate feature lines into the wavelet transforms as
self-governed boundary curves. The proposed wavelet analysis can be used in a wide range of applications, including
progressive transmission, shape approximation, data compression, multiresolution rendering and editing of complex
models. The construction method is also applicable to other
interpolatory subdivision schemes over arbitrary manifold
meshes to produce linear time wavelet transforms.

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1582

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory

√

2 Subdivision

Figure 10: Step by step wavelet analysis of the Feline model.

Figure 11: The coarsest meshes of Venus for R2SW (a), CCSW (b) and GBSW (c) and the original control mesh (d) of (c) before
being pushed to the limit position.

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory
Table 3: L 2 fitting errors for each level of the Venus model

√
2 Subdivision

1583

Table 6: L 2 error for data compression of the Venus model

Level

Error for
IR2W

Error for
R2SW

Error for
CCSW

Error for
GBSW

Percent

Error for
IR2W

Error for
R2SW

Error for
CCSW

Error for
GBSW

10
9
8
7
6
5
4
3
2
1
0

0.000000
0.000346
0.000541
0.000585
0.000707
0.000936
0.001354
0.002020
0.003112
0.004741
0.008802

0.000000
0.000352
0.000586
0.000628
0.000776
0.001015
0.001613
0.002390
0.003811
0.006472
0.011441

0.000000
–
0.000635
–
0.000871
–
0.002058
–
0.005508
–
0.017414

0.000000
–
0.000567
–
0.000867
–
0.002224
–
0.006996
–
0.021379

0
3
6
9
12
15
18
21
24
27
30

0.008802
0.000931
0.000752
0.000673
0.000613
0.000563
0.000524
0.000489
0.000458
0.000432
0.000407

0.011441
0.001037
0.000752
0.000676
0.000622
0.000576
0.000536
0.000501
0.000469
0.000443
0.000417

0.017414
0.001917
0.000992
0.000749
0.000683
0.000645
0.000614
0.000585
0.000556
0.000529
0.000502

0.021379
0.001656
0.000889
0.000674
0.000616
0.000585
0.000558
0.000532
0.000507
0.000483
0.000457

Table 4: L 2 fitting errors for each level of the Feline model

Table 7: L 2 error for data compression of the Feline model

Level

Error for
IR2W

Error for
R2SW

Error for
CCSW

Error for
GBSW

10
9
8
7
6
5
4
3
2
1
0

0.000000
0.000233
0.000368
0.000404
0.000500
0.000707
0.001140
0.001918
0.003063
0.004987
0.007969

0.000000
0.000237
0.000399
0.000434
0.000550
0.000775
0.001318
0.002253
0.003646
0.006449
0.010921

0.000000
–
0.000432
–
0.000614
–
0.001621
–
0.004858
–
0.016328

0.000000
–
0.000386
–
0.000608
–
0.001717
–
0.005152
–
0.014646

Percent

Error for
IR2W

Error for
R2SW

Error for
CCSW

Error for
GBSW

0
3
6
9
12
15
18
21
24
27
30

0.007969
0.000666
0.000518
0.000451
0.000404
0.000371
0.000343
0.000319
0.000297
0.000278
0.000260

0.010921
0.000747
0.000530
0.000461
0.000419
0.000386
0.000358
0.000333
0.000311
0.000292
0.000275

0.016328
0.001394
0.000742
0.000532
0.000470
0.000436
0.000410
0.000387
0.000365
0.000344
0.000324

0.014646
0.001238
0.000662
0.000480
0.000427
0.000398
0.000374
0.000353
0.000332
0.000313
0.000295

Table 5: Computation time (seconds) for wavelet syntheses

Venus
Level
0
1
2
3
4
5
6
7
8
9
10

Feline

NQ

Time

NQ

Time

194
388
776
1552
3104
6208
12,416
24,832
49,664
99,328
198,656

–
0.001288
0.002274
0.002898
0.005932
0.008094
0.017694
0.029095
0.060702
0.104064
0.222138

254
508
1016
2032
4064
8128
16,256
32,512
65,024
130,048
260,096

–
0.001924
0.003233
0.003991
0.007924
0.011135
0.023347
0.038204
0.080938
0.140088
0.290183

Acknowledgments
The work described in this paper was supported by the Research Grants Council of the Hong Kong Special Administrative Region, China (Grant No. CityU 1186/07E) and City

University of Hong Kong (Grant No. 7001928). We sincerely
thank the anonymous reviewers for their valuable suggestions. We also sincerely thank the Caltech Multi-Resolution
Modeling Group for publishing data files of the Venus and
Feline models on their website.
References
[Ber04] BERTRAM M.: Biorthogonal Loop-subdivision
wavelets. Computing 72, 1–2 (April 2004), 29–39.
[BDHJ00] BERTRAM M., DUCHAINEAU M., HAMANN B., JOY
K.: Bicubic subdivision-surface wavelets for large-scale
isosurface representation and visualization. In Proceedings of Visualization 2000 (2000), 389–396.
[BDHJ04] BERTRAM M., DUCHAINEAU M., HAMANN B., JOY
K.: Generalized B-spline subdivision-surface wavelets for
geometry compression. IEEE Transactions on Visualization and Computer Graphics 10, 3 (May–June 2004), 326–
338.

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1584

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory

[Bon98] BONNEAU G.: Multiresolution analysis on irregular surface meshes. IEEE Transactions on Visualization
and Computer Graphics 4, 4 (Oct.–Dec. 1998), 365–
378.
[CDP96] CARNICER J. M., DAHMEN W., PENA J. M.: Local decomposition of refinable spaces and wavelets. Appl.
Comput. Harmon. Anal. 3, 2 (Apr. 1996), 127–153.
[CC78] CATMULL E., CLARK J.: Recursively generated
B-spline surfaces on arbitrary topological meshes.
Computer-Aided Design 10, 6 (1978), 350–355.
[DGL87]
DYN N., GREGORY J., LEVIN D.: A 4-point interpolatory subdivision scheme for curve design. Computer
Aided Geometric Design 4, 4 (1987), 257–268.
[DLG90]
DYN N., LEVIN D., GREGORY J. A.: A butterfly
subdivision scheme for surface interpolation with tension
control. ACM Transactions on Graphics 9, 2 (Apr. 1990),
160–169.
[DS78]
DOO D., SABIN M.: Behavior of recursive division
surfaces near extraordinary points. Computer-Aided Design 10, 6 (1978), 356–360.
[EDD∗ 95] ECK M., DEROSE T., DUCHAMP T. et al: Multiresolution analysis of arbitrary meshes. In Proceedings
of SIGGRAPH 1995 (Los Angeles, CA, USA, Aug. 1995),
pp. 173–182.
[FVU05]
FEILNER M., VAN DE VILLE D., UNSER M.: An
orthogonal family of quincunx wavelets with continuously
adjustable order. IEEE Transactions on Image Processing
14, 4 (Apr. 2005), 499–510.
[KSS00]
KHODAKOVSKY A., SCHRO¨ DER P., SWELDENS W.:
Progressive geometry compression. In Proceedings of
SIGGRAPH 2000 (New Orleans, LA, USA, Jul. 2000),
pp. 271–278.
[Kob96]
KOBBELT L.: Interpolatory subdivision on Open
quadrilateral nets with arbitrary topology. Computer
Graphics Forum 15, 3 (1996), C409–C420.
√
[Kob00]
KOBBELT L.: 3-Subdivision. In Proceedings of
SIGGRAPH 2000 (New Orleans, LA, USA, Jul. 2000),
pp. 103–112.

√

2 Subdivision

[LM06] LI G., MA W.: Interpolatory ternary subdivision
surfaces. Computer Aided Geometric Design 23, 1 (Jan.
2006), 45–77.
√
[LM07] LI G., MA W.: Composite 2 subdivision surfaces. Computer Aided Geometric Design 24, 6 (Aug.
2007), 339–360.
√
[LMB04a] LI G., MA W., BAO H.: Interpolatory 2subdivision surfaces. In Proceedings of Geometric Modeling and Processing 2004 (Beijing, China, Apr. 2004),
pp. 185–194.
√
[LMB04b] LI G., MA W., BAO H.: 2 subdivision for
quadrilateral meshes. The Visual Computer 20, 2–3 (May
2004), 180–198.
[LMB05] LI G., MA W., BAO H.: A new interpolatory
subdivision scheme for quadrilateral meshes. Computer
Graphics Forum 24, 1 (Mar. 2005), 3–16.
[LQS04] LI D., QIN K., SUN H.: Unlifted Loop subdivision
wavelets. In Proceedings of Pacific Graphics 2004 (Seoul,
Korea, Oct. 2004), pp. 25–33.
LINSEN L., PASCUCCI V., DUCHAINEAU M. A.,
[LPD∗ 04]
HAMANN B., JOY K.: Wavelet-based multiresolution with
√
n
2 subdivision. Computing 72, 1–2 (Apr. 2004), 129–142.
[LLS01] LITKE N., LEVIN A., SCHRODER P.: Fitting Subdivision Surfaces. In Proceedings of IEEE Visualization
2001 (2001), pp. 319–324.
[Loo87] LOOP C. T.: Smooth subdivision surfaces based
on triangles. M.S. Thesis, Department of Mathematics,
University of Utah, 1987.
[Lou94] LOUNSBERY J. M.: Multiresolution analysis for
surfaces of arbitrary topological type. PhD thesis, University of Washington, Seattle, WA, Sep. 1994.
[LDW97]
LOUNSBERY M., DEROSE T., WARREN J.: Multiresolution analysis for surfaces of arbitrary topological type.
ACM Transactions on Graphics 16, 1 (1997), 34–73.
[Pas02] PASCUCCI V.: Slow growing subdivision (SGS) in
any dimension: towards removing the curse of dimensionality. Computer Graphics Forum 21, 3 (2002), 451–
460.

[KVLS99]
KOBBELT L., VORSATZ J., LABSIK U., SEIDEL H.:
A shrink wrapping approach to remeshing polygonal surfaces. Computer Graphics Forum 18, 3 (1999), C119–
C130.

[PR97] PETERS J., REIF U.: The simplest subdivision
scheme for smoothing polyhedra. ACM Transactions on
Graphics 16, 4 (Oct. 1997), 420–431.

[LSS∗ 98] LEE A., SWELDENS W., SCHRO¨ DER P, et al: MAPS:
multiresolution adaptive parameterization of surfaces. In
Proceedings of SIGGRAPH 1998 (Orlando, FL, USA, Jul.
1998), pp. 95–104.

[SB99] SAMAVATI F. F., BARTELS R. H.: Multiresolution
curve and surface representation: reversing subdivision
rules by least-squares data fitting. Computer Graphics Forum 18, 2 (1999), 97–119.

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

H. Wang & W. Ma / Biorthogonal Wavelets Based on Interpolatory

[SDS96] STOLLNITZ E., DEROSE T., SALESIN D.: Wavelets
for computer graphics, theory and applications. Morgan
Kaufmann, San Francisco, CA, USA, 1996.
[SL03] STAM J., LOOP C.: Quad/triangle subdivision. Computer Graphics Forum 22, 1 (2003), 79–85.
[SMB02] SAMAVATI F. F., MAHDAVI-AMIRI N., BARTELS R.
H.: Multiresolution surfaces having arbitrary topologies
by a reverse Doo subdivision method. Computer Graphics
Forum 21, 2 (2002), 121–136.
[SS95] SCHRO¨ DER P., SWELDENS W.: Spherical wavelets:
efficiently representing functions on the sphere. In Proceedings of SIGGRAPH 1995 (Los Angeles, CA, USA,
Aug. 1995), pp. 161–172.
[Sta98] STAM J.: Exact evaluation of Catmull–Clark subdivision surfaces at arbitrary parameter values. In Proceedings of SIGGRAPH 1998 (Orlando, FL, USA, Jul.
1998), pp. 395–404.
[Swe96] SWELDENS W.: The lifting scheme: a customdesign construction of biorthogonal wavelets. Appl. Comput. Harmon. Anal. 3, 2 (1996), 186–200.
[Swe97] SWELDENS W.: The lifting scheme: a construction
of second generation wavelets. SIAM J. Math. Anal. 29, 2
(1997), 511–546.
[VP04a] VALETTE S., PROST R.: Wavelet-based multiresolution analysis of irregular surface meshes. IEEE Transactions on Visualization and Computer Graphics 10, 2
(2004), 113–122.
[VP04b] VALETTE S., PROST R.: Wavelet-based progressive compression scheme for triangle meshes: Wavemesh.
IEEE Transactions on Visualization and Computer Graphics 10, 2 (2004), 123–129.
[VBU05] VAN DE VILLE D., BLU T., UNSER M.: Isotropic
polyharmonic B-splines: Scaling functions and wavelets.

√
2 Subdivision

1585

IEEE Transactions on Image Processing 14, 11 (Nov.
2005), 1798–1813.
[VZ01] VELHO L., ZORIN D.: 4–8 Subdivision. Computer Aided Geometric Design 18, 5 (Jun. 2001), 397–
427.
[WA03]
WU J., AMARATUNGA K.: Wavelet triangulated irregular networks. International Journal of Geographical
Information Science 17, 3 (2003), 273–289.
[WQ05]
WANG H., QIN K.: Surface modeling with ternary
interpolating subdivision. The Visual Computer 21, 1–2
(Feb. 2005), 59–70.
√
[WQS07]
WANG H., QIN K., SUN H.: 3-subdivisionbased biorthogonal wavelets. IEEE Transactions on Visualization and Computer Graphics 13, 5 (Sep./Oct. 2007),
914–925.
[WQT06] WANG H., QIN K., TANG K.: Efficient wavelet
construction with Catmull–Clark subdivision. The Visual
Computer 22, 9–11 (Sep. 2006), 874–884.
[WT09] WANG H., TANG K.: Biorthogonal wavelet construction for hybrid quad/triangle meshes. The Visual
Computer 25, 4 (April 2009), 349–366.
[WTQ07] WANG H., TANG K., QIN K.: Biorthogonal
wavelets based on gradual subdivision of quadrilateral
meshes. Computer Aided Geometric Design 25, 9 (2008),
816–836.
[ZQQS08] ZHANG H., QIN G., QIN K., SUN H.: A
biorthogonal wavelet approach based on dual subdivision. Computer Graphics Forum 27, 7 (2008), 1815–
1822.
[ZSS96] ZORIN D., SCHRO¨ DER P., SWELDENS W.: Interpolating subdivision for meshes with arbitrary topology. In Proceedings of SIGGRAPH 1996 (New Orleans, LA, USA,
Aug. 1996), pp. 189–192.

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

