DOI: 10.1111/j.1467-8659.2009.01417.x

COMPUTER GRAPHICS

forum

Volume 28 (2009), number 6 pp. 1644–1658

Filling N-Sided Regions by Quad Meshes for Subdivision
Surfaces
A. Nasri1∗ , M. Sabin2 and Z. Yasseen1
1 American

University of Beirut, Department of Computer Science
2 Numerical Geometry Ltd

Abstract
Given an n-sided region bounded by a loop of n polylines, we present a general algorithm to fill such a region by a
quad mesh suitable for a subdivision scheme. Typically, the approach consists of two phases: the topological phase
and the geometrical phase. In the first part, the connectivity of the mesh is based on determining a partitioning
of the region into rectangular subregions across which regular grid could be constructed. The geometrical phase
generalizes discrete Coon’s patches to position the vertices in the 3D space. The generated mesh could be taken
as input to any quad-based subdivision scheme, such as that of Catmull–Clark or Doo–Sabin to generate the
corresponding limit surface. The goal of the algorithm is to generate smooth meshes with minimum number and
less valence of extraordinary vertices deemed undesirable in such subdivision schemes.
Keywords: subdivision surfaces, curve interpolation, quad mesh generation, hole filling, n-sided patches
ACM CCS: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling, curve, surface, solid, and
object representations.

1. Introduction
Filling n-sided holes is a central issue in surface modelling
and computer graphics. This problem is tightly coupled with
the generation of n-sided patches to fill a hole that may
occur in various situations, such as when many traditional
rectangular patches are assembled together. Typically, the
hole is defined by a loop of n curves, each defined by a
control polygon (polyline), forming the boundary of the hole
as depicted in Figure 1. The generalization of rectangular
Coon’s patches to n-sided patches is then of a great interest.
Since 1964, many methods emerged to address this problem, as outlined in the following Section. In the discrete
setting, filling rectangular regions with matching number of
vertices on opposite boundary sides could be achieved using
discrete Coon’s patches [FH99]. If two opposite sides are defined by control polygons with different number of vertices,
∗

This work was supported by a research grant number #111135522291 from the Lebanese National Council for Scientific Research, 2006–2009.
c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and
Blackwell Publishing Ltd. Published by Blackwell Publishing,
9600 Garsington Road, Oxford OX4 2DQ, UK and 350 Main
Street, Malden, MA 02148, USA.

the solution is not trivial. In the case of B-spline, knot insertion could be used to match the number of vertices on both
sides. This, however, may not be possible if the control mesh
of the hole is to be integrated in the polyhedron defining an
existing subdivision surface. Besides, it results in adding unnecessary vertices to define the same shape. Consequently,
a more general solution to handle the filling of n-sided
(n ≥ 3) region bounded by polylines with different number of vertices is still needed. In this paper we propose a
coherent approach to address this issue.
The problem can thus be formulated as follows: given a
region bounded by a loop of n polylines, we need to determine a partitioning into rectangular subregions in which
regular grid can be constructed. As the subregions are being established, the need for a vertex incident to a number
m (m = 4) of edges could well be inevitable. We call such
a vertex a dislocation. In the context of quad meshing, a
dislocation vertex can be described as either negative when
m < 4, or positive when m > 4. For quad-based subdivision schemes, such a vertex is called an extraordinary
vertex. In certain cases that will be investigated later, the

1644

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

1645

Typically, there are two phases in the filling algorithm:
The topological phase and the geometrical phase. In the first
phase, we determine how the internal vertices of the region
shall be connected and in the second, how these vertices
are positioned in space. The proposed algorithm is focused
on solving the topological problem and generalizes discrete
Coon’s patches [FH99] to handle the geometrical phase.

Figure 1: An example of filling a five-sided region. Top-left:
the control polygons of five curves; right: The topological
configuration of the region; bottom-left: the Catmull–Clark
subdivision surface of the mesh generated by our algorithm.

The remainder of this paper is organized as follows.
Section 2 gives an overview of related work. The general
framework of the proposed filling algorithm is detailed out
in Section 3. Filling quadrilateral regions need special attention and could be handled by extending the general algorithm as described in Section 4. In Section 5, we cover
the geometrical phase that completes the process of mesh
construction. Finally, discussions and limitations are give in
Section 6, whereas conclusions and future work are outlined
in Section 7.
2. Related Work

dislocation could be a non-quadrilateral polygonal element
that we call a facet dislocation. Our proposed algorithm
generates the quad mesh for a hole aiming at minimizing the
number of dislocations.
For quad-based subdivision scheme, the distortion d of a
vertex v i of the mesh is defined by
d(vi ) = valence(vi ) − 4.
It is proven [SWZ04] that |n − 4| is a lower bound on the
total distortion in a quadrangulated n-sided region, thus:
d(vi ) ≥ |n − 4|.
i

Our proposed algorithm creates a maximum of one
n-valent dislocation in most cases, thus the total distortion is
n − 4. We also generate quad meshes with as smooth flow as
possible. This is indicated by the way and the number of flow
lines directed from one side to the other. A flow line is simply a sequence of edges connecting a number of vertices by
departing from one side and landing on another. The number
of vertices on each flow line is determined by the solution of
a system of linear equations.
Throughout this paper, we will refer to distances or lengths
as logical distances or logical lengths to describe the topology
of the structure at hand. The logical distance between two
vertices is the number of edges connecting them. The logical
length of a side is thus the number of edges connecting its
two endpoints. Let us assume that the side i of the hole has
a length l i (l i ≥ 2). Its endpoints C i and C i+1 , where i is
taken mod n, define the two corresponding corners at which
other polylines connect to form the boundaries of the hole
(see Figure 1).

Filling n-sided holes bounded by a set of n curves or polylines
is a central problem addressed in various domains. Computer
Aided Geometric Design, finite element analysis, and texturing are some of these domains. In this section, we present
an overview of some of the most related work to our proposed algorithm. For more details, the reader is referred to
the references cited therein.
Malraison [Mal00] presented a brief survey of various
techniques for filling n-sided regions. Generally there are
three approaches for filling an n-sided region: the single
patch approach, the splitting approach and the subdivision
approach.
In the first approach, a single multi-sided patch is defined,
such as the Gregory patches [Gre86, HM97], the Sabin 3and 5-sided patches [Sab83] which were extended to n-sided
as in [ZB97, HK84], and the S-patches as in [LD90]. General overviews of these patches are also provided, such as
those in Varady [Var87], Gregory et al. [GLZ90], and Hosaka
[HK84].
The second approach consists of filling a region with multiple patches. Typically, an initial vertex is chosen at the centre
of the region, which is split into rectangular patches, such
as the bicubic Hermite patches [BS89], or even the B-spline
patches [PGVACN06], etc. The smoothness of the patches
along the shared edges and in particular at the centre vertex
required special attention. Our proposed algorithm does not
require the input of a centre vertex.
The third and the more relevant approach to our algorithm
is the one that uses subdivision surfaces. For instance, an nsided patch can be designed from Hermite data [BS89]. In the
situation of vertex-corner blending such as those dealt with
in Varady [VR97], Charrot and Gregory [CG84], Hwang
et al. [HC03], subdivision is also used to fill the arising

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1646

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

Figure 2: A comparison between the quadrangulation in
Schaefer et al. [SWZ04] (left) and our scheme (right).

n-sided regions. Some specific schemes can be tuned to fill
an n-sided hole such as the combined scheme as in Levin
[Lev99]. Clearly, in most of these situations, an essential
and decisive step is how to create a control mesh to be used
as input to the underlying subdivision scheme. To do this,
an arbitrary interior vertex, selected by the user, is typically
employed. However, it is not intuitive how best to choose
such a vertex.
Schaefer et al. [SWZ04] partially addressed the filling of
a region by quadrilateral elements in the context of constructing meshes over net of curves. While their work does
not consider generating extraordinary vertices away from the
boundary of the region as a priority to build on, we base the
quadrangulation on extraordinary vertices being placed interior to the region, as depicted in Figure 2. To avoid this
in Schaefer et al., this may require that the discrete lengths
be sufficient enough. Being a recursive process, it is not
easy to predict the topology of the generated mesh. Yet, they
state that the maximum of (n − 2) 5-valent and two 3-valent
extraordinary vertices are generated, thus obtaining a mesh
with a total distortion of n. In general, our proposed algorithm generates a quadrangulation of minimal distortion of
(n − 4). As such, our algorithm produces less extraordinary
vertices with valency depending on the number of sides in
a hole. In addition, they observe that their quad meshing algorithm produces a non-quadrilateral face if the summation
of all the lengths of the boundary polylines is odd. When we
discuss the need for non-quadrilateral faces, we show that
this is partially but not always true.
Quad meshing or re-meshing schemes are also relevant
to our work. The reader is referred to the surveys presented in [Owe98] and [AUGA05] for an overview of existing schemes and their categorizations. Each survey proposes different criterion for classification and evaluation. Our
overview of quad mesh generation schemes classifies according to the global/local aspect in which the problem input is
handled.
In general, global treatment performs unified analysis over
the input represented as boundary lines or triangular meshes.
This analysis is done by defining a scalar function, vec-

tor fields, parametrization, optimization, or other operations.
Although these schemes mostly produce satisfactory results,
their potential drawback is the high complexity of the algorithm and its low efficiency. Alliez et al. [ACSD∗ 03],
Marinov and Kobbelt [MK04], Ray et al. [RLL∗ 06], and
Dong et al. [DKG05] use vector fields for anisotropic mesh
generation. Others such as Lee et al. [LMH00] Litke et al.
[LLS01], and Dupont et al. [LDB07] fit scanned geometry
to template subdivision surfaces. Some quad meshing algorithms are based on parametrization methods [BMRJ04,
GGH02, HG00, EH96]. Quadros et al. [QRPG] use medial
axis transform to quadrangulate the region enclosed by the
input boundary lines. Shimada et al. [SL98] propose a computational method that creates quad meshes by a node placement and connection procedure.
The techniques that create quad elements by applying local operations usually lack to guarantee for the topological
regularity of the resulting mesh. The advancing front techniques [CBMB96, WK, PNJK07] start with a set of fronts
consisting of the edges at the boundary of the domain. Quads
are systematically combined at the front, advancing towards
the interior of the area. If the input is a triangular mesh Owen
et al. [OSCS99] and Merhof et al. [MGTG07] perform local
operations to convert triangles to quadrilateral elements.
As outlined in the following section, our proposed algorithm provides a coherent theory for this mesh construction
problem, generating coarse grids that match the density1 requirements along the given boundary edges.

3. The General Framework Filling Algorithm
The input to the problem is a closed configuration of n polylines (p i ) meeting at their endpoints. Each polyline p i has a
length denoted by l i and connects its two endpoints C i and
C i+1 . Note that the indices throughout this paper are always
taken mod n.
In order to construct the quad mesh that fills the region
defined by the closed loop of these n polylines, a typical
solution is to split this region into a partitioning of rectangular
subregions across which regular grid can be constructed. As
the partioning is determined, the direction of flow of the
vertices from one boundary polyline to another lays out the
topology of the interior of the generated mesh. To present
the main idea of the algorithm, let G be a dislocation located
at a distance d i from each boundary polyline p i . A ray of
length d i initiates from G and hits the i side (defined by the
polyline p i ) at a vertex E i as depicted in Figure 3. Note that
n is arbitrary and as such, the valence of G is n. Consider the
n quadrilateral regions constructed by the corners G, E i−1 ,
C i , and E i . In order to construct quad meshes within these
regions without any other dislocation, the conditions are, for

1

By density we mean here the number of vertices on a polylines.

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1647

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

E i-1

di-1

Ci

The relation binding the d i unknowns to each other orders
the system in a circular way. Under certain conditions, this
ordering results in the reappearance of d i in the right-hand
side of Equation (4). These conditions must imply that for
some k = k 0 we have

G

di
Ei

(−1)k0 di+2k0 = −di

di+1

That is:
1 : i + 2k0 = i

Ci+1

2 : (−1) = −1

E i+1

Figure 3: The general solution that partitions the region into
n quadrilateral regions: G connects to all boundary polyline
by d i long rays that meet the edges at E i . The light red lines
show the direction of the flow lines between the sides of the
region.

each i:
Ci Ei = Ei−1 G = di−1
Ei−1 Ci = GEi

= di

where AB is the distance between the vertices A and B.
These conditions imply that:
di−1 + di+1 = li

i = 0 : n − 1.

(1)

Having this partitioning, we construct regular grids across
each rectangular region. The primary unknown of the analysis is the distance d i . In what follows, we discuss the existence and feasibility of d i and construct the topological
outcome of the solution in terms of rectangular regions, and
vertex or facet dislocations.

i = 0 : n − 1.

(2)

We denote by sub(1) the first substitution of relation 2 that
is:
sub(1) : di = li+1 − di+2 .

(3)

th

We can prove by induction that after the k substitution, we
obtain:
k

(−1)j +1 li+2j −1 + (−1)k di+2k .
j =1

=

i

i + 2k0

=

i + qn

=

qn/2

k0
2 : k0

(4)

for some q > 0

is odd

Because k 0 is the number of substitutions needed to make
Equation (4) with one unknown, the smallest value of k 0
is enough. It can be easily shown that using higher values
of k 0 in the above conditions will only result in additional
computation yielding the same solution for d i . The following
cases can then be considered:
Case n is odd The smallest value of k 0 could be obtained
by q = 2 giving k 0 = n and
n

(−1)j +1 li+2j −1 .

di = 0.5 ×

(5)

j =1

Case n is even Here q = 1 gives the smallest k 0 = n/2i
A solution then exists iff k 0 = n/2 is odd, that is n is not
a multiple of 4 and
di = 0.5 ×

The rectangular partitioning of the region implies relations between interior unknown distances d i and the known
lengths of the sides of the region l i . Consider the other form
of relation 1

sub(k) : di =

1 : i + 2k0

n
2

3.1. Existence of the solution

di = li+1 − di+2

and

k0

(−1)j +1 li+2j −1 .

(6)

j =1

3.2. Feasibility of the solution
The discussion presented in the previous section yields the
two formulae in 5 and 6 to calculate d i . In the case where n is
even, the formula is valid if n/2 is odd. An even value of n/2
eliminates d i from the equation by making its coefficients on
both sides equal to +1. Therefore, this algorithm provides a
solution when
n mod 4 = 0
Clearly, d i must be a positive integer. The following sections investigate the conditions and treatments under which
this requirement is realized.

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1648

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

3.2.1. Conditions for integer solutions

C0
l0 = 5

Clearly Equations (5) and (6) guarantee the existence of a solution but the 0.5 factor could possibly make it non-feasible.
For instance, an integer solution for d i requires this value of
the summation to be even. In what follows we show that there
are three patterns of the rectangular partitioning depending
on the configuration of a region as follows.

l4 = 4

E0

E4

d0

C1

G

d1

d3

E1

• Case n is odd
We define:

C4

d4

E3
l3 = 6

d2

l1 = 6
n−1

=

li

(7)

C2

E2

l2 = 3

i=0

C3

and
n

si =

(−1)

j +1

li+2j −1

C0

l0 = 5

i = 0 : n − 1.

E02

l4 = 4

E01

j =1

E42

d0

Then

n−1

li = li − 1 and

d1

E11

therefore d i is integer iff s i is even, that is iff is even. If
is even, we obtain a set of n rectangular regions and a
positive n-valent vertex dislocation exactly as described
in the general solution (see Figures 4 and 5(a)). The
rectangular regions are formed by the corners: G, E i−1 ,
C i , and E i .
If is odd, we reduce the length of each side l i by one.
Let l i be the reduced lengths and be their summation,
hence:
=

li

d4

G1

C1

di = 0.5 × si

E41

G0

G2

E12

C4

G4

d3

G3

E32
E31

d2

l1 = 6
E21

C2

E22

l3 = 5

C3

l2 = 5

Figure 4: Examples of odd-sided regions where the total
number of vertices on the boundary is even (top) and odd
(bottom). The light red lines show the direction of the flow
lines between the sides of the region.

i=0

And
n

(−1)j +1 li+2j −1

si =

i =0:n−1

j =1

• Case n is even
In this case, we assemble the lengths into two summations
1 and 2 as follows:
n
2

= − n which is the difference between two odd
integers giving an even result. Thus s i is even. A similar
equation to calculate d i can be devised as follows:

1

n
2

=

l2i

2

=

i=1

l2i−1
i=1

and

di = 0.5 × si

n
2

In this case, instead of a vertex dislocation, we obtain an
n-sided facet dislocation. This facet is formed by sparing
one edge from each side l i , thus using i instead to build
the system of equation. The facet is defined by

si =

(−1)j +1 li+2j −1

i = 0 : n − 1.

j =1

Again
di = 0.5 × si

G0 G1 ... Gn−1
As such, for each i, there will be two rays emanating from
G i and G i+1 meeting the corresponding side of the region
at two points E 1i and E 2i with an in-between distance of
1. The region is then divided into 2n rectangular regions
and one n-sided facet, as illustrated in Figures 4 and 5(b).

In this case, s i is dependent on either 1 or 2 . Consequently, we distinguish between the following cases:
1. If both 1 and 2 are even then (d i ) 1≤i≤n is integer.
Again this yields the same result as the general solution. Thus, we obtain a set of n rectangular regions

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1649

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

l5 = 5

C0
l0 = 6

E5

C5

l4 = 7

d5

E0
d0

C1

d1

l1 = 5

E4

d4

G

d3

C4

d2

E1

E3

E2

C2

l3 = 4

C3

l2 = 3
l5 = 6
1
E52 E5

C0

C5

l0 = 6

l4 = 7
d5

E01

E42

E02

E41

d0

C1

G5

G0

G1

l1 = 5

d4
d3

d1
E11
G2 d2 G3
E12
C2

C4

G4

l3 = 4

C3

E22

E21

E32
E31

l2 = 4
l5 = 5
C0
l0 = 5

Figure 5: Examples of regions with odd number of sides. For
each sub-figure: Given polylines (top left), constructed mesh
(top right), one Catmull–Clark refinement (bottom left), and
the corresponding limit surface (bottom right).
and an n-valent vertex dislocation [see Figures 6 and
7(a)].
2. If both 1 and 2 are odd then we obtain a set of 2n
rectangular regions and an n-sided facet dislocation.
The same solution follows as the case where n and
were both odd (see Figures 6 and 7(c)).
3. If 1 is even and 2 is odd, a length reduction by one is
applied to the sides (l 2i−1 ) 1≤i≤n/2 contributing to the
value of 2 :
l2i−1 = l2i−1 − 1 and
Hence

n
2

2

=

l2i−1
i=0

l2i = l2i

C5

E5

E01

E42

d5

E02

G0

d0
G1

C1

d4
G2

d1
l1 = 5

E1

C4

d3
E3

d2
C2

E21

l4 = 6

E41

E22

l3 = 4

C3

l2 = 6

Figure 6: Examples of even-sided regions where the summations of the number of vertices on non-adjacent sides are
both even (top), both odd (middle), or odd and even (bottom). The light red lines show the direction of the flow lines
between the sides of the region.
And

n
2

si =
j =1

(−1)j +1 li+2j −1

i =0:n−1

di = 0.5 × si

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1650

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

In this case, the vertex dislocation is replaced by an
n
-sided facet dislocation whose vertices are 5-valent
2
vertex dislocations:
Gi ,

i=0:

n
2

A side with corners C i and C i+1 where (i = 2k +
1)1≤k≤ n2 is hit by a ray emanating from G k+1 at a
vertex E i on this side.
As for a side with corners C i and C i+1 where
(i = 2k)1≤k≤ n2 , two rays emanating from G k and
G k+1 contact the corresponding side in two points
rectanE 1i and E 2i . The region is then divided into 3n
2
gular regions and one n2 -sided facet dislocation, see
Figures 6 and 7(b).
4. If 1 is odd and 2 is even, the treatment is similar to
the one described in the previous case.

4. Filling Quadrilateral Regions
As mentioned in the previous section, the general framework
algorithm cannot handle quadrilateral regions, i.e. 4-sided
regions where opposite sides have different lengths. In this
section, we describe how the proposed algorithm can be extended to fill such regions. The problem could be solved by
using a refractor. A refractor is a topological entity that redirects some flow lines and causes a deviation in their original
direction of flow. In the filling process, a set of four refractors formed in a diamond shaped setting are used to refract a
subset of flow lines to adjacent instead of opposite sides. In
what follows we describe the extension of the algorithm in
detail.

4.1. The general solution
Let the lengths of the sides be as follows l 0 = m, l 1 = p, l 2 =
n and l 3 = q. Without loss of generality, we assume that m >
n and p > q. The filling algorithm creates two vertex dislocations, one negative G n and one positive G p , according to
the basic structure given in Figure 8. This will determine the
location of the refractor element and the rest of the mesh as
follows:

Figure 7: Examples of regions with even number of sides.
For each sub-figure: Given polylines (top left), constructed
mesh (top right), one Catmull–Clark refinement (bottom left),
and the corresponding limit surface (bottom right).

1. Without loss of generality, we can also assume that the
difference between m and n is greater than that between p
and q. Let α and β be the number of flow lines refracting
from the side of length m to its adjacent side of length p
and to q, respectively. Thus the difference between m and
n is α + β where α and β are defined by the following
system:
α+β =m−n
α − β = p − q.

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1651

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

E6

C0
1

2

E0
α

E1
E2

β

7

9

E7

α

E1
E2

4

5

E3

α

f2

G1

C2

Figure 8: A quadrilateral region is divided into nine rectangular regions with two dislocations. The original flow lines
of a rectangular region are shown in light green while the
diamond shaped region redirects the flow lines in light blue.
We initially assume that
=m+n+p+q
is even, that is, α and β are integers. In the following
section we study the special cases where is odd and β
is zero.
2. Let the four lengths f 0 , f 1 , f 2 and f 3 shown in
Figure 9 be defined by
f0 + f1 = m − (α + β) = n
f2 + f3 = p − α = q − β.
3. Determine the location of the refractor and the points
of contacts from the rays emanating from its vertices to
the boundary sides. Let those vertices be E 0 , . . . , E 7 ,
they are then determined by the following distances (see
Figure 9):
f0 = C0 E0 = E6 G1 = E5 Gp = C3 E7
f1 = E2 C1 = G2 E3 = Gp E4 = E7 C2
f2 = C0 E6 = E0 G1 = E1 Gn = E2 G2 = C1 E3
f3 = E5 C3 = Gp E7 = E4 C2 .

C1

α

Gn

E5

f3

f0
β
Gp

C3
f0

f3

E7

α

β

f2

G2

f1

6

E4

β

β

f0
f2

E0
Gp

E6

f2

C0
f0

3

α

β

C1

C3

β

α

Gn

8

E5

β

f1

f2

E3

f1
α

E4

f1

f3

C2

Figure 9: The lengths of the nine rectangular regions.

4.2. Non-integer solutions
The system used to find the values of α and β in Equation
(8) may result in non-integer solutions if is odd. In such a
case, the system constructed to find α and β gives a solution
of the form:
1
2
1
β = β + .
2
α= α +

The partitioning of the region is slightly modified as follows
(see Figure 11):
a Merge regions 7 and 8 into one region. Consequently, E 1
and G n no longer exist;
G1 G2 = E0 E2 = α + β.
We obtain 7 rectangular regions and one triangular
(G 1 G 2 G p ).
b Set the lengths of the following sides:
G2 Gp = E3 E4 = α
G1 Gp = E5 E6 = β
c Fill the 7 rectangular regions with quad elements.

Clearly, the distances
E0 E1 = α

E1 E2 = β

E3 E4 = α

E5 E6 = β

4. The quadrilateral region is then divided into 9 rectangular
sub-regions as indicated in Figure 8. Quad meshing is
then a simple operation of grid generation as shown in
Figure 10(a) illustrating an example of integer values of
α and β.

d Starting from G 1 towards G 2 on the largest side of the
triangular region, let α (respectively β ) lines flow to
the side of length α (respectively β ). The lines cross
at 4-valent vertices and produce a 3-sided facet dislocation
at the side G 1 G 2 .
The obtained partitioning, as illustrated in Figure 11, results in a positive 5-valent vertex dislocation, and a negative
3-sided facet dislocation, see Figure 10(b).

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1652

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

E6

C0

[β]

E5

C3

G1

E0

[β]
Gp

α+ β

α+ β

E7

[α]

E2

G2

C1

[α]

E3

E4

C2

Figure 11: An example of a quadrilateral region where the
number of vertices is odd. The resulting mesh has a 5-valent
dislocation and a three-sided facet.
E5

C0

Gp

E0
α

E1

C1

Gn

E3

C3

E7

α

α

E4

C2

Figure 12: An example where the mismatch between opposite sides are similar. Using one refractor, a quad mesh is
generated with two dislocations.
Furthermore, when the length difference, say p − q, between two opposite sides is identical to the difference m −
n between the other two sides, the system assigns β a zero
value. In this case regions 2, 8, and 9 collapse and the region
is partitioned into 6 rectangular regions (see Figures 12 and
10(c)).
Figure 10: Examples of quadrilateral regions (see
Section 4.1 for the definitions of α and β). For each subfigure: Given polylines (top left), constructed mesh (top
right), one Catmull–Clark refinement (bottom left), and the
corresponding limit surface (bottom right).

4.3. Higher distortion solutions
The algorithm that fills a quadrilateral region uses 2 dislocations to generate a quad mesh with a minimum total distortion
of 2. This meshing is based on redirecting flow lines from

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

1653

Figure 13: A quadrilateral region where p − α = q − β <
0.

C0
C3

M

Figure 15: An Example of a four sided region filled by a
quad mesh with a total distortion of 4.

E7

We then define δ = (α + β) − (α + β ). Now M is located
f 0 + β + δ/2 away from C 0 . The number of vertices
generated on the side ME 7 is δ/2 + 1 and thus:

C2

ME7 =

C1
Figure 14: The region shown in Figure 13 is filled by a mesh
with a total distortion of 4 (α = 3, β = 1, and δ = 8).

δ
+ 2.
2

The quadrilateral region initially defined by the corners:
C 0 , C 1 , C 2 , and C 3 is now split into two regions defined by
1. C 0 , M, E 7 , and C 3

opposite to adjacent sides. When the difference between one
couple of opposite sides is larger than the total length of the
other couple (see Figure 13), an alternative way must be devised. Since we have a lower bound for f 0 and f 1 (l 2 = n ≥
2), the distances that may need special treatment are f 2 and
f 3 . Null or negative values for f 2 or f 3 may be considered as
special cases where:
p − α = q − β ≤ 0.

2. M, C 1 , C 2 , and E 7
Having this configuration (see Figures 14 and 15), the
two new quadrilateral regions can be filled with a sub-total
distortion of 2 each, yielding a total distortion of 4 in the
initial region.
5. The Geometrical Phase

In such situations, i.e. where f 2 + f 3 < 0, we propose
splitting the region into two parts. The polyline that splits
the region has M (a vertex on the side C 0 C 1 ) and E 7 as
its extremities (see Figure 14). The selection of M and the
number of vertices generated on the side ME 7 guarantee that
the resultant quad mesh has a total distortion of 4.
To begin with, we force f 2 and f 3 to both have the minimal
positive value 1 and find alternative values α and β instead
of α and β, respectively. Thus:
f2 = f 3 = 1
α = p − (f2 + f3 ) = p − 2
β = q − (f2 + f3 ) = q − 2.

Since the topological phase determines a partitioning to rectangular regions, the geometrical problem reduces to finding
the geometric position of the vertices of the generated mesh.
Typically, the quality of the resulting mesh could possibly
be improved by employing any of the existing fairing techniques, such as those used in physically-based modelling, energy minimization, or any other scheme based on curvature
flow [YI99]. Our geometric phase is based on generalizing
discrete Coons introduced in [FH99]. The Coons construction normally gives good quality results cheaply and could be
used as a good starting point for iterative fairing, minimizing
variation of curvature if desired.
Initially, we determine the locations of the vertices on
the flow lines bounding the subregions, these are the rays

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1654

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

emanating from the dislocations and landing on the given
polylines. Once these vertices are determined, the interior
vertices of each of the subregions could be easily computed
using discrete Coon’s patches.
The essential part is then how to determine the position of
the dislocations. We distinguish between the two cases: nonquadrilateral and quadrilateral regions. In the following, we
explain how to compute the positions of these dislocations,
and after that the remaining vertices of the region could be
easily computed.

G

E i-1
j

Pi-1

j

Ei
Ci

E i+1
Ei

5.1. Dislocations in non-quadrilateral regions

Ci+1

For a non-quadrilateral region, the geometric position of a
vertex dislocation can be estimated as follows:
1. Let E i and E i+1 be the points of contact at which the
rays from the dislocation G meet the sides of the corner
Ci.
2. We construct a rectangular region E i−1 , C i , E i , G. Let
us denote by a i its logical area. The logical area of a
region defined by four vertices is considered here to be
the number of quad elements in the parallelogram or the
rectangular region defined by these vertices.
3. Using the geometry of the edges of the parallelogram
defined by the three corners, we can compute an estimate
of the position of the dislocation G by:
Ei + Ei−1 − Ci .

n
i=1 (Ei

Figure 16: The rectangular region involved in locating ray
vertices.

1. (E 1 + E 5 − C 0 ) with weight (a 1 + a 2 + a 7 + a 9 )−1 ,
2. (E 1 + E 4 − C 1 ) with weight (a 4 + a 5 + a 8 + a 9 )−1 ,
3. (E 4 + E 7 − C 2 ) with weight (a 6 )−1 ,
4. (E 5 + E 7 − C 3 ) with weight (a 3 )−1 ,
Where the (a i ) are the corresponding logical areas of the
nine subregions.
5.3. Remaining vertices

4. The step above is repeated n times, one for each corner,
giving n estimators of G. We then take a weighted mean of
the these estimators using weights inversely proportional
to the area of the parallelogram. Accordingly the vertex
will be given by:
G=

j
P i+1

+ Ei−1 − Ci )/ai
.
n
i=1 1/ai

(8)

5.2. Dislocations in quadrilateral regions
Finding the position of dislocations in quadrilateral region
is not straightforward. The problem can be summarized as
calculating the position of a vertex dislocation by relating it
to every corner C i of the region and associate this relation
with the appropriate edge vertices E i and the areas of the
corresponding subregions.
Details of the solution of every case will stretch this section
needlessly. We limit our discussion to the case of the quadrilateral region described in Section 4.1 and find the location
of G p . The solutions in other configurations could follow a
similar approach.
The four estimators of Gp corresponding to the four corners are as follows (see Figures 8 and 9):

Once the position of the dislocation is computed, the vertices
on the rays emanating from it to the sides of the region can
be constructed using discrete Coon’s patches. To begin with,
we denote by Eij the vertex on ray i which is at distance
j (1 < j < d i ) away from E i and d i − j away from G (see
j
j
Figure 16). Let P i−1 and P i+1 be the counterpart vertices of
j
Ei on the sides i − 1 and i + 1, respectively. We then consider
the rectangular subregion that represents the boundaries of
the discrete Coon’s patch defined by the four corners E i−1 ,
C i , C i+1 , and E i+1 , assuming that the polyline connecting
E i−1 , G, and E i+1 is considered as one side of the patch.
The four counterpart vertices of Eij are then:
j

1. P i−1 on the side E i−1 C i ,
2. E i on the side C i C i+1 ,
j

3. P i+1 on the side C i+1 E i+1 ,
4. G on the side E i+1 E i−1 .
Using the formula in [FH99], we then calculate all the
vertices on the rays emanating from the dislocations. After
that, the interior vertices of the n subregions defined by (G,
E i , C i , E i+1 ) are computed.

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1655

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

l4 = 5

1. If the region is 3-sided, then all solutions are positive iff
the lengths of its sides obey the triangle inequality:

C4

C0

li + li+1 ≥ li+2

l3 = 6

l0 = 4
C3

i = 1 : 3.

2. With five-sided regions, the necessary and sufficient condition for a minimal distortion solution is to have the sum
of the length of any two adjacent sides less than the sum
of the other three, thus:
li + li+1 ≤ li+2 + li+3 + li+4

C1
l2 = 8

l1 = 3
C2

Figure 17: An example where the distance from the dislocation to the side with extremities C 0 and C 1 is negative (d 0 =
−1, d 1 = 2, d 2 = 4, d 3 = 6, d 4 = 2).

6. Discussion and Limitations
Our filling algorithm system was implemented where
Figures 5–15 show a variety of holes with different boundary
configurations, their corresponding generated meshes, and
limit surfaces. The surfaces are Catmull–Clark subdivision
surfaces but the meshes could be used for any quad-based
subdivision scheme.
As mentioned in the previous section, our proposed algorithm creates meshes with a maximum of one n-valent vertex dislocation in most cases, and with a total distortion of
n − 4; that is achieving the minimum distortion. For certain
cases with n even, the algorithm creates n/2 5-valent vertex dislocations and an n/2-sided dislocation facet. The total
distortion is then:

3. For n-sided regions with odd n (a similar approach may
be followed for even n), we present another form of
Equation (5) as follows:
⎛ n
⎞
n
2
1 ⎝ 2
li+4k−3 −
li+4k−1 ⎠
di = ×
2
k=1
k=1
i = 0 : n − 1.
Thus if for some i the sum of the lengths of the sides with
indices:
n
i + 4k − 1
k=1:
2
is greater than the sum of the other n2 , the region cannot be filled with the minimal distortion quad mesh.
Refractors can be used to get rid of negative distances
by reducing the high density of the sides causing such
solutions.
The sides causing the negative results could be identified using the above formula. For instance, in the example shown in Figure 17, the sides causing d 0 to be
−1 are l 2 and l 3 . To avoid having the dislocation on the
boundary, we set d 0 to 1 and thus the negative term in
the above formula is reduced by δ = 4, where
δ = (1 − d0 ) × 2.

n
n
× |5 − 4| + | − 4|.
2
2

This value is to be distributed over l 2 and l 3 . The system
is reset to the initial lengths having virtual values for l 2
and l 3 :

Considering that the n/2-sided facet adds |n/2 − 4| distortion.

l2v = l2 − δ/2
l3v = l3 − δ/2.

In the case where n/2 > 4, we have
n
n n
n
× |5 − 4| +
−4 = + −4=n−4
2
2
2
2
where |n − 4| is the lower bound of distortion in an n-sided
mesh. Therefore, the algorithm tends to also minimize distortion in the created mesh. This minimum distortion solution
is valid as long as all computed logical distance are nonnegative. In some situations, the lengths of certain sides are
relatively too large, causing negative values of the distances
from the dislocation to that side (See Figure 17). The following indicates when such situations are encountered:

The new region lengths become: l 0 , l 1 , l v2 , l v3 , and l 4 ,
giving positive new distances as shown in Figure 18.
The refractor’s role is to create a channel to redirect a
beam of δ/2 flow lines to depart from l 2 and land on l 3
(see Figure 18).
7. Conclusions and Future Work
The proposed filling algorithm provides a coherent approach
for generating control meshes of holes bounded by a set of
polylines. The meshes are quad-based, having as smooth flow

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1656

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

δ/2 = 2

Finally, future work could also include experimenting with
a 4-sided hole with various edge length differences to examine the number of extraordinary vertices or degenerate quads
generated.

Acknowledgements
Ali Charara worked on the implementation of an early version of this algorithm back in 2005. His efforts are greatly
appreciated. Thanks are also due to Khalid Sinno for reimplementing part of the solution in the odd case. Their
feedback helped us in implementing the complete system
presented in this paper.

δ/2 = 2

References
[ACSD*03]
ALLIEZ P., COHEN-STEINER D., DEVILLERS O.,
L´EVY B., DESBRUN M.: Anisotropic polygonal remeshing. ACM Transactions on Graphics 22, 3 (2003), 485–
493.
Figure 18: Using the refractor to fill the region with a quad
mesh of total distortion = |6 − 4| + |3 − 4| = 3.
as possible, and with a minimum total distortion of its vertices. As such, they could be integrated in any quadrilateral
subdivision scheme with less artefact, typically caused by
dislocations.
Because the topological and geometrical information are
only generated from the given polylines vertices, the approach generalizes rectangular discrete Coon’s patches to
n-sided patches. Furthermore, it is extended to handle rectangular discrete Coon’s patches defined by non-matching
density of boundary vertices.
The boundaries of a hole are B-spline curves of their corresponding polygons. They are of degree inferred by the
subdivision scheme employed: that is cubic B-spline in the
Catmull–Clark setting, or quadratic B-spline in the Doo–
Sabin setting. If we replace each of these polylines by a
polygonal complex such as [Nas00, NA02, Nas03] then the
limit surface of the filled holes will interpolate their corresponding curves. In the Doo–Sabin setting, it should be
possible to construct n holes sharing a non-4-valent corner
at which n curves could be interpolated with cross tangent
boundary conditions. A similar solution in the cubic case is
still under investigation but with cross curvature conditions
along the interpolated curves.
As for the types of holes, since the vertices of the generated meshes are linear combinations of the given boundary
vertices, the algorithm could mainly handle convex holes. A
concave hole, such as an L-shaped one, could be handled by
completing it with virtual boundaries that makes it convex,
and then use edge collapsing to remove the unnecessary part.
This will also be investigated in future work.

[AUGA05]
ALLIEZ P., UCELLI G., GOTSMAN C., ATTENE M.:
Recent advances in remeshing of surfaces, 2005.
[BMRJ04] BOIER-MARTIN I., RUSHMEIER H., JIN J.: Parameterization of triangle meshes over quadrilateral domains. In SGP ’04: Proceedings of the 2004 Eurographics/ACM SIGGRAPH Symposium on Geometry Processing (New York, NY, USA, 2004), ACM, pp. 193–
203.
[BS89] BALL A. A., STORRY D. J. T.: Design of an
n-sided surface patch from hermite boundary data.
Computer Aided Geometric Design 6, (1989), 111–
120.
[CBMB96] CASS R. J., BENZLEY S. E., MEYERS R. J.,
BLACKER T. D.: Generalized 3-d paving: An automated
quadrilateral surface mesh generation algorithm. International Journal for Numerical Methods in Engineering 39,
9 (1996), 1475–1489.
[CG84] CHARROT P., GREGORY J. A.: A pentagonal surface patch for computer aided geometric design. Computer
Aided Geometric Design 1, (1984), 87–94.
[DKG05]
DONG S., KIRCHER S., GARLAND M.: Harmonic
functions for quadrilateral remeshing of arbitrary manifolds. Computer Aided Geometric Design 22, 5 (2005),
392–423.
[EH96] ECK M., HOPPE H.: Automatic reconstruction of
b-spline surfaces of arbitrary topological type. In SIGGRAPH ’96: Proceedings of the 23rd annual conference
on Computer graphics and interactive techniques (New
York, NY, USA, 1996), ACM, pp. 325–334.

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

[FH99] FARIN G., HANSFORD D.: Discrete coons patches.
Computer Aided Geometric Design 16, 7 (1999), 691–
700.
[GGH02]
GU X., GORTLER S. J., HOPPE H.: Geometry images. In Proceedings of the 29th Annual Conference on
Computer Graphics and Interactive Techniques (2002),
ACM Press, pp. 355–361.
[GLZ90] GREGORY J., LAU V., ZHOU J.: Smooth Parametric
Surfaces and n-Sided Patches, Computation of Curves and
Surfaces. Kluwer, 1990, pp. 457–498.
[Gre86] GREGORY J.: Gregory n-sided surface patches. In
Mathematics of Surfaces (1986), Clarendon, pp. 217–
232.
[HC03] HWANG W.-C., CHUANG J.-H.: N-sided hole filling
and vertex blending using subdivision surfaces. Journal
of Information Science Engineering 19, 5 (2003), 857–
879.
[HG00] HORMANN K., GREINER G.: Quadrilateral remeshing. In VMV (2000), pp. 153–162.
[HK84] HOSAKA M., KIMURA F.: Non four-sided patch expressions with control points. Computer Aided Geometric
Design 1, (1984), 75–86.
[HM97] HALL R., MULLINEUX G.: Shape modification of
gregory patches. In Mathematics of Surfaces VII (1997),
Information Geometers, pp. 383–403.
[LD90] LOOP C., DEROSE T. D.: Generalized B-spline surfaces of arbitrary topology. In SIGGRAPH ’90: Proceedings of the 17th Annual Conference on Computer Graphics
and Interactive Techniques (New York, NY, USA, 1990),
ACM Press, pp. 347–356.
[LDB07] LAVOUE´ G., DUPONT F., BASKURT A.: A framework for quad/triangle subdivision surface fitting: Application to mechanical objects. Computer Graphics Forum
26, 1 (Jan. 2007), 1–14.

1657

[Mal00] MALRAISON P.: N-sided surfaces: a survey. In
Curve and Surface Design: Saint-Malo. Pierre-Jean
Laurent P. S., Schumaker L. L., (Eds.), 2000, Vanderbilt
University Press, Nashville, TN, pp. 1–9.
[MGTG07] MERHOF D., GROSSO R., TREMEL U., GREINER
G.: Anisotropic quadrilateral mesh generation: An indirect approach. Advanced Engineering Software 38, 11–12
(2007), 860–867.
[MK04] MARINOV M., KOBBELT L.: Direct anisotropic
quad-dominant remeshing. In PG ’04: Proceedings of the
Computer Graphics and Applications, 12th Pacific Conference (Washington, DC, USA, 2004), IEEE Computer
Society, pp. 207–216.
[NA02]
NASRI A., ABBAS A.: Designing Catmull–Clark
subdivision surfaces with curve interpolation constraints.
Computer & Graphics 26, 3 (2002), 393–400.
[Nas00] NASRI A.: Recursive subdivision of polygonal
complexes and its applications in CAGD. Computer Aided
Geometric Design 17 (2000), 595–619. Presented also
at the 5th SIAM Conference On Geometric Design,
Nashville, 1997.
[Nas03] NASRI A. H.: Interpolating an unlimited number
of curves meeting at extraordinary points on subdivision
surfaces. Computer Graphics Forum Journal 22, 1 (2003),
87–97.
[OSCS99] OWEN S. J., STATEN M. L., CANANN S. A., SAIGAL
S.: Q-morph: an indirect approach to advancing front quad
meshing. International Journal for Numerical Methods in
Engineering 44, 9 (1999), 1317–1340.
[Owe98]
OWEN S.: A survey of unstructured mesh generation technology. In Proceedings of the 7th International
Meshing Roundtable (1998), pp. 239–267.
[PGVACN06] PLA-GARCIA N., VIGO-ANGLADA M.,
COTRINA-NAVAU J.: N-sided patches with B-spline
boundaries. Computer Graphics 30, 6 (2006), 959–970.

[Lev99] LEVIN A.: Filling n-sided holes by combined
subdivision schemes. In Curve and Surface Design:
Saint-Malo. Pierre-Jean Laurent P. S., Schumaker L. L.,
(Eds.), 1999, Vanderbilt University Press, Nashville, TN,
pp. 221–228.

[PNJK07] PARK C., NOH J.-S., JANG I.-S., KANG J. M.: A
new automated scheme of quadrilateral mesh generation
for randomly distributed line constraints. Computer Aided
Design 39, 4 (2007), 258–267.

[LLS01] LITKE N., LEVIN A., SCHRO¨ DER P.: Fitting subdivision surfaces. In VIS ’01: Proceedings of the conference
on Visualization ’01 (Washington, DC, USA, 2001), IEEE
Computer Society, pp. 319–324.

[QRPG] QUADROS W., RAMASWAMI K., PRINZ F.,
GURUMOORTHY B.: Laytracks: A new approach to automated quadrilateral mesh generation using MAT. International Journal for Numerical Methods in Engineering 61
(2004), 209–237.

[LMH00] LEE A., MORETON H., HOPPE H.: Displaced subdivision surfaces. In Proceedings of ACM SIGGRAPH
2000 (July 2000), pp. 85–94.

[RLL*06] RAY N., LI W. C., L´EVY B., SHEFFER A., ALLIEZ
P.: Periodic global parameterization. ACM Transactions
Graphics 25, 4 (2006), 1460–1485.

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

1658

A. Nasri et al. / Filling N-Sided Regions by Quad Meshes for Subdivision Surfaces

[Sab83]
SABIN M.: Non-rectangular surface patches suitable for inclusion in a B-spline surface. In Eurographics
’83 (1983), North-Holland, pp. 57–70.

[VR97] VARADY T., ROCKWOOD A. P.: Geometric construction for setback vertex blends. Computer Aided Design 29,
(1997), 413–425.

[SL98] SHIMADA K., LIAO J.: Quadrilateral meshing with
directionality control through the packing of square cells,
1998.

[WK]
WHITE D., KINNEY P.: Redesign of the paving algorithm: Robustness enhancements through element by
element meshing. In Proceedings of the 6th International
Meshing Roundtable (1997), pp. 323–335.

[SWZ04]
SCHAEFER S., WARREN J., ZORIN D.: Lofting curve networks using subdivision surfaces. ACM
Press, New York, NY, USA, 2004, pp. 103–
114.

[YI99]
OHTAKE Y., BOGAEVSKI, I. A.: Polyhedral surface
smoothing with modified Laplacian and curvature flows.
Three Dimensional Images 13, 3 (1999), 19–24.

[Var87]
VARADY T.: Survey and new results in n-sided
patch generation. In Mathematics of Surfaces II (1987),
Oxford, pp. 203–236.

[ZB97] ZHENG J. J., BALL A. A.: Control point surfaces
over non-four-sided areas. Computer Aided Geometric
Design 14, (1997), 808–821.

c 2009 The Authors
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

