Eurographics/ IEEE-VGTC Symposium on Visualization 2009
H.-C. Hege, I. Hotz, and T. Munzner
(Guest Editors)

Volume 28 (2009), Number 3

Quasi-interpolation on the Body Centered Cubic Lattice
A. Entezari† and M. Mirzargar and L. Kalantari
Computer and Information Science & Engineering Department
University of Florida, Gainesville, FL, USA

Abstract
This paper introduces a quasi-interpolation method for reconstruction of data sampled on the Body Centered
Cubic (BCC) lattice. The reconstructions based on this quasi-interpolation achieve the optimal approximation
order offered by the shifts of the quintic box spline on the BCC lattice. We also present a local FIR filter that is
used to filter the data for quasi-interpolation. We document the improved quality and fidelity of reconstructions
after employing the introduced quasi-interpolation method. Finally the resulting quasi-interpolation on the BCC
sampled data are compared to the corresponding quasi-interpolation method on the Cartesian sampled data.
Categories and Subject Descriptors (according to ACM CCS): Numerical Analysis [G.1.1]: Approximation—Box
Splines; Numerical Analysis [G.1.2]: Interpolation—Box Splines

1. Introduction and Related Research
Reconstruction of sampled data is a ubiquitous task in many
engineering and computing science applications. In visualization and computer graphics, various volume rendering algorithms rely on accurate reconstruction as a key step in
the rendering pipeline. In image processing reconstruction
is used in resampling, resizing, conversion, and manipulation of sampled data.
There is abundant research on reconstruction of data
based on piecewise polynomial functions. B-splines, offer a
framework for representation of piecewise polynomial functions and thus are widely used in reconstruction of univariate
functions [deB01].
Splines have been widely accepted for image processing [Uns99]. In the context of image processing, splines
are often constructed as a tensor-product of two univariate splines. Mitchell and Netravali [MN88], demonstrated
the advantages of using splines for image processing. Recently, Van De Ville [VBU∗ 04], developed the so called
Hex-splines that are used for reconstruction of hexagonal
images. Hex-splines can not be constructed as a tensorproduct of univariate splines. Due to the non-separable struc-

† entezari@cise.ufl.edu
c 2009 The Author(s)
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

ture of hexagonal lattice, the tensor-product splines can not
be applied for processing of hexagonal data.
In the visualization community reconstruction filters have
received a lot of attention since accurate reconstruction of
trivariate functions and their gradients is crucial in fidelity of
rendering algorithms [MMK∗ 98, Car93, DK93, MMMY97].
Similar to image processing, in volume visualization algorithms, often the tensor-product approach is used for
reconstruction of Cartesian sampled data. Marschner and
Lobb [ML94] developed a framework for comparison and
evaluation of reconstruction filters for volume rendering.

1.1. Optimal sampling lattice
Even though the Cartesian lattice along with tensor-product
reconstruction have been often accepted as the framework
for sampling and reconstruction of trivariate functions, the
recent developments advocate the benefits of non-Cartesian
sampling lattices. The Body Centered Cubic (BCC) lattice
has been proposed as the optimal sampling lattice due to its
optimal spectral sphere packing properties [Miy59, PM62].
The optimality of the BCC lattice implies that one can capture a bandlimited function with roughly 30% less samples
if the BCC lattice is chosen as the sampling lattice instead
of the commonly used Cartesian lattice. On the other hand,
if the same number of samples are taken on the BCC lattice,

1016

A. Entezari et al / Quasi-interpolation on the BCC Lattice

higher frequency information are captured and hence more
accurate reconstruction is possible.
Theußl [TMG01] introduced the BCC sampling in volume rendering. However, since the BCC lattice is a nonseparable lattice, various ad-hoc tensor-product [TMMG02]
and radial basis [TMG01] algorithms fail to provide satisfactory reconstruction algorithms since they exhibit blurry artifacts. Entezari et al [EDM04, Ent07] introduced box spline
reconstruction algorithms for reconstruction on the BCC lattice that adhere to the geometry of the BCC lattice. Csébfalvi [Csé05] proposed a global pre-processing algorithm
(based on generalized interpolation [TBU00]) that reconstructs the BCC lattice based on its two Cartesian sublattices. This approach does not have a closed-form kernel
and does not guarantee approximation order.
Entezari et al [EVM08] derived a piecewise polynomial
evaluation of their box splines for fast evaluation. The encouraging result is that the BCC sampling lattice not only is
more accurate than Cartesian lattice (around 30%), but also
the computational cost of reconstruction on the BCC lattice
is half of a comparable reconstruction on the Cartesian lattice. Meng et al [MSE∗ 07], confirmed that these advantages
significantly improve the visual quality of the visualization
pipeline based on the BCC sampling lattice. [FEMV09] have
recently developed a GPU implementation of the fast algorithm for convolution of BCC lattice data with the quintic
box spline.
Similar improvements on the quality and speeed of reconstruction were recently reported on employing the Face
Centered Cubic (FCC) lattice [KEP08], which is the nearly
optimal lattice for sampling isotropic bandlimited functions.
In this work, the authors proposed an efficient evaluation
method along with a quasi-interpolation approach for box
spline reconstruction on the FCC lattice based on the six direction box spline.
1.2. Contribution
In this paper we introduce a quasi-interpolation algorithm
for BCC-sampled volumetric data that guarantees the optimal approximation order of the quintic box spline reconstruction introduced in [EVM08]. We also develop a finite
space-domain data filtering algorithm for sampled data that
can be implemented as a pre-filtering step. The key advantage of this method is that the quasi-interpolation is implemented as a FIR filter. Quasi-interpolation with tensorproduct B-spline reconstruction on the Cartesian lattice is
widely used [LL03]. In this paper we provide the corresponding algorithm on the BCC lattice.

for approximation of piecewise polynomial functions. A
comprehensive treatment of box splines and their properties
are gathered in [dHR93]. Similar to B-splines, box splines
are used as basis (or kernel) of reconstruction.
2.1. Definitions and Properties of Box Splines
A box spline is specified by a set of direction vectors that
determine the shape of the support of the box spline and also
the smoothness and accuracy of the functions spanned by
that spline. These direction vectors are usually gathered in
a matrix that specifies the box spline. A box spline in Rs
is specified by n ≥ s vectors in Rs that are columns of the
box spline matrix Ξ = [ξ1 , ξ2 , . . . , ξn ]. The support of the box
spline is all points x ∈ Rs such that x = Ξt where t ∈ Rn
and 0 ≤ ti < 1 for 1 ≤ i ≤ n. In other words, the support of
the box spline is the convex combination of these direction
vectors.
The simplest box spline is constructed by n = s vectors.
This box spline is the characteristic function of its support
area.
MΞ (x) =

1
|det Ξ|

where x = Ξt and t ∈ [0, 1)n

0

otherwise

(1)

It is clear from Equation 1 that this box spline is discontinuous at the boundary of its support. The simplest one dimensional box spline amounts to the box function which is the
indicator function for the interval [0, 1).
For the general case where there are more direction vectors n > s, the box splines are defined recursively:
M[Ξ,ξ] (x) =

Z 1
0

MΞ (x − tξ)dt

(2)

This inductive definition implies that starting from the base
case as in Equation 1 the indicator function is smeared along
the new direction vector.
A box spline is a piece-wise polynomial of degree at most
n − s. Moreover, let ρ be the minimal number of vectors that
if removed from Ξ the remaining vectors would not span
Rs . Then MΞ ∈ Cρ−2 , where Cm is the space of m-times
differentiable smooth functions. The Fourier transform of a
box spline can be shown to be:
Mˆ Ξ (ω) =

1 − exp(−i ξ · ω)
iξ · ω
ξ∈Ξ

∏

(3)

2.2. Convolution: Approximation with shifts
When the data is sampled uniformly, the spline approximation f˜ to a function f has the form:
f ≈ f˜ = c ∗ M =

∑ ck M(· − k),

(4)

k∈I

2. Spline spaces
Box splines are often considered as a generalization of Bsplines to multivariate setting, and are similarly employed

where M can be a tensor-product B-spline or a box spline
kernel for reconstruction. The numbers ck are the spline coefficients in the approximation. In image processing [MN88]
c 2009 The Author(s)
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

A. Entezari et al / Quasi-interpolation on the BCC Lattice

1017

and volume rendering [ML94], the spline coefficients ck are
often chosen to be the function values at respective points:
ck = f (k).

z

Equation 4 can be considered as a convolution of data, ck ,
with the kernel M. It can also be viewed as linear combination of shifts of the reconstruction kernel, M, weighted with
ck .

y

The index set I is the location of all sampling lattice
points, which is Z3 as for Cartesian lattice and BZ3 for BCC
lattice. The BCC lattice can be generated by integer linear
combinations of columns of its generator matrix:


1
1 −1
1 .
B =  1 −1
−1
1
1

One can refine the approximation f˜ by scaling the sampling
lattice by a scalar h < 1; then, the approximation f˜h is based
on samples that are collected from the scaled lattice hZ3 on
the Cartesian lattice or hBZ3 on the BCC lattice.
Approximation order of a spline space generated by
shifts of a reconstruction kernel M, is the largest α where
f − f˜h

2

α

= O(h )

for all sufficiently smooth functions f . For a box spline,
MΞ , the approximation order is precisely α = ρ. Since Bsplines are univariate box splines with s = 1, the approximation order of spline spaces generated by linear B-spline (Ξ =
1 1 ), is α = 2 and by cubic B-spline is α = 4 [deB01].
2.3. BCC box splines
The box splines that are introduced for reconstruction of data
on the BCC lattice are built using the four principal directions of the BCC lattice [EDM04, EVM08]:


1 −1 −1 1
1 −1 1  .
Ξ :=  −1
(5)
−1 −1
1 1

The linear box spline is simply the trivariate box spline associated with this matrix, MΞ . For this box spline we have
ρ = 2; hence, the reconstruction is C0 and the approximation order of the space generated by shifts of this box spline
is α = ρ = 2. The support of this box spline is a rhombic
dodecahedron as in Figure 1.

Smoother box splines are obtained by repeating the directions in Ξ. Defining Ξ[r] to be the matrix of directions in
which each direction in Ξ is repeated r times, the quintic
box spline [EVM08] is specified by the directions in Ξ[2] .
This box spline produces a spline space that is C2 and its
approximation order is α = 4 [EVM08]. This continuity and
approximation order is matched by the tricubic B-spline reconstruction on the Cartesian lattice. Hence we compare the
quintic box spline reconstruction on the BCC lattice with the
c 2009 The Author(s)
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

x

Figure 1: The first neighbors cell of the BCC lattice is a
rhombic dodecahedron which is the support of the linear box
spline.

tricubic B-spline on the Cartesian lattice of the same resolution in Section 5. Tricubic B-spline can be represented by
box spline directions I [4] , where I is the identity 3 × 3 matrix [dHR93].
3. Quasi-interpolation
Even though the spline space, generated by shifts of a box
spline, is capable of approximating functions with certain
approximation order, the common choice of spline coefficients may not attain this optimal approximation order. For
instance, the above mentioned reconstruction, f˜, based on
the simple choice of picking the spline coefficients as the
samples (ck = f (k)), would not attain the approximation order α, unless α = 2. Therefore, the common use of cubic
B-spline reconstruction kernel as in image processing and
volume rendering [ML94, MN88, MMK∗ 98] fails to exploit
the optimal approximation order of α = 4. This is the reason in Möller’s classification [Möl99], the cubic B-spline is
categorized as a 2-EF filter.
For the linear box spline, MΞ , such a choice of coefficients
will achieve the optimal approximation order since α = 2.
However, even though the spline space of the quintic box
spline, MΞ[2] , is capable of providing a fourth order approximation, the corresponding reconstruction (ck = f (k)) does
not necessarily achieve the best approximation order that is
attainable in this space.
The approximation order of the box spline space can
be realized by a quasi-interpolation scheme [dHR93, III].
Quasi-interpolation converts the original data to spline coefficients so that, if the data are sampled from a low-order
polynomial, the reconstruction exactly reproduces that polynomial. Reproducing low-order polynomials, as many as the

A. Entezari et al / Quasi-interpolation on the BCC Lattice

1018

basis spline allows, often guarantees the optimal approximation order of the reconstruction algorithm [dHR93]. A quasiinterpolant, Q, is a linear map into the box spline space of the
form
Qλ f (x) :=

∑ λ f (· + k)M(x − k),
k∈I

where λ is a continuous linear functional with a bounded
(and small) support. Let Π<α denote the space of all polynomials whose total degree is less than α. If Qλ reproduces
all polynomials in Π<α (i.e., Qλ p = p for any p ∈ Π<α ),
then the approximation order of the scheme based on Qλ is
shown to be α [dHR93, Proposition III.4].
For univariate and tensor-product splines general quasiinterpolation methods have been studied [deB68] and then
in [LS75,SF73]. Here we follow the general recipe presented
in [dHR93], chapter III, to build a generic functional for the
quintic box spline, MΞ[2] . This method is based on Marsden’s
identity that was also studied in [CL87, CDR88]. The objective is to find a continuous linear functional λ such that the
corresponding quasi-interpolant reproduces all polynomials
Π<4 since the approximation order of the quintic box spline
space is 4. Lyche et al [LMS08] have introduced an alternative approach to design local quasi-interpolants for the box
splines whose shifts are linearly independent.
The functional λ is constructed from the values (at zero)
of a series of polynomials ga,b,c that are mapped to (normalized) monomials (i.e., Marsden identity) by the box spline:
[[x]](a,b,c) = ∑ ga,b,c (k)MΞ[2] (x − k)
k

with the trivariate normalized power function [[x]](a,b,c) :=
b
xa y zc
a! b! c! .

Since the degree of the polynomials that can be reproduced is one less than the approximation power, for the
quintic box spline we need to consider only ga,b,c such that
a + b + c < 4.
The functional λ that attains the desired approximation
order is derived by [dHR93, III.13]:
λ := f →

∑

ga,b,c (0)(D(a,b,c) f )(0).

(6)

(a,b,c)

Here D(a,b,c) indicates a tensor-product differential operator;
∂
for instance D(1,0,0) := ∂x
. For convenience, one can work
with a ‘mesh function’ c(a, b, c) := ga,b,c (0). Then according
to [dHR93, III.34], we have:
c(a, b, c) = [[−iD]](a,b,c)

1
ˆ
MΞ[2] (ω)

.
ω=0

Computing the values of c(a, b, c) for a + b + c < 4 is rather
complicated since the derivatives of 1/Mˆ Ξ[2] are quite involved. One can resort to symbolic computing packages like
Maple for computing the derivatives. In Maple, one can define 1/Mˆ Ξ[2] and take derivatives; however, when it comes
to evaluating the derivative at zero, evaluation fails due to

the presence of zeros in the numerator and the denominator. Therefore, taking the limit of the resulting expression
when ω → 0 is the alternative to produce correct values.
However, when the matrix Ξ[2] of the box spline has many
columns (such as the case for the quintic box spline), this
limiting procedure becomes complex and Maple fails to respond. Since the multivariate function has a limit at zero,
all the univariate curves or lines that go through the origin
and agree with the multivariate function must have the same
limit. Therefore, one can restrict the multivariate function to
a univariate function on a line along ωx = ωy = ωz . The corresponding univariate expression is derived (after taking the
derivatives) by setting ωx = ωy = ωz . This approach simplifies the derivative expression and the limit to zero is then
trivially computed by Maple.
For the quintic box spline the non-zero elements of c are
c(0, 0, 0) = 1 and c(2, 0, 0) = c(0, 2, 0) = c(0, 0, 2) = −1/3.
Therefore, the quasi-interpolation functional is:
λΞ[2] :=
f → f (0) −

(7)
1
(D(2,0,0) + D(0,2,0) + D(0,0,2) ) f (0).
3

Even though the mechanics of the polynomial reproduction is developed for Cartesian shifts of a box spline, the
BCC shifts of a box spline can similarly be treated using the invertible linear transformation P := B−1 applied
to Ξ and the argument of the box spline (i.e., using MΞ =
|det P|MPΞ (P·)). This is due to the fact that such a linear
transformation does not change the polynomial space, and
polynomial reproduction is still maintained.
Since one can represent the tricubic B-spline as a box
spline with the direction matrix I [4] , one can derive the corresponding generic functional for the quasi-interpolation as
mentioned above:
λI [4] :=

(8)
1
(D(2,0,0) + D(0,2,0) + D(0,0,2) ) f (0).
6
This quasi-interpolation functional agrees with the commonly used quasi-interpolation method on B-splines [LL03].
f → f (0) −

3.1. Alternatives to quasi-interpolation
The framework of generalized interpolation [TBU00] designs pre-filters to optimally approximate ideal interpolation in the space of bandlimited functions (whose elements
are C∞ ). Since this approach is based on approximating the
sinc interpolation, it is often implemented in the frequency
domain. Deriving local, FIR, filters that can be applied in
the space domain is often challenging (see [CVDV07] for
some recent results). The 1-D pre-filtering algorithms can
be implemented for Cartesian volume rendering by a simple tensor-product approach [Cse08]. To extend such prefiltering approaches to BCC, one can employ the frequencyc 2009 The Author(s)
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

A. Entezari et al / Quasi-interpolation on the BCC Lattice

domain approach by performing a DFT (see [Vai93,DM84])
on the dataset [FEMV08].
One can also choose ck so that the reconstruction function agrees with the sampled data (i.e., interpolation f˜(k) =
f (k)). Interpolation has a prohibitive cost for large data sets
since it involves inverting a linear system globally on the
data points. Moreover, while the data are now exactly interpolated, the rationale for doing so is weak since the data are
typically the result of filtering and discretization; so pointwise exact replication by itself says little about the fidelity
of the reconstructed function.

points. Therefore, the right hand side of the above equation
is:
( ∑ D2ξ ) f = ( ∑ ∆2ξ ) f
ξ∈Ξ

ξ∈Ξ

=

∑ [ f (· + ξ) − 2 f (·) + f (· − ξ)]

ξ∈Ξ

= −8 f (·) +

f (·+tξ)− f (·)
.
t

For any lattice point on the BCC lattice, one can approximate directional derivatives along the four principle directions of the BCC lattice (i.e., the columns of Ξ in Equation 5). Therefore, we re-write Equation 7 for directional
derivatives along BCC lattice directions that can be computed.

Dξ1 = −D(1,0,0) − D(0,1,0) + D(0,0,1)
Dξ3 = D(1,0,0) − D(0,1,0) − D(0,0,1)

1
5
f (0) −
∑ [ f (−ξ) + f (ξ)]
3
12 ξ∈Ξ

(12)

Equation 12 suggests a simple FIR filtering algorithm where
every BCC data point is multiplied by 53 and a 23 of the average of its eight neighbors are subtracted from it. These
neighbors are the 8 valence-3 vertices of the rhombic dodecahedron illustrated in Figure 1.
For the tricubic B-spline, the quasi-interpolation results
from averaging the Cartesian lattice neighbor points. Following the same rules, we get:
λI [4] := f → 2 f (0) −

1
∑ [ f (−i) + f (i)]
6 i∈I

(13)

which agrees with the commonly-used quasi-interpolation
for tensor-product B-splines [LL03].

We first observe that:

Dξ2 = −D(1,0,0) + D(0,1,0) − D(0,0,1)

∑ [ f (· + ξ) + f (· − ξ)] .

Substituting this result into Equation 10 and Equation 7, we
get:

4. Implementation

limt→0

(11)

ξ∈Ξ

λΞ[2] := f →
In this section we derive an algorithm to implement the
quasi-interpolation on sampled BCC datasets as in Equation 7. A directional derivative is defined : Dξ ( f ) :=

1019

(9)

.

Both of these filtering steps can be implemented as a
pre-processing step; in our experiments, filtering the data
in MATLAB took a few seconds for the datasets discussed
in Section 5.

Dξ4 = D(1,0,0) + D(0,1,0) + D(0,0,1)
Squaring the above equations and summing up the four, we
have:

∑

D2ξ

(2,0,0)

= 4(D

(0,2,0)

+D

(0,0,2)

+D

).

(10)

ξ∈Ξ

Note that the mixed derivatives resulting from squaring the
sum of differential operators cancel after summing over the
four directions.
Furthermore, for polynomials, f , up to degree three (i.e.,
f ∈ Π<4 ) the finite differencing is exact:
D2ξ f = ∆2ξ f .
Since the premise of quasi-interpolation is reproducing loworder polynomials in Π<4 , the approximation order remains
the same when using finite differencing.
The left hand side of Equation 10 is needed for implementing Equation 7 and the right hand side is the sum of
directional derivatives that can be evaluated on the BCC lattice. For any of the directions ξ ∈ Ξ, we can evaluate the
second derivative, exactly, by a finite differencing on lattice
c 2009 The Author(s)
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

5. Results
We have employed a synthetic dataset that was introduced in [ML94] for evaluation of reconstruction filters – referred to as ML dataset. Also a real dataset
was employed based on the Carp fish dataset (Courtesy of http://www9.informatik.uni-erlangen.de/
External/vollib). These two datasets at high resolutions
are rendered in Figure 2 to set a ground truth for comparison
in our experiments.
We examined the quasi-interpolation scheme developed
in Section 3 with the ML dataset. In particular, we employed
the linear functional developed in Equation 7 for the quintic
box spline and the functional in Equation 8 for the tricubic
B-spline. The resulting reconstructions shown in Figure 3
still favor the BCC sampling and reconstruction scheme as
the error image is significantly darker for the BCC pipeline.
The quasi-interpolation has improved the quality of the isosurface that is rendered.
The images in the second row of Figure 3 document the
corresponding error images that are obtained of the angular

A. Entezari et al / Quasi-interpolation on the BCC Lattice

1020

Cartesian

Cart quasi-interpolation

BCC

BCC quasi-interpolation

Figure 3: Reconstruction of the ML dataset. First column: Sampled ML dataset on the Cartesian lattice at the resolution of
41 × 41 × 41. Second column: sampled the ML dataset using the functional in Equation 8 on the same resolution Cartesian
lattice. Third column: Sampled ML dataset on the BCC lattice at the resolution of 32 × 32 × 64. Fourth column: sampled on the
same BCC lattice resolution, using the functional in Equation 7. The first row illustrates the volume rendering of the sampled
data using the tricubic B-spline on the Cartesian and our quintic box spline on the BCC dataset. The second row illustrates
the corresponding angular errors in estimating the gradient on the iso-surface from the reconstruction process. An angular
error of .3 radians is mapped to white. The darker error image of the BCC data confirms smaller errors and more accurate
reconstruction. The quasi-interpolation has improved the quality of reconstruction significantly.

error that occurred in estimating the normal by central differencing on the reconstructed function. Although direct reconstruction of the normal is possible by using the analytical
gradient of the reconstruction kernel, we chose central differencing with a relatively small step (.1 of the sampling step)
on the reconstructed function to approximate the true gradient. Central differencing is commonly the method of choice
in the visualization domain and there is no reason to believe
that it performs any better or worse than taking the analytical derivative of the reconstruction kernel [MMMY97]. The
gray value of 255 (white) denotes an angular error of .3 radians between the computed normal and the exact normal.
These error images confirm that quasi-interpolation has significantly decreased the error in visualization.

Figure 2: Benchmark datasets. Top image: ML dataset that
is widely used for evaluation of reconstruction filters. The
bottom image: carp dataset at a high resolution of 256 ×
256 × 256.

We also experimented with low-resolution (6%) of the
Carp fish dataset in Figure 2. We followed the sub-sampling
approach that is discussed in [EVM08] to obtain two comparable resolutions of the carp dataset on Cartesian and one on
the BCC lattice. Our Cartesian sub-sampled volume is at the
resolution of 140 × 140 × 140 and the corresponding BCC
resolution is at 111 × 111 × 222. Figure 4 and Figure 5 show
the result of reconstruction of the Cartesian data with tricubic B-spline and the BCC data with quintic box spline. The
second row of Figure 4 shows the result of rendering the data
c 2009 The Author(s)
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

A. Entezari et al / Quasi-interpolation on the BCC Lattice

after applying quasi-interpolation (Equation 12 and Equation 13). In Figure 4 the superiority of the BCC sampling
is demonstrated since the BCC reconstruction offers a more
accurate reconstruction specially on the ribs and tail area.
The quasi-interpolation has improved the fidelity of the reconstruction on both cases.
Rendering times for all images in our experiments were
similar to [EVM08]. In our experiments rendering the BCC
datasets took nearly half the time that took to render the
Cartesian datasets.
6. Conclusions
While the smooth and efficient reconstruction of BCC sampled data have been introduced in [EVM08], the common
reconstruction algorithm fails to attain the optimal approximation property of their quintic box spline. In this paper,
we introduced a quasi-interpolation algorithm for BCC sampled datasets that attains the optimal approximation order of
the mentioned box spline. This quasi-interpolation is parallel to that of the tricubic B-spline which is widely used on
the Cartesian sampled data [LL03].
References
[Car93] C ARLBOM I.: Optimal Filter Design for Volume Reconstruction and Visualization. In Proc. of the IEEE Conference on
Visualization (Oct. 1993), pp. 54–61.
[CDR88] C HUI C. K., D IAMOND H., R APHAEL L. A.:
Convexity-preserving quasi-interpolation and interpolation by
box spline surfaces. In Trans. of the Fifth Army Conference
on Applied Mathematics and Computing (West Point, NY, 1987),
vol. 88 of ARO Rep. U.S. Army Res. Office, Research Triangle
Park, NC, 1988, pp. 301–310.

1021

[DM84] D UDGEON D. E., M ERSEREAU R. M.: Multidimensional Digital Signal Processing, 1st ed. Prentice-Hall, Inc.,
Englewood-Cliffs, NJ, 1984.
[EDM04] E NTEZARI A., DYER R., M ÖLLER T.: Linear and Cubic Box Splines for the Body Centered Cubic Lattice. In Proceedings of the IEEE Conference on Visualization (Oct. 2004),
pp. 11–18.
[Ent07] E NTEZARI A.: Optimal Sampling Lattices and Trivariate
Box Splines. PhD thesis, Simon Fraser University, Vancouver,
Canada, July 2007.
[EVM08] E NTEZARI A., VAN D E V ILLE D., M ÖLLER T.: Practical box splines for volume rendering on the body centered cubic
lattice. IEEE Trans. on Visualization and Computer Graphics 14,
2 (2008), 313 – 328.
[FEMV08] F INKBEINER B., E NTEZARI A., M ÖLLER T., V ILLE
D. V. D.: Hardware-accelerated high-quality box spline reconstruction on the BCC lattice. Tech. Rep. TR 2008-19, Simon
Fraser University, 11 2008.
[FEMV09] F INKBEINER B., E NTEZARI A., M ÖLLER T., VAN
D E V ILLE D.: Efficient Volume Rendering on the Body Centered
Cubic Lattice Using Box Splines. Tech. Rep. TR 2009-04, Simon
Fraser University SFU-CMPT, 3 2009.
[KEP08] K IM M., E NTEZARI A., P ETERS J.: Box spline reconstruction on the face-centered cubic lattice. IEEE Transactions on
Visualization and Computer Graphics 14, 6 (2008), 1523–1530.
[LL03] L EVIN A., L EVIN D.: Analysis of quasi-uniform subdivision. Applied and Computational Harmonic Analysis 15, 1
(2003), 18 – 32.
[LMS08] LYCHE T., M ANNI C., S ABLONNIÈRE P.: Quasiinterpolation projectors for box splines. Journal of Computational and Applied Mathematics 221, 2 (2008), 416 – 429. Special Issue: Recent Progress in Spline and Wavelet Approximation.
[LS75] LYCHE T., S CHUMAKER L. L.: Local spline approximation methods. J. Approximation Theory 15, 4 (1975), 294–325.

[CL87] C HUI C. K., L AI M. J.: A multivariate analog of Marsden’s identity and a quasi-interpolation scheme. Constr. Approx.
3, 2 (1987), 111–122.

Sampling theorem of stationary
[Miy59] M IYAKAWA H.:
stochastic variables in multidimensional space. Journal of the
Institute of Electronic and Communication Engineers of Japan
42 (1959), 421–427.

[Csé05] C SÉBFALVI B.: Prefiltered gaussian reconstruction for
high-quality rendering of volumetric data sampled on a bodycentered cubic grid. In IEEE Visualization (2005), pp. 311–318.

[ML94] M ARSCHNER S. R., L OBB R. J.: An Evaluation of Reconstruction Filters for Volume Rendering. In Proceedings of the
IEEE Conference on Visualization (1994), pp. 100–107.

[Cse08] C SEBFALVI B.: An evaluation of prefiltered reconstruction schemes for volume rendering. Visualization and Computer
Graphics, IEEE Transactions on 14, 2 (March-April 2008), 289–
301.

[MMK∗ 98] M ÖLLER T., M UELLER K., K URZION Y., M ACHI RAJU R., YAGEL R.: Design of Accurate and Smooth Filters
for Function and Derivative Reconstruction. Proceedings of the
Symposium on Volume Visualization (Oct 1998), 143–151.

[CVDV07] C ONDAT L., VAN D E V ILLE D.: Quasi-interpolating
spline models for hexagonally-sampled data. IEEE Transactions
on Image Processing 16, 5 (May 2007), 1195–1206.

[MMMY97] M ÖLLER T., M ACHIRAJU R., M UELLER K.,
YAGEL R.: A Comparison of Normal Estimation Schemes.
In Proceedings of the IEEE Conference on Visualization (Oct.
1997), pp. 19–26.

[deB68] DE B OOR C.: On uniform approximation by splines. J.
Approximation Theory 1 (1968), 219–235.
[deB01] DE B OOR C.: A practical guide to splines, revised ed.,
vol. 27 of Applied Mathematical Sciences. Springer-Verlag, New
York, 2001.
[dHR93] DE B OOR C., H ÖLLIG K., R IEMENSCHNEIDER S.: Box
Splines, vol. 98 of Applied Mathematical Sciences. SpringerVerlag, New York, 1993.
[DK93] D UTTA ROY S. C., K UMAR B.: Handbook of Statistics,
vol. 10. Elsevier Science Publishers B. V., N. Holland, 1993,
ch. Digital Differentiators, pp. 159–205.
c 2009 The Author(s)
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

[MN88] M ITCHELL D. P., N ETRAVALI A. N.: Reconstruction
Filters in Computer Graphics. In Computer Graphics (Proceedings of SIGGRAPH 88) (Aug. 1988), vol. 22, pp. 221–228.
[Möl99] M ÖLLER T.: Spatial Domain Filter Design. PhD thesis,
Ohio State University, USA, June 1999.
[MSE∗ 07] M ENG T., S MITH B., E NTEZARI A., K IRKPATRICK
A. E., W EISKOPF D., K ALANTARI L., M ÖLLER T.: On visual
quality of optimal 3D sampling and reconstruction. In Graphics
Interface 2007 (May 2007), pp. 265 – 272.
[PM62]

P ETERSEN D. P., M IDDLETON D.:

Sampling and

A. Entezari et al / Quasi-interpolation on the BCC Lattice

1022

Cartesian

BCC

Figure 4: Reconstruction of Carp dataset at a resolution of 6% of the ground truth in Figure 2. First row the raw dataset is
rendered and second row quasi-interpolation is employed. The Cartesian column are rendered with tricubic B-spline and BCC
column with quintic box spline.

Cartesian

BCC

Figure 5: Reconstruction of Carp dataset at a resolution of 6% of the ground truth in Figure 2. Zoomed in view of Figure 4.
First row the raw dataset is rendered and second row quasi-interpolation is employed. The Cartesian column are rendered with
tricubic B-spline and BCC column with quintic box spline.

Reconstruction of Wave-Number-Limited Functions in NDimensional Euclidean Spaces. Information and Control 5, 4
(Dec. 1962), 279–323.

Computer Graphics and Algorithms, Vienna University of Technology (December 2002).

[SF73] S TRANG G., F IX G. J.: An analysis of the finite element
method. Prentice-Hall Inc., Englewood Cliffs, N. J., 1973. Series
in Automatic Computation.

[Uns99] U NSER M.: Splines: A perfect fit for signal and image
processing. IEEE Signal Processing Magazine 16, 6 (November
1999), 22–38. IEEE Signal Processing Society’s 2000 magazine
award.

[TBU00] T HÉVENAZ P., B LU T., U NSER M.: Interpolation revisited. IEEE Transactions on Medical Imaging 19, 7 (July 2000),
739–758.

[Vai93] VAIDYANATHAN P.: Multirate Systems and Filter Banks.
Signal Processing. Prentice Hall, Englewood Cliffs, New Jersey
07632, 1993.

[TMG01] T HEUSSL T., M ÖLLER T., G RÖLLER E.: Optimal Regular Volume Sampling. In Proc of the IEEE Conf on Visualization
2001 (Oct 2001), pp. 91–98.

[VBU∗ 04] VAN D E V ILLE D., B LU T., U NSER M., P HILIPS W.,
L EMAHIEU I., VAN DE WALLE R.: Hex-Splines: A Novel Spline
Family for Hexagonal Lattices. IEEE Trans. on Img Proc. 13, 6
(June 2004), 758–772.

[TMMG02] T HEUSSL T., M ATTAUSCH O., M ÖLLER T.,
G RÖLLER E.: Reconstruction schemes for high quality raycasting of the body-centered cubic grid. TR-186-2-02-11, Institute of
c 2009 The Author(s)
Journal compilation c 2009 The Eurographics Association and Blackwell Publishing Ltd.

