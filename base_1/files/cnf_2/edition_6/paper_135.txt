DOI: 10.1111/j.1467-8659.2010.01733.x
Eurographics Symposium on Rendering 2010
Jason Lawrence and Marc Stamminger
(Guest Editors)

Volume 29 (2010), Number 4

Interactive Rendering of Non-Constant, Refractive Media
Using the Ray Equations of Gradient-Index Optics
Chen Cao†
†

Zhong Ren†‡

Baining Guo‡

State Key Lab of CAD&CG, Zhejiang University

‡

Kun Zhou†
Microsoft Research Asia

Abstract
Existing algorithms can efficiently render refractive objects of constant refractive index. For a medium with a
continuously varying index of refraction, most algorithms use the ray equation of geometric optics to compute
piecewise-linear approximations of the non-linear rays. By assuming a constant refractive index within each tracing step, these methods often need a large number of small steps to generate satisfactory images. In this paper,
we present a new approach for tracing non-constant, refractive media based on the ray equations of gradientindex optics. We show that in a medium of constant index gradient, the ray equation has a closed-form solution,
and the intersection point between a ray and the medium boundaries can be efficiently computed using the bisection method. For general non-constant media, we model the refractive index as a piecewise-linear function and
render the refraction by tracing the tetrahedron-based representation of the media. Our algorithm can be easily
combined with existing rendering algorithms such as photon mapping to generate complex refractive caustics at
interactive frame rates. We also derive analytic ray formulations for tracing mirages – a special gradient-index
optical phenomenon.
Categories and Subject Descriptors (according to ACM CCS): Computer Graphics [I.3.7]: Three-Dimensional
Graphics and Realism—Color, shading, shadowing, and texture

1. Introduction
The refraction of light when it passes through refractive media is an important optical phenomenon for computer graphics. It can generate many beautiful effects, ranging from
complex caustics patterns of glass objects to a mirage in the
sunset and heat shimmering over a hot road surface, which
significantly enhance the realism of computer synthesized
images. The rendering of refractive media has thus gained
sustained interest from researchers, going back from the conventional off-line ray tracing [Whi80] to recent interactive
techniques [SZS∗ 08, WZHB09].
Existing methods can efficiently render refractive objects
of constant refractive index using Snell’s law at the boundaries of the objects. For non-constant media generated for
example by heat gradients, variation of the growth condition
of crystals, human engineering, or variation of biological tissue properties, most methods use the ray equation of geometric optics to compute piecewise-linear approximations of the
non-linear rays. They assume a nearly constant index within
each step, and often need to trace the rays in a large number
of small steps, leading to high rendering cost.

Figure 1: Rendering of non-constant, refractive media at 12
fps. The image resolution is 640 × 480. Combined with photon mapping, our algorithm is able to render both the view
ray distortion and caustics generated by the dynamic nonconstant media.
tracing the non-linear rays in non-constant, refractive media.
Based on the observation that most non-constant refractive
media seen in everyday life have a smoothly varying index
of refraction, we model the index as a piecewise-linear function, and use the ray equations of gradient-index optics to
outline a general ray tracing algorithm. Compared with pre-

In this paper, we present a new approach for efficiently
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

1375

1376

C. Cao, Z. Ren, B. Guo & K. Zhou / Interactive Rendering of Non-Constant, Refractive Media

vious methods that use the ray equation of geometric optics,
our algorithm can take larger tracing steps and achieves up to
an order of magnitude speedups in our experiments. Specifically, we make the following technical contributions:
• An efficient algorithm for tracing refractive objects of
constant index gradient. We show that the refracted rays in
such objects have an analytic formulation. The algorithm
makes use of this formulation to quickly locate the intersection points between the rays and the object boundaries.
• An efficient algorithm for tracing non-constant media of
which the refractive index is a piecewise-linear function
defined on a tetrahedral mesh. The algorithm can be extended to handle the voxel-based representation of media.
• Analytic ray formulations for tracing mirages, which we
show is a special case of gradient-index optics.
We next briefly review related work in Section 2. The ray
formulations and tracing algorithms for non-constant media
are detailed in Section 3. In Section 4, we present results
and show that our algorithms can be combined with photon
mapping to render complex caustics and view ray distortions
at interactive frame rates.
2. Related work
For objects of constant refractive index, refraction only occurs at the object boundaries. A majority of existing rendering algorithms, such as conventional ray tracing [Whi80],
beam tracing [HH84] and photon mapping [Jen96], use
Snell’s law to compute the refracted rays. To achieve interactive rendering performance, some algorithms restrict the
refraction to happen only on one side of the object, and
compute the refracted rays by indexing into a perturbed
texture which describes nearby geometries [Oli00] or an
environment map [LKM01]. Wyman [Wym05] proposed a
two-pass, image-space approach to render refraction of a
distant environment through two interfaces, and later extended this approach to render caustics [WN09]. Walter et
al. [WZHB09] recently introduced a fast method to find
paths that connect points inside and outside a refractive object with triangle mesh boundaries, assuming that paths cross
the boundary only once.
Early methods [BTL90] render mirages (i.e., refraction
in atmosphere) by refracting the ray according to Snell’s
law at each interface of a series of homogeneous layers.
Researchers subsequently proposed to use the ray equation
of geometric optics [BW99], to trace the nonlinear rays inside a medium of varying refractive index [SL96, Grö95,
GMAS05, GMAS06, MGS07]. Munoz [MGS07] analyzed
the performance of different numerical schemes for solving the ray equation. The nonlinear ray tracing process
has also been greatly accelerated in recent GPU algorithms
[WSE04]. Zhao et al. [ZHF∗ 07] proposed a interactive technique for simulating and rendering of heat shimmering and
mirages. Ihrke et al. [IZT∗ 07] introduced “eikonal rendering”, a wavefront-based propagation technique for single

scattering rendering. Sun et al. [SZS∗ 08] described a GPU
accelerated volume photon mapping technique based on a
novel octree representation and an adaptive photon tracing scheme. All these techniques aim to find a piecewiselinear approximation of the nonlinear path. They assume that
the refractive index of the medium is constant within each
ray/photon tracing step. A relatively large number of steps
are often needed for smoothly-varying indices, leading to
high rendering cost.
Stam and Languenou [SL96] proposed to model the refractive index as a superposition of a set of weighted kernels,
or blobs, and derived an analytical expression for the perturbation of the ray due to the superposition of blobs. This
expression, however, is based on a first-order Taylor expansion of the perturbations, which would introduce significant
errors when attempting to step over a large distance along
the ray. Garg and Mitra [GM02] derived an analytic ray formulation for tracing mirages by assuming that the refractive
index varies linearly with the height. According to the study
of mirage formation [KTG77], the refractive index is an exponential function of the height. We derive analytic ray formulations for tracing this special non-constant medium.
This paper focuses on single scattering effects in refractive media. The media radiance due to multiple scattering
can be computed using non-linear volume photon mapping
[GMAS05]. Applying the ray equations introduced in this
paper to multiple scattering remains as a future work.
Gradient-index optics is the branch of optics covering optical effects produced by a gradual variation of the refractive index of a material [Mar78]. Tracing rays in gradientindex materials has been extensively studied in the field of
optics to help implement these materials into optical systems [Mar70, SKG82, Qia84]. For a constant index gradient,
the solution of the ray equation has been proved to be an
analytic curve [Qia84].
3. Tracing Non-Constant, Refractive Media
In this section, we first describe the analytic ray formulation and the ray tracing algorithm for refractive objects of
constant index gradient – the simplest case of non-constant
refractive media. Then we extend the algorithm to handle
general non-constant refractive media and mirages.
3.1. Objects with Constant Index Gradient
Consider a closed triangle mesh, and suppose that the refractive index n inside the mesh is given by:
n(z) = n(0) + αz,
where the z axis is aligned with the direction of the gradient
and α is the magnitude of the gradient.
Ray Formulation According to the results in gradientindex optics [Mar78, Qia84], in a constant gradient-index
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

1377

C. Cao, Z. Ren, B. Guo & K. Zhou / Interactive Rendering of Non-Constant, Refractive Media

x
2xf + r(z)
f

xf
-r(z)

zf

θ0

r(z)

z

(0,0)
(a)

Figure 2: Non-linear rays in constant gradient-index media.
Two rays with different incidence angles are shown.
medium, a ray travels in the ray plane formed by the gradient
direction (i.e., the z axis) and v 0 , the ray direction when the
ray enters the medium. If the angle between v 0 and the z axis
is less than π/2, the ray path (the orange curve in Figure 2)
can be described as an analytical curve on the ray plane:
x = r(z) =

n(0) cos θ0
ln 2cz + b + 2α A + bz + cz2
α

z

,

(1)

0

where the x axis is on the ray plane and perpendicular to the
z axis, and θ0 is the angle formed by v 0 and the x axis. Other
parameters are defined as
A = n2 (0) sin2 θ0 ,

b = 2αn(0),

c = α2 .

If the angle between v 0 and the z axis is equal to or greater
than π/2, the ray path (the blue curve in Figure 2) can be
divided into two segments at a point f = (x f , z f ), where
n(0) cos θ0 − n(0)
,
α
The first segment is described by
zf =

x = −r(z),

x f = −r(z f ).

0 ≤ x ≤ xf ,

(2)

and the second segment is given by
x = 2x f + r(z),

x > xf .

(3)

As shown in Figure 2, in all cases the ray’s tangent gradually becomes parallel to the gradient direction as the ray
travels in the medium.
Ray Intersection Test Given the analytic ray representation, the intersection test of the ray with the object’s boundaries can be reduced to a 2D problem on the ray plane. A
boundary triangle is first intersected with the ray plane, resulting in a line segment, which is then intersected with the
ray.
The intersection of the ray with a line segment, however,
cannot be analytically calculated due to the transcendental
function ln in the ray formulation. We instead resort to numerical solutions and use the bisection method to compute
the intersection. Note that if the triangle size or the magnitude of the gradient is very large, the bisection method
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

(b)

Figure 3: A 2D illustration of the octree construction for
a triangle mesh (left) and a tetrahedral mesh (right). The
refractive index function varies drastically in the region
marked with bold lines, thus the nodes in the finest level there
cannot be merged to nodes in the upper octree levels.
may mistakenly omit some intersection points. In practice,
we never found this problem for all of our test scenes.
Ray Tracing Ray tracing of refractive objects with constant
index gradient is just like conventional ray tracing – rays are
generated starting from the eye (or light sources) and traced
across the scene. Spatial hierarchies are used to prune intersection tests during ray traversal. Our algorithm uses octrees
as the spatial acceleration structure.
Given a tree depth, an octree is first constructed for the
boundary triangles of the refractive object (see Figure 3(a)).
During ray tracing, when a ray enters the object’s bounding
box, we compute the intersection point of the ray with the
bounding box as the starting point of the ray, and traverse
the octree to find the leaf node where the point is located.
For this node, we use the aforementioned ray formulation
and intersection test method to compute the first intersection
point of the ray with the six faces of the node and the triangles contained in the node. Note that for internal nodes that
do not contain any triangles, only the six node faces need
to be considered. The computed intersection point is set as
the new starting point of the ray, and the ray’s tangent direction at the point is taken as the new ray direction. The whole
process is iterated until the ray travels out of the object.
We adopt the linear octree structure described in
[SZS∗ 08]: an octree is represented as a dense 3D array,
where each element indicates the tree level of the leaf node
that covers the voxel corresponding to the element. This
structure is appropriate for fast construction and easy access
of the octree on the GPU. The octree depth is determined
so that the node size at the finest depth is comparable to the
average edge length of the mesh.
3.2. General Non-Constant Refractive Media
We model the refractive index of general non-constant media as a piecewise-linear function defined on a tetrahedral
mesh. Each vertex of the tetrahedral mesh is assigned an index value, and the refractive index inside each tetrahedron

1378

C. Cao, Z. Ren, B. Guo & K. Zhou / Interactive Rendering of Non-Constant, Refractive Media

is the linear interpolation of the indices of the tetrahedron’s
four vertices.
Suppose that the refractive index at the four vertices of a
tetrahedron is {nk , k = 1, . . . , 4}, respectively. It can be easily proven that the index gradient within the tetrahedron is
constant and given by

z

θ0

(a) inferior mirage

The ray formulation and intersection test method described in the preceding section can be directly applied to
each tetrahedron, and the tetrahedral mesh can be simply
traced one tetrahedron at a time until rays travel out of the
mesh.
To fully utilize the the smoothness of the index variation,
we build an octree for the tetrahedral mesh (see Figure 3(b)).
All tetrahedra are first voxelized into the bounding volume
of the mesh. Each voxel is associated with a list of tetrahedra
that it may intersect. Then, starting from the finest tree level
and moving towards the root, we construct the octree one
level at a time. At each tree level, for each node and its seven
sibling nodes, we merge them into their parent node at the
upper tree level if the following conditions are satisfied:
• None of them is associated with a boundary tetrahedron;
• The differences of the gradients of all of their associated
tetrahedra are less than a threshold ε.
During ray tracing, we traverse the constructed octree to
find the current leaf node a ray enters into. If the ray enters a leaf node that is not at the finest depth, the ray will
travel along an analytic curve within the node since the index gradient within the node is approximately constant. And
we only need to compute the intersection point of the ray
with the six faces of the node. If the leaf node is at the finest
depth, we need to trace the ray one tetrahedron at a time until
the ray leaves the node and enters into other nodes, or travels
out of the object.
We use an octree instead of a kd-tree as our acceleration
structure due to the relatively lower cost of constructing a octree. This is important for interactive rendering of dynamic
media since the acceleration structure needs to be updated at
run time.
Voxel-based Representation Our algorithm can be easily
adapted to handle the voxel-based representation of nonconstant media, which is used by recent interactive techniques [IZT∗ 07, SZS∗ 08].
With the voxel-based representation, the refractive index
is defined at each voxel. The index gradient is computed using the central difference. A triangle mesh is used to define
the medium boundary.

S2(z)
x

(b) superior mirage

Figure 4: The ray paths of mirages.

(4)

where Ak , N k are the area and normal of the face opposite to
vertex k, respectively, and T is the volume of the tetrahedron.

f(zf, xf)
θ0
(0,0)

x

(0,0)

S1(z)

z0

f(zf, xf)

4

Ak nk
N k,
∇n = ∑
k=1 T

z

I(z)

We again use octrees as the acceleration structure. The
mesh triangles are first rasterized into the voxels, each of
which is associated with a list of triangles that the voxel may
intersect. The voxels are taken as the finest-level nodes of the
octree. Then, similar to what we do for the tetrahedron-based
representation, a bottom-up process is carried out to merge
small nodes into large nodes if two conditions are satisfied:
1) none of the nodes to be merged is associated with any
triangles; 2) the differences of the gradients of the nodes to
be merged is less than a threshold ε, or the differences of the
indices of the nodes is less than a threshold δ.
The tracing algorithm is simple. When a ray enters a node
associated with boundary triangles, it is first intersected with
the triangles associated with the node to test if it travels out
of the object. In other cases, the ray is only intersected with
the six faces of the node.
3.3. Mirages
Mirage formation is known to be the result of the variation
of refractive index of air mainly due to temperature gradients. According to the study by Khular et al. [KTG77], for
an inferior mirage which occurs when the air above the line
of sight is colder than that below, the refractive index is the
following function of the height:
n2 (z) = µ20 + µ21 (1 − exp(−βz)),

(5)

where z represents the height above the ground, µ0 =
1.000233 is the refractive index at the earth surface, and
µ1 = 0.4584, β = 2.303 are constants.
This model assumes constant refractive index at a given
altitude, and the direction of the index gradient is perpendicular to the earth surface. For a small region of the earth surface, which is approximately planar, the gradient direction
can be assumed to be constant. According to the derivation
in Appendix A, we can get the ray formulation:
x = I(z) =

n(z0 ) cos θ0
√
ln
β B

√

√

B+

B−

B −C exp(−βz)

B −C exp(−βz)

z

, (6)
z0

where
B = µ20 + µ21 − (n(z0 ) cos θ0 )2 ,

C = µ21 .

Note that the origin of the ray plane is set to the projection
of the ray origin on the earth surface, and z0 is the height of
the ray origin, as shown in the Figure 4(a).
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

1379

C. Cao, Z. Ren, B. Guo & K. Zhou / Interactive Rendering of Non-Constant, Refractive Media

For superior mirage the refractive index is given by:
n2 (z) = µ20 + µ21 (exp(−βz)).

(7)

The ray formulation can be derived as
x = S1 (z) =

for cos θ0 ≤

D +C exp(−βz) +

n(z0 ) cos θ0
√
ln
β D

√

D
√
D +C exp(−βz) − D

µ20
µ20 +µ21 exp(−βz0 )

z

(8)
z0

(see the orange curve in Fig-

(a) const. index, 83.2 fps

(b) const. grad. (our method),47.1 fps

(c) piecewise-linear, 4.2 fps

(d) piecewise-linear, 46.5 fps

ure 4(b)),and

for cos θ0 >

−2n(z0 ) cos θ0
√
arctan
β −D
µ20
µ20 +µ21 exp(−βz0 )

−

C
exp(−βz) − 1
D

z

z0

(9)

(see the blue curve in Figure

4(b)), where
D = µ20 − (n(z0 ) cos θ0 )2 .
The above ray equations assume the angle between v 0 and
the gradient direction is less than π/2. If the angle is equal
to or larger than π/2, the ray equations can be divided into
two segments, as in the constant index gradient case. And
the fold point is determined by solving n(z f ) = n(z0 ) cos θ0
for the corresponding type of mirage, which is:
2

2

n (z0 ) cos
1
z f = − ln 1 −
β
µ21

θ0 − µ20

,

x f = I(z f ).

1
z f = − ln
β

350
300

piecewise-linear method
our method

250

200
150

100
50

for inferior mirages, and
2

Figure 5: Comparison of our method (b) with the piecewiselinear approximation method with comparable quality (c)
and similar performance (d). The constant refractive index
result (a) is shown to reveal the influence of index gradient.

render time (ms)

x = S2 (z) =

0

2

n (z0 ) cos
µ21

θ0 − µ20

0

,

x f = S2 (z f ).

for superior mirages.
Musgrave [Mus90] pointed out that mirages are strong because of total internal reflection due to Brewster’s critical
angle of incidence. We analytically give the fold point, the
exact point that the total internal reflection happens. The ray
paths and fold points of mirages are plotted in Figure 4.
In rendering mirages, we assume the earth surface is represented by a set of quads within the range of sight. The
quads are extruded along the lines connecting the earth center and the quad vertices to generate a set of frustums, which
form the atmosphere volume. Within each frustum, the refractive index is described by equation 5 or equation 7, taking the normal of the quad as the gradient direction. Therefore, as long as we know the origin and direction of the ray
when it enters a frustum, we can obtain the ray equations.
Tracing rays in frustums is as simple as that in tetrahedra. Based on the analytic formulation, the ray is intersected
with the boundary faces of the current frustum to calculate
the new ray origin and direction. This process continues until the ray shoots out of the atmosphere volume, or hits an
object. The number of frustums used is typically less than
ten. Acceleration structures are thus unnecessary.
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

0.01

0.02

0.03

0.04

0.05

0.06

0.07

0.08

magnitude of index gradient

Figure 6: Render time for different magnitudes of index gradient.
4. Experimental Results
We have implemented the described algorithms on an
NVIDIA GTX 285 graphics card using CUDA. Our GPU ray
tracing implementation follows the per-ray persistent whilewhile traversal algorithm [AL09]. All images are generated
at 640 × 480.
Figure 5 shows the rendering results of a Bunny model
of constant index gradient. Note that the image rendered by
our algorithm (Figure 5(b)) is the ground truth as our algorithm is based on the precise, analytic ray formulation and
does not contain any approximation. To compare our algorithm with the piecewise-linear approximation method, we
carefully tuned the tracing step size to generate an image of
comparable quality (Figure 5(c)). In this case, our algorithm
is 10 times faster. The render time of the piecewise-linear
method also increases with the magnitude of the gradient
since it needs smaller step sizes to achieve accurate approximation. In contrast, our algorithm is insensitive to the gradient magnitude, as shown in Figure 6. Increasing the tracing
step size in the piecewise-linear method can improve the ren-

1380

C. Cao, Z. Ren, B. Guo & K. Zhou / Interactive Rendering of Non-Constant, Refractive Media

Figure 7: A tetrahedral mesh (5,442 tetrahedra) with
spatially-variant refractive indices is rendered at 25 fps.

(a) 15.6 fps

(b) 20.0 fps

Figure 8: Rendering of heat shimmering with surface caustics. The effect is more obvious in the accompanying video.
dering performance but lead to severe artifacts, as shown in
(Figure 5(d)).
Figure 7 shows the rendering results of a tetrahedral mesh
with spatially-variant refractive index. The indices are obtained by sampling the luminance of two synthesized solid
textures [KFCO∗ 07] at the tetrahedron vertices. The 2D exemplar textures are shown as insets.
The number of tetrahedra required for plausible rendering
results mainly depends on the spatial variation of the refractive index – more tetrahedra are required to faithfully represent significantly varying index functions. As demonstrated
in Figure 7 and the accompanying video, with several thousands tetrahedra, our algorithm is able to reveal the interesting patterns in the synthesized textures via the distortion of
view rays. The ray tracing time scales
√ with the number of
tetrahedra, K, roughly at the rate of 3 K. This is because the
average number of traversed
tetrahedra of a ray is approxi√
mately proportional to 3 K.
Figure 1 shows the rendering of a dynamic refractive
medium represented by 128 × 128 × 128 voxels. Our ray
tracer is combined with the GPU-based photon mapping algorithm [ZHWG08] to render surface caustics at interactive
frame rates. We carefully tuned the two thresholds when
constructing octrees to guarantee the rendering quality. In
this scene, ε = 0.005 and δ = 0.01 can give satisfactory results. Note that Sun et al. [SZS∗ 08] also construct an octree
describing the regions of space in which the refractive index
is nearly constant, i.e., the gradient is nearly zero. Our algorithm merges nodes with similar gradients in addition to
that with similar refractive indices. This typically leads to a
coarser octree with larger nodes and superior performance.
In this scene, we can get up to 3× speedups over their approach.

(a) our result

(b) photograph

Figure 9: Rendering of a mirage. Our rendering result convincingly captures the so-called “Omega” sunset effect and
is directly compared with a photograph taken at sunset.
Grid Size

323

643

1283

2563

const. grad. index (Figure 5(b))
voxel-based rep. (Figure 1, 8)
tetrahedra rep. (Figure 7)

0.63
0.66
1.1

4.1
5.2
5.2

29.6
41.9
33.0

224.1
335.5
232.7

Table 1: Memory consumption (in megabytes) for the octree voxelization under different grid sizes, including the linear octree structure and the array of the overlapped triangles/tetrahedra in each octree node. The latter array is not
needed for the voxel-based representation (Figure 1, 8).
In Figure 8 and the accompanying video, we show the interactive rendering of heat shimmering. The shimmering is
simulated by Perlin noise [Per02]. Combined with photon
mapping, our algorithm is able to render both the view ray
distortion and dynamic caustics generated by heat shimmering. This effect has not been observed in previous interactive
applications. Note that the memory consumption for our octree voxelization is comparable with that of [SZS∗ 08], as
reported in Table 1.
Finally, Figure 9 shows the mirage image rendered by our
algorithm, compared to a real photograph. We achieve very
convincing results at real-time frame rates.
5. Conclusion
We have presented a new ray tracing approach for nonconstant refractive media based on the ray equations of
gradient-index optics. To our knowledge, these equations
have not appeared before in the computer graphics literature. Our algorithm models the refractive index as piecewiselinear functions, traces rays along analytically-represented
curves, and is thus more efficient than previous piecewiselinear approximation methods. We also derive analytic
ray formulations for tracing mirages – a special gradientindex optical phenomenon in atmosphere. We believe our
work will stimulate future research into the application of
gradient-index optics in computer graphics.
One limitation of our method is the discontinuity of gradients at primitive boundaries – while the refractive index
is guaranteed to be smooth in our piecewise-linear representation, the gradient may be discontinuous at the tetrahedron
or voxel boundaries. This sometimes leads to visual artifacts
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

1381

C. Cao, Z. Ren, B. Guo & K. Zhou / Interactive Rendering of Non-Constant, Refractive Media

when the mesh is very coarse. The problem may be alleviated by adapting the mesh to the index distribution or developing higher order representations of the index function.
Acknowledgements We would like to thank the anonymous reviewers for their helpful comments. This research
was partially funded by the NSF of China (No. 60825201).
References

[Per02] P ERLIN K.: Improving noise. In Proc. of ACM SIGGRAPH (2002), pp. 681–682.
[Qia84] Q IAO Y.: The solution of the ray-path differential equation in the axial gradient-index media. Acta Optica Sinica 4, 1
(1984), 89–92.
[SKG82] S HARMA A., K UMAR D. V., G HATAK A. K.: Tracing
rays through graded-index media: a new method. Applied Optics
21, 6 (1982), 984–987.
[SL96] S TAM J., L ANGUENOU E.: Ray tracing in non-constant
media. In Rendering Workshop (1996), pp. 225–234.

[AL09] A ILA T., L AINE S.: Understanding the efficiency of ray
traversal on gpus. In HPG ’09 (2009), pp. 145–149.

[SZS∗ 08] S UN X., Z HOU K., S TOLLNITZ E., S HI J., G UO B.:
Interactive relighting of dynamic refractive objects. ACM Trans.
Graph. 27, 3 (2008), 35:1–35:9.

[BTL90] B ERGER M., T ROUT T., L EVIT N.: Ray tracing mirages. IEEE CG&A 10, 3 (1990), 36–41.

[Whi80] W HITTED T.: An improved illumination model for
shaded display. Commun. ACM 23, 6 (1980), 343–349.

[BW99] B ORN M., W OLF E.: Principles of Optics: Electromagnetic Theory of Propagation, Interference and Diffraction of
Light. Cambridge University Press, 1999.

[WN09] W YMAN C., N ICHOLS G.: Adaptive caustic maps using
deferred shading. Comput. Graph. Forum 28, 2 (2009), 309–318.

Nonlinear raytracing:
[GM02] G ARG G., M ITRA N. J.:
Mirages, 2002.
http://graphics.stanford.edu/courses/cs348bcompetition/cs348b-02/mitra_garg.
[GMAS05] G UTIERREZ D., M UÑOZ A., A NSON O., S ERON
F. J.: Non-linear Volume Photon Mapping. In EGSR’05 (2005),
pp. 291–300.
[GMAS06] G UTIERREZ D., M UÑOZ A., A NSON O., S ERON
F. J.: Simulation of atmospheric phenomena. Computer &
Graphics 20, 6 (2006), 994–1010.
[Grö95] G RÖLLER E.: Nonlinear ray tracing: visualizing strange
worlds. The Visual Computer 11, 5 (1995), 263–274.
[HH84] H ECKBERT P. S., H ANRAHAN P.: Beam tracing polygonal objects. In Proceedings of SIGGRAPH’84 (1984), pp. 119–
127.
[IZT∗ 07] I HRKE I., Z IEGLER G., T EVS A., T HEOBALT C.,
M AGNOR M., S EIDEL H.-P.: Eikonal rendering: efficient light
transport in refractive objects. ACM Trans. Graph. 26, 3 (2007),
59.

[WSE04] W EISKOPF D., S CHAFHITZEL T., E RTL T.: Gpu-based
nonlinear ray tracing. Comput. Graph. Forum 23, 3 (2004), 625–
633.
[Wym05] W YMAN C.: An approximate image-space approach
for interactive refraction. ACM Trans. Graph. 24, 3 (2005), 1050–
1053.
[WZHB09] WALTER B., Z HAO S., H OLZSCHUCH N., BALA K.:
Single scattering in refractive media with triangle mesh boundaries. ACM Trans. Graph. 28, 3 (2009), 92:1–92:8.
[ZHF∗ 07] Z HAO Y., H AN Y., FAN Z., Q IU F., CHUAN K UO Y.,
K AUFMAN A., M UELLER K.: Visual simulation of heat shimmering and mirage. IEEE TVCG 13 (2007), 179–189.
[ZHWG08] Z HOU K., H OU Q., WANG R., G UO B.: Real-time
kd-tree construction on graphics hardware. ACM Trans. Graph.
27, 5 (2008), 126.

Appendix A: Derivation of Ray Equations
We start the derivation from the well-known vector differential equation for the ray trajectories [BW99]:

[Jen96] J ENSEN H. W.: Global illumination using photon maps.
In Rendering Workshop (1996), pp. 21–30.
[KFCO∗ 07]

KOPF J., F U C.-W., C OHEN -O R D., D EUSSEN O.,
L ISCHINSKI D., W ONG T.-T.: Solid texture synthesis from 2d
exemplars. ACM Trans. Graph. 26, 3 (2007), 2.

[KTG77] K HULAR E., T HYAGARAJAN K., G HATAK A. K.: A
note on mirage formation. American Journal of Physics 45
(1977), 90–92.
[LKM01] L INDHOLM E., K LIGARD M. J., M ORETON H.: A
user-programmable vertex engine. In Proceedings of SIGGRAPH’01 (2001), pp. 149–158.
[Mar70] M ARCHAND E. W.: Ray tracing in gradient-index media. Journal of the Optical Society of America 60, 1 (1970), 1–7.
[Mar78] M ARCHAND E. W.: Gradient Index Optics. Academic
Press, 1978.
[MGS07] M UÑOZ A., G UTIERREZ D., S ERÓN F. J.: Optimization techniques for curved path computing. Vis. Comput. 23, 7
(2007), 493–502.
[Mus90] M USGRAVE F. K.: A note on ray tracing mirages. IEEE
Comput. Graph. Appl. 10, 6 (1990), 10–12.
[Oli00] O LIVEIRA G.: Refractive texture mapping, part two,
2000.
http://www.gamasutra.com/features/20001117/oliveira 01.htm.
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

d
ds

n

drr
ds

(10)

= ∇n,

where n is the refractive index function, r is the variableposition vector on the ray, and s is the arc length.
For now, let us assume that the direction of the index gradient of the media is constant, which is true for both the constant index gradient and mirage cases. And let us also take
the z axis as the direction of the gradient. Equation 10 can be
written with respect to the three components of r :
d
ds

n

dx
ds

= 0,

d
ds

n

dy
ds

d
ds

= 0,

n

dz
ds

=

∂n
,
∂z

(11)

and the direction cosines can be defined:
p0 = n

dx
,
ds

q0 = n

dy
,
ds

l=n

dz
.
ds

(12)

Equation 11 implies that the direction cosines along the x
and y axes are constant along the ray, thus the notation p0
and q0 are used for these constants. The direction cosines
and the refractive index are related by:
p20 + q20 + l 2 = n2

dx
ds

2

+

dy
ds

2

+

dz
ds

2

= n2 .

(13)

1382

C. Cao, Z. Ren, B. Guo & K. Zhou / Interactive Rendering of Non-Constant, Refractive Media

Suppose the position of the ray origin is given by Q0 =
(x0 , y0 , z0 ), the position of any point Q = (x, y, z) on the ray
can be obtained by integration:
Q

x = x0 +

Q0
Q

y = y0 +

Q0

dx
ds = x0 + p0
ds
dy
ds = y0 + q0
ds

Q
Q0
Q
Q0

ds
= x0 + p0
n
ds
= y0 + q0
n

z
z0
z
z0

dz
,
l
(14)
dz
.
l

and the ray equations for the l ≤ 0 case can be obtained similarly as above.
Inferior Mirage occurs when the air above the line of sight
is colder than that below. Khular et al. [KTG77] gave an empirical representation of the refractive index:
n2 (z) = µ20 + µ21 (1 − exp(−βz)),

Let us take the x axis as the orthogonalization of the initial
ray direction with respect to z, thus we have q0 = 0 and y = 0
for all points on the ray.
In the following, we derive the closed-form of the ray
equation for the constant index gradient and mirage cases
on the ray plane formed by the initial ray direction v 0 and
the gradient direction.

(19)

where z represents the height above the ground, µ0 =
1.000233 is the refractive index at the earth surface, and
µ1 = 0.4584, β = 2.303 are constants. We set the origin of
the ray plane to the projection of the ray origin on the earth
surface, so that x0 = 0 and z0 is the height of the ray origin.
Substituting equation 19 to equation 13, we get
µ20 + µ21 (1 − exp(−βz)) − p20 ,

l=

(20)

Substituting equation 20 into equation14, we get:
Constant Gradient-Index Media
In constant gradient-index media, the refractive index is
given by:
(15)

n(z) = n(0) + αz

where α is the magnitude of the gradient. Without loss of
generality we put the origin of the ray plane at the origin of
the ray, so that x0 = z0 = 0 in equation 14 and n(0) is the
refractive index at the ray origin.
Substituting equation 15 into equation 13 and assuming
the angle between v 0 and the z axis is less than π/2 so that
dz
> 0, we get
l = n ds
l=

A + bz + cz2 ,

b = 2αn(0),

c = α2 ,

(17)

and θ0 is the angle formed by v 0 and the x axis. Note that
dx
p0 = n(0) = n(0) cos θ0 .
ds
Substituting equation 16 into equation 14, we can obtain
the closed-form of the ray equation [Qia84]:
x = r(z) =

n(0) cos θ0
ln 2cz + b + 2α A + bz + cz2
α

(18)

If the angle between v 0 and the z axis is greater than π/2, a
dz
starts as negcase that is not discussed in [Qia84], l = n ds
√
ative value, thus l = − A + bz + cz2 and x = −r(z). This
equation holds until l = 0, which corresponds to the fold
point f = (x f , z f ). After the ray passes the fold point, l becomes positive and x = 2x f + r(z). The shift of 2x f is due to
substituting (x f , z f ) into equation 14 as the ray origin.

√

√

B+

B−

B −C exp(−βz)

B −C exp(−βz)

B = µ20 + µ21 − (n(z0 ) cos θ0 )2 ,

z

(21)

,
z0

C = µ21 .

(22)

Superior Mirage occurs when the air below the line of
sight is colder than that above, and the refractive index is
given by [KTG77]:
n2 (z) = µ20 + µ21 (exp(−βz)).

(23)

Substituting equation 23 to equation 13, we get
l=

(µ20 − p20 ) + µ21 (exp(−βz)).

(24)

The form of the analytical integration obtained by substituting equation 24 into equation 14 is dependant on
the sign of (µ20 − p20 ), for the positive case or cos θ0 ≤
µ20
:
2
2
µ0 + µ1 exp(−βz0 )
x=

z
0

n(z0 ) cos θ0
√
ln
β B

where

(16)

where
A = n2 (0) sin2 θ0 ,

x=

n(z0 ) cos θ0
√
ln
β D

D +C exp(−βz) +

D
√
D +C exp(−βz) − D

and for the negative case or cos θ0 >
x=

√

−2n(z0 ) cos θ0
√
arctan
β −D

−

z

(25)

,
z0

µ20
:
2
2
µ0 + µ1 exp(−βz0 )

C
exp(−βz) − 1
D

z

,

(26)

z0

where
D = µ20 − (n(z0 ) cos θ0 )2 .

(27)

Mirages
Below we derive the ray equations for two kinds of mirages,
the inferior mirage and the superior mirage, respectively.
Note that we only derive the ray equations for the l > 0 case,
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

