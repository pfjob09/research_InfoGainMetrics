Navigation Techniques for 2.5D Graph Layout∗
Adel Ahmed†

Seok-Hee Hong‡

School of Information Technologies, University of Sydney

School of Information Technologies, University of Sydney

NICTA, Australia

NICTA, Australia

A BSTRACT
In this paper, we consider the problem of navigating graphs drawn
in 2.5 dimensions. First, we define criteria for good navigation and
then present various methods to satisfy some of the criteria. In
particular, we design and implement methods for trees, clustered
graphs and hierarchical graphs drawn in 2.5 dimensions.
Keywords:
sions.

Navigation, Interaction, Graph Layout, 2.5 Dimen-

Index Terms: H.5.2 [Information Interfaces and Presentation]:
User Interfaces—Algorithms; I.3.6 [Computer Graphics]: Methodology and Techniques—Interaction Techniques
1

I NTRODUCTION

Recently, 2.5D graph visualisation methods have been successfully
designed and applied to the visualisation of large and complex networks, arising from biological networks, social networks and internet networks [4, 3, 14, 13, 12, 15, 16]. However, the corresponding
navigation and interaction methods have not been investigated. Previous methods for graph navigation were mainly focussed on either
2D or 3D.
This paper is organized as follows. In the next section, we review
related work. In Section 3, we present methods for 2.5D navigation
for trees. Section 4 present methods for clustered graphs where the
structure is a path and Section 5 present methods for hierarchical
graphs. Section 6 present methods for clustered graphs where the
structure is a tree. Section 7 concludes.
2

R ELATED W ORK

2.1

Graph Navigation and Interaction with Animation

Techniques and guidelines for navigation and interaction are well
studied topics in Information Visualisation. The most well-known
techniques are Overview and Details and Focus + Context. Simple
interaction methods also include zooming and panning, rotation,
translation, selection and brushing.
For a survey on graph navigation and interaction, see [11].
Some 2D and 3D layout and navigation methods are investigated
in [18, 20, 23] that take Focus+Context techniques into consideration. These methods produces nice layouts and can be used to
visualise large hierarchies, up to a thousand or so nodes. However,
these methods leave behind lots of unused virtual space in 3D environments and unused 2D screen space.
For general graphs, techniques for navigating huge graphs were
presented in two dimensions [17, 8]. For three dimensions, Brandes et al. [5] use the good viewpoint model of [7] to generate a
sequence of viewpoints for an animation.
∗ This

is an extended abstract. For details, see [27]
adel.ahmed@nicta.com.au
‡ e-mail:shhong@it.usyd.edu.au
† e-mail:

Asia-Pacific Symposium on Visualisation 2007
5 - 7 February, Sydney, NSW, Australia
1-4244-0809-1/07/$20.00 © 2007 IEEE

One animated technique to change the view-point in 3D immersive spaces involving zooming and panning and computing a camera path, is presented in [24, 1]. Friedrich and Eades [9] presents
an approach for animating (or morphing) transitions between two
graph drawings according to predefined criteria. Pulo [22] defined
a set of measures for evaluating animations generated by the structural zooming scheme. These measures were evaluated with h-v
tree layout and jewellery box layout [22]. Li [19] defined a technique based on the 1st-order fisheye of a focal node of a clustered
graph to avoid node-node overlap and preserve orthogonal ordering.
2.2

The 2.5D Graph Layout

Recently, 2.5D graph layout methods have been successfully designed and applied for visualisation of large and complex networks, arising from biological networks, social networks and internet networks, like the Polyplane methods draws trees in 2.5D [14]
and Another method to visualise a series of networks in parallel
planes [3, 4]. A new flexible framework MultiPlane methods for
drawing general graphs in 2.5D was presented in [13] for which
the design principle were derived [26].
Algorithms for 2.5D layout of directed graphs and hierarchical
graphs are presented in [15, 16]. Methods for drawing clustered
graphs in 2.5D are described in [12].
2.3

3D Environment, Navigation, and Interaction Criteria

An immersive virtual space is generally used for visualisation of
different types of information in 3D. A virtual view point, orientation and a perspective projection, in the planar geometric projection
class [2], is considered throughout this text as the basis for calculating 2D views of the virtual world. These three parameters are encapsulated as a virtual camera, or “camera” for short. For simplicity
it is assumed that secondary parameters of the virtual camera, such
as the field of view (FOV), are fixed.
Based on the criteria of [9, 22] for 2D and 3D graph layout, we
define criteria for navigation of 2.5D graph layout, namely, preservation of mental map, preservation of orthogonal ordering, minimisation of edge crossings, minimisation of total edge lengths, minimisation of area (or volume), maximisation of symmetry, minimisation of overlapping between nodes, minimisation of node edge
overlapping, minimisation of occlusion, maximisation of angular
resolution between planes, minimisation of intersection between
planes, minimisation of intersection between planes and edges,
minimisation of intersection between planes and nodes, and preservation of constraints: analysis, hierarchy, clustering.
The Focus+Context principle ensures that the most important
data is displayed at a focal point at full size and details while the
area around the focal point is used to display information, the context, to help make sense of how the important information relates
to the entire data structure. One very popular visualisation method
based on this principle is the fisheye view [10].
Although the three dimensional virtual world is virtually infinite
in volume, the window to this virtual world has limited area, called
the “screen real-estate” or the “screen” for short.
To port the “focus” component of Focus+Context to the three dimensional environment we define it as the process of allocating the

81

maximum screen real-estate on the projected plane to display the
object’s visual information, especially when the object is visualised
on several level of details. The process of porting the “context”
component of Focus+Context into three dimensional environments
is redefined as repositioning the non-focal objects in 3D space such
that their projection makes use of the remaining empty real-estate
of the 2D screen.
Interaction in three dimensional spaces can be defined as the automated repositioning of graph elements, up on user request, in 3D
space to meet some of the criteria mentioned above along with the
new criterion, which is “minimising the unused screen real-estate”.
This new criterion will be used and satisfied in all navigation and
interaction methods proposed in the subsequent sections.
3

(a) Conventional layout of the tree

(b) Leaf nodes collapsed (their respective planes are perpendicular to
the screen)

(c) The whole structure of the tree
is modified. (Shrink process)

(d) Camera position is modified
(zoom)

2.5D N AVIGATION FOR T REES

Many datasets can be visualised using a 2D tree structure where entities and relationships are represented by labelled nodes and links
respectively. Calculating tree layout given application specific conditions is a classical problem extensively studied in the literature
[21]. However in the case of a balanced tree with a sufficiently large
number of leaf nodes compared to the number of internal nodes, it
is noticed that large areas of the visualised picture are empty. We
need to make use of this wasted screen real-estate without compromising the visibility of the leaf nodes and the tree as a whole.
In 3D we can make use of the extra space that is available by
introducing this third dimension. The conventional layout of the
tree in 3D produces lots of wasted screen space in the 2D projection
as it is apparent from white area in Figure 1(a). By introducing the
folding of sub-trees more tree elements can be fitted into the limited
2D screen.

(a) Typical 2D layout of a tree

Figure 2: Folding sub-trees navigation sequence

components are rotated along their ancestor’s rotation axis, which is
parallel to the screen, every time the focal point is moved. The curl
effect displaces the elements of the tree such that more components
fall into the camera frustum, thus making them visible. This is obvious by comparing Figure 3(a) and Figure 3(b). The desirable effect
is achieved when the focal points are located between the camera
and their respective billboarded objects as shown in Figure 3(c).
The curl effect is carried lower into the sub-tree; therefore the rotation is accumulated from the parent node of an arbitrary sub-tree to
the children. Moving the focal point closer will increase the curliness of that level and vice-versa. The curl is most effective when the
level focal points movement is constrained along a straight line in
the direction of the camera view vector. A typical application may
provide the level focal point position as a user controlled feature.

(b) Collapsed sub-tree layout

Figure 1: Folding sub-trees

Unfolded sub-trees constitute the focus component and folded
ones represent the context component. Tree elements that lie in a
plane perpendicular to the screen do not completely occlude each
other, due to the perspective projection. See Figure 2(b). The context is still apparent.
This method may be extended to those elements that span across
a larger volume in 3D space and may fall outside the camera frustum. By folding the leaf nodes of a tree considerably large amount
of the screen real estate is released as depicted in Figure 2(a) and
Figure 2(b). The whole structure of the tree now may be collapsed
to take less screen space as shown in Figure 2(b) and Figure 2(c).
The camera position is adjusted by means of zooming and panning,
i.e. translation in 3D space, to move closer to the tree such that the
projection is maximized on the screen, which enhances the level of
detail presented on the screen. This idea is further extended to take
internal nodes into consideration next.
To make use of the wasted screen real-estate is by introducing
level focal points. Each level of the tree is curled around a point
in 3D space. The sub-trees use a modified version of the billboarding concept in 3D applications, where a billboard is a flat object,
which continuously faces the camera. For our purpose tree elements continuously face their respective level focal point. The tree

82

(a) Conventional tree layout

(b) Tree levels curled around their
respective focal points

(c) Red dots represent the focal
points for their respective levels.

(d) Combined effect of focal point
and sub-tree rotation.

Figure 3: Tree-curl navigation sequence

The focal point technique alone does reveal some unused screen

real-estate as shown in Figure 3(b). Assuming that the root is at
level zero, it is clear from Figure 3(b) that empty area introduced
between the two sub-trees at level one is considered as wasted
screen area. Fine tuning can be done on the final layout by introducing a compression factor for each level that compresses the width
of that level taking the respective sub-tree width into consideration.
The combination result is shown in Figure 3(d). Applying this technique on a tree in 3D space yields a complex 3D structure as it is
observed in Figure 3(c), yet rendered from the correct angle and
direction produces projections that maximises the focus by unfolding the focal components of the tree. It also maximises the context
visibility by combining folding of tree components with perspective projection. It minimises total occlusion, and preserves mental
map and structural topology by smoothly animating the folding and
unfolding of sub-trees and transformation of level focal points from
one position in 3D to another.
4 2.5D N AVIGATION FOR PATH -C LUSTERED G RAPHS
A hierarchical graph is considered a path clustering if the super
graph, where clusters are collapsed to represent super-nodes and
inter-cluster edges are collapsed to become super edges, and the
resultant graph constitute a path-graph. In path-graphs every node,
i.e. super-node, is of degree 2 except for two nodes which are of
degree 1.
To consider interaction taking the Focus+Context concepts into
consideration, it is required that, at user request, the graph layout
is modified such that focal level occupies the maximum area in the
screen by rotating the focal level until it is parallel to the screen and
moving it closer to the camera, then scatter the remaining of the
graph over the unused screen real-estate as shown in Figure 4(a)
and Figure 4(b).

(a) Typical path graph layout

(b) The middle level plane is rotated to face the camera

(c) View of the configuration from
the top, the focus level and the two
adjacent levels are at 45◦ angles
with each other.

(d) The left sub-path is arranged
along a spiral path, while the right
sub-path is arranged on a straight
path.

decreasing rotation angles. The decreasing factor is dependent in
their graph-theoretical distance from the focal level plane.
The accordion layout introduces extra unused white space on the
screen as noticed in Figure 4(b). With large number of levels the
accordion spread can be replaced with a different layout modification scheme. Two arrangement schemes are mentioned in our
technical report [27]. Their combined result is shown in Figure
4(d). Smoothly animating the transitions between different configurations will ensure mental map preservation.
The method addresses the maximisation of uniform movement
by smoothly animating level translation and rotation, preservation
of mental map also by performing smooth animation with adequate
speed, preservation of structural topology of the whole super graph,
minimisation of the unused screen space, and occlusion is avoided
by appropriate packing of context objects and the use of perspective
projection.
5

2.5D N AVIGATION FOR H IERARCHICAL G RAPHS

In a 2.5D layout of hierarchical graphs, one can identify layering
along two axes. Using the camera as a reference, the graph can
be positioned so that the normal vector of one group of layers is
parallel to the camera up vector, while the normal vector of the
second group of layers is perpendicular to the camera up vector. A
typical arrangement is depicted in Figure 5(a).
Along the definition of the Focus+Context given in Section 2.3
and to achieve the focus criteria the layer under focus is first rotated
so that the camera view direction is perpendicular to the plane’s
surface. Then the size of the layer plane is scaled up, along the axes
perpendicular to the camera, until it occupies a satisfactory area of
the screen.

(a) Typical hierarchical graph layout. Planes identify the levels in
both directions.

(b) The focal plane is rotated and
scaled to desired size

(c) Shearing the vertical layers.

(d) Side view after the shearing operation

Figure 5: Focusing on a selected layer in a hierarchical graph
Figure 4: Path hierarchical graph navigation sequence

This ensures maximal exposure for the focal layer. To preserve
the context, the remaining planes are spread out on each side in an
accordion shape. The adjacent levels to the focal level are rotated
±45◦ respectively towards the camera along their respective local
axes that are parallel to the camera’s up vector. The view from the
top reveals this structure in Figure 4(c). This satisfies the angle
resolution criterion mentioned in section 2.3 amongst the three levels. Subsequent level planes are rotated in a similar manner with

To preserve the context under the changes, the subsequent layers in the horizontal direction are spread out using the accordion
layout. This step is illustrated in Figure 5(b). To preserve the horizontal layering, which was damaged by the scaling of the focal
layer plane, illustrated by the pink planes in Figure 5(b), a shear
factor is introduced to all the vertical layers along the camera view
direction. This will re-orient the horizontal layers to convey the
correct layering relationship along all subsequent vertical layers as
illustrated in Figure 5(c) and Figure 5(d).

83

This method satisfies mental map preservation using smooth animation, maximising uniform movement by grouping graph elements into layers and manipulating those layer for layout modification, and preservation of structural topology by balancing and
coupling the scale and shear factors.
6

2.5D N AVIGATION FOR T REE -C LUSTERED G RAPHS

To define animated interaction technique with the tree-clustered
graph class a modified PhylloTree layout is employed [6]. It is
noted that clusters in such graphs are represented as 2D planes in
3D space facing the camera at all times to ensure maximum exposure. The super graph can be obtained by replacing the clusters with
super-nodes and collapsing the inter-cluster edges into super-edges.
The super-graph constitutes a tree in 3D space.

(a) Layout of children clusters using PhylloTree scheme, the parent
cluster is in the middle.

(b) Top view of a large clustered
tree.

Figure 6: PhylloTree layout of a simple cluster graph

For any sub-tree the children are sorted according to their radii
then allocated positions in 3D space, computed by the PhylloTree
layout method starting with the smallest radius first. In recursive
steps the radius of a sub-tree is computed as the radius of the circle
in the screen that completely contains the projection of the sub-tree.
Figure 6(a) illustrates a simple example where the green circle indicates the root cluster and the children clusters are indicated by
red circles. A large clustered tree graph example is shown in Figure 6(b) where the root cluster is coloured in pink, the first level
children clusters are coloured in purple, the second level children
clusters are coloured in green and the third level children clusters
are coloured in red. For more details see [27].
7

C ONCLUSION

Four graph interaction methods have been presented with each applicable to its respective class of graphs. The methods presented address the maximisation of uniform movement, smooth layout modification and transition with adequate animation speed, preservation
of structural topology, preservation of mental map through out the
interaction process, minimisation of occlusion in the final layout,
and minimisation of unused screen real-estate.
Furthermore, the methods discussed in this text are based on
primitive 3D operations such as translation, rotation, scaling, and
shearing. Operations that have become standardly available in
GPU hardware for quite some time. Thus the operations are simple from the implementation point of view. Short sample video
clips illustrating the navigation and interaction methods described
here can be accessed through http://www.cs.usyd.edu.
au/˜aahmed/apvis07.
R EFERENCES
[1] A. Ahmed and P. Eades, Automatic Camera Path Generation for Graph
Navigation in 3D, Proceedings of APVIS 2005, pp. 27-32, 2005.
[2] G. Di Battista, P. Eades, R. Tamassia and I. G. Tollis, Graph Drawing:
Algorithms for the Visualization of Graphs, Prentice-Hall, 1998.

84

[3] M. Baur, U. Brandes, M. Gaertler and D. Wagner, Drawing the AS
Graph in 2.5 Dimensions, Proceeding of Graph Drawing 2004, Lecture Notes in Computer Science 3383, pp. 43-48, 2004.
[4] U. Brandes, T. Dwyer and F. Schreiber, Visualizing Related Metabolic
Pathways in Two and a Half Dimensions, Proceedings of Graph Drawing 2003, pp. 111-122, 2003.
[5] U. Brandes, V. Kaab, A. Loh, D. Wagner, T. Willhalm, Dynamic
WWW Structures in 3D, J. Graph Algorithms Appl. 4(3), pp. 183191, 2000.
[6] S. Carpendale and A.Agarawala, PhylloTrees: Harnessing Natures
Phyllotactic Patterns for Tree Layout, Proceedings of InfoVis 2004,
IEEE Computer Society, 2004.
[7] P. Eades, M. E. Houle and R. Webber, Finding the Best Viewpoints for
Three-Dimensional Graph Drawings, Proceedings of Graph Drawing
1997, pp. 87-98, 1997.
[8] P. Eades, M. Huang, Navigating Clustered Graphs Using ForceDirected Methods, J. Graph Algorithms Appl. 4(3), pp. 157-181,
2000.
[9] C. Friedrich and P. Eades, Graph Drawing in Motion, J. Graph Algorithms Appl, 6(3), pp. 353-370, 2002.
[10] G. W. Furnas, Generalized fisheye views, SIGCHI Bull. vol. 17, no. 4,
pp. 16 - 23, ACM Press, 1986.
[11] I. Herman, G. Melanon G, M. Marshall, Graph Visualization in Information Visualization: a Survey, IEEE Transactions on Visualization
and Computer Graphics, 6, pp. 24-44, 2000.
[12] J. Ho and S. Hong, Drawing Clustered Graphs in Three Dimensions,
Proceeding of Graph Drawing 2005, pp. 492-502, 2005.
[13] S. Hong, MultiPlane: A New Framework for Drawing Graphs in Three
Dimensions, Proceeding of Graph Drawing 2005, pp. 514-515.
[14] S. Hong and T. Murtagh, Visualization of Large and Complex Networks Using PolyPlane, Proceedings of Graph Drawing 2004, Lecture
Notes in Computer Science 3383, pp. 471-482, 2004.
[15] S. Hong and N. Nikolov, Layered Drawings of Directed Graphs in
Three Dimensions, Proceedings of APVIS 2005, pp. 69-74, 2005.
[16] S. Hong, Nikola and N. S. Nikolov, Hierarchical Layouts of Directed
Graphs in Three Dimensions, Proceeding of Graph Drawing 2005, pp.
251-261, 2005.
[17] M. Huang and P. Eades, A Fully Animated Interactive System for
Clustering and Navigating Huge Graphs, Proceedings of Graph Drawing 1998, pp. 374-383, 1998.
[18] J. Lamping, R. Rao and P. Piroli, A Focus + Context Technique Based
on Hyperbolic Geometry for Visualizing Large Hierarchies, Proc. of
ACM CHI’95 Conference: Human Factors in Computing Systems,
ACM, New York, NY, pp. 401-408, 1995.
[19] W. Li, P. Eades and S. Hong, Navigating Software Architectures with
Constant Visual Complexity, Proceedings of VL/HCC 2005, pp. 225232, 2005.
[20] T. Munzner, H3: Laying Out Large Directed Graphs in 3D Hyperbolic
Space, Proc. of the 1997 IEEE Symposium on Information Visualization, pp. 2-10, 1997.
[21] T. Munzner, F. Guimbretiere, S. Tasiran, L. Zhang and Y. Zhou, TreeJuxtaposer: scalable tree comparison using Focus+Context with guaranteed visibility, ACM Trans. Graph., vol. 22, no. 3, pp. 453-462,
ACM Press, 2003.
[22] K. Pulo, Structural Focus + Context Navigation of Relational Data,
PhD. thesis, School of Information Technologies, University of Sydney, Australia, 2004.
[23] G. Roberston, J. Mackinlay and S. Card, Cone Trees: Animated 3D
Visualizations of Hierarchical Information, Proc. of SIGCHI’91, pp.
189-194, 1991.
[24] J. van Wijk, W. A. Nuij, Smooth and efficient zooming and panning,
Procddeings of INFOVIS 2003.
[25] C. Ware, Information Visualization: Perception for Design, Morgan
Kaufman, 2000.
[26] C. Ware, Designing with a 2 1/2D Attitude, Information Design Journal 10, 3, pp. 171-182, 2001.
[27] A. Ahmed and S. Hong, Navigation Techniques for 2.5D Graph Layout, TR, School of IT, University of Sydney, 2006, http://www.
cs.usyd.edu.au/˜aahmed/apvis07

