An Advection-Reaction Model for Flow Visualization
Ruyam
Acar∗
¨

A BSTRACT
A new method is presented for flow visualization based on an advection reaction model. The key point of the method is to use a
flow dependent reaction source which couples advection and reaction dynamics. When embedded in semi-Lagrangian advection this
reaction source provides systematic pattern generation and integration along pathlines. Based on this idea and a very simple equation with a stable and efficient numerical solution, a visualization
model is developed which allows visualization of both Lagrangian
and Eulerian structures in a flexible environment and with user control. This system also allows the emulation of conventional dense
texture and reaction-diffusion type visualization techniques easily
and provides solutions to the problems in these methods.
Index Terms:
I.3.8 [Computing Methodologies]: Computer
Graphics—Applications
1 I NTRODUCTION
Dense texture methods have been widely studied in flow visualization. Generally, these are either based on successive blending of
advected textures or convolution of textures along streamlines or
pathlines, or a combination of both. Several issues arise in these
methods regarding spatial and temporal coherency, computational
complexity and maintaining image contrast and details. Different
solutions have been proposed for each, sometimes with extra correction or post-processing algorithms and usually there is a tradeoff between solutions, that is, fixing one problem interferes with
the other. Using background images, texture/noise injection, integration of particles in texture advection are some of these methods.
Although arbitrary images can be used in advection or convolution
methods no systematic texture generation has been proposed; texture or particle seed selection can be a problem and usually noise
textures have been used. Achieving both spatial and temporal coherency at the same time has been difficult in most cases. Good
spatio-temporal coherency can be achieved in unsteady line integral
convolution methods, however at the expense of high computational
cost. Generally, in dense texture methods, even if computational efficiency is achieved, complexity of the algorithm does not provide
much flexibility and control to the user.
Reaction diffusion systems have been mostly used for sparse representation of flow vectors. Generally in reaction-diffusion models,
complex reaction dynamics and nonlinearity of diffusion create stability problems and more importantly, overly complex patterns can
be generated which are difficult to analyze and control.
Texture based methods aim to provide static information in individual frames and Lagrangian or time-dependent flow information
in the flow of the animation. There is also the Lagrangian information regarding the transport properties of a flow which cannot
be observed from instantaneous flow structures or from the flow
animation. This information is usually extracted with dynamical
systems methods based on geometrical or statistical approaches.
Computation of particle separation with finite time Lyapunov exponents (FTLE) or integration of some flow properties along particle paths are some of these. Lagrangian coherent structure (LCS)
∗ e-mail:

ruyam acar@yahoo.com

IEEE Pacific Visualisation Symposium 2010
2 - 5 March, Taipei, Taiwan
978-1-4244-6686-3/10/$26.00 ©2010 IEEE

methods usually require the computation of particle paths for each
point. Efficient computation of some of the LCS methods has also
been considered in graphics. LCS methods generally focus on the
Lagrangian properties and do not provide static information.
In this paper, we propose a generalized solution to both dense
texture based and Lagrangian flow visualization using an advectionreaction model. There are two important properties of this method.
First, the reaction term is based on a flow dependent source and
used for pattern generation. Second, advection is solved with a
semi-Lagrangian method and the flow dependent reaction dynamics
is embedded in the semi-Lagrangian frame. In other words, the
flow dependency makes use of the semi-Lagrangian characteristic
tracing. This combination allows us to simulate both Lagrangian
and Eulerian flow information with a simple and efficient system.
Reaction is composed of an inhomogeneous source term and a
decay term. The source can also be compared to dye injection in
texture advection methods however here it is flow dependent and
used for systematic pattern generation. Evolution of the advectionreaction equation in a way gives continuous injection and integration of textures along pathlines similar to UFLIC. Depending on
the flow parameter used, regular textures or density oscillations can
be produced which bring out Lagrangian structures when advected.
In either case, pattern formation uses the flow dependent oscillations to automatically align textures with the flow structures. The
decay rate limits the integration length or the pathline; this is used
to control the flow history included in textures, that is to decide if
more static or dynamic information needs to be visualized. The
source function is usually defined as a smooth variational function;
this automatically provides spatial coherency as well as the temporal coherency if the function also varies smoothly in time with the
flow dependency. By adjusting the variation (or frequency) and the
duration of the source function it is possible to produce noise like
patterns and mimic most of the noise based dense texture methods. High order spatial interpolation used in advection provides
high level of details and together with the continuous flow dependent source injection, sharpness of flow structures is preserved. The
reaction term can also be defined by an algorithm; this is used to
embed some of the LCS methods in the system. However, we do
not compute a certain length of pathline for each point on the grid
(as in other LCS methods); pathline computation is embedded in
the semi-Lagrangian advection and the computation for each time
step is comprised of only one advection step. For the visualization of Lagrangian information we investigated periodic functions
which would be effective in long times.
To summarize, this system provides a flexible environment for
the visualization of Lagrangian and Eulerian information including
texture based and reaction-diffusion type methods with a simple
and efficient system and with user control. It is also free from most
of the artifacts that occur in the conventional texture based methods.
2

P REVIOUS W ORK

Related work includes dense texture based methods, dye advection,
line integral convolution methods, reaction-diffusion systems and
Lagrangian coherent structure extraction.
In texture advection methods Jobard et al. introduced the
Lagrangian-Eulerian advection (LEA) [13] which is based on advecting textures and successive blending of frames. Dye injection
is used to increase image contrast. Two post-processing methods
are used to improve spatial coherence and to emphasize high mag-

137

nitude flow areas. The first one aims to remove high frequency
noise with a LIC filter. However, this filtering based on streamlines
can affect temporal coherency if its length is not adjusted according
to the flow, or the flow regions with low velocity magnitude can be
obscured.
Van Wijk [29] combined blending of successive frames with advection of textures on warped meshes. The latter improved computational efficiency. They proposed blending of a second (background) image in addition to the advected texture at each step. This
improved temporal coherency and it is used as a remedy for the
over-distortion of textures and for the texture inflow/outflow problem. Spatial coherency can be improved by using a smooth background image such as a low pass filtered noise. However, spatial
quality of images are still compromised and blurring of images can
be a problem.
Weiskopf et al. [31] proposed a visualization method, unsteady
flow advection convolution (UFAC), and a framework for texture
advection to build spatial coherence by convolution along streamlines and temporal coherence by building continuous trajectories.
In [32] they reduced the high cost of trajectory computation by using a particle based integration. However, with this approach there
is a trade-off between spatial and temporal coherence as in LEA
due to building coherence based on streamlines.
Various other studies are done to improve the image contrast and
to reduce numerical diffusion in texture advection. Weiskopf [30]
used level set techniques to prevent blurring. Kim et al. [14] used
a back and forth error correction scheme in advection to reduce numerical diffusion. And lately, Li et al. [17] introduced a CFD based
mass/volume control technique to increase accuracy of advection
and to reduce numerical diffusion in flow visualization.
A relatively different approach uses texture convolution; Cabral
and Leedom [5] introduced the line integral convolution (LIC) for
steady flows based on convolution along streamlines. Several extensions of the LIC method have been proposed to improve computational efficiency and to include different flow information such as
vector magnitudes and orientation (see [15] for a review). Shen et
al. [25] proposed unsteady flow line integral convolution (UFLIC)
for visualization of time-dependent flows. The key to this method
is value scattering; at each step a large number of particles are released and advected along pathlines to scatter texture values with
a time stamp. Then, in a gathering step these scattered values are
collected, i.e. convolved, considering their time information. The
resulting texture is high-pass filtered and then used in the next scattering step. This approach solves the inconsistency between spatial and temporal correlation that occur in other texture advection
methods and provides good spatio-temporal coherency. Despite the
high-pass filter, blurring in certain flow regions can still be a problem, however the main drawback of this method, compared to other
texture advection methods is the high computational cost and the
complexity of the algorithm. Li et al. [16] proposed a GPU based
UFLIC to improve implementation efficiency.
Visualization of Lagrangian structures has also been considered
in computer graphics lately, with the recent advances in physics (a
detailed discussion is given in the next section). Garth et al. [7]
proposed an adaptive computation of flow maps and reduced the
cost of particle path computations. Fuchs et al. [6] used particles to
include Lagrangian information in vortex region detectors. Garth
et al. [8] combined FTLE and texture advection methods to superimpose properties missing from each. Shi et al. [26] [27] proposed
integration of flow properties along particle paths to visualize transport structures. For each point, particle paths with a certain length
are computed along which the flow properties such as vorticity and
kinetic energy are integrated. These are used to visualize transport
properties of flows. As suggested in [21] in physics, integration of
some flow structures for a finite time interval brings out Lagrangian
coherent structures in flows.

138

Another line of work focus on reaction-diffusion systems ([4],
[22],[23]). These mostly address a sparse representation of vectors. For example, they are used to deform spots based on the flow
information. Mostly Turing’s two morphogen reaction-diffusion
model is considered. Although these are considered to be some of
the most simple reaction-diffusion models, we still find these models too complex for visualization both numerically and in terms of
reaction-diffusion dynamics and pattern formation.
Pattern formation in reaction-diffusion systems has been widely
studied in physics and recently pattern formation as a result of fluid
stirring has been drawing attention. Advection-reaction-diffusion
systems are considered in this respect to study chemical dynamics under convection which appears in various physical phenomena
in nature and in chemical processes. An inhomogeneous source
was used in [20] to study the behavior of chemical reactions. The
inhomogeneity is described in these models by a dependence on
the flow trajectories. Spatio-temporal distribution of chemicals are
investigated; patterns can be fractal or smooth depending on the
flow dynamics. A similar chemical source was also used in [2] for
artistic effects. This flow dependency and the emerging patterns inspired us to use a similar non-homogeneous chemical reaction term
to reflect the flow properties on the concentration values for visualization purposes.
3

C OHERENT S TRUCTURES

Coherent structures are usually associated with intense regions of
vorticity and dissipation, even though there is not a unified quantitative description for them. Some other definitions are based on
energy, enstrophy or dispersion statistics. These structures which
are usually related to the transport properties of the flow can not
be observed from instantaneous vectors or from the flow of vectors
which are mostly visualized with texture/particle animation. Related studies in physics can be divided into Eulerian and Lagrangian
methods. Eulerian approach aims to divide the flow into different
regions using fixed point flow fields such as velocity gradient. The
well-known Okubo-Weiss criterion [18] for example separates the
flow into hyperbolic and elliptic regions or regions with high strain
and high vorticity. Eulerian approach can fail to capture critical
information in transport properties. Lagrangian analysis of flow
structures is considered more effective in many ways and has several advantages such as insensitivity to small scale perturbations.
Next, we will discuss the Lagrangian studies in more detail as we
intend to incorporate some of these methods in our model.
3.1

Lagrangian Methods

Lagrangian description of coherent structures is based on particle
trajectories. In the Lagrangian frame, for periodic flows, coherent
structures are defined by the invariant manifolds of the flow based
on the hyperbolic trajectories and stable/unstable manifolds; these
divide the flow into different dynamical regions (such as chaotic regions or islands). In periodic flows, usually Poincare or other mapping techniques are used to analyze and visualize chaotic dynamics.
Lyapunov exponent (LE), which is a measure of maximum separation of infinitesimally close particles, has also been an important
measure in periodic or time-independent flows.
For aperiodic flows, several studies have been done to define finite version of the Lyapunov exponent. Haller et al. [11],[9] detected hyperbolic trajectories based on the velocity gradient along
the particle path. Also they defined the finite time Lyapunov exponent (FTLE) which measures the maximum separation of close particles for a finite time interval [12]. Coherent structures are defined
as ridges of FTLE. Shadden [24] provided a quantitative analysis of
the LCS based on FTLE by defining a flux across these structures.
Statistical methods for aperiodic flows have been proposed in
the Lagrangian frame based on dispersion statistics such as absolute and relative dispersion (see [12] for a review), or patchiness

plots [21]. Absolute dispersion measures the average displacement
of particles while relative dispersion measures the average displacement of nearby particles. Relative dispersion has a closer relation to
the invariant manifolds as it is based on particle separation. The finite strain map (see [9] and references therein) measures the linear
separation of neighboring particles; maximum separation is used
to locate invariant manifolds. The finite strain map can be considered as taking the maxima of relative dispersion. This method
provides global detection of manifolds, and does not rely on hyperbolic points. However, dispersion statistics can fail to bring out
material lines 1 especially for long times or the invariant structures
can become fuzzy [9],[12]. Patchiness plots are obtained by averaging particle velocities along particle paths. Mezic et al. [19]
showed that averaging a function along trajectories gives invariant
manifolds of a dynamical system (in flows with periodic velocity
fields). They also showed that combinations of orthogonal functions bring out invariant sets of a dynamical system. They proposed
a color coding based on this averaging to visualize dynamically different regions in periodic flows. Although this theory is not proved
for aperiodic flows, Poje et al. [21] suggested that even for a finite
time interval this averaging gives meaningful information related
to the invariant manifolds especially if the function is chosen appropriately. They average vertical or horizontal components of the
velocity vector along particle trajectories and show the strong correspondence with the invariant manifolds (obtained from Haller et
al.’s method [11] for finite time intervals). However, since average
velocity goes to zero in the turbulence model this statistics decays
and the relation is lost for longer times. We should mention that this
statistical approach constitutes the basis of our model, however in
this paper we will demonstrate that it is possible to maintain these
structures with appropriate functions or algorithms for long times.
Although FTLE has been successfully used to extract coherent
structures in many flows there are also some issues reported [3]. As
it is based on maximum particle separation, this field can become
uniform or fuzzy for long times. Dependence on stagnation points
is another issue. Finite strain map, straddling and the statistical
methods attempted to overcome some of these issues.
4

next time step, tn+1 , can be obtained from either forward tracked
or backtracked position x∗ :
C n+1 (x) = C n (x∗ ).

When x∗ is in between the grid points, C values are obtained
by interpolation. This method provides unconditional stability. In
the proposed model, semi-Lagrangian description plays an important role as a basis for coupling the advection and reaction parts.
Accuracy of the semi-Lagrangian method depends on the accuracy
of the spatial interpolation and time integration. We used 5th order B-splines for the spatial interpolation. B-splines provide very
good resolution and mass conservation properties and numerical
diffusion is very low [1]. We used a fast implementation of Bsplines based on recursive algorithms (see references in [1]). On
a 400 × 400 grid this computation takes a fraction of a second on
a 2.4GHz. CPU. For the characteristic integration we used a first
order Euler method with backward tracking (x∗ = x − U t) for
simplicity. High order Runge-Kutta schemes can be used for more
accurate time integration.
4.2 Reaction Dynamics
The reaction part is solved in the second step,
∂C
= R(C, f ),
∂t
and it can be defined by an algorithm or by the equation,
R(C, f ) = α(F (f ) − λC),

∂C
+ U ·∇ C = R(C, f ),
∂t

(1)

where C represents the concentration values, and U denotes the
velocity. The reaction term is represented by R where f is a flow
parameter. Advection and reaction parts are solved with different
methods in the framework of fractional step computation. However,
due to the nature of the chemical source and the advection method,
the solution is actually obtained in one step.
4.1

Semi-Lagrangian Advection

The advection part is solved with a semi-Lagrangian method. SemiLagrangian methods [28] are based on the idea that the advected
element is constant along the characteristic curve of the equation.
dX(t)
= U(X, t).
dt

(2)

The solution is obtained by integrating the equation over this trajectory in time and space. In other words, given the current values
of material C at time tn , the value at a point with position x at the
1 Finite

time invariant manifolds or Lagrangian coherent structures determined from FTLE.

(4)

(5)

where α represents the reaction rate or strength, λ indicates the decay rate and F denotes the flow dependent source where f could
be vector or a scalar value. Due to the linearity and simplicity of
the reaction term, first order integration was sufficient to achieve
accuracy and stability. Since the reaction term does not include any
derivatives or spatial integration terms and the advected element is
obtained by characteristic tracing, the solution to the overall equation (Eqn.1) can be obtained in one step as follows,

A DVECTION -R EACTION M ODEL

The following advection-reaction equation is used in the visualization model,

(3)

C n+1 (x) = C n (x∗ ) + α(F (f ) − λC n (x∗ )).

(6)

Computational complexity of this method depends on the complexity of the interpolation algorithm. Note that advected values
(C n (x∗ )) are used in the decay term here. Mostly this form is used
in the experiments to limit the amount of material carried by the
flow. Otherwise this term can be dependent on C n . Also note that
since diffusion would further complicate the patterns and make it
difficult to extract flow properties it is not included in our model.
5

F LOW VISUALIZATION WITH THE ADVECTION - REACTION
MODEL

The reaction term is responsible for pattern generation or systematic injection of textures. Advection carries the concentration values with the flow and aligns textures with the particle paths. The
relative strength of advection and reaction can be adjusted by the
parameter, α; as the effect of reaction decreases the equation approximates the advection of a constant texture. This advectionreaction process can be compared to the value scattering/gathering
in UFLIC. At each step, integrated texture values are gathered by
advection while reaction continues to generate texture values to be
scattered.
In UFLIC and coherent structure extraction methods, a pathline
is computed with a certain length for each point at each time step. In
the proposed model, advection-reaction evolves continuously and
the visualization result at each step is a result of the integration of
the equation for one step. Effective path lengths can be determined
by the variation of the source function and the decay parameter. In

139

other words, pathline computation is embedded in the evolution of
the equation. The decay parameter limits the amount of advected
values and determines the flow history that needs to be taken into
account. This parameter can be used to lock the patterns; it can also
be designed according to different flow properties, such as velocity
magnitude, eddy turnover time etc.
The other important factor in pattern formation is the flow dependency of the source function. A flow dependent reaction term
embedded in semi-Lagrangian advection provides a trace of flow
history or the effect of memory in generated patterns. This method
takes advantage of the Lagrangian dynamics, in a way, without having to resort to the complexity of particle computations. Commonly
used flow parameters are velocity and trajectory vectors. For example, a velocity based function can be used to create patterns only in
regions with high velocity variation. Or a trajectory based function
will create patterns on the whole domain. Trajectories in chaotic advection will create fractal patterns, or the patterns will be smoother
if the trajectory variation is simple. Thus the basic idea in using
a flow dependent source is to reflect the flow properties on pattern
evolution or in other words to use the variations due to flow for effective texture generation. The variations due to trajectory changes
for example will cause the patterns to align with the flow topology. Mostly smooth variational functions are used; the properties
of the function such as smoothness and periodicity affect the results.
Low frequency variation of some flow properties will cause oscillations which will bring out Lagrangian coherent structures when
integrated along particle paths automatically as a result of the equation. Using a smooth variational source function provides spatiotemporal coherency as the evolution of the equation with the function is smooth and continuous in both time and space.
In the next section, properties of pattern formation is investigated
in basic flow topologies using parametric source functions. Algorithmic examples for the reaction term will be discussed in the following section for the implementation of LCS methods.
5.1

Pattern Formation

We found the sinusoidal functions very effective as a reaction
source for various reasons. First, they provide a smooth spatial
variation. Periodicity is advantageous as it can be used to reflect flow scales or to control the image intensity. Frequency parameter can be used to visualize flow regions with different dynamical properties. Or combinations of different orthogonal basis
functions can be used for this purpose. More importantly, sinusoidal functions are oscillatory; the changes in the flow topology,
or the oscillations or fluctuations in the flow are directly reflected
to the patterns. The increase in oscillations in patterns indicates
a decrease in the concentration mean. Thus, in most flows, also
depending on the reaction rate this mean is constant. However,
even if it is not, this oscillatory behaviour still causes the details
to be preserved. Especially with low frequency sinusoidal functions, details increase, flow structures are emphasized with high
gradients and lines become sharper as the flow becomes more complex. Sharpness is due to the systematic source injection in regions
with high velocity variation. (Preservation of details is also due
to the high order spatial interpolation [1].) Also the source injection prevents possible loss of details due to diffusion error although it is very low in high order B-splines. These are important
properties of the visualization method as in conventional texture
advection methods it is difficult to preserve details and sharpness
and in standard reaction models (without diffusion) the chemicals
would become uniform. Generally, we found the sinusoidal form,
F = sin(jx + ky) = sin(jx) cos(ky) + cos(jx) sin(ky), an effective source in the experiments as it includes a combination of
orthogonal functions in different directions. This helps bring out
flow structures in different directions and orientations.
Although the effectiveness of the method is more prominent in

140

Figure 1: Patterns formed in the double gyre flow with a sinusoidal
reaction source. From left to right: t = 0, t = 38dt, t = 128dt.

unsteady flows where the oscillations in patterns due to flow variation are used, we will first demonstrate the pattern formation in
steady vectors. Double gyre flow is commonly used for testing dynamical system methods; it is an approximation to an incompressible, periodic flow with different dynamical regions. The streamfunction [24] is given by,
ψ(x, y, t) = A sin(πf (x, t)) sin(πy),
f (x, t) = a(t)x2 + b(t)x,
a(t) = sin(ωt),
b(t) = 1 − 2 sin(ωt),

(7)

where represents the time-dependency of the flow and ω indicates
the period. The boundaries of the two vortices indicate separatrices,
i.e. invariant manifolds. Figure 1 shows the patterns formed with
the following trajectory based function,
F (x∗ ) = sin(2πf x∗ ) ∗ sin(2πf y ∗ ),

(8)

with f = 0.01. With a trajectory or position based function, the
patterns form everywhere on the grid (not just around high velocity
differences). Different patterns form depending on the function,
frequency and the flow regions.
A different function can be used to generate spot patterns which
are commonly used in dense texture methods,
F (x∗ ) = sin(f x∗ )8 ∗ sin(f y ∗ )8 .

(9)

Advection and reaction with constant decay rate (λ = 5)
shows the vector topology, including directions and magnitude
(Figure 2a). Increasing the frequency increases texture resolution
and a lower decay rate gives denser textures as the spots are advected longer and they overlap (Figure 2b). With the same source
function (Eqn.9) but with a 7th power to obtain negative/positive
oscillations and more gray levels, we obtain the patterns shown in
Figure 3 for the time dependent case. With no decay, we have the
common problem of overlapping patterns; this is due to the overlapping pathlines. With increasing decay rate, the length of integration
or the duration of averaging concentration values is limited; each
frame of the animation shows the instantaneous flow vectors (with
direction and magnitude information) while the time-dependent information is visualized in the flow of textures.
6

A DAPTATION OF L AGRANGIAN COHERENT STRUCTURE
EXTRACTION METHODS

In this section, we will discuss the adaptation of some of the Lagrangian methods in our model. In these, the reaction term can
be considered as an algorithmic source for pattern generation. The
methods considered are FTLE, finite strain map, and the straddling
technique discussed in section 3. We should note that the implementation of FTLE and FSM, based on the expansion of nearby
pixels, do not directly fit in Eqn. 1 as the advected elements are the
position vectors and not the displayed concentration values. These
methods are introduced mostly for comparison. Also note that, especially FSM and the straddling methods are not intended to be the

Figure 2: Spot patterns formed in the rotational flow for two different
frequencies and decay rates.

In time, as the segments grow, new points are inserted if necessary.
We defined a reaction source based on the eigenvalues of the velocity gradient (Jacobian) matrix along the particle path. Minimum
eigenvalue is taken as defined in [10] as the identifying element
for material lines and defined as the reaction source. This reaction
source automatically generates concentration values that align with
stable/unstable manifolds. As time progresses, concentration values are advected and new eigenvalues are produced by the reaction
source. Implementation is simple: for each point on the grid, at
each time step, we compute the velocity vectors from the previous
positions using the semi-Lagrangian method. These velocity values
are also stored on a grid to avoid overlapping computations. These
backtracked velocity vectors for 4 neighbors of each point are used
to compute the Jacobian matrix (with finite differences) along the
trajectory. Then the eigenvalues of this matrix are computed and the
minimum eigenvalue is assigned to the reaction source. As in FTLE
and FSM, the user can choose a time slice to observe the evolution
of material lines, however we found this implementation of straddling to be effective for long times without becoming fuzzy. It is
also more stable than the other methods so it is used as a reference
in the aperiodic flow examples.
7

Figure 3: Dense patterns formed in a time periodic flow with reaction
without decay (left), and with λ = 1 (right).

same as the original methods; these algorithms constitute a different interpretation of the original ideas. Accuracy of these methods
are tested empirically here, a theoretical study will be considered
elsewhere.
6.1

Finite Time Lyapunov Exponent (FTLE)

FTLE requires the computation of a flow map for each point. In
the semi-Lagrangian advection, particle trajectories, hence the particle positions at the previous time step are already computed. By
keeping track of this information we can calculate the flow map for
each point on the grid. First, the grid is initialized at time t with the
position vectors which are then advected with the flow for a time
interval T . In this way, at time t + T we have the initial position,
that is, the position where that particle comes from, for each pixel.
(In other words, this is the position of that particle at time t.) This
allows us to compute the flow map gradient (which is obtained with
finite differences as suggested in [24]). The maximum eigenvalue
of the gradient matrix then gives us the maximum separation of
neighboring points on the grid.
F T LE =
6.2

1
ln
T

λmax .

(10)

Finite Strain Map (FSM)

Linear separation of nearby fluid elements can be computed similarly by using the advected position vectors. In this case, the separation between two points is taken as the distance between the initial
positions of each point. For each point on the grid, the separation
between that point and its 4 neighbors are calculated, and the maximum value is displayed.
6.3

Straddling

In the so called “straddling” techniques [11], segments that align
with stable/unstable manifolds are initialized, then these are advected forward or backward to find finite time invariant manifolds.

RESULTS

The methods are first tested on a periodic flow (double gyre) to extract Lagrangian structures. Since invariant manifolds or material
lines are well defined in this flow, it is commonly used as a testcase
for LCS methods. Then, we will demonstrate the proposed method
in more complex and aperiodic flows to visualize both Eulerian and
Lagrangian structures. Various alternatives for the functional reaction term will also be suggested. A 300 × 300 grid size is used in
the periodic flow and a 400 × 400 grid in most of the aperiodic,
turbulent flow examples.
7.1

Periodic Flow

In this experiment, computation is first run on the steady flow for
a while, then for a number of periods. Figure 4 shows the results
from FTLE, FSM and the straddling method. This flow is also chosen to make a comparison with the results provided in [24]. The
FTLE implementation gives similar results to the original computation. Thus, we can use the FTLE results as a reference for FSM and
the straddling implementation which are different from the original methods. Also note that normally FTLE and FSM would require a shorter pathline in this flow to effectively display coherent
structures. However, we set a long time period to evaluate the behaviour of the straddling method and the functional reaction source
for long time intervals. FTLE becomes fuzzy quickly. Similar
results are obtained with FSM, but the structures are more clear
and stable. (Note that the difference between the maximum values and their surrounding is high due to the increasing distance
values.) Straddling technique gives the most stable and clear results among these. The results from the functional source show that
we can extract transport structures in the long run with clear, stable patterns and with a simple and flexible formula (without any
dependence on stagnation points). We used a sinusoidal function,
F (v) = sin(2πf vx + 3πf vy ), with a velocity based parameter
and with the frequency f = 0.001 in the reaction source. As noted
previously, a velocity based function brings out high velocity variations.
7.2

Turbulent Flow

In this example, the methods are tested on a turbulent flow for long
times. A 2D turbulent flow is generated with a spectral solution
of the vorticity equations. Four different reaction types are considered: straddling and three functional sources. Straddling quickly
reveals the material lines and different regions (Figure 5, first row).

141

(a)

(b)

(c)

(d)

fuzzy or losing details, and it gives an insight to the flow history
as well as the Lagrangian coherent regions. However, the function,
its smoothness, frequency and its flow dependent parameter should
be chosen appropriately to make use of the density oscillations and
their integration effectively.
Next, we used a trajectory based function in the same flow to visualize short term or Eulerian flow structures similar to dense texture based methods. First, a function as in Eqn. 9 is used (but with
a power 5) to form spot like patterns. With a high decay rate, patterns display almost instantaneous vectors (Figure 8, first row). As
the decay rate decreases, flow history or the effective path length is
increased and we have denser patterns still visualizing the static information in each frame and the time dependent information in the
flow of the animation (Figure 8, second row). Next, we introduced
a power function, p, which depends on the velocity magnitude, to
be used in the spot function,

Figure 4: Double gyre flow: Reaction with FTLE (a), FSM (b), straddling (c) and the functional source (d). Left:t = 100dt (for the steady
case), right:t = 300dt

Long time behaviour of the method is tested by comparing the results with shorter pathline integrations. The straddling results in
Figure 5(first row, right column) are obtained by running the simulation for 350 time steps. Figure 6 also shows the straddling results
at t = 350dt but these are obtained by running the equation for
shorter time intervals, 50dt and 150dt (starting from t = 300dt
and t = 200dt respectively). A comparison of these 3 figures
shows that despite the increasing details and denser patterns, material lines can still be visualized after long time intervals. These
results, together with the results from the periodic flows, confirm
the reliability of straddling to be used as a reference for comparison
with the other methods.
Three different functions are used to test the behaviour of the
functional reaction source.

F (v) =

F (v) = vx ,

(11)

F (v) = |v| ,

(12)

sin(f vx )
cos(f vx ) +

+

sin(f vy )
.
cos(f vy ) +

(13)

The first one (Eqn.11) is the horizontal velocity component (as
suggested in [21]). The second one (Eqn.12) is the magnitude of the
displacement vector; when used in the reaction source these values
add up and give the distance traveled by each point. The third one
(Eqn.13) is a regularized tangent function. A comparison of the
results from the functional sources (Figure 5, rows 2-4) with the
straddling results (where high density lines indicate material lines)
shows that functional sources are able to bring out the same structures. However, not all functions are as equally effective. For example, the average velocity (Eqn.11) along the particle trajectories
can decay. This is especially evident in the shorter pathline integrations (Figure 7a). A comparison with the results from the distance
function (Eqn.12) for both short term (Figure 7b) and long term
runs (Figure 5, third row), shows that the distance function is more
effective in revealing Lagrangian structures; flow features are emphasized by high gradients, details are preserved as time progresses
and for long times. With the tangent function (Eqn.13), details also
increase and patterns become sharper in time (Figure 5, fourth row).
This is due to the oscillations in density which align the intensity
gradients with material lines and which also cause the minimum
and maximum chemical values to reach a limit quickly.
We can conclude that the proposed functional averaging provides
stable patterns; it is effective in longer times without becoming

142

F (x∗ ) = sin(f x∗ )p ∗ sin(f y ∗ )p , p =

A
.
|v| +

(14)

This creates high frequency, sharper patterns in small scale, detailed flow regions and larger patterns in regions where the flow
is more uniform (Figure 8, third row). In all cases, the quality of
the initial textures are preserved after long running times. These
examples show the flexibility of the system in controlling the spatial structures and evolution of textures. For example, by adjusting
the frequency of the sinusoidal function and the decay and reaction
rates, similar effects can be obtained as in noise based texture methods such as UFLIC and LEA. One can also design a combination
of source functions to show the Lagrangian and Eulerian structures
at the same time.
7.3 Vortex Streets
In this example, Karman vortex streets are visualized. The flow behind a cylinder is generated with gerris2D flow solver on a 512 ×
128 grid. A sinusoidal source, F (v) = sin(2πf vx − 4πf vy ),
is used in reaction with a relatively high frequency, f = 0.05.
We should note that as the flow changes quickly in this example, using a large time step with first order time integration might
affect the accuracy of the numerical method. Despite this, we
were able to obtain detailed structures in vortex sheet regions with
sharp lines emphasized by the velocity based density variations
(Figure 9, first row). These results can be compared to the results obtained from other methods used to reduce numerical diffusion in dye advection [17]. Here, higher level of details are
obtained with no extra effort. We also experimented with a trajectory based function with an emphasis on velocity magnitudes,
F (x∗ ) = sin(2πf x∗ + 5πf y ∗ ) |v|. This also gives an insight to
the flow around the vortex street as well as the material lines (Figure 9, second row).
7.4 Flow Scales
A flow with different scales of fluctuations is generated by adding
perturbations to vorticity in the spectral solution of the vorticity
equations; perturbations with two different frequencies are used
on two sides of the grid. A periodic reaction function (F (v) =
sin(2πf vx + 3πf vy ) with f = 0.04) based on velocity quickly
reveals the difference between small and large scales of the flow.
High frequency oscillations in velocity give more oscillatory patterns while large scale fluctuations give smoother patterns (Figure 10). These last two examples also show that this method can
be used to visualize laminar to turbulent transition.
8 C ONCLUSION AND FUTURE WORK
We have presented a flow visualization method based on an advection reaction model. Our results show that this model provides versatile visualization solutions with a simple and efficient system for

Figure 9: Karman vortex streets: Reaction with two different functional sources

Figure 6: Turbulent flow: Reaction with straddling at t = 350dt. Left:
start time= 300dt, running time= 50 steps. Right: start time= 200dt,
running time= 150 steps.

Figure 7: Turbulent flow: Reaction with functional sources with
horizontal velocity (left) and distance (right). Simulation started at
t = 200dt and run for 150 steps.

analysis of pattern formation to define other effective functional
properties and application of the method to 3D are some of the future work.
R EFERENCES

Figure 5: Turbulent flow: Reaction with straddling (1st row) and
functional sources with horizontal velocity (2nd row), distance (3rd
row), and regularized tangent function (4th row). From left to right:
t = 50dt, t = 350dt.

both Lagrangian and Eulerian flow information. Furthermore, the
simulation environment is flexible and allows user control. Further

[1] R. Acar. Oscillation-free advection of interfaces with high order semilagrangian schemes. Computers and Fluids, 38(1):137–159, 2009.
[2] R. Acar and P. Boulanger. Digital marbling: A multiscale fluid
model. IEEE Transactions on Visualization and Computer Graphics,
12(4):600–614, 2006.
[3] G. Boffetta, G. Lacorata, G. Redaelli, and A. Vulpiani. Detecting
barriers to transport: A review of different techniques. Physica D,
159:58–70, 2001.
[4] D. Burkle, T. Preusser, and M. Rumpf. Transport and anisotropic diffusion in time-dependent flow visualization. In IEEE Visualization’01,
pages 61–68, 2001.
[5] B. Cabral and L. Leedom. Imaging vector fields using line integral
convolution. In Computer Graphics (Proceedings of SIGGRAPH 93),
volume 27, pages 263–272, 1993.

143

Figure 8: Turbulent flow: Reaction with a sinusoidal source and with
decay: λ = 1.5 (top), λ = 0.5 (middle). Bottom: Reaction with a
sinusoidal source (with a power based on velocity magnitude) and
with decay. From left to right: t = 50dt, t = 350dt.

Figure 10: Flow scales: Reaction with a sinusoidal source in a flow
with two different scales of fluctuations on the left and right halves of
the grid. From left to right: t = 25dt, t = 120dt.

[6] R. Fuchs, R. Peikert, F. Sadlo, B. Alsallakh, and M. Groller. Delocalized unsteady vortex region detectors. In VMV 2008, pages 81–90,
2008.
[7] C. Garth, F. Gerhardt, X. Tricoche, and H. Hagen. Efficient computation and visualization of coherent structures in fluid flow applications. IEEE Transactions on Visualization and Computer Graphics,
13(6):1464–1471, 2007.
[8] C. Garth, G. Li, X. Tricoche, C. Hansen, and H. Hagen. Visualization of coherent structures in transient 2d flows. In Topology based

144

methods in visualization II, pages 1–13, 2007.
[9] G. Haller. Finding finite-time invariant manifolds in two-dimensional
velocity fields. Chaos, 10:99–108, 2000.
[10] G. Haller. Distinguished material surfaces and coherent structures in
3d fluid flows. Physica D, 149:248–277, 2001.
[11] G. Haller and A. Poje. Finite time transport in aperiodic flows. Physica
D, 119:352–380, 1998.
[12] G. Haller and G. Yuan. Lagrangian coherent structures and mixing in
two dimensional turbulence. Physica D, 147:352–370, 2000.
[13] B. Jobard, G. Erlebacher, and M. Hussaini. Lagrangian-eulerian advection for unsteady flow visualization. In IEEE Visualization’01,
pages 53–60, 2001.
[14] B. Kim, Y. Liu, I. Lamas, and J. Rossignac. Advections with significantly reduced dissipation and diffusion. IEEE Transactions on
Visualization and Computer Graphics, 13(1):135–144, 2007.
[15] R. Laramee, H. Hauser, H. Doleisch, B. Vrolijk, F. Post, and
D. Weiskopf. The state of the art in flow visualization: dense and
texture based techniques. Computer Graphics Forum, 23(2):203–221,
2004.
[16] G. Li, X. Tricoche, and C. Hansen. Gpuflic: Interactive and
accurate dense visualization of unsteady of unsteady flows. In
Eurographics/IEEE-VGTC Symposium on Visualization, pages 1–6,
2006.
[17] G. Li, X. Tricoche, and C. Hansen. Physically-based dye advection for
flow visualization. Computer Graphics Forum, 27(3):727–734, 2008.
[18] J. McWilliams. The emergence of isolated coherent vortices in turbulent flow. Journal of Fluid Mechanics, 146:21–43, 1984.
[19] I. Mezic and S. Wiggins. A method for visualization of invariant sets
of dynamical systems based on ergodic partition. Chaos, 9:213–218,
1999.
[20] Z. Neufeld, C. Lopez, and P. Haynes. Smooth filamental transition
of active tracer fields stirred by chaotic advection. Physical Review
Letters, 82(12):2606–2609, 1999.
[21] A. Poje, G. Haller, and I. Mezic. The geometry and statistics of mixing
in aperiodic flows. Phys. Fluids A, 11:2963–2968, 1999.
[22] A. Sanderson, C. Johnson, and R. Kirby. Display of vector fields using
a reaction-diffusion model. In IEEE Visualization’04, pages 115–122,
2004.
[23] A. Sanderson, M. Meyer, R. Kirby, and C. Johnson. A framework for
exploring numerical solutions of advection-reaction-diffusion equations using a gpu-based approach. Computing and Visualization in
Science, 12(4):155–170, 2009.
[24] S. Shadden, F. Lekien, and J. Marsden. Definition and properties of
lagrangian coherent structures from finite-time lyapunov exponents in
two-dimensinal aperiodic flows. Physica D, 212:271–304, 2005.
[25] H.-W. Shen and D. Kao. Uflic: A line integral convolution algorithm
for visualizing unsteady flows. In IEEE Visualization’97, pages 317–
323, 1997.
[26] K. Shi, H. Theisel, T. Weinkauf, H.-C. Hege, and H.-P. Seidel. Finitetime transport structures of flow fields. In PacificVis’08, pages 63–70,
2008.
[27] K. Shi, H. Theisel, T. Weinkauf, H.-C. Hege, and H.-P. Seidel. Visualizing transport structures of time-dependent flow fields. IEEE Comput.
Graph. Appl., 28(5):24–36, 2008.
[28] A. Staniforth and J. Cote. Semi-lagrangian integration schemes for
atmospheric models- a review. Month. Weather Rev., 119(9):2206–
2223, 1991.
[29] J. van Wijk. Image based flow visualization. ACM Transactions on
Graphics, 21(3):745–754, 2002.
[30] D. Weiskopf. Dye advection without the blur: A level set approach
for texture-based visualization of unsteady flow. Computer Graphics
Forum, 23(3):479–488, 2004.
[31] D. Weiskopf, G. Erlebacher, and T. Ertl. A texture based framework
for spacetime-coherent visualization of time dependent vector field. In
IEEE Visualization’03, pages 107–114, 2003.
[32] D. Weiskopf, F. Schramm, G. Erlebacher, and T. Ertl. Particle and
texture based spatiotemporal visualization of time dependent vector
field. In IEEE Visualization’05, pages 639–646, 2005.

