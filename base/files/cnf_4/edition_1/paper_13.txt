Uncertain Topology of 3D Vector Fields
Mathias Otto∗

Tobias Germer†

Holger Theisel‡

Visual Computing Group at Otto-von-Guericke University Magdeburg

A BSTRACT
We present a technique to visualize global uncertainty in stationary
3D vector fields by a topological approach. We start from an existing approach for 2D uncertain vector field topology and extend this
into 3D space. For this a number of conceptional and technical challenges in performance and visual representation arise. In order to
solve them, we develop an acceleration for finding sink and source
distributions. Having these distributions we use overlaps of their
corresponding volumes to find separating structures and saddles.
As part of the approach, we introduce uncertain saddle and boundary switch connectors and provide algorithms to extract them. For
the visual representation, we use multiple direct volume renderings.
We test our method on a number of synthetic and real data sets.

step sizes for the Monte Carlo integration in a preprocess.
• Stream line integration: we introduce a modification of the
uncertain stream line integration from [22] which makes the
integration more accurate with respect to varying integration
step sizes.
• New uncertain topological features for 3D fields: while many
concepts (e.g., critical points) have a straightforward extension from 2D to 3D, there are 3D topological features which
do not exist in 2D. In particular, we introduce the concept
of uncertain saddle connectors as well as uncertain boundary
switch connectors and provide algorithms to extract and visualize them.

Keywords:
Uncertainty Visualization, Vector Field Data,
Topology-based Techniques
1 I NTRODUCTION
An appropriate visual representation of uncertainty is still one of
the main challenges in visualization [15]. Although a variety of approaches has been developed to represent uncertainty for different
data classes, the problem is especially challenging for flow data.
For this, uncertainty is a global phenomenon: along with other
quantities, the uncertainty is transported within the flow [22].
Different approaches exist to visualize the uncertainty of vector
fields in a local context. In contrast, [22] explains the necessity to
treat uncertainty of vector fields in a global context and presents an
approach for 2D fields by defining and extracting uncertain vector
field topology.
However, flow data is often obtained from simulations in 3D
space. In order to analyze the effect of uncertainty (e.g., resulting
from different parameter settings in the simulation), appropriate visualizations are necessary that take the uncertainty and its global
transport into account. This paper presents the first approach to
visualize the global uncertainty of 3D vector fields. For this, we
extend the concepts of 2D uncertain topology to 3D fields. While
some concepts of 2D uncertain topology can be easily extended to
3D, a number of conceptional and technical challenges have to be
solved in order to establish uncertain topology as a visualization approach for 3D flow data. Their solutions are the main contributions
of this paper:
• Performance of finding the uncertain segmentation: the 2D
approach [22] was based on a Monte Carlo particle integration. A straightforward extension to 3D leads to unacceptable computing times, because a higher number of particles is
needed. To solve this, we introduce a new preprocess as well
as an efficient CUDA implementation.
• Performance and accuracy of finding critical points: to improve the accuracy and performance we approximate optimal
∗ e-mail:

matotto@isg.cs.uni-magdeburg.de
germer@isg.cs.uni-magdeburg.de
‡ e-mail: theisel@isg.cs.uni-magdeburg.de
† e-mail:

IEEE Pacific Visualisation Symposium 2011
1 - 4 March, Hong Kong, China
978-1-61284-934-8/11/$26.00 ©2011 IEEE

• Finding saddles: finding saddles in 2D uncertain fields is done
by a Monte Carlo integration of an appropriate derived field.
For the 3D case we can rely on a simpler extraction based on
the found sources and sinks.
• Visual representation: for 2D vector fields the uncertain topological skeleton consists of a number of 2D scalar fields; for
their visualization a number of standard methods are available (in [22] height surfaces where chosen). In 3D, the data to
be visualized are a multitude of partially overlapping volume
data sets (where the overlapping parts are particularly interesting). For the visual representation we use volume renderings
for the distributions and the uncertain inflow/outflow regions.
Input data: the input of our approach are multiple 3D steady vector fields, i.e., a collection of N 3D vector fields describing different
simulations or measurements of a 3D flow. Each of the fields describes a simulation/measurement of the same flow phenomenon
including certain errors and uncertainties. In this paper, we do not
analyze the source of the errors but focus on the impact of the induced uncertainty. See [23] for a classification of different sources
of uncertainty.
2

R ELATED WORK

Incorporating uncertainty into visualization is a well-researched but
still challenging problem. Here we restrict our treatment of related
work to uncertainty visualization in flow visualization. Glyph based
approaches are presented in [17, 36]. A reaction-diffusion model to
describe uncertainty is presented in [28]. Texture based flow visualization methods incorporating uncertainty can be found in [3, 4].
[37] describes an approach to uncertainty visualization in bidirectional vector fields. All approaches mentioned above have in common that they focus on 2D data and that they treat uncertainty as
local phenomenon. A first approach to visualize the global impact
of uncertainty in flow fields was given in [22] by extending topological concepts to uncertain flow data.
A class of approaches related to ours is the extraction of Lagrangian Coherent structures in flows because also there the transport of particles over a certain time is considered to find coherent
structures. Based on this, [10] describes an approach to analyze
the reliability of flow predictions. Contrary to our work, the input
there are ”hard” flow fields, i.e., there is a well-defined and unique
velocity vector at each location in space-time.

67

In DT-MRI visualization, probabilistic fiber tracking has been
proposed [19, 30] which relates to our approach but works on different data classes.
Vector field topology – transition from 2D to 3D
Topological methods are a standard tool for visualizing 2D vector
fields. Starting with [12], a significant amount of research has been
done in the field [26, 16].
For 3D fields, most topological structures are well-known and
straightforward extensions from 2D [2, 5, 24]. Hence, immediately
after the introduction of 2D topological methods, 3D methods have
been proposed as visualization approaches [13, 9]. However, different technical, perceptional and theoretical reasons [32] hindered 3D
topological methods from being as common as visualization tool
as 2D methods. In fact, they were restricted to data sets with a
rather low topological complexity [13, 9, 18]. A number of technical [14, 8, 29, 33] and conceptional [20, 21, 31, 34] improvements
were necessary to make 3D topological methods applicable as standard tools.
In addition, further developments based on topological methods
exist [27, 35]. Also, there are approaches to extend topological
methods to unsteady vector fields which is out of the scope of this
paper.
3

U NCERTAIN VECTOR FIELDS

This section develops the concept of 3D uncertain vector fields and
their topology. The theoretical concepts of 2D uncertain vector
fields [22] translate straightforward to the 3D case. We first review
and extend the relevant concepts to 3D.
3.1 Theoretical framework
This section is a direct extension of the 2D uncertainty concepts in
[22] to 3D.
A certain 3D vector field assigns a 3D vector (u, v, w)T to every
location (x, y, z)T . For an uncertain vector field, every location is
assigned a 3D probability distribution function. This leads us to the
definition:
Definition 1. A stationary 3D uncertain vector field over the domain D is a 6D scalar field ρv (x, y, z ; u, v, w) with
• (x, y, z)T ∈ D and (u, v, w)T ∈ R3
• ρv (x, y, z; u, v, w) ≥ 0
•

∞ ∞ ∞
−∞ −∞ −∞ ρv (x, y, z ; u, v, w) du dv dw = 1 for all (x, y, z) ∈ D.

The value ρv (x, y, z ; u, v, w) du dv dw denotes the probability that
at the location (x, y, z) the vector field has some value in the range
[u, u + du] × [v, v + dv] × [w, w + dw].
A particle seeded in some position (xi , yi , zi ) ∈ D moves along
a vector that is randomly chosen by evaluating ρv (xi , yi , zi ; u, v, w).
This means that it does not make sense to integrate particular particles in the flow. Instead, 3D particle density distribution functions
are integrated which are defined as follows:
Definition 2. A 3D particle density function over the domain D is a
3D time-dependent scalar field p(x, y, z; t) with (x, y, z) ∈ D, t ∈ R+
and
• p(x, y, z; t) ≥ 0 for all (x, y, z) ∈ D and t ≥ 0
•

68

D p(x, y, z; t) dx dy dz ≤ 1 for all t ≥ 0.
(we use ≤ instead of = because particles can leave the domain)

The value p(x, y, z; t) dx dy dz defines the ratio of particles in
[u, u + du] × [v, v + dv] × [w, w + dw] in relation to the initial number
of particles in D at t = 0.
For the integration of a whole 3D uncertain vector field ρv we
consider the infinite domain D = R3 to avoid boundary effects. The
particle density functions are represented by virtual sampling particles without inertia which are non-deterministically transported by
the uncertain vector field. We consider a time interval ∆t that is
short enough that the movement of a particle can be approximated
by a straight line. We also assume that ∆t corresponds to the distribution in ρv , i.e., that the vector field describes the probability of a
particle to reach another location in time ∆t. The handling of other
time steps is described in section 3.4.
After one integration step the number of particles in the infinitesimal volume dx dy dz at some location (x, y, z) is the sum
of the number of particles in cells di dj dk at all locations (i, j, k)
times the probabilities that they are transported from (i, j, k) to
(x, y, z) in the time interval ∆t. The probabilities are given by
y− j z−k
y− j
x−i
z−k
ρv (i, j, k; x−i
∆t , ∆t , ∆t ) d( ∆t ) d( ∆t ) d( ∆t ). After the division
by the cell volumes we get dx dy dz = di dj dk. The following
equation expresses the transport of particle densities:
p(x, y, z; t + ∆t)
=
=

D
1
∆t 3

p(i, j, k; t) ρv (i, j, k;
D

x−i y− j z−k
∆t , ∆t , ∆t

p(i, j, k; t) ρv (i, j, k;

y− j
z−k
) d ( x−i
∆t ) d ( ∆t ) d ( ∆t )

x−i y− j z−k
∆t , ∆t , ∆t

) di dj dk.

(1)

With this equation we can define uncertain stream lines as follows:
Definition 3. A stream line of a 3D uncertain vector field started
at the initial particle density function p0 (x, y, z) is a time-dependent
particle density function p(x, y, z; t) with p(x, y, z; t0 ) = p0 (x, y, z).
The evolution over the time of this particle density function is described by Equation 1.
Definition 3 defines a forward integration of p in
ρv (x, y, z; u, v, w). A backward integration can be achieved by
a forward integration of p in ρv (x, y, z; −u, −v, −w). It also
defines the uniqueness of streamlines that start at the same initial
particle density function p0 (x, y, z). Definition 2 guarantees that
3
D p(x, y, z; t + ∆t) dx dy dz = 1 for all positive ∆t if D = R .
With the concept of stream lines of 3D uncertain vector fields
we can now define the uncertain counterparts of critical points.
For this we observe the stream line integration from every location (i, j, k) (with initial particle density functions p(x, y, z; t0 ) =
δ (x − i, y − j, z − k)) and their asymptotic behavior for t → ∞. The
stream lines leave the domain or converge to critical point distribution functions:
Definition 4. A particle density function p0 (x, y, z) is a critical distribution of ρv if ∂∂ pt = 0 holds for a stream line integration started
at p(x, y, z; t0 ).
Note that also any linear combination of n given critical distributions p1 (x, y, z), . . . , pn (x, y, z) of ρv is a critical distribution
of ρv as well: ∑ni=1 αi pi (x, y, z) is a critical distribution for any
0 ≤ α1 , . . . , αn ≤ 1 and ∑ni=1 αi ≤ 1.
From this it follows that critical distributions are not isolated, but
build a continuum of critical distributions which follows directly
from definition 3. For a topological analysis we have to find a finite
set of linear independent critical distributions, so that every critical distribution is expressed by a linear combination of them. We
can classify the type of critical distribution by the behavior under
different integration directions:

with v = (u, v, w)T and


0.4
T = T (x, y, z) =  0
0

0
0.4
0


0
0 .
0.4

(4)

This uncertain 3D vector field consists of two source distributions,
four sink distributions, two outflow regions and five inflow regions.

(a)

(b)

Figure 1: Example field (2): (a) critical points and illuminated stream
lines of vavg from section 3.2. Sources are displayed by red ellipsoids, sinks by blue elipsoids, repelling saddles by red cylinders, and
attracting saddles by blue cylinders (b) sink (blue) and source (red)
distributions of ρv , represented as volume rendering, including inflow
and outflow regions that are interpreted as sources and sinks

Definition 5. A critical distribution p(x, y, z) is a sink distribution
of ρv if any small perturbation of p converges to p under forward
integration in ρv . The same applies to source distributions using
backward integration instead of forward integration.
Saddle distributions cannot be found in this way, because they
are unstable under forward and backward integration. For the topological segmentation we focus on sinks and sources. This is justified by the fact that for a classical topology of certain vector fields
a topological segment is defined by a pair of a source a and a sink b
containing all locations where a forward integration ends in b and a
backward integration ends in a. Therefore, computing our topology
does not rely on the detection of saddles since they can be obtained
implicitly through computing the separation structures.
We define linear independent sequences of sink and source distributions.
Definition 6. A spanning sink sequence p1 (x, y, z), . . . , pn (x, y, z)
is a sequence of sinks that are linearly independent and every
sink p(x, y, z) of ρv can be described as ∑ni=1 αi pi (x, y, z) with
0 ≤ α1 , . . . , αn ≤ 1 and ∑ni=1 αi ≤ 1. A spanning sources sequence
p˜1 (x, y, z), . . . , p˜m (x, y, z) is a sequence of sources that are linearly
independent and every source p(x,
˜ y, z) of ρv can be described as
∑mj=1 β j p˜ j (x, y, z) with 0 ≤ β1 , . . . , βm ≤ 1 and ∑mj=1 β j ≤ 1.
The weights αi and β j of the linear combinations that describe
any sink or source distribution are called coordinates of p and p˜
with respect to the spanning sink and source sequences.
3.2 Example
In order to illustrate the next sections and further explanations we
give a simple example data set. We start by defining the vector field
describing the average of the distribution at each location as


2 (−x (1 − x)(1 + x)(1 − y2 ) − y2 x)
2
2
vavg (x, y, z) =  2 (y (1 − y)(1 + y)(1 − x ) + x y)  (2)
2 (z (1 − z)(1 + z)(1 − x2 ) + x2 z)
over the domain [−2, 2]3 . Figure 1a gives an illustration of this
average vector field. The 3D uncertain vector field is defined as
Gaussian distribution functions:

ρv (x, y, z; u, v, w) =

2π

1
T −1
1
e− 2 (v−vavg (x,y,z)) T (v−vavg (x,y,z))
det(T )
(3)

3.3 Computation of critical distributions
In order to find critical distributions, we adapt the method from
[22] to 3D. Here, an uniformly distributed particle density function
was created. After forward and backward stream line integration,
the particle density function converges to a critical distribution,
which represents sinks and sources, respectively. The particle density functions were implemented using a high number of particles
which were traced over time, until the particle distribution becomes
invariant. In the 3D case this technique works as well. However,
it is computationally very expensive, because many more particles
are needed to adequately represent density distribution functions
and the stream line integration is more complex.
To make the technique applicable in 3D, we introduce an acceleration technique. To improve the convergence of the particle integration we introduce a precomputed optimal integration step size
at every grid point. For this we approximate the absolute error between four and eight integration steps with step size ts = ∆t and
ts = ∆t2 , respectively. This yields
err(x, y, z) = ||v4 − v8 || + ||T4 − T8 ||F

(5)

with
v1 (x, y, z)
vi = vi (x, y, z)
T1 (x, y, z)
Ti = Ti (x, y, z)

=
=
=
=

(x, y, z)T + ts vavg (x, y, z)
vi−1 + ts v(vi−1 )
ts T (v0 )
Ti−1 + ts T (vi )

The error approximation starts with a given minimum of ∆t which
we increase until a given error threshold is reached. We can use different step sizes in every data point of the grid, because we are only
interested in the final particle distribution and not in the integration
time. These step sizes are trilinearly interpolated as well as the vector field. An adaptively chosen step size for every particle in every
integration step as known from Runge-Kutta method is infeasible
according to present computation power.
Figure 1b shows an example, where critical distributions are extracted. In conclusion, this process significantly accelerates the
search for critical distributions while keeping the numerical errors
small. In our example field (2) we get the same result with the half
number of integration steps, keeping the same accuracy.
3.4 Stream line integration with Gaussian distribution
functions
The stream line integration from definition 3 assumes a constant
step size ∆t corresponding to the vector field distribution ρv . However, for the implementation we need different step sizes in order
to minimize integration steps while maintaining stability. Unfortunately, different step sizes cannot be applied to equation (1), because (multiple) convolution of linearly scaled distribution functions does not yield the original distribution function. For example,
two integration steps with ∆t
2 would result in a different particle
density function than a single integration step with ∆t.
For the special case of Gaussian distribution functions we show
how to scale the distribution functions for different step sizes appropriately. We assume a target step size of ∆ts = ∆ts , i.e., s integration steps of the Dirac delta should result in the original distribution from ρv . If we assume Gaussian distributions, our integration

69

method can also be modeled by a stochastic differential equation
describing the Brownian motion
t

X(t) = x0 +

t

b(X(r))dr +
0

B(X(r))dW

(6)

0

with x0 as initial point, b(X(r)) as mean vector field, B(X(r)) as
field of covariance matrices, and W as standard Wiener process. For
the standard Wiener process there exists a heuristic dW ≈ (dt)1/2
[6]. In our discrete case this means (dt)1/2 = s−1/2 . Here we can
confirm the correctness of this rule by considering the 1D Gaussian
distribution function:
1 x−µ 2
1
f (x) = √
e− 2 ( σ )
2π σ

(7)

We want to reproduce this function by convolving a Dirac
delta δ (x) s-times with a scaled distribution function g(x, s). In
order to achieve this, we scale the standard deviation with s−1/2
and the mean value with s−1 :
− 21

1

g(x, s) =

2π
s

e

µ

√x−1s

s σ

2

.

(8)

σ

Starting with a Dirac delta
h0 (x)

=

δ (x),

the convolution of h with g(x, s) is described by
∞

hk+1 (x) =

−∞

hk (x)g(x − r, s)dr.

This series is described by the following function
√
2
s
− 1 (kµ −xs)
e 2k sσ 2 .
r(x, k, s) = √
2kπ σ

(9)

integration of ρv , which makes their computation difficult. A solution for 2D uncertain vector fields is proposed in [22]. This approach computes saddle distributions by the backward integration
of the squared velocity gradient of ρv . The result contains all critical
distributions, which have to be classified. This is done by computing a modified Poincare-Hopf index applied on ρv . However, such
a classification becomes difficult and unstable in the 3D case.
Here we follow a different strategy to find separating structures.
We consider the definition of repelling and attracting saddle points
for certain 3D vector fields:
• A repelling saddle point has one inflow direction and a 2D
plane with outflow behavior.

(10)

Integrating δ (x) s-times corresponds convolving it s-times. Then,
k = s and r(x, k, s) = f (x). Therefore, integrating g(x, s) s-times
results in the original distribution function f (x). Thus, the mean
value has to be scaled by s−1 and the standard deviation by s−1 in
order to properly integrate with step size s−1/2 . This argumentation also holds for the 3D case, where the covariance matrix T (see
equation (3) ) has to be scaled by s−1/2 .
In the context of stochastic differential equations, our method
can also be regarded as a random dynamical system [11]. Our
search for uncertain sources and sinks is equivalent to the computation of random attractors [1]. In contrast, we also consider nonattracting structures like saddles and separating structures and give
efficient methods to compute the uncertain topology.
3.5 Uncertain saddle and boundary switch connectors
For the visualization of separating structures of 3D vector fields
only a few approaches exist. The direct visualization of separation
surfaces do not work well on complex 3D vector fields because of
visual clutter. One solution to this problem is the concept of saddle
and boundary switch connectors [31, 34]. A saddle connector is
the intersection curve of the saddle surfaces from an attracting and
a repelling saddle point. Therefore, it is the intersection from two
separating surfaces.
Here we adapt the saddle connector approach for 3D uncertain
vector fields. In the certain case saddle points are the starting points
for the integration of the saddle surfaces. In 3D uncertain vector
fields saddle structures are unstable under forward and backward

70

Figure 2: Example field (2): volume renderings of corresponding coordinates (top, left) of the sink distributions; (top, right) of the outflow
distributions; (bottom, left) of the source distributions; (bottom, right)
of the inflow distributions

• An attracting saddle point has one outflow direction and a 2D
plane with inflow behavior.
In both cases the 2D plane separates two sources and two sinks,
respectively. Based on this observation and the segmentation of 3D
uncertain vector fields, we can compute the separating structures
without saddle distributions in uncertain vector fields.
Given n sink distributions and m source distributions, a stream
line integration started from every location (x, y, z) converges to a
sink distribution under forward integration and a source distribution under backward integration. Considering definition 6 these
sink and source distributions can be described by linear combinations ∑ni=1 αi pi (x, y, z) and ∑ni=1 βi p˜i (x, y, z) with respect to the
spanning sink sequence (p1 (x, y, z), . . . , pn (x, y, z)) and the spanning
source sequence ( p˜1 (x, y, z), . . . , p˜m (x, y, z)). The corresponding coordinates αi (x, y, z) and β j (x, y, z) are scalar fields in the domain
D. These scalar fields represent the probability that a particle at
a location (x, y, z) moves to the i-th sink and comes from the j-th
source distribution. Figure 2 shows volume renderings of these
scalar fields. In most parts of the field the values are either 1 or
0, meaning that either all or no particles converge to the sink resp.
source. In contrast, at locations with values 0 < αi (x, y, z) < 1 and
0 < β j (x, y, z) < 1, the particles converge to multiple sinks resp.
sources. These volumes represent the separating structures for uncertain vector fields. Now we can define uncertain saddle connectors as overlapping of separating volumes equivalent to the intersection of separating surfaces:
Definition 7. Given is a 3D uncertain vector field containing
the spanning sink sequence (p1 (x, y, z), . . . , pn (x, y, z)) and the

(a)

(b)

(a)

(b)

Figure 3: Example field (2): (a) uncertain saddle connectors (b)
uncertain saddle connectors uncertain saddle and boundary switch
connectors

Figure 4: Example field (2): (a) visualization of the complete topology with saddle connectors (b) inflow, ouflow regions and boundary
switch connectors added to the visualization

spanning source sequence ( p˜1 (x, y, z), . . . , p˜m (x, y, z)) as well as
the corresponding probability fields (α1 (x, y, z), . . . , αn (x, y, z)
and (β1 (x, y, z), . . . , βm (x, y, z).
We select a pair
(αa (x, y, z), αb (x, y, z)) ∈ (α1 (x, y, z), . . . , αn (x, y, z)) and another pair (βc (x, y, z), βd (x, y, z)) ∈ (β1 (x, y, z), . . . , βm (x, y, z)). An
uncertain saddle connector is the volume where the following
scalar field s(x, y, z) > 0:

With respect to the goal of an adequate visualization we display inflow and outflow regions at the boundaries of the domain
also as volume rendering, but more transparent than the real sink
and source distributions. This avoids an occlusion of the inner features. We use for inflow regions a transparent to red transfer function similar to source distributions and for outflow a transparent to
blue transfer function similar to sink distributions. Additionally we
visualize boundary switch connectors with a transparent to yellow
transfer function. The final result is show in figure 4b. In order to
further reduce occlusions we can also hide these boundary regions
and only display the sink and source distributions and the saddle
connectors. This is shown in figure 4a.

s(x, y, z) = (1 − αm (x, y, z))(1 − βm (x, y, z))

(11)

αm (x, y, z) = max(αa (x, y, z), αb (x, y, z))

(12)

βm (x, y, z) = max(βc (x, y, z), βd (x, y, z))

(13)

with
and

5

T ECHNICAL R EALIZATION

Figure 3a shows an example. We extend this definition to boundary switch connectors by treating outflow and inflow regions as sink
and source distributions, as shown in figure 3b.
Definition 7 gives us a particular uncertain saddle connector.
However, not all combinations of corresponding probability fields
create saddle connectors. To avoid the unnecessary computation
of empty saddle connector fields we compute all uncertain saddle
connectors in one scalar field sall , simply by replacing αm (x, y, z)
with
αmax (x, y, z) = max(α1 (x, y, z), . . . , αn (x, y, z))
(14)

5.1 Data acquisition

and βm (x, y, z) with

The approximation of optimal step sizes is a precomputation. For
this we computed scalar fields for both forward and backward integration. Because the operations described in section 3.3 are local,
the computations are done in parallel. In our test cases we use a
minimum step size ∆ts min = 0.002 and a maximum ∆ts max = 50.

βmax (x, y, z) = max(β1 (x, y, z), . . . , βm (x, y, z))

(15)

resulting in
sall (x, y, z) = (1 − αmax )(1 − βmax ).

(16)

Note that these saddle and boundary switch connectors already contain the saddle points. They appear at crossings of saddle and
boundary switch connectors.
4 V ISUALIZATION
The results of our method are multiple scalar fields, representing
probability distributions of sinks, sources, saddle connectors and
boundary switch connectors. In order to visualize them we use a
volume rendering approach. For this, each type is visualized using a linear transfer function: sinks in transparent to blue, sources
in transparent to red and saddle and boundary switch connectors in
transparent to yellow. To analyze the whole set of sink and source
distributions the alpha value and range of the transfer functions are
user defined, because these features are represented by particle densities, which possibly contain very different maximal values (depending on the size and the global influence of a feature). For a
better visual separation of the different distributions we use specular lighting.

As mentioned in the introduction we get a number of sample vector
fields as input data that describe snapshots of a measured or simulated flow phenomenon. A typical way to model uncertainty in
physics is assuming a Gaussian distribution. For this we compute
the average vector field and the covariances in every data point from
the given vector fields. This results in a compact format of the uncertain vector field ρv that is easy to use for the next computations.
5.2 Approximation of step sizes

5.3 Computing the spanning source/sink sequence
For the computation of the spanning sink and source sequence we
use a Monte Carlo method that is very similar to the approach presented in [22]. It also starts with an uniform particle distribution
p0 in the domain D. For the numerical integration we adapted the
“uncertain” Euler integration step into 3D space. This method is
similar to the Euler-Maruyama scheme. It uses the uncertain vector
field, the step size field, and the particle distribution. In the 3D case
the particle distribution consists of millions of particles instead of
hundreds of thousands of particles in the 2D case. The only practical way to deal with that mass of computations is using the GPU.
Therefore we implemented the whole integration in CUDA. Every
particle creates its own thread. The uncertain vector field and the
step size field have to be copied only at the start into the GPU memory. Then we copy groups of particle positions at every integration
step into the GPU memory and back, because usually they cannot
be handled at once.
We run this Monte Carlo method until the particle distribution
does not change significantly any more. This is achieved by using

71

buckets to observe the particle distribution. We observe the convergence of the particle density by accumulating the changes of all
buckets over 10 integration steps and divide it by the number of particles times 10. We stop the integration when this value is smaller
than 0.01. After that the number of particles in the buckets represent the resulting distribution.
An additional treatment is necessary for the domain boundary.
Here we search for inflow and outflow regions in an uncertain context. For this we evaluate the vectors and covariance matrices at the
boundary of the domain. We create uniformly distributed sample
points on an ellipse that represents the spatial standard deviation
around the mean vector. Now we can count the number of sample
points inside and outside the domain. The ratio gives the probability that this boundary vector points outside or inside the domain.
These probabilities are also stored in the particle density field. All
computations concerning the particle distribution are evaluated on
a grid that has twice the resolution of the data set. This prevents
ignoring small and thin features.
Finally we have to find local maxima in the particle density and
apply a flood fill algorithm to them. This gives us the spanning
source and sink sequence.

(a)

5.4 Computing corresponding coordinates
The computation of the coordinates belonging to the sinks and
sources is done exactly in the same way as in the 2D case. A
large number of particles are started at every data point (for exact
numbers see section 6). During the Monte Carlo integration they
reach sinks and sources, respectively. For each data point a distribution is computed that consists of the probabilities that the sinks
and sources are reached. We modify only the acceleration technique that uses spatial coherence. Instead of using the proposed
onion skin scheme as particle seeding structure, we use the split
planes of an octree as seeding scheme that works better for our 3D
data sets.
6

R ESULTS

To test our approach, we apply the extraction of uncertain 3D topology to two simulated data sets. Our test system is an Intel Q6600
with 8GB RAM and a NVIDIA GeForce GTX 460.
6.1 DNS simulation
Direct Numerical Simulations (DNS) are becoming increasingly
useful for turbulent flow applications. They constitute a natural
complement to experiments, in particular to investigate in detail
complex physical processes in simple geometries. It does not rely
on any approximate turbulence models, nevertheless the computational cost is tremendous.
The simulations presented here have been carried out with the
DNS code π 3 originally developed by Th´evenin and coworkers [7].
It is a finite-difference three-dimensional code solving the fully
compressible Navier-Stokes equations for reacting flows. Derivatives are computed using centered explicit schemes of order six, the
temporal integration is realized with a Runge-Kutta algorithm of order four. The code is parallelized through domain decomposition.
In this study a turbulent air flow without reactions is considered
in a cubic domain with a size of 0.5 × 0.5 × 0.5cm3 with 51 equidistant points in each directions. This leads to a fixed, homogeneous
spatial resolution of 100µ m, necessary to resolve accurately the fine
details of the flow. Periodic boundary conditions are applied on all
sides of the domain.
A turbulent flow is considered initially superposed with a field of
synthetic homogeneous isotropic turbulence corresponding to a von
K´arm´an spectrum with Pao correction for near-dissipation scale.
An initial turbulence field is generated with a turbulent fluctuation velocity u′ = 3 m/s and an integral scale Lt = 4.5 mm. It yields

72

(b)
Figure 5: DNS simulation: (a) topology of the turbulent flow phenomenon example, described by an uncertain vector field (b) critical
points and illuminated stream lines of the turbulent flow phenomenon
example

a turbulent Reynolds number of Ret = 250 and the corresponding
Kolmogorov scale is 25 mm.
The result of such a simulation was given as a time series of 50
vector fields in an interval of 3.2µ s. The simulated turbulent flow
changes its characteristic very fast. In the beginning the flow contains strong divergence that decreases over the time. So we can find
topological features inside the field only in the beginning, otherwise
there are only features generated by boundary effects. For the creation of the uncertain vector field we have chosen four time steps in
a rather small time interval from 0.0025µ s to 0.01µ s such that the
field does not change too much and contains some features. The resulting visualization in figure 5a contains 5 sink and 3 source distributions (including inflow and outflow) and one saddle like region in
the middle of them. The computation time for this example is about
42 minutes: a few seconds precomputation of the step size fields,
7 minutes for the computation of the spanning sink and source sequence with only 20 particles per data point (1000 integration steps
were needed for each sequence) and 35 minutes for the computation
of the corresponding coordinates with 200 particles per grid point.
In comparison figure 5b shows the common topological skeleton of
the average certain vector field. It contains 234 critical points and

no clear structure is visible. This data set confirms for 3D what
has already been shown for 2D [22]: the consideration of global
uncertainty in flow fields tends to act as a feature reduction. The
uncertain skeleton contains only the most important features, while
unimportant topological features in the certain flow data (which are
mainly due to noise) are removed.
6.2 Flow in the Pacific Ocean
These simulations were carried out at the German Climate Computing Center using the MPI-OM ocean model. The MPI-OM
model was developed at the Max-Planck-Institute for Meteorology
in Hamburg, and is used to simulate various processes in the different oceanic regions. It is part of the simulations that are carried
out for the IPCC assessment reports. The data set has a horizontal
resolution of 1 degree (360x180) and consists of 40 depth levels,
specified by pressure, and shows the velocity of ocean currents.
The data set contains the average vector fields for each mouth of
one year.
We use these velocity fields of this simulation to create an uncertain vector field. It symbolizes the general global flow in the oceans
over one year. This data set contains several thousands of features.
For this reason we choose only a section of this data set, a part of
the pacific ocean in front of South America. The original data set
is given on a stacked grid. To use our method we resampled the
data on an uniform grid. The grid of the section that we analyze
is 64 × 91 × 100. The result of our analysis contains 124 uncertain
sources and 104 sinks as shown in figure 6 and 7. We compare our
result with the analysis of the average vector field, which contains
527 critical points (shown in figure 8).
The runtime of the computation of the uncertain topology is
about 7 hours: 10 minutes precomputation, 50 minutes computation of the spanning sink and sources sequence with 10 particles
per grid point and the rest of the time for the computation of the
corresponding coordinates with 100 particles per grid point. The
reason for this long computation time is the strong variation in velocity in the given data. The precomputation of the step size helps
to compensate for the very slow motion in the deep sea, but it still
stays slow. To compute the spanning source and sink sequence we
needed 12000 integration steps for each sequence until the particles
arrive in an classified region.
7

Figure 6: Flow in the Pacific Ocean: topology of the uncertain vector
field (north top)

C ONCLUSION

This paper presents the – to the best of our knowledge – first approach for a visual analysis of the global uncertainty in 3D vector fields. For this, topological concepts have been applied: starting from an existing solution of 2D uncertain topology, the transformation to 3D data contained the definition of uncertain saddle
and boundary switch connectors, a significant acceleration due to a
better uncertain integration scheme, and a suitable visual representation of the resulting multiple scalar fields defining the uncertain
skeleton. The solution has been tested on a number of 3D uncertain
flow data sets.
The most relevant open question for future research is the extension to uncertain time-dependent flow fields, investigating vortex
cores and vortex regions. However, this is not only an open question for uncertain topology but for topological concepts themselves:
even for certain vector fields, general solutions for a time-dependent
topology are still an open field of research [25]. Further topics for
future work are the extraction of other critical structures like closed
orbits and strange attractors, and the use of uncertain vector field
visualization as a vector field simplification method.
ACKNOWLEDGMENTS

Figure 7: Flow in the Pacific Ocean: topology of the uncertain vector
field (north left)

We thank Gabor Janiga from Otto-von-Guericke University for providing
the DNS data set, and Niklas R¨ober and Michael B¨ottinger from the DKRZ
for the ocean data set. The pictures were generated using Amira. This

73

Figure 8: Flow in the Pacific Ocean: critical points and illuminated
stream lines of the average vector field

work was partially funded by the German Ministry of Education and Science (BMBF) within the ViERforES project (no. 01IM08003C) and by the
Sem- Seg project under the EU FET-Open grant 226042.

R EFERENCES
[1] P. Ashwin and G. Ochs. Convergence to local random attractors. Dynamical Systems: An International Journal, 18(2):139–158, 2003.
[2] D. Asimov. Notes on the topology of vector fields and flows. Technical
report, NASA Ames Research Center, 1993. RNR-93-003.
[3] R. P. Botchen, D. Weiskopf, and T. Ertl. Texture-based visualization
of uncertainty in flow fields. In IEEE Visualization, pages 647–654,
2005.
[4] R. P. Botchen, D. Weiskopf, and T. Ertl. Interactive Visualization of
Uncertainty in Flow Fields using Texture-Based Techniques. In Proc.
Intl. Symp. on Flow Visualization, 2006.
[5] M. S. Chong, A. E. Perry, and B. J. Cantwell. A general classification
of three-dimensional flow fields. Physics of Fluids A, 2(5):765–777,
1990.
[6] L. C. Evans. An introduction to stochastic differential equations. Online Version 1.2, December 2009.
[7] G. Fru, H. Shalaby, A. Laverdant, C. Zistl, G. Janiga, and
D. Th´evenin. Direct numerical simulations of turbulent flames to analyze flame/acoustic interactions. In A. Schwarz and J. Janicka, editors,
Combustion Noise, pages 239–268. Springer Berlin Heidelberg, 2009.
[8] A. V. Gelder. Stream surface generation for fluid flow solutions on
curvilinear grids. In Data Visualization 2001. Proc. VisSym 01, 2001.
[9] A. Globus, C. Levit, and T. Lasinski. A tool for visualizing the topology of three-dimensional vector fields. In IEEE Visualization, pages
33–40, 1991.
[10] G. Haller. Lagrangian coherent structures from approximate velocity
data. Phys. Fluids A, 14:1851–1861, 2002.
[11] B. Hasselblatt and A. Katok, editors. Handbook of Dynamical Systems, volume 1A. North Holland, 2007.
[12] J. Helman and L. Hesselink. Representation and display of vector field
topology in fluid flow data sets. IEEE Computer, 22(8):27–36, August
1989.
[13] J. Helman and L. Hesselink. Visualizing vector field topology in fluid
flows. IEEE Comput. Graph. Appl., 11:36–46, May 1991.
[14] J. Hultquist. Constructing stream surfaces in steady 3D vector fields.
In Proc. IEEE Visualization ’92, pages 171–177, 1992.
[15] C. Johnson. Top scientific visualization research problems. IEEE
Comput. Graph. Appl., 24(4):13–17, 2004.

74

[16] R. Laramee, H. Hauser, L. Zhao, and F. Post. Topology-based flow
visualization, the state of the art. In Proc. Topo-In-Vis, pages 1–20,
2005.
[17] S. K. Lodha, A. Pang, R. E. Sheehan, and C. M. Wittenbrink. Uflow:
visualizing uncertainty in fluid flow. In IEEE Visualization, page 249,
1996.
[18] H. L¨offelmann, H. Doleisch, and E. Gr¨oller. Visualizing dynamical systems near critical points. In Spring Conference on Computer
Graphics and its Applications, pages 175–184, 1998.
[19] M. Maddah, W. M. W. III, S. K. Warfield, C.-F. Westin, and W. E. L.
Grimson. Probabilistic clustering and quantitative analysis of white
matter fiber tracts. In Proc. IPMI, volume 20, pages 372–383, 2007.
[20] K. Mahrous, J. Bennett, B. Hamann, and K. Joy. Improving topological segmentation of three-dimensional vector fields. In Data Visualization 2003. Proc. VisSym 03, pages 203–212, 2003.
[21] K. Mahrous, J. Bennett, G. Scheuermann, B. Hamann, and K. Joy.
Topological segmentation in three-dimensional vector fields. IEEE
TVCG, 10(2):198–205, 2004.
[22] M. Otto, T. Germer, H.-C. Hege, and H. Theisel. Uncertain 2d vector field topology. Computer Graphics Forum (Proceedings of Eurographics 2010, Norrkpping, Sweden), 29(2):347–356, 2010.
[23] A. T. Pang, C. M. Wittenbrink, and S. K. Lodha. Approaches to uncertainty visualization. The Visual Computer, 13:370–390, 1997.
[24] P. A. Philippou and R. N. Strickland. Vector field analysis and synthesis using three dimensional phase portraits. Graphical Models and
Image Processing, 59:446–462, November 1997.
[25] A. Pobitzer, R. Peikert, R. Fuchs, B. Schindler, A. Kuhn, H. Theisel,
K. Matkovic, and H. Hauser. On the way towards topology-based visualization of unsteady flow the state of the art. In H. and E. Reinhard,
editors, Eurographics 2010 - State of the Art Reports. Eurographics
Association, April 2010.
[26] F. Post, B. Vrolijk, H. Hauser, R. Laramee, and H. Doleisch. The
state of the art in flow visualization: Feature extraction and tracking.
Computer Graphics Forum, 22(4):775–792, 2003.
[27] T. Salzbrunn and G. Scheuermann. Streamline predicates. IEEE
Transactions on Visualization and Computer Graphics, 12:1601–
1612, 2006.
[28] A. R. Sanderson, C. R. Johnson, and R. M. Kirby. Display of vector
fields using a reaction-diffusion model. In IEEE Visualization, pages
115–122, 2004.
[29] G. Scheuermann, T. Bobach, H. H. K. Mahrous, B. Hamann, K. Joy,
and W. Kollmann. A tetrahedra-based stream surface algorithm. In
Proc. Visualization 01, pages 151 – 158, 2001.
[30] T. Schultz, H. Theisel, and H.-P. Seidel. Topological visualization of
brain diffusion MRI data. IEEE TVCG, 13(6):1496–1503, 2007.
[31] H. Theisel, T. Weinkauf, H.-C. Hege, and H.-P. Seidel. Saddle connectors - an approach to visualizing the topological skeleton of complex
3D vector fields. In Proc. IEEE Visualization 2003, pages 225–232,
2003.
[32] H. Theisel, T. Weinkauf, H.-C. Hege, and H.-P. Seidel. On the applicability of topological methods for complex flow. In In: Proc. TopoIn-Vis 2005, pages 105–120, 2007.
[33] J. van Wijk. Implicit stream surfaces. In Proc. Visualization 93, pages
245–252, 1993.
[34] T. Weinkauf, H. Theisel, H.-C. Hege, and H.-P. Seidel. Boundary
switch connectors for topological visualization of complex 3D vector
fields. In Data Visualization 2004. Proc. VisSym 04, pages 183–192,
2004.
[35] A. Wiebel, C. Garth, and G. Scheuermann. Computation of localized
flow for steady and unsteady vector fields and its applications. IEEE
Trans. Vis. Comput. Graph., 13(4):641–651, 2007.
[36] C. M. Wittenbrink, E. Saxon, J. J. Furman, A. Pang, and S. Lodha.
Glyphs for visualizing uncertainty in environmental vector fields. In
IEEE TVCG, pages 266–279, 1995.
[37] T. Zuk, J. Downton, D. Gray, S. Carpendale, and J. Liang. Exploration
of uncertainty in bidirectional vector fields. In Visualization and Data
Analysis, volume 6809, 2008.

