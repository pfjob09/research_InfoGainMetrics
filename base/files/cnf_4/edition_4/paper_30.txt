Visualizing Multivariate Networks: A Hybrid Approach
Yingxin Wu∗

Masahiro Takatsuka†

University of Sydney and National ICT Australia

ViSLAB, University of Sydney

A BSTRACT
Multivariate networks are data sets that describe not only the relationships between a set of entities but also their attributes. In this
paper, we present a new technique to determine the layout of a multivariate network using Geodesic Self-Organizing Map (GeoSOM).
During the training process of a GeoSOM, graph distances are nonlinearly combined with attribute similarities based on the network’s
graph distance distribution. The resulted layout has less edge crossings than those generated by the previous methods [18]. We conducted a user study to evaluate the effectiveness of this hybrid approach. The results were compared against the most commonly
used glyph-based technique. The user study shows that the hybrid
approach helps users draw conclusions from both the relationship
and vertex attributes of a multivariate network more quickly and
accurately. In addition, users found it easier to compare different
relationships of the same set of entities. Finally, the capability of
the hybrid approach is demonstrated using the world military expenditures and weapon transfer networks.
Keywords: Multivariate Network, GeoSOM, Graph Drawing
1

I NTRODUCTION

The goal of information visualization is to provide effective visual
abstractions which alleviate the tedious process of digging interested patterns out of massive data sets. Ware has informally classified data into two categories: entities and relationships [15]. Entities are objects of interests, such as people, companies, nations etc.
They are usually described by multiple attributes. In this sense, entities can be considered as points in high dimensional space. Techniques to visualize high dimensional data include glyphs [6], multidimensional scaling [19] etc. Relationships describe the connections between entities. They are usually modeled as graphs, where
entities are represented as vertices and relationships as edges. Various graph drawing algorithms [3] have been designed to produce
visually pleasing layouts, which aim to reveal the structure of relationships.
In this paper, we focus on visualizing multivariate networks
which contain both types of data. Here multivariate has two meanings: 1) each entity has multiple attributes and 2) the same set of entities can have different relationships. Such data sets are ubiquitous
in the real world. For example, an international trading network
data set might contain GDP, population, literacy level or military
expenditure as the attributes of a country. Trading for different commodities (e.g. food, machines) or at different times form various relationships between the countries. Multivariate networks are more
complex than data sets that describe only data entities or relationships. Visualizations should help a user extract information from
both aspects of the data and compare different relationships. For
example, in a friendship network, what kinds of people are more
likely to make friends with each other? In a trading network, how
do the roles of different countries change over period of time?
∗ e-mail:

chwu@it.usyd.edu.au

† e-mail:masa@vislab.net

IEEE Pacific Visualisation Symposium 2008
4 - 7 March, Kyoto, Japan
978-1-4244-1966-1/08/$25.00 ©2008 IEEE

Previously a two-phase hybrid approach was reported to visualize multivariate networks [18]. In the first phase, the GeoSOM
was used to determine the initial layout of a network. Training process of the GeoSOM was modified to consider attribute similarities
and graph distances. In the second phase, the initial layout was
fine tuned by a spherical disk-layout algorithm in order to separate overlapping vertices and to reduce edge crossings. Using this
method, vertices that have similar attributes and are close with respect to graph distances will be mapped onto proximate regions on
the GeoSOM. We believe this hybrid approach can help users gain
insight into the multivariate networks.
We have recently designed a new technique to combine graph
distances with attribute similarities. Graph distances are nonlinearly incorporated into training of the GeoSOM according to the
network’s graph distance distribution. The resulting layouts have
less edge crossings than those generated by the previous method.
A user study was conducted to compare our hybrid approach and
the most commonly used glyph-based technique. The results show
that users are able to complete tasks related to both aspects of a
multivariate network (connections and attribute similarities) faster
and more accurately than using the hybrid approach. Furthermore,
our visualization helps users compare different relationships of the
same set of entities.
The remainder of this paper is organized as follows. In section 2,
we briefly review the existing techniques to visualize multivariate
networks. Section 3 presents the new nonlinear weighting technique based on graph distance distribution. The user study is described in Section 4. In Section 5, we apply the hybrid approach
to visualize two world military expenditures and arms transfer networks. Conclusions are presented in Section 6.
2
2.1

R ELATED AND “ RELATED ” T ECHNIQUES
The Related

Several techniques have been designed to represent multivariate
networks. They can be put into two categories:
1) Single Multivalent View — Methods in this category visualize
the relationship and vertex attributes in the same view [11, 2]. The
network is laid out using a graph drawing algorithm and the vertices are represented by glyphs. The glyphs vary in colors, shapes
or sizes according to the attribute values. Users are able to see both
aspects of a multivariate networks at the same time. However, there
are two disadvantages of these approaches: Firstly, while glyphs are
more suitable for representing discrete categorical data (e.g. gender or position), they are poor in conveying continuous information
(e.g. distance or salary). Secondly, the glyphs can only visualize
a limited number of attributes effectively. If the attribute space is
of high dimension, the glyphs would become too complicated for
users to comprehend.
In order to reduce the complexity caused by high dimensions,
Watternberg [17] designed a software tool called the PivotGraph,
which provides two operations — “roll up” and “selection” for
users to explore the multivariate graph. The roll up operation aggregates all vertices that have the same values on selected dimensions and aggregates edges accordingly. The selection operation
displays a subgraph whose vertices have specified values on selected dimensions. This technique makes multidimensional comparisons straight forward. The limitation is that it only allows the

223

users to compare two (or three) attributes simultaneously.
2)Coordinated Multiple Views — Methods in the second category
maintain separate views for the graph layout and vertex attributes.
That is, besides the graph view, the software provides other representations (such as scatterplot) of the vertices based on their attributes. For example, the GGobi system employs this approach
to visualize telecommunication networks [14]. Each vertex in a
telecommunication network is a telephone number and it contains
some demographic or usage data about the bill-payer. To link the
vertices in different views, system provides a brushing mechanism:
selecting some vertices in a view causes the same vertices in the
other views to change color. The main disadvantage of such techniques is that the users need to switch between different views to
comprehend the data and it may be difficult for them to maintain
their mental maps.
2.2

The “Related”

Before going into details of our approach, we need to clarify two
issues:
1) What are the differences between our methods and the existing graph drawing algorithms based on the Self-Organizing Maps
(SOM)?
Several researchers have applied the principle of the SOM to graph
drawing [10, 4]—the Self-Organizing Graph algorithms. They are
very different from our approach because those algorithms consider
only connections of the vertices. In the algorithms, the whole graph
is treated as a SOM: vertices act as neurons while the edges define
the neighborhood connections. Weight vectors of the neurons (vertices) indicate the current locations of the vertices. Input signals
are randomly generated and evenly distributed in the drawing area.
When an input signal arrives, the vertex closest to the input signal
wins the competition. Then the winning vertex and its neighbors in
the graph move small steps towards the signal. This process continues until the graph layout becomes stable. After the “training”, the
vertices will drift apart and fill the drawing area evenly. As we can
see, locations of the vertices are determined by how they are connected and vertex attributes have no influence on the graph layout.
2) If we aim to group vertices with similar attributes, why not use
the existing constrained layout algorithms? That is, classify the
vertices into clusters and constrain vertices in the same cluster to
lie within similar regions.
There are two disadvantages to this method. Firstly, most of the
classification algorithms need to know the number of clusters. That
is not easy to determine if little is known about the data. Secondly,
a real world data set seldom has clear cluster boundaries. It could
be misleading if a vertex has to be put into one cluster when the
clusters overlap. The SOM place similar vertices in adjacent areas
on the map instead of explicitly classifying the data. Whether certain vertices belong to the same cluster is for the user to explore and
determine. It is most suitable for exploratory analysis when little is
know about the data sets.
3
3.1

I NCORPORATING G RAPH D ISTANCES I NTO T RAINING OF
THE G EO SOM
The Benefits to Combine Graph Distances and Attribute Similarities

As discussed earlier, a multivariate network contains multidimensional data and relational data. A visualization should reflect both
aspects of the network. If the network is laid out without considering the similarity of vertices, the visualization will fail to show
the structure of the attribute space. On the other hand, if positions
of the vertices are determined only by vertex attributes, the resulted
drawing would be less readable because it doesn’t obey the graph
structure.
We use an artificial data set to illustrate the problem. The multivariate network contains 20 vertices and 27 edges. The vertices are

224

(a) Does not consider graph connections.

(b) Considers graph connections.
Figure 1: Two visualizations of the same multivariate network.

distributed in a six dimensional space and can be classified into two
clusters. Edges connecting the vertices are randomly generated. In
Figure 1(a), positions of the vertices are only determined by their
attribute similarities while in Figure 1(b) both of the attributes and
connections are taken into account during the training of the GeoSOM. How to combine attribute similarities and graph connections
into the training will be discussed in later sections. Both figures are
projections from the original spherical GeoSOMs using interactive
map projection techniques introduced in [18]. Colors in the two visualizations are used to denote the average distances between each
neuron and its direct neighbors’ weight vectors. They are linearly
changing from blue, through cyan and yellow, to orange. Blue denotes the smallest variance between the weight vectors, and orange
represents the largest. Data points mapped to the same blue region
are close in high-dimensional space and can be considered to lie in
the same cluster while yellow or orange color regions indicate the
cluster boundaries.
By comparing the two figures, one can see that the global structures of the two mappings are almost the same while the vertex positions within each cluster are different. In Figure 1(b), closely connected vertices have been placed more closer to each other. For example, vertices 8, 11 and 13 are dragged towards each other because
their connections form a clique. Other examples include vertices 15
and 17, vertices 7 and 9 etc. There are only 10 edge crossings in
Figure 1(b) while in Figure 1(a) there are 25 crossings. This example demonstrates that combining graph distances with attribute
similarities not only reveals the structure of the attribute space, but
also makes the layout conforms better to the graph structures and
thus more readable.
3.2 Linear Incorporation
In the previous method [18], the batch training process of the
GeoSOM was modified to linearly combine graph distances with
attribute similarities. For clarity, here we briefly introduce the
original training process of SOM [8]. It is an iterative process. At
the beginning of each iteration, every input xi registers itself with
its Best Matching Neuron (BMN). BMN of an input is the neuron
whose weight vector is most similar to the input. Subsequently,
weight vector w j of each neuron n j is updated to be the mean over
all the inputs registered with it and its neighboring neurons:
|X|

wj =

∑i=1 h(dm ,t)xi
|X|

,

(1)

∑i=1 h(dm ,t)
where X represents a set of inputs mapped to n j and its neighbors,
dm is the distance between n j and the BMN of input xi on the SOM,
h(dm ,t) is the Gaussian neighborhood function of iteration t. The

larger the dm , the smaller the value of h(dm ,t). Hence the weighting
(contribution) of xi to w j is controlled by dm . The training process
continues until the SOM converges.
The linear incorporation method was inspired by the KamadaKawai algorithm [7] which states that the ideal distance between
two vertices should be proportional to their graph distance. We
added a coefficient fi j to Equation 1 to control the contribution of
a vertex based on its graph connection:
|V |

wj =

∑i=1 (1 + fi j )h(dm ,t)vi
|V |
∑i=1 (1 + fi j )h(dm ,t)

fi j = 1 −

dg (vi ,V j )
,
D

,

(2)
(3)

where V is the total vertex set in a multivariate network, dg (vi ,V j )
is the average graph distance between vertex vi and the set of vertices V j mapped to neuron n j . In Equation 3, fi j is normalized by
the graph diameter D, so that it ranges from 0 to 1. fi j is linearly
decreasing with dg (vi ,V j ). Hence weighting of vi is inversely proportional to dg (vi ,V j ). w j will be updated to be more similar to
those vertices that are closely connected to the vertices in V j .
Equations 2 and 3 aim to pull closely connected vertices together
in the visualization. Actually, it tries to impose equal spacing between the vertices: the contribution of a vertex to a weight vector
is linearly decreasing with the graph distances. We discovered this
method didn’t apply to different multivariate networks because the
weighting of a vertex is static regardless of the graph structure. In a
sparsely connected graph, equal spacing between the vertices gives
a nice layout. However, in a graph that most of the vertices have
short graph distances, we should give more spacing between the
vertices in the densely connected components, so as to maintain
reasonable vertex resolution and vertex-edge resolution. In next
section, we are going to incorporate several variables that describe
the structure of a graph into the training of the GeoSOM.
3.3
3.3.1

Nonlinearly Combining Graph Distances with Attribute Similarities
Distribution of Graph Distances

In visualizing a multivariate network, we will treat the network as
a general graph instead of a specific structure such as hierarchical,
bipartite etc. Therefore we choose to look at the graph structure
from a statistical point of view. One possible way to characterize
a graph is the graph distance distribution. This is the frequencies
of vertex pairs which are at certain distance from each other. Although the graph distance distribution does not uniquely characterize a graph [5], it gives information about how closely the vertices are connected. If a network has more short distance vertex
pairs than long distance pairs (the distribution has a longer tail at
the short distance direction), it means that most of the vertices are
closely connected. On the other hand, if many of the vertex pairs
are far apart (the distribution has a longer tail at the long distance
direction), then most likely there are fewer cycles (shortcuts) in the
graph and it has a tree-like structure.
We summarize a graph distance distribution using the mean,
the standard deviation and the skewness. The mean µ gives the
average graph distance between vertices in the graph. The standard
deviation σ measures the degree of the distribution centered around
the mean. The skewness s characterizes the degree of asymmetry
of the distribution. Zero skewness indicates the distribution is
symmetric at both sides of the mean. Positive/negative skewness
means that the mass of distribution is concentrated on the left/right
of the mean. Following equations show how to calculate µ, σ and
s from a graph distance distribution:

µ=

1
F

1
F

(4)

i=1

1
F

σ=

s=

D

∑ fi di , ,
D

∑ fi (di − µ)2 ,

(5)

di − µ 3
] ,
σ

(6)

i=1

D

∑ fi [

i=1

where fi is the number of vertex pairs at distance di , D is the graph
diameter and F is the total number of vertex pairs. In a graph with
V vertices, F equals V (V − 1)/2.
3.3.2 Nonlinear Weighting
To enlarge the spacing between closely connected vertices, we
make the weighting of a vertex decrease exponentially according
to the average graph distance dg (vi ,V j ):
dg (vi ,V j )

f i j = e− C ,
C = µ +ξσ,

(7)
(8)

where ξ is a constant that needs to be fine tuned for each graph.
In fact, it is the skewness calculated from the distance distribution.
However, using Equation 6, the estimated value of skewness has a
standard deviation of 15/F [12]. Therefore we need to adjust this
value slightly to find the best layout. The effect of using different
values of ξ will be demonstrated in the experiments. The base of
the function is chosen to be e simply because the neighborhood
function of the GeoSOM is a Gaussian, which is also an exponential
function of e.
The exponential function e−x/c decreases much faster than the
linear function especially when x is small. It enlarges the gap between the weights assigned to vertices at graph distance d and d +1.
Therefore, short distance vertices will be pulled less closer compared to the linear weighing technique and thus separate the closely
connected vertices. The constant c controls the decreasing rate of
e−x/c . The larger is c, the more slowly e−x/c decreases and e−x/c
becomes more similar to a straight line. Using Equations 7 and 8, if
most of the vertices are closely connected, the value of c would be
small. fi j will decrease very fast with the increasing of dg (vi ,V j ),
which enlarges the spacing between the short distance vertices. If
many of the vertices have long graph distances, c will has large values. fi j will decrease slowly and produce even spacing between the
vertices.
3.4 Experiments
3.4.1 Data Sets
We use two real world multivariate networks to demonstrate the effectiveness of the nonlinear weighting method. The first network
describes the friendship between 43 university students. It was collected by Dr. Garry Robins at the Melbourne University. Each vertex has two attributes which are the scores in two subjects. Scores
use a scale from 0 to 7. The network has 55 directed edges. If a
student A considers a student B as his/her friend, there is an edge
pointing from A to B. The edge can also be double directed if both
students consider that they are friends. The mean pairwise graph
distance of this network is 4.12, the variance is 2.24 and the skewness is 0.60.
The second data set is the Krackhardt’s high-tech managers advice network [16]. The network has 21 vertices denoting the managers. Each manager has four attributes: Age (years), Tenure
(years), level in the company’s hierarchy (coded 1,2,3) and Department (coded 1,2,3,4). An edge (A, B) represents manager A asking

225

manager B for advice. The whole network has 190 edges, which
means that the graph is almost a complete graph. In the experiment, we extracted a subgraph from the original network, in which
an edge between two managers represents that they gave advice to
and receive advice from each other. The subnetwork has 45 edges.
We did this for two reasons. Firstly, it is hard to observe patterns
from a complete graph. Secondly, in a complete graph, vertices
will receive the same weight because they are one step away from
each other. The mapping would be the same as if it was determined only by the vertices’ attributes, therefore this is not suitable
to demonstrate the ability of our technique. The subnetwork has a
small graph diameter of 3. The mean pairwise distance is 1.99 and
the standard variation is 0.65. The distribution has a small positive
skewness 0.01. Figure 2 shows the graph distance distribution of
these two networks. As indicated by their values of skewness, the
graph distance distribution of the high-tech managers advice network is almost symmetric around the mean, and the student friendship network has a longer tail at the long graph distance side. These
mean that the advice network is more densely connected than the
friendship network.

Table 1: Data distortion and edge crossings with different values of ξ

ξ Data Distortion Edge Crossings
0.6
0.16
85
0.56
0.12
80
0.52
0.08
83
0.48
0.13
54
0.44
0.14
76
0.40
0.14
95
In Figure 3(b), students are “ordered” right to left from high
scores to low scores. Students on the right of the data map (e.g.
2, 23, 25 and 29) gained more than 5 points in both subjects. Interestingly, there are only a few edges between them. Even fewer
edges are double directed. These indicate that they were not popular among the students. More than 70 percent of the students scored
average of 3 to 4 points in the two subjects. They are located in
the center blue region. Students on the lower left of the visualization performed badly in the two subjects (average of 2 to 3 points).
However, they had more friends than the good students. For example, student 4 and 16 had more than 4 friends. Some disjoint groups
of students can also be observed. Student 13, 17 and 22 achieved
similar scores in both subjects. They only considered themselves as
friends, so were students 6 and 18.

Figure 2: Graph distance distributions of the friendship network and
the advice network.

For both data sets, the GeoSOM used a two frequency geodesic
dome which contains 42 neurons. It was trained for 300 epochs.
Training time of the two networks took less than a second. After the
training, the initial layouts generated by the GeoSOM were adjusted
using the spherical disk layout to separate the overlapping vertices.
3.4.2 Evaluating Quality of The Visualization
By combining attribute similarities and graph distances, the final
representation is a balance between preserving the topology of the
attribute space and the topology of the graph space. Because the
mapping is not solely determined by the attributes or graph structure, it could increase the data distortion and violate some of the
graph aesthetics criteria. For example, some closely connected vertices would be far apart in the representation because they belong
to different attribute clusters. This will lead to non-uniform edge
lengths which in turn increases the chance of edge crossings. However, we expect the best mapping should preserve the topology of
both space as much as possible. Since the number of edge crossings is generally considered to be the most important graph aesthetics [13], we will use it to evaluate the quality of the network layout.
Quality of the attribute mapping will be measured by the average
data distortion which measures the accuracy of mapping high dimensional data to low dimensional representation [8]. The smaller
the distortion, the more accurate the mapping.
3.4.3 The Student Friendship Network
Figure 3 shows the visualizations of the student friendship network.
When the graph distances are linearly combined with the graph distances, there are 74 edge crossings and the data distortion is 0.11.
Using the nonlinear incorporation method, the best layout is obtained when the constant ξ in Equation 8 is set to be 0.48. The
crossing number has been reduced to 54 and the average data distortion is 0.13. Table 1 shows the number of edge crossings and data
distortion with different values of ξ around the network’s skewness.

226

(a) Linear weighting

(b) Nonlinear weighting
Figure 3: Visualizations of the student friendship network.

3.4.4 The High-Tech Manager Advise Network
In training of the GeoSOM, each attribute of the managers is normalized to a range of [0, 1]. This is because the scales of the attributes are very different (e.g. age varies from 27 to 62 while level
varies form 1 to 3). In addition, the attribute Department is omitted
in the experiment, because differences in the coding do not reflect
real distances. The experimental results are displayed in Table 2
and Figure 4. Using the linear combination method, the layout has
40 edge crossings and the data distortion is 0.024. In the case of
nonlinearly incorporating the graph distances, the best layout is obtained by setting ξ to 0.1. The crossing number has been reduced
to 18 and the data distortion has also been reduced to 0.015.
Figure 4(b) shows that the managers can be divided into several
groups. Vertices in the left blue region denotes managers working
at level 3 of the company’s hierarchy. Inside this group, most of
them were communicating with manager 10. Vertices 14, 18 and
21 which are located in the middle of the visualization represent
the level 2 managers. All of them had been working in the company
for around ten years. Their connections suggests that they exchange
opinions with each other. In addition, managers 18 and 21 receive

advice from and give advice to almost all other managers. There are
only a few vertices located on the right of the map. Managers 2, 7,
6, 11 were seniors in the company who had been in the company for
more than 19 years. Vertex 7 denotes the only manager that worked
at level one. Manager 9 is separated from others since he/she was
the oldest level 3 manager (62 years old) but had only worked in
the company for 5 years. The visualization suggests that the level
2 managers are acting as advice “bridges” between the top level
managers and the low level managers.
Table 2: Data distortion and edge crossings with different values of ξ

ξ Data Distortion Edge Crossings
−0.01
0.012
31
−0.04
0.012
31
−0.07
0.012
31
-0.10
0.015
18
−0.13
0.015
18
−0.16
0.010
46

We hypothesize this relative stability can help a viewer comparing
different relationships between the same set of entities.
4.2
4.2.1

(b) Nonlinear weighting

Data Sets

We carefully designed seven synthesis multivariate networks for the
user study. Table 3 lists the networks’ sizes, edge numbers and attribute numbers. Networks 1 and 2 are two relationships of the
same vertex set, likewise for networks 3 and 4, networks 5 and 6.
Two visualizations are generated for each network: one by our hybrid approach and the other using the glyph-based technique. In
the latter case, the network was laid out using the Fruchterman and
Reingold algorithm [3]. Figure 5 shows two visualizations of network 4.
Table 3: Seven multivariate networks designed for the user study.

Figure 4: Visualizations of the High-tech Managers Advice Network.

Network 1
Network 2
Network 3
Network 4
Network 5
Network 6
Network 7

It can be observed that the value of ξ greatly affects the final representation. A good choice of ξ not only lowers the data distortion,
but also reduces the edges crossings. In practice, a user can choose
the skewness as the initial guess of ξ . Then fine tuned the value of
ξ if the layout is not satisfactory.
4

Comparison with The Glyph-Based Approach

Section 2.1 introduced several existing visualization techniques for
the multivariate network. They can be put into two categories: the
single multivalent view and coordinated multiple views. Methods
in the second category visualize relationship and attributes in different windows. A user has to rely on interaction techniques to locate
the same vertices when switching between the views. The success
of these methods mainly depends on the interface design. In this
user study, we focus on comparing the static visualizations. Therefore, the comparison are made between our hybrid approach and the
glyph-based techniques. The glyph-based approach is also the most
commonly used method to represent multivariate networks because
of its simplicity.
The next question is which type of glyph we should use in the
experiment. Different glyphs have their own advantages and drawbacks. Very few user studies had been conducted to compare the
effectiveness of different glyphs. According to the user study conducted by Lee et al. [9], the star glyph has a higher accuracy and
lower response time than the Chernoff faces in comparing the similarities of multidimensional binary data sets. Since the star glyph
is also able to represent data sets of unlimited dimensions (theoretically), we decided to use it to visualize the vertex attributes.
4.2.2

(a) Linear weighting

Methodlogy

Vertices Edges Attributes
30
43
10
30
48
10
48
66
10
48
67
10
48
74
4
48
74
4
30
56
4

U SER S TUDY

4.1 Hypothesis

4.2.3

The hybrid approach treats each entity/vertex as a point in the high
dimensional attribute space and uses the GeoSOM to project them
on to the surface of a sphere. The projection takes the graph distances into account so that vertices with similar attributes and short
graph distances are placed at proximate regions of the mapping. We
believe this approach can help the users quickly gain insight into the
multivariate networks. The user study has two hypotheses, which
are tested using networks of different number of attributes and different sizes:
1) The hybrid visualization helps users draw conclusions based on
both the relationship and attribute similarities.
2) In the hybrid visualization, the vertices are largely grouped according to their attribute similarities. Therefore changing of the
connections only alters the vertices’ positions inside each cluster.
The visualization’s global structure will remain almost the same.

The user study contains two parts. The first part focuses on searching information in a single relationship. The second part involves
comparing two relationships of the same set of entities. The user
study is a within-subject design. Such design aims to reduce the
possible variability between the subjects (e.g. experience) which
hinders or contributes to their performances. In the user study,
neighbors of a vertex refer to all those vertices which are connected
to the vertex by an edge. Because small differences in attribute values are difficult to detect using both visualizations, the participants
were only required to tell whether several vertices are from different
attribute clusters. In addition, the attribute clusters are well separated and do not overlap. Vertices belonging to the same cluster are
said to be of the same type.
The task design is based on the real world tasks. For example,
one task requires participants to judge whether two vertices have

Task Design

227

the accuracy. Each question has to be completed within a limited
time, or the answer is considered wrong. We implemented a simple online system to display the questions, automatically record response time and collect answers from the participants.

(a) Glyph-based approach

(b) Hybrid approach
Figure 5: Visualizations of network 4 in user study.

similar neighbors. In a friendship network, this question is equivalent to asking whether the friends of two people have similar backgrounds. In a company trading network, it might refer to whether
two companies have similar business partners.
The first part of the user study contains four tasks. Every task
is repeated four times: twice with networks of small and large attribute numbers and twice with different visualizations. To avoid
participants remembering the answers, we use different vertex labels in the visualizations generated by the glyph-based approach
and hybrid approach:
1) How many different types of neighbors does the highlighted vertex has?
2) Which neighbor of vertex A is most similar to vertex B?
3) Do neighbors of two vertices A and B have similar attributes?
4) Some neighbors of vertex A and vertex B are from the same cluster. Find these neighbors.
The tasks have different difficulty levels. The first two tasks require
participants to compare the neighbors of a single vertex. Task 3 and
4 involves comparing neighbors from two vertices.
The second part of the user study requires participants to compare two relationships of the same set of entities. We designed two
tasks which were the decompositions of a real world task: To compare two relationships, firstly a viewer needs to look at one of the
relationships, then locate the interested vertices in the second relationship and finally look for the differences. Here the differences
do not simply mean that whether a vertex is connected to different
neighbors but whether the neighbors are from different clusters:
1) A vertex is highlighted in relationship 1, find the same vertex in
relationship 2 by clicking.
2) Does vertex A connect to the same clusters of vertices in two
relationships? If yes, how many clusters are the same.
The first task was tested on networks with different sizes. The second task was performed on networks with different number of attributes.
4.2.4 Participants and Tutorials
We recruited 33 participants from the school of Information Technologies at the University of Sydney. The participants included
postgraduate students and research staff. Although the participants
were all computer literate, they were specialized in different research areas. Some of them knew very little about information visualization. Before the user study, we gave each participant a tutorial
which briefly introduced the multivariate network, the node-link diagram, the star glyph and the hybrid approach.
The effectiveness of the visualizations is evaluated based on the
paritcipants’ response time and accuracy. We required the participants to answer the questions as soon as possible without sacrifice

228

4.3 The User Study Results
The experimental results are analyzed using the repeated-measures
ANOVA analysis. The experiment factors are visualizations and
data conditions (attribute number/network size). The significant
level p is set to be 0.05. In the following tables, A denotes the
number of attributes, V denotes visualization and S denotes the size
of a network.
4.3.1 Part One
Figure 6 plots the average response time and accuracy against the
tasks. Note that the accuracy diagram shows the percentage of the
participants who correctly completed a task in a certain condition.
Therefore it has no standard deviation.
Due to different experience levels, the response time of the participants vary. However, in all four tasks, the participants spent
more time using the glyph-based visualization. For task 1, 2 and
4, the response time is twice of that required for the hybrid visualization. In addition, the glyph-based visualization results in lower
accuracy rates. This is especially so for task 4, where accuracy rate
is less than 50%. These observations are confirmed by the repeated
measure ANOVA analysis of the response time listed in Table 4.
The effects of Visualization are statically significant in all tasks.
The attribute number only has significant effect for task 3, which
indicates more attributes lengthen the response time. There are no
significant interactions between Attribute and Visualization.
Table 4: ANOVA analysis of the response time of part one

Task1
Task2
Task3
Task4
Factor DF F
p
F
p
F
p
F
p
A
1 0.46 0.50 0.48 0.49 4.34 0.04 1.79 0.18
V
1 154.11 0.00 73.03 0.00 15.47 0.00 128.62 0.00
A×V 1 3.03 0.09 3.71 0.06 1.63 0.20 0.58 0.45
Error 96

Figure 6: Part 1 :Average response time and accuracy.

4.3.2 Part Two
The results of part two are shown in Table 5 and Figure 7. Note that
task 1 and task 2 were tested on two different data conditions (different network sizes and different number of attributes), therefore
the results are listed in separate tables and figures.
Task 1 evaluates how quickly a participant can locate the same
vertices in different relationships. A participant completes the task
by clicking on the right vertex, therefore only response time was
recorded. Figure 7(a) demonstrates that the participants found the
vertex faster using the hybrid visualization regardless of the network sizes. In case of the glyph visualization, the search time is
double, even when the number of vertices only increased from 30
to 48. Table 5(a) shows that the network size, visualization and their
interaction all have significant impact on the response time. It can

be concluded that increasing the network size lengthens the vertex
searching time. However, the impact is more significant using the
glyph-based visualization than using the hybrid visualization.
Task 2 tests how easy it is to find differences in two relationships
using the two visualizations. Again, the participants completed the
task faster and more accurately using the hybrid visualization (see
Figure 7(b)). From Table 5(b)), the attribute number, the visualization and their interaction are all significant to the response time.
It indicates increasing the number of attributes made the task more
difficult, especially for the glyph-based visualization.
Table 5: ANOVA analysis of the response time of part two.
(b) Task 2

(a) Task 1

Factor DF F
p
Factor DF F
p
A
1 4.83 0.03
S
1 73.29 0.00
V
1 117.20 0.00
V
1 182.14 0.00
S×V 1 48.26 0.00 A×V 1 4.75 0.03
Error 96
Error 96

(a) Task 1

of which is enough to provide basic human needs to everyone on
earth [1]. Studies of military expenditure and arms transfer network
are of great political and economical values.
We collected data from two sources: the World Military Expenditures and Arms Transfers (WMEAT) reports generated by
the US Department of State and the Arms Transfer Database
from the Stockholm International Peace Research Institute (SIPRI).
WMEAT contains lengthy tables which list the military expenditures of most countries in the world. We processed the data so
that each country has eight attributes: military expenditures per soldier (ME/AF), ratio of military expenditure to gross national product (ME/GNP), ratio of military expenditure to the central government expenditure (ME/CGE), military expenditure per capita,
armed forces per thousand people, gross national product per capita,
the ratio of military to non-military imports and the ratio of military
to non-military exports. The Arms Transfer Database records the
weapon trading information, including the exporting and importing countries and the trading volumes. The data we collected cover
the period from 1983 to 1999. To see the changes with time, they
are divided into two sub-periods 1983-1991 and 1992-1999 (before
and after the cold war). The country attributes are averaged over the
years in each period. The data set contains 97 countries. The arms
transfer network of 1983-1991 contains 192 edges and the 19921999 network contains 185 edges.
Visualizations of the two networks are shown in Figure 8. Note
that positions of the countries are not determined by their geographical locations on earth but the eight attributes describing their military expenses and the weapon transfer activities. Edges are directed, pointing from exporting countries to importing countries.
The trading volumes are mapped to different transparency levels.
The higher the volume, the darker of the edges. In order to show the
balance of trade, the two ends of each edge are of different widths
which are determined by the corresponding countries’s exporting
volumes.

(b) Task 2
Figure 7: Part 1: Average response time and accuracy.

4.3.3 Discussion
The user study confirmed our two hypotheses: the hybrid visualization helps users gain insight into a multivariate network and
compare different relationships between the same set of entities.
The participants commented that pictures generated by the hybrid
approach were clearer, while the glyph-based visualizations were
“visually more complex” and “not scalable” to large graphs. In addition, it was very hard to “remember the patterns/shapes” of the
glyph when comparing the similarities of the vertices.
However, we admit that the user study by no means cover all
possible tasks. For example, the hybrid visualization is a projection from the spherical GeoSOM. The edges are geodesics (straight
lines) on the sphere but become curves on the 2D projection. Some
of them across the split line of the sphere, which are cut into two
parts and drawn separately at the left and right ends. These might
hinder users from following the edges. We believe such consideration can be addressed by interaction techniques, e.g. highlighting
the path between two selected vertices. Further user studies are
needed to verify these hypotheses.
5

M ILITARY E XPENDITURES AND A RMS T RANSFER N ETWORK

Military expenditures are the biggest spending in the world. In
2005, the total expenditures reach 1 trillion US dollars, only 10%

(a) The 1983-1991 network

(b) The 1992-1999 network
Figure 8: World military expenditure and arms transfer networks.

In Figure 8(a), the wealthy countries are grouped together at the
upper right corner while the developing countries are on the left.
Countries located in the middle are those devoting most of their
resources to military developments. For example, Kuwait (KWT),
Saudi Arabia (SAU) have the highest ratio of ME/AF, ME/CGE

229

while the weapon imports by Angola (AGO) were almost twice the
value of her non-military imports (181%). The United States (USA)
and the Soviet Union (USSR) were two dominant weapon providers
during the period of 1983-1991. The USA had customers from both
developed and developing countries, while the USSR mainly exporting weapons to countries belong to the third world such as India (IND), Bulgaria (BGR) and North Korea (PRK). Other major
weapon providers include France (FRA) and Great Britain (GBR).
India was the biggest weapon importer during this period as shown
by the width of her edges. North Korea is located on a red region
which indicates she was very different from the other countries.
Indeed, during 1983 to 1991, she had the largest ratio of armed
forces relative to her population (45 soldiers per 1000 people) and
the highest ratio of military to non-military exports (21.82%).
The global structure of the visualization of 1992-1999 network
is almost the same as that of the 1983-1991 network’s (see Figure 8(b)), which indicates there are no big changes to the countries’ military spending distributions. However, there are still several differences we can observe. After the cold war, the Soviet
Union became Russia Federation(RUS), who continued to be one
of the dominant weapon suppliers. But she had been surpassed by
USA in both the number of customers and the trading volumes.
The main weapon recipients of Russia were India and China. Likewise, France’s and Great Britain’s roles as major weapon providers
also shrank as indicated by their number of edges and edge widths.
In the mean time, Taiwan (TWN-CHN) emerged as the main customer of France and the USA, probably because of her conflicts
with China. Saudi Arabia replaced India as the No.1 weapon buyer
in this period and she also had the highest ratio of military to nonmilitary imports (31.59%)
Here careful readers might have a question: Figure 8 only shows
similarities of the countries, but how can we see values of certain
attributes. This question can be solved using the component planes
of a SOM [8]. In the previous visualizations, colors indicate the
distances between the weight vectors of neighboring neurons. In
a component plane, colors represent the values of a particular attribute so that we can visualize the distribution of that attribute
across the network. Figure 9(a) and Figure 9(b) show the ratios
of military to non-military imports during the two periods. As we
mentioned above, Angola had the highest military to non-military
import ratio during 1983-1999. In 1992-1999, her ratio was dramatically reduced to 11.11%. In the mean time, the ratio of Saudi
Arabia was increased from 27.81% to 31.59% which became the
highest in the world.
6 C ONCLUSION
In this paper, we introduced an new method to determine the layout
of a multivariate network using the GeoSOM. During the training,
weighting of vertices are nonlinearly adjusted according to the network’s graph distance distribution and the similarities of vertex attributes. Compared to the previous linear incorporation technique,
the visualizations conform better to different graph structures which
results in less edge crossings. We conducted a user study to evaluate the effectiveness of our hybrid approach with the commonly
use glyph-based method. The results confirmed that the hybrid approach helps users gain insight into the multivariate network and
compare different relationships of the same set of entities. Finally,
we applied the hybrid approach to visualize the military expenditure and arms transfer networks.
R EFERENCES
[1] World military expenditures: A compilation of data and facts related
to military spending, education and health, 2005. Coordination Office
for the Decade to Overcome Violence, World Council of Churches.
[2] D. Auber. Tulip : A huge graph visualisation framework. In P. Mutzel
and M. J¨unger, editors, Graph Drawing Softwares, Mathematics and
Visualization, pages 105–126. Springer-Verlag, 2003.

230

(a) The 1983-1991 network

(b) The 1992-1999 network
Figure 9: The ratios of military to non-military imports in two periods.
[3] G. D. Battista, P. Eades, R. Tamassia, and I. G. Tollis. Graph Drawing: Algorithms for the Visualization of Graphs. Prentice Hall, Upper
Saddle River, New Jersey, 1999.
[4] E. Bonabeau. Graph multidimensional scaling with self-organizing
maps. Information Sciences, 143:159 – 180, 2002.
[5] M. F. Capobianco. What is a graph? three possible answers. Annals
of the New York Academy of Sciences, 576(1):79 – 85., 1989.
[6] H. Chernoff. The use of faces to represent points in k-dimensional
space graphically. Journal of the American Statistical Association,
68(342):361– 368, 1973.
[7] T. Kamada and S. Kawai. An algorithm for drawing general undirected graphs. Information Processing Letters, 31:7 – 15, 1989.
[8] T. Kohonen. Self-Organizing Maps. Springer Series in Information
Sciences. Springer-Verlag, Germany, 3rd edition, 2001.
[9] M. D. Lee, R. E. Reilly, and M. A. Butavicius. An empirical evaluation of chernoff faces, star glyphs, and spatial visualizations for binary
data. In Proceedings of Australasian Symposium on Information Visualisation 2003, pages 1 – 10. Australian Computer Society, Inc., 2003.
[10] B. Meyer. Self-organizing graphs - a neural network perspective of
graph layout. In Proceedings of the 6th International Symposium on
Graph Drawing, pages 246 – 262. Springer-Verlag, 1998.
[11] W. Nooy, A. Mrvar, and V. Batagelj. Exploratory Social Network
Analysis with Pajek. Cambridge University Press, New York, 2005.
[12] W. H. Press, B. P. Flannery, S. A. Teukolsky, and W. T. Vetterling.
Moments of a Distribution: Mean, Variance, Skewness, and So Forth,
chapter 14.1, pages 604 – 609. Cambridge University Press, 1992.
[13] H. C. Purchase, R. F. Cohen, and M. James. Validating graph drawing
aesthetics. In F.-J. Brandenburg, editor, Proceedings of the Symposium
on Graph Drawing 1995, pages 435 – 446. Springer-Verlag, 1995.
[14] D. F. Swayne, A. Buja, and D. T. Lang. Exploratory visual analysis of
graphs in GGobi. In Third Annual Workshop on Distributed Statistical
Computing (DSC 2003), Viena, 2003.
[15] C. Ware. Information Visualization. Elsevier Morgan Kaufmann Publisher, San Francisco, CA, USA, 2004.
[16] S. Wasserman and K. Faust. Social Network Analysis: Methods and
Applications. Cambridge University Press, 1999.
[17] M. Wattenberg. Visual exploration of multivariate graphs. In Proceedings of Conference on Human Factors in Computing Systems, 2006.
[18] Y. Wu and M. Takatsuka. Visualizing multivariate network on the
surface of a sphere. In Proceedings of Asia-Pacific Symposium on
Information Visualization 2006, pages 107–114. CRPIT, 2006.
[19] F. W. Young and R. M. Hamer. Theory and Applications of Multidimensional Scaling. Eribaum Associates, Hillsdale, New Jersey, 1994.

