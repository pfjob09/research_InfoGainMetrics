DOI: 10.1111/j.1467-8659.2010.01718.x

COMPUTER GRAPHICS

forum

Volume 29 (2010), number 8 pp. 2340–2351

Creating and Animating Subject-Specific Anatomical Models
B. Gilles1 , L. Rev´eret2 and D. K. Pai1
1 Department

of Computer Science, University of British Columbia, Canada
{bgilles, pai}@cs.ubc.ca
2 EVASION, INRIA Rhˆ
one-Alpes, France
lionel.reveret@inrialpes.fr

Abstract
Creating and animating subject-specific anatomical models is traditionally a difficult process involving medical
image segmentation, geometric corrections and the manual definition of kinematic parameters. In this paper, we
introduce a novel template morphing algorithm that facilitates three-dimensional modelling and parameterization
of skeletons. Target data can be either medical images or surfaces of the whole skeleton. We incorporate prior
knowledge about bone shape, the feasible skeleton pose and the morphological variability in the population. This
allows for noise reduction, bone separation and the transfer, from the template, of anatomical and kinematical
information not present in the input data. Our approach treats both local and global deformations in successive
regularization steps: smooth elastic deformations are represented by an as-rigid-as-possible displacement field
between the reference and current configuration of the template, whereas global and discontinuous displacements
are estimated through a projection onto a statistical shape model and a new joint pose optimization scheme with
joint limits.
Keywords: musculoskeletal system, template registration, medical imaging
ACM CCS: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling, Physically Based Modeling; I.4.8 [Image Processing and Computer Vision]: Scene Analysis, Surface fitting.

1. Introduction
Biomechanics-based animation offers an exciting degree of
realism as shown in recent studies [KM04, TSB∗ 05, SKP08].
These methods require, however, accurate geometric
models of bones and soft-tissues (muscles, skin, ligaments
and cartilages). Their creation is usually time-consuming and
needs to be performed independently for each subject, making such approaches impractical for graphics applications.
Although there are semi-automatic methods to extract bones
from medical images (e.g. thresholding of computed tomography images) [KM04], significant manual work is always
still required: bone separation, labelling, definition of the
animation skeleton, soft-tissues segmentation and geometric corrections as done in [AHS03]. In this paper, we tackle
this problem through a new co-registration method that can
automatically align generic skeletons to multi-modal data
c 2010 The Authors
Computer Graphics Forum c 2010 The Eurographics
Association and Blackwell Publishing Ltd. Published by
Blackwell Publishing, 9600 Garsington Road, Oxford OX4
2DQ, UK and 350 Main Street, Malden, MA 02148, USA.

(surfaces and images). The key idea is to mix local deformations and a global registration to recover both the morphology and the pose of the target skeleton as illustrated in
Figure 1. Our new regularization method combines shape,
statistical and joint limits constraints, and allows us to treat
noisy and low-resolution models and images. We are also
able to transfer features from the template (geometric details, animations) that were not necessarily acquired with the
considered modality.
Registration aims at finding spatial correspondences between data sets. In other words, the goal is to find a deformation field that aligns a template to a target data set.
It is a central problem in the computer graphics and image processing communities [AFP00, ZF03]. The main difficulties are to find an adequate similarity measure that is
as-convex-as-possible and a good parameterization of the

2340

B. Gilles et al. / Creating and Animating Subject-Specific Anatomical Models

2341

Figure 1: Our method automatically warps template skeleton models to subject-specific anatomy and posture (left: hand
registration; right: rat/dog). This allows transferring generic geometric details and animations (middle: transfer of hand
soft-tissues and posture).

deformation through the introduction of prior information.
Registration has been mainly studied in the context of rigid
alignment and small deformations. The musculoskeletal system however presents a large geometric variability in terms of
morphology and pose. It makes registration difficult by increasing the number of local minima.
Our method addresses these issues by performing a robust
co-registration of bone surfaces through constrained local
and global deformations. Constraints are applied by regularizing an initial correspondence vector field between the data
sets (Section 3.2). We consider that the input can be either
a 3D mesh or a 3D image. Smooth elastic deformations, accounting for morphological differences, are represented by
an as-rigid-as-possible displacement field between the reference and current configuration of the template (Section 3.3).
The global evolution is ensured by a projection to a statistical
shape model (Section 3.4) and a new joint pose optimization
scheme with joint limits (Section 3.5). Finally, in Section 4,
we illustrate the benefits of our methods through the automatic registration of a human hand model and a rat model to
manually segmented surfaces and to magnetic resonance images (MRI). As a result, we obtain subject-specific models,
with smooth separated bones, that can be directly animated.
We show how geometric and kinematic information can be
mapped from the template to the target.

2. Related work
Registration consists in iterating two basic steps: first, the
distance between the current position of the template and
the target is estimated; secondly, this distance is minimized
by deforming the template [AFP00, ZF03]. One class of
methods, called variational methods, globally evolves the
model along its degrees of freedom to minimize the distance.
Alternatively, pair-and-smooth approaches locally minimize

the distance through correspondence computations, and then
regularize those displacements to satisfy deformation constraints. This approach is more suited in our context because
our system has a high number of coupled degrees of freedom. It allows treating shape and inter-object constraints in
successive regularization steps.

2.1. Correspondence computation
In discrete models, correspondences are defined for each
vertex as the displacement that maximizes a certain similarity measure. Extrinsic similarity measures, based on the
current configuration of the surfaces in the Euclidean space,
are widely used for simplicity as pointed out in [BBK09].
The popular iterative closest point (ICP) algorithm results
from the computation of closest points between the template
and target surfaces [BM92]. In image registration, pairing is
performed by locally maximizing the image similarity between the template image and target image. Several correlation measures have been proposed for a range of imaging
modalities [ZF03]. Local pairing is not robust for large displacements however, unless there are few degrees of freedom
and a clear global minimum. Robust correspondences can be
better achieved by computing similarity over the entire spatial
domain. In surface registration, researchers have considered
the distance between rotation and translation invariant local
shape descriptors, built from differential geometric quantities
[HAWG08] or spin images [CZ08]. Similarly, features can
be extracted from images based on the local intensity distribution [ZF03], such as the histogram moments [She07].
Contrary to closest point methods, feature correspondence
needs propagation and smoothing steps to ensure a local consistency of the alignment [HAWG08]. Optimization of the
pairing stage has been studied through voting techniques that
minimize distortions of the template after registration [LF09,
ZSCO∗ 08]. Intrinsic properties of shapes, such as geodesic

c 2010 The Authors
Computer Graphics Forum c 2010 The Eurographics Association and Blackwell Publishing Ltd.

2342

B. Gilles et al. / Creating and Animating Subject-Specific Anatomical Models

distances, are interesting because they are quasi-invariant under object pose and current deformation. Shape embedding
techniques have been developed to enhance such properties,
such as in spectral embedding methods [MHK∗ 08], conformal mapping [LF09] or the medial axis transform [SSGD03].
Intrinsic methods attempt to find common parameterizations
between template and target surfaces. They are global but
sensitive to topological noise [BBK09].

2.2. As-rigid-as-possible deformation
Most surface and image registration techniques assume a
smoothly varying motion field over the spatial domain to
avoid distorting the template excessively [ZF03]. Hence,
regularization techniques typically try to enforce as-rigid-aspossible deformation. The simplest way is to perform rigid
registration to recover the dominant motion. The ICP algorithm [BM92] is a widely used approach that finds, at
each iteration, the best rigid transform approximating the
current target displacements. In the generalized gradient approach [CMP∗ 07], target displacements are filtered to remove non-isometric components from the deformation field.
In computer graphics, various techniques have been developed to generate as-rigid-as-possible deformations to mimic
elasticity. Sorkine et al. [SA07] iteratively minimize a local
rigidity energy. This technique is used in [dAST∗ 08] for full
body motion capture. M¨uller et al. [MHTG05] blend closest
rigid transforms in their shape matching framework. Sumner
et al. [SSP07] simultaneously minimize departure from rigidity and local distortions, which has proven to be suitable for
partial range scan matching [LSP08, LAGP09].
Although the assumption of smooth displacements is acceptable for a single object, it is inaccurate at boundaries
when the relative displacement between objects is large,
which is the case for bones. In this context, researchers
have tried to design piecewise quasi-isometric displacements fields. Arsigny et al. [ACPA06] introduced polyrigid
and polyaffine transformations for image registration. Wang
et al. [WHQ05] proposed a spline-based deformation technique that incorporates rigid components. For registering the
skeletal system, articulated rigid motion has been considered
in [KM04, STC∗ 03, PDD∗ 05]. Contrary to us they do not
handle joint limits, relative translations and cyclic skeletal structures, and do not perform a simultaneous non-rigid
registration. In motion capture, the underlying pose of the
animation skeleton is computed from fiducial marker correspondences. Energy minimization approaches have been
developed such as in [ACP02]. In [OBBH00], O’Brien et al.
compute joint centres from markers motion (i.e. they register an acyclic chain of scalable rigid bodies). To smoothly
deform surrounding soft-tissues from the articulated motion,
numerous skinning techniques have been proposed in the
graphics community. For skin registration, skeletal subspace
deformation (or linear blend skinning) with an automatic tuning of influence weights has been presented in [VBMP08,

HAWG08, CZ09]. Alternatively, pose deformation can be
learned using principal component analysis (PCA) from
range scanned data as done by Anguelov et al. [ASK∗ 05].
2.3. Simulation of articulated rigid bodies
The fast simulation of constrained rigid bodies is an important and still open problem in computer graphics. Constrained
dynamics approaches generate physically based motion by
solving the unknown constraint forces at contact or joint
locations [Bar94]. Acyclic constraints between articulated
bodies can be exactly and simultaneous enforced with a linear complexity in the number of joints either using generalized or maximal coordinates formulations [Bar96]. However, auxiliary constraints such a joint limits, contacts and
loop closures require a specific treatment that is generally
an iterative energy minimization process [Fau99, XWY∗ 09].
The introduced inequality relations make the system difficult
to solve numerically (i.e. linear complementary problem).
Besides global optimization methods, a simple local method
that treats all joints sequentially consists in applying spring
penalty forces to enforce constraints [MW88, XWY∗ 09], but
suffers from stiffness and stability problems. Impulse-based
methods [MC94, WTF06] solve this stability problem by altering the velocity of body pairs to guaranty a non-violation
of the constraint in the next frame. Another class of methods,
into which our method falls, is the class of position-based
methods. The goal is to procedurally adjust rigid body positions and orientations when constraints are not met [GC94,
LBKH00]. Although not physically accurate, these static
methods generate plausible results at a cheaper computational cost than constrained dynamics approaches.
3. Methods
3.1. Overview
The purpose of the algorithm is to find a deformation field that
aligns a discrete surface model of a skeleton (the template) to
a surface or three-dimensional image (the target). Let x r and x
be the vertex position vectors of the template in the reference
and deformed configurations. Figure 2 illustrates the different components of our registration framework. At each step
of the process, correspondences v are estimated for each vertex (Section 3.2). For shape regularization, we approximate
these correspondences with an as-rigid-as-possible displacement field v,
˜ where the distance to rigid motion is locally
minimized (Section 3.3). The local support can be tuned via
the cluster size to simulate smooth deformations with different rigidity levels. This elastic registration process is continuously iterated and vertices are deformed through x = x r + v˜
until convergence. To introduce new degrees of freedom and
displacement discontinuities, we run a plastic deformation
process between two steps of the elastic registration, every
time the elastic registration converges. With plasticity, shapes
undergo permanent changes: we update the reference positions x r . To derive global deformations, coherent with shape

c 2010 The Authors
Computer Graphics Forum c 2010 The Eurographics Association and Blackwell Publishing Ltd.

B. Gilles et al. / Creating and Animating Subject-Specific Anatomical Models
Template model
r
reference positions x

2343

Deformed positions x
before plasticity

Correspondences v

1. As-rigid-aspossible fitting
ELASTIC DEFORMATIONS

Target

2. Statistical projection

PLASTIC DEFORMATIONS

3. Joint pose evolution

Deformed positions x
after plasticity

New reference
r+
positions x

4. As-rigid-aspossible fitting
ELASTIC DEFORMATIONS

Figure 2: Overview of our registration framework.
variability in the population, we project v onto principal
components of a statistical model (Section 3.4). Finally, we
adapt the reference skeleton pose with joint limit constraints
(Section 3.5). All these regularization steps allow incorporating shape, statistical and kinematic prior information.
3.2. Correspondence computation
Our method can take two different types of target data: either
a surface mesh or a 3D image. In the section, we present how
we compute target (unconstrained) vertex displacements for
template-to-surface and template-to-image registration.

Figure 3: Surface correspondences (left panel) vs. image
correspondences (right panel). The target data sets are respectively a surface (in white) and an MRI volume (the
bounding box and three sample slices are shown).
togram moments. They are rotation and translation invariant.
In a spherical region of radius s around the position p, the
frequency of intensity g is noted h(ps , g) and the number
of voxels N. Contrary to [She07], we compute the moments
around the mean intensity m(ps ) to combine gradient and
intensity attributes. The central moment of order n is given
by m(ps , n) = g (g − m(ps ))n h(ps , g). The mean and moments at different orders (n = 1, 2) and different resolutions
(s = s0 , 2s0 , 4s0 ) are normalized between 0 and 1 and concatenated into a feature vector a(ps ). At initialization, based
on the reference image, we pre-compute a reference feature
vector a˜ i = a(xir ) for each vertex i. During the registration,
the similarity at the position (xir + v) in the target image
is given by the product i = j (1 − |a˜ i,j − a(xir + v)j |),
where j indexes feature vector components and 0 ≤ i ≤ 1.
We find the correspondence vector v by maximizing i in the
neighbourhood of the current position xi via a local search
along the normal direction of the surface. A threshold of 0.2
is applied to avoid maxima with a small i (Figure 3).

3.2.1. Surface correspondences
Because features may not be clearly and uniquely identifiable in our data sets (e.g. fingers have similar shapes) and
because of shape and topological noise (e.g. bones in close
neighbourhood), we apply a simple (extrinsic) closest point
method: at each registration step, the deformed template
(positions x) is projected to the target surface and viceversa. Target displacements vi of the reference vertices x r
are obtained through a weighted sum of the resulting pointto-triangle vectors (Figure 3).
3.2.2. Image correspondences
Consider a reference volumetric image, where a manual registration of the generic model has been performed, and an
image that we want to segment. The goal is to find the correspondence vector v that maximizes the image similarity in
the neighbourhood of each vertex. As a similarity measure,
we compute the correlation of feature vectors based on his-

3.3. As-rigid-as-possible deformation
To enforce shape constraints, that is to minimize distortions
from the template shape, we simulate pseudo-elasticity with
an as-rigid-as-possible deformation scheme. We regularize
the deformation field v through a local stiffening process.
Our method relies on the computation of the optimal rigid
alignment between paired sets of points. We use the classical closed-form solution proposed in [HHN88], based on
the polar decomposition of the covariance matrix. The input
positions are set to xir and target positions to xir + vi . The particle influence weights are computed as the Vorono¨ı surface
of each vertex, and can be viewed as lumped particle masses
mi . We apply the method to overlapping clusters of points
and blend the corresponding rigid transforms to get a smooth
deformation. This approach is referred as shape matching
[MHTG05, RJ07, GP08]. The cluster size plays an important role, as it rules the rigidity of the model. To decrease
sensitivity to local minima of the whole registration process,

c 2010 The Authors
Computer Graphics Forum c 2010 The Eurographics Association and Blackwell Publishing Ltd.

2344

B. Gilles et al. / Creating and Animating Subject-Specific Anatomical Models

we apply a standard coarse-to-fine strategy by progressively
decreasing the cluster size. This is currently done manually,
given that only a few rigidity levels are used. Formally, let
ζi be a cluster of cardinality |ζi | centred on the vertex i such
as ζi = {j : d(xir , xjr ) ≤ S}, where S is the cluster size, and
d(, ) the distance measure. For this cluster ζi , barycentres
are noted x¯ir and v¯i , and the optimal rotation R˜ i The final
regularized deformation field is
R˜ j (xir − x¯jr ) + x¯jr + v¯j

v˜i =
j ∈ζi

|ζi |

− xir .

(1)

3.3.1. Fast summation
The optimal rigid alignment method uses weighted sums of
positions and covariance matrices, and computational time
can be improved by exploiting cluster overlapping as in
[RJ07]. Consider a parent vertex k and a child vertex i. The
Boolean differences between the two clusters are ζi+ = {j :
j ∈ ζi − (ζk ∩ ζi )} and ζi− = {j : j ∈ ζk − (ζk ∩ ζi )}. Then,
summation of a field data u, within the cluster i can be
quickly performed if the two clusters are redundant, through
j ∈ζi uj =
j ∈ζk uj + j ∈ζ + uj − j ∈ζ − uj .
i
i
3.3.2. Shape matching based on unstructured points
In [RJ07], the cluster-based technique is applied to regular lattices. With lattices, Boolean differences and the optimal vertex ordering are systematic (summation for every
clusters can be done in three global passes). Here, as in
[GP08], we directly use unstructured model vertices, suppressing the need for warping target displacements to the
lattice and interpolating model deformation from the lattice. With unstructured points, the fast summation must follow an ordered list so that j ∈ζk uj is available for computing j ∈ζi uj . In a template pre-processing phase, we build
such a list using a propagation-based approach that maximizes at each step the gain gik of having k as a parent of
i: gik = |ζi | − |ζi− | − |ζi+ | − 1 = 2|ζk ∩ ζi | − |ζk | − 1. This
list building criterion is more optimal but more computationally demanding than the one of [GP08]. The accompanying
video shows an example of the cluster ordering process.

3.4. Statistical constraints
A common approach to improve the robustness of a registration process is to add prior knowledge about the variability of shapes across the population [CT01, ASK∗ 05]. PCA
is widely used to derive the main variations of parameters
living in a linear space (such as vertex positions) [Jol86].
However, parameterizing the displacement field of the registration using only these principal variations is too restrictive. To create new shapes, excursions from the statistical
model need to be realizable. In our framework, excursions

from a reference shape are modelled through the as-rigidas-possible deformation field presented in the previous section. To add smooth statistical constraints, we only need to
evolve the reference positions x r along the principal components (PCs) after the elastic registration has converged. This
is effectively a plastic behaviour. We generate the PCs using examples of bone shapes generated with our algorithm.
Correspondences across models are known, so there is no
need to identify features as done in most shape PCA-based
methods. We remove the rigid transform component by registering bones from the different subjects into the same frame
using the optimal rigid alignment method. We then apply the
PCA to the resulting vertex positions of all bones simultaneously (thus, we account for their mutual correlation). During
registration, we evolve the reference positions x r by projecting (x r + v) onto the PCs: we rigidly align each bone
to its mean shape, perform projection for all bones simultaneously and finally transform bones back to their original
frame.
3.4.1. Updating joint coordinate systems
Because of the introduced deformations, we need to interpolate the rigid motion of the coordinate systems attached to
the bones. Consider a coordinate system k in its reference
configuration, represented by the 1 × 3 position vector k t
and 3 × 3 rotation matrix k R. We solve for {k t + , k R + } in the
new configuration based on the new vertex positions x r+ of
the considered bone. Because the joint orientation is a global
parameter (e.g. the axis between the hip centre and the knee),
we warp it through the optimal rotation of the whole bone.
To estimate the new joint centre (local parameter), we use
the same approach except that weights are set to the inverse
distance to the handles x r , so that the interpolated motion
converges to the sparse displacements. This is equivalent to
the moving least squares deformation approach presented in
[SMW06].
3.5. Constrained skeleton pose estimation
Because we do not account for displacement discontinuities,
the dense elastic registration process is inaccurate around
joints (Figure 4). To reduce these distortions, we adapt
bone transforms in the reference configuration after convergence of the as-rigid-as-possible registration process. Following [HHN88], we compute, for each bone b, the optimal rigid transform {tb∗ , Rb∗ } approximating v, yielding to
the optimal positions x ∗ (Figure 5). Because of noise and
local minima however, unrealistic joint transforms can be
achieved. Our goal is to instead find the valid bone transforms {tb , Rb } that optimally approximates this configuration. Because of possible loops in the skeleton and non-linear
and discontinuous energy terms the constrained minimization
of err = b i∈b mi xi∗ − Rb xir − tb 2 has no closed form
solution. Therefore, we solve it through an iterative
treatment. Our method treats all joints sequentially. For a

c 2010 The Authors
Computer Graphics Forum c 2010 The Eurographics Association and Blackwell Publishing Ltd.

B. Gilles et al. / Creating and Animating Subject-Specific Anatomical Models

2345

Figure 4: Registration of a generic finger model (a) to a manually segmented surface (b). The as-rigid-as-possible elastic
registration of the whole (e, f) and the independent registration of the bones (g, h) present distortions and are sensitive to
local minima (blue arrows), while our method (c) maintains realistic joint transforms and successfully decouples smooth and
discontinuous deformations. Skeleton pose estimation is important to prevent from unrealistic joint transforms.
Reference positions x

r

Optimal positions x*
Rigid
matching

r+

Displacement
constraints

pT

Target

New positions x

cT

Constrained transforms {tp,Rp} and {tc, Rc}

Figure 5: To adapt the reference skeleton pose (left), we
find the optimal bone transforms given some target vertex
positions (middle), and constrain joints to remain within
anatomic limits (right).

given joint, we find the two smallest bone corrections that
enforce the limits (see Sections 3.5.1 and 3.5.2), and update
the reference positions x ∗ accordingly. By iterating this process (typically 10 times in our tests), all joints quickly reach
valid configurations.

dinate systems are appropriately chosen, they correspond
to anatomical angles (e.g. flexion/extension, int/ext rotation,
abduction/adduction, etc.). Joint ranges of motion can be
measured and are well documented [PY05]. For instance,
for interphalangeal joints, maximal angles are respectively
set to 120◦ /20◦ , 10◦ /10◦ and 5◦ /5◦ . As an implicit surface,
we construct an asymmetric ellipsoid passing through these
six points, by combining one eighth of ellipsoids. This type
of surface is smooth and allows simple inside/outside tests:
let a, b and c be the three maximal angles corresponding
to the one eighth of space containing r, then angles are
within the limits if (rx /a)2 + (ry /b)2 + (rz /c)2 < 1. When
r is outside, we estimate the closest rotation by computing
the closest point on the ellipsoid. This point is iteratively
found using a simple Newton search. Note that we need
to take the closest points from the two equivalent rotations
r = θ u and r = −(π + θ)u. The space of rotation r vectors instead of the space of quaternion vectors u leads to a
more accurate estimation of the distance between rotations
[HUF05].

3.5.1. Joint limits
Consider a joint between bones p and c. The associated local
coordinates systems are represented by homogeneous matrices composed of translations and rotations: p T = {p t, p R}
and c T = {c t, c R}. The joint transform J = p T −1 c T can violate the anatomic joint limits. In a quaternion form, the
joint transform is given by J = {t, q(r)}, where t represents the joint shift, r = θ u the rotation vector and q(r) =
[cos(θ/2), u sin(θ/2)] is the unit quaternion.

3.5.3. Shift limits
To enforce joint limits in terms of translation, we consider an
identical limit tM in the six directions (sphere instead of ellipsoid), leading to a simpler formulation for inside/outside test
and projection: t /tM < 1. For the interphalangeal joints
example, we choose tM = 1 mm.

3.5.4. Displacement constraints
3.5.2. Angular limits
We choose to represent the space of feasible joint angles with
an implicit function of r. We parameterize this function using
maximal angles in the six principal directions. When coor-

Projecting joint translations and rotations simultaneously and
applying corrections to reach this desired state can lead to
severe excursion from the optimal positions xi∗ . To couple
corrections in rotation and translation, we perform them

c 2010 The Authors
Computer Graphics Forum c 2010 The Eurographics Association and Blackwell Publishing Ltd.

2346

B. Gilles et al. / Creating and Animating Subject-Specific Anatomical Models

sequentially while minimizing the quadratic error err at each
step:
• Constrained minimization for translations: if the joint
shift is invalid ( p t − c t > tM ), we apply the optimal
translations tp and tc that satisfy the constraints and minimize the error. Let Mp = p mi and Mc = c mi be
the mass of bone p and c respectively. We have
tp =

Mc
Mc + Mp

1−

tM
t
p − ct

(p t − c t),

tc =

Mp
Mc + Mp

1−

tM
pt − ct

(c t − p t).

(2)

• Constrained minimization for rotations: From the resulting translated positions, we solve for the optimal rotations of the two bones centred on p t and c t, respectively.
This maintains a constant joint shift and therefore does
not break translation constraints. We then apply angular
joint limits: if the joint angle is outside the limits, we find
the closest joint rotation using the method described in
the previous section. From it, we update the position of
one of the bone.
• Global rigid transform: We compute the optimal rigid
transform of the two bones as a whole. In this step, the
joint transform remains unchanged and constraints are
met.
4. Results

Table 1: Summary of computational time per iteration, for each step
of the registration process

Generic models

Rat

Hand

No. of vertices
No. of bones
No. of joints

34817
214
228

7218
27
40

150 ms
40 ms
–
3000 ms
50000
–

20 ms
7 ms
7 ms
500 ms
20000
350 ms

As-rigid-as-possible deformations
Skeleton pose estimation
PCA projection
Geometric correspondences
No. of vertices of the target mesh
Image correspondences

at the cost of an 100 times slower pre-computation. To simulate as-rigid-as-possible deformation, our method achieves
an average computation time of 2.5 μs per vertex, per iteration (100 k vertices at 4 fps). The complexity of our joint
pose optimisation scheme (Section 3.5) depends on the number of vertices (pre-computation of the sums and covariance
matrices), on the number of joints and on the number of loops
in which all joints are treated sequentially. When all joints
are in a valid state, the algorithm stops, so complexity also
depends on the validity of the current skeleton pose. In our
test samples, 10 iterations were always sufficient to reach
a valid skeleton configuration. We summarize the average
computation times for the two models in Table 1.

4.1. Performances
We illustrate our methods with two generic anatomical models: a model of the rat skeleton, interactively built from microCT data, and a model of the human hand, purchased from
Snoswell Design. For all joints, we manually defined the local bone coordinate systems and joint limits in agreement
with the literature and joint morphology. Limits in translations were slightly increased to cover the variability between
subjects. In a pre-processing step, vertices were grouped into
clusters subsequently optimized for fast summation, as described in Section 3.3. This was done for different cluster
sizes, to control the local rigidity during the registration.
Four different sizes were used for the hand model (8 mm,
35 mm, 60 mm and ∞) and for the rat model (2 mm, 10 mm,
35 mm and ∞). Our algorithm has been implemented in C
for testing. Where possible, it has been parallelized. All timings have been measured on a 2.4 Ghz QuadCore machine,
and exclude visualization time. We typically reach 90% of
the CPU usage during the registration process. The gain in
using fast summation depends on the cluster redundancy,
and therefore on the object shape and cluster size. We experienced an average reduction of 85% of the number of
summation values during each step of the deformation (compared to the 30% of the method presented in [GP08]). During
simulation, we measured a four times speedup over [GP08],

4.2. Surface registration
Our input target surfaces were segmented in medical images.
We manually delineated hand bones in MRI (resolution of
0.3 × 0.3 × 1 mm). It resulted in aliased surfaces and inaccurate interfaces (Figures 3 and 4). Rat skeletons were obtained
by thresholding CT data (resolution of 45 × 45 × 45 μm).
With this technique, the internal and external surfaces of the
hard bone tissue are extracted, although only the external part
is desired. We converted segmented images into meshes using
a standard iso-surfacing pipeline (marching cubes, smoothing and mesh simplification).
Based on the correspondences to these surfaces, we applied our registration method. Starting from a complete rigid
registration, more degrees of freedom are successively added
by decreasing the local rigidity (i.e. the cluster size). When
the average vertex displacement is under a small threshold
(set to 0.1 mm), projection to the statistical model and joint
pose estimation are performed to update the reference particle positions (plastic deformation). Cluster size is interactively changed by the user during the registration, depending
on the observed results. To avoid local minima, it is important to start with a high rigidity to first recover the global
rigid displacement. As in standard rigid ICP, a relatively

c 2010 The Authors
Computer Graphics Forum c 2010 The Eurographics Association and Blackwell Publishing Ltd.

B. Gilles et al. / Creating and Animating Subject-Specific Anatomical Models

Figure 6: Automatic registration of a generic rat model (bottom) to a surface extracted from CT data (in white).

◦

correct initial orientation (error in rotation < 90 ) is required
to avoid flipping. Using a soft model obviously increases
possible falls into local minima due to the increased degrees
of freedom, but speeds up convergence. Lowest cluster sizes
should be applied only when large local minima such as limb
crossings are avoided. A good strategy is to quickly go to the
smallest cluster size and, if a misregistration is observed, to
temporarily increase the cluster size to go out from the local
minimum. The smallest cluster size is an important parameter that rules the final allowed departure from the statistical
model. For instance, a completely rigid model only allows
staying along the predefined deformation modes, while an
extremely soft object fits the data well but can capture noise.
So a compromise has to be found based on the quality of the
data, and the degree of desired enrichment of the statistical
model. Increasing the number of PCA samples allows for a
larger coverage of shape variability and thus requires less degrees of freedom in the elastic deformation phase (i.e. higher
cluster sizes). For the hand example shown in the Video,
eight samples are used for PCA. For the rat example, we
did not have enough samples, and so used a fictitious scaling
component, which reflects the first principal component of a
realistic statistical model.
Registration results typically obtained for the rat and the
hand are illustrated in Figures 1 and 6. Our method successfully corrects the imprecision in the target surfaces by
introducing prior geometric information for each bone, and
prior functional information for each joint. It allows separating the different bones that were initially segmented as a
whole. The rat and hand examples took, respectively, 2 and 3
min of computation representing 59 and 211 iterations of the
elastic deformation process, and 25 and 58 plastic deformation steps. The algorithm converged to a stable configuration

2347

Figure 7: Animation transfer from registered rat and dog
skeletons.

and stopped when vertices were still after both the elastic
and plastic deformation stages. Similar results were obtained
for different data sets, although we noticed some minor falls
into local minima in the rat ribcage due to locally incoherent correspondences. We also have an extreme example: the
registration of the rat to a CG model of a dog (see Figures 1
and 7). To handle the large morphological differences and get
correct correspondences, we segmented the dog skeleton and
associated each target surface to the corresponding generic
bones.

4.3. Image registration
Although CT thresholding is simple, the creation of target
surfaces from MRI still requires significant manual work.
Here we apply the same methodology for image registration,
to automatically segment bones in MRI. From one data set,
we obtain generic feature vectors through manual segmentation and surface registration as described previously. These
vectors are used for registration in other data sets acquired
with the same imaging protocol. For correspondence finding
in our hand example, we used 20 samples with a decreasing
search space from 20 to 5 mm inside and outside the surface,
along the normal direction (Figure 3). This is done in conjunction with cluster size decrease. Values are determined ad
hoc: the upper bound should cover the initial distance from
the target, whereas the lower bound is related to the correspondence confidence region and therefore depends on the
quality of similarity measurement.
We validated our technique by checking the distance between the resulting models and manually segmented models.
On average, we achieved an average distance of 0.8 mm and
the convergence time was approximately 3 min (see Video).
This represented 490 iterations of the elastic deformation

c 2010 The Authors
Computer Graphics Forum c 2010 The Eurographics Association and Blackwell Publishing Ltd.

2348

B. Gilles et al. / Creating and Animating Subject-Specific Anatomical Models

4.5. Applications
4.5.1. Geometry transfer

Figure 8: Our algorithm can automatically track hand poses
from low resolution MRI stacks.

process and 26 plastic deformation steps. As soon as models
are reconstructed for a subject, our algorithm can estimate
skeleton poses in other data sets with the constraint of keeping bones rigid as shown in the Video and Figure 8. In this
case, we only have one cluster size set to infinite.

4.4. Comparison with previous work
Existing dense elastic registration methods [GP08, CMP∗ 07,
dAST∗ 08, LSP08, LAGP09] can be applied to deform a
generic skeleton as a whole or to independently deform the
different bones. In the first case, discontinuities of displacement are not modelled, which can produce distortions around
joints. In the former case, unrealistic joint transforms can
appear because bones are treated separately. In Figure 4,
we illustrate this on a simple model composed of two phalanges. Our as-rigid-as-possible elastic deformation method
used solely (bottom row) shows the importance of treating
displacement discontinuities. It is equivalent to the method
presented in [GP08] with improved computational speed.
Decreasing the cluster size attenuates the artefacts but cannot remove them completely [bones remain glued Figure 4(f)
or independent Figure 4(h)]). Decreasing it too much adds
too many degrees of freedom, making the registration sensitive to noise in the input data [Figure 4(b)]. Using only
statistical projections in the plastic deformation phase does
not prevent joints from moving out of the anatomic limits [Figure 4(d)] although bones are kept together by the
elastic deformation phase [this only prevents from large
local minima in joint transforms such as (h)]. Articulated
registration methods [KM04, STC∗ 03, PDD∗ 05] would not
take into account non-rigid deformations and therefore the
subject-specific morphology. The methods of Huang et al.
[HAWG08] and Chang et al. [CZ09] that clusters models
into nearly rigid parts during the registration and minimizes
a rigidity energy would help in regularizing the displacement
field of each bone, but distortions around joints would remain
due to smoothly varying weights. Each regularization step,
when applied separately, introduces artefacts. Instead, our
approach tries to achieve robust and accurate skeleton registration by decomposing the displacement into valid skeletal
movements, statistical shape variations and non-rigid excursion from the statistics.

After bone registration, one direct application is to enrich
the subject specific models with details from the template
such as surrounding soft-tissues (see Video and Figure 1).
Our as-rigid-as-possible deformation scheme can do that automatically: first, we preprocess generic clusters based on
bone and soft-tissue vertices together. We transform bone
vertices to their subject specific positions, constrain them to
remain fixed and finally run the simulation to deform softtissues. As for registration, a faster convergence is achieved
by progressively decreasing cluster size.

4.5.2. Animation transfer
Bone local coordinate systems contain other important geometric details that are automatically warped (and that are
usually time-consuming to set). Our method allows for transferring animations of the generic model using forward kinematics. We first make skeletons acyclic by breaking auxiliary
constraints. Then, we simply propagate joint angles and shifts
from the root bone to the leaves. Our registration algorithm
keeps coordinate systems consistent with the geometry. This
removes the usual ambiguity in the internal/external rotation angle, present in the registration of animation skeleton. Our method allows comparing animation from different subject and even different species in the same kinematics space (Figure 7). In our examples generic animations
were obtained from biomechanical simulations and motion
capture.

4.5.3. Shape analysis and synthesis
By performing PCA on all bones simultaneously we take into
account their mutual correlation. The influence of the skeleton pose has been filtered out by rigidly registering individual
bones. So the principal components only reflect variations of
the morphology. With our method, we have built a statistical model based on nine hands. The Video shows the first
four modes. The hand is kept in the same pose using forward
kinematic, as previously described. New synthetic shapes can
be interpolated/extrapolated by adding to the mean a linear
combination of principal components. Exaggerating normal
anatomy is particularly relevant for modelling and animating
cartoon-like characters (see Video).

5. Conclusion
5.1. Benefits
Our new method aligns generic skeleton models with subjectspecific data by treating both local and global deformations.
We have successfully incorporated prior knowledge about
the shape, the feasible skeleton pose and the variability in

c 2010 The Authors
Computer Graphics Forum c 2010 The Eurographics Association and Blackwell Publishing Ltd.

B. Gilles et al. / Creating and Animating Subject-Specific Anatomical Models

the population. Input data can be either imprecise surfaces
of the skeleton as a whole, or low-resolution medical images. Adding prior knowledge allows for noise reduction,
bone separation and estimation of extra anatomical features
through geometry transfer. This adds flexibility at the acquisition stage in terms of resolution and tissue specificity.
Our method can be applied in geometric modelling and animation (morphing of animated biomechanical models) but
also in the medical field (functional anatomy and comparative anatomy domains). The main parameter for the user is
the cluster size, which controls the amount of prior shape
information introduced. It needs to be determined from the
context, mainly from the input noise, the quality of the initial
alignment, the completeness of the statistical model and the
size of the models.

5.2. Limitations and future work
Our results are encouraging, however we would like to investigate validation more thoroughly. For soft-tissue geometry transfer, we will quantify the accuracy of using dense
deformations only and check the amount of displacement
discontinuity (e.g. sliding between surfaces, changes in attachment locations and tendon network topology). In this
paper, we did not focus on the correspondence computation
step. This is currently the main bottleneck in terms of complexity (95% of the whole computation time). This could be
clearly improved by updating correspondences at each iteration instead of re-computing them. Using extrinsic similarity
is also responsible of possible falls into local minima (e.g.
misregistration of rat ribs, and rat tail not reaching the tip
as shown in the Video). To improve this, a possible solution would be to mix feature correspondence methods that
are more spatially coherent, global and robust [HAWG08,
ZSCO∗ 08, LF09], but more sensitive to noise in the input
data. This would also add flexibility in the handling of cluster sizes that is currently the main parameter for avoiding
local minima. However, it should only control the amount
of shape constraints. With better correspondences, we believe that using solely the smallest cluster size would be
enough. In future, we expect to use registration for parameterizing functional models of the musculoskeletal system,
by fusing data from complementary modalities (e.g. merge
information from motion capture, CT, MRI and histological
cross-sections).

2349

References
[ACP02] ALLEN B., CURLESS B., POPOVIC Z.: Articulated
body deformation from range scan data. ACM Transactions on Graphics 21, 3 (2002), 612–619.
[ACPA06] ARSIGNY V., COMMOWICK O., PENNEC X., AYACHE
N.: A log-Euclidean polyaffine framework for locally rigid
or affine registration. In Proceedings of WBIR (2006),
pp. 120–127.
[AFP00] AUDETTE M., FERRIE F., PETERS T.: An algorithmic
overview of surface registration techniques for medical
imaging. Medical Image Analysis 4, 3 (2000), 201–217.
[AHS03] ALBRECHT I., HABER J., SEIDEL H.-P.: Construction
and animation of anatomically based human hand models.
In Proceedings of Symposium on Computer Animation 368
(2003), pp. 98–109.
[ASK*05] ANGUELOV D., SRINIVASAN P., KOLLER D., THRUN
S., RODGERS J., DAVIS. J.: Scape: Shape completion and animation of people. ACM Transactions on Graphics (Proc.
SIGGRAPH) (2005).
[Bar94] BARAFF D.: Fast contact force computation for nonpenetrating rigid bodies. In Proceedings of SIGGRAPH
(1994), pp. 23–34.
[Bar96] BARAFF D.: Linear-time dynamics using lagrange
multipliers. In Proceedings of SIGGRAPH (1996),
pp. 137–146.
[BBK09] BRONSTEIN A., BRONSTEIN M., KIMMEL R.:
Topology-invariant similarity of nonrigid shapes. International Journal of Computer Vision 81, 3 (2009), 281–301.
[BM92] BESL P., MCKAY N.: A method for registration of
3-d shapes. IEEE Transactions on PAMI 14, 2 (1992),
239–256.
[CMP*07] CHARPIAT G., MAUREL P., PONS J., KERIVEN R.,
FAUGERAS O.: Generalized gradients: Priors on minimization flows. International Journal of Computer Vision 73,
3 (2007), 325–344.
[CT01] COOTES T., TAYLOR C.: Statistical models of appearance for medical image analysis and computer vision, in
medical imaging. In Proceedings of SPIE 4322 (2001),
238–248.

Acknowledgments
This work is funded in part by the Canadian Institutes of
Health Research, Canada Research Chairs Program, NSERC,
Peter Wall Institute for Advanced Studies, and MITACS. The
authors thank Olivier Palombi, Jean-Francois Le bas and
Irene Tropres from the Grenoble hospital for MRI acquisition.

[CZ08] CHANG W., ZWICKER M.: Automatic registration for
articulated shapes. Computer Graphics Forum (Proc.
SGP) 27, 5 (2008), 1459–1468.
[CZ09] CHANG W., ZWICKER M.: Range scan registration using reduced deformable models. In Proceedings of Eurographics 28, 2 (2009), 447–456.

c 2010 The Authors
Computer Graphics Forum c 2010 The Eurographics Association and Blackwell Publishing Ltd.

2350

B. Gilles et al. / Creating and Animating Subject-Specific Anatomical Models

[dAST*08] DE AGUIAR E., STOLL C., THEOBALT C., AHMED N.,
SEIDEL H.-P., THRUN S.: Performance capture from sparse
multi-view video. In Proceedings of SIGGRAPH, ACM
Transactions on Graphics 27, 3 (2008), 1–10.

[MHK*08] MATEUS D., HORAUD R., KNOSSOW D., CUZZOLIN
F., BOYER E.: Articulated shape matching using laplacian eigenfunctions and unsupervised point registration.
In Proceedings of IEEE CVPR (2008), pp. 1–8.

[Fau99] FAURE F.: Fast iterative refinement of articulated
solid dynamics. IEEE TVCG 5, 3 (1999), 268–276.

[MHTG05] M¨ULLER M., HEIDELBERGER B., TESCHNER M.,
GROSS M.: Meshless deformations based on shape matching. ACM Transactions on Graphics (Proc. SIGGRAPH)
(2005), 471–478.

[GC94] GASCUEL J.-D., CANI M.-P.: Displacement constraints for interactive modeling and animation of articulated structures. The Visual Computer 10, 4 (1994),
191–204.
[GP08] GILLES B., PAI D.: Fast musculoskeletal registration
based on shape matching. In Proceedings of MICCAI’08
2 (2008), pp. 822–829.
[HAWG08] HUANG Q., ADAMS B., WICKE M., GUIBAS
L.: Non-rigid registration under isometric deformations.
Computer Graphics Forum 27, 5 (2008), 1449–1457.
[HHN88] HORN B., HILDEN H., NEGAHDARIPOUR S.: Closedform solution of absolute orientation using orthonormal
matrices. Journal of the Optical Society of America 5
(1988), 1127–1135.
[HUF05] HERDA L., URTASUN R., FUA P.: Hierarchical implicit surface joint limits for human body tracking. Computer Vision and Image Understanding 99, 2 (2005),
189–209.
[Jol86] JOLLIFE T.: Principle Component Analysis. SpringerVerlag, New York (1986).
[KM04] KURIHARA T., MIYATA N.: Modeling deformable
human hands from medical images. In Proceedings of
Symposium on Computer Animation’04 (2004), 355–
363.
[LAGP09] LI H., ADAMS B., GUIBAS L. J., PAULY M.: Robust
single-view geometry and motion reconstruction. ACM
Transactions Graphics (Proc. SIGGRAPH Asia) (2009).
[LBKH00] LEE J., BAEK N., KIM D., HAHN J.: A procedural
approach to solving constraints of articulated bodies. In
Proceedings of Eurographics, Short Paper (2000).
[LF09] LIPMAN Y., FUNKHOUSER T.: Mobius voting for surface
correspondence. ACM Transactions on Graphics (Proc.
SIGGRAPH) 28, 3 (2009).
[LSP08] LI H., SUMNER R. W., PAULY M.: Global correspondence optimization for non-rigid registration of depth
scans. In Proceedings of SGP, Computer Graphics Forum
27, 5 (2008).
[MC94] MIRTICH B., CANNY J.: Impulse-based dynamic simulation. The Algorithmic Foundations of Robotics (1994).

[MW88] MOORE M., WILHELMS J.: Collision detection and
response for computer animation. Proc. SIGGRAPH 22,
4 (1988), 289–298.
[OBBH00] O’BRIEN J., BODENHEIMER B., BROSTOW G.,
HODGINS J.: Automatic joint parameter estimation from
magnetic motion capture data. In Proceedings of Graphics Interface (2000), pp. 53–60.
[PDD*05] PAPADEMETRIS X., DIONE D., DOBRUCKI L., STAIB
L., SINUSAS A.: Articulated rigid registration for serial
lower-limb mouse imaging. Proc. MICCAI 3750 (2005),
919–926.
[PY05] PAPAIOANNOU G., YENI Y.: Biomechanics of joints.
Wiley Encyclopedia of Biomedical Engineering (2005).
[RJ07] RIVERS A., JAMES D.: Fastlsm: Fast lattice shape
matching for robust real-time deformation. ACM Transactions on Graphics (Proc. SIGGRAPH) 26, 3 (2007),
82-1–82-6.
[SA07] SORKINE O., ALEXA M.: As-rigid-as-possible surface modeling. In Proceedings of SGP (2007), pp. 109–
116.
[She07] SHEN D.: Image registration by local histogram
matching. Pattern Recognition 40, 4 (2007), 1161–
1172.
[SKP08] SUEDA S., KAUFMAN A., PAI D.: Musculotendon
simulation for hand animation. ACM Transactions on
Graphics (Proc. SIGGRAPH’08), 27, 3 (2008), 83-1–
83-8.
[SMW06] SCHAEFER S., MCPHAIL T., WARREN J.: Image deformation using moving least squares. ACM Transactions
on Graphics (Proc. SIGGRAPH) 25, 3 (2006), 533–540.
[SSGD03] SUNDAR H., SILVER D., GAGVANI N., DICKINSON S.:
Skeleton based shape matching and retrieval. In Proceedings of IEEE Conference on Shape Modeling and Applications (2003), pp. 130–142.
[SSP07] SUMNER R. W., SCHMID J., PAULY M.: Embedded
deformation for shape manipulation. ACM Transactions
on Graphics (Proc. SIGGRAPH), 26, 3 (2007), 80-2–
80-7.

c 2010 The Authors
Computer Graphics Forum c 2010 The Eurographics Association and Blackwell Publishing Ltd.

B. Gilles et al. / Creating and Animating Subject-Specific Anatomical Models

2351

[STC*03] SEBASTIAN T., TEK H., CRISCO J., WOLFE S., KIMIA
B.: Segmentation of carpal bones from ct images using
skeletally coupled deformable models. Medical Image
Analysis 7, 1 (2003), 21–45.

[XWY*09] XU W., WANG J., YIN K., ZHOU K., VAN DE PANNE
N., CHEN F., GUO B.: Joint-aware manipulation of deformable models. ACM Transactions on Graphics (Proc.
SIGGRAPH) 28, 3 (2009), 35-1–35-9.

[TSB*05] TERAN J., SIFAKIS E., BLEMKER S., HING V. N. T.,
LAU C., FEDKIW R.: Creating and simulating skeletal muscle from the visible human data set. IEEE TVCG 11 (2005),
317–328.

[ZF03] ZITOVA´ B., FLUSSER J.: Image registration methods: a
survey. Image Vision Computer 21, 11 (2003), 977–1000.

[VBMP08] VLASIC D., BARAN I., MATUSIK W., POPOVIC J.:
Articulated mesh animation from multi-view silhouettes.
ACM Transactions on Graphics 27, 3 (2008), 97:1–
97:9.
[WHQ05] WANG K., HE Y., QIN H.: Incorporating rigid structures in non-rigid registration using triangular b-splines.
VLSM (2005), 235–246.
[WTF06] WEINSTEIN R., TERAN J., FEDKIW R.: Dynamic simulation of articulated rigid bodies with contact and collision. IEEE TVCG 12 (2006), 365–374.

[ZSCO*08] ZHANG H., SHEFFER A., COHEN-OR D., ZHOU Q.,
VAN KAICK O., TAGLIASACCHI A.: Deformation-driven shape
correspondence. Computer Graphics Forum (Proc. SGP)
27, 5 (2008), 1431–1439.
Supporting Information
Additional Supporting Information may be found in the online version of this article.
Please note: Wiley-Blackwell is not responsible for the content or functionality of any supporting materials supplied by
the authors. Any queries (other than missing material) should
be directed to the corresponding author for the article.

c 2010 The Authors
Computer Graphics Forum c 2010 The Eurographics Association and Blackwell Publishing Ltd.

