DOI: 10.1111/j.1467-8659.2010.01652.x

COMPUTER GRAPHICS

forum

Volume 29 (2010), number 6 pp. 1842–1853

Accurate Simplification of Multi-Chart Textured Models
N. Coll and T. Paradinas
Institut d’Informatica i Aplicacions, Universitat de Girona, Spain
{coll,teresap}@ima.udg.edu

Abstract
Scanning and acquisition methods produce highly detailed surface meshes that need multi-chart parameterizations to reduce stretching and distortion. From these complex shape surfaces, high-quality approximations are
automatically generated by using surface simplification techniques. Multi-chart textures hinder the quality of the
simplification of these techniques for two reasons: either the chart boundaries cannot be simplified leading to a
lack of geometric fidelity; or texture distortions and artefacts appear near the simplified boundaries. In this paper,
we present an edge-collapse based simplification method that provides an accurate, low-resolution approximation
from a multi-chart textured model. For each collapse, the model is reparameterized by local bijective mappings
to avoid texture distortions and chart boundary artefacts on the simplified mesh due to the geometry changes. To
better apply the appearance attributes and to guarantee geometric fidelity, we drive the simplification process with
the quadric error metrics weighted by a local area distortion measure.
Keywords: surface simplification, geometric error, texture mapping, texture distortion, multi-chart parameterization
ACM CCS: I.3.5 [Computer Graphics[: Curve, surface, solid, and object representations; I.3.7 [Computer Graphics]: Colour, shading, shadowing, and texture

1. Introduction
Many computer graphics and geometric modelling applications require highly detailed surfaces enhanced with colour
details involving texture mapping to obtain a convincing level
of realism. However, the high complexity of the models combined with the limited capabilities of current hardware makes
it difficult to process them. Because their full complexity is
not always required, it is useful to have simpler versions of
these complex models.
Appearance attributes are mapped to the model with the aid
of a surface parameterization. For closed surfaces, surfaces
of genus greater than zero or surfaces exhibiting a complex
shape, it is necessary to partition the surface into several
charts to reduce the distortion. This is done by defining a
texture atlas, which maps the surface of the three-dimensional
(3D) model into a non-connected 2D domain. This is known
as multi-chart parameterization.
In recent years, various simplification techniques for automatically generating high-quality, appearance-preserving
c 2010 The Authors
Journal compilation c 2010 The Eurographics Association and
Blackwell Publishing Ltd. Published by Blackwell Publishing,
9600 Garsington Road, Oxford OX4 2DQ, UK and 350 Main
Street, Malden, MA 02148, USA.

approximations of original models have been proposed.
There are two different strategies in the simplification field.
First, there is level-of-detail modelling, which focuses on the
trade-off between fidelity and rendering performance. The
aim is to obtain a sequence of geometric approximations that
share the same texture map and switch them during rendering, depending on the distance between the object and the
viewer. The second strategy consists of generating a single,
low-resolution approximation that resembles the original one
but has far fewer faces. In this case, the models are generally
acquisitions from real objects using 3D laser scans. Single
approximations of these virtual models are commonly applied in several fields, such as realistic virtual environments.
In this paper, we present a new approach to this second
strategy.
1.1. Related work
In recent years, various simplification algorithms have been
proposed. Face-reduction strategies are commonly based on
the edge collapse operator. Edges are ordered according to a

1842

N. Coll & T. Paradinas / Accurate Simplification of Multi-Chart Textured Models

cost and in each iteration, the lowest-cost edge is contracted
and the cost of its neighbouring edges is updated.
Geometric simplification of meshes was the first topic
studied in this field. The simplification process was guided
only by a geometric error, without taking into account the
appearance attributes of the model. An extensive review of
all existing methods proposed before 2002 can be found
in [LWC∗ 02]. Some of the main references are [HDD∗ 93,
Hop96, CVM∗ 96, GH97, EM98, LT98].
More recently, simplifying meshes with appearance attributes has become the main area of interest. In this case, the
local simplification operators try to generate faithful geometric approximations while minimizing texture deviation. The
texture deviation of a mapped attribute is defined as the deviation of its position on the final surface from its position on the
original surface. In [GH98], Garland and Heckbert extended
the original Quadric Error Metric (QEM) scheme to account
for a wide range of vertex attributes. Hoppe [Hop99] made
several improvements to Garland and Heckbert’s approach
by computing the error based on the difference, in position
and attribute, between a given point and its closest projection
on the simplified surface. Cohen et al. [COM98] proposed
a simplification algorithm guided by the texture deviation.
Lindstrom et al. [LT00] introduced the image-driven simplification concept, where multiple images were used to decide
which portions of a model have to be simplified. Sander
et al. [SSGH01] presented a multi-chart parameterization,
constrained to convex and straight chart boundaries, to be
used in a progressive mesh. Unfortunately, for a small number of charts, the chart boundaries do not usually follow the
‘creases’ of the model and, consequently, distorted results
may be obtained.
These approaches guide the simplification process by
measures that try to balance geometric fidelity and texture
preservation. Nevertheless, significant texture distortions and
artefacts can be observed on the simplified surfaces. The fundamental reason is that the texture map, even when it is very
well parameterized, is accessed through linear interpolation
of texture coordinates on the simplified triangles. One way to
minimize the texture distortion is the texture adaptation technique, proposed by Chen and Chuang [CC06], which adapts
the texture content for each edge collapse. However, commonly used multi-chart parameterizations are not supported.
The presence of chart boundaries hinders the quality of
the simplification due to the discontinuity in texture space.
If boundary edges are not allowed to be collapsed, the resulting approximation presents a poor quality mesh with a
lot of skinny triangles near the seams. Furthermore, texture
distortions or artefacts appear near chart boundaries.
There are two main strategies to avoid getting seams. The
first one consists of simplifying the geometric model with any
of the surface simplification methods, and then parameterizing the simplified mesh and finally projecting the attributes,

1843

such as texture, of the high polygonal model onto the lower
one ([TCS03]). The fidelity of the result depends on various factors, such as the complexity of the original mesh, the
quality of the simplification method or the point-to-point correspondence strategy used to project the attributes. The most
commonly used strategy is normal projection that needs the
continuity of the normal field over each face and does not
guarantee that every attribute of the texture is projected onto
the simplified surface. The second strategy is to choose a
texture domain with the same topology as the given mesh
and a similar shape. The survey by Hormann et al. [HLS07]
gives complete, detailed information on these seamless texturing parameterization techniques. One of the most powerful of these methods is PolyCube-Maps ([THCM04] and
[LJFW08]). A polycube is a 3D shape, composed of many
unit-sized cubes attached face-to-face, which is used as the
texture domain. However, the main drawback of PolyCubeMaps is the fixed resolution that has to be carefully chosen
to match the geometric features, which would give a parameterization with too many cubes for a surface with complex
geometry or topology. [GP08] proposes a method that allows
the use of a seamless parameterization for simplification purposes that is independent of the parameterization provided by
the artist for texturing. The main drawback of this technique
is the use of a common bijective parameterization for all the
levels of detail.

1.2. Our contributions
In this paper, we present a method that generates a single and
accurate, low-resolution approximation of a multi-chart textured model that preserves geometric fidelity while avoiding
texture distortions and artefacts. The main contributions of
this work are as follows:
• Bijective mappings: For each edge collapse, the mesh
is reparameterized by local bijective mappings to avoid
distortions to the appearance of the simplified mesh produced by geometric changes. These bijective mappings
are GPU-friendly: fully supported by the texture mapping
hardware, the render-to-texture feature and the fragment
shading. To avoid blurring artefacts due to an excessive
number of resampling operations, the mappings are applied to an index texture. Each texel of this index texture
stores the texture coordinates referring to the original
texture. The technique supports any arbitrary multi-chart
parameterization with the only requirement being that the
index texture has to be empty near concave parts of its
chart boundaries. In Section 7, we will see that this is not
a strong requirement. Subsequently, our approach allows
the chart boundary edges to be simplified, guaranteeing
geometric fidelity and avoiding artefacts.
• Weighted QEMs: We have modified the QSlim [GH97]
simplification method by weighting the quadrics with a
local area distortion measure to preserve highly curved

c 2010 The Authors
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

1844

N. Coll & T. Paradinas / Accurate Simplification of Multi-Chart Textured Models

regions and consequently better apply the texture of the
original model.

2. Overview of our Proposal
When simplifying a textured surface, S, the triangles created for each edge collapse have to be parameterized, that
is texture coordinates have to be assigned to the vertices of
the new triangles. However, this is not sufficient to prevent
texture distortions due to the linearity of the texture mapping. Therefore, we propose not only to modify the texture
coordinates, but also to modify the texture content in order
to preserve the appearance of the model more accurately.
First the model is parameterized by an index texture, I,
whose texels store texture coordinates referring to the original
texture, T. This index texture, I, is modified in the course
of edge collapsing. We denote by S i and I i the simplified
surface and the index texture before the collapse of the edge,
ei . The edge-collapse operator modifies I i and we obtain
I i+1 from the triangles involved in S i , their corresponding
texture triangles in I i and the triangles involved in S i+1 .
i+1

At first, it seems reasonable to assign to a point on S
the texture attribute of its closest point on S i . However, this
criterion does not produce a bijection between S i+1 and S i
and, consequently, texture attributes may be lost. In [CC06],
this criterion is applied only for a reduced number of points
in the following way: given two edges of the involved triangles, one of S i and one of S i+1 , whose corresponding texture
edges intersect, their closest points are computed and the
texture attribute of the point on S i is assigned to the point
on S i+1 . These assignments create two cell partitions, one in
I i and one in I i+1 , and a cell correspondence between them.
The texture modification is done by mapping a cell in I i to
its corresponding cell in I i+1 . The main drawbacks of this
technique are that cell overlapping may be produced and that
a large number of point assignments and cells are needed for
computation when full-edge collapses are used.
In contrast, our method takes advantage of the orthogonal
projections of the surface triangles involved in S i and S i+1
onto the tangent plane, π , of the point of collapse, vi . Only
when these two projections are bijective is the edge-collapse
allowed. The new triangles in I i+1 are filled with a fragment
shader by first mapping the triangles in I i to the projected
triangles in plane π , and then mapping these latter triangles
to the new triangles in I i+1 . In fact, these two mappings are
linear bijections and can be merged into just one by using
their composition. In this way, S i and S i+1 have the same
appearance from a viewpoint placed on the normal direction
of vi . Observe that, in contrast to point-to-point correspondence strategies, in our approach, every texture attribute will
appear on the simplified surface.
Moreover, the texture deviation has to be minimized, that
is the distance from the point on S i of an attribute in texture

I i and the point on S i+1 of the same attribute in texture I i+1
must be minimal. Consequently, the more ‘similar’ a surface
triangle is to its projected triangle onto the tangent plane
and to its corresponding texture triangle, the more minimal
the texture deviation is. Because the position of a point in a
polygon can be derived from the areas of the triangles determined by the point and the polygon edges, we use the area as
a measure of similarity between triangles. Consequently, our
simplification process incorporates a measure of distortion
between the area of the surface triangles and the area of their
projections onto the tangent plane, and the new triangles in
I i+1 are determined by the areas of the new involved surface
triangles in S i+1 .
Therefore, the fundamentals of our method, which will
be described in more detail in the following sections, are as
follows:
• Using an index texture that avoids blurring (Section 3).
• A simplification process guided by a local area distortion
measure (Section 4).
• An edge management that (Section 5).
– decides if a candidate edge can be collapsed by taking
into account its adjacent surface triangles and their
corresponding texture triangles and
– determines the new surface triangles and the new texture triangles.
• GPU-friendly bijective mappings that fill the new texture
triangles (Section 6).

3. Index Texture
At the beginning of the process, an index texture, I, encoded
with two float channels to get enough precision, is created
with the same size as T, and each one of its texels stores
its respective coordinates. Texture I can be created with the
same parameterization as the original model or with another
one. When using a parameterization method that minimizes
the distortion between surface triangles and texture triangles,
such as [LPRM02, SCOGL02, SWG∗ 03] or [ZSGS04], more
accurate results are obtained. The whole process is applied to
I, producing the successive modifications, I i . In this way, the
original texture, T, is not under-sampled and, consequently,
blurring artefacts produced by the iterative resampling do not
appear during the simplification process. Once the simplified
level is obtained, we generate the texture of the output model
by transferring the contents of the original texture via the I
texture coordinates.

4. Weighted Quadric Error Metrics
The QSlim [GH97] algorithm is an incremental method that
simplifies a mesh by iteratively collapsing edges ordered by
increasing errors provided from the QEM.

c 2010 The Authors
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

1845

N. Coll & T. Paradinas / Accurate Simplification of Multi-Chart Textured Models

weighted the QEM of each vertex by its saliency. They define the mesh saliency using a centre-surround operator on
Gaussian-weighted mean curvatures to capture what most
would classify as visually interesting regions on a mesh. The
main drawback of this method is the empirical and heuristic
nature of the saliency measure, which needs user parameters.

Figure 1: Curved regions (horns and ears) not preserved
by the QSlim approach. In contrast, they are well preserved
by our approach. Both simplified versions have the same
number of faces.

Let F be the set of faces incident at vertex v. Each face
f ∈ F is contained in a plane πf defined by n · u + d = 0,
where n is its unit normal. The squared distance of any point
u to this plane is (n · u + d)2 = uT (n · nT )u + 2(dn)T u + d 2 .
The fundamental quadric Qf of πf is defined by Qf =
(A, b, c) = (n · nT , dn, d 2 ), and the squared distance can be
computed as Qf (u) = uT Au + 2bT u + c. The quadric of the
vertex, v, is defined as the weighted sum of these fundamental quadrics, Q = f ∈F Qf wf , where wf is the area of
the triangle, f . Given a quadric Q, point u = −A−1 b minimizes the quadratic error Q(u). After computing quadrics for
all vertices, the contraction cost or the error of every edge,
e = (vi , vj ), is computed by (Qi + Qj )(uij ), where point uij
minimizes the quadratic error (Qi + Qj )(u), where Qi and
Qj are the quadrics of vertices vi and vj .
The algorithm has many advantages, which are justified
theoretically in [HG99]. The most important quadric properties are the preservation of the Gaussian curvature of the
model and the good aspect ratio of the simplified model
triangles. The authors prove that, in the limit, the quadric error is minimized by triangulations with optimal aspect ratio.
Notwithstanding all these advantages, important features of
the objects may not be well preserved due to their low geometric error with respect to the whole model. To illustrate
this, we show an example in Figure 1. In the image, we can
see that the ears and the horns of the simplified cow are not
well preserved. Moreover, this behaviour produces a poor
visual appearance of a simplified textured model due to high
texture distortions near these features.
Kho and Garland [KG03] introduced a user-guided simplification method by weighting the QEM of each vertex.
The order of the edge contractions is manipulated by multiplying the quadric of each vertex by some scalar factor
at the initialization step. By selecting different weights the
user can control the relative importance of different surface
regions to preserve the desired features. Lee et al. [LVJ05]

Other metrics to guide the simplification process have
been proposed. Among them, Park et al. [PSC06] proposed
an area-based metric. The contraction cost of every edge is
computed by the absolute difference between the areas of the
mesh before and after the contraction. In contrast, we want to
minimize the distortion between the area of surface triangles
and the area of their projections onto the tangent plane. For
this, we propose to preserve the curved features by weighting the quadrics by a local area distortion measure. In the
following sections, we will define this measure and how it is
used in our simplification process.

4.1. Local area distortion measure
First, we need to recall some theoretical aspects of the QEM
([HG99]) that are used to define and justify the proposed local
area distortion measure. Let n be the surface normal at vertex
v, let k1 , k2 be its principal curvatures and e1 , e2 their corresponding principal directions. In the orthogonal coordinate
frame with origin at v and axes e1 , e2 , n, the second-order
local approximation of the surface is a patch of the form
S(x, y) = x, y,

k1 x 2 + k2 y 2
2

,

(x, y) ∈ [−ε1 , ε1 ] × [−ε2 , ε2 ].
By considering only the lower terms of the Taylor series
approximation, we have
• A is a diagonal matrix with entries
4 3 2
4
ε ε2 k , a22 = ε1 ε23 k22 ,
3 1 1
3
a11 + a22
.
a33 = 4ε1 ε2 −
2

a11 =

• The area of the surface patch is
a11 + a22 + a33 = 4ε1 ε2 1 +

ε12 k12 + ε22 k22
6

.

Thus, the distortion factor between the area 4ε1 ε2 of the
domain and the area of the surface patch is
ε2 k 2 + ε22 k22
a11 + a22 + a33
.
=1+ 1 1
4ε1 ε2
6
ε2 k 2 +ε2 k 2

Observe that the area distortion depends on the term 1 1 6 2 2 ,
which we call the local area distortion measure and can be
computed by

c 2010 The Authors
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

1846

N. Coll & T. Paradinas / Accurate Simplification of Multi-Chart Textured Models

a11 + a22
trace(A) − a33
=
.
a11 + a22 + 2a33
trace(A) + a33
Due to the invariance of the eigenvalues of a matrix under bijective linear transformations, the local area distortion
measure can be computed in the canonical coordinate frame
by
trace(A) − λ
,
trace(A) + λ
where λ is the A eigenvalue corresponding to the eigenvector
closest to the surface normal at v.

4.2. Simplification process
We guide the order of the edge collapses using the weight
derived from the local area distortion measure to guarantee
a balance between the minimization of the geometrical error
and the minimization of the texture deviation. This weight
can be computed for the initial quadrics and for the newly
created quadrics. Intuitively, recomputing the weights during
the process seems a better solution. Experimental results
have confirmed this and we have modified the simplification
process in this way. At the initial step each vertex, vi , has
assigned to it the quadric Qi = (Ai , bi , ci ). Then, we have
to compute the contracting cost of each edge e = (vi , vj )
to create a keyed heap. We use the quadric wi Qi + wj Qj ,
where the weights wi are computed by
wi =

trace(Ai ) − λi
.
trace(Ai ) + λi

Consequently, the contraction cost of every edge e = (vi , vj )
is computed by
(wi Qi + wj Qj )(uij ) ,

Figure 2: Simplification of the Armadillo model with QSlim
and our approach. Comparison of the whole model and a
close-up detail of its hand.

preserves all the fingers even when the approximation has
only 0.125% faces of the original one.

5. Edge Management
The edges have to be collapsed while both the surface and
the parameterization topology are preserved. Thus, necessary
consistency checks must be carried out ([DEGN99]).
In the following a triangle on S i is denoted by t, its corresponding triangle in I i by t, a triangle on S i+1 by t and
its corresponding triangle in I i+1 by t . The same notation is
applied for edges and vertices.

where point uij minimizes the quadratic error (wi Qi +
wj Qj )(u). Moreover, the quadric assigned to the new vertex
uij has to be

Let e be a candidate edge to be collapsed and v be its
point of collapse with tangent plane π . Let {t0 , . . . , tk } and
{t0 , . . . , tk−2 } be the triangles involved in the collapse on S i
and on S i+1 , respectively.

wi Qi + wj Qj
wi + wj

Edge e is not allowed to be collapsed if at least one of the
following constraints holds:

in order not to overestimate its weight since it will be recomputed.
This is a simple and efficient solution, which allows us
to preserve the curved features of the models. Consequently,
although the global error increases slightly, the texture will
be better mapped to the simplified model. Figure 1 shows
an example of the results obtained by our approach using
the cow model. There are evident differences between our
results and those obtained by the QSlim approach. With our
approach, the horns and the ears are preserved without losing
the correct shape. Figure 2 shows a whole view and a close-up
of the Armadillo model simplified by the QSlim approach and
ours. It can be seen that, in contrast to QSlim, our approach

• e has only one endpoint on a chart boundary;
• e is a non-chart boundary edge with both endpoints on a
chart boundary;
• e has an endpoint lying on more than two charts;
• the orthogonal projection onto π of triangles {t0 , . . . , tk }
or triangles {t0 , . . . , tk−2 } overlap.
These constraints enforce chart compliance and ensure a
bijection between S i and S i+1 .
When an edge e does not fulfil any of the previous constraints, we need to determine the new triangles {t 0 , . . . , t k−2 }

c 2010 The Authors
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

N. Coll & T. Paradinas / Accurate Simplification of Multi-Chart Textured Models

1847

Figure 3: New texture triangles of a chart boundary edge.
in I i+1 . There are two possible cases depending on whether
e lies on a chart boundary or not.
• Chart interior edge. Let U be the union of texture triangles {t 0 , . . . , t k }. For each boundary edge bj of U , let
a j (x) be the relative area of the triangle determined by
bj and a point x ∈ U with respect to the area of U , and
let aj be the relative area of the triangle tj with respect to
the total area of the triangles {t0 , . . . , tk−2 }. Because we
want to minimize the area distortion measure between
triangles in S i+1 and triangles in I i+1 , we take as the
corresponding point of v in I i+1 the point v ∈ U that
minimizes the quadratic function

j

a j (x)
−1
aj

2

.

Taking into account the point v and the boundary edges
bj , we obtain the triangles {t 0 , . . . , t k−2 }. If these new
triangles overlap, the edge e is also not allowed to be
collapsed.
• Chart boundary edge (Figure 3). There are two texture
edges e1 , e2 corresponding to surface edge e. Each one
is a boundary edge of its own chart. For each subset of
triangles of the same chart, we apply the same process
as in the first case, restricting the optimal point to lie on
the boundary edge, e1 or e2 . Observe that, when a chart
is not convex, the new triangles intersect the exterior
of concave parts of the chart. For this reason, we need
the texture to be empty near concave parts of the chart
boundaries. Therefore, in the worst case, the convex hull
of each chart should be empty.
5.1. Edge flip
To improve the fitting of simplified models to original models and to create well-shaped triangles in flat regions, we
use an edge flip operator. It takes two adjacent triangles as
parameters and swaps the shared edge with its opposite diagonal. This operator has to be guided by an accurate measure
to decide which of the two edges, the actual or the opposite
one, must be kept in order to better approximate the mesh to
the initial one.

Figure 4: Mappings for filling the new texture triangles.

For each edge collapse, non-chart boundary edges of triangles {t0 , . . . , tk−2 } are flip-tested. The criterion used to decide
the flip operation is the one proposed by Jiao et al. [JCNH06],
which uses the restriction of the QEM onto the tangent plane
of each vertex as a local metric, and applies the modified Delaunay criterion proposed by Bossen and Heckbert [BH96].
The non-overlapping checks are carried out on each tangent
plane of the four vertices for the surface triangles and on the
texture map for the texture triangles.

6. Bijective Mappings
Once an edge collapse has been carried out, the texels in triangles {t 0 , . . . , t k−2 } must be filled with the content of texels
in triangles {t 0 , . . . , t k }. As we briefly described in Section
2, our method takes advantage of the orthogonal projections
of the involved surface triangles in S i and S i+1 onto the tangent plane π of the point of collapse v. Thus, our basic idea
consists of transferring the content of a texel p to a texel
p having the same projection onto π of their corresponding
surface points. Figure 4 illustrates the situation and we will
now describe how to implement it.
On plane π , we consider an orthogonal frame centred at
v. For any triangle t or t on the surface, we have two linear
transformations, Mt and Pt . The transformation of Mt maps
t to its corresponding triangle t in the texture, while the
transformation of Pt maps t to the orthogonal projection of
t onto π . Let P Mt be the linear transformation Pt ◦ Mt−1 .
For each texel p of a triangle t , we have the point p on t
satisfying Mt (p ) = p and the point p contained in a triangle
t of S i satisfying Pt (p) = p ∗ = Pt (p ), where p ∗ ∈ π . Let

c 2010 The Authors
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

1848

N. Coll & T. Paradinas / Accurate Simplification of Multi-Chart Textured Models

Figure 5: Blurring artefacts disappear when using an index
texture during the simplification process.
p be the point in t determined by p = Mt (p). Thus we have
P Mt (p) = (Pt ◦ Mt−1 )(p) = (Pt ◦ Mt−1 )(p ) = P Mt (p ) .
Our approach consists of filling texel p with the content of
texel p without computing it explicitly.
Due to the bijective nature of the defined linear transformations for a fixed triangle t we have
• If t j = t l ,
(P Mt−1 ◦ P Mtj )(t j ) ∩ (P Mt−1 ◦ P Mtl )(t l ) = ∅.
•

j

t ∩ (P Mt−1 ◦ P Mtj )(t j ) = t .

Consequently, by using standard hardware capabilities, we
can fill the texels in a triangle t by mapping onto t the triangles (P Mt−1 ◦ P Mtj )(t j ) without explicitly computing their
common intersection. However, because we are dealing with
a multi-chart atlas, the transformation that, for each I i texel,
maps the T texture coordinates stored in it, is not continuous.
Thus, the standard hardware bilinear interpolation of T texture coordinates might cause invalid T texture coordinates. To
solve this problem, we map the triangles (P Mt−1 ◦ P Mtj )(t j )
with a fragment shader. For each fragment within t with I i
coordinates (u, v), we compute the four closest texels to
(u, v), with a being the closest. Then, we compute the index
of the fragment by a bilinear interpolation of the I i indices
stored at these four texels, taking into account only those
the indices that lie in the chart of the index stored at a.
Figure 5 shows the good performance in reducing blurring
artefacts resulting from using an index texture.
7. Results
Our approach allows us to simplify large models while preserving their most important details without losing fidelity.
We obtain single approximations as close as possible to the
original models, which may be useful in various fields of
application where the frame rate is more important than insignificant details. Several tests have been done on different
models to study the accuracy of our method.

Figure 6: Simplification of a textured Cow model. Comparison between our approach and three different texture
preserving methods. The empty space of the atlas has been
filled in with red.

Figure 6 compares our textured cow approximation result
with the results obtained using the open-source tool MeshLab [CCR08, CCC∗ 08], the commercial package Polygon
Cruncher [Moo] and Hoppe’s approach [Hop99]. The first
two tools also allow us to preserve the boundary edges by
simplifying chart interiors only. Activating this option generates a poor quality, low-resolution model full of seams is
generated that cannot achieve the desired simplification level.
To test how well our approach behaves, we have filled in the
empty space of the atlas with red. Observe how our approach
is the only one able to generate simplified models without
texture distortions or artefacts near the chart boundaries by
using only one additional texture during the simplification
process.
Another comparison is presented in Figure 7. As you can
see, the bunny model generated with [SSGH01] presents

c 2010 The Authors
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

N. Coll & T. Paradinas / Accurate Simplification of Multi-Chart Textured Models

1849

Figure 7: Simplification of a textured Bunny model. Comparison between [SSGH01] and our approach.

Figure 9: Two different parameterizations for the Vase
model.

a high-quality mesh and correctly preserved texture without
distortions.
Figure 8 shows the Buffle model parameterized with a
high number of small sized charts. A close-up view of the
model shows that neither texture distortions nor artefacts
appear in the simplified version, despite the presence of chart
boundaries.

Figure 8: Buffle model simplification. The atlas, the mesh
with chart boundaries depicted in red, the textured model
and a close-up view are shown for original and simplified
models.

perceptible texture distortions because of the reparameterization, with convex and straight chart boundaries, that is
carried out to be used on a progressive mesh. In contrast,
with our approach we obtain an accurate approximation with

Parameterizations with a lot of charts reduce the level
of simplification because the charts must all be preserved.
Figure 9 shows a scanned Vase model parameterized with
LSCM [LPRM02] and Iso-charts [ZSGS04]. Notice that the
first one has a huge number of charts, whereas the second
one only has 24 charts. In Figure 10, we can see the results
of our simplification of these two parameterizations of the
Vase model at the same level (90% simplification). Observe
that parameterizations with less charts allow us to obtain
better geometric quality and also to substantially increase the
simplification level (98% simplification). The flexibility that
results from using parameterizations that admit non-convex
charts is an important advantage with respect to [SSGH01].

c 2010 The Authors
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

1850

N. Coll & T. Paradinas / Accurate Simplification of Multi-Chart Textured Models

Figure 10: Vase model simplification results according to the parameterizations in Figure 9.
important geometric features are lost at low resolutions with
any simplification method. To capture all these details, their
normal maps were generated before applying our method.
Faithful and realistic approximations are obtained by applying bijective mappings on colour and normal maps even at a
simplification level of 95% for the Imperia and of 99% for
the Lion.

8. Conclusions and Future Work

Figure 11: Close-up view of the Vase model texture before
and after applying our bijective mapping approach.

Figure 11 shows a close-up view of the Vase model parameterized with Iso-charts. Chart boundaries have been properly
simplified to give accurate approximations without seams
between charts. Observe that, even though charts have interchanged part of their contents, their global shapes are preserved due to the low stretching of the parameterization used.
For this reason, if we use a good parameterization method to
generate the index texture, empty texture near concave parts
of chart boundaries is not a strong requirement.
Figures 12 and 13 are representative examples of large
meshes obtained from real objects. For each of these, we
would like to have a simple version that shares the same
special characteristics. Not all the details of these models are represented in their texture maps, since small but

We have developed a method for the automatic simplification of a highly detailed polygonal surface model into a single faithful approximation containing fewer polygons. The
method consists, on the one hand, of weighting the QEM
by a local area distortion measure and, on the other, of bijective mappings that properly modify an index texture for
each edge collapse to avoid distortions on the appearance of
the simplified mesh. In this way the chart boundary edges
are not penalized. The main benefit of this approach is that
realistic and accurate approximations of complex textured
models can be generated.
Extending our approach to obtain a progressive mesh
[Hop96, SSGH01] of the model with all the intermediate
meshes sharing a common texture parameterization could be
significant. Because the bijective mappings can be inverted,
our technique could be applied on the fly while rendering
a change in the level of detail. However, we believe that
this strategy can only be applied for simple models. Consequently, dealing with progressive meshes will be an important
part of our future work.

Acknowledgements
The authors thank the anonymous reviewers for proofreading various versions of this paper and for providing us with

c 2010 The Authors
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

N. Coll & T. Paradinas / Accurate Simplification of Multi-Chart Textured Models

1851

Figure 12: Imperia model simplified by our approach with texture and normal maps. Observe that, in both global and close-up
views, the visual appearance is preserved from the original one to the simplified one. Chart boundaries (in red) have been
simplified without producing artefacts.

Figure 13: Lion model simplification results with and without normal mapping.
constructive comments and criticism. This project was
funded by grant TIN2007-67982-C02-02 from the Spanish
Ministerio de Educaci´on y Ciencia.

International Meshing Roundtable (Oct. 1996), pp. 63–
74.

References

[CC06] CHEN C.-C., CHUANG J.-H.: Texture adaptation for
progressive meshes. Computer Graphics Forum 25, 3
(September 2006), 343–350.

[BH96] BOSSEN F. J., HECKBERT P. S.: A pliant method for
anisotropic mesh generation. In Proceedings of the 5th

[CCC∗ 08] CIGNONI P., CALLIERI M., CORSINI M., DELLEPIANE
M., GANOVELLI F., RANZUGLIA G.: Meshlab: An

c 2010 The Authors
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

1852

N. Coll & T. Paradinas / Accurate Simplification of Multi-Chart Textured Models

open-source mesh processing tool. In Proceedings of the
Sixth Eurographics Italian Chapter Conference (2008),
pp. 129–136.
[CCR08] CIGNONI P., CORSINI M., RANZUGLIA G.: Meshlab:
An open-source 3D mesh processing system. ERCIM
News, 73 (April 2008), 45–46.
[COM98] COHEN J., OLANO M., MANOCHA D.: Appearancepreserving simplification. In SIGGRAPH ’98: Proceedings of the 25th annual conference on Computer graphics
and interactive techniques (New York, NY, USA, 1998),
ACM, pp. 115–122.
[CVM∗ 96] COHEN J., VARSHNEY A., MANOCHA D., TURK G.,
WEBER H., AGARWAL P., BROOKS F., WRIGHT W.: Simplification envelopes. Computer Graphics 30, Annual Conference Series (1996), 119–128.
[DEGN99] DEY T. K., EDELSBRUNNER H., GUHA S., NEKHAYEV
D. V.: Topology preserving edge contraction. Publications
de l’Institut Math´ematique 66 (1999), 3–45.
[EM98] ERIKSON C., MANOCHA D.: GAPS: General and Automatic Polygonal Simplification. Technical Report, Chapel
Hill, NC, USA, 1998.
[GH97] GARLAND M., HECKBERT P. S.: Surface simplification using quadric error metrics. Computer Graphics
(Proc. SIGGRAPH) 31, Annual Conference Series (1997),
209–216.
[GH98] GARLAND M., HECKBERT P. S.: Simplifying surfaces
with color and texture using quadric error metrics. In IEEE
Visualization ’98 (1998), Ebert D., Hagen H., Rushmeier
H., (Eds.), pp. 263–270.
[GP08] GARC´IA I., PATOW G.: Igt: Inverse geometric textures.
Transactions on Graphics 27, 5 (2008), 1–9.
[HDD∗ 93] HOPPE H., DEROSE T., DUCHAMP T., MCDONALD J.,
STUETZLE W.: Mesh optimization. Computer Graphics 27,
Annual Conference Series (1993), 19–26.
[HG99] HECKBERT P. S., GARLAND M.: Optimal triangulation and quadric-based surface simplification. Journal of
Computational Geometry: Theory and Applications 14,
1–3 (1999), 49–65.
[HLS07] HORMANN K., L´EVY B., SHEFFER A.: Mesh parameterization: Theory and practice. In ACM SIGGRAPH
Course Notes (2007).
[Hop96] HOPPE H.: Progressive meshes. In SIGGRAPH ‘96:
Proceedings of the 23rd annual conference on Computer graphics and interactive techniques (New York, NY,
USA, 1996), ACM, pp. 99–108.

[Hop99] HOPPE H.: New quadric metric for simplifying
meshes with appearance attributes. In VISUALIZATION
’99: Proceedings of the 10th IEEE Visualization 1999
Conference (VIS ’99) (Washington, DC, USA, 1999),
IEEE Computer Society.
[JCNH06] JIAO X., COLOMBI A., NI X., HART J. C.:
Anisotropic mesh adaptation for evolving triangulated
surfaces. In Proceedings of the 15th International Meshing Roundtable (Sept. 2006), Springer-Verlag, pp. 173–
190.
[KG03] KHO Y., GARLAND M.: User-guided simplification.
In I3D ’03: Proceedings of the 2003 Symposium on Interactive 3D Graphics (New York, NY, USA, 2003), ACM
Press, pp. 123–126.
[LJFW08] LIN J., JIN X., FAN Z., WANG C. C. L.: Automatic
polycube-maps. In GMP (2008), pp. 3–16.
[LPRM02] L´EVY B., PETITJEAN S., RAY N., MAILLOT J.: Least
squares conformal maps for automatic texture atlas generation. ACM Transactions on Graphics 21, 3 (2002),
362–371.
[LT98] LINDSTROM P., TURK G.: Fast and memory efficient
polygonal simplification. In IEEE Visualization (1998),
pp. 279–286.
[LT00] LINDSTROM P., TURK G.: Image-driven simplification.
ACM Transactions on Graphics 19, 3 (2000), 204–241.
[LVJ05] LEE C. H., VARSHNEY A., JACOBS D.: Mesh saliency.
ACM Transactions on Graphics (Proc. SIGGRAPH 2005)
24, 3 (2005), 659–666.
[LWC∗ 02] LUEBKE D., WATSON B., COHEN J. D., REDDY M.,
VARSHNEY A.: Level of Detail for 3D Graphics. Elsevier
Science Inc., New York, NY, USA, 2002.
[Moo] Mootools: Polygon cruncher.
[PSC06] PARK I., SHIRANI S., CAPSON D.: Mesh simplification using an area-based distortion measure. Mathematical
Modelling and Algorithms 5, 3 (2006), 309–329.
[SCOGL02] SORKINE O., COHEN-OR D., GOLDENTHAL R.,
LISCHINSKI D.: Bounded-distortion piecewise mesh parameterization. In VIS ’02: Proceedings of the Conference on
Visualization ’02 (Washington, DC, USA, 2002), IEEE
Computer Society, pp. 355–362.
[SSGH01] SANDER P. V., SNYDER J., GORTLER S. J., HOPPE
H.: Texture mapping progressive meshes. In SIGGRAPH
‘01: Proceedings of the 28th annual conference on Computer graphics and interactive techniques (New York, NY,
USA, 2001), ACM, pp. 409–416.

c 2010 The Authors
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

N. Coll & T. Paradinas / Accurate Simplification of Multi-Chart Textured Models
∗

[SWG 03] SANDER P. V., WOOD Z. J., GORTLER S. J., SNYDER
J., HOPPE H.: Multi-chart geometry images. In SGP ’03:
Proceedings of the 2003 Eurographics/ACM SIGGRAPH
Symposium on Geometry Processing (Aire-la-Ville, Switzerland, 2003), Eurographics Association, pp. 146–155.
[TCS03] TARINI M., CIGNONI P., SCOPIGNO R.: Visibility based
methods and assessment for detail-recovery. In VIS ’03:
Proceedings of the 14th IEEE Visualization 2003 (VIS’03)
(Washington, DC, USA, 2003), IEEE Computer Society,
p. 60.

1853

[THCM04] TARINI M., HORMANN K., CIGNONI P., MONTANI
C.: Polycube-maps. In SIGGRAPH ’04: ACM SIGGRAPH 2004 Papers (New York, NY, USA, 2004), ACM,
pp. 853–860.
[ZSGS04] ZHOU K., SYNDER J., GUO B., SHUM H.-Y.: Isocharts: Stretch-driven mesh parameterization using spectral analysis. In SGP ’04: Proceedings of the 2004 Eurographics/ACM SIGGRAPH Symposium on Geometry
Processing (New York, NY, USA, 2004), ACM, pp. 45–
54.

c 2010 The Authors
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

