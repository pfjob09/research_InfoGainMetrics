DOI: 10.1111/j.1467-8659.2009.01640.x
EUROGRAPHICS 2010 / T. Akenine-Möller and M. Zwicker
(Guest Editors)

Volume 29 (2010), Number 2

Improved Variational Guiding of Smoke Animations
Michael B. Nielsen†1 and Brian B. Christensen‡1
1 Aarhus

University, Denmark

Abstract
Smoke animations are hard to art-direct because simple changes in parameters such as simulation resolution
often lead to unpredictable changes in the final result. Previous work has addressed this problem with a guiding
approach which couples low-resolution simulations – that exhibit the desired flow and behaviour – to the final,
high-resolution simulation. This is done in such a way that the desired low frequency features are to some extent
preserved in the high-resolution simulation. However, the steady (i.e. constant) guiding used often leads to a lack of
sufficiently high detail, and employing time-dependent guiding is expensive because the matrix of the resulting set
of equations needs to be recomputed at every iteration. We propose an improved mathematical model for Eulerianbased simulations which is better suited for dynamic, time-dependent guiding of smoke animations through a novel
variational coupling of the low- and high-resolution simulations. Our model results in a matrix that does not
require re-computation when the guiding changes over time, and hence we can employ time-dependent guiding
more efficiently both in terms of storage and computational requirements. We demonstrate that time-dependent
guiding allows for more high frequency detail to develop without losing correspondence to the low resolution
simulation. Furthermore, we explore various artistic effects made possible by time-dependent guiding.
Categories and Subject Descriptors (according to ACM CCS): Computer Graphics [I.3.7]: Animation—

1. Introduction

crease the resolution to obtain the level of detail required
for the shot. However, this approach is not always successful as a change in resolution may not only incur an addition of high frequency features but may completely change
the low frequency properties of the flow that the artist settled for in low resolution. Numerical viscosity originating
from the discretization is one of the primary reasons for
this. This has led several authors to propose algorithms for
obtaining better correspondence between low- and highresolution simulations. This has been done by allowing lowresolution simulations to guide higher resolution simulations
[BMWG07, TKPR06, NCZ∗ 09] and by ensuring that properties such as kinetic energy are preserved in the discretization [MCP∗ 09].

Creating believable fluid effects for computer graphics typically requires the use of advanced and time-consuming
computational techniques. For many years the exploration
and development of such techniques have been the subject of the computational fluid dynamics (CFD) community. However, whereas numerical and physical accuracy are
paramount in CFD, visual plausibility [FSJ01], low simulation cost [Sta99] and artistic control [FM97] are important
for computer graphics.
Today, high-resolution fluid simulations that contain sufficient detail for visual effects have turnaround times of
several hours or even days. Such simulation times are infeasible for effects-artists during the design stage where
near-interactive feedback times are required. For this reason artists typically prototype simulations at low resolution. Once a certain design has been settled for, they in-

In this paper we explore time-dependent – as opposed to
steady – guiding of smoke animations. Specifically we show
that time-dependent guiding can be used for creating dynamic artistic effects and allows for more high frequency
detail to develop in high resolution compared to previous
work [NCZ∗ 09]. We take an approach similar to that of
Nielsen et al. [NCZ∗ 09], where guiding is formulated as a

† bang@cs.au.dk
‡ bbc@cs.au.dk
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

705

706

Michael B. Nielsen & Brian B. Christensen / Improved Variational Guiding of Smoke Animations

constrained minimization problem. However, Nielsen et al.
studied only steady guiding effects and it turns out that their
mathematical formulation requires the matrix resulting from
their Euler-Lagrange equations to be re-computed, whenever
the guiding strength varies in time. In particular, the spatially
varying scalar field used to control the guiding strength is
by construction included in their matrix. Since this scalar
field may change in large fractions of the domain in the case
of time-dependent guiding, their matrix re-computation becomes costly when combined with the large stencils required
by guiding. Typically their matrix computation time in the
presence of spatially varying guiding weights is about an order of magnitude longer than the simulation time per frame.
In addition their matrix storage requirements depend on the
variation in the scalar field of guiding weights.
We propose a new mathematical model for guiding smoke
animations at high resolution by means of animations at
lower resolution. Our mathematical model separates low frequencies from high frequencies in the flow which leads to a
set of Euler-Lagrange equations in which the resulting matrix is independent of the scalar field used to control the guiding strength. This means that a costly matrix re-computation
does not have to be performed whenever the guiding changes
in time. In addition our matrix often takes about an order
of magnitude less time to compute and requires an order of
magnitude less storage than [NCZ∗ 09].
Our framework is based on the inviscid Euler equations
+ (v · ∇) v = −∇p + f and ∇ · v = 0, where v is the velocity of the fluid, p denotes pressure, and f represents external forces. We solve these equations using the operator splitting approximation first introduced to computer graphics by
Stam [Sta99]. This method solves for self-advection, body
forces, and incompressibility separately. Our model only involves a replacement of the usual Poisson equation and velocity update in the pressure projection step which solves for
incompressibility. This is illustrated in figure 1 which shows
one iteration of our guiding framework: The low-resolution
guiding velocity field vg is obtained using a traditional simulation pipeline (in purple) or through art direction. The guiding weights φ are then computed as explained in section 5.
Subsequently, the guided high-resolution velocity field is advected and body forces are added to obtain an intermediate velocity field v˜ . Finally, our modified pressure projection
step uses v˜ , φ, and an upsampled version of vg to obtain the
new high-resolution guided velocity field v. To sum up, the
contributions of this paper are:
∂v
∂t

• A novel mathematical model that leads to more efficient
time-dependent guiding of smoke animations.
• Exploration of time-dependent guiding for artistic effects
and for increasing the amount of high frequency features
in the high-resolution guided flows.
An inherent assumption in our work is that the bulk movement of the flow can be satisfactorily represented at low resolution. Furthermore, our method cannot be used to specif-

Time

tn+1

tn

Guiding
Simulation

vg

Standard
Solver

+
Art
Direction
Guided
Simulation

Upsampling
Selfadvection
ection

Error

Art
Direction

Density

..
.

Body
Forces

v
˜

v
Guiding

φ

Figure 1: One simulation iteration using our method. A traditional fluid simulation pipeline (in purple) is equipped with
a modified pressure projection step . Components which constitute our contributions are highlighted in green.
ically design the high frequency features, but on the other
hand provides a starting point for iterating on higher frequency features.
2. Related Work
Controlling Navier-Stokes based simulations at a higher
level than parameter tweaking is an idea that was first introduced by Foster and Metaxas [FM97]. More recently
Treuille et al. [TMPS03] proposed a key-frame control
framework for smoke simulations which uses a gradient descent based optimizer. In particular they optimize for forces
which make the smoke assume key-framed poses. Later McNamara et al. [MTPS04] made this approach faster by employing the adjoint method.
Shi et al. [SY05] also consider key-frame control but
focus on liquid simulations. They suggest a force-based
solution which allows the liquid to follow rapidly changing target shapes. Other approaches similar to Shi et al.
have considered the problem of making smoke follow target
shapes [FL04, HK04]. Finally, Kim et al. [KMT06] propose
a method for constructing path-guided smoke trails.
Guiding of liquid simulations based on the Lattice Boltzmann Method and Smoothed Particle Hydrodynamics has
been demonstrated by Thürey et al. [TKPR06]. Their
method is based on controlling the low frequencies of simulations through forces which are applied near Lagrangian
control particles. Nielsen et al. [NCZ∗ 09] show that applying the idea of blending low frequency components of a simulation with a guiding velocity field before the pressure projection step may lead to noise developing over time for Eulerian smoke simulations. To avoid such artifacts they take
the approach of formulating guiding as a constrained minimization problem. Concurrently, Mullen et al. [MCP∗ 09]
developed energy preserving integrators, which can also be
employed to achieve higher correspondence between simulations at low and high resolution.
Contrary to the above guiding approaches where the high
frequency detail arises from a physically based simulation, a
lot of work has recently focused on procedural methods that
add high frequency detail to a low-resolution input simulac 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

707

Michael B. Nielsen & Brian B. Christensen / Improved Variational Guiding of Smoke Animations

tion [SB08, KTJG08, NSCL08, PTSG09]. Common to these
methods is that they improve both the run times and storage requirements over a full fluid simulation. The goal of
Narain et al. [NSCL08] and Pfaff et al. [PTSG09] is essentially different from ours in that the synthesized flow should
resemble the high-resolution flow, as opposed to the lowresolution flow, as well as possible. Narain et al. do note
that the coupling from high frequencies to low frequencies
can be disabled in order to retain the frequencies of the
low resolution flow, but do not focus on this scenario. On
the other hand, Schechter and Bridson [SB08] and Kim et
al. [KTJG08] retain the low frequency flow and procedurally add high frequency detail as a post-process. As noted
by [SB08] stable, laminar structures can be forced turbulent,
a property shared by [KTJG08], whereas Narain et al. appear to have solved this problem. Of the above methods, only
Pfaff et al. consider turbulent structures emanating from interaction with boundaries at high resolution. However, their
method does not guarantee correspondence between the lowand high-resolution flows. Our proposed guiding method inherits the ability from the underlying physical simulation to
automatically develop instabilities, including those arising in
the vicinity of boundaries.
3. Guiding
In this paper we define guiding as follows: An input velocity
field, vg , is used to enforce a correspondence between the
low frequencies of a higher-resolution, simulated velocity
field, v, and vg itself. The input velocity field, vg , can originate from a physically based simulation or be constructed
by an artist by any other means such as illustrated in figure 5. The goal of this section is to formulate guiding as
a constrained minimization problem. The minimization will
enforce the guiding, whereas the constraint will enforce that
the resulting velocity field is divergence free. By employing
calculus of variations and the method of Lagrange multipliers, the minimization problem is transformed into a set of
partial differential equations, the Euler-Lagrange equations,
that solve for the corresponding stationary point. In this paper we will denote this set of partial differential equations
the guiding equations. Note that the Poisson equation solving for incompressibility in a standard fluid solver can in
fact also be derived from a constrained minimization problem [FP02, pp. 202-204].
Ideally, the guiding should only affect the low frequencies
of v. Therefore we separate the low and high frequencies in
our mathematical model. In addition, this separation leads
to guiding equations where the left-hand-side, i.e. the matrix, is independent of the spatially and temporally varying
guiding weights which we denote φ. φ(x,t) ∈ [0; 1] is a timedependent scalar field that enforces the strength of the guiding. If φ = 1 in a given point, guiding is enforced with maximal strength (see second image from the left in figure 3).
If on the other hand φ = 0, the guiding equations essentially
reduce to the normal Poisson equation and velocity update,
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

hence no guiding is enforced. The scalar field φ is computed
as described in section 5 prior to solving the guiding equations for pressure and velocity.
We first state our mathematical model and then elaborate
on an intuitive interpretation below. In particular we wish to
minimize

Ω (1 − φ(x)) |[F
Ω φ(x) |[F
Ω |[v − [F

∗ v] (x) − [F ∗ v˜ ] (x)|2 dx +
2

∗ v] (x) − vg (x)| dx +
2

∗ v]] (x) − [˜v − [F ∗ v˜ ]] (x)| dx

(1)
(2)
(3)

subject to the constraint
∇ · v(x) = 0

(4)

where Ω is the fluid simulation domain, v˜ is the current high
resolution velocity field in the operator splitting sequence
(i.e. the velocity field from the previous frame updated by
self-advection and forces), F is a lowpass filter, and ∗ is
the convolution operator. Contrary to the approach taken
in [NCZ∗ 09], we separate the low and high frequencies in
the minimization problem. Specifically, expressions (1) and
(2) of the minimization problem involve the low frequencies of v, expressed as the convolution [F ∗ v], whereas (3)
involves the remaining high frequencies, v − [F ∗ v], of v.
Expression (1) (expression (2)) contains the low frequencies
of the difference between the current high resolution velocity field (the guiding velocity field) and the velocity field we
are solving for. Expression (3) on the other hand contains the
high frequencies of the difference between the current high
resolution velocity field and the velocity field we are solving for. By keeping (3) independent of the guiding weights it
turns out that the resulting matrix also becomes independent
of the guiding weights. Finally, Eq. (4) is the constraint that
forces the resulting velocity field to be divergence free.
If φ = 0, (2) vanishes, and the minimization problem reduces to a minimization of the difference between v and v˜ .
Furthermore, if φ = 0 and F is a perfect lowpass filter, (1)
and (3) can be combined into Ω |v(x) − v˜ (x)|2 dx which can
be seen by transforming to Fourier space and applying Parseval’s theorem. Minimizing Ω |v(x) − v˜ (x)|2 dx subject to
the constraint Eq. (4) is in fact equivalent to solving the usual
Poisson equation and subsequent velocity update [FP02].
Hence, the guiding equations will essentially result in an unguided simulation for φ = 0.
If φ = 1, the low frequencies of the resulting velocity field
v will minimize the difference to vg alone and hence only the
guiding will be in effect, see (2). On the other hand φ ∈ (0; 1)
will minimize the difference to both vg and the low frequencies of v˜ , and thus v will be a blend of the two low-frequency
components. It is an important point of this paper that relaxing the strength of the guiding by lowering φ whenever possible is key to allowing more turbulence to develop naturally
in guided simulations.

708

Michael B. Nielsen & Brian B. Christensen / Improved Variational Guiding of Smoke Animations

To turn our proposed minimization problem into the corresponding Euler-Lagrange equations (the guiding equations) we employ calculus of variations. The full derivation
is included in appendix A. Here we merely present the result
and explain its consequences. Specifically, the constrained
minimization problem (1) – (4) leads to the following equations:
v(x) + 2
v˜ +

Ω F(y

Ω F(y

x) [(2

x) [[F ∗ v] (y)
φ) [F ∗ v˜ ] (y)

v(y)] dy + ∇p(x) =
2˜v(y) + φvg (y)] dy
(5)

∇ · v(x) = 0

(6)

where p is the pressure of the fluid. There is one equation for
each point x in the fluid simulation domain. All equations are
solved simultaneously for both the guided velocity field, v,
as well as the pressure, p. On a staggered grid, Eq. (5) leads
to one equation for each face, and Eq. (6) leads to one equation for each cell center. This amounts to (D + 1)N equations in (D + 1)N unknowns, where N is the number of grid
points. Note that a standard fluid solver also has to solve
for (D + 1)N unknowns, velocity and pressure. However, in
this case there is only a one-way coupling between the unknown pressure and velocity and hence the Poisson equation
involves only the pressure, N equations in N unknowns. The
derived equations are amenable to solution in the form stated
above. However, for solution using relaxation methods such
as Jacobi or Gauss-Seidel (including the multigrid method
which utilizes these relaxation methods) it is convenient to
replace Eq. (6) by Eq. (5) with the divergence operator applied to both sides of the equation. By exploiting the constraint, Eq. (6), ∇ · v(x) vanishes from the resulting equation
and hence the constraint remains enforced. Furthermore, this
will ensure non-zero diagonal entries as required by the relaxation methods. Eq. (5) and Eq. (6) share the properties of
the model of [NCZ∗ 09] that if vg = F ∗ v and v is divergence
free, the resulting velocity field will be v itself. Also, vg does
not have to be divergence free. In addition, our new model
has the following properties not shared by [NCZ∗ 09]:
• The guiding weights, φ, appear only on the right-handside of the equations. This means that whenever φ depends on time, the matrix operators do not have to be recomputed.
• Spatially varying φ will not increase the storage requirements of the matrix operators since φ appears only on the
right-hand-side, hereby also facilitating faster computation of the matrix operators.

Figure 2: Close-ups of the smoke column simulation comparing from left to right the guiding method of Nielsen et
al. [NCZ∗ 09], our method guiding with eroded densities and
finally our method guiding with eroded densities combined
with the error estimate.

scheme of the matrix operators similar to the one described
in [NCZ∗ 09], except that we use a relaxation parameter
of 0.9 in our SOR implementation. Boundaries are handled by applying the penalization method of Angot et al.
[ABF99,KCR08]. Finally, upsampling and lowpass filter estimation is handled as in [NCZ∗ 09].
5. Time-Dependent Guiding Effects and Results
Guiding is applied to enforce correspondence between the
low- and high-resolution velocity fields. However, although
our guiding model is separating the low and high frequencies, it is evident in practice that imposing too much guiding will constrain the high frequencies as well. On the other
hand, relaxing the guiding weights uniformly will cause the
guided simulation to behave increasingly as an unguided
simulation, thereby developing more turbulent structures.
However, this may come at the cost of losing correspondence
to the low-resolution velocity field, see figure 3.
In the following we explore a number of different approaches to guiding the high-resolution simulation with both
spatially and temporally dependent guiding weights, φ(x,t),
e.g. to allow more turbulent structures to emerge. The guiding weights are represented as a time-dependent scalar field
fed into the linear equation solver in each iteration. It is important to note that the high frequency features that develop
in the guided simulations are instabilities arising in the underlying high-resolution, physically based simulation. Vorticity confinement or procedural turbulence can of course be
added on top of the guided simulations to synthesize an even
more turbulent behaviour.

4. Implementation
The guiding equations are discretized on a staggered grid
with velocities sampled on cell faces and pressure sampled in cell centers [FSJ01]. We use BFECC [DL07] and
monotonic, cubic interpolation [FSJ01] for advection. To
solve the equations we employ a parallel multigrid implementation [BHM00] combined with a simple compression

5.1. Time-Dependent Guiding with Smoke Density
Using the smoke density as a guiding weight is based on
the observation that in many cases we want thick volumes
of smoke to adhere to the bulk motion prescribed by the
low-resolution guiding velocity field. On the other hand
we also want turbulence to develop in areas where the
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

Michael B. Nielsen & Brian B. Christensen / Improved Variational Guiding of Smoke Animations

709

Figure 3: Identical frames from several simulations of a smoke column at resolution 64 × 256 × 64 rising due to a buoyant
force. The leftmost image depicts a low resolution simulation and the rightmost image depicts a high resolution simulation.
The remaining images from left to right: (1) Our method with a uniform weight of φ = 1. (2) Our method with a uniform
weight of φ = 0.02. The amount of turbulence along the column is similar to the non-uniform guiding in the image to the
right. However, using uniform weights, the column rises faster than the low-resolution simulation. (3) Our method with eroded
densities combined with the error estimate. φlow = 0 and φhigh = 0.35. (4) Same approach with φlow = 0 and φhigh = 0.55. (5)
Same approach with φlow = 0.15 and φhigh = 0.35. Notice that the relatively high φlow results in a lack of high frequency detail.

Figure 4: Left: A rising smoke column interacting with a translating Stanford bunny at resolution 128 × 256 × 64. Upper row:
Early frame. From left to right: The low resolution guiding simulation, the guiding approach of [NCZ∗ 09], our guiding with
eroded densities, our guiding with eroded densities combined with the error estimate and finally the high resolution simulation.
Lower row: Later frame. Right: Two guided simulations of a Stanford bunny rotating close to a smoke jet subject to a buoyant
force at resolution 1283 . Top: The guiding method of [NCZ∗ 09]. Bottom: Our method guiding with eroded densities. The
addition of turbulent features is more subtle and less noticeable in this case, but is visible for example in the upper left corner.

smoke is wispy. Let the smoke density be denoted by d(x,t)
and assume that d(x,t) ∈ [0; 1]. We construct the guiding
weights as φ(x,t + ∆t) = φhigh d(x,t) + φlow (1 − d(x,t)),
where φlow and φhigh are lower and upper bounds on the
guiding weights, respectively. Unless stated otherwise we
use φlow = 0 and φhigh = 0.35 as found by experimentation,
see figure 3. In our experience, guiding with density yields
better results when combined with the extensions described
below.
5.1.1. Combining with Erosion of Densities
We have explored performing an erosion of the smoke density used to construct the guiding weights. The idea behind
this is that the guiding will be relaxed in a wider band in rec 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

gions between smoke and clear air, thereby allowing more
turbulent structures to emanate in these areas. Erosion is
characterized by a single parameter which is the width of
a stencil centered at each grid point. The result of the erosion operation at a given grid point is the minimum density
value found under the support of the stencil when centered
at that particular grid point. We have found by experimentation that using a stencil width of three generates the best
results. Using wider stencils tends to make the simulations
behave more like unguided simulations, e.g. making smoke
rise faster. Figure 2 shows an example of a simulation using the eroded density as guiding weight and compares it
to uniform guiding weights throughout the domain using
the model of Nielsen et al. [NCZ∗ 09]. In all comparisons

710

Michael B. Nielsen & Brian B. Christensen / Improved Variational Guiding of Smoke Animations

to [NCZ∗ 09], we set their scaling parameter to α = 0.65 as
suggested in their paper. As is evident from the figure, more
turbulence appears when the guiding weights are relaxed using our method. Additional examples are shown in figure 4.
Time-dependent guiding using [NCZ∗ 09] in the example
of the rising smoke column in figure 2 requires roughly 1600
seconds per frame to compute the matrix which takes up
roughly 1.6GB of storage. Using our guiding model the matrix computation takes roughly 120 seconds, requires 74MB,
and only has to be performed once for an entire simulation.
The guided smoke column simulation in figure 2 runs for
36 – 37 seconds per frame using our method, depending on
which approach is utilized to compute the guiding weights.
In contrast an unguided simulation at the same resolution
takes roughly 17 seconds per frame. A similar result was
reported in [NCZ∗ 09]. However, we emphasize that their results were obtained using steady guiding in which the guiding weights do not vary in time. If in fact the guiding weights
vary in time, their method requires 1600 seconds per frame
for the matrix computation plus the simulation time. In our
fluid solver implementation we employ the relatively expensive combination of BFECC and cubic interpolation for high
quality advection of both velocities, densities and temperature. For the unguided simulation in figure 3, these advection steps take up 46% of the total time per frame, whereas
the multigrid solver uses only 22% of the time per frame.
The time required to solve the guiding equations in the same
example is about 5.2 × the time required to solve the Poisson equation and perform the velocity update in a standard
fluid solver at the same resolution. However, since the multigrid solver only takes up 22% of the total time per frame for
an unguided simulation, this explains why the total time per
frame is not more than doubled, despite the fact that more
unknowns are involved in our linear system of equations.

5.1.2. Combining with an Error Estimate
It seems natural to consider relaxing the guiding whenever the error between the guiding velocity field and
the low frequencies of the guided velocity field is low.
We have explored this idea as follows: Let e(x,t) =
|[F ∗ v] (x,t) − vg (x,t)|2 be the error between the guiding
velocity field and the low frequencies of the guided velocity field. Furthermore we denote by e(x,t)
¯
the error estimate normalized to a maximal value of one and construct the guiding weights as the function φ(x,t + ∆t) =
φhigh e(x,t)d(x,t)
¯
+ φlow (1 − e(x,t)d(x,t)).
¯
Incorporating
the error estimate into the guiding weight works well for
some types of simulations and typically generates more turbulent structures than guiding with smoke density alone (see
figure 2). However, for other types of simulations, incorporating the error estimate causes the guiding to lose some correspondence to the low-resolution simulation as shown to the
left in figure 4.

5.2. Time-Dependent Guiding with Curves
The previous examples have looked at guiding with a velocity field obtained from a low-resolution simulation. However, artistic effects can be achieved by constructing velocity
fields through non-physically based methods such as modeling or painting. These can then be used as is or combined
with an existing low-resolution simulation. They are applied
using time-dependent guiding weights to enable artists to
enhance, decrease or create new low frequency motion in
an intuitive manner. We have examined this idea through
the following approach: Let vcurve (x,t) be an artist-specified
guiding velocity field and let φcurve (x,t) be similarly specified guiding weights. Essentially these fields could describe
any motion the artist desires, and in particular they do not
have to ensure a divergence free guiding velocity field. We
will specify φ such that guiding is only applied in a narrow
tube around various curves C1 , . . . ,Cn . These same curves
are used to create velocity fields vcurve 1 , . . . , vcurve n which
flow along them. φ is animated over time by gently increasing and decreasing local guiding weights φcurve1 , . . . , φcurven
in order to gradually enable and disable the flows induced by
the corresponding curves. These local guiding weights form
tubes in which velocities along the curves are induced and
they are illustrated in red in the leftmost pair of images of figure 5. In the animation we consider, the two guiding curves
are enabled one after the other. As stated, these guiding effects can also be combined with error estimates and smoke
densities to produce more high frequency detail. An example
of this, where these additional effects are combined with the
φcurvei , can be seen to the right in figure 5. The matrix was
computed in 181 seconds and required 82MB of storage at
simulation resolution 1283 . Each frame required 65 seconds
to simulate. Employing the guiding model of Nielsen et al.
in this example required roughly 1800 seconds per frame to
compute the matrix, and roughly 3GB to store it. Note again,
that the matrix computation is only required once per simulation in our framework.
5.3. Discussion and Limitations
The computation time required for a guided high-resolution
simulation is roughly doubled when compared to an unguided simulation at the same resolution. Procedural methods are faster and require less storage than a standard fluid
solver. However, as opposed to our guiding approach, procedural methods that ensure a correspondence between low
and high resolution can force otherwise stable laminar flow
to become turbulent and do not capture the instabilities naturally occurring near boundaries. In the accompanying video
we compare our guiding method to the wavelet turbulence
method [KTJG08] to demonstrate these differences.
Guiding with the error estimate does not always result
in significantly higher detail, and for some simulations the
similarity between low and high resolution can become too
weak. Another potential problem is that all grid points in
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

Michael B. Nielsen & Brian B. Christensen / Improved Variational Guiding of Smoke Animations

711

ter Trier for acting as a consultant on rendering issues
(see http://cg.alexandra.dk/), and Jesper Mosegaard, Thomas
Sangild, Clemens Nylandsted Klokmose, Ole Østerby and
the anonymous reviewers for their comments. We are grateful to Ken Museth, Doug Roble, Nafees Bin Zafar, Michael
Clive and Ryo Sakaguchi for inspiring discussions.
Figure 5: Simulations guided with a user-created flow induced in a narrow tube along the curves shown in red. The
guiding weights are animated in order to first enable the leftmost curve-flow and then later the rightmost. Left pair: The
narrow tubes. Right pair: Our method guiding with the animated guiding weights combined with the eroded densities
and the error estimate.

the domain are coupled by the error estimate. This may be
improved by using absolute errors combined with clamping and/or nonlinear interpolation. Furthermore, incorporation of the density field and error into the guiding weights
does not currently ensure density matching between the lowand high-resolution simulations. In the future we wish to explore density matching which may be used to ensure similarity for guiding with the error estimate and ensure that no
drift occurs over time. Note that [NCZ∗ 09] also does not
prevent drift of densities, since their variational model considers only velocities. Additionally, exploring other guiding
weights e.g. based on the gradient of density as opposed to
density alone is an interesting direction for future work.
Finally, for some simulations a simpler method such as
blending the low frequencies of the high resolution velocity
field with the guiding velocity field might suffice [TKPR06],
provided that artifacts do not appear within the time-frame
required by the simulation.
6. Conclusion
Smoke animations are hard to art-direct because of numerical viscosity and the non-linear nature of the governing inviscid Euler equations. In this paper we propose an improved
variational method for guiding high-resolution smoke simulations using low-resolution velocity fields. The method is
faster and requires less storage for time-dependent guiding
than previous methods. We have demonstrated that timedependent guiding can be used to achieve more high frequency detail and achieve artistic effects. In conclusion, we
are convinced that the variational approach adopted in our
method can be applied to a large number of fluid control
paradigms. We also believe that further exploration into determining the guiding weights φ can yield new ways of creating artistic effects.
Acknowledgements
This work was partially funded by the Danish Agency for
Science, Technology and Innovation. We wish to thank Pec 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

References
[ABF99] A NGOT P., B RUNEAU C.-H., FABRIE P.: A penalization method to take into account obstacles in incompressible viscous flows. Numerische Mathematik 81, 4 (February 1999), 497–
520. 4
[BHM00] B RIGGS W. L., H ENSON V. E., M C C ORMICK S. F.:
A multigrid tutorial (2nd ed.). Society for Industrial and Applied
Mathematics, Philadelphia, PA, USA, 2000. 4
[BMWG07] B ERGOU M., M ATHUR S., WARDETZKY M.,
G RINSPUN E.: Tracks: toward directable thin shells. ACM Trans.
Graph. 26, 3 (2007), 50. 1
[DL07] D UPONT T. F., L IU Y.: Back and forth error compensation and correction methods for semi-lagrangian schemes with
application to level set interface computations. Mathematics of
Computation 76 (2007), 647–668. 4
[FL04] FATTAL R., L ISCHINSKI D.: Target-driven smoke animation. In SIGGRAPH ’04: ACM SIGGRAPH 2004 Papers (New
York, NY, USA, 2004), ACM, pp. 441–448. 2
[FM97] F OSTER N., M ETAXAS D.: Controlling fluid animation.
In CGI ’97: Proceedings of the 1997 Conference on Computer
Graphics International (Washington, DC, USA, 1997), IEEE
Computer Society, pp. 178–188. 1, 2
[FP02] F ERZIGER J. H., P ERIC M.: Computational Methods for
Fluid Dynamics. Springer, Berlin, 2002. 3, 8
[FSJ01] F EDKIW R., S TAM J., J ENSEN H. W.: Visual simulation of smoke. In Proceedings of ACM SIGGRAPH 2001 (Aug.
2001), Computer Graphics Proceedings, Annual Conference Series, pp. 15–22. 1, 4
[HK04] H ONG J.-M., K IM C.-H.: Controlling fluid animation
with geometric potential: Research articles. Comput. Animat. Virtual Worlds 15, 3-4 (2004), 147–157. 2
[KCR08] KOUMOUTSAKOS P., C OTTET G.-H., ROSSINELLI
D.: Flow simulations using particles: bridging computer graphics and cfd. In SIGGRAPH ’08: ACM SIGGRAPH 2008 classes
(New York, NY, USA, 2008), ACM, pp. 1–73. 4
[KMT06] K IM Y., M ACHIRAJU R., T HOMPSON D.: Path-based
control of smoke simulations. In SCA ’06: Proceedings of the
2006 ACM SIGGRAPH/Eurographics symposium on Computer
animation (Aire-la-Ville, Switzerland, Switzerland, 2006), Eurographics Association, pp. 33–42. 2
[KTJG08] K IM T., T HÜREY N., JAMES D., G ROSS M.: Wavelet
turbulence for fluid simulation. ACM Trans. Graph. 27, 3 (2008),
1–6. 3, 6
[MCP∗ 09] M ULLEN P., C RANE K., PAVLOV D., T ONG Y.,
D ESBRUN M.: Energy-preserving integrators for fluid animation. In SIGGRAPH ’09: ACM SIGGRAPH 2009 papers (New
York, NY, USA, 2009), ACM, pp. 1–8. 1, 2
[MTPS04] M C NAMARA A., T REUILLE A., P OPOVI C´ Z., S TAM
J.: Fluid control using the adjoint method. In SIGGRAPH ’04:
ACM SIGGRAPH 2004 Papers (New York, NY, USA, 2004),
ACM, pp. 449–456. 2

712

Michael B. Nielsen & Brian B. Christensen / Improved Variational Guiding of Smoke Animations

[NCZ∗ 09] N IELSEN M. B., C HRISTENSEN B. B., Z AFAR N. B.,
ROBLE D., M USETH K.: Guiding of smoke animations through
variational coupling of simulations at different resolution. In
ACM SIGGRAPH Symposium on Computer Animation (Aug.
2009), pp. 206–215. 1, 2, 3, 4, 5, 6, 7
[NSCL08] NARAIN R., S EWALL J., C ARLSON M., L IN M. C.:
Fast animation of turbulence using energy transport and procedural synthesis. In SIGGRAPH Asia ’08: ACM SIGGRAPH Asia
2008 papers (New York, NY, USA, 2008), ACM, pp. 1–8. 3
[PTSG09] P FAFF T., T HUEREY N., S ELLE A., G ROSS M.: Synthetic turbulence using artificial boundary layers. In SIGGRAPH
Asia ’09: ACM SIGGRAPH Asia 2009 papers (New York, NY,
USA, 2009), ACM. 3
[SB08] S CHECHTER H., B RIDSON R.: Evolving sub-grid turbulence for smoke animation. In Proceedings of the 2008
ACM/Eurographics Symposium on Computer Animation (2008).
3
[Sta99] S TAM J.: Stable fluids. In Proceedings of SIGGRAPH
99 (Aug. 1999), Computer Graphics Proceedings, Annual Conference Series, pp. 121–128. 1, 2
[SY05] S HI L., Y U Y.: Taming liquids for rapidly changing targets. In SCA ’05: Proceedings of the 2005 ACM SIGGRAPH/Eurographics symposium on Computer animation (New
York, NY, USA, 2005), ACM, pp. 229–236. 2

Expanding Qmin gives
Qmin =

{v · v + [F ∗ v] · [F ∗ v] + C · C − 2[F ∗ v] · v−
Ω

2[F ∗ v] · C + 2v · C} dx
Expanding Q(v + δv) further and omitting higher order
terms in δv such as 2δv · [F ∗ δv], δv · δv and [F ∗ δv] · [F ∗
δv], for δQ = Q(v + δv) − Qmin we obtain (to first order in
δv)
{δv · (v + C − [F ∗ v])} +

δQ = 2

(9)

Ω

{[F ∗ δv] ([F ∗ v] − v − C)} dx

(10)

To obtain a sufficient condition for a stationary point it is
convenient to rewrite δQ in the form δQ = Ω δv(x)·D(x)dx,
where D is some vector expression. As can be seen, (9) is already in this form, and we now focus on rewriting (10) in
this form as well. By utilizing the definition of the convolution operator, exchanging integration orders and introducing
the integration variable y which ranges over all positions in
the domain, we obtain from (9) and (10)

[TKPR06] T HÜREY N., K EISER R., PAULY M., R ÜDE U.:
Detail-preserving fluid control. In SCA ’06: Proceedings of the
2006 ACM SIGGRAPH/Eurographics symposium on Computer
animation (Aire-la-Ville, Switzerland, Switzerland, 2006), Eurographics Association, pp. 7–12. 1, 2, 7

δQ = 2

[TMPS03] T REUILLE A., M C NAMARA A., P OPOVI C´ Z., S TAM
J.: Keyframe control of smoke simulations. In SIGGRAPH ’03:
ACM SIGGRAPH 2003 Papers (New York, NY, USA, 2003),
ACM, pp. 716–723. 2

Since δv is arbitrary, a sufficient condition for δQ = 0 is
that the expression within the curly braces is identically
zero. This completes the derivation of the contribution to the
Euler-Lagrange equations from (3). The contributions from
(1) and (2) are derived similarly. Furthermore, the derivation
of the contribution, ∇p(x), from Eq. (4) by the method of
Lagrange multipliers is similar to the derivation in [FP02,
p.203]. The contributions from (1) – (4) are finally added
together and set equal to zero

Appendix A: Full Derivation of the Guiding Equations
We show here how to derive the guiding equations Eq. (5)Eq. (6) from the constrained minimization problem (1) –
(4). We focus on obtaining Eq. (5) from (1) – (4). Note that
Eq. (4) will also contribute to Eq. (5) by means of Lagrange
multipliers. The minimization terms (1) – (3) are very similar, and we concentrate on the most complicated term (3)
first. Since v˜ is known, we can rewrite (3) as
|[u(x) − [F ∗ u]] (x) + C(x)|2 dx

Q(u(x)) =

(7)

Ω

where C(x) = − [˜v − [F ∗ v˜ ]] (x) is known and independent
of the velocity field v we are solving for. Assume that v is a
minimizer of the functional Q(u(x)) in Eq. (7). We then have
Qmin = Q(v(x)). We now employ calculus of variations by
considering the first variation of Q: δQ = Q(v(x) + δv(x)) −
Qmin and wish to find the stationary point corresponding to
δQ = 0. Expanding Q(v(x) + δv(x)) gives
Q (v + δv)

(8)

δv· v(x) + C(x) − [F ∗ v](x)+
Ω

F(y − x) ([F ∗ v](y) − v(y) − C(y)) dy dx
Ω

[1 − φ(y)]F(y − x) ([F ∗ v](y) − [F ∗ v˜ ](y)) dy

(11)

Ω

φ(y)F(y − x) ([F ∗ v](y) − vg (y)) dy

+

(12)

Ω

+ v(x) + C(x) − [F ∗ v](x)
F(y − x) ([F ∗ v](y) − v(y) − C(y)) dy

+

(13)
(14)

Ω

+ ∇p(x)

(15)

=0
Expression (11) is the contribution from (1), (12) is the contribution from (2), (13) – (14) are the contributions from (3)
and finally (15) is the contribution from Eq. (4). Note that p
is the pressure of the fluid. By re-arranging these equations
and moving the known quantities to the right-hand-side we
obtain Eq. (5). This completes the derivation.

{(v + δv) · (v + δv) + [F ∗ [v + δv]] · [F ∗ [v + δv]] +

=
Ω

C · C − 2 (v + δv) · [F ∗ [v + δv]] −
2[F ∗ [v + δv]] · C + 2 (v + δv) · C} dx
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

