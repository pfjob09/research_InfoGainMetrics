DOI: 10.1111/j.1467-8659.2009.01638.x
EUROGRAPHICS 2010 / T. Akenine-Möller and M. Zwicker
(Guest Editors)

Volume 29 (2010), Number 2

A Hybrid Approach to Multiple Fluid Simulation
using Volume Fractions
Nahyup Kang1† Jinho Park2 Junyong Noh1 Sung Yong Shin1
1 Korea

Advanced Institute of Science and Technology
2 Namseoul University

Abstract
This paper presents a hybrid approach to multiple fluid simulation that can handle miscible and immiscible fluids, simultaneously. We combine distance functions and volume fractions to capture not only the discontinuous
interface between immiscible fluids but also the smooth transition between miscible fluids. Our approach consists
of four steps: velocity field computation, volume fraction advection, miscible fluid diffusion, and visualization. By
providing a combining scheme between volume fractions and level set functions, we are able to take advantages
of both representation schemes of fluids. From the system point of view, our work is the first approach to Eulerian
grid-based multiple fluid simulation including both miscible and immiscible fluids. From the technical point of
view, our approach addresses the issues arising from variable density and viscosity together with material diffusion. We show that the effectiveness of our approach to handle multiple miscible and immiscible fluids through
experiments.
Categories and Subject Descriptors (according to ACM CCS): I.3.7 [Computer Graphics]: Computer Graphics—
Three-Dimensional Graphics and Realism

ids, while adopting the standard operator-splitting framework [Sta99] to solve the Navier-Stokes equations on a MAC
grid [HW65].

1. Introduction
Multiple fluid phenomena involving both miscible and immiscible fluids are often observed in our life, for example,
pouring milk into coffee, dropping ink into water, making
cocktail drinks, to name a few. In each of the examples, a pair
of fluids is mixed smoothly while creating the sharp interface
with air. Complicated fluid phenomena involve more diverse
combinations of miscible and immiscible fluids. Recently,
multi-fluid simulation has drawn much attention. However,
simulating such phenomena is still difficult although partial
solutions have been reported [GDSS05, MSKG05, LSSF06,
ZLLW06, ZBWL07, PKW∗ 08].

In our problem setting, fluids of various densities and viscosities move around in the simulation space. These fluids
are classified into groups of fluids according to their miscibilities. Each group represents a mixture of miscible fluids
and is immiscible with the others. In order to keep track of
the spatial distribution of each fluid at every time step, we
represent the fluid mix in a grid cell by a vector of volume
fractions, where each volume fraction gives the percentage
of the cell volume occupied by the corresponding fluid. Although multiple fluids can be handled effectively exploiting
volume fractions regardless of their miscibility, it is difficult
to directly identify the interface between immiscible fluids
from the volume fractions due to their non-geometric nature.
Therefore, we modify the volume fractions of cells near the
interface at every time step using a fast marching method in
order to track the interface between immiscible fluids with
the volume fractions. Based on this modification, we can

We propose a hybrid simulation method for simulating
miscible and immiscible fluids simultaneously by combining distance functions(level set functions) [OS88, LSSF06]
and volume fractions [HN81, GDSS05]. Our approach effectively handles the discontinuous interface between immiscible fluids and smooth transition of miscible flu† nhkang@jupiter.kaist.ac.kr
c 2010 The Author(s)
⃝
c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Journal compilation ⃝
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

685

686

Kang et al. / Multiple Fluid Simulation

take advantages of both volume fractions and level set functions.
Given the volume fractions, the aggregate density of the fluids in a cell is the sum of their individual densities weighted
by the corresponding volume fractions. The aggregate viscosity can also be computed in the same manner. As both
quantities vary spatially, we have to solve Navier-Stokes
equations with variable density and viscosity while capturing the discontinuity and the continuity of these quantities.
Provided with a flow field, yet another issue is how to advect the volume fractions while minimizing their numerical
dissipation. Although a VOF method [HN81] conserves the
volumes of fluids during their advection, we cannot use this
method after the modification of volume fractions since the
sum of volume fractions of a cell near the interface is not
equal to one any more. Our solution first advects the volume fraction of each fluid using the back and forth error
compensation and correction(BFECC) scheme [KLLR07].
For accurate tracking of the interface, the level set functions
are also extracted from the modified volume fractions of
cells. Then an existing particle level set method [EFFM02,
EMF02, ELF05, LSSF06] is employed for correcting these
functions. The corrected level set functions are converted
back to the volume fractions near the interface.
Finally, given the volume fractions at each grid cell, we address the material diffusion issue for miscible fluids. We
adopt an additional diffusion equation to model the material
diffusion of miscible fluids since Navier-Stokes equations
do not have an inherent capability of dealing with material
diffusion. The discontinuous interface between immiscible
fluids as well as continuous transition of miscible fluids is
visualized using the finally-obtained volume fractions.
The contributions of our paper can be summarized as follows: From the system point of view, our work is the first
approach to Eulerian grid-based multiple fluid simulation including both miscible and immiscible fluids. From the technical point of view, our contributions are three-fold:
• We show that the divergence-free condition in incompressible Navier-Stokes equations can be satisfied in
our problem setting even with miscible fluids(variable
density) under a reasonable assumption(Section 3.2).
We also show that an existing solver for viscosity
integration [LSSF06, BB08] can be employed for
variable viscosity integration under the same assumption(Section 4.2).
• We present a hybrid scheme by combining volume
fractions and level set functions in order to handle
both the discontinuous interface between immiscible
fluids and the smooth transition between miscible
ones(Section 5).Specifically, this scheme can simulate
the interaction between the immiscible fluids while
simultaneously taking care of the diffusion between

miscible fluids, which are hard to grasp with existing methods [ZLLW06, ZBWL07, MMTD07, PKW∗ 08]
because of spatially varying fluid densities and viscosities.
• We propose a stable material diffusion method which
allows diffusions only between miscible fluids. The
material diffusion equation is simplified by modelling
diffusion phenomena based on volume fractions rather
than mass fractions(Section 6 and Appendix B).
The remainder of the paper is organized as follows: The next
section reviews previous work. Section 3 provides our key
results: volume fraction representation of fluids, incompressibility condition enforcement, and combination of volume
fractions and distance functions. In Section 4 we describe
how to compute a divergence-free velocity field for a fluid
flow with both density and viscosity varying spatially. Section 5 and 6 deal with volume fraction advection and miscible fluid diffusion, respectively. We briefly discuss fluid
visualization in Section 7. Section 8 shows experimental results. We conclude the paper in Section 10.
2. Related Work
Multiple Fluid Interactions: Due to recent advancement of
fluid simulation technology, multiple fluid interactions have
drawn much attention from the computer animation community: Premo˘ze et al. presented a particle-based method
which can simulate multiple immiscible fluids [PTB∗ 03].
M¨uller et al. [MSKG05] proposed a smoothed particle
hydrodynamics(SPH)-based method [Mon05, MCG03] for
modeling fluid-fluid interaction. Hong et al. [HK05] simulated incompressible viscous two-phase fluids with realistic small-scale details using ghost fluid methods [LFK00,
KFL00]. Losasso et al. [LSSF06] simulated multiple immiscible fluids by extending particle level set(PLS) methods [EFFM02, EMF02, ELF05] on an Eulerian grid. These
particle level set methods cannot be extended to multiple
miscible fluid simulation since the methods assume that the
density is constant inside the fluid. However, for the accurate tracking of the volume fractions near the interface between immiscible fluids, we exploit the particle-based level
set method by Losasso et al. [LSSF06].
Zhu et al. [ZLLW06, ZBWL07] simulated a pair of miscible
fluids based on a Lattice Boltzmann Method(LBM) [CD98].
LBM-based approaches suffer from instability that tends to
produce high-Reynold number effects, resulting in viscouslooking fluid flows. Moreover, an LBM-based method cannot deal with the divergence-free condition of fluids. We
employ the operator-splitting framework [Sta99] for solving
Navier-Stokes equations in order to satisfy the divergencefree condition for multiple fluids regardless of their miscibility. Recently, Mullen et al. [MMTD07] proposed a masspreserving density advection method that can handle miscible fluids. However, this method did not take into account
c 2010 The Author(s)
⃝
c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Journal compilation ⃝

687

Kang et al. / Multiple Fluid Simulation

variable densities and viscosities. Moreover, it is not obvious
how to extend the method to handle both multiple miscible
and immiscible fluids.
Park et al. [PKW∗ 08] presented an LBM-based approach
to simulate more complex phenomena involving both
immiscible and miscible fluids based on a phase field
method(PFM) [AMW98]. This approach suffers from several limitations such as volume loss, large memory requirements, and viscous-looking flow generation. Moreover, the
governing equations of the PFM include a 4th order differential term, which makes it difficult to solve them numerically
and tends to smooth out the interface so as to make small
drops shrink spontaneously [YZF07].
Volume-of-Fluid based Methods: Volume-of-Fluid(VOF)
methods [HN81] have also been used widely as alternatives
for tracking fluids on an Eulerian grid. A VOF method does
not track the motion of the interface between fluids, but
evolves the volume fraction of each material. The interface
between fluids is reconstructed from the volume fractions by
employing an approximation method such as piecewise linear interface calculation(PLIC) scheme [You82]. The main
advantage of the VOF method is that it can conserve fluid
volumes explicitly by computing volume fluxes. However,
the reconstruction of the material interface while satisfying volume constraints over a spatial domain is a difficult
problem because of its under-constrained nature. The PLIC
scheme also suffers from several limitations such as discontinuity across the cell boundaries and ambiguity for three or
more materials. Several variations of the PLIC scheme have
been presented to resolve those limitations [PP04, GDSS05,
AGDJ08]. Yet another limitation lies in difficulty of computing interfacial normals and curvatures that are important to
solve Navier-Stokes equations, in particular, computing surface tension forces.
Sussman et al. presented a hybrid approach by coupling
a level set method and a VOF method(CLSVOF) [SP00,
Sus03, MUM∗ 06] for accurate interfacial curvature calculation and mass conservation. In the CLSVOF method, a
PLIC scheme reconstructs the interface between fluids from
the volume fractions. Then, the interface is used to correct(redistance) a level set function from which an interfacial
curvature is computed. However, it is not easy to extend the
CLSVOF method to tracking multiple fluids since both interface reconstruction and level set correction are complicated
even in a two-phase flow. Detailed comparison between particle level set methods and CLSVOF methods is well discussed in [WYS08, GA08].
We adopt volume fractions as the base representation
scheme for multiple fluids regardless of their miscibilities.
We modify the volume fractions near the interface to represent a distance function as well, in order to capture both the
interface between immiscible fluids and the smooth transition between miscible fluids(See Section 3.3). Based on this
representation scheme, we make use of a particle level set
c 2010 The Author(s)
⃝
c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Journal compilation ⃝

method for tracking the interface between multiple immiscible fluids [LSSF06] while correctly diffusing the volume
fractions between miscible fluids.
3. Multiple Fluid Flow
We employ following Navier-Stokes equations to simulate
incompressible fluids with variable viscosity:
1
1
ut = −(u · ∇)u − ∇p + ∇ · τ + f,
ρ
ρ

(1)

∇ · u = 0,

(2)

τ = µ(∇u + (∇u)T ),

(3)

where u is velocity, µ is viscosity, p is pressure, ρ is density,
τ is the viscous shear stress tensor, and f represents body
forces such as gravity and surface tension. We note that the
density and viscosity of the fluid mixture vary spatially because of miscible fluids. At first glance, it appears that the
incompressibility condition(Equation (2)) would not be satisfied, and thus the above equations may not be suitable for
our problem.
In this section, we set up the cornerstones of our approach.
We first introduce a multiple fluid representation scheme
based on volume fractions. We then show that the incompressibility condition is satisfied under a practical assumption, so as to adopt the Navier-Stokes equations for our purpose regardless of the miscibilities of participating fluids.
We finally describe how to combine volume fractions and
signed distance functions.
3.1. Multiple Fluid Representation
We describe how to represent multiple fluids including both
immiscible and miscible ones using their volume fractions.
Volume Fractions: Let V and V f be the volume of a cell
and the portion of the cell volume occupied by fluid f , respectively. The volume fraction of fluid f , denoted by α f , is
said to be the ratio of V f to V . α f = V f /V = V f /∑ f V f .
Suppose that N fluids are involved in simulation. Then,
their volume fractions can be represented as a vector,
(α f1 , α f2 , · · · , α fN ). Notice that our simulation is done on
a regular grid, and thus all grid cells have the same volume V . Since the mass of the aggregate fluid in a cell i is
f f
Mi = ρiV = ∑ f αi ρi V , the density of the aggregate fluid(or
f

f

fluid mixture) in the cell is ρi = ∑ f αi ρi .
Groups of miscible fluids: In order to represent a multiple
fluid flow, we classify the fluids into groups such that only
the fluids in the same group are miscible. For example, a
set of four different fluids, {air, water, ink, oil} are classified into three groups {air}, {water, ink}, and {oil}. Here,

688

Kang et al. / Multiple Fluid Simulation

only one pair of fluids, water and ink are miscible with each
other. A group in a cell is said to be dominant if the sum of
the volume fractions of the group is larger than those of the
others.

1
Fluid

0

0
Fluid

(b) Signed Distance Function

(a) Volume Fraction
1

w

.5 w

w

3.2. Incompressibility Condition
0

.5

In computer graphics, the conservation of mass equation(Equation (2)) is commonly used under a constant density assumption. Since the density of fluids varies spatially because of miscible fluids, we have to show that this
equation does still hold true. Otherwise, we would not use
the operator-splitting scheme [Sta99] for solving NavierStokes equations. Most previous work [ZLLW06, ZBWL07,
PKW∗ 08] ignored the divergence-free condition for multiple
miscible fluids.

Fluid

Fluid

0
(c) Modified Volume Fraction

− .5 w
(d) Extracted Signed Distance Function

Figure 1: volume fractions are transformed to smooth distance functions near the interface(1D Profile)

(4)

Unlike these solutions, our approach adopts a fluid representation scheme based on volume fractions. Therefore, we
modify the volume fractions in a narrow region along the interface between every pair of fluid groups to represent a distance function so that an existing solution can be employed
to our problem setting.

We assume that individual density ρ f is constant for all fluid
f . This assumption means that even if fluid f is mixed with
other fluids, its volume does not change. Integrating Equation (4) over a cell for each fluid f and applying the divergence theorem to the result, we derive
)
(
∂α f ρ f
(5)
+ ∇ · α f ρ f u = 0.
∂t

Consider the interface between two immiscible fluids. It is
embedded in a distance function ϕ, that is, the iso-contour
ϕ(x) = 0 describes the interface(Figure 1 (b)). This function
changes smoothly across the interface so that differential
quantities such as gradients and curvatures are well-defined.
As illustrated in Figure 1 (a), the volume fraction of each
fluid makes a sharp transition across the interface, which can
be modeled as a Heaviside function.

To show that divergence-free condition still holds even for
multiple miscible and immiscible fluids, we start with a general continuity equation with possibly variable density ρ.
∂ρ
+ ∇ · (ρu) = 0.
∂t

Since ρ f is constant, Equation (5) can be reduced to
)
(
∂α f
+ ∇ · α f u = 0.
∂t
Adding Equation (6) for all f , we obtain
((
) )
∂∑αf
+∇· ∑αf u = 0
∂t

{
α(x) =

1
0

if x is a point in the region occupied by the fluid,
otherwise.

(6)

(7)

Finally, we have ∇ · u = 0 since ∑ f α f = 1.
This derivation shows that if each fluid is incompressible,
their mixture is also incompressible even though the density
of the fluid mixture varies spatially.
3.3. Interface Extraction
The fluids in a group of miscible fluids are mixed together
to form a fluid mixture without showing any discontinuities
in physical quantities such as density and viscosity. On the
other hand, a pair of different fluid groups exhibit the common interface while preserving their own physical properties. In order to cope with such discontinuities, we want to
exploit existing solutions. The difficulty with this strategy is
that the existing solutions depend heavily on a distance function ϕ that measures the signed distance from the interface.

We modify the volume fractions in the region near the interface to smoothly vary across the interface(Figure 1 (c)). In
particular, we reset the volume fractions in the narrow region
of width w along the interface by solving an Eikonal equation ||∇α(x)|| = 1/w subject to constraints 0 ≤ α(x) ≤ 1,
using a fast marching method [AS99]. After avecting all volume fractions with the BFECC method, we convert α(x) to
a signed distant function ϕ(x) to accurately trace the volume
fractions near the interface(Figure 1 (d)):
ϕ(x) = w(α(x) − .5).

(8)

For all of our experiments, we set w = 6∆x, where ∆x is the
size of a grid cell.
To handle multiple fluids, suppose that the fluids are classified into groups each being an immiscible mixture of miscible fluids. To modify the volume fractions of each group
in the region near the interface, we first compute the sum of
volume fractions of each group. Then we modify this value
using a fast marching method. Finally, the volume fractions
of member fluids are rescaled by the modified volume fraction of the group.
c 2010 The Author(s)
⃝
c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Journal compilation ⃝

689

Kang et al. / Multiple Fluid Simulation

group at cell i. The aggregate density ρi for group Gi is
(∑k∈Gi αk ρk )/(∑k∈Gi αk ).

Figure 2: 2D and 3D stencil

4. Velocity Field Computation
To solve the Navier-Stokes equations, we adopt a standard
operator splitting framework [Sta99] with the fluid variables
discretized on a MAC grid [HW65] as shown in Figure 2.
In each iteration of simulation, we first apply advection and
external forces, then project the velocity field to make it divergence free, solve for viscosity, and perform the projection step again to make sure of an incompressible velocity
field [LSSF06].
For velocity advection, the BFECC scheme [KLLR07] or
a semi-Lagrangian method [Sta99] is employed. However,
one may use other schemes in [SSK05,KSK08,SFK∗ 07] for
accurate advection. For velocity field projection, we solve a
Poisson equation with discontinuous coefficients, by adopting an existing method [LSSF06](see Section 4.1). For viscosity computation, we have to consider both variable viscosity and variable density. Thus, existing methods for variable viscosity fluid simulation [LSSF06,BB08] would not be
applied directly. We gracefully get around this difficulty under the assumption that the density of each individual fluid
is constant(see Section 4.2).
4.1. Velocity Field Projection
In this step, we solve the following Poisson equation for
pressure computation:
∇ · u˜ − ∇ ·

∆t
∇p = 0
ρ

Discretizing Equation (9) gives

(

(9)

)

where βi = ρ1i and u˜ is the intermediate velocity. For simplicity, we show only 1D discretization. The system of equations
that result from Equation (10) is symmetric and positive
definite, so that a preconditioned conjugate gradient(PCG)
method can be employed. We update the current velocity
field un+1 from the previous one un as follows:
u

i

i+1

θ is defined in terms of the level set values at the adjacent
cell centers,
θ=

|ϕ(xi )|
,
|ϕ(xi )| + |ϕ(xi+1 )|

where xi is the center of cell i. In order to compute θ, we convert modified volume fractions to their respective distance
functions using Equation (8).
4.2. Variable Viscosity Computation
Under the assumption that ρ is constant, the following PDE
was employed for variable viscosity integration [LSSF06,
BB08]:
ut =

1
∇ · µ(∇u + (∇u)T ).
ρ

(11)

The discretization of Equation (11) results in a nonsymmetric system, because density ρ and viscosity µ are allowed to vary spatially in our simulation. We instead modify
Equation (11) slightly so that a PCG can be applied while
allowing variable density(see Appendix A).
Consequently, we have the following equation for variable
viscosity integration,
ut = ∇ · ν(∇u + (∇u)T ).

βi+1/2 pi+1 + βi−1/2 pi−1 − βi+1/2 + βi−1/2 pi
)
∆x (
=
u˜i+1/2 − u˜i−1/2 ,
(10)
∆t

n+1

If the dominant groups at cell i and i + 1 are the same, we
take the average of the densities of cell i and i + 1 since
the density is continuous. Otherwise (Gi ̸= Gi+1 ), the interface of the two groups, Gi and Gi+1 passes between cell i
and cell i + 1. In this case, we adopt the discontinuous fluid
methods [LFK00, LSSF06]. Thus, the coefficient βi+1/2 is
estimated as follows:
{
2
if Gi = Gi+1 ,
ρi +ρi+1
βi+1/2 =
βi βi+1
otherwise.
(1−θ)β +θβ

∆t
= u − ∇p.
ρ

where ν = ∑ f α f (µ f /ρ f ). This equation can be discretized
to yield a symmetric system.
The aggregate viscosity coefficient νi of group Gi is
computed by νi = (∑k∈Gi αk νk )/(∑k∈Gi αk ), where νk =
(µk /ρk ). Given νi for the dominant group Gi , νi+1/2 is computed in a similar manner as βi+1/2 :
{
νi +νi+1
if Gi = Gi+1 ,
2
νi+1/2 =
νi νi+1
otherwise.
(1−θ)ν +θν
i

i+1

where θ is defined in the same manner as in Section 4.1.

n

A difficulty in the velocity field projection is how to estimate variable coefficients β. Let Gi be the dominant
c 2010 The Author(s)
⃝
c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Journal compilation ⃝

5. Volume Fraction Advection
We combine two methods, BFECC and PLS for volume fraction advection. First, we advect every volume fraction by

690

Kang et al. / Multiple Fluid Simulation

where J = D∇α and D is the diffusion coefficient.

Figure 3: Different diffusion coefficients: A small diffusion coefficient is assigned to two miscible fluids(top row).
A large diffusion coefficient is assigned to the two fluids(bottom row).

the BFECC method, given a divergence-free velocity field.
This method may result in artifacts such as excessive volume
loss, interface overlaps, and vacuum holes for groups each of
which represents an immiscible fluid mixture. In order to alleviate these issues, we further track the interface between
groups by converting the volume fractions near the interface
to their respective distance functions with Equation (8), and
then adopting a state-of-the-arts level set method to correct
them. The corrected level set functions are converted back to
the volume fractions near the interface.
Specially, for interface tracking, we employ the method by
Losasso et al. [LSSF06], which is an extension of a particle
level set(PLS) method [EFFM02, EMF02, ELF05] to multiple immiscible fluids. Since the volume fractions of every
miscible fluid in the group are corrected using particles, each
particle should convey not only the level set value of a group
but also the volume fractions of the member fluids of the
group. The volume fractions of particles are initially computed by linear interpolation of the volume fractions of the
nearby grid points. When correcting the interface between a
pair of groups using the PLS method, the volume fractions
of the member fluids of each of the groups are also corrected
by the volume fractions carried by the particles. After the
particle correction step, the level set functions are fixed by
subtracting the average of the two largest level set values in
a cell to prevent the interface overlaps and vacuums. Consequently, there remain at most two immiscible fluid groups in
a cell, one of which must have a volume fraction larger than
or equal to 0.5.
6. Miscible Fluid Diffusion
The volume fractions of miscible fluids diffuse to each other.
In order to update the volume fractions due to diffusion, we
use the following governing equation:
∂α
= ∇ · J,
∂t

(12)

Since the diffusion flux must be zero between immiscible
fluids, we set J = 0 across the interface to prevent the diffusion between immiscible fluids. In order to effectively implement this, we exploit the notion of the dominant group
of a grid cell defined in Section 3.1. We label each grid cell
with its dominant group to partition the simulation domain
into subregions, such that each subregion contains the grid
cells with the same label(dominant group). The diffusion is
done separately in each subregion. The Neumann boundary
condition makes the gradient of the volume fraction vanish
along the boundary. Thus, we can set the diffusion flux to
zero along the boundary.
For a fluid with large diffusion coefficient, explicit numerical integration of the diffusion equation is not stable with
large time steps. Therefore, we solve the diffusion equation
implicitly. The implicit discretization of the diffusion equation(Equation (12)) for each subregion is shown below together with the boundary condition. For simplicity, we only
show the x component of discretization:
new
−λαnew
− λαnew
i−1 + (1 + 2λ)αi
i+1 = αi ,

(13)
∇α · n = 0 on the boundary,
, and n is the normal vector on the boundwhere λ = D∆t
∆x2
ary. Figure 3 shows the comparison between two different
diffusion coefficients.
The aggregate volume fractions near the interface should be
reinitialized at every time step as diffusion smooths it out as
follows: The sum of volume fractions of each group is not
allowed to change although the volume fractions within the
group can be changed during the diffusion. In other words,
the sum of volume fractions of each group in a cell is fixed
before and after the diffusion. Therefore, the volume fractions in each group are rescaled after diffusion so that their
sum remains the same as before at each time step.
We further simplify diffusion exploiting the incompressibility of fluids. In general, diffusion is driven by the gradient of
fluid concentration(mass fraction). We use the volume fractions instead of the mass fractions to model diffusion phenomena. This approximation makes sense since we deal with
incompressible fluids. To satisfy incompressibility, the exchange of volume fractions between the neighbor grid cells
must be balanced. In other words, a pair of neighbor grid
cells give and take the same amount of volume fractions.
From this observation, we show that the diffusion coefficients of all fluids in the same group share an equal value.
Detailed derivation is available in Appendix B.
7. Visualizing Volume Fractions
We first extract the interface between fluids for visualization. We employ the marching cube scheme [LC87] to extract the 0.5 iso-surface of the aggregate fluid for each group.
c 2010 The Author(s)
⃝
c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Journal compilation ⃝

Kang et al. / Multiple Fluid Simulation

691

Figure 4: Red drop falling into water

One may use raytracing or raycasting methods to render the
surface of the aggregate fluid without extracting the isosurface [CLT07]. We then recover the volume fraction of
each fluid group near the interface to represent it as a Heaviside function(Figure 1). This can be achieved by removing
the artificial narrow band near the interface as follows:
{
α(x)
if α(x) = 0 or α(x) = 1,
αnew (x) =
⌊α(x) + .5⌋ otherwise.

Figure 5: Mixing honey and water

Figure 6: Pouring three different fluids into water

new

Using the recovered group volume fraction α (x), the volume fraction of every member in the group is rescaled to
complete this task. After rendering the interface of each
group of miscible fluids, we visualize the interior of the
group using the recovered volume fractions of member fluids. We employ volume rendering features of PBRT [PH04]
to visualize the interior of miscible fluids.
8. Results
R
We performed our experiments on Intel⃝
Core2 Quad
Q8400 CPU with 6GB RAM. However, we did not exploit
the multi-core capability. Uniform grids were used to
discretize the simulation space, and the time step was set
2 times the CFL number. In each iteration of simulation,
it took about 5 to 40 seconds for solving Navier-Stokes
equations, and 20 to 90 seconds for advection and diffusion.
Our method performed 5 to 6 iterations per frame on
average. The most time-consuming part is volume fraction
correction using the particles in the advection and diffusion
step. The volume fractions of each cell is represented as
an N-vector where N is the number of fluids in it. Since
level set values are computed on the fly whenever needed,
no extra space is used to store them. For the PLS method,
each particle conveys a vector of volume fractions of a
group, which incurs additional space. Except this overhead,
the space complexity of our method is the same as that
of [LSSF06].

a 100x200x100 grid. We can observe that the red drop was
smoothly mixed with transparent water as shown in Figure 4.
We repeated this experiment by varying fluid densities, viscosities, and diffusion coefficients. The results are available
in the accompanying video.
The second example shows a phenomenon of mixing
honey(yellow) and water(transparent) of which the viscosities are greatly different from each other(Figure 5). Two
fluid columns were initially located at the diagonally opposite corners of a 100x100x150 grid. We assigned a significantly(10000 times) higher viscosity to honey than water.
Because of high viscosity contrast, the two fluids showed
very different behaviors in the beginning of simulation although they were miscible with each other. After sufficient
material diffusion, they behaved similarly because of the
composite viscosity of their mixture.
In the last example, we employed our method to simulate three colored fluids pouring into transparent water in
a 100x100x50 grid. The three fluids are colored red, blue,
and green, and their densities were set as follows: ρred >
ρwater > ρgreen > ρblue . The four fluids are miscible with
each other. Each of the three colored fluids was poured into
water in turn. As shown in Figure 6, four different fluids
were mixed together to result in complex color gradation inside water. This example demonstrates that our method can
be used as a general tool to simulate miscible fluid flows.

Multiple miscible fluid simulation: We used the following three examples to support our claim that the proposed
method can handle multiple miscible fluids of different densities and viscosities, under the incompressibility assumption on each individual fluid.
In the first example, our method was used to simulate a red
fluid drop falling into water in a container represented by
c 2010 The Author(s)
⃝
c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Journal compilation ⃝

Figure 9: Rayleigh-Taylor instability

692

Kang et al. / Multiple Fluid Simulation

Figure 7: Quadruple dam breaking

Figure 8: Two bunny-shaped fluid chunks falling into two immiscible fluids at the bottom

Multiple miscible and immiscible fluid simulation:
Through three examples, we validate the claim that our
method effectively handles multiple miscible and immiscible fluids simultaneously.
The first example shows a quadruple dam breaking scene
simulated on a 100x150x150 grid. For this scene, we used
four columns of fluids colored red, green, yellow, and transparent, respectively. Their densities were set as follows:
ρtransparent > ρgreen > ρred > ρyellow . They formed two
groups of fluids, {red, yellow} and {green, transparent}.
Red and yellow fluid columns were placed initially in the
right side of the container. Green and transparent fluid
columns were in the opposite side. As shown in Figure 7, our
method allows the miscible fluids in each group to diffuse to
each other while exhibiting the sharp interface between the
two groups.
Our next example exhibits two bunny-shaped fluid chunks
falling into two immiscible fluids at the bottom of a
100x150x150 grid. The two fluid chunks are miscible with
different fluids at the bottom. The densities of four fluids
were set as follows: ρred > ρyellow > ρblue > ρtransparent .
We set the diffusion coefficient between the red and the
yellow fluids larger than that between the others. Accordingly, the red chunk diffused to the yellow fluid at the bottom
faster than the blue chunk diffused to the transparent fluid,
as shown in Figure 8.
The last example shows Rayleigh-Taylor instability with
three layered fluids. The experiment was performed on
a 150x150x150 grid using two groups of fluids, {blue,
transparent} and {dark}. The density of the blue fluid
was larger than that of the transparent fluid, which caused
Rayleigh-Taylor instability between the two miscible fluids.
Figure 9 shows a complex mixing phenomenon of the two
miscible fluids because of the instability while keeping the
discontinuous interface with the dark fluid.

9. Discussion
The diffusion normalization(see Section 6) may lead to mass
changes for individual fluids. For a cell distant from the interface, the sum of volume fractions is one before and after the diffusion. Therefore, the diffusion normalization does
not affect the volume fractions in such a cell. However, for
a cell near the interface, the volume fractions are modified
to result in mass changes after the diffusion normalization
since their sum is not equal to one. The effect of the mass
changes is not visually noticeable because it occurs only
the narrow band near the interface. In our experiments, the
mass changes due to the diffusion normalization are less than
0.01% even for the rather large diffusion coefficient.
In real world, the volume of the mixtures of miscible fluids
tends to be smaller than the sum of their individual fluid volumes because of the different sizes of fluids molecules. This
is similar to what happens when mixing sand and rocks. This
phenomena could be taken care of by incorporating a microscopic scheme that can handle the volume of a mixture of
miscible fluids explicitly beyond the diffusion. We leave it
as a future research topic.
Although we assume that the groups of miscible fluids are
disjoint, this assumption may not always hold true. For example, consider three fluids, water, oil and liquid soap. Water and oil are not miscible with each other. However, each
of these is miscible with liquid soap. Thus, it is not possible
to partition the fluids into disjoint groups in such a case. We
also leave this as a future research topic.
In our Rayleigh-Taylor instability example(Figure 9), it is
hard to see the details of fluid features because of the sparse
resolution of the simulation domain. Incorporating an adaptive grid into our framework is yet another interesting research venue for capturing fine-scale detail of fluid-fluid interaction.
c 2010 The Author(s)
⃝
c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Journal compilation ⃝

Kang et al. / Multiple Fluid Simulation

10. Conclusion
In this paper, we present a hybrid approach to simulating a
multiple fluid flow including both miscible and immiscible
fluids. Providing a conversion scheme between volume fractions and level set functions, we take advantage of both. We
adopt volume fractions as the main representation scheme of
fluids for simulation, while transforming these near the interface into(or back from) their respective level set functions, if
necessary, to employ existing solutions. From the technical
point of view, our main contributions are to provide cornerstones for multiple fluid simulation with variable density and
variable viscosity: in particular, incompressibility condition
enforcement, variable density and viscosity handling, combining volume fractions with distance functions, and simplification of material diffusion.
Our method is based on the standard operator-splitting
method unlike the LBM-based approaches, so that it can
be easily integrated into the conventional fluid simulation
pipeline. We believe that dynamic solid objects may also be
simulated within our framework by incorporating the solidfluid coupling method of [BBB07].
Acknowledgements
We would like to thank Jihyeon Yi and Donghoon Sagong
for their help. This work was supported by the Korea Science
and Engineering Foundation(KOSEF) grant funded by the
Korea government(MEST) (No. 2009-0058607).
References
[AGDJ08] A NDERSON J. C., G ARTH C., D UCHAINEAU M. A.,
J OY K. I.: Discrete multi-material interface reconstruction for
volume fraction data. Computer Graphics Forum 27, 3 (2008),
1015–1022. 3
[AMW98] A NDERSON D. M., M C FADDEN G. B., W HEELER
A. A.: Diffuse-Interface Methods in Fluid Mechanics. Annual
Review of Fluid Mechanics 30 (1998), 139–165. 3
[AS99] A DALSTEINSSON D., S ETHIAN J. A.: The fast construction of extension velocities in level set methods. Journal of Computational Physics 148, 1 (1999), 2 – 22. 4
[BB08] BATTY C., B RIDSON R.: Accurate viscous free surfaces
for buckling, coiling, and rotating liquids. In Proceedings of
the 2008 ACM/Eurographics Symposium on Computer Animation (July 2008), pp. 219–228. 2, 5
[BBB07] BATTY C., B ERTAILS F., B RIDSON R.: A fast variational framework for accurate solid-fluid coupling. ACM Trans.
Graph. 26, 3 (2007), 100. 9
[CD98] C HEN S., D OOLEN G. D.: Lattice boltzmann method
for fluid flows. Annual Review of Fluid Mechanics 30, 1 (1998),
329–364. 2
[CLT07] C RANE K., L LAMAS I., TARIQ S.: Real-time simulation and rendering of 3d fluids. GPU Gems 3 Chapter 30 (2007).
7
[EFFM02] E NRIGHT D., F EDKIW R., F ERZIGER J., M ITCHELL
I.: A hybrid particle level set method for improved interface capturing. J. Comput. Phys. 183, 1 (2002), 83–116. 2, 6
c 2010 The Author(s)
⃝
c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Journal compilation ⃝

693

[ELF05] E NRIGHT D., L OSASSO F., F EDKIW R.: A fast and
accurate semi-lagrangian particle level set method. Computers
and Structures 83 (2005), 479–490. 2, 6
[EMF02] E NRIGHT D., M ARSCHNER S., F EDKIW R.: Animation and rendering of complex water surfaces. ACM Trans.
Graph. 21, 3 (2002), 736–744. 2, 6
[GA08] G AUDLITZ D., A DAMS N. A.: On improving massconservation properties of the hybrid particle-level-set method.
Computers & Fluids 37, 10 (2008), 1320 – 1331. 3
[GDSS05] G ARIMELLA R. V., DYADECHKO V., S WARTZ B. K.,
S HASHKOV M. J.: Interface reconstruction in multi-fluid, multiphase flow simulations. In In Proc. of International Meshing
Roundtable (September 2005), pp. 19–32. 1, 3
[HK05] H ONG J.-M., K IM C.-H.: Discontinuous fluids. ACM
Trans. Graph. 24, 3 (2005), 915–920. 2
[HN81] H IRT C. W., N ICHOLS B. D.: Volume of fluid (vof)
method for the dynamics of free boundaries. Journal of Computational Physics 39, 1 (1981), 201 – 225. 1, 2, 3
[HW65] H ARLOW F. H., W ELCH J. E.: Numerical calculation
of time-dependent viscous incompressible flow of fluid with free
surface. Physics of Fluids 8, 12 (1965), 2182–2189. 1, 5
[KFL00] K ANG M., F EDKIW R. P., L IU X.-D.: A boundary
condition capturing method for multiphase incompressible flow.
J. Sci. Comput. 15, 3 (2000), 323–360. 2
[KLLR07] K IM B., L IU Y., L LAMAS I., ROSSIGNAC J.: Advections with significantly reduced dissipation and diffusion.
IEEE Transactions on Visualization and Computer Graphics 13,
1 (2007), 135–144. 2, 5
[KSK08] K IM D., S ONG O.-Y., KO H.-S.: A semi-lagrangian
cip fluid solver without dimensional splitting. Computer Graphics Forum 27, 2 (April 2008), 467–475. 5
[LC87] L ORENSEN W. E., C LINE H. E.: Marching cubes: A
high resolution 3d surface construction algorithm. SIGGRAPH
Comput. Graph. 21, 4 (1987), 163–169. 6
[LFK00] L IU X.-D., F EDKIW R. P., K ANG M.: A boundary
condition capturing method for poisson’s equation on irregular
domains. J. Comput. Phys. 160, 1 (2000), 151–178. 2, 5
[LSSF06] L OSASSO F., S HINAR T., S ELLE A., F EDKIW R.:
Multiple interacting liquids. ACM Trans. Graph. 25, 3 (2006),
812–819. 1, 2, 3, 5, 6, 7
[MCG03] M ÜLLER M., C HARYPAR D., G ROSS M.: Particlebased fluid simulation for interactive applications. In SCA
’03: Proceedings of the 2003 ACM SIGGRAPH/Eurographics
symposium on Computer animation (Aire-la-Ville, Switzerland,
Switzerland, 2003), Eurographics Association, pp. 154–159. 2
[MMTD07] M ULLEN P., M C K ENZIE A., T ONG Y., D ESBRUN
M.: A variational approach to eulerian geometry processing.
ACM Trans. Graph. 26, 3 (2007), 66. 2
[Mon05] M ONAGHAN J.: Smoothed particle hydrodynamics. Reports on Progress in Physics 68 (2005), 1703–1759(57). 2
[MSKG05] M ÜLLER M., S OLENTHALER B., K EISER R.,
G ROSS M.: Particle-based fluid-fluid interaction. In SCA ’05:
Proceedings of the 2005 ACM SIGGRAPH/Eurographics symposium on Computer animation (New York, NY, USA, 2005),
ACM, pp. 237–244. 1, 2
[MUM∗ 06] M IHALEF V., U NLUSU B., M ETAXAS D., S USS MAN M., H USSAINI M. Y.: Physics based boiling simulation.
317–324. 3
[OS88] O SHER S., S ETHIAN J. A.: Fronts propagating with curvature dependent speed: algorithms based on hamilton-jacobi formulations. Journal of Computational Physics 79 (1988), 12–49.
1

694

Kang et al. / Multiple Fluid Simulation

[PH04] P HARR M., H UMPHREYS G.: Physically Based Rendering: From Theory to Implementation. Morgan Kaufmann, 2004.
7

where τ f = µ f (∇u + (∇u)T ).
This equation, when integrated over a cell gives

[PKW∗ 08]

PARK J., K IM Y., W I D., K ANG N., S HIN S. Y.,
N OH J.: A unified handling of immiscible and miscible fluids.
Computer Animation and Virtual Worlds 19, 3-4 (2008), 455–
467. 1, 2, 3, 4

αf

[SFK∗ 07]

S ELLE A., F EDKIW R., K IM B., L IU Y., ROSSIGNAC
J.: An unconditionally stable maccormack method. J. Comput.
Phys. (in review) (2007). 5

[SP00] S USSMAN M., P UCKETT E. G.: A coupled level set
and volume-of-fluid method for computing 3d and axisymmetric incompressible two-phase flows. Journal of Computational
Physics 162, 2 (2000), 301 – 337. 3
[SSK05] S ONG O.-Y., S HIN H., KO H.-S.: Stable but nondissipative water. ACM Trans. Graph. 24, 1 (2005), 81–97. 5
[Sta99] S TAM J.: Stable fluids. In SIGGRAPH ’99: Proceedings of the 26th annual conference on Computer graphics
and interactive techniques (New York, NY, USA, 1999), ACM
Press/Addison-Wesley Publishing Co., pp. 121–128. 1, 2, 4, 5
[Sus03] S USSMAN M.: A second order coupled level set and
volume-of-fluid method for computing growth and collapse of
vapor bubbles. Journal of Computational Physics 187, 1 (2003),
110 – 136. 3
[WYS08] WANG Z., YANG J., S TERN F.: Comparison of particle
level set and clsvof methods for interfacial flows. 46th Aerospace
Sciences Meeting and Exhibit, American Institute of Aeronautics
and Astronautics. 3
[You82] YOUNGS D.: Time-dependent multimaterial flow with
large fluid distortion. K. Morton, M. Baines (Eds.), Numerical
Methods for Fluid Dynamics, Academic Press, New York, (1982),
273–285. 3

αf

[ZLLW06] Z HU H., L IU X., L IU Y., W U E.: Simulation of miscible binary mixtures based on lattice boltzmann method. Computer Animation and Virtual Worlds 17, 3-4 (2006), 403–410. 1,
2, 4

Appendix A: Viscosity Derivation
Based on the operator splitting framework, viscosity can be integrated by solving the following PDE:
ut =

1
∇ · τ, or ρut = ∇ · τ,
ρ

∫

ρ f ut dV =

c

From the divergence theorem,
αf

∫

c

∇ · τ f dV = α f

∫

c

∇ · τ f dV.

∫

∂c

τ f dS =

∫

c

∫
∂c

α f ρ f ut dV.

α f τ f dS =

∫
c

∇ · (α f τ f )dV.

Therefore,
α f ρ f ut = ∇ · (α f τ f ).
Dividing both sides by ρ f ,
α f ut = ∇ · (α f τ f /ρ f ).
Here, we make use of the assumption that ρ f is constant for all f .
Summing these equations over all fluids in a cell,

∑ α f ut = ∇ · ∑(α f τ f /ρ f )
which is simplified to
ut = ∇ · ν(∇u + (∇u)T ),
where
ν = ∑ α f (µ f /ρ f ).

Appendix B: Diffusion Coefficients
Let two miscible fluids, A and B be in cells i and i + 1, respectively.
The diffusion fluxes for fluids A and B are given as follows
JAright = DA

[YZF07] Y UE P., Z HOU C., F ENG J. J.: Spontaneous shrinkage
of drops and mass conservation in phase-field simulations. Journal of Computational Physics 223, 1 (10 April 2007), 1–9. 3
[ZBWL07] Z HU H., BAO K., W U E., L IU X.: Stable and efficient miscible liquid-liquid interactions. In VRST ’07: Proceedings of the 2007 ACM symposium on Virtual reality software and
technology (New York, NY, USA, 2007), ACM, pp. 55–64. 1, 2,
4

c

ρ f ut dV = α f

Since volume fraction α f is assumed to be constant within a cell,

[PP04] P ILLIOD J R . J. E., P UCKETT E. G.: Second-order accurate volume-of-fluid algorithms for tracking material interfaces.
J. Comput. Phys. 199, 2 (2004), 465–502. 3
[PTB∗ 03] P REMOZE S., TASDIZEN T., B IGLER J., L EFOHN A.,
W HITAKER R. T.: Particle-based simulation of fluids. Computer
Graphics Forum 22 (2003), 401–410(10). 2

∫

JBle f t

=D

αAi+1 − αAi
∆x

B
B
B αi+1 − αi

∆x

,

where JAright and JBle f t are the diffusion fluxes for fluid A and B, respectively. Since the exchange of flux between two cells is balanced,
we set the sum of the diffusion fluxes zero,
DA
Therefore,

αAi+1 − αAi
∆x

+ DB

αBi+1 − αBi
∆x

= 0.

(
)
(
)
DA αAi+1 − αAi + DB αBi+1 − αBi = 0.

Since αB = 1 − αA ,
(
(
)
)
DA − DB αAi+1 + DA − DB αAi = 0.
Since above equality is satisfies for arbitrary αA , we have DA = DB .
This also holds true for more than three miscible fluids.

where τ = µ(∇u + (∇u)T ).
For each fluid f , we have
ρ f ut = ∇ · τ f ,
c 2010 The Author(s)
⃝
c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Journal compilation ⃝

