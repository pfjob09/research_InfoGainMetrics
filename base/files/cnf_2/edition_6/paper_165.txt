DOI: 10.1111/j.1467-8659.2010.01774.x
Eurographics Symposium on Geometry Processing 2010
Olga Sorkine and Bruno Lévy
(Guest Editors)

Volume 29 (2010), Number 5

Scales and Scale-like Structures
Eric Landreneau

Scott Schaefer

Texas A&M University

Abstract
We present a method for generating scales and scale-like structures on a polygonal mesh through surface replacement. As input, we require a triangular mesh that will be covered with scales and one or more proxy-models to
be used as the scale’s shape. A user begins scale generation by drawing a lateral line on the model to control
the distribution and orientation of scales on the surface. We then create a vector field over the surface to control
an anisotropic Voronoi tessellation, which represents the region occupied by each scale. Next we replace these
regions by cutting the proxy model to match the boundary of the Voronoi region and deform the cut model onto
the surface. The result is a fully connected 2-manifold that is suitable for subsequent post-processing applications
like surface subdivision.
Categories and Subject Descriptors (according to ACM CCS): I.3.5 [Computer Graphics]: Computational Geometry
and Object Modeling—Boundary representations

1. Introduction
An important subset of Computer Graphics involves the
reproduction of biological phenomena. The physical and
chemical processes involved in biology provide a nearly infinite amount of complexity. It therefore becomes useful, and
often necessary, to narrow focus to a single feature or characteristic of a living creature. These features may include the
appearance of a tree, the deformation of musculature, or the
appearance of the retina of an eye. The challenge posed by
these shapes to Geometric Modeling is to provide methods
for controlling this complexity while at the same time allowing for some level of artist control and customization. In this
paper, we focus on a feature common to many species of
animals, the dermal scale.
Scales are a fundamental form of protection for many vertebrate animals. A vertebrate’s scales consist of small, bony
plates embedded in its skin. These bony plates grow in the
epidermis or dermis and emerge partially as the organism
matures. Scales cover regions of an animal’s body, forming a
dermal skeleton which protects the animal from harm while
still providing flexibility. Scales also offer other advantages,
such as improving locomotion or supporting and strengthening the underlying integument [Bro57].
These scales and other scale-like structures, such as porcupine quills, may be difficult or tedious to model. Fortunately,
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

Figure 1: Our technique produces fully connected meshes,
which allows for post-processing methods like surface subdivision. A face partially covered with four-prong scales (left)
and the same face after surface subdivision (right).

these structures tend to be self-similar; that is, each scale resembles every other scale on the surface. Despite this simplicity in modeling a single scale, modeling an entire animal
covered in scales is still a challenging problem. Each scale or
protrusion must be positioned, sized and oriented. Moreover,

1654

E. Landreneau & S. Schaefer / Scales and Scale-like Structures

Figure 2: A fish covered with 3306 scales using our technique. The scale generation region is blue-colored (left). The user
controls the distribution and orientation of the scales by drawing a lateral line on the fish. Our technique uses these inputs to
generate a water-tight model covered with scales (middle). The closeup (right) illustrates the detail achieved by our method.

many applications require the surface be water-tight (for example, if the surface will be used as a subdivision surface
later) and the artist may still have to manually adjust each
scale model to make its topology match adjacent scales. For
surfaces consisting of many hundreds or thousands of scales,
this process can be very time consuming.
We present a new technique for simplifying this process to
control the distribution, scaling, orientation and stitching of
scales over a surface. Given a model of a single scale, we
allow the user to distribute and orient all of the scales on a
surface using a simple stroke of a line. The result is a new,
fully connected surface covered by a network of scales. Our
method proceeds in two phases. The first phase distributes
and orients the scales on the surface, while the second phase
synthesizes a scale in each region and deforms the shape to
create a water-tight model. Hence, with a single stroke, an
artist can easily create a complex scaled surface that would
otherwise require a great deal of time and effort to model.

2. Related Work
One area of research related to our work are methods that
create representations of skin or skin-related features. There
are techniques for representation of human skin [BK08],
modeling fur or hair [KK89], and even feathers [CXGS02].
However, scales are a relatively unexplored topic, despite being common to entire classes of animals. Scales on some animals such as fish exhibit unique distributions and growth patterns that must be modeled to create realistic shapes. Moreover, scales are often anisotropic as opposed to the isotropic
shaft of feathers or hair, which must be accounted for.
Typical methods for generating scale shapes involve the use
of displacement maps [Coo84], and variations of displacement such as height and tilt textures [ADBA09]. Displacements prove useful for adding geometric detail to a surface
while retaining manifold topology. However, they are limited because they cannot reproduce high genus surface details, and have trouble reproducing long, thin displacements.
And while it is possible to use texture synthesis to automatically create displacement maps [YHBZ01], these techniques work best for semi-random patterns of displacements
instead of highly structured 3D shapes. Recent work in shell

maps [PBFJ05], mesh quilting [ZHW∗ 06], and volume texturing techniques [PKZ04] address some of these limitations
and allows complex geometry to be generated in a parameterized space surrounding a mesh surface. However, these
techniques are derived from a 2D parameterization of a set
of charts covering the mesh. These charts each cover large
portions of the mesh and create distortion in the scale generation. In contrast, our technique, based on a centroidal
Voronoi tessellation, does not require such a parameterization.
Centroidal Voronoi tessellations, or CVTs, generate wellspaced distributions of points [DFG99] [DGJ02]. They have
a variety of applications, such as simulating the spacing of
cells in the human retina [Dee05]. CVTs partition a mesh
into well-formed regions, as utilized in Cohen-Steiner et
al. [CSAD04], without requiring a 2d parameterization of
the surface. Our method derives scale regions, each representing a scale and its surrounding skin, from an anisotropic
CVT. This CVT provides positions for scales and defines the
shape of each region to be replaced with scale geometry.
While a CVT provides us with positions for scales, we also
need scale orientations. Vector fields are a useful tool for
defining orientations on a surface, and can guide 2D texture synthesis as shown in [YHBZ01, FSDH07, XCOJ∗ 09].
These fields also aid in generating 3D textures [BIT04], in
geometry orientation as shown by Zhou et al [ZHW∗ 06], and
texture orientation such as shown by Praun et al [PFH00].
Additional work in this area includes improved control over
vector fields [ZMT06] and describing rotational symmetries
on surfaces [PZ07, RVLL08]. Our work uses a surface vector field to determine orientation of scales, as well as for
anisotropy in the Voronoi tessellation.

3. Squamation
The pattern of scales on the skin of an animal is called squamation [SA90]. Not only do shapes of individual scales vary
from animal to animal, but squamations vary as well. Due to
this variety, we wish to develop a general purpose technique
for creating a plausible squamation on a mesh’s surface. This
squamation guides the synthesis of the scales by determining the positioning and shape of scale regions. To establish
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

E. Landreneau & S. Schaefer / Scales and Scale-like Structures

1655

Figure 3: An illustration of Leucichthys sisco huronius, a
Lake Huron herring. Red arrows denote the begin and end
of the lateral line, which is highlighted to improve clarity.

a framework for a generalized squamation, we first observe
some common qualities of animal scales.
While individual animal species may exhibit unique squamations, these patterns tend towards hexagonal arrangements. Kardong [Kar98] describes fish scales as arranging in
three primary directions, with hexagonal or diamond shapes,
as seen in Figure 3. These packed hexagonal patterns are
reminiscent of Voronoi diagrams of well-distributed points.
Specifically, these patterns are similar to those produced by
centroidal Voronoi tessellations [DFG99]. These tessellations tend to create hexagonal structures and have been used
to depict reptile skin [IMS03] and other natural phenomena.
We represent scales as points on the surface. For each scale,
we also associate with that scale a direction vector ox , which
is defined to be in the tangent plane of the surface. We then
define a orthonormal coordinate frame at the scale by setting
oz to be the normal of the surface and oy = oz × ox . This
frame will orient each scale on the surface. Finally, we define the region associated with a scale to be the Voronoi diagram of the scale-sites restricted to the surface. We utilize
the method of Teichmann et al. [TT97] to create an approximate Voronoi tessellation on the surface. We color each vertex by its closest site and adaptively subdivide faces based
on these vertex colorations. This subdivision produces a discrete approximation to the Voronoi diagram restricted to the
surface. For surfaces that have more polygons/vertices than
the number of scale-sites, this discrete Voronoi diagram will
approximate the true Voronoi diagram well.
3.1. The Lateral Line
One way to form a squamation is to simply randomly distribute scales (as Voronoi sites) on a surface and use Lloyd’s
algorithm [Llo82] to obtain a centroidal Voronoi tessellation. While this process generates evenly distributed, mostly
hexagonal arrangements of scales, we desire more control
over the squamation. In particular, we wish to provide a
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

Figure 4: The user draws a lateral line (top) to create several scale-sites along that line, colored dark, that we use to
recursively spawn new scale-sites to fill the rest of the surface (left). After running Lloyd’s algorithm with the scalesites along the lateral line fixed in place, the sites converge
(right). The arrows depict the orientation of each site to
show how the lateral line influences the vector field.

mechanism to the artist that allows them to control the shape
and orientation of the squamation.
Our inspiration for providing this control to the artist comes
from a common anatomical feature of fish called the lateral
line. Scale morphogenesis in bony fish often follows the lateral line [Bro57]. This lateral line corresponds to a row of
scales across the body of a fish, and the squamation will conform to this shape. Figure 3 illustrates a lake herring’s lateral
line, seen as a faint line across the middle of the body.
Just as a fish’s lateral line guides the growth of its scales,
we employ an artist-drawn lateral line to guide our squamation. Given a model, the artist draws a single stroke in
image space. We project this line from image space onto the
model and create scale-sites by sampling this line at intervals
of γ in model space. This parameter γ controls the approximate size of the scales and is user-defined. For each of these
scale-sites, we create the orientation vector ox by sampling
the derivative of the lateral line curve, projecting this vector
into the tangent plane of the surface and renormalizing.
These lateral line scale-sites serve as seed points for the rest
of the scales. We provide a simple, coarse seeding algorithm
that creates a roughly hexagonal distribution of scales over
the surface. This initial distribution will later be refined in
Section 3.3. However, the initial distribution of sites affects

1656

E. Landreneau & S. Schaefer / Scales and Scale-like Structures

Figure 6: Voronoi tessellation on a model where each region
represents a single scale.
Figure 5: We represent Voronoi sites as line segments, which
can be adjusted to provide an isotropic tessellation (left, α =
0) or anisotropic tessellation (right, α > 0). Arrows denote
the orientation of the site.

convergence speed and quality and we have found that this
approximately hexagonal seeding pattern produces better results in practice than random seeds.
Starting with the scale-sites on the lateral line, we perform
a breadth-first-like expansion. For each scale-site, we create
new adjacent scales in 6 evenly spaced directions using the
vectors spanning the tangent plane ox , oy at distance γ. For
each new scale-site, we project it onto the surface along the
normal of its parent scale oz . We then create an orthogonal
frame for this new scale-site by sampling the normal of the
surface at this point n and performing a rotation of the parent’s frame about the axis oz × n with the angle between n
and oz . If this new scale-site lies outside the region of the
mesh scales will be grown on or the distance from the new
scale-site to any existing scale-site is less than γ, we discard the newly generated scale-site. This spawning process
recurses until no more scale-sites can be grown. The resulting configuration of scales covers the mesh with a roughly
hexagonal pattern. Figure 4 (left) shows the distribution produced by this recursive spawning process.
3.2. Surface Vector Field
While each scale-site contains an orientation, there may be
large deviations between adjacent scale-site orientations depending on spawn order and the shape of the underlying surface. We would like to provide a vector field over the entire
surface to control scale orientation such that the orientation
changes smoothly over the surface. With this per-vertex orientation field, the orientation of each scale-site will simply
be inherited from the closest point on the surface. However,
there are several constraints for this vector field. First, we
would like to maintain the orientations that the user provided
by drawing the lateral line. Second, the orientation field must
lie in the tangent plane of the surface.
We create this vector field using a two-level, iterative approach. First, we create a Delaunay triangulation of the
scale-sites by taking the dual of the Voronoi diagram. Next,

we perform an iterative smoothing process where each iteration consists of three steps. First, we perform a Laplacian smoothing step using the cotan weights [PJP93] on the
direction vectors associated with each scale-site. However,
this smoothing process affects the lengths and directions of
the vectors so that they are no longer unit and in the tangent plane of the surface. Therefore, we reproject those vectors into the tangent plane at each scale-site and renormalize
the vectors. We also hold the direction vectors for scale-sites
along the lateral line constant.
After running this process to convergence, we propagate the
direction vectors at the scale-sites to all of the surface vertices within the corresponding Voronoi region and repeat this
iterative process again using the triangulation of the surface.
Again, we hold the direction vector constant during this process for the nearest surface vertex to each point along the
lateral line. This two-level, constrained smoothing process
is similar to a multi-grid method and we observe similar increases in speed and stability over simply performing this
process on the surface vertices alone. Figure 4 shows the result of this optimization on the direction field.

3.3. Scale Region Improvement
Once we have a vector field, we create an anisotropic
Centroidal Voronoi Tessellation (CVT) using Lloyd’s algorithm [Llo82] to improve the distribution of the scales. We
desire anisotropic regions associated with the scales since
scales are flattened plates that emerge from the skin and their
intersection with the skin is not isotropic.
To create an anisotropic CVT we keep much of Lloyd’s algorithm the same: compute the Voronoi region associated
with each scale-site and move the site to the centroid of
its Voronoi region. We create anisotropy by modifying the
Voronoi region itself by computing the distance to a line
segment instead of a point. For each scale-site, we extrude
a line from the site’s position in the directions of oy and −oy
by a user-given amount α ≥ 0 that controls the amount of
anisotropy as shown in Figure 5. For scale-sites that are not
part of the lateral line, we move the sites to the center of their
Voronoi regions and reproject them onto the surface. We then
update the frame associated with these scale-sites by setting
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

E. Landreneau & S. Schaefer / Scales and Scale-like Structures

1657

Figure 8: Scale cutting, before(left) and after(right). A cutting boundary (red) derived from the scale’s Voronoi region
resizes until it fits the safety region(blue).
Figure 7: Examples of different artist-created proxy models.

oz to the normal of the surface at that point and sampling ox
from the vector field on the surface from Section 3.2.
Although we could alternatively use an anisotropic tessellation as described by [DW05], we have found that using a line
segment for anisotropy tends to create diamond shaped regions, rather than the elongated hexagons in Du et al.’s work.
These diamond shapes tend to interleave, which allows protrusions of the scales to overlap more as seen in Figure 6.
4. Scale Synthesis
Since scales tend to be self-similar, we require the artist to
provide only a single model of a scale, which we call the
proxy model. For ease of use, we request that the scale protrude from the xy-plane and be oriented such that the y-axis
contains the greater amount of anisotropy since we will orient the y-axis in scale space with the vector oy for each scale
site. Given an anisotropic CVT, we replace each region corresponding to a scale with the proxy model, which we cut
and fit to the boundary of that region. While we could use a
method like SnapPaste [SBSCO06] to create these scales, we
replace the entire surface with scales instead of using a single model in an isolated region of the surface. Consequently,
we create an algorithm that allows us to process each scale
independent of all other scales on the surface, which lends
itself well to a parallel implementation.
Our first step is to transform the region corresponding to a
scale to scale space. While we could perform this transformation using some localized parameterization method such
as Liu et al. [LZX∗ 08], most of these regions tend to be
nearly planar and simple projection suffices. Let the scalesite be located at p with an orthonormal frame ox , oy , oz .
Given a point v part of the scale’s Voronoi region, we transform this point using vˆx = (v − p) · ox , vˆy = (v − p) · oy .
4.1. Cutting
To cut the proxy model such that it fits the flattened Voronoi
region, we use the boundary of the flattened Voronoi region
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

as a cutting template. We also resize the boundary so that
it closely fits the protruding region of the scale. We begin
by finding a safety region on the proxy mesh. We mark each
face containing a vertex above a user-specified z threshold as
unsafe with the remaining faces being safe to cut. Figure 8
illustrates this safety region and cutting boundary.
Once we have marked the region of the proxy model that is
unsafe to cut, we iteratively resize the flattened Voronoi region to the scale. First, we fit the Voronoi region to the safety
region so that the scale fills as much of the Voronoi region as
possible. To do so, we translate the flattened Voronoi region
to the centroid of the safety region and shrink the flattened
Voronoi region until its boundary just intersects the safety
region. We then find the closest edge of the safety region to
the boundary and move the Voronoi region along that safety
edge’s normal until another safety edge is hit. We label the
distance we moved along the safety edge’s normal direction
ρ. We then reposition the Voronoi region at the midpoint distance ρ/2 from its original position. Repeating this process
of scaling and moving the flattened Voronoi region generates
a fit that conforms to the shape of the scale.
Next, we cut the proxy model to fit the flattened Voronoi region using the boundary of the Voronoi region. We project
each boundary vertex vertically along the z axis until it hits a
triangle of the proxy model, which is then stellated by connecting the projected vertex to the three vertices of the triangle (Figure 9 top right). After performing this repeated
stellation, some of the edges of the boundary may intersect edges of the proxy model’s polygons. For these edges,
we introduce new vertices where the edge between adjacent
boundary vertices intersects the edges of the proxy model
(Figure 9 bottom left). After this process is complete, we
can discard the polygons of the proxy model that lie outside
the flattened Voronoi region.
While this process produces a proxy model whose boundary
conforms to that of the Voronoi region, we may have introduced new vertices when boundary edges intersect edges of
the proxy model. We would like to create a water-tight result
when stitching adjacent scales together and, therefore, cannot introduce new vertices along the boundary. Our solution

1658

E. Landreneau & S. Schaefer / Scales and Scale-like Structures

Figure 10: A bent cylinder with two types of scales applied.
Figure 9: Top left:triangulation of a proxy model with the
boundary of the flattened Voronoi region in red. Top right:
stellating the proxy model triangles using the boundary vertices. Bottom left: performing edge splits. Bottom right:
shrinking the triangulation and stitching to the boundary.

is to scale the cut proxy model to be slightly smaller. After
scaling, we connect the boundary vertices of the Voronoi region to the corresponding vertices of the scaled/cut proxy
model and triangulate these quadrilaterals by connecting
the remaining proxy model boundary vertices to the closest boundary vertex of the Voronoi region (Figure 9 bottom
right). The result is a proxy model whose boundary conforms exactly to the boundary of the original Voronoi region.

its barycentric coordinates in that triangle. These points become hard constraints for the local deformation that, along
with the Laplacian optimization, create a linear system of
equations for the positions of the deformed vertices.
Laplacian surface deformation performs best when rotations
are small. Therefore, before optimization, we find the best
similarity transformation (translation, rotations and uniform
scaling) that maps the flattened Voronoi region to its unflattened 3D position on the surface using the method in Zhu et
al. [ZG07]. We then apply that transformation to each vertex
of the cut proxy model before Laplacian deformation.

5. Results
4.2. Merging
Using the cut and triangulated model of the scale from Section 4.1, we now map this scale onto the Voronoi region on
the surface model. While the proxy model protrudes from
a flat plane, the Voronoi region on the surface is typically
curved. Therefore, we must deform the cut proxy model to
fit onto the surface smoothly.

We tested our method on a variety of meshes, using several different proxy models. We first tested a bent cylinder,
shown in Figure 10. The user drew a small lateral line on the
upper right portion of the cylinder, and automatically generated scales covering the remainder of the mesh. Note that
the direction of the scales smoothly change with the shape
of the cylinder, following the surface vector field.

We use a simple Laplacian deformation with implicit optimization [SCOL∗ 04] to deform the surface due to its simplicity, though many other deformation methods could be
used. To make sure that the mesh is water-tight with adjacent
scales and that the smoothness of the scales matches that of
the surface along the scale boundaries, we constrain the positions of the outer two rings of vertices for the cut proxy
model. Notice that the flattened Voronoi region provides a
map from the xy-plane in scale space back to the corresponding point on the surface. For each point in the 2-ring of the
boundary, we find the triangle in the flattened Voronoi region
containing the point and map the point to the surface using

Our second example, in Figure 11 tests a high genus proxy
model, containing a hole, on a sphere. This illustrates an advantage over displacement techniques. Surface displacement
alters existing geometry by subdividing the surface and modifying vertex positions but cannot alter the genus of the surface. Displacement works best with simple structures such as
bumps or ridges where the surface displaces along the normal. Complex structures such as serrations require specialized displacements like height-and-tilt textures [ADBA09].
In contrast, our method performs geometry replacement,
which allows us to create complex, high-genus scale structures without any displacement.
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

E. Landreneau & S. Schaefer / Scales and Scale-like Structures

1659

Figure 11: A sphere covered with high genus scales.

To show a practical application of our technique, we applied
the scales to a model of a redfish, shown in Figure 2. A user
painted a region of the model as a scale growth region to
limit the region we allow scales to grow in. The user then
drew a lateral line across the body to produce the squamation present in the image. Our method creates a plausible
distribution and orientation of the scales using this input and
produces a water-tight surface.
In another test using two different scales, we create scales on
the body of a lizard, in Figure 13. The lateral line’s scales use
a long, smooth spine for their proxy models whereas other
scales use a shorter, serrated spine. For such long, spindly
structures, standard displacement mapping would produce
heavily distorted triangulations due to the difference in surface area. Furthermore, the serrated pattern is incompatible
with standard displacement mapping because a single vertical displacement would map to several points on the spine.
In Figure 1, an artist colored the forehead as a scale generation region and drew a lateral line up the middle of the
forehead. Using the 4-pronged proxy model provided by the
user, our method grew scales up the forehead of the model.
We then performed Loop subdivision [Loo87] on this surface to demonstrate the water-tight nature of our surfaces.
Our approach does have some limitations though. Since we
do not explicitly detect intersections between scales, it is
possible that some scales may protrude into adjacent regions
especially in the presence of high amounts of negative curvature with respect to the size of the scale. Figure 12 shows
an example of such intersection in the center of the saddle.
Large positive curvature of the surface model such as high
frequency ridges with respect to scale size can also cause
issues because we only constrain the boundary of the scale
to match the surface geometry. Laplacian deformation will
tend to create something similar to a minimal surface in this
situation instead of extrapolating the shape of the ridge. Nevertheless, in most situations, our method tends to work well.
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

Figure 12: A problem case for our method. High frequency
details and regions of high negative curvature with respect to
the scale size may cause self-intersection or twisting during
scale deformation.

6. Conclusions and Future Work
We have provided a novel surface-replacement technique
that generates scales and scale-like structures on a mesh. Our
technique gives an artist the ability to control the arrangement of scales using a single stroke. Our method automatically fills a region with oriented scales and generates a well
connected surface from artist-created proxy models.
While our method currently creates Voronoi regions of approximately equal size using a CVT, some animals such as
certain lizards have scales that change size over different
regions of their skin. We believe that we can extend our
method to use a sizing field and a weighted CVT though
it is unclear if the sizing field will harm the convergence of
the anisotropic extension of Lloyd’s algorithm.
Currently, our method uses a single stroke to control the distribution and orientation of the scales on the surface. We
could also allow for more user control with a method like
that presented by Fisher et al. [FSDH07]. Adding this control
lacks the biological motivation we used with the lateral line
of fish, but may be useful in practice when modeling complex structures. Doing so would require modifications to the
spawning processes, but would not fundamentally change
most of the algorithm and is certainly an area to explore in
the future.

1660

E. Landreneau & S. Schaefer / Scales and Scale-like Structures

Acknowledgements
Thanks to Jessica Riewe for the face model seen in Figure 1.
This work was supported by NSF grant CCF-07024099.
References
[ADBA09] A NDERSEN V., D ESBRUN M., B ÆRENTZEN J. A.,
A ANÆS H.: Height and tilt geometric texture. In ISVC (1)
(2009), pp. 656–667.
[BIT04] B HAT P., I NGRAM S., T URK G.: Geometric texture synthesis by example. In Proceedings of the Symposium on Geometry processing (2004), pp. 41–44.
[BK08] BARANOSKI G. V. G., K RISHNASWAMY A.: Light interaction with human skin: from believable images to predictable
models. In SIGGRAPH ASIA courses (2008), pp. 1–80.
[Bro57] B ROWN M. E. (Ed.): The Physiology of Fishes. Academic Press Inc., New York, 1957.

Figure 13: A lizard model with two different types of spines
on its back: a long, smooth spine and a short, serrated spine.

[Coo84] C OOK R. L.: Shade trees. In Proceedings of SIGGRAPH
(1984), pp. 223–231.

[PJP93] P INKALL U., J UNI S. D., P OLTHIER K.: Computing discrete minimal surfaces and their conjugates. Experimental Mathematics 2, 1 (1993), 15–36.

[CSAD04] C OHEN -S TEINER D., A LLIEZ P., D ESBRUN M.:
Variational shape approximation. In Proceedings of SIGGRAPH
(2004), pp. 905–914.

[PKZ04] P ENG J., K RISTJANSSON D., Z ORIN D.: Interactive
modeling of topologically complex geometric detail. In Proceedings of SIGGRAPH (2004), pp. 635–643.

[CXGS02] C HEN Y., X U Y., G UO B., S HUM H.-Y.: Modeling
and rendering of realistic feathers. In Proceedings of SIGGRAPH
(2002), pp. 630–636.

[PZ07] PALACIOS J., Z HANG E.: Rotational symmetry field design on surfaces. ACM Trans. Graph. 26, 3 (2007), 55.

[Dee05] D EERING M. F.: A photon accurate model of the human
eye. In Proceedings of SIGGRAPH (2005), pp. 649–658.

[RVLL08] R AY N., VALLET B., L I W. C., L ÉVY B.: Nsymmetry direction field design. ACM Trans. Graph. 27, 2
(2008), 1–13.

[DFG99] D U Q., FABER V., G UNZBURGER M.: Centroidal
Voronoi Tesselations: Applications and Algorithms. SIAM Review 41, 4 (1999), 637–676.

[SA90] S IRE J.-Y., A RNULF I.: The development of squamation
in four teleostean fishes with a survey of the literature. Ichthyological Research 37, 2 (1990), 133–143.

[DGJ02] D U Q., G UNZBURGER M. D., J U L.: Constrained centroidal voronoi tessellations for surfaces. SIAM J. Sci. Comput.
24, 5 (2002), 1488–1506.

[SBSCO06] S HARF A., B LUMENKRANTS M., S HAMIR A.,
C OHEN -O R D.: Snap-paste: An interactive technique for easy
mesh composition. The Visual Computer 22, 9-11 (2006), 835–
844.

[DW05] D U Q., WANG D.: Anisotropic centroidal voronoi tessellations and their applications. SIAM J. Sci. Comput. 26, 3
(2005), 737–761.
[FSDH07] F ISHER M., S CHRÖDER P., D ESBRUN M., H OPPE
H.: Design of tangent vector fields. In Proceedings of SIGGRAPH (2007), p. 56.
[IMS03] I TOH T., M IYATA K., S HIMADA K.: Generating organic
textures with controlled anisotropy and directionality. IEEE
Computer Graphics and Applications 23 (2003), 38–45.
[Kar98] K ARDONG K. V.: Vertebrates: Comparative Anatomy,
Function, Evolution. McGraw-Hill, 1998.
[KK89] K AJIYA J. T., K AY T. L.: Rendering fur with three
dimensional textures. In Proceedings of SIGGRAPH (1989),
pp. 271–280.
[Llo82] L LOYD S. P.: Least squares quantization in PCM. IEEE
Trans. on Information Theory IT-28, 2 (Mar. 1982), 129–137.
[Loo87] L OOP C.: Smooth Subdivision Surfaces Based on Triangles. Department of mathematics, University of Utah, 1987.
[LZX∗ 08] L IU L., Z HANG L., X U Y., G OTSMAN C., G ORTLER
S. J.: A local/global approach to mesh parameterization. Computer Graphic Forum 27, 5 (2008), 1495–1504.
[PBFJ05] P ORUMBESCU S. D., B UDGE B., F ENG L., J OY K. I.:
Shell maps. ACM Trans. Graph. 24, 3 (2005), 626–633.
[PFH00] P RAUN E., F INKELSTEIN A., H OPPE H.: Lapped textures. In Proceedings of SIGGRAPH (2000), pp. 465–470.

[SCOL∗ 04] S ORKINE O., C OHEN -O R D., L IPMAN Y., A LEXA
M., RÖSSL C., S EIDEL H.-P.: Laplacian surface editing. In
Proceedings of the Symposium on Geometry processing (2004),
pp. 175–184.
[TT97] T EICHMANN M., T ELLER S.: Polygonal Approximation
of Voronoi Diagrams of a Set of Triangles in Three Dimensions.
Tech. rep., Tech Rep 766, Lab of Comp. Sci., MIT, 1997.
[XCOJ∗ 09] X U K., C OHEN -O R D., J U T., L IU L., Z HANG H.,
Z HOU S., X IONG Y.: Feature-aligned shape texturing. ACM
Trans. Graph. 28, 5 (2009), 1–7.
[YHBZ01] Y ING L., H ERTZMANN A., B IERMANN H., Z ORIN
D.: Texture and shape synthesis on surfaces. In Proceedings
of the Eurographics Workshop on Rendering Techniques (2001),
pp. 301–312.
[ZG07] Z HU Y., G ORTLER S. J.: 3D Deformation Using Moving
Least Squares. Harvard Computer Science Technical Report: TR10-07. Tech. rep., Harvard University, Cambridge, MA, 2007.
[ZHW∗ 06] Z HOU K., H UANG X., WANG X., T ONG Y., D ES BRUN M., G UO B., S HUM H.-Y.: Mesh quilting for geometric texture synthesis. In Proceedings of SIGGRAPH (2006),
pp. 690–697.
[ZMT06] Z HANG E., M ISCHAIKOW K., T URK G.: Vector field
design on surfaces. ACM Trans. Graph. 25, 4 (2006), 1294–
1326.

c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

