Pacific Graphics 2008
T. Igarashi, N. Max, and F. Sillion
(Guest Editors)

Volume 27 (2008), Number 7

Real-time Animation of Sand-Water Interaction
Witawat Rungjiratananon, Zoltan Szego, Yoshihiro Kanamori and Tomoyuki Nishita
The University of Tokyo, Japan
{witawat,szegoz,pierrot,nis}@nis-lab.is.s.u-tokyo.ac.jp

Abstract
Recent advances in physically-based simulations have made it possible to generate realistic animations. However, in the case of solid-fluid coupling, wetting effects have rarely been noticed despite their visual importance
especially in interactions between fluids and granular materials.
This paper presents a simple particle-based method to model the physical mechanism of wetness propagating
through granular materials; Fluid particles are absorbed in the spaces between the granular particles and these
wetted granular particles then stick together due to liquid bridges that are caused by surface tension and which
will subsequently disappear when over-wetting occurs. Our method can handle these phenomena by introducing
a wetness value for each granular particle and by integrating those aspects of behavior that are dependent on
wetness into the simulation framework. Using this method, a GPU-based simulator can achieve highly dynamic
animations that include wetting effects in real time.
Categories and Subject Descriptors (according to ACM CCS): I.3.7 [Computer Graphics]: Three-Dimensional
Graphics and Realism

1. Introduction
Almost anyone who has spent time at the beach as a child
has no doubt played with sand. When wet, sand becomes
sticky enough to create sculptures of various shapes and
sizes. These works of art then often crumble away under the
onslaught of waves, never to be seen again.
Physically-based simulations are becomimg increasingly
popular in computer graphics, with realistic animations of
rigid bodies, fluids and soft bodies all becoming possible.
Unfortunately, those fond memories of the beach cannot be
completely recreated as yet. That is, there are no methods
that take moisture absorption into account when simulating
the dynamics of granular materials such as sand.
In this paper, we propose a method that adds the effects of moisture absorption to a simulation of fluids and
granular materials. We based our method on a traditional
particle-based simulation framework in order to achieve dynamic animations. We use the Discrete Element Method
(DEM) [CS79] to simulate granular materials and Smoothed
Particle Hydrodynamics (SPH) [Luc77,GM77] for fluids. At
the interface between the fluid and the granular particles, the
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

Figure 1: A pile of sand consisting of 16k particles. The
frame rate is about 30 fps.

fluid is absorbed into the gaps between the particles, thereby
increasing their wetness. These particles then attach themselves to each other due to the liquid bridges that form between them. The liquid bridges are caused by surface tension, and disappear if the material becomes too wet, releas-

1888

Rungjiratananon et al / Real-time Animation of Sand-Water Interaction

ing the bond between the particles. To model these physical
phenomena, we introduce a wetness value for each granular particle, and extend the simulation framework to handle
the behavior of these particles with regard to their wetness.
Our proposed model is a simplified physical model, targeting
games and other interactive applications. The simulator, running entirely on a GPU, can produce animated scenes such
as that in Figure 1 in real time.
The rest of this paper is composed as follows: Section 2
reviews other research related to our method, Section 3 introduces the simulation algorithms that our method is based on,
Section 4 describes the method in detail. After showing several experimental results in Section 6, Section 7 concludes
this paper.
2. Related Work
Physically-based simulation has a long history in computer
graphics. In this section, we introduce some of the many
techniques that have been proposed which relate to fluid and
granular simulations, along with the interactions between
different types of materials.
2.1. Fluids

fields [LM93, SOH99, ON03] or handle the material as a
fluid [ZB05]. However, representing dynamic scenes including the scattering of particles is difficult when using these
methods. Bell et al. [BYM05] used the Discrete Element
Method (DEM) [CS79] to represent scenes as separate particles, and Harada [Har07] implemented a DEM simulation on
the GPU. We use DEM in order to be able to handle dynamic
animations.
2.3. Coupling Methods
Some methods handle the interactions of different material types such as fluids and rigid bodies [CMT04, BBB07,
APKG07] or fluids and soft bodies [CGFO06].
Liu et al. [LZLW05] used height fields and the volume of
fluid method to model the case of fluids on the surface of an
object being absorbed and causing erosion. However, their
method cannot represent small-scale movements or complex
changes in the object’s topological structure.
Wojtan et al. [WCMT07] handled the animation of natural
phenomena such as erosion, sedimentation, and acidic corrosion. They provided an example in which a sandcastle is
washed away, but while the volume of sand decreases, there
are no signs of scattering of the sand or of water absorption.

Fluid simulations are divided into the Eulerian and Lagrangian methods; we will focus on the latter. Lagrangian
methods approximate a continuous fluid using a set of particles and model their behavior. Unlike the situation with
Eulerian methods, there is no numerical dispersion, making Lagrangian techniques useful for simulations which include large topological changes in the fluid interface. In the
field of computer graphics, Smoothed Particle Hydrodynamics (SPH) [MCG03] and the Moving Particle Semi-implicit
(MPS) method [KO96, PTB∗ 03] are already well-known.
The former solves the particle advection equation explicitly,
while the latter solves it implicitly. The former seems to be
the preferred method for computer graphics due to its computational simplicity.

By using a particle-based method, we can represent even
small-scale interactions between water and sand. Furthermore, by taking into account the wetness of the granular material when calculating its behavior, we can model phenomena such as cohesion, erosion and the absorption of water.

Following the proposal to apply SPH-based fluid simulations to interactive applications by Müller et al. [MCG03],
various other methods, e.g. viscoelastic fluids [CBP05] and
multiple interacting fluids [MSKG05] have already been
presented. Techniques to accelerate SPH make use of hierarchical data structures [KW06], adaptive sampling density [APKG07] or GPU-based computation [HKK07]. Our
method also uses SPH for the fluid simulation.

3.1. Smoothed Particle Hydrodynamics (SPH)

3. Fundamental Simulation Methods
In this section, we briefly introduce those simulation methods that form the basis of our work, i.e SPH and DEM, with
special regard to the force calculations that are essential to
the simulation. The interactions at the interfaces of the SPH
and DEM regions are explained separately in Section 4.3.

SPH is a particle-based simulation method, which was originally developed for use in astronomy [Luc77,GM77]. It uses
a set of particles as a discrete approximation of a continuum,
expressing a field quantity A(x) by interpolating between the
respective quantities around point x; namely Ai for each particle i, as follows:
A(x) = ∑ mi
i

2.2. Granular Materials
The dynamics of materials such as sand, gravel or grain are
usually represented either as a continuum or as a set of individual particles.
For the continuum approach, several methods use height

Ai
W (x − xi , h),
ρi

(1)

where mi is the mass of particle i, ρi is its density and xi
its position. The function W (x, h) is a smoothing kernel with
core radius h.
When applied to fluids, each of the terms in the
governing Navier-Stokes equations are expressed in the
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Rungjiratananon et al / Real-time Animation of Sand-Water Interaction

1889

above-mentioned format. The formulaization of Müller et
al. [MCG03], which we also use in our method, keeps forces
between particles symmetric by calculating the pressure and
viscosity terms as follows:
pressure

Fi

= −∑mj

pi + p j
∇W (xi − x j , h),
2ρ j

(2)

= µ∑mj

v j − vi 2
∇ W (xi − x j , h),
ρj

(3)

j

viscosity

Fi

j

Figure 2: Liquid bridges. For illustration purpose, the distance between particles is exaggerated.

where µ, pi and vi represent the viscosity coefficient, the
pressure and the velocity of the particles, respectively. For
more details, please refer to their paper [MCG03].
3.2. Discrete Element Method (DEM)
DEM is also a particle-based simulation method, which was
originally used for rock mechanics problems [CS79]. For a
pair of colliding particles i and j, it calculates the normal
and
and tangential forces acting on the particles: Fnormal
i
tangential
Fi
. Note that the normal direction is defined by the
vector from a center x j to xi while the tangential direction is
defined as perpendicular to the normal direction. The normal
force is modeled in terms of springs and dampers between
the particles, while the tangential force is due to friction.
spring

= Fi
Fnormal
i
spring

,

Fi

= ks (d − xi − x j )

damper

= kd vnormal
,
ij

Fi

tangential

Fi

damper

+ Fi

= kt

tangential
vi
tangential
vi

(4)
vnormal
ij
vnormal
ij

,

(5)
(6)

,

(7)

where ks is the spring constant, d = ri + r j (ri and r j are
the radii of particles i and j), kd is the damper coefficient,
tangential
vnormal
and vi
are the particles’ relative normal and
ij
tangential velocities and kt is the coefficient of friction.
4. Interactions between Fluids and Granular Materials
with Wetting Effects
This section describes a method for computing the interactions between fluids and granular materials. First, we introduce a physical mechanism for the propagation of wetness,
followed by a presentation of the outline of our method, and
then we finally describe it in detail.
4.1. Background and Overview
A pile consisting of a granular material includes a vast number of small spaces between the individual partices. When
such a pile comes into contact with a fluid, wetness is absorbed into the spaces and propagates through the material,
mainly induced by capillary forces. Similar descriptions can
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Figure 3: Overview of our method. Wetness is provided by
fluid particles, and then propagates through granular particles.

be found in studies into the weathering of stones [DEJ∗ 99]
and on-surface flows [LZLW05].
The presence of wetness among granular particles forms
structures called liquid bridges (Figure 2) due to the surface
tension of the liquid. These liquid bridges induce grain-tograin attractive forces and strengthen the cohesion of the
material. They are therefore essential for the construction
of sand castles. The force yielded by a liquid bridge can be
computed in an extremely simple case (i.e. two spheres only)
using a theoretical formula that agrees well with experimental data. However, in cases where there are many granular
particles, the liquid-bridge forces are difficult to consider because their shapes become complicated, and, to the best of
our knowledge, there are no reasonable theoretical models
available as yet. Refer to the paper [Her05] for recent advances in the physics of wet granular materials.
This paper presents a simple, empirical model for the
propagation of wetness and the forces yielded by wetness.
In our model, each granular particle is regarded as spherical,
and has an individual wetness value. We assume that the intensity of the liquid-bridge forces reduce linearly with regard
to wetness. We also assume that, in the propagation of wetness, gravity has much less influence compared to the capillary forces and thus can be ignored. Our method computes
the interactions of a granular particle with fluid particles and
other granular particles, according to its wetness (Figure 3):
Interactions with fluid particles: Inter-particle forces are
computed based on SPH. Then, if the wetness value of the
granular particle does not reach a threshold, the granular

1890

Rungjiratananon et al / Real-time Animation of Sand-Water Interaction

where R is the base radius used in DEM, and kr is a coefficient. This modification allows us to represent the depression of wet surfaces composed of granular materials. Figure 5 shows a 2D comparison between a real photo and our
simulated result.
Figure 4: Terms according to the wetness value. Each bar
indicates the wetness value.

(a) Real photo

(b) 2D simulation

Figure 5: 2D comparison in which a flat surface is
depressed due to moisture absorption. Photograph
(http://cropsoil.psu.edu/Courses/Soils101/Labs/sec315.html) courtegy of Prof. Daniel D. Fritton and Katharine
L. Butler.

particle receives wetness from the fluid particles, and the
fluid particles disappear (Section 4.3).
Interactions with other granular particles: Attractive
forces yielded by liquid bridges are computed in addition
to the forces used in DEM. Then, if the wetness value of
the granular particle exceeds a threshold, the excessive
wetness is distributed equally to those neighboring
particles whose wetness values are below the threshold
(Section 4.4).
Additionally, we control the propagation speed of wetness
among granular particles (Section 4.5).

4.3. Interactions between Fluid and Granular Particles
When fluid particle i collides with granular particle j, our
method first computes the inter-particle forces. The forces
for fluid particle i are computed based on SPH (Section 3.1)
by regarding granular particle j as a fluid particle that has a
constant density and pressure, and by modifying Equations
2 and 3:
V Vg
pressure
= − i (pi + pg )∇W (xi − x j , h),
(9)
Fi j
4
V Vg
viscosity
Fi j
= µ i ∇2W (xi − x j , h),
(10)
2
where Vi = mi /ρi is the volume of fluid particle i, Vg is the
volume of the granular particle, and pg is a constant prespressure
viscosity
sure. For granular particle j, −Fi j
and −Fi j
are
added as external forces.
We assume that a fluid particle has a wetness value w f luid .
After the computation of forces, if there are dry or wet particles in the vicinity of the fluid particle, the fluid particle
is absorbed by them. That is, the fluid particle equally distributes its wetness value w f luid to the dry or wet particles,
then disappears.
4.4. Interactions among Granular Particles
Our method modifies the computation of forces in DEM
(Section 3.2), accounting for the amount of wetness. When
granular particles i, j collide with each other, the interparticle forces are computed by modifying Equations 6 and
7:
damper

Fi

tangential

Fi

4.2. Wetting Model for a Granular Particle
In our model, each granular particle i has a wetness value
wi ∈ [0, wmax ]. We refer to a granular particle by different
terms according to wi (Figure 4):
dry particle: wi = 0
wet particle: 0 < wi ≤ wthreshold
overwet particle: wthreshold < wi ≤ wmax
where wthreshold is a threshold of wetness. Dry or wet particles receive wetness from fluid particles or overwet particles
at the time of contact. The wetness value is used to compute the grain-to-grain attractive forces. In addition, in order
to represent the aggregation of wet granular materials, our
method shrinks the radius ri of a granular particle i according to the wetness value:
ri = R − kr wi ,

(8)

= kd (1 + wi + w j )vnormal
,
ij
= kt (1 + wi + w j )

tangential
vi
tangential
vi

(11)
.

(12)

bridge

Additionally, the liquid-bridge force Fi
is computed.
bridge
Fi
is designed to work between wet particles only, and
to reduce as the wetness increases:
wi + w j
bridge
(v j − vi ), (13)
= kbridge max 0, w f −
Fi
2
where kbridge is a coefficient and w f is a threshold for flubridge
only when the particles
idization. Our method uses Fi
are moving away from each other, that is, (v j − vi ) · (x j −
xi ) > 0.
After computing the forces, if a granular particle i is
overwet, i.e. wi > wthreshold , and if there are dry or wet
particles in its vicinity, the excessive wetness value Δw =
wi − wthreshold is distributed equally among them.
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Rungjiratananon et al / Real-time Animation of Sand-Water Interaction

4.5. Control of Propagation Speed
To control the speed of wetness propagating among granular particles, we introduce a coefficient k p for the propagation rate. Let wti be the wetness value of particle i at time
t and Δwti be the excessive wetness of particle i at time t
(i.e., Δwti = wti − wthreshold ). We assume that the propagation speed of wetness from particle i to neighboring particles
j ( j = 1, 2, . . . , Ni ) exponentially decreases according to the
excessive wetness Δwti :
wt+1
= wtj + k p
j

Δwti
Δt,
Ni

(14)

1891

actually visible. The frame rate is about 5 fps. Figure 7 is a
comparison of the properties of dry, wet and overwet particles. The modified-DEM forces introduced in Section 4.4 result in different-sized piles as the particles fall to the ground.
Each scene is captured at 32-60 fps, with 32k granular particles. Figure 8 shows the interaction between granular particles with a rigid shovel (with 32k particles, around 40 fps).
In Figure 9, massive fluid interacts with a sand bed. This
scene consists of 33k fluid particles and 64k granular particles. The frame rate is about 4 fps.

where Δt is the timestep. Larger k p yields faster propagation
of wetness while smaller k p results in slower propagation.

In scenes which include water, the bottleneck is the rendering of the metaballs. When we render spheres instead of
metaballs for representing water, the frame rates increase to,
for example, 10 fps in Figure 6 and 14 fps in Figure 9.

5. GPU Implementation

7. Conclusions and Future Work

We implemented our model on the GPU by using a GPGPU
technique [Har07] which constructs uniform grids that are
used in nearest-neighbor searches. While particles in the
DEM domain and the SPH domain are stored in the same
grid, they can be distinguished by flags.

We have performed simulations of interactions between fluids and granular materials based on SPH and DEM. Specifically, we have presented the following contributions in order
to handle the propagation of wetness from a fluid passing
through granular materials and the transition of the properties of the granular materials:

At the interface between fluids and granular materials
(Section 4.3), fluid particles and granular particles that
will interact together should be found mutually in nearestneighbor searches. We therefore set the core radius h of the
smoothing kernel used in SPH and the contact radius R used
in DEM as h = 2R.
When equally distributing the wetness supplied by fluid
particles and overwet particles, implementing such operations by random-access writes (i.e. scatter operations) is not
efficient on current GPUs. Thus we perform the following
two-step procedure. We store the number Ni of neighbors
that particle i will supply with wetness into a texture. Then,
if Ni > 0, the supplied wetness value is divided by Ni and
added to the neighbor’s wetness in a second pass.
As for rendering, granular materials are rendered as solid
spheres using point sprites, and the visual quality is enhanced by a screen-space ambient occlusion technique similar to [Mit07]. Fluid is rendered as metaballs using a raycasting technique [KSN08].
6. Results
The prototype implementation was written in C++, using
OpenGL, GLSL and Cg. All experiments in this paper were
conducted on a PC with an Intel Core 2 Quad 2.66GHz processor and an NVIDIA GeForce 8800 GTX graphics card.
The frame rates in this paper include both simulation and
rendering.
Figure 6 shows an animation sequence consisting of a pile
of sand with a water stream emitted from a black faucet.
This scene contains 100k fluid particles and 160k granular
particles, although only a fraction of the fluid particles are
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

1. An empirical model for the propagation of wetness by
means of introducing a wetness value for each granular
particle (Section 4),
2. Shrinkage of the radii of granular particles for the aggregation (Section 4.2), and
3. Integration of the attractive force due to the amount of
wetness introduced into the DEM framework (Section
4.4).
We have also demonstrated that a GPU-based simulator can
achieve real-time performance (Section 6).
There are some phenomena that were not handled in our
model; regeneration of fluid particles from overwet particles
and drying of wet particles. Representing such effects will
require considering temperature, pressure, interactions with
the air or the passing of time.
We also would like to accelerate the simulation by employing an adaptive technique [APKG07] or hybrid methods
with height fields [ON03]. We would also like to improve
the performance and plausibility of rendering by employing
e.g. subsurface scattering [JLD99] of wet materials.
References
[APKG07] A DAMS B., PAULY M., K EISER R., G UIBAS
L. J.: Adaptively sampled particle fluids. In SIGGRAPH
’07: ACM SIGGRAPH 2007 papers (2007), p. 48.
[BBB07] BATTY C., B ERTAILS F., B RIDSON R.: A
fast variational framework for accurate solid-fluid coupling. In SIGGRAPH ’07: ACM SIGGRAPH 2007 papers
(2007), p. 100.

1892

Rungjiratananon et al / Real-time Animation of Sand-Water Interaction

Figure 6: Animation sequence of a pile of sand with a water stream emitted from a black faucet.

Figure 7: Comparison with dry (light brown), wet (brown) and overwet (dark brown) particles.

[BYM05] B ELL N., Y U Y., M UCHA P. J.: Particle-based
simulation of granular materials. In SCA ’05: Proceedings
of the 2005 ACM SIGGRAPH/Eurographics symposium
on Computer animation (2005), pp. 77–86.

L EGAKIS J., P EDERSEN H. K.: Modeling and rendering of weathered stone. In SIGGRAPH ’99: Proceedings
of the 26th annual conference on Computer graphics and
interactive techniques (1999), pp. 225–234.

[CBP05] C LAVET S., B EAUDOIN P., P OULIN P.: Particlebased viscoelastic fluid simulation. In SCA ’05: Proceedings of the 2005 ACM SIGGRAPH/Eurographics symposium on Computer animation (2005), pp. 219–228.

[GM77] G INGOLD R., M ONAGHAN J.: Smoothed particle hydrodynamics – theory and application to nonspherical stars. Monthly Notices of the Royal Astronomical Society 181 (1977), 375.

[CGFO06] C HENTANEZ N., G OKTEKIN T. G., F ELD MAN B. E., O’B RIEN J. F.: Simultaneous coupling of
fluids and deformable bodies. In SCA ’06: Proceedings of
the 2006 ACM SIGGRAPH/Eurographics symposium on
Computer animation (2006), pp. 83–89.

[Har07] H ARADA T.: Real-time rigid body simulation on
GPUs. GPU Gems 3, Chapter 29 (2007), 123–148.
[Her05] H ERMINGHAUS S.: Dynamics of wet granular
matter. Advances In Physics 54 (2005), 221–261.

[CMT04] C ARLSON M., M UCHA P. J., T URK G.: Rigid
fluid: animating the interplay between rigid bodies and
fluid. ACM Trans. Graph. 23, 3 (2004), 377–384.

[HKK07] H ARADA T., KOSHIZUKA S., K AWAGUCHI Y.:
Smoothed particle hydrodynamics on GPUs. In Proc. of
Computer Graphics International (2007), pp. 63–70.

[CS79] C UNDALL P. A., S TRACK O. D. L.: A discrete
numerical model for granular assemblies. Geotechnique
29 (1979), 47–65.

[JLD99] J ENSEN H. W., L EGAKIS J., D ORSEY J.: Rendering of wet material. In Proc. of Eurographics Rendering Workshop 1999 (1999), pp. 273–282.

[DEJ∗ 99]

[KO96]

D ORSEY J., E DELMAN A., J ENSEN H. W.,

KOSHIZUKA S., O KA Y.: Moving-particle semi-

c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Rungjiratananon et al / Real-time Animation of Sand-Water Interaction

1893

Figure 8: Interaction between granular particles with a rigid shovel.

Figure 9: Interactions between massive fluid and a sand bed.

implicit method for fragmentation of incompressible flow.
Nucl. Sci. Eng. 123 (1996), 421–434.

2. Advanced Real-Time Rendering in 3D Graphics and
Games Course – SIGGRAPH 2007 (2007).

[KSN08] K ANAMORI Y., S ZEGO Z., N ISHITA T.: GPUbased fast ray casting for a large number of metaballs.
Computer Graphics Forum (Proc. of Eurographics 2008)
27, 2 (2008), 351–360.

[MSKG05] M ÜLLER M., S OLENTHALER B., K EISER
R., G ROSS M.:
Particle-based fluid-fluid interaction. In SCA ’05: Proceedings of the 2005 ACM SIGGRAPH/Eurographics symposium on Computer animation (2005), pp. 237–244.

[KW06] K IPFER P., W ESTERMANN R.: Realistic and interactive simulation of rivers. In GI ’06: Proceedings of
Graphics Interface 2006 (2006), pp. 41–48.

[ON03] O NOUE K., N ISHITA T.: Virtual sandbox. In PG
’03: Proceedings of the 11th Pacific Conference on Computer Graphics and Applications (2003), p. 252.

[LM93] L I X., M OSHELL J. M.: Modeling soil: realtime dynamic models for soil slippage and manipulation.
In SIGGRAPH ’93: Proceedings of the 20th annual conference on Computer graphics and interactive techniques
(1993), pp. 361–368.

[PTB∗ 03] P REMOZE S., TASDIZEN T., B IGLER J.,
L EFOHN A., W HITAKER R.: Particle-based simulation
of fluids. Computer Graphics Forum 22, 3 (2003), 401–
410.

[Luc77] L UCY L.: A numerical approach to the testing of
the fission hypothesis. Astronomical Journal 82 (1977),
1013.

[SOH99] S UMNER R. W., O’B RIEN J. F., H ODGINS
J. K.: Animating sand, mud, and snow. Computer Graphics Forum 18, 1 (1999), 17–26.

[LZLW05] L IU Y. Q., Z HU H. B., L IU X. H., W U E. H.:
Real-time simulation of physically based on-surface flow.
The Visual Computer (Proc. of Pacific Graphics 2005) 21,
8-10 (2005), 727–734.

[WCMT07] W OJTAN C., C ARLSON M., M UCHA P. J.,
T URK G.: Animating corrosion and erosion. In Proc. of
Eurographics Workshop on Natural Phenomena (2007),
pp. 15–22.

[MCG03] M ÜLLER M., C HARYPAR D., G ROSS M.:
Particle-based fluid simulation for interactive applications. In SCA ’03: Proceedings of the 2003 ACM SIGGRAPH/Eurographics symposium on Computer animation (2003), pp. 154–159.

[ZB05] Z HU Y., B RIDSON R.: Animating sand as a
fluid. In SIGGRAPH ’05: ACM SIGGRAPH 2005 Papers
(2005), pp. 965–972.

[Mit07]

M ITTRING M.: Finding next gen – CryEngine

c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

