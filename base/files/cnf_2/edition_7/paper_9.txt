DOI: 10.1111/j.1467-8659.2008.01300.x

COMPUTER GRAPHICS

forum

Volume 28 (2009), number 1 pp. 114–126

Shape Context Preserving Deformation of 2D Anatomical
Illustrations
Wei Chen∗1 , Xiao Liang2 , Ross Maciejewski3 and David S. Ebert3
1 State

Key Lab of CAD&CG, Zhejiang University, Hangzhou, China
chenwei@cad.zju.edu.cn
2 Microsoft Research Asia, Beijing, China
xiao.liang@microsoft.com
3 Purdue University, West Lafayette, Indiana, USA
rmacieje@ecn.purdue.edu, ebertd@purdue.edu

Abstract
In this paper, we present a novel two-dimensional (2D) shape context preserving image manipulation approach
which constructs and manipulates a 2D mesh with a new differential mesh editing algorithm. We introduce a
novel shape context descriptor and integrate it into the deformation framework, facilitating shape-preserving
deformation for 2D anatomical illustrations. Our new scheme utilizes an analogy based shape transfer technique
in order to learn shape styles from reference images. Experimental results show that visually plausible deformation
can be quickly generated from an existing example at interactive frame rates. An experienced artist has evaluated
our approach and his feedback is quite encouraging.
Keywords: Anatomical illustration, shape context, shape deformation, illustrative visualization
ACM CCS: I.3.3 [Computer Graphics]: Picture/Image Generation

terns, textures, media and shading [BG05, GG01, ONOI04].
Unfortunately, many computer-generated illustration techniques concentrate solely on illustrative shading effects,
while neglecting the influence of the shape of the illustrated
objects.

1. Motivation
In illustration, the proper depiction of shape is fundamental
to the human vision system’s ability to recognize an object
or process. The expressiveness of a drawing is greatly influenced by the manner in which shape is rendered and varied
amongst objects within a scene. In order to efficiently enhance human perception, reduce occlusion or even express
complex dynamic procedures, hand-drawn illustrations have
exploited various methods for shape and shape style depiction [Cla99, Hod88, ST90].

This work was done while Wei Chen was visiting Purdue university.

Mathematically, shape is defined as an equivalence class
under a group of transformations. However, this definition only judges whether two shapes are exactly the same
[BMP02]. In the context of computer-generated illustration,
an appropriate definition of shape perception would be necessary to create faithful and expressive effects. This is analogous to shape coordinates in morphometrics [Boo92], which
is used to investigate biological forms by comparing shape
and shape change. For instance, the two objects shown in
Figure 1a and b have similar biological forms because their
shapes could be related by certain mathematical transformations [Tho17]. To distinguish various biological forms, a set
of shape descriptors have been derived based on the analysis of these transformations [BMP02, Boo92, WAA∗ 05].
However, little attention has been paid to how to iden-

c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and
Blackwell Publishing Ltd. Published by Blackwell Publishing,
9600 Garsington Road, Oxford OX4 2DQ, UK and 350 Main
Street, Malden, MA 02148, USA.

Submitted February 2008
Revised May 2008
Accepted July 2008

Such illustrative techniques have recently been introduced
into the computer graphics community. Various approaches
for illustrative rendering [ER02, GG01] have been proposed for simulating artistic styles and concepts, including
the variation, emphasis and subordination of colours, pat-

∗

114

W. Chen et al. / Shape Context Preserving Deformation of 2D Anatomical Illustrations

115

Figure 2: (a) A volume rendering of a foot dataset [SDS05];
(b) a hand-drawn image showing the bending of a foot; (c)
our result that simulates the shape style of (b), by performing
shape deformation to (a). The total user time is 1 minute.

Figure 1: The fishes (Pomacanthus and Scarus) shown in
(a) and (b) can be linked with region-based linear or nonlinear coordinate transformations [Tho17]. Our approach
captures the shape context difference between (a) and (b),
and performs shape context based analogy from (a) and (b)
onto (c), another illustration of Pomacanthus [Ito], yielding
the result (d).

tify the shape dissimilarity between two objects. The shape
description that can be used to depict the shape difference
is called the shape context, which abstracts the geometric
details and measures the shape styles. Until now, it has remained challenging to capture and learn shape styles for
the purpose of depiction, though there are many attempts to
achieve the automatic or semi-automatic learning of rendering styles [HJO∗ 01, HOCS02, HS99].
As such, consideration of an object’s shape is key to the
proper rendering of not only still objects, but also deformable
objects. For instance, in medical education there are various
terms describing the movements of the limbs and other parts
of the human body. These movements normally take place
at joints where two or more bones and cartilage articulate
with one another [MD99]. Currently, to illustrate deformations, artists typically acquire the models in key frames by
using measurement instruments [Hod88], which is a laborious process. In contrast, a common method in the graphics community is to display a sequence of individual model
deformations to form an animation sequence. This is quite
challenging when the scene complexity and the requirements
of visual reality are high, as shown in Figures 2a and 3a.
In this paper, we present a novel deformation algorithm
that uses a two-dimensional (2D) input image. One immediate benefit of this scheme is that a visually pleasing simulation of deformations can easily be created by applying simple
2D image manipulations. Our solution is a tool for an illustrator to quickly generate deformations for 2D anatomical

illustrations. It can also be used by non-illustrators to freely
deform existing images and check the validity of the results.
Figure 3b–d show our results.
Our solution reformulates the 2D image deformation as a
user-guided differential mesh manipulation that operates on
the differential to absolute geometry and distributes detail
distortions across the entire domain by means of a leastsquare minimization reconstruction scheme. One main difference between our approach and previous 2D image deformation techniques is that our approach pays special attention
to the expressiveness of the deformation and the preservation of shape styles. Specifically, we integrate shape context
into the interactive deformation framework. We also introduce an analogy-based shape transfer technique to efficiently
mimic the shape styles from reference images. One example
is shown in Figure 2.
The rest of this paper is organized as follows. We briefly
summarize the related work in Section 2. After describing
our deformation approach in Section 3, we introduce the
analogy-based shape style transfer technique in Section 4.
The experimental results are reported in Section 5. Finally,
we conclude this paper in Section 6.

2. Background and Related Work
2.1. Image deformation and manipulation
Previous image deformation and manipulation approaches
typically deform the shape space in which the image is embedded. For instance, Barrett and Cheney used space-warp
deformation for object-based image editing [BC02]. Bookstein employed thin-plate splines to find a space deformation
that is defined by several feature points [Boo89]. A potential drawback of these approaches is that they model deformations as smooth global transformations. Thus, the results undergo local non-uniform scaling and shearing, which
is undesirable in many applications. Although the moving
least squares algorithm [SMW06] provides a point-based

c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

116

W. Chen et al. / Shape Context Preserving Deformation of 2D Anatomical Illustrations

Figure 3: (a) The input illustration; (b) the constructed mesh; (c) the head is rotated; (d) the lower arm is moved. Image
source: http://www.lib.uiowa.edu/hardin/rbr/imaging/mascagni/zoom/zfront1.htm. This example was selected from the exhibit
‘So Divinely Built a Mansion: Six Centuries of Human Anatomical Illustration’, by Paolo Mascagni (1755–1815).
closed-form solution using affine, similarity and rigid transformations, it is still an image warping technique.
By triangulating the image into a 2D mesh and building
deformations dependent on the specified topology, Igarashi
et al. presented an interactive, as-rigid-as-possible, shape manipulation system [IMH05]. Because this algorithm employs
a two-step approximation optimization to achieve interactive
performance, it may create unnatural effects by solely considering rigid transformations. To overcome this problem,

Weng et al. introduced an algorithm based on a non-linear
least squares optimization [WXW∗ 06]. The preservation of
the Laplacian coordinates of the shape boundary and the region area yields visually plausible deformation. However,
this approach concentrates on the preservation of the shape
outline and is probably not effective for handling the deformations of internal structures. More recent work by Fang
and Hart [FH07] describes an image editing system that decouples the feature position from pixel colour generation by
resynthesizing textures from the source image in order to

c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

W. Chen et al. / Shape Context Preserving Deformation of 2D Anatomical Illustrations

117

preserve its detail and orientation around a new feature curve
location.

2.2. Computer-generated illustration
Illustrators [Cla99], [ST90] strive to create perceptually effective images by amplifying features and exploiting artistic
abstractions. Except for pen or paintbrush [Hod88], modern
illustrators often employ commercial software (e.g. Adobe
Illustrator, Corel PhotoPaint, Corel Painter, JASC PaintShop
Pro ) to manually create still 2D illustrations. For animated
2D images, illustrators commonly use Adobe PhotoShop,
After Effects, Macromedia Flash, Adobe PhotoShop, Image
Ready and Corel Painter [And].
In the computer graphics and visualization community,
scenes are modelled as three-dimensional (3D) surfaces or
volumes. Comprehensive approaches have been introduced
for point, line, surface and volume drawings [BKR∗ 05, ER02,
GG01, LEM∗ 02]. Furthermore, by applying traditional illustrative techniques, new algorithms have been developed that
work directly on 2D images [BSM∗ 07, KML99].

2.3. Example based modelling and rendering
Example-based approaches create new effects by simulating
the patterns or styles of specified examples. One representative work is texture synthesis, which has been applied in
volume illustration [ONOI04]. Another category of examplebased approaches is the analogy-based scheme, including
image analogy [HJO∗ 01] and rendition analogy [HS99]. The
curve analogy algorithm [HOCS02] generalizes the idea of
image analogy by transferring the position offset from one
curve to another.

2.4. Differential coordinates based mesh manipulation
Inspired by the success of partial differential equations (PDEs) in the digital image processing community [PGB03], differential mesh manipulation techniques
[SLCO∗ 04, YZX∗ 04] transform differential surface properties directly and reconstruct the results with a global optimization. This scheme not only preserves the geometric
feature, but also avoids artefacts due to per-vertex editing by
distributing errors globally. As the differential coordinates
are related to geometric details or features, the global optimization scheme favours detail-preserving results.

Figure 4: The three stages of our approach. The items with
dashed frames are optional.

We deform the constructed 2D triangular mesh within the
differential mesh editing framework. Poisson-based mesh
manipulation is briefly described in Section 3.1. Our approach improves previous image deformation approaches in
two aspects. First, we integrate the properties of different
regions into the deformation to produce an effective illustration. We will explain the enhanced Poisson mesh deformation
technique in Section 3.2. Second, we introduce a shape context descriptor that offers a globally discriminative characterization of the objects in the illustrations. The preservation of
the shape context during deformation imposes an additional
deformation constraint. The issues involving shape context
are discussed in Section 3.3. Finally, we summarize the user
interface and deformation pipeline in Section 3.4. Figure 4
shows the conceptual pipeline of our approach.

3.1. Preliminaries
Let us consider an arbitrary non-degenerate planar triangular mesh S = (K, V), where V is the set of 2D vertex coordinates and K describes its vertex connectivity. A scalar
field f on S can be defined as a piecewise linear function
f (v) = i fi φi (v), where f i is a scalar, φ i (·) is a piecewise
linear basis function with value 1 at vertex v i and 0 at other
vertices. The discrete gradient operator of an arbitrary scalar
field f on S is defined as [TLHD03]:
fi ∇φi (v).

∇f (v) :=

(1)

i

It yields the discrete Laplacian operator at each vertex v i :
f (vi ) :=

1
(cot Bj + cot Cj )(fi − fj ). (2)
2A
j
(v )

vj ∈Nv i

3. Our Approach

Here, N v (v i ) denotes the set of 1-ring neighbouring vertices
of v i . A j is the area of the jth triangle, and B j and C j are
two angles opposite to the edge (v i , v j ).

We construct triangulations to outline the boundary of object regions and use this topological information to create
deformations by separating parts of the images.

If we set f i for two vertex coordinates, vm
i (m = x, y),
separately, S can be viewed as two discrete scalar fields (S x ,
S y ). By applying the discrete gradient operator to S m (m =

c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

118

W. Chen et al. / Shape Context Preserving Deformation of 2D Anatomical Illustrations
m
where k m
Bj and k Cj are the rigidities of two triangles that share
the edge (v i , v j ).

x, y) separately, we get two gradient vector fields:
∇S m (v) =

vm
i ∇φi (v) (m = x, y).

(3)
Finally, we have the rigidity-related Poisson equation:

i

Each ∇S m is a piecewise constant vector field which can
be regarded as the guidance vector field w involved in solving
the discrete Poisson equation:
f = div · w, f |∂

= f ∗ |∂

(4)

where f is the scalar field to be computed and f ∗ provides
the desired value on the boundary ∂ . Manipulating this
guidance vector field w will result in varied reconstructed
vertex coordinates.
By specifying a set of boundary vertices ∂ and f ∗ |∂
to construct the boundary condition, we have two equations
from Equation (4) for solving the vertex coordinates (x and
y) in the form of f . The user can modify the position and orientation of a set of vertices, resulting in two altered guidance
vector fields ∇Sx and ∇S y . The new vertex positions (S x , S y )
can be reconstructed by solving Equation (4) with modified
∇S x and ∇S y .
3.2. Property-related deformation
The basic idea for achieving expressive deformation is to
define appropriate properties and use them to guide the
mesh manipulation. An intuitive choice is the rigidity or
elasticity that describes the stretching degree under various
forces. With the triangulation representation, we regard the
rigidity distribution of the illustrated objects as two piecewise constant scalar fields and assign each triangle, T, two
constant rigidities kTm (m = x, y) for (x, y). This definition
yields two new piecewise linear basis functions kTm φ i (·) (m
= x, y). Intuitively, kTm (m = x, y) scales the discrete gradient
vector along the x and y axes, and can be represented with a
kx 0
2D transformation T y . If we consider the deformation
0 kT
intention imposed on the triangle T as an affine transformation, kTm (m = x, y) defines the response coefficients of T
to the deformation intention along the x and y axes, respectively. Accordingly, we denote the property-related discrete
divergence operator div km as:
divkm · ∇f (vi )
kTm AT ∇φi |T · ∇f (vi ) (m = x, y).

:=
T ∈NT (vi )

(5)

It also induces the new discrete Laplacian operator:
k m f (vi )

:=

1
2A
j
(v )

kBmj

2

cot Bj + kCmj

2

cot Cj (fi − fj )

vj ∈Nv i

(6)

km f

= divkm · w, f |∂

= f ∗ |∂ .

(7)

In practice, the rigidities are determined by the user and
are attached to each region of the illustrated objects. A typical
range of the rigidities are from 1.0 to 10.0. The smallest value,
1.0, corresponds to softly deformed regions, such as the fat
in the human body. For fully rigid objects, such as the bones,
the rigidities are set to be the largest value, i.e. k x = 10.0,
k y = 10.0. Beyond distinguishing between elastic and rigid,
this technique simulates the resiliency, i.e. the degree to
which an elastic object resists deformation. Thus, at one
end of the spectrum we could have an elastic material and
at the other a rigid material, and somewhere in the middle
would be user-selectable resilient materials. In the biomedical arena, these resiliency factors could be based on actual
tissue properties. Our approach simulates this effect. In addition, non-uniform deformation in the 2D plane can be simulated by setting different rigidities for any direction (x, y).
One example is the muscle on the legs which exhibits a directional deformation. Figure 5 depicts different behaviours
under three types of rigidity configurations of the selected
region.
3.3. Shape context preserving deformation
By shape context, we mean any measurement of the configuration of shape features that does not change when the global
shape stretches or shrinks. Figure 6a and b show two faces
with 16 landmarks. In each example, the set of feature points
constructs a recognizable identification and a special shape
context that can differentiate itself from others.
Although there have been several definitions for shape descriptors, we find that most of them are unsuitable for the purpose of shape-preserving image manipulation. For instance,
the shape descriptor introduced in [BMP02] describes the
coarse distribution of the rest of the shape with respect to a
given point on the shape. It is basically a statistical property
and cannot be quantized and manipulated. A less statistical
characterization of geometrical shape would be the properties of a figure that are not changed by translation, rotation or
scaling [Boo92]. However, the shape coordinates representation proposed in [Boo92] only considers the distance ratios
and measures the triangular shape that maintains the distinctions among three vertices. In our approach, we define the
shape context as an inter-dependency of a group of feature
ˆ Vˆ ) strictly built on
points, i.e. a 2D mesh structure C = (K,
these points. All vertices of C are selected from V, meaning
Vˆ ⊂ V . To make each triangle of C as canonical as possible,
the mesh connectivity Kˆ is constructed with constrained Delaunay triangulation algorithm [She05] and is not necessarily
a subset of K.

c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

W. Chen et al. / Shape Context Preserving Deformation of 2D Anatomical Illustrations

Figure 5: The deformation results with different rigidity settings for a bone with a red star. (a) The input image; (b)
uniform strong elasticities: (k x , k y ) = (1.0, 1.0); (c) nonuniform rigidities: (k x , k y ) = (10.0, 1.0); (d) uniform strong
rigidities: (k x , k y ) = (10.0, 10.0). The rigidities for other two
bones are set as (k x , k y ) = (10.0, 10.0).
We perform shape context preserving deformation by imposing an additional constraint on the discrete Poisson equation. The goal is to transform the discrete guidance field on
C in a uniform way. Thus, we reformulate Equation (7) as
k m f |S

+λ

k m f |C

= divkm · w + λdivkm · u∗ , f |∂
∗

= f |∂ .

119

Figure 6: (a, b) Two line-drawing images and their shape
context points [Boo92]; (c) the face of an old man; (d) our
result by replacing the shape context of (c) with that of (b).
and have to be determined in each deformation step. To find
an optimal solution, we calculate the centroid v c of C and
seek to keep the relative distances and angles between each
vertex v i in C and v c unchanged. This yields the following
minimization problem:
(v∗i − v∗c − R(θ)S(s)(vi − vc ))2

argminθ,s

(9)

vi ∈C

where v∗i denotes the ith transformed vertex.
(8)

In Equation (8), λ is an adjustable parameter that weights
the preservation of the shape context. The definitions of ∇C m
and u∗ are analogous to those of ∇S m and w∗ (see Section
3.1). During mesh manipulation, w∗ is interactively altered
by users, i.e. each triangle of S may be modified with different
rotation, scale or translation transformations. Whereas all triangles in C are transformed with the same rotation and scale
transformations for the purpose of preserving
the shape con-⎞
⎛
cos θ − sin θ ⎟
text. Therefore, u∗ = R(θ)S(s) u with R(θ )=⎝⎜
⎠
sin θ
cos θ
s 0
and S(s) =
. The parameters θ and s are unknown
0s

With the assumption that the deformation is adequately
stable, we employ an iterative technique to progressively approximate the optimized solution. In the first step, we solve
Equation (7) to compute the modified vertex positions, without considering the influences of shape context. Based on
these vertices, we calculate an average scale s and use it to
estimate an optimized θ in Equation (9). Subsequently, we
solve Equation (8) with the new R (θ) and S (s) to get an initial estimation of the new vertices. In the next iteration, the
computed vertices can be used to recover a better estimation
of θ and s, and so on. The iteration ends when either the iteration number exceeds a given maximum, or the difference
between θ and s between two successive steps is smaller than
a given threshold.

c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

120

W. Chen et al. / Shape Context Preserving Deformation of 2D Anatomical Illustrations

toolkits, including a region constructor, a mesh constructor, a
region of interest (ROI) selector and a mesh manipulator, to
interactively deform the illustration in an intuitive fashion. In
the context of solving the property-related Poisson equation,
all interactions are intended to alter the guidance gradient
vector field and specify the boundary conditions. As a result, the efficiency of our system is greatly influenced by the
modes of how to capture the user intentions and then change
the guidance vector field and boundary conditions for the
specified manipulation tasks. Below, we describe each operation step that is sequentially demonstrated in Figure 7.
3.4.1. Region construction
Beginning from an input illustration, the user manually constructs a polygonal contour for each region and specifies its
rigidities. This process is analogous to the segmentation of
images and could be accelerated by directly adjusting the
boundaries formed from interactive image segmentation. In
general, the mesh construction may be not accurate. The average case can be constructed in several minutes. Figure 7b
shows the constructed region contours on an input illustration
(Figure 7a). For the sake of demonstration, the constructed
contours are rough.
3.4.2. Mesh construction

Figure 7: The pipeline of our system: (a) the input image
(MS-0101, Muscular System @1989 John M. Daugherty,
Highlight Studios); (b) the constructed region contours done
in 2 minutes. For the sake of demonstration, they are rough.
(c) The constructed mesh and the sets of controlling vertices,
constrained vertices and free vertices, which are shown in
yellow, red and other colours; (d) after rotating the chest, we
specify a new set of controlling vertices, constrained vertices
and free vertices, for the purpose of rotating the head; (e) the
final result without distance weighting; (f) with the Gaussian
weighting scheme, a more natural effect is achieved. We enlarge the head parts to show the difference between (e) and
(f).
It is worth mentioning that the weight λ is set to be a small
value at the first iteration. This is automatically enlarged in
the next iterations because the influence of the shape context
would gradually become dominant when approaching the
optimized solutions. Figure 6d shows the deformation result
by entirely replacing the shape context of Figure 6c with that
of Figure 6b.
3.4. Processing stages
We have built an interactive 2D deformation system for 2D
anatomical illustrations. It allows the user to employ a set of

We apply a constrained conforming Delaunay triangulation
algorithm [She05] to the constructed region contours. Note
that this algorithm does not result in a true Delaunay triangulation, i.e. some triangles might not be Delaunay, but all
triangles are ensured to be constrained Delaunay. To achieve
optimized mesh structures, two additional requirements for
triangulation are set. First, the vertices and edges of the region contours are completely preserved in the final mesh.
Second, a minimum on the triangle inner angles and a maximum on the triangle area are set. The constructed mesh based
on Figure 7b is shown in Figure 7c.
3.4.3. ROI selection
By region of interest (ROI), we mean the region where
the user’s intentions are imposed. It consists of two parts: the
operation handles and the free region. The former denotes
the actual user-controlled vertices and is used to determine
the modification of the discrete guidance vector field in Equation (8). The free region includes the vertices whose positions
are freely changed during deformation. Other vertices that do
not belong to the ROI are kept unchanged and are called constrained vertices. Our system allows the user to manually
select a sequence of vertices or simply choose the vertices
of one region as the controlling vertices or the constrained
vertices. The remaining vertices are by default free vertices.
Additionally, the user can determine a group of shape context vertices and construct a shape context mesh. Figure 7c

c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

W. Chen et al. / Shape Context Preserving Deformation of 2D Anatomical Illustrations

121

depicts the determined controlling vertices (in yellow), constrained vertices (in red) and free vertices in other colours.
After deforming the illustration by rotating the chest, we have
the deformed mesh shown in Figure 7d. To further modify
the illustration, we fix the body trunk and let the head be the
controlling region (see Figure 7d).

3.4.4. Mesh mmanipulation
During mesh manipulation, the user can either freely drag
one or several controlling vertices, or modify the controlling
vertices with specified 2D transformations. Another commonly used interaction mode is to simultaneously translate,
rotate or scale all vertices of a selected region. Thereafter, the
modifications on the controlling vertices are gradually propagated to the remaining vertices. The propagation is dependent
on the distance between vertex pairs. Our system supports
three distance-dependent functions which correspond to the
nearest, linear and Gaussian weighting schemes. After the
propagation of the transformations to all vertices, a new constant gradient vector is computed in each triangle, yielding
two altered guidance vector fields. Finally, the discrete Poisson equation is formulated as a sparse linear system and
solved with a direct solver [Tol03]. In Figure 7e and f, we
show two results with the same manipulation settings and
different weighting schemes.

Figure 8: (a) A volume rendering by Stefan Bruckner
[BG05]; (b) our result; (c) another 2D image; (d) our result by simulating the shape styles of (c).
The Laplacian operator on each vertex v i is defined as
(vi ) = vi − (vi−1 + vi+1 )/2.

(11)

The shape transfer from R 0 to R 1 is accomplished by replacing the gradient vectors of R 1 to those of R 0 and specifying constrained vertices in Equation (4). Note that, R 0 and
R 1 have to be aligned and resampled with arc-length parameterization before shape transfer, so that their vertices are a
one-to-one correspondence.
In the second step, the modification of the region contour
is integrated into the Poisson equation, Equation (7) or (8),
to alter the guidance vector field and the boundary condition.
Figures 8d and 9 provide examples.

4. Analogy Based Shape Style Transfer
Transferring shape styles between illustrations requires appropriate representations of shape styles. In our system, we
consider two types of shape styles.

4.1. Shape transfer with region contours
Object contours are important features for shape recognition
[BMP02]. Every region boundary of the underlying image
can be regarded as a formulation of its shape style. The
transfer of region contours can be fulfilled by a simple curve
analogy driven shape deformation scheme.
For a selected region, we first deform its boundary with a
differential curve deformation technique. Suppose we have
two illustrations whose meshes are M 0 and M 1 . The boundary R 0 of one region in M 0 is modified to mimic another
region boundary R 1 in M 1 . R 0 and R 1 are represented with
two polygons, which can be regarded as two piece-wise linear curves. Analogous to the definitions of 2D scalar fields
and the discrete differential operators in Section 3.1, we construct a one-dimensional differential representation for a linear curve R = (K, V). For the sake of simplicity, the discrete
gradient operator on an arbitrary scalar field f defined in R
can be rewritten as
∇f (v) = vi − vi−1

−→
s.t. v ∈ −
v−
i−1 vi .

(10)

4.2. Shape transfer with shape context
In terms of shape context, its transfer should be performed between two illustrations that share a similar context. Two sets
of shape context vertices with identical vertex numbers are
first specified in the source illustration and the destination.
The pairwise correspondences between vertices are determined by the user. We regard the transfer of shape context as
solving the following Poisson equation (m = x, y):
k m f |S

+λ

k m f |C

¯ + λdivkm · u∗ , f |∂
= divkm · w
= f ∗ |∂ .

(12)

Here, S and C are the mesh and shape context mesh of
¯ denotes the altered guidance
the destination illustration. w
vector field after introducing the new shape context. u∗ is the
guidance vector field of the shape context mesh in the source
illustration. Similar to the shape context preserving deformation, a global rotation and a global scale transformation have
to be determined before the shape transfer in order to eliminate the problem caused by the rotation-variant property of
the discrete Laplacian operator.
5. Experimental Results and Discussions
We have tested our approach on a PC with an Intel P4 3.2G
HZ CPU. For a typical image at the resolution of 380 × 380,

c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

122

W. Chen et al. / Shape Context Preserving Deformation of 2D Anatomical Illustrations

Figure 9: Shape styles of (a) are transferred to (b) and (d), yielding (c) and (e), respectively.
the constructed mesh normally contains 300 ∼ 1500 vertices
and 500 ∼ 2000 triangles. The user’s time spent on mesh
construction and ROI specification is typically 60–120 and
15–30 seconds, respectively. With a non-optimized Poisson
solver, the average times for the transformation propagation
and mesh reconstructions are 10 milliseconds and 15 milliseconds. In each example we tested, the deformation and
shape transfer is performed in real-time. For a fine mesh
with more than 50 000 vertices, our system can still perform
at interactive frame rates.
In our implementation, we regard the 2D illustration as a
2D texture and map it to a 2D triangular mesh. The image
deformation is driven by the mesh manipulation, in a similar
mode to previous mesh-based image deformation techniques
∗
(e.g. [IMH05] and [WXW 06]). We use OpenGL to implement the texture mapping for high efficiency. All input illustrations are rescaled to a fixed window resolution (e.g. 380 ×
380). Due to the rescaling of the input illustrations, there are
some differences between the input illustrations and the deformed results. In addition, some fuzziness may appear in the
boundary of the shape, due to the deformation of the mesh
and the use of texture mapping (such as the line drawings
shown in Figure 9c and e).
5.1. Results
We tested our approach on the rendering results shown in
Figures 2a and 8a. By setting appropriate rigidities to the
skin, bone and swimming bladder, satisfying deformations
are easily achieved (see Figures 2c and 8b and d). Specifically, shape styles of Figures 2b and 8c are transferred to

Figures 2c and 8c. The user interaction time for each example
is approximately 1 minute.
There are various terms describing the movements of the
limbs and other parts of the human body. They can be classified into about eleven categories, namely, flexion, extension, abduction, adduction, rotation, circumduction, opposition, retrusion and protrusion, elevation, eversion, pronation
[MD99]. We tested our system on several 2D hand-drawn illustrations of these anatomical movement types. Figure 10a–
c shows three hand-drawn illustrations that depict the hyperflexion and hyperextension of the cervical tissues of a human
head. Our approach requires 10 minutes to interactively illustrate both deformations (see Figure 10e and f) based on
Figure 10d. Figure 11a and c demonstrates our results that
simulate the depression and elevation movements of a human
body.
Anatomical shape and its variation, play important roles in
medical research. A particular disorder or aging may cause
anatomical changes or differences. In medical illustration,
the abnormality of certain human anatomy can be illustrated
using a set of comparison images. By referring to two sets of
2D hand-drawn illustrations, we performed two experiments.
The first one illustrates the systolic (Figure 11e) and diastolic
(Figure 11f) dysfunctions of a human heart. Compared to the
normal status of filling blood (Figure 11d), the systolic case
presents an over-enlarged ventricle because too much blood
is filled and the diastolic one fills with less blood because the
material of the ventricle is too stiff.
Introducing properties into different regions results in expressive deformation effects. Figures 5 and 7 show two such

c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

W. Chen et al. / Shape Context Preserving Deformation of 2D Anatomical Illustrations

123

Figure 10: Three hand-drawn images (a, c) that depict the hyperflexion and hyperextension of the cervical tissues of a human
head. With the input image (d), our approach allows a user to interactively simulate this dynamic procedure in 10 minutes,
resulting in (e) and (f).
examples. Note that our solution is not physically based, and
its results do not strictly conform to results generated by 3D
deformation approaches as 3D transformations and deformations may be distorted after perspective projection. Nevertheless, satisfying results can still be achieved by interactively
adjusting the engaged 2D transformations. Shape context
preserving deformation and shape transfer are very useful
operations for content recreation in computer-generated illustration. The examples shown in Figures 1, 6, 9 and 12
demonstrate the efficiency of our approach.
5.2. Failure cases
In terms of limitations, our approach cannot handle the case
when self-collision occurs (see Figure 13a and b). One pos-

sible solution is to add an additional self-collision detection
constraint on the discrete Poisson Equation (7), in a similar
way as the shape context preserving Poisson Equation (8).
In addition, our approach is suitable for simulating continuous deformations because the topology information has
to be preserved during manipulation. In the case of object
splitting or fractures, as shown in Figure 13c, an objectbased image editing mechanism [BC02] may be introduced
for illustrating the separations of individual objects.
Another failure case is caused by object occlusion during object animation or deformation (see Figure 13d and e).
Although it is a common problem for 2D image editing techniques, we hope that our approach can overcome this obstacle
through combinations with 3D algorithms. For example, we

c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

124

W. Chen et al. / Shape Context Preserving Deformation of 2D Anatomical Illustrations

cial 2D deformation toolkits, such as Avid ‘Elastic Reality’
program [AVI], are available for artists to use. In any case,
our approach could be regarded as a reliable addition, or
complementary technique, to existing 3D approaches.
Our scheme works in these situations because it reformulates complicated 3D transformations as a set of 2D
affine, similarity and rigid transformations. The degree of
2D transformations can be interactively modulated by users.
Additionally, our approach would be a very useful tool
to post-process rendered images under selected viewpoint,
cutting-plane and lighting conditions.

Figure 11: Two results with our approach: (a) an input abdomen image (Image Courtesy: Deutscher Infografik Dienst:
http://www.infografikdienst.de); (b–c) the images showing
the depression and elevation movements; (d) an input heart
image; (e, f) our results depicting the systolic and diastolic
dysfunctions when the ventricles fill with blood.
can represent the results by a 3D approach with a set of depth
layers and manipulate these layers on a per-object basis.

We have received encouraging feedback from an experienced medical illustrator [And]. His evaluation states that
‘You have come up with a remarkable and useful program.
I have used Avid’s “Elastic Reality” program some in the
past, but your program appears much superior. My first and
foremost concern was bending soft, plastic tissues without
distorting rigid ones. You have allayed my concerns completely, and in a very solid manner’.
6. Conclusions and Future Work
In this paper, we address the problem of 2D shape deformation by means of a differential mesh manipulation approach.
Our system allows the users to flexibly design a sequence of
dynamic effects in an intuitive fashion. We also introduce a
new description to shape context that is amenable for shape
context preserving deformation and shape transfer.

5.3. Discussion and evaluation
Our approach is basically a 2D solution and is not physically accurate. This disadvantage is mainly caused by the
infeasibility of image manipulation for 3D transformation
and lighting. However, in many cases, we do believe that our
approach is more efficient than existing 3D methods due to
the simplicity of 2D image manipulation. Indeed, commer-

Shape depiction depends on not only the shape styles, but
also the lighting and rendering configurations. Our current
approach does not consider the influences from perspective
projection, shadow and lighting change during deformation.
Exploring lighting with regard to deformation is important,
and could greatly enhance the value of the proposed method.
We plan to exploit a more efficient strategy based on previous

Figure 12: (a) An input image; (b) a reference image with 16 landmarks; (c) the constructed mesh based on (a); (d) our result
by transferring the shape context from (b) to (a).
c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

W. Chen et al. / Shape Context Preserving Deformation of 2D Anatomical Illustrations

125

[AVI] Available at http://www.avid.com/. Elastic reality.
Software release.
[BC02] BARRETT W. A., CHENEY A. S.: Object-based image
editing. In Proceedings of ACM SIGGRAPH (2002), pp.
777–784.
[BG05] BRUCKNER S., GRO¨ LLER M. E.: VolumeShop: An
interactive system for direct volume illustration. In Proceedings of IEEE Visualization (2005), pp. 671–678.
[BKR∗ 05] BURNS M., KLAWE J., RUSINKIEWICZ S.,
FINKELSTEIN A., DECARLO D.: Line drawings from volume
data. ACM Transactions on Graphics 24, 3 (2005), 512–
518.
[BMP02] BELONGIE S., MALIK J., PUZICHA J.: Shape matching and object recognition using shape contexts. IEEE
Transactions on Pattern Analysis Machine Intelligence
24, 4 (2002), 509–522.
[Boo89] BOOKSTEIN F. L.: Principal warps: Thin-plate
splines and the decomposition of deformations. IEEE
Transactions on Pattern Analysis and Machine Intelligence 11, 6 (1989), 567–585.
Figure 13: Failure cases: (a) a knee; (b) our approach may
cause self-collision when moving one bone; (c) the compound
fracture of the bone; (d) a heart with a saphenous vein graft;
(e) a heart with the left internal thoracic artery grafted to the
anterior descending coronary artery.

image-based rendering approaches to simulate the shading
variations during deformation. Another potential issue is to
extend the property-related differential mesh manipulation
algorithm to 3D tetrahedral meshes. More vivid and complicated 3D deformation can be simulated in a shape-preserving
mode. The main challenge for this is the high computational
cost caused by the large number of tetrahedron primitives.
Moving the computations of the linear system solution and
volume rendering onto graphics processing units is a promising solution.
Acknowledgments
The authors would like to thank Stefan Bruckner and
Nikolai Svakhine for providing images, and thank Nvidia
for equipment donations. This work is partially supported
by NSFC (No. 60873123) 863 program of China (No.
2006AA01Z314), NSF Grants 0081581, 0121288, 0328984,
and the U.S. Department of Homeland Security.

[Boo92] BOOKSTEIN F. L.: Morphometric tools for landmark
data. Cambridge University Press, Cambridge, UK, 1992.
[BSM∗ 07] BRESLAV S., SZERSZEN K., MARKOSIAN L., BARLA
P., THOLLOT J.: Dynamic 2D patterns for shading 3D
scenes. ACM Transactions on Graphics 26, 3 (2007), 366–
373.
[Cla99] CLARK J. O.: A Visual Guide to the Human Body.
Barnes and Noble Books, New York, USA, 1999.
[ER02] EBERT D., RHEINGANS P.: Volume illustration: Nonphotorealistic rendering of volume models. In Proceedings of IEEE Visualization (2002), pp. 253–264.
[FH07] FANG H., HART J. C.: Detail preserving shape deformation in image editing. ACM Transactions on Graphics
26, 3 (2007), 12–16.
[GG01] GOOCH B., GOOCH A.: Non-Photorealistic Rendering. A.K. Peters, USA, 2001.
∗

[HJO 01] HERTZMANN A., JACOBS C. E., OLIVER N., CURLESS
B., SALESIN D. H.: Image analogies. In Proceedings of
ACM SIGGRAPH (2001), pp. 327–340.

References

[HOCS02] HERTZMANN A., OLIVER N., CURLESS B., SEITZ
S. M.: Curve analogies. In Proceedings of Eurographics
Workshop on Rendering (2002), pp. 233–245.

[And] ANDREWS W. M.: Personal Communication. William
M. Andrews, Available at http://www.mcg.edu/medart/
MI-Faculty.html.

[Hod88] HODGES E.: The Guild Handbook of Scientific Illustration. John Wiley and Sons, Inc, Hoboken, USA,
1988.

c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

126

W. Chen et al. / Shape Context Preserving Deformation of 2D Anatomical Illustrations

[HS99] HAMEL J., STROTHOTTE T.: Capturing and re-using
rendition styles for non-photorealistic rendering. Computer Graphics Forum 18, 3 (1999), 173–182.

http://www.cs.cmu.edu/˜quake/triangle.html, last visited in
July 2005.
∗

[IMH05] IGARASHI T., MOSCOVICH T., HUGHES J. F.: As-rigidas-possible shape manipulation. In Proceedings of ACM
SIGGRAPH (2005), pp. 327–340.

[SLCO 04] SORKINE O., LIPMAN Y., COHEN-OR D., ALEXA
M., R¨OSSL C., SEIDEL H.-P.: Laplacian surface editing. In
Proceedings of the Eurographics/ACM SIGGRAPH symposium on Geometry processing (2004), pp. 179–188.

[Ito] ITO K.: Annotated list of fish illustrations. Available at http://www.hrw.com, last visited date: March
2007.

[SMW06] SCHAEFER S., MCPHAIL T., WARREN J.: Image deformation using moving least squares. ACM Transactions
on Graphics 25, 3 (2006), 533–540.

[KML99] KIRBY R., MARMANIS H., LAIDLAW D.: Visualizing
multivalued data from 2D incompressible flows using concepts from painting. In Proceedings of IEEE Visualization
(1999), pp. 333–340.

[ST90] STAUBESAND J., TAYLOR A. N.: Sobotta Atlas of
Human Anatomy. Urban and Schwarzenberg BaltimoreMunich, 1990.

∗

[LEM 02] LU A., EBERT D., MORRIS C., RHEINGANS P.,
HANSEN C.: Non-photorealistic volume rendering using
stippling techniques. In Proceedings of IEEE Visualization (2002), pp. 211–218.
[MD99] MORE K. L., DALLEY A. F.: Clinically Oriented Anatomy. Lippincott Williams and Wilkins Corp,
Philadephia, USA, 1999.
[ONOI04] OWADA S., NIELSEN F., OKABE M., IGARASHI T.:
Volume illustration: Designing 3D models with internal
textures. In Proceedings of ACM SIGGRAPH (2004), pp.
322–328.
[PGB03] PEREZ P., GANGNET M., BLAKE A.: Poisson image
editing. In Proceedings of ACM SIGGRAPH (2003), pp.
313–318.
[SDS05] SVAKHINE N., D. EBERT, STREDNEY D.: Illustration
motifs for effective medical volume illustration. IEEE
Computer Graphics and Applications 25, 3 (2005).
[She05] SHEWCHUK J. R.: A two-dimensional quality
mesh generator and delaunay triangulator. Available at

[Tho17] THOMPSON D.: On Growth and Form. Cambridge
University Press, Cambridge, UK, 1917.
[TLHD03] TONG Y., LOMBEYDA S., HIRANI A. N., DESBRUN
M.: Discrete multiscale vector field decomposition. ACM
Transactions on Graphics 22, 3 (2003), 445–452.
[Tol03] TOLEDO S.: TAUCS: A Library of Sparse Linear
Solvers, version 2.2. Tel-Aviv University, Available at
http://www.tau.ac.il/˜stoledo/taucs/, 2003.
∗

[WAA 05] WILEY D. F., AMENTA N., ALCANTARA D. A.,
GHOSH D., KIL Y. J., DELSON E., HARCOURT-SMITH W., ROHLF
F. J., JOHN K. S., HAMANN B.: Evolutionary morphing. In
Proceedings of IEEE Visualization 2005 (2005), pp. 431–
438.
∗

[WXW 06] WENG Y., XU W., WU Y., ZHOU K., GUO B.: 2D
shape deformation using nonlinear least squares optimization. The Visual Computer 22, 9 (2006), 653–660.
∗

[YZX 04] YU Y., ZHOU K., XU D., SHI X., BAO H., GUO B.,
SHUM H.-Y.: Mesh editing with poisson-based gradient
field manipulation. ACM Transactions on Graphics 23, 3
(2004), 644–651.

c 2008 The Authors
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

