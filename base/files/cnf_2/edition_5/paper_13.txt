DOI: 10.1111/j.1467-8659.2010.01842.x

COMPUTER GRAPHICS

forum

Volume 30 (2011), number 1 pp. 187–198

Compact Models
Narc´ıs Coll and Teresa Paradinas
Departament d’Inform`atica i Matem`atica Aplicada, Universitat de Girona, Spain
{coll,teresap}@ima.udg.edu

Abstract
Development of approximation techniques for highly detailed surfaces is one of the challenges faced today. We
introduce a new mesh structure that allows dense triangular meshes of arbitrary topology to be approximated. The
structure is constructed from the information gathered during a simplification process. Each vertex of the simplified
model collects a neighbourhood of input vertices. Then, each neighbourhood is fitted by a set of local surfaces
taking into account the sharp features detected. The simplified model plus the parameters of these local surfaces,
conveniently stored in a file, is what we call Compact Model (CM). The input model can be approximated from
its CM by refining each triangle of the simplified model. The main feature of our approach is that each triangle is
refined by blending the local surfaces at its vertices, which can be done independently of the others. Consequently,
adaptive reconstructions are possible, local shape deformations can be incorporated and the whole approximation
process can be completely parallelized.
Keywords: surface fitting, geometric error, least-squares, sharp features
ACM CCS: I.3.5 [Computational Geometry and Object Modeling]: Curve, Surface, Solid, and Object Representations; G.1.2 [Approximation]: Approximation of Surfaces and Contours.

Surface fitting is achieved by blending local surfaces.
These surfaces are stored at each vertex of the CM and are
generated by gathering the required information during a
simplification process.

1. Introduction
Level of detail (LOD) is an extensively used technique for
many computer graphics applications. The correct balance
of memory space, transitions between models and quality of
the approximations is key to the success of a method.

A CM can be used in many different application fields
such as visualization, adaptive reconstruction, surface fitting,
surface smoothing and surface deformation.

For a wide range of applications, original highly detailed
surfaces are too expensive to support and their processing is made difficult. In addition, simplified models are
not always enough because of the increasing demand for
realism.

1.1. Previous work
Interactivity provided by compactness of detailed geometric models is a desired goal in several application fields.
Increasingly, we want to work with more detailed surfaces
that consume much less time. A correct balance between
the memory space and the execution time required has to be
achieved to obtain the desired frame rate.

In this paper, we present a new mesh structure that allows
dense triangular meshes of arbitrary topology to be approximated. We call such structures Compact Models (CMs). A
CM is a small model from which we are able to generate
an approximation of the original mesh at a desired level and
preserve its original shape. The resulting mesh can be adaptively reconstructed by different criteria. Surfaces with sharp
features are also faithfully reconstructed.
c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics
Association and Blackwell Publishing Ltd. Published by
Blackwell Publishing, 9600 Garsington Road, Oxford OX4
2DQ, UK and 350 Main Street, Malden, MA 02148, USA.

In light of this idea, different techniques have been proposed. In one group, the main aim is to find a simpler

187

188

N. Coll & T. Paradinas / Compact Models

geometry and a set of scalar values which together are equivalent to the original model. Krishnamurthy and Levoy [KL96]
presented a scheme for encoding an arbitrary mesh using a
manually constructed B-spline patch network together with
a vector-valued displacement map. The Displaced Subdivision Surfaces introduced by Lee et al. [LMH00] consist of a
control mesh and a scalar field that displaces the associated
Loop subdivision surface [Loo87] locally along its normal.
The control mesh is obtained by simplifying the original
mesh using the quadric error metric (QEM) technique proposed in [GH97]. Guskov et al. [GVSS00] pursue a similar
goal, called Normal meshes. A normal mesh is a multiresolution mesh where each level can be written as a normal offset
from a coarser version. Their construction allows most of the
vertices to be encoded by scalar displacements.
In a second group, the main goal is to fit the original
model to a simpler surface by minimizing a geometric error.
Ohtake et al. [OBA∗ 03, OBA05] present shape representations (MPU and SLIM) that allow to approximate surface
models from a set of points. These techniques, driven by
hierarchical structures (octree and ball tree, respectively), locally fit piecewise implicit quadratic functions to the data
and use weighting functions (partitions of unity) to blend
these functions together. Because shapes are described by
implicit functions, some shape modelling operations are simple to perform. However, an isosurface extraction process is
needed to obtain a polygonal surface approximation, and they
are not capable of representing correctly surfaces with boundaries. Moreover, correct reconstruction of the input data is not
guaranteed. Least-squares meshes (LS-meshes) presented by
Sorkine and Cohen-Or [SCO04] are meshes with a prescribed
connectivity that approximate in a least-squares sense a set
of strategically placed control points. An initial LS-mesh is
computed and new control points are placed at the vertices
whose location in the LS-mesh have maximal error compared to their location in the original mesh. Because of their
prescribed connectivity, LS-meshes can only approximate a
given smooth mesh. Moving Least Squares (MLS) is a classical method for point set surface approximations ideally designed to reconstruct smooth surfaces [Lev03, ABCO∗ 03].
Fleishman et al. [FCOS05] use the MLS methodology for
reconstructing surfaces with sharp features. The technique
is based on an iterative refitting algorithm that locally classify regions of the point set to outlier-free smooth regions
expressed by bivariate polynomials of degree two. The outliers are detected by applying a robust statistics framework.
The result of this approach is a piecewise quadratic surface.
T-splines defined on manifolds [HWW∗ 06] or on polycube
maps [WHL∗ 08] are capable to approximate smooth surfaces. However, these approaches have a high computational
cost due to the intrinsic complexity of T-splines. Subdivision surfaces have also been used in shape approximation.
Several algorithms [MMTP04, MK05, CWQ∗ 07, LWY08]
for fitting subdivision surfaces to dense triangular meshes or
dense point clouds have been presented. With an initial control mesh, these algorithms employ an iterative optimization

method that performs the following two steps until convergence occurs: finding foot points of the input vertices to
compute fitting errors, and updating the control mesh points
to further reduce the fitting errors. Marinov et al. [MK05]
and Cheng et al. [CWQ∗ 07] only deal with smooth fitting
surfaces, while fitting subdivision surfaces with sharp features is considered by Ma et al. [MMTP04] and Ling et al.
[LWY08]. Variational shape segmentation techniques aim
to segment a shape into patches that can be well approximated by a parametric surface. Two iterative steps are used:
mesh partition and fitting a surface, called proxy, to each
partitioned region. Cohen-Steiner et al. [CSAD04] only use
plane proxies, Wu and Kobbelt [WK05] use planes, spheres,
cylinders and rolling ball patches as proxy types, whereas
Yan et al. [YLW06] consider quadric surface proxies. However, these kinds of approaches are only adequate for models
which inherently consist of clear geometric structures.
1.2. Our contributions
The aim of this paper is to present the Compact Models: a
new mesh structure able to approximate a highly detailed
surface of arbitrary topology and to obtain, whenever we
want, a more detailed one which is close to the original. Our
approach combines the idea of blending local primitives and
LOD techniques, result in a simple and easy to implement
method that produces adaptive approximations of the original
surface. Next, we summarize the main contributions of our
approach:
• Approximation with controlled error.
• Sharp feature preservation.
• Least-squares fitting that involves solving only 5 × 5
linear systems of equations.
• Simple parallelizable reconstruction.
• Adaptive reconstruction based on a desired criterion.
• Local shape deformations can be integrated to the reconstruction process.
Observe that the last three contributions are the main advantages of our approach over those based on subdivision
surfaces.
2. Overview
In this paper, we present a new approach to approximate a
surface by blending local surfaces. This is a new continuous representation of the shape of the original model that
can be exploited at any time. We can generate new models
at different levels of detail and with desired characteristics
thanks to the flexibility of local surfaces. For this reason, a
CM can be used for a wide range of applications as we will
see in Section 6. To introduce CMs, we have to explain how
they are constructed, stored and applied. The paper has been

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

N. Coll & T. Paradinas / Compact Models

189

3. Simplification Process
From a dense triangular mesh we use a simplification process to compact the surface model information. Different
surface simplification techniques have been proposed to automatically generate high-quality approximations of original
models. For general purposes, we can use any of the existing simplification methods, but because we want to obtain
accurate results we have to use a method that properly preserves geometric fidelity between original and simplified
models. In our experiments we have used the simplification
method proposed in [CP10]. Curved features of the model
are preserved by weighting the quadric error metrics [GH97]
by a local area distortion measure. Next, we summarize the
main characteristics of this method:
• Preservation of curved features of the model by using
the local area distortion measure as the weight of each
vertex.
• Priority queue of edges ordered by the contraction cost.
When edges have similar error, the shortest one is sent
for processing.
• Full edge collapse to obtain more accurate approximations.
• Fitting improved by applying an edge flip operator.
Figure 1: Steps of the CM generation and reconstruction of
a cylinder model. Local surfaces incident to the red point are
obtained by the corresponding yellow and black point regions
after a redistribution step and a sharp edge detection.

organized into the next three stages of processing (illustrated
in Figure 1):
• Simplification process: A simplification process is applied to the original highly detailed surface. Original
points are gathered and stored in simplified vertices during simplification. Finally, we obtain a simplified model
in which each vertex represents a set of original points.
• CM generation: Taking into account the information collected during the simplification process, we first detect
the sharp edges and then generate local surfaces at each
vertex of the simplified model. We call CM the simplified
model plus the necessary information to generate these
local surfaces. A CM can be efficiently stored in a file.
• CM reconstruction: From a CM we can easily obtain a
faithful reconstruction of the original model by blending local surfaces stored at each vertex. Thanks to the
codification done in the CM file format, we can properly
reconstruct sharp features. Moreover, the original models can be adaptively reconstructed by different criteria.
For example, it is possible to only reconstruct parts of a
model in a region of interest.

• Consistency checks are carried out to guarantee that the
projection of adjacent faces of a vertex onto the local
tangent plane is injective.
We take advantage of the simplification process to collect
the necessary information to generate the CM. Before the
simplification process we create a set of points Ri for each
vertex vi of the original model. Each set Ri is initialized
with vi and its adjacent vertices. The simplification process
proceeds as follows. If vi vj is an edge to be collapsed and
vk is the vertex of collapse, the set Rk is computed by Ri
∪ Rj . At the end of the simplification process we obtain a
simplified model with a set of points in each of its vertices
(Figure 1b). In case a vertex vi of the simplified model is not
an original vertex, vertex vi is substituted by the point in Ri
closest to vi .
The resulting mesh can be seen as a set of vertices that
represent the regions defined by the corresponding set of
points. Each set of points allows the shape of the surface
at each simplified vertex position to be determined. As the
simplified vertices are optimally distributed to guarantee geometric fidelity, the correct union of the shapes defined by
the collected points at each vertex can result in an accurate
approximation of the original model.
When a model has regions of nearly constant curvature, points of the original model can be incorrectly distributed to sets Ri due to the arbitrary order of the edgecollapses. To prevent this and really capture the shape of the

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

190

N. Coll & T. Paradinas / Compact Models

original surface at each vertex, we apply a redistribution step
(Figure 1c).
This step consists of adding points from one point set to
others. Given two adjacent vertices vi and vj , a point p ∈
Ri is added to the set Rj if distance p to vi is greater than
distance p to vj and the angle between normal vectors at p
and vj is less than a certain threshold. At the beginning of
the whole process, the normal vector at each vertex of the
original model is computed by the area-weighted average of
the normal vectors of its adjacent faces.

The unknown coefficients a, b, c, d and e are determined by
minimizing
(x3 − Q(x1 , x2 ))2 .
p∈R

The local function Q determines a local surface S at v
defined by
S(x1 , x2 ) = v + x1 U + x2 V + Q(x1 , x2 )N ,
and the normal vector of S at v is N S = N − dU − eV .

4. CM Generation
The basic idea of CMs is to create a continuous representation
of the shape of a highly detailed surface with a much smaller
mesh. The generation process is key to the good behaviour of
the result. We have to extract the most important information
about the model to faithfully reconstruct the original model.
The process consists of two steps:

Notice also that a local conical surface can be fitted by
minimizing
x32 − Q(x1 , x2 )

2

,

p∈R

and then the local surface S at v is defined by
S(x1 , x2 ) = v + x1 U + x2 V +

Q(x1 , x2 )N .

(1) Sharp edge detection.
(2) Local surfaces generation at each vertex of the simplified model.
In the following sections, we describe these two steps in
detail. But, first we need to introduce some terminology and
some notation about the least-squares technique.
4.1. Terminology and notation
Given a point p in Ri , the face of the simplified model adjacent
to vi closest to p along the normal direction at p is called the
foot face of p. The points of vi vj vk are those in Ri ∪ Rj ∪
Rk whose foot face is vi vj vk . The foot point of a point p on
vi vj vk is the point of vi vj vk nearest to p.
We use the least-squares technique to fit each set Ri by a
local quadratic surface as follows. Let v be the vertex where
we want to construct a local quadratic surface and R be the
set of points collected by v. Let N be the unit normal vector
assigned to v. From N = (n1 , n2 , n3 ) we construct two
additional orthogonal unit vectors U and V as follows:
⎧
⎨ (n , −n , 0)/ n2 + n2 n = 0 or n = 0,
2
1
1
2
1
2
U=
⎩
(1, 0, 0)
n1 = 0 and n2 = 0,
V = N × U.

Vertex v and vectors U, V and N define a local coordinate
frame where we use (x 1 , x 2 , x 3 ) as local coordinates of a
point p. At this local frame a quadratic function Q is given
by
Q(x1 , x2 ) = ax12 + bx1 x2 + cx22 + dx1 + ex2 .

4.2. Sharp edge detection
At this point, we have only one set of points for each simplified vertex. If we imagine that each set of points can be represented by a surface, we can only generate smooth surfaces
by assembling the surfaces at each vertex. For this reason, we
have to detect sharp edges to be able to reconstruct different
kinds of meshes, even surfaces with sharp features.
There are different approaches to detecting sharp features
[HG01, GWM01, HPW05, YBS05, DHOS07, ZGM09] over
the meshes. The most common sharp edge detection method
consists of computing the angle between the normals of the
two incident faces of the studied edge. If the obtained angle is
larger than a certain threshold, the edge is marked as a sharp
edge. This method is not useful in our approach because
the simplified faces do not strictly follow the shape of the
original model. For example, if we simplify a cylinder at a
high level we can obtain a prism. If this method were used,
the vertical edges would be incorrectly marked. We have to
use a method that takes into account the original shape of the
model. For this reason, we define a new sharp edge detection
process. For each edge e of the simplified model we apply
the following steps:
(1) Fit by the least-squares technique the points of both
incident faces to e with a quadratic surface centred at
the foot point m of the midpoint of e.
(2) Compute the normals NS0 and NS1 at m of the two
quadratic surfaces.
(3) Compute the angle between NS0 and NS1 . If it is bigger
than a threshold, the edge e is marked as a sharp edge.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

191

N. Coll & T. Paradinas / Compact Models

In Figure 1(d), we can see depicted in blue the sharp edges
of the cylinder.

4.3. Local surface generation
Given a vertex v of the simplified model and its corresponding set R of collected points, we want to fit a local surface
to R. First, we analyse if at least one sharp edge is incident
to v. In case of only one sharp edge (dart vertex), the incident edge with bigger angle between NS0 and NS1 is also
classified as sharp edge. Then, the set R is split into subsets
R n according to the incident sharp edges as follows. Two
adjacent faces are in the same subset if their shared edge is
not a sharp edge. Then, each subset R n corresponds to the
points whose foot face is within the same group of adjacent
faces (Figure 1d). After this, the sets R n are fitted by the least
squares technique with a quadratic surface S n centred at v
(Figure 1e). When any sharp edge is incident to v, the set R
is fitted by the quadratic surface or the conical surface that
gives minimum fitting error. When the second case holds, the
vertex is classified as cone-type vertex.
After generating the CM we obtain a mesh with a set of
n lists of coefficients [a, b, c, d, e] and the corresponding
normal N at each vertex.
A CM can be easily saved by storing vertices, least-squares
coefficient list, normal vectors, cone-type vertex list and by
describing the faces by three sets (one per vertex) of three indices: vertex, coefficient list and normal vector. Sharp edges
are implicitly saved by only using this data structure. From
this reduced information we are able to reconstruct the original model.

m

and S corresponding to the two groups of faces adjacent to
e. Let π the orthogonal plane to e passing through p. Then,
point S(p) is defined as the point on S n ∩ S m ∩ π closest to
p. Observe that S(p) needs to be computed by a Newton iteration scheme. Notice also that it may not exist if a bad fitting
of surfaces S n and S m to the original model is done. However,
in practice this not happen due to the nature of the surfaces
and the simplification levels used. For a point p not lying
on a sharp edge, we use the local surface S n corresponding
to the group of the p face. Two different projections onto
S n are possible. The simplest one is the projection along the
normal direction N at v. If point p is expressed by its local
coordinates (x1 , x2 , x3 ), S(p) is determined by S n (x 1 , x 2 ).
The second possibility consists of determining S(p) by the
point on S n closest to p. In this case, we compute S(p) using a Newton iteration scheme. Naturally this second option
increases the computational time but offers more accurate
results. The two options were tested on various models and
we experimentally observed that second option multiplied by
a factor of three the running times. This is because Newton’s
method requires three iterations in average. In spite of this,
all the examples shown in Section 6 were computed using
the second option because running times were low enough
(Table 1).
Next, we describe how we compute (p). Let (α 1 , α 2 ,
α 3 ) be the barycentric coordinates of point p with respect
to its face v 1 v 2 v 3 . Then we have p = α 1 v 1 + α 2 v 2 + α 3 v 3
with α 1 ∈ [0, 1], α 2 ∈ [0, 1 − α 1 ] and α 3 = 1 − α 1 − α 2 .
From coordinates α 1 an α 2 we consider the following weight
functions:
α13
,
+ + (1 − α1 − α2 )3
3
α2
W2 (p) = 3
,
α1 + α23 + (1 − α1 − α2 )3

W1 (p) =

5. CM Reconstruction
The original model is reconstructed by refining the simplified
model. Each triangle of the simplified model is subdivided
into smaller triangles and each vertex p of the refined triangulation is substituted by a point (p) computed by blending
the local surfaces at each vertex of the triangle. The following sections are dedicated to describing these two processes.
Notice that each triangle can be refined independently of
the others. Consequently, adaptive refinements are allowed
and the whole approximation process can be completely
parallelized.

W3 (p) =

α13

α23

(1 − α1 − α2 )3
.
α13 + α23 + (1 − α1 − α2 )3

Observe that
• Wi (vi ) = 1 , Wi (vj ) = 0 (i = j ) .
•

∂Wi
(vj ) = 0,
∂αk

∂ 2 Wi
(vj ) = 0.
∂α1 ∂α2

Then, we determine the point (p) by blending the three
projections S1 (p), S2 (p) and S3 (p) as follows:

5.1. Blending local surfaces
Let v be a vertex of the simplified model. As explained in the
previous section, the adjacent faces of v are grouped according the sharp edges, and a local surface S n has been assigned
to each group. For each point p on an adjacent face of v we
define a projection S(p) onto the local surfaces as follows.
If p lies on a sharp edge e, we use the two local surfaces S n

(p) = W1 (p)S1 (p) + W2 (p)S2 (p) + W3 (p)S3 (p) .

Surface
•

satisfies the following properties:

(vi ) = vi .

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

192

•

N. Coll & T. Paradinas / Compact Models

∂
∂Si
∂2
∂ 2 Si
(vi ) =
(vi ),
(vi ) =
(vi ).
∂αk
∂αk
∂α1 ∂α2
∂α1 ∂α2

Then, surface is approximately equal to the local surfaces at each vertex. This is why we use such kind of approximations. In Figure 1(f), we can see the final approximation
of the cylinder.

5.2. Triangle subdivision
The triangles of the simplified model can be subdivided using
two different strategies:
Regular subdivision. Each triangle is recursively subdivided into four triangles by joining the midpoints of the
edges until a certain level of accuracy is achieved.
Adaptive subdivision. Each triangle is recursively subdivided into two, three or four triangles by joining the
midpoints of the edges that satisfy some criterion. Several criteria can be applied. We have used the following
criteria for a given edge p 1 p 2 :
• Silhouette. At least one of the points (p 1 ) or (p 2 )
is detected to be on the silhouette of the model with
respect to a given point of view.
• Region of interest. At least one of the points
or (p 2 ) is within a region of interest.

(p 1 )

• Length. The length of (p 1 ) (p 2 ) is greater than a
certain threshold defined by the user.
In the following, the number of subdivision steps is called
level.

5.3. Controlling the error
The reconstruction process provides a natural way to control
the error between the original mesh and the reconstructed
mesh. Finding the foot points of the reconstructed mesh vertices and computing their fitting errors, we can update the CM
by adding in a straightforward way the foot points whose fitting error is greater than a certain bound introduced by the
user.

5.4. Local shape deformations
Local shape deformations can be effectively applied to a CM
as follows. Let Ti be the local transformation applied to the
area of influence of the vertex vi of the simplified model. The
natural way to compute the deformed point T ( (p)) of (p)
is given by
T ( (p)) = w1 (p)T1 (S1 (p)) + w2 (p)T2 (S2 (p))
+ w3 (p)T3 (S3 (p)) .

Figure2: Comparison between our approach and the Butterfly subdivision method of the reconstruction of a smooth
knot model.

6. Results and Applications
The presented technique can be seen as a surface approximation method that obtains faithful reconstructions. Our
approach provides the versatility required to adapt the result according to user needs. It can be achieved by changing the simplification level, the sharp edge threshold or by
making more or less subdivisions in the reconstruction process. Moreover, we can reconstruct the model regularly or
adaptively by a desired criterion. We present some results to
demonstrate the effectiveness of our technique. A quantitative and a qualitative analysis have been made to show all the
characteristics of the method. All experiments were carried
out on a quad core duo (2.83GHz) with a GeForce GTX 280.

6.1. Smooth surfaces
Figure 2 shows a reconstruction of a knot model. We generate
a well smoothed model by using a very simplified mesh.
We compare our result with that obtained by a smoothing
method ([DLG90]). The error distribution maps (notice that
the range of colours depends on the corresponding maximum
error of each model) shows how our technique obtains better
approximations than only applying a smoothing method over
the simplified model.
Figures 3 and 4 are representative examples of big meshes
obtained from scanning processes. As can be appreciated in

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

N. Coll & T. Paradinas / Compact Models

193

Figure 5: CM reconstruction of the Fandisk model with the
corresponding error maps.
Figure 4: CM reconstruction of a frog model.
close views, the original shapes are faithfully reconstructed
despite the substantial storage space reduction.
6.2. Sharp feature preservation
Figures 5 and 6 present the reconstruction of models with
the presence of sharp features. The difference between original models and their reconstructions is inappreciable even

though the simplified mesh have a small number of faces.
The error map distribution illustrated for the Fandisk model
shows the good performance of our method when dealing with sharp feature models. Figure 7 presents an example with both sharp edges and cone-type vertices. Another example is showed in Figure 8 formed by sharp edges
and two dart vertices. As we can see, we are able to correctly detect, preserve and reconstruct all the features of the
models.

Figure 3: From left to right: the original Fertility model (483 226 faces), the simplified model (1000 faces) and the CM
reconstruction (16 000 faces). The CM generation takes 163.55 s and only 0.28 s to reconstruct it at level 2. The size of the CM
file is 0.3% of the original model.
c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

194

N. Coll & T. Paradinas / Compact Models

Figure 8: CM reconstruction of a model with sharp edge
and dart vertex preservation.

Figure 6: CM reconstruction of a sword model with sharp
edge preservation.

implemented. The first generates a model with regular size
edges that are 20% of the longest edge of the simplified
model. The second subdivide takes into account a point of
interest situated in the tip of the nose (point depicted in red).
As we move away from the selected point the faces become
bigger. Depending on the point of view, the last one allows
the silhouette to be refined. As we can see, the versatility of
our technique allows users to adapt the result to their needs.

6.4. Deformations
Figure 10 shows a deformed camel obtained from applying
a set of local deformations to the corresponding CM.

6.5. Strategies for LOD

Figure 7: CM reconstruction of a star model with sharp
edge and cone-type vertex (depicted in green) preservation.

The general idea of the LOD technique is to visualize models at different levels of detail according to the distance to
the observer. A CM can then be incorporated into an LOD
technique using one of two different strategies. Figure 11 illustrates the first strategy: the model is simplified at different
levels and each simplified model is reconstructed at the same
level. Observe that as we reduce the number of faces of the
simplified model, the geometric error increases. Figure 12
illustrates the second strategy: the model is simplified at a
desired level and reconstructed at different levels. Observe
that as we increase the reconstruction level, the geometric
error decreases.

6.6. Quantitative results
6.3. Adaptive reconstruction
Figure 9 shows the reconstruction results on the Max Planck
model. Regular reconstruction demonstrates the power of the
local surfaces stored at each vertex because the facial features
have been recovered. Moreover, we illustrate the results obtained with the three different adaptive reconstruction criteria

Table 1 shows the memory space and the computation time
related to most of the examples used. In first column we compare the size of the original file with the size of the CM file. As
we can see the reduction is considerable using our method.
We can obtain really good approximations with much less
space. Observe that for horse and Max Planck models the
size of CM are equal in all variants due to the CM used is the

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

N. Coll & T. Paradinas / Compact Models

195

Figure 9: Regular and adaptive reconstruction of the Max Planck model.
during the simplification can be underestimated due to in all
our experiments it only represents an increment of 3%. As
we can see, the CM generation time depends on the size of
the original model, the simplification level and the presence
of sharp edges. The CM reconstruction time depends on the
size of the simplified model, the subdivision level and the
presence of sharp edges. For example, a simplified model of
1000 faces can be reconstructed at level 2 in less than 0.3 s.

Figure 10: Deformation of a CM (1000 faces) of a camel
reconstructed at level 2.
same. In second column we present the computation time for
the two principal steps, CM generation and CM reconstruction (without parallelization). The cost of gathering points

Finally, we would like to make some comparisons with
related approaches. Figures 13 and 14 compare the results
obtained by [CWQ∗ 07] and our approach for Igea and Ball
Joint models, respectively. As we can see, our reconstruction
obtains more accurate approximations of the original models.
Because of the nature of the [CWQ∗ 07] method, their results
are too smoothed and do not fit the real feature details of the
models even though they are reconstructed at the limit. Table
2 shows the geometric errors obtained for these two models
with the two methods. It supports the good behaviour of our

Figure 11: CM reconstruction of a camel model at different levels of simplification.
c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

196

N. Coll & T. Paradinas / Compact Models

Figure 12: CM reconstruction of a horse model at different levels of subdivision.
Table 1: Memory space occupied by the original model and the CM
files in MB and computation time of the CM generation and CM
reconstruction steps in seconds.

Memory space

Computation time

Original

CM

Generate

Reconstruct

Fandisk

0.64211

0.02656

1.29

0.42

Camel
2000 faces
1000 faces
500 faces

0.96891
0.96891
0.96891

0.13751
0.10890
0.05455

1.37
1.37
1.37

0.49
0.25
0.14

Sword

1.78455

0.04766

3.82

0.17

Horse
Level 1
Level 2
Level 3

4.80865
4.80865
4.80865

0.08220
0.08220
0.08220

10.21
10.21
10.21

0.06
0.24
1.03

Frog

4.86687

0.16422

7.70

0.46

Max Planck
Level 2
20% length
Point of interest
Silhouette

4.87292
4.87292
4.87292
4.87292

0.12321
0.12321
0.12321
0.12321

9.32
9.32
9.32
9.32

0.35
0.22
0.14
0.17

Knot

6.16278

0.06151

13.54

0.21

method and shows how we obtain smaller RMS and Max
errors for the two models. For models with sharp features we
compare our results with [LWY08] for the Fandisk model.
In Table 3, we can see how substantially smaller error values are obtained even though the simplified mesh has fewer
vertices.

Figure 13: Comparison of the approximation result of the
Igea model between the approach of Cheng et al. and our
method. The reconstructions are build from the same number
of faces. The image of the result of Cheng et al. 07 has been
borrowed from [CWQ∗ 07].

7 Conclusions and Future Work
We present a new technique to approximate model information to reconstruct the model and preserve its original shape.
The method consists of two principal steps: CM generation
and CM reconstruction. The first computes local surfaces at

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

197

N. Coll & T. Paradinas / Compact Models

Table 3: Geometric error comparison in % with respect to the BBox
diagonal for the Fandisk model.

Fandisk
Vert# Simplified

RMS

Max

346
127

0.000581
0.000271

0.0135
0.00208

Ling et al. 08
CM reconstruction

prove the computation time of the generation and reconstruction processes. This will be an important part of our future
work.
Dealing with textured models is another important future
line of work. The precise texture coordinates computation for
the reconstructed points is essential to the study’s success. We
will apply colour textures and normal mappings to recover
all the original details.
7 Acknowledgments
Figure 14: Comparison of the approximation result of the
Ball Joint model between the approach of Cheng et al. and
our method. The reconstructions are build from the same
number of faces. The image of the result of Cheng et al. 07
has been borrowed from [CWQ∗ 07].
Table 2: Geometric error comparison in % with respect to the BBox
diagonal for the Igea and Ball Joint models showed in Figures 13
and 14, respectively).

Igea

Cheng et al. 07
CM reconstruction

Ball joint

RMS

Max

RMS

Max

0.0005
0.00035

0.0036
0.00221

0.0009
0.00071

0.0064
0.00424

The authors thank the anonymous reviewers for proofreading
earlier versions of the paper and providing helpful comments
and suggestions. This work was supported by grant TIN200767982-C02-02 from the Spanish Ministerio de Educaci´on y
Ciencia.
References
[ABCO∗ 03] ALEXA M., BEHR J., COHEN-OR D., FLEISHMAN S.,
LEVIN D., SILVA C. T.: Computing and rendering point set
surfaces. IEEE Transactions on Visualization and Computer Graphics 9 (2003), 3–15.
[CP10] COLL N., PARADINAS T.: Accurate simplification of
multi-chart textured models. Computer Graphics Forum
29 (2010), 1842–1853.
[CSAD04] COHEN-STEINER D., ALLIEZ P., DESBRUN M.: Variational shape approximation. ACM Transactions on Graphics 23, 3 (2004), 905–914.

each vertex following the original shape of the model. The
second exploits all stored information and joins it properly
to obtain an accurate approximation. The method also allows
sharp features to be preserved and an adaptive reconstruction
to be performed.
The versatility of the method combined with the simplicity
of the computations makes it a very useful tool in different
fields of application. All the steps of the presented technique
except the simplification process are completely parallelizable. So both the CM generation and the CM reconstruction times will decrease significantly. Taking advantage of
the programmable capabilities of the hardware, we will im-

[CWQ∗ 07] CHENG K.-S. D., WANG W., QIN H., WONG K.-Y.
K., YANG H., LIU Y.: Design and analysis of optimization
methods for subdivision surface fitting. EEE Transactions
on Visualization and Computer Graphics 13, 5 (2007),
878–890.
[DHOS07] DANIELS J. I., HA L. K., OCHOTTA T., SILVA C. T.:
Robust smooth feature extraction from point clouds. In
SMI 07: Proceedings of the IEEE International Conference on Shape Modeling and Applications 2007 (Washington, DC, USA, 2007), IEEE Computer Society, pp.
123–136.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

198

N. Coll & T. Paradinas / Compact Models

[DLG90] DYN N., LEVINE D., GREGORY J. A.: A butterfly
subdivision scheme for surface interpolation with tension control. ACM Transactions on Graph. 9, 2 (1990),
160–169.
[FCOS05] FLEISHMAN S., COHEN-OR D., SILVA C. T.: Robust
moving least-squares fitting with sharp features. ACM
Transactions on Graphics 24, 3 (2005), 544–552.
[GH97] GARLAND M., HECKBERT P. S.: Surface simplification
using quadric error metrics. In Computer Graphics (Proc.
SIGGRAPH) 31, Annual Conference Series (New York,
NY, USA, 1997), pp. 209–216.
[GVSS00] GUSKOV I., VIDIMCE K., SWELDENS W., Schr¨oder P.:
Normal meshes. In Proceedings of the SIGGRAPH (New
York, NY, USA, 2000), pp. 95–102.
[GWM01] GUMHOLD S., WANG X., MACLEOD R.: Feature extraction from point clouds. In Proceedings of the 10th
International Meshing Roundtable (Newport Beach, CA,
USA, 2001), pp. 293–305.
[HG01] HUBELI A., GROSS M.: Multiresolution feature extraction for unstructured meshes. In VIS 01: Proceedings of the conference on Visualization 01 (Washington, DC, USA, 2001), IEEE Computer Society, pp. 287–
294.
[HPW05] HILDEBRANDT K., POLTHIER K., WARDETZKY M.:
Smooth feature lines on surface meshes. In SGP 05: Proceedings of the third Eurographics symposium on Geometry processing (Aire-la-Ville, Switzerland, Switzerland,
2005), Eurographics Association, p. 85.

[Loo87] LOOP C.: Smooth Subdivision Surfaces Based on
Triangles. Department of Mathematics, University of
Utah, Utah, USA, August 1987.
[LWY08] LING R., WANG W., YAN D.-M.: Fitting sharp features with loop subdivision surfaces. Computer Graphics
Forum 27, 5 (2008), 1383–1391.
[MK05] MARINOV M., KOBBELT L.: Optimization methods for
scattered data approximation with subdivision surfaces.
Graphical Models 67, 5 (2005), 452–473.
[MMTP04] MA W., MA X., TSO S. K., PAN Z.: A direct
approach for subdivision surface fitting from a dense triangle mesh. Computer-Aided Design 36, 6 (2004), 525–
536.
[OBA∗ 03] OHTAKE Y., BELYAEV A., ALEXA M., TURK G.,
SEIDEL H.-P.: Multi-level partition of unity implicits. ACM
Transactions on Graph. 22, 3 (2003), 463–470.
[OBA05] OHTAKE Y., BELYAEV A., ALEXA M.: Sparse lowdegree implicit surfaces with applications to high quality
rendering, feature extraction, and smoothing. In SGP 05:
Proceedings of the Third Eurographics Symposium on Geometry Processing (Aire-la-Ville, Switzerland, Switzerland, 2005), Eurographics Association, p. 149.
[SCO04] SORKINE O., COHEN-OR D.: Least-squares meshes.
In Proceedings of Shape Modeling International (Genova,
Italy, 2004), IEEE Computer Society Press, pp. 191–199.
[WHL∗ 08] WANG H., HE Y., LI X., GU X., QIN H.: Polycube
splines. Computer Aided Design 40, 6 (2008), 721–733.

[HWW∗ 06] HE Y., WANG K., WANG H., GU X., QIN H.:
Manifold t-spline. In Proceedings of Geometric Modeling
and Processing (Pittsburg, PA, USA, 2006), pp. 409–422.

[WK05] WU J., KOBBELT L.: Structure recovery via hybrid
variational surface approximation. Computer Graphics
Forum 24, 3 (2005), 277–284.

[KL96] KRISHNAMURTHY V., LEVOY M.: Fitting smooth surfaces to dense polygon meshes. In SIGGRAPH 96: Proceedings of the 23rd Annual Conference on Computer
Graphics and Interactive Techniques (New York, NY,
USA, 1996), ACM, pp. 313–324.

[YBS05] YOSHIZAWA S., BELYAEV A., SEIDEL H.-P.: Fast and
robust detection of crest lines on meshes. In SPM 05:
Proceedings of the 2005 ACM Symposium on Solid and
Physical Modeling (New York, NY, USA, 2005), ACM,
pp. 227–232.

[Lev03] LEVIN D.: Mesh-independent surface interpolation.
Geometric Modeling for Scientific Visualization 3 (2003),
37–49.

[YLW06] YAN D.-M., LIU Y., WANG W.: Quadric surface
extraction by variational shape approximation. In GMP
(2006), M.-S. Kim and K. Shimada (Eds.), vol. 4077 of
Lecture Notes in Computer Science, Springer, Pittsburg,
PA, USA, pp. 73–86.

[LMH00] LEE A., MORETON H., HOPPE H.: Displaced subdivision surfaces. In SIGGRAPH 00: Proceedings of the
27th Annual Conference on Computer Graphics and Interactive Techniques (New York, NY, USA, 2000), ACM
Press/Addison-Wesley Publishing Co., pp. 85–94.

[ZGM09] ZHIHONG M., GUO C., MINGXI Z.: Robust detection
of perceptually salient features on 3d meshes. The Visual
Computer 25, 3 (2009), 289–295.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

