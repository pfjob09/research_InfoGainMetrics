DOI: 10.1111/j.1467-8659.2011.01879.x
EUROGRAPHICS 2011 / M. Chen and O. Deussen
(Guest Editors)

Volume 30 (2011), Number 2

Intrinsic Shape Matching by Planned Landmark Sampling
A. Tevs 1 , A. Berner1 , M. Wand1,2 , I. Ihrke1,2 and H.-P. Seidel1
1 Max-Planck

Institut für Informatik, Saarbrücken, Germany
University, Saarbrücken, Germany

2 Saarland

Abstract
Recently, the problem of intrinsic shape matching has received a lot of attention. A number of algorithms have
been proposed, among which random-sampling-based techniques have been particularly successful due to their
generality and efficiency. We introduce a new sampling-based shape matching algorithm that uses a planning step
to find optimized ”landmark” points. These points are matched first in order to maximize the information gained
and thus minimize the sampling costs. Our approach makes three main contributions: First, the new technique
leads to a significant improvement in performance, which we demonstrate on a number of benchmark scenarios.
Second, our technique does not require any keypoint detection. This is often a significant limitation for models
that do not show sufficient surface features. Third, we examine the actual numerical degrees of freedom of the
matching problem for a given piece of geometry. In contrast to previous results, our estimates take into account
unprecise geodesics and potentially numerically unfavorable geometry of general topology, giving a more realistic
complexity estimate.
Categories and Subject Descriptors (according to ACM CCS): I.4.8 [Computer Graphics]: Image Processing and
Computer Vision—Range data, Registration

1. Introduction
In recent years, the problem of shape matching has gained
a lot of interest [ASP∗ 04, MGPG04, GMGP05, HAWG08,
RS08]: Given two pieces of geometry, we would like to compute corresponding points on both pieces. A number of variants of this problem exists, such as finding rigid, isometric,
conformal, or more general mappings between two surfaces.
In this paper, we consider the problem of approximate
intrinsic matching. This means that we are looking for a
matching that conserves geodesic distances up to minor errors due to sampling or slight non-isometries in the input.
This is a successful and widely adopted model for matching
deformable objects such as human or animal body shapes
in different poses, where the deformation is naturally very
close to isometric. A number of algorithms have been proposed to address this problem [ASP∗ 04,BBK06b,HAWG08,
LF09,RS08,SOG09,TBW∗ 09,RPSS10]. The most common
approach is to first compute a set of discriminative feature
points on both shapes along with a local, isometry invariant
descriptor and then try to find a matching of these features
such that the pairwise geodesic distances between all corc 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

Figure 1: Landmarks computed for a human face, with one
landmark added at each step. The first image shows the distribution of uniqueness (i.e. from blue: most unique, to red:
most similar to other) of the first landmark. Further points
build up a plan: Each further point is chosen to be of maximal utility for solving the isometry matching problem.

responding pairs of feature points are preserved. Tevs et al.
[TBW∗ 09] argue heuristically that a few correct matches are
sufficient to fully constrain the problem, and that these can
be found using RANSAC. Lipman et al. [LF09] prove that
3 point correspondences are sufficient to fix an isometry on
topological discs and spheres, and, very recently, Ovsjanikov
et al. [OMMG10] strengthen the result: By analyzing global
shape properties encoded in heat-kernel functions, a single

544

Tevs et al. / Intrinsic Shape Matching by Planned Landmark Sampling

correspondence is sufficient to fix an isometry if the shape
and the point meet certain conditions (implying in particular the absence of continuous sets of self-isometries). These
results establish that the intrinsic complexity of finding isometric matches is rather low because the problem does not
allow for a large number of degrees of freedom. While these
remarkable results solve much of the problem in theory, the
practical complexity is still unclear: In real-world scenarios, we have to deal with input data that is undergoing only
approximately isometric deformations, there are numerical
precision issues, and the intrinsic distances are not reliable
due to missing topological information.
For example, if an input shape consists of two pieces connected with a narrow tunnel of very small diameter, fixing
intrinsic distances on one piece will in practice not fully constrain the matching on the second piece, even if this was the
case if we had a perfectly isometric deformation and infinite
numerical resolution. Consequently, the practical implementations of [LF09, OMMG10] employ voting involving multiple correspondence sets in order to obtain stable results in
practice. For real-world scenarios, it remains unclear how
much correspondence information is necessary to fully constrain the matching problem.
The two questions our paper addresses are the following:
• What is the practical complexity of matching two isometrically deformed shapes, assuming a certain amount of uncertainty in intrinsic distance estimates?
• Can we find an algorithm that systematically collects the
most relevant correspondence information to find a global
shape match as quickly as possible?
Our contributions: To address the problem, we are proposing a new shape matching algorithm based on planned random sampling: This means, instead of using a simple random sampling of correspondences as in [TBW∗ 09], we are
building a plan on how to choose optimized sample points on
the source shape that maximize the information gained and
therefore minimize the costs for guessing correspondences.
Our key idea is to look at the entropy of the posterior distribution of possible matches to assess what are good plan
points.
Starting from an empty set of prior knowledge, we incrementally add points that minimize the entropy of the posterior distribution of potential matches and thereby minimize the effort of finding a new piece of information in
the next round. A landmark coordinate scheme [HAWG08,
TBW∗ 09, OMMG10] is then employed to immediately extend the solution to dense correspondences. The plan can be
pre-computed given only the source shape. It can then be
reused for matching to a large number of target shapes. This
leads to almost real-time matching in situations where a few
template shape is matched against a large collection of input
data.

Our algorithm leads to significant savings in sampling
costs compared to previous random sampling, and gives
some insight on the practical complexity of near-isometric
shape matching. For many typical example shapes, our plan
will actually require a very small set of random samples to
obtain a precise, global matching. As a side effect, our new
approach also removes the need for any keypoint-detection
as a preprocessing step to the matching. In previous work,
this has often been a restriction because keypoint detectors
are designed for certain data characteristics, such as local
bumps in the surface [GMGP05, LG05], that might not be
present in sufficient number on some models, thus preventing successful matching. In contrast, our technique fully automatically detects a set of optimized reference points for
matching, adapting automatically to the characteristics of the
input.
2. Related work
Shape matching: Memoli and Sapiro [MS04] compare two
manifolds represented by point clouds using an iterative Farthest Point Sampling (FPS) [MD03] algorithm which computes an optimized covering by minimizing an approximate Gromov-Hausdorff-Distance between source and target. In contrast to their work, we first create a plan based
on the source surface which is then used to derive an optimized matching strategy. Furthermore, our entropy based
criterion directly minimizes the matching uncertainty, taking all available information into account, while FPS sampling approaches this goal only heuristically. Tung and Matsuyama [TM10] as well as Zhang et al. [ZSCO∗ 08] use a
set of landmarks which are coarsely sampled to compute a
geodesic diffeomorphism. Their method of detecting landmarks is based on extremal points of a geodesic integral
function [HSKK01]. Landmarks are placed on such extrema
to decrease the error introduced by approximate geodesic
distances. In typical situations landmarks are placed on the
shape’s extremities. In general, however, these points are not
sufficient to uniquely determine a diffeomorphism. Hence in
case of [TM10] the authors propose to increase the subset of
landmarks slightly by randomly sampling additional points
on the surface. In general, this can not guarantee a sufficient
subset of landmarks. Ruggeri et al. [RPSS10] compute a set
of anchor-points of a shape by thresholding critical points
of the Laplace-Beltrami [RBG∗ 09] operator. These anchor
points are located on geometrically and topologically meaningful regions of the shape and are invariant with respect
to isometries. Additionally, they sample reference point by
farthest point sampling [ELPZ97]. Although the idea of using the Laplace-Beltrami operator for placing anchor points
is different to curvature-based approaches, the authors are
still comparing two shapes by the intrinsic distances between
these reference points. Reducing the set of points without
corrupting the isometric property as proposed in our paper
could significantly decrease the computation time of their
algorithm.
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

Tevs et al. / Intrinsic Shape Matching by Planned Landmark Sampling

Feature Saliency: Schmid et al. [SMB98] introduce entropy
for feature detection. They compare different feature point
detectors by their distinctiveness. Entropy has since then
been used frequently in follow up work to estimate feature
saliency. Our work is different from this line of work in that
it not only looks at the entropy of the feature descriptors
but on the remaining entropy of the full matching problem.
Bronstein et al. [BBCK09] use a statistical measurement of
the frequency-inverse document frequency known from the
field of document retrieval in the area of shape matching.
They measure the statistical significance of a feature point by
checking how often it can be found in other shapes. Unique
features describe a shape better than those found often in
other shapes. Our approach is different in that it examines
features within one shape. Again, the most important difference is probably that we capture the interdependence of
many interrelated feature matches rather than just the statistics of a single match.
Robustness by randomness: Fischler and Bolles [FB87]
describe a hypothesis-and-check concept called RANSAC
(random sample consensus) which robustly fits a model to
observed data. Several correspondence matching algorithms
based on RANSAC are published in the literature. Chum
and Matas [CM05] show a progressive random consensus,
PROSAC, in order to find correspondences between two
images (which is a problem very similar to shape matching). The idea is to use linear order on the correspondence
set, which is defined by a similarity function of correspondences. The solution samples are drawn from a top-ranked
set of correspondences. The convergence time improves on
RANSAC, since the probability of choosing bad correspondences is low.
Techniques from the xSAC family have been applied to
intrinsic shape matching by Tevs et al. [TBW∗ 09], motivated by the forward search algorithm of Huang et al. for
rigid shape matching [HFG∗ 06]. Their technique is also related to the randomized matching algorithm by Memoli et
al. [MS04]. Tevs et al. first randomly sample an initial set
of correspondences. Starting at random source points, corresponding target points are chosen with probability proportional to the likelihood that the match is correct. Then additional correspondences are added if they do not violate the
isometric matching criterion. Our paper extends their idea by
not just performing importance sampling on the target point
of the match but also carefully planning for which source
points matches should be guessed. As we show in our experiments, this usually leads to a reduction in the number of
random guesses that are necessary to find the correct solution as well as to an improvement of the quality of a match.
3. Isometry invariant matching
In the following, we assume that we are given two shapes,
a source shape MS and target shape MT , both differentiable 2-manifolds embedded in R3 . Both are equipped with
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

545

Figure 2: Our descriptor measures the lengths of the
isocurves of increasing distance: the curves spread like a
“wave” over the surface.
the standard intrinsic (“geodesic”) metric dM (·, ·) that measures “within-surface” distances. We assume that MS and
MT are isometric to each other, i.e., there exists a bijective
function that maps the two shapes onto each other that is an
isometry with respect to the intrinsic metric. Our task is to
find such a mapping.
In order to solve this problem, we first need to discretize
the surfaces. We refer to the discrete version of MS and MT
as MS and MT respectively. For resampling, we use a standard uniform Poisson disc sampler. A discretized shape M
derived from M is a set of ns unordered points and is defined as a maximal set M = {xi | xi ∈ M} where ∀i = j :
|xi −x j | ≥ ε, so ε is the minimal distance between two points
in the discretization. Furthermore, we assume that topology
information is given which is for example the case for triangle meshes. Hence we can compute intrinsic distances as
shortest paths along the mesh surface.
We can now pose the approximate intrinsic matching
problem as an optimzation problem, finding a function f :
MS → MT that minimizes:
E(f ) :=

1
dMS (xi , x j ) − dMT (f (xi ), f (x j ))
|MS | xi ,x∑
j ∈MS
(1)

Finding the exact minimum of Eq. 1 could lead to a hard
combinatorial problem. However, differences in correspondence at the level of the sampling resolution do not matter
to us as we use the discretization only as a tool for representing the surface. Therefore, we usually set a fixed error
bound of c · ε with c ≈ 2..3 and consider a solution correct
if it meets this precision bound. The final optimum could
then be computed by a locally convergent numerical optimization [HAWG08, TBW∗ 09]. Thus, this precision limit is
no restriction in practice. Correspondingly, we focus in the
following on finding an approximate solution in this sense as
quickly as possible.
3.1. Descriptors
Like most other shape matching techniques, we use local descriptors in order to increase the matching efficiency. While
matching local descriptors can rule out most of the infeasible
options without costly global optimization.
We use an intrinsic wave descriptor in spirit to geodesic
fans [GGGZ05]. In contrast to geodesic fans [GGGZ05],

546

Tevs et al. / Intrinsic Shape Matching by Planned Landmark Sampling

we do not sample extrinsic curvature properties but only
use intrinsic lengths of isocurves. Our approach is also independent of the mesh structure. Our approach could be
understood as a simplified variant of heat kernel descriptors [SOG09]. The drawback of our simplified approach is
that it is not as robust to topological noise and does not come
with formal uniqueness guarantees. The advantage is that it
is very easy to implement and avoids the substantial computational costs of numerically approximating heat kernels.
Needless to say, it is straightforward to plug a different feature description scheme in our technique if necessary.
Let CM (x, ρ) denote an intrinsic isocurve on manifold M
around point x ∈ M: CM (x, ρ) = {y ∈ M | dM (x, y) = ρ}.
Starting from a given point x ∈ M, we compute all isocurves
of distance ρ ∈ [0, ρmax ] and measure their lengths. We normalize each length by dividing by 2πρ, which is the value
expected for a flat (i.e., developable) piece of surface. The
descriptor Dx (ρ) for each point x ∈ M is the function
that maps ρ to the normalized length of the corresponding isocurve. Fig. 2 illustrates the isocurves for an example
model.
In our implementation, we sample 16 values at constant
intervals of ρ. To compare two such discrete descriptors Dx
and Dy , we use the sum of squared differences. The maximum distance ρmax is the only parameter of this scheme,
and we typically set it to 5% of the longest side of the
bounding box of the object. Analogous to heat-kernel signatures [SOG09], a smaller value emphasizes local properties,
while a larger one includes more global properties. For example, if we use a small maximal distance on the fingertip
of a hand (Fig. 3), we get a similar curve for every fingertip.
But with increasing distance, every finger gets a different
signature.
3.2. Shape matching by random sampling
We can now formulate the global matching algorithm. Before describing the new planned sampling strategy, we first
describe the algorithm for unplanned sampling, mostly following Tevs et al. [TBW∗ 09]: The algorithm starts by picking a random match between points from MS and MT . All
pairs (x, y) ∈ MS × MT are considered as candidate matches
with a probability proportional to
Pdescr (x, y) ∼ exp −0.5σ−2
d |Dx − Dy | .

(2)

σd is a user parameter that describes the standard deviation
of matching descriptors (thus depending on model noise).
Then, subsequent matches are drawn randomly, taking
the previous information into account: Points on the source
shape MS are chosen randomly. The likelihood for picking
target points from MT is weighted by the likelihood that the
intrinsic distances are preserved: If one correspondence has
been fixed, and a second source point has a distance d on
the source shape, only points with a distance of roughly d

(a)

(b)

(c)

Figure 3: Top row: descriptor differences - blue is zero and
red is the maximum observed difference. Bottom row: descriptor signature: intrinsic distance ρ is mapped to the xaxis and the normed length of the resulting isocurve to the
y-axis. The curves corresponds to the points shown in the top
row. The points at the two fingertips have similar curves up
to the radius of ρ = 10. The signature on the arm is, however,
entirely different.
on the target shape are accepted, again following a Gaussian error model. Given we already have k correspondences
{(x1 , y1 ), .., (xk , yk )}, (xi , yi ) ∈ MS × MT , the likelihood for
one more correspondence (x, y) ∈ MS × MT being correct is
given by a Gaussian error model:
Pdist (x, y|x1 , y1 , .., xk , yk ) ∼
k

∏ exp

dMS (x, xi ) − dMT (y, yi )
−0.5σ−2
g

2

.

(3)

i=1

Again, σg is a user parameter that describes the standard deviation of matching geodesic distances, thus modeling how
“non-isometric” the model can be, either due to numerical
imprecision or due to imperfections of the pieces of input
geometry themselves. In order to obtain the final sampling
probability, this likelihood is multiplied with Pdescr to account for local descriptor matches, giving the sampling distribution:
Psamp (x, y|x1 , y1 , .., xk , yk ) =
Pdescr (x, y) · Pdist (x, y|x1 , y1 , .., xk , yk ).

(4)

Sampling is continued until no more matching pairs are
found that do not exceed the maximum error threshold or
until all points are matched. The original algorithm of Tevs
et al. uses a small set of fixed feature points which could be
exhausted. In our case, we will use plan points, as explained
in the next section, to limit the number of samples.
In the following, we refer to a set of matched points
{(x1 , y1 ), .., (xk , yk )} as a solution set R. This set sparsely
models an isometric deformation fR for the complete shape
MS . In order to estimate dense correspondences, Eq. 3 is
evaluated with the computed correspondences R as previous
matches. For every point x ∈ MS , we compute the probability
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

547

Tevs et al. / Intrinsic Shape Matching by Planned Landmark Sampling

(a)

(b)

(c)

(d)

(e)

Figure 4: Entropy distribution of the most descriptive points, see Sect. 3.3 and Sect. 3.1. Regions with minimal entropy are
marked blue, regions with maximal entropy are shown in red. (a), (b) The most descriptive point for the men and dog data sets
is in the region of the corner of the mouth. (c) Zoomed view on human’s head with most descriptive point shown in purple. (d),
(e) Hand data set: the most descriptive point is on the palm in the area of the middle finger.
distribution Pdist (x, y|R) on all y of MT . The point y yielding
the maximum likelihood is chosen as a dense match to x. To
compare different solution sets in their ability to characterize
the deformation, we evaluate the corresponding deformation
function fR by computing E(fR ), Eq. 1.
Intuitively, the score E(fR ) measures the average error introduced by the isometry represented by the solution set. The
whole sampling scheme is iterated until either a solution set
with a score below a given threshold c is found (typical value
1.5ε ≤ c ≤ 3.0ε) or the maximum number of trials (typically
100) is reached.

3.3. The planned sampling algorithm

The entropy value is a scalar which represents a statistical
measure of the randomness of a discrete random variable Y
with possible values {y1 , ..., yn } and probability distribution
P. It is defined as:
n

p

p

Our goal is now to find a set of points X p = {xi |xi ∈
MS , i = 1..K} that we use as a plan for a matching step. We
begin with an empty set X p and first add a most discriminative point xk ∈ MS : This a point with a descriptor (Sect. 3.1)
that leads to a minimal entropy when compared to all other
points. We define a descriptor entropy of a point xk ∈ MS as
H pd (MS ). For the descriptor probability function pdk we use:
k

Having the basic matching algorithm in place, we can now
design a planning scheme that executes the algorithm more
rapidly by avoiding uninformative samples. We call our
strategy “PLANSAC”: PLANned SAmple Consensus, referring to the fact that the algorithm plans ahead in terms of
what samples are best to test in order to gain information as
quickly as possible. The key idea is to look at Psamp (Eq. 4)
and try to make the distribution as clearly determined as posp
p
sible by using a semi-solution set {(x1 , ·), .., (xK , ·)} that we
p
refer to as a plan for the matching step. The plan points xi
are computed such as to maximize the information gained
by matching them against a target shape. In order to measure the information content, we look at the entropy [Sha51]
of the final distribution.

H p (Y ) =

for a uniformly distributed probability. In this case we cannot take any advantage of the model described by the random
process since every output of the process is equally likely.
For a probability function with very few peaks, on the other
hand, the entropy takes a low value. In this case the distribution carries a high amount of information. In our case, this
means that the correspondences are known more precisely.

1

∑ p(yi ) log p(yi ) ,

pdk (y) = Pdescr (xk , y).

(6)

It computes the probability of a given point xk to be equal
to any other point y ∈ MS . Obviously, a point xk that has a
very dissimilar descriptor to other points has a low entropy
H pd (MS ). In other words, the chosen point is most discrimik
native among all others, see Fig. 4 for an example.
Having selected the first point, we start to add points to X p
by searching for points with most information content with
respect to both descriptor matching as well as distances to
previous points. We model this by checking how well shape
MS matches onto itself. We do this by assuming a point
p
xk ∈ MS is the one we look for, i.e. Xk = X p ∪ {xk } and
computing the matching entropy H pmk (MS × MS ) of all possible correspondence pairs (x, y) ∈ MS × MS . The probability function pm
k , describes how well a particular pair (x, y) is
p
localized by the current candidate plan set Xk and is set to:
p

pm
k (x, y) = Pdist (x, y|Xk ),

(5)

i=1

where p(yi ) is the probability of yi and we define p log p := 0
for p = 0. Intuitively, entropy can be understood as the
amount of information contained in a random process described by the probability function. The entropy is maximal
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

p

(7)
p

where Xk is a set of trivial matching pairs, i.e. Xk =
p p
p
p
{(xi , xi )|xi ∈ Xk }. The trivial matching pairs model the
self-matching of shape MS . Given that we compute:
arg min H pmk + λd H pd ,
k

k

(8)

548

Tevs et al. / Intrinsic Shape Matching by Planned Landmark Sampling
data set
hand
dog

Figure 5: Blue regions schematically indicate the area of
uncertainty given noisy geodesic distances. Left: the subset
of red points defines the parametrization of the shape well.
Right: A poorly chosen subset increases the uncertainty in
the parametrization.
where λd is a factor modeling how much of the descriptor
entropy should be considered when searching for optimal
points. A typical value is λd = 0.1. The additional descriptor entropy models the choice on the next more discriminative xk if the choice is intrinsically ambiguous. The point xk
which minimizes the sum of entropies is added to our sampling set X p .
The model of matching MS to itself is supported by the
fact that we have assumed that the source surface is isometric to any target surface. Therefore, and since we are working
with intrinsic surface properties only, the plan developed by
our planning algorithm is not affected by isometric deformations.
Finally, we stop building the plan if all remaining points
are fixed in their position and can be located uniquely by
their intrinsic distance to all points of X p . Hence, for every remaining point xi ∈ MS we estimate the variance of
Pdist (xi , y|X p ) over all y ∈ MS . The variance is computed using weighted principal component analysis (PCA) [Jol00]:
We assign a weight wi (y) = Pdist (xi , y|X p ) to every point
y and perform a PCA. The largest eigenvalue describes the
maximum radius of the uncertainty in the localization, see
Fig. 5. If the maximal uncertainty radius for all source points
x is smaller than a specified threshold c · ε, typically c = 2,
we stop adding plan points. We can now guarantee that our
plan can find at least one isometric solution where every
point is determined up to a standard deviation of c · ε.
It should also be noted that this incremental algorithm is
not optimal; the best choices could be made by looking at all
K-tuples simultaneously. However, computing this requires
O(ns K ) time, which is very expensive even for moderate
numbers of plan points K. Despite the lack of guaranteed optimality, our greedy approximation yields very good results
in practice.
4. Results
We evaluate our algorithm by performing shape matches on
a number of benchmark models. For the evaluation, we use
the standard TOSCA [BBK06a] data set. The data set consist
of triangle meshes with approximately 50,000 vertices. In
addition, we have constructed a few further synthetic benchmark scenes to examine specific properties of our algorithm.

|X p |
5

|MS |
164

9

182

cat

7

183

centaur

10

211

seahorse

9

126

|MT |
797
1341
1522
1394
1221
1274
1355
1055
909
998
572
550
549

#it
15
2
8
12
8
10
15
12
16
30
1
1
2

E(fR )
1.25ε
1.5ε

tp
175
432

2.0ε
2.5ε

282

1.6ε

320

1.0ε
1.25ε

19

tm
0.658
0.088
0.340
0.572
0.298
0.467
0.765
0.731
0.853
1.830
0.060
0.045
0.110

Table 1: Results summarized for different data sets. |X p | is
the number of points in the sampling plan, |MT | is the number of points on the target shape for different poses (order as
in Fig. 9). #it is the number of iterations required to find a
matching solution with an error less than or equal to E(fR )
averaged over 50 PLANSAC runs. t p is the time required
to build a plan set X p , tm is the average overall matching
time. Timings are given in seconds for an Intel Core-2 Xenon
2.8 GHz platform (plan-build step was parallelized over 3
cores).

For efficiency reasons we down-sample the input meshes.
Source shapes have a minimum point spacing of 4..5% of
the longest bounding box size. For the target shapes, we
use a higher resolution of around 1..2% of the bounding
box size to provide sufficient numerical degrees of freedom
for the match. The intrinsic wave descriptor is evaluated on
the down-sampled source points however propagating waves
over the full resolution model. This preserves the descriptiveness of the down-sampled points. In the following, we
refer to this target mesh sample spacing as ε and specify all
accuracy results with respect to this number.
Pairwise matching results: Table 1 summarizes the matching results and timings on the employed data sets, please
refer to it for the following discussion. The dog data set,
Figs. 9(a)-9(d), represents a case of very descriptive geometry. Note that the average number of iterations required to
find a solution is very low, since here we benefit from wellmatched descriptors. Fig. 9(d) shows a case where the deformation in the input data does not preserve isometric distances well. Our algorithm, however, is still able to find correct correspondences. Figs. 9(e)-9(h) shows a case where the
shape has a low descriptive information. The number of iterations increases as does the localization error of the solution. The centaur data set, Figs. 9(i)-9(l), is the most complex shape that we encountered in our tests. This also shows
in the number of iterations that are required to obtain a suitable match. The seahorse data set, Figs. 9(m)-9(p), on the
other hand, has very well distributed and descriptive features that explain most of the geometry very well. This, in
conjunction with the relatively low resolution, which is due
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

Tevs et al. / Intrinsic Shape Matching by Planned Landmark Sampling

to the low resolution of the initial model from the data base,
enables very fast matching results. Our algorithm is able to
find the solution in only a single iteration most of the time.
In almost all shapes the most discriminative point was found
in the area of the mouth corner. This is due to the fact that
these shape models contain throat geometry which is itself
very descriptive. Another observation is that landmarks are
placed preferably on the shape’s extremeties.
Fig. 6 shows our synthetic data-sets. Please note that all
used shapes are featureless, however since our technique neither relies on intrinsic nor extrinsic features, we are still able
to compute a valid plan set and can guarantee to find a valid
isometry.
Examining the Practical Matching Complexity: In the beginning of the paper we posed the question of matching complexity in the case of numerical ill-conditioning, e.q. due to
approximate geodesics. We would like to provide a partial
answer to this question from a practical point of view. Fig. 6
shows a data set consisting of one, two and three spheres
connected through a narrow tube. In theory the number of
computed plan points required to isometrically parametrize
a sphere is three, which we also found numerically as shown
in Fig. 6(a). For two connected spheres, however, not any
3-tuple of points is sufficient to fix an isometry in practice,
since fixing intrinsic distances on one piece does not constrain the matching on the second piece. It follows that for
a numerically stable match more plan points are needed.
As seen in Fig. 6(b) our algorithm automatically identifies
this instability and computes two additional points on every
piece of geometry. Our experiments show that numerical illconditioning can increase the practical matching complexity
towards the case of two unconnected objects, where 6 plan
points would be required, three for each sphere.
A similar observation can be made for surfaces of higher
genus. We tested our algorithm on a torus and double-torus
shape as well. The required plan points are 4-5 for the torus,
where 5 points lead to more stable matching results. The
double-torus requires at least 6 plan points. In practice, we
also observe differences between shapes: For example, the
centaur requires 10 landmark points to guarantee a matching of reasonable accuracy while the cat requires only 7 to
achieve the same accuracy.
Comparison to previous work: We compare our method
to two state-of-the-art feature-based techniques, spectral
matching [LH05], and the RANSAC method of Tevs et
al. [TBW∗ 09]. For fair comparison, the RANSAC method
is used with the same maximum number of iterations (100)
as our proposed algorithm. We compare the performance
on a subset of the models from Table 1 (seahorse and centaur). Fig. 7 shows the correspondences computed on the
first pose of the seahorse and centaur data sets. Since both
feature-based techniques do not provide dense correspondences, we compute their matching scores E(fR ) on the
sparse correspondence set only. As can be seen, RANSAC
outperforms spectral matching in the number of computed
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

549

correspondences, while it is unclear which method provides
a better matching accuracy. Note however, that our proposed
PLANSAC scheme has a significantly higher accuracy of up
to 4 times while computing a dense set as compared to only
sparse matches in the competing methods.
Additionally, if only the matching phase is considered, i.e.
all pre-processing is excluded, our technique is able to outperform both algorithms in computation time as well. The
computation time required by spectral matching is 1.2 seconds for the seahorse and around 45 minutes for the centaur
data set. For RANSAC, these numbers are 2.5 seconds and
around 22 minutes, respectively. In contrast, once the plan is
known, our method dramatically reduces computation cost
to a fraction of the time required by both techniques, i.e.
70ms for the seahorse data set and 740ms for the centaur
data set.
Application Scenarios: As our first scenario we consider
a sequence matching application. Fig. 8 shows a running
horse sequence [SP04] where the dense correspondences
are computed by matching the first frame against all other
frames. The matching of one frame against all 50 frames
only takes about 52 seconds, i.e. about 1 second per frame.
Please note that we do not perform any extrinsic check if
a computed match is one of the symmetric solutions, therefore the solution set also contains symmetrically equivalent
correspondence matches. The median average number of required PLANSAC iterations is one, their mean number is 4.
There are only four frames where more than 10 iterations are
required.
As a second scenario we consider a database-like query
application. For this scenario we construct a small database
consisting of all models in all poses shown in Fig. 9 normalized to exhibit a uniform mean intrinsic distance. Without
the latter, the task would be trivial since the models exhibit
widely different scales and are thus distinguishable by their
mean intrinsic distance alone. Fig. 10 shows the results of
our initial experiments. To perform the query, we match the
query shape against all shapes in the database. The matches
are then sorted by their matching score E(fR ). The probability of the best scored shape being the correct one is greater
than 95% (here we ignore the match of the given template
to itself) over 100 trials. We emphasize that these results are
preliminary and only hint at the potential use of our algorithm in database applications.
5. Discussion and Outlook
We have developed a shape matching algorithm based on the
novel concept of entropy-based planned random sampling.
It enables very fast and reliable matching between similar
or different shapes, while simultaneously removing the need
for explicit feature detection. Moreover, the algorithm automatically adapts to the input characteristics and chooses an
optimized sampling strategy for any given object. Numerical
experiments hint at the possibility of characterizing a shape’s

550

Tevs et al. / Intrinsic Shape Matching by Planned Landmark Sampling

intrinsic complexity via the number of plan points necessary
to parametrize its surface in a stable way.
The current limitations of our algorithm are that we assume geometry with known, consistent topology. We also
assume that there are no measurement holes. Thus to apply
our algorithm to real-world scanner data still requires additional work which we plan to perform in the future.
Despite these limitations, we are confident that the ideas
put forward in this paper, i.e. the PLANSAC scheme, has a
much wider applicability than shape matching. Many related
areas in computer graphics and computer vision use randomsampling-based procedures for an abundance of tasks. Introducing a planning step might result in significant performance improvements similar to those demonstrated in our
application.

[HFG∗ 06] H UANG Q.-X., F LÖRY S., G ELFAND N., H OFER M.,
P OTTMANN H.: Reassembling fractured objects by geometric
matching. ACM Trans. Graphics 25, 3 (2006), 569–578. 3
[HSKK01] H ILAGA M., S HINAGAWA Y., KOHMURA T., K UNII
T. L.: Topology matching for fully automatic similarity estimation of 3d shapes. In Proc. of SIGGRAPH ’01 (2001), pp. 203–
212. 2
[Jol00] J OLLIFFE I.: Principal Component Analysis. Springer,
2000. 6
[LF09] L IPMAN Y., F UNKHOUSER T.: Möbius voting for surface
correspondence. In Proc. of SIGGRAPH ’09 (2009), pp. 1–12. 1,
2, 9
[LG05] L I X., G USKOV I.: Multiscale features for approximate
alignment of point-based surfaces. In Proc. of SGP (2005),
pp. 217–226. 2
[LH05] L EORDEANU M., H EBERT M.: A spectral technique for
correspondence problems using pairwise constraints. In Proc. of
ICCV (2005), vol. 2, pp. 1482–1489. 7, 9

Acknowledgments
The authors would like to thank the anonymous reviewers
for their valuable comments. This work has been partially
supported by the Cluster of Excellence for Multi-Modal
Computing and Interaction.

[MD03] M OENNING C., D ODGSON N. A.: Fast Marching farthest point sampling for implicit surfaces and point clouds. Tech.
rep., 2003. 2

References

[MS04] M EMOLI F., S APIRO G.: Comparing point clouds. In
Proc. of SGP (2004), pp. 32–40. 2, 3

[ASP∗ 04] A NGUELOV D., S RINIVASAN P., PANG H.-C.,
KOLLER D., T HRUN S., DAVIS J.: The correlated correspondence algorithm for unsupervised registration of nonrigid surfaces. In Proc. of NIPS (2004), pp. 33–40. 1
[BBCK09] B RONSTEIN A. M., B RONSTEIN M. M., C ARMON
Y., K IMMEL R.: Partial similarity of shapes using a statistical
significance measure. IPSJ Transactions on Computer Vision and
Applications 1 (2009), 105–114. 3
[BBK06a] B RONSTEIN A., B RONSTEIN M. M., K IMMEL R.:
Tosca dataset.
http://tosca.cs.technion.ac.il/data/
nonrigid3d.zip, 2006. [Online; accessed 20-June-2010]. 6

[MGPG04] M ITRA N. J., G ELFAND N., P OTTMANN H.,
G UIBAS L.: Registration of point cloud data from a geometric optimization perspective. In Proc. of SGP (2004), pp. 23–31.
1

[OMMG10] OVSJANIKOV M., M ÉRIGOT Q., M ÉMOLI F.,
G UIBAS L.: One point isometric matching with the heat kernel.
In Proc. of SGP (2010), pp. 1555–1564. 1, 2
[RBG∗ 09] R EUTER M., B IASOTTI S., G IORGI D., PATANÈ G.,
S PAGNUOLO M.: Discrete Laplace-Beltrami operators for shape
analysis and segmentation. Computers & Graphics 33 (2009),
381–390. 2
[RPSS10] RUGGERI M. R., PATANÈ G., S PAGNUOLO M.,
S AUPE D.: Spectral-driven isometry-invariant matching of 3d
shapes. IJCV 89 (2010), 248–265. 1, 2
[RS08] RUGGERI M. R., S AUPE D.: Isometry-invariant matching
of point set surfaces. In Proc. of EG 3DOR (2008). 1

[BBK06b] B RONSTEIN A. M., B RONSTEIN M. M., K IMMEL
R.: Generalized multidimensional scaling: a framework for
isometry-invariant partial surface matching. In PNAS 103, 5
(2006), 1168–1172. 1

[Sha51] S HANNON C. E.: Prediction and entropy of printed english. Bell Systems Technical Journal (1951), 50–64. 5

[CM05] C HUM O., M ATAS J.: Matching with PROSAC - progressive sample consensus. In Proc. of CVPR (2005), vol. 1,
pp. 220–226. 3

[SMB98] S CHMID C., M OHR R., BAUCKHAGE C.: Comparing
and evaluating interest points. In Proc. of ICCV (Jan. 1998),
pp. 230–235. 3

[ELPZ97] E LDAR Y., L INDENBAUM M., P ORAT M., Z EEVI
Y. Y.: The farthest point strategy for progressive image sampling. IEEE Trans Image Process 6, 9 (1997), 1305–1320. 2

[SOG09] S UN J., OVSJANIKOV M., G UIBAS L.: A concise and
provably informative multi-scale signature based on heat diffusion. In Proc. of SGP (2009). 1, 4

[FB87] F ISCHLER M. A., B OLLES R. C.: Random sample consensus: a paradigm for model fitting with applications to image
analysis and automated cartography. Morgan Kaufmann Publishers Inc., 1987, pp. 726–740. 3

[SP04] S UMNER R. W., P OPOVI C´ J.: Deformation transfer for
triangle meshes. In Proc. of SIGGRAPH ’04 (New York, NY,
USA, 2004), ACM, pp. 399–405. 7, 9

[GGGZ05] G ATZKE T., G RIMM C., G ARLAND M., Z ELINKA
S.: Curvature maps for local shape comparison. In Proc. of SMI
˝
(2005), p. 244U256.
3
[GMGP05] G ELFAND N., M ITRA N. J., G UIBAS L. J.,
P OTTMANN H.: Robust global registration. In Proc. of SGP
(2005), pp. 197–206. 1, 2
[HAWG08] H UANG Q.-X., A DAMS B., W ICKE M., G UIBAS
L. J.: Non-rigid registration under isometric deformations. In
Proc. of SGP (2008), vol. 27, pp. 1449–1457. 1, 2, 3

[TBW∗ 09] T EVS A., B OKELOH M., WAND M., S CHILLING A.,
S EIDEL H.-P.: Isometric registration of ambiguous and partial
data. In Proc. of CVPR (2009), pp. 1185–1192. 1, 2, 3, 4, 7, 9
[TM10] T UNG T., M ATSUYAMA T.: Dynamic surface matching
by geodesic mapping for 3d animation transfer. In Proc. of CVPR
(2010), pp. 1402–1409. 2
[ZSCO∗ 08] Z HANG H., S HEFFER A., C OHEN -O R D., Z HOU
Q., VAN K AICK O., TAGLIASACCHI A.: Deformation-drive
shape correspondence. Computer Graphics Forum (Special Issue of SGP) 27, 5 (2008), 1431–1439. 2

c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

551

Tevs et al. / Intrinsic Shape Matching by Planned Landmark Sampling

(a)

(b)

(c)

(d)

(e)

(f)

Figure 6: A number of featureless objects which can be matched with our method. (a) Match of a simple sphere against itself.
Note that the compute plan as numerically chosen by our algorithm consists of 3 points and is thus consistent with theoretical
results [LF09]. (b) Set of plan points X p (marked blue) detected for synthetic data sets consisting of two and three spheres
connected by a thin tube. The number of required plan points for stable matching is 5 and 7 respectively. (c) shows the plan
points for the torus (5, one invisible) and the double torus (6). (d) EG-Logo as a meta-blob matched against a slightly deformed
version of itself. The matching error is 2ε or 8% of the bounding box size. (e) Synthetic peanut data set consisting of slightly
deformed meta-blobs. The solution error is 1.5ε or 3% of the bounding box size. Although the solution appears incorrect,
we have an intrinsically correct match. Extrinsically, the object was flipped along the horizontal axis and mirrored along the
vertical axis. (f) Extrinsically plausible match for the peanut data set.

(a)

(b)

(c)

(d)

Figure 7: (a) and (b) show the matching for the first pose of the seahorse and centaur data sets computed with spectral
matching [LH05]. The localization error E(fR ) is 6.5ε (7 correspondences) and 4.5ε (26 correspondences) respectively. (c)
and (d) shows the matching computed with RANSAC matching [TBW∗ 09]. The localization errors of the RANSAC results are
4.3ε (22 correspondences) and 5.6ε (121 correspondences). In contrast, our algorithm achieves a localization error of only
1.0ε (seahorse) and 1.6ε (centaur) while matching the shapes densely, see Table 1. The corresponding plan matches are shown
in Fig. 9 (j) and (n).

(a)

(b)

(c)

(d)

(e)

(f)

(g)

(h)

(i)

(j)

Figure 8: (a)-(j) Dense correspondences shown for the galloping horse data set [SP04]. The first 10 out of 50 frames of the
data set are shown. The computation time is 52 seconds for 50 frames, the average number of PLANSAC iterations required to
match the template against one frame is 4.

c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

552

Tevs et al. / Intrinsic Shape Matching by Planned Landmark Sampling

(a)

(b)

(e)

(i)

(m)

(c)

(f)

(j)

(d)

(g)

(h)

(k)

(n)

(l)

(o)

(p)

Figure 9: Matching results for data sets in different poses. (a), (e), (i) and (m) show the discretization of the data. Purple points
mark the discretization of the source shape, green points that of the target shape (in the pose of the source shape). The order of
the poses is arranged in order of increasing numerical matching complexity, i.e. the average number of iterations required to
find a solution.

Figure 10: Results of an exemplary database query. Results are sorted (from left to right) by their matching score E(fR ).

c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

