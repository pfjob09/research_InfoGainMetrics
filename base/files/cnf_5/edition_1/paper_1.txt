2011 Eighth International Conference Computer Graphics, Imaging and Visualization

The DSO Feature Based Point Cloud Simplification
1

Pai-Feng Lee, 2Chia-Ping Huang
1
Department of Accounting Information, Hsing-Wu Institute of Technology
2
Department of Information Management, Hsing-Wu Institute of Technology
{ 1093094@mail.hwc.edu.tw, 2096013@mail.hwc.edu.tw }
Abstract

reconstruction and mesh simplification, and surface
reconstruction is executed before mesh simplification.
However, if suitable relevant points can be extracted
from a point cloud that represent surface variation, then
the number of calculations needed for surface
reconstruction can be significantly reduced.
This study presents a novel method using the value
of DSO to extract the feature point for a dense point
cloud and simplify any smoothing point pairs iteratively.
This study also proposed a method to obtain unique
simplified model for each model, and significantly
reduce the computation cost of doing surface
reconstruction first.

This study proposes an effective low-error point
cloud simplification method to retain the physical
features of the models. The value of Discrete Shape
Operator (DSO) is adopted to extract the features points
of the models, and those are postponed to simplify. The
value of DSO is defined as the discrete sum over the
directional curvature and torsion. The proposed method
improves the Quadric Error Metric of vertex pair
contraction, it not only effectively simplifies the point
cloud model and keeps the features of object model, but
also decreases the preprocessing time cost associated
with feature analysis. This study also proposes a method
to obtain unique simplified model for each model and the
time cost involved in calculating DSO is about 17.29% of
the execution time. The unique simplified model obtained
by this study can significantly reduce the computation
cost about 72.72% than mesh simplification which
reconstruct original points first.

2. Author guidelines Related Works
2.1. Mesh Simplification
The mesh simplification methods can be divided
into several types, including vertex decimation [20],
vertex clustering [9], edge contraction [2], triangle
contraction [6] and vertex pair contraction [12]. All the
above methods share a single objective—to reduce the
number of triangles under the condition that the models
can be maintained as well as possible. However, the
difficulty of preserving the model outline increases with
a decrease in the number of triangles.
For example, consider the vertex pair contraction
method proposed by Garland et al. [12], which is
considered as one of the best mesh simplification
methods in recent years. This method has decimation
operations that are generally arranged in a priority queue
according to an error matrix that quantifies the errors
caused by decimation. Simplification is performed
iteratively to reduce any smoothing of point pairs caused
by the decimation operation. This technique can obtain a
simplified model with the minimum error being
introduced in the original model. However, the models’
features are usually destroyed when the models are
simplified. Therefore, to preserve the features, Jong et al.
[4] employs torsion to modify the method. The proposed
method is highly efficient, effectively postpones the
simplification ranking of feature points and preserves the
features of simplified models.

Keywords--- point simplification, discrete shape
operator, feature extraction, curvature, torsion.

1. Introduction
Due to recent advances in the field of computer
graphics, the efficient and realistic representation of a 3D
model has become an important topic. However,
displaying realistic scenes and models in a virtual
environment typically depends on triangular mesh
models. In general, the creation of a triangular mesh
model includes acquisition, processing and rendering
steps.
Although point-based rendering techniques have
been developed [10], mesh-based rendering techniques
continue to have wider applications. To obtain a good
rendering result, a point cloud model must be
reconstructed as a triangular mesh model. However, the
number of triangles in the model increases with the
model quality. Therefore, the calculation cost for the
processing step also increases. To reduce the
computation cost, many mesh simplification methods are
used to decrease the number of triangles. In other words,
the steps for 3D digital content creation include surface
978-0-7695-4484-7/11 $26.00 © 2011 IEEE
DOI 10.1109/CGIV.2011.26

1

presented a re-sampling method to ensure the distribution
of density.
Moenning and Dodgson [5] presented an intrinsic
coarse-to-fine point simplification algorithm that
guarantees uniform or feature sensitive distribution. They
adopted the farthest point sampling and a fast marching
algorithm to choose relevant points and set density
threshold to ensure point set density. However, their
method requires expanding the computational 3D
Voronoi diagram, and consequently requires many
computations and a large memory.
In this study, the DSO feature based point cloud
simplification proposed an effective low-error point
cloud simplification method to retain the physical
features of models. The DSO value is adopted to extract
the features of the point cloud models, and the feature
vertices are postponed to simplify. The proposed method
improves the quadric error metric of the vertex pair
contraction; it not only effectively simplifies the model
while retaining the features of the object model but also
decreases the pre-processing time cost for feature
analysis. This study also proposes a method to obtain
unique simplified model for each model. The unique
simplified model obtained by this study can significantly
reduce the computation time cost about 72.72% than
mesh simplification which reconstruct original points
first. This paper adopts the reconstruction algorithm
proposed by Dey et al. [19] to generate the simplified
model, and the error is measured using the Metro tool
[15].

2.2. Feature extraction algorithm
To reconstruct more perfect models, many experts
have employed feature extraction to improve the
reconstruction results. The method proposed by
Gumhold et al. [17] in 2001 exploits the correlation
ellipsoid to calculate the point penalty functions. The
penalty function values are used to evaluate the degree of
feature. However, this method cannot detect isolated
peaks such as the two peaks at the horns of the cow
model.
Pauly et al. [14] extended the approach of Gumhold
by using multi-scale classification. The method can
allow robust feature extraction for noisy surfaces, but
requires high time costs. In 2005, Belyaev and
Anoshkina [1] proposed a computational scheme that
uses principal curvatures to detect surface creases, ridges
and ravines in the range data. The approach helps to
extract the global feature, but ignores the local feature
information. In other words, this method is suitable for
shape matching, quality evaluation and recognition, but
not for surface reconstruction.

2.3. Point Cloud Simplification
All the mesh-based simplification algorithms
achieve good simplification in applications; however,
they require a triangular mesh and connectivity in
advance. Restated, the algorithms are burdened with a
large number of computations before simplification
processing. Consequently, this process is prohibitively
expensive.
Therefore, point cloud simplification is an attractive
approach. Point-based simplification is applied before
surface reconstruction. If suitable relevant points can be
extracted from a point cloud that represent surface
variation, then the number of calculations needed for
reconstruction can be significantly reduced.
Dey et al. [18] presented the first point cloud
simplification approach. Dey adopted local feature sizes
to detect redundancy in the input point cloud and ensure
relevant point densities, thereby exploiting a 3D Voronoi
diagram for a densely distributed original point set in
advance of simplification. However, this method also
requires many computations. Boissonnat and Cazals [8]
presented a coarse-to-fine point simplification algorithm
that randomly calculates a point subset and builds a 3D
Delaunay triangulation. Additional points are inserted
iteratively based on their distance to the closest 3D facet
until the simplified surface mesh conforms to the
restricted error value. Allegre et al. [16] presented a
convex hull for all points that adopts a decimation
scheme to merge adjacent points according to
geometrical and topological constraints. These
algorithms must adopt pre-processing to retain the
original surface data before simplifying the point set, and
therefore require many computations.
Alexa et al. [11] proposed to uniformly simplify the
point set by estimating the distance from a point to the
Moving Least Square (MLS) surface. Alexa also

3. Discrete Shape Operator
If p is a point on a surface M, then for each tangent
vector v to M at p, let Sp(v) = ív N. Here, N denotes a
unit normal vector field in the neighborhood of p on M,
and Sp is called the shape operator of M at p and is
derived from N, as shown in Fig. 1.

Figure 1. (a) Unit normal vector field of surface M
and (b) shape operator for tangent vector v at p.
On the curve r(s) that belongs to category C3 based
on the arc parameter s, the derivatives of the three unit
&
&
&
vectors T , N , and B at each regular point concerned
with the parameter s shall satisfy the following FrenetSerret formulae [3]:

2

§
¨
¨
¨
¨
¨
¨
¨
©

&
dT
ds &
dN
ds &
dB
ds

·
¸
¸
¸
¸
¸
¸
¸
¹

§ 0
¨
¨  k
¨ 0
©

&
0 · § T ·
¸ ¨ & ¸
W ¸ ¨ N ¸
¨ & ¸
0 ¸¹ ¨© B ¸¹

k
0
 W

&

In the equation, T denotes the tangent vector of the
&
&
curve; N , the principal normal vector of the curve; B ,
the binormal vector of the curve; k, the curvature of
point p on the curve; and Ĳ, the torsion of point p on the
curve.
Two quantified functions, namely, curvature and
torsion, can be extracted from the curve by using the
curve theory. The curvature k denotes the variation of
the tangent vectors, and the torsion W denotes the
variation in the binormal vectors. Hence, the value of the
shape operator— k 2  W 2 —denotes the degree of local
surface variation, and it can be adopted as a criterion for
the model’s feature area.
The estimation of the value of DSO and feature
extraction: A point cloud model contains only point
information. Therefore, to estimate the shape operator,
the discrete sampling approach must be adopted. The
DSO is defined as the discrete sum over the directional
curvature and torsion, which is actually the sum of the
norm of the shape operator defined in the study. Let
surface M be the sampling region at p in the sampling
approach, and let N be the unit normal vector. According
to the definition of the shape operator, we can use p and
its neighbouring points to estimate the value of DSO at p,
as shown in Fig. 2. This study employed the calculation
results to estimate the feature weight of each point.

Figure 3. Surface variation detection.

The experimental results show that our feature
extraction approach can detect the high-variation
surfaces. These feature extraction results will be applied
to retain the physical feature of the model during point
cloud simplification.

4. Point Simplification Algorithm
In this study, the proposed algorithm considers only
the point clouds as inputs. The proposed algorithm
comprises four main steps.

4.1 Determination of localized neighbour

The value of DSO (p)

For efficiency, the point clouds are analyzed locally.
The set of neighbouring points of p is denoted as a region
Np. Determining Np for each p is not an easy task. Some
studies [7] defined Np as the k nearest points of p, for
which k can be a constant throughout a point cloud or
can be calculated adaptively [13] for each point. If k is
user defined, Np can be over-sampled or under-sampled.
In this study, the selection of Np is made according to the
density distribution. The density evaluation of the model
is performed to determine the closest point to each
sampling point and average the shortest distances.
Assume the average distance as the density of model and
then select the value adds two standard deviation to
subdivide the model.
The uniform subdivision criterion for the point cloud
model is based on the value that determines the length of
the cube. For an arbitrary seed cube, the twenty-six
connected cubes are referred to as one-ring cube, and the

¦ N q   N  p 
i

i

¦

pq i

i

Figure 2. Estimate the DSO(p) in sampling region.

Figure 3 shows the feature extraction results of the
point cloud models. The blue regions indicate regions
that are relatively flatter than other regions. On the
contrary, the red regions indicate high-variation surfaces.

3

The Quadric Error Metric Q(v) = DSO(v) 炽 ȈKp. In
the equation, p denotes the plane that contains the point v,
DSO(v) denotes the value of DSO at v, and Kp represents
the 4 × 4 matrix of the plane p.

points within the one-ring cube comprise Np. Selecting
an appropriate length for the cubes can help to judge the
near surface and to further avoid selecting incorrect
neighbors. This approach simplifies the intrinsic problem
of geodesic distance estimation into an extrinsic problem
by using a uniform subdivision and thin offset band [5].
The points within the one-ring cube are regarded as
neighbouring points (Np) and are adopted for the
subsequent calculation. The normal vector of point p
comes from covariance analysis and identified by the
formula presented by Hoppe et al. [7]. After estimating
the normal vector, this study employs it to estimate the
DSO(p) at each p.

2.For each virtual edge (vi , vj) pair calculates the
minimum error produced due to simplification,
where vj is the neighbor of vi.
3.Choose the lowest-error vertex pair (vi , vj) as an
object of simplification.
4.Contract the vertex pair (vi , vj) into v and calculate
its Q, where Q(v) (Qi  Q j ) .
For a given contraction (vi , vj) o v, v is chosen as
either vi or vj. In order to obtain the minimal error, this
study selected a subset of the initial point cloud.

4.2 Determination of the sequence of decimation
In this study, the manifold surface connectivity is
not available. In order to apply the strategy of Garland et
al. [12], the vertices qi in the region Np are assumed as
the virtual edge pqi , the vertices qi that are projected
onto the tangent plane are sorted in the anticlockwise
order and each of the adjacent vertices qi, qi+1 are then
connected as the virtual edge qi qi 1 . The results
generate virtual triangles. The proposed algorithm
includes six major steps.

5.Update all the information on the vertices adjacent
to vi and vj .
6.Repeat the previous steps until the assigned
conditions are satisfied after simplification. (See
section 4.3)
The value of DSO has taken as a weight to modify
the quadric error metric of the vertex pair contraction.
The value of DSO can helps to postpone the
simplification ranking of feature points and maintain the
object feature.

1.Calculate the quadric error metric and DSO(v) of
each vertex v.
In order to construct error metrics, this study defines
the error in the vertex v with respect to the virtual
triangles that intersect at v as the sum of the squared
distances to the planes of its virtual triangles.
'

v 

>v

'

x

v

y

v

z

1

@ 

¦ P 

T

P  planes

T

v

v

4.3 Determination of the point simplification
algorithm
Because the algorithm only contains information
regarding point coordinates, we can terminate the
process when the simplified model achieves the assigned
number of points. But considering the surface
reconstruction, the points cannot simplify unrestricted.
This study defined the k percentage of the virtual
feature edge to be retained. If failure is guaranteed, then
raise the H percentage to maintain the degree of feature
dynamically. Unique simplify results can be obtained for
each model and the simplified point cloud can be
reconstructed successfully. Table 1 lists the properties of
the original models and the unique simplified results.
The simplified rate is about 11.22%.



2

Here, P >a b c d @T represents the planes that
intersect at vertex v. Plane P has a unit normal vector,
that is, a 2  b 2  c 2 1 . The quadric error metric Q at
vertex v can be obtained by the following equation.

' v 
§
v T ¨¨
©

¦ P v 
T

P  planes

¦

P  planes

K

P

v 

·
¸v
¸
¹

¦ v  P P

2

T

P  planes

v

v

T

v



v T Qv

Table 1. The unique simplified results.

Here, K P , which is called the fundamental error
quadric, can be represented by the following equation.

KP

PP

T

ªa 2
«
« ab
« ac
«
¬«ad

ab
b2
bc
bd

ac
bc
c2
cd

ad º
»
bd »
cd »
»
d 2 ¼»

4

Model

Simplified model

Simplified rate (%)

Armadillo (172974 p)

25730

14.88%

Dragon (437645 p)

23052

5.27%

Lion (183008 p)

19948

10.88%

Isis (187644 p)

23181

12.35%

Planck (199169 p)

14379

7.22%

Venus (134345 p)

22466

16.72%

4.4 Surface reconstruction algorithm

[2]

The unique simplified model adopts the
reconstruction algorithm presented by Dey et al. [19] and
the error is measured using the Metro tool [15]. The
experimental results confirm that a good simplified
model can be quickly obtained.

[3]

5. Experimental Results

[5]

The simplified models listed below are obtained
using the proposed method. Figure 4 and 5 present both
the unique simplified point cloud and the rendering of
the corresponding reconstructed triangulation mesh. The
feature-sensitivity distribution is generated by using the
DSO.
Table 2 presents the execution times comparison of
different method with unique simplified models, method
of doing surface reconstruction first and doing point
cloud simplification first. The doing surface
reconstruction first method reconstructs the original
model first, and then adopts the mesh-base vertex-pair
contraction [12] simplifies to the unique simplified
models.
The result illustrates that the proposed point cloud
simplification saves an expensive calculation on the
dense point cloud and maintain the feature of the model.
The average execution time of reconstruction first
method is 638.8 seconds. The average execution time of
simplification first method is 153.94 seconds. The
improve time ratio is approximately 72.72% and the
execution time of DSO take up about 17.29%.

[6]

[4]

[7]

[8]

[9]

[10]

[11]

[12]

[13]

6. Conclusion and Further Works
[14]

We present a novel algorithm of point cloud
simplification. The DSO indicates the outline of the local
variations of a local surface, such as variations in the
curvature and torsion, and enables the adjustment of the
feature characteristics. The DSO can collect more
surface information adaptively and it can also be adopted
to extract the features of the model to retain the physical
feature of the model under low resolution.
The proposed simplification algorithm improves the
vertex pair contraction algorithm. The theory proposed in
this paper ensures the quality of the simplified model and
decreases the storage space and calculation costs.
Directions for future work include the out-of-core
implementation of the presented simplification method,
the stabilization of data comprising noise, and the
application of the DSO to other investigations.

[15]

[16]

[17]

[18]

[19]

[20]

References
[1]

A. G. Belyaev and E. Anoshkina, “Detection of surface
creases in range data,” Mathematics of surfaces,
Loughborough, UK, pp.50-61, September 2005.

5

A. Guéziec, “Surface simplification with variable
tolerance,” Second Annual International Symposium on
Medical Robotics and Computer Assisted Surgery,
Baltimore, MD, pp. 132–139, November 1995.
B. O’Neill, “Elementary Differential Geometry,”
Academic Press, 1997.
B. S. Jong, J. L. Tseng, W. H. Yang, “An Efficient and
Low-Error Mesh Simplification Method Based on
Torsion Detection,” The Visual Computer, vol.22, no.1,
pp.56-67, 2006.
C. Moenning and N. A. Dodgson, “Intrinsic point cloud
simplification,” In Proc. 14th GrahiCon, Vol. 14, 2004.
H. Bernd, “A data reduction scheme for triangulated
surfaces,” Computer Aided Geometric Design, Vol.11,
No.2, pp.197-214, 1994.
H. Hoppe, T. DeRose, T. Duchamp, J. McDonald, W.
Stuetzle, “Surface Reconstruction from Unorganized
Points,” Proceedings of SIGGRAPH, vol.26, no.2,
pp.71–78, 1992.
J. D. Boissonnat and F. Cazals, “Coarse-to-fine surface
simplification
with
geometric
guarantees,”
EUROGRAPHICS’01, Conf. Proc, pp. 490–499, 2001.
J. Rossignac and P. Borrel, “Multi-resolution 3D
approximations for rendering complex scenes,”
Geometric modeling in computer graphics, Berlin New
York Springer-Verlag, pp 455–465, 1993.
M. Alexa, J. Behr, D. Cohen-Or, S. Fleishman, D. Levin,
C. T. Silva, “Computing and Rendering Point Set
Surfaces,” IEEE TVCG, Vol.9, No.1, 2003.
M. Alexa, J. Behr, D. Cohen-Or, S. Fleishman, D. Levin,
and T. Silva, “Point Set Surfaces,” In Proc. 12th IEEE
Visualization Conf., pp. 21–28, 2001.
M. Garland and P. Heckbert, “Surface simplification
using quadric error metrics,” Proceedings of SIGGRAPH
97, Las Angeles, pp 209–216, August 1997.
M. Gopi and S. Krishnan, “A Fast and Efficient
Projection-based Approach for Surface Reconstruction,”
15th Brazilian Symposium on Computer Graphics and
Image Processing, SIBGRAPI, pp. 179-186, 2002.
M. Pauly, R. Keiser, M. Gross, “Multi-scale Feature
Extraction on Point-sampled Surfaces,” Computer
Graphics Forum, Vol.22, No.3, pp. 121-130, 2003.
P. Cignoni, C. Rocchini, R. Scopigno, “Metro:
measuring error on simplified surfaces,” Computer
Graphics Forum, Vol.17, No.2, pp.167 – 174, 1998.
R. All`egre, R. Chaine, S. Akkouche, “Convectiondriven dynamic surface reconstruction,” In Proc. Shape
Modeling International, pp. 33–42, 2005.
S. Gumhold, X. Wang, R. MacLeod, “Feature extraction
from point clouds,” Proceeding of 10th International
Meshing Roundtable, pp.293-305, 2001.
T. K. Dey, J. Giesen, J. Hudson, “Decimating Samples
for Mesh Simplification,” In Proc. 13th Canadian
Conference on Computational Geometry, pp. 85–88,
2001.
T. K. Dey and S. Goswami, “Tight Cocone: A water tight
surface reconstructor,” Proc. 8th ACM Sympos. Solid
Modeling Appl.,pp. 127 – 134, 2003.
W.J. Schroeder, J.A. Zarge, W.E. Lorensen, “Decimation
of triangle meshes,” ACM SIGGRAPH Computer
Graphics, Vol.26, No.2, pp.:65-70, 1992.

(a)

(b)

Figure 4. (a) are the original model employ [12] simplified to unique simplified model, and (b) are the employ our
proposed method simplified to unique simplified model. The result of the proposed method using DSO can be
used to obtain the feature-sensitive point distribution.

(a)

(b)

Figure 5. Point distribution on simplified Dragon models. This results show the comparison between surface
reconstruction first method (a) and the proposed point cloud simplification first method. The result of the
proposed method using DSO can be used to obtain the feature-sensitive point distribution.

Table 2. The execution time (s) of experimental results measured on a Pentium 4 (3.0 GHz) PC having 3 GB of
main memory. The tables show the comparison between performing the reconstruction first or the point cloud
simplification first method. The attributes of unique simplified models are shown in Table 1.
Model
Armadillo

error
0.0287

Reconstruction first
reconstruction
simplification
359.2
3.27

total time
362.47

Dragon

0.000066

1739.31

9.27

1748.58

Lion

0.000047

372.77

3.38

376.15

Isis

0.0178

653.84

3.66

657.5

Planck

0.036

379.38

3.84

383.22

Venus

0.000011

302.5

2.41

304.91

Point cloud simplification first

Improve

simplification

reconstruction

18.16

59.91

37.38

total
time
115.45

68.95

238.23

37.92

345.1

80.26%

Lion

0.0002
5

18.31

58.52

25.44

102.27

72.81%

Isis

Model

error

DSO

Armadillo

0.0697

Dragon

0.0001

total time
68.15%

0.0453

20.19

68.78

49.16

138.13

78.99%

Planck

0.0913

28.45

89.94

17.5

135.89

64.54%

Venus

0.0000
26

12.69

37.8

36.3

86.79

71.54%

6

