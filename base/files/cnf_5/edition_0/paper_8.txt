2012 Ninth International Conference on Computer Graphics, Imaging and Visualization

A Sketch-based Skeletal Figure Animation Tool for Novice Users
Satoshi Yonemoto
Graduate School of Information Science
Kyushu Sangyo University
Fukuoka, Japan
yonemoto@is.kyusan-u.ac.jp

Abstract—Our goal is to develop a rough sketch-based
animation tool which is simple enough to use for novice users.
The animation process begins with sketching an object to be
animated. Our tool consists of object sketching and motion
sketching. In object sketching, user sketches an object and then
turns into a sketched object using modeling operations such as
rigid transformation and grouping. An animated motion is
then created for the sketched object by motion sketching.
Motion sketching provides two motion creation techniques: a
sketch-based motion path editing and a skeletal motion editing
which can add articulated structure and its motion to the
sketched object.

II.

One of most famous application for animation is
Microsoft PowerPoint [1], which is a presentation tool for
general purpose use. However, it is not suitable for
animating free-hand sketch and for animating skeletal
structure. SmithMicro AnimeStudio [2] is one of complete
animation tools for professional animators. Adobe Flash
Professional CS6 [3] is also one of general-purpose
animation tools and it has high-level interface to make web
contents or game ones. ToonBoom Studio [4] is often used
for a wide range of users.
Many systems allow users to create objects and
demonstrate their motions via sketching technique.
Moscovich and Hughes [5] describe an IK-based animation
control method in which users select multiple joints to
control different layers of motion. Davis et al. [6] describe a
3D articulated figure animation method from sketched 2D
stick figures.
K-Sketch [7] is one of sketch-based animation tool for
novice animators. It is earlier and similar work that would
have provided novice animators with “rough sketch”
animation. Our work is most closely related to the work.
Nintendo "Flipnote Studio" [8] is a commercial game
software run on a portable game device (Nintendo DS) using
a touch pen. It is one of practical sketch based application for
novice users, including children. It allows the user to create
frame-by-frame flipbook-style animations.
Several works explore physical simulation technique for
animating user sketch. For example, Popovic [9] describe 3D
motion path technique and animating physically motion
which matches user sketch. Throne et al. [10] describe an
articulated figure control method using sketched motion
trajectory. Igarashi et al. [11] describe an interactive shape
manipulation technique. Non-rigid objects can be directly
handled by user-specified pins. As rigid-as-possible shape
manipulation is realized, deforming a 2D shape without
manually establishing a skeleton. Jacobson et al. [12] also
propose similar approach. These techniques are very suitable
for soft toy-like object animation. Although they can be
applied to polygonal shapes and a polyline, they cannot be
applied to line drawings without region boundary.

Sketch based animation; skeletal motion; physics-based
motion synthesis

I.

INTRODUCTION

In this paper we present an easy-to-use animation tool for
sketching object shapes and its motions. The process begins
by roughly sketching an object to be animated. An animated
motion is then created for the sketched object by changing
shape and pose.
Most animation tools are complex and time-consuming
to learn and use, so most animations are created by experts.
Unfortunately, most animation tools usable by non-experts
(i.e., novices) remain in short supply. “Easy-to-use"
animation tools are required for such users.
In general, most animation tools provide a set of
operations for specifying animation. We assume that
animation tool should provide essentially the following three
operations:
• Rigid transformation: Translate and rotate a rigid
body.
• Deformation: Stretch an object out of its shape
state.
• Move Limb: Define object skeleton to move its
segment parts.
In order to help novice users create a wide range of
animations quickly, we have developed a sketch-based
animation tool. Two components of our tool are an object
sketching and a motion sketching. Our tool is unique in
immediately animating a rough sketched object with skeletal
motion and in its ease of use for non-experts.
978-0-7695-4778-7/12 $26.00 © 2012 IEEE
DOI 10.1109/CGIV.2012.18

RELATED WORK

37

III.

TOOL OVERVIEW
user sketch

In this section, we describe overview of our tool. Our
tool consists of the following two components:
1) Object sketching: Sketch an object to be animated.
This process includes grouping and modifying sketch.
2) Motion sketching: Create an animated motion for
the sketched object.
Object sketching begins by drawing an object to be
animated. Object sketching provides a manipulation
technique to handle sketched segments generated from user
stroke.
As basic operations, we define the following operations
for object sketching:
• Rigid transformation
• Shape deformation
• Grouping
• Layer selection
• Skeletal structure modeling
• The other edit manipulation such as select, delete,
copy, paste and undo

grouping
Figure 1. Object Sketching: (top) User sketch (bottom) Sketched
segments generated by grouping operation.

(a)

Motion sketching provides a motion creation technique to
animate the sketched object. Concretely, an animated motion
is created by drawing a sketch-based motion path. We also
support animating skeletal motion such as human-like
character movement, adding articulated structure to a
sketched object. Articulated figure control method is
introduced, which provides users with an intuitive interface
to pose and animate skeletons of any topology easily.
IV.

(b)

Figure 2. Rigid transformations: (a) Use of middle point of the link (b)
Direct pin handling

world transformation. The selected joint is automatically
assigned to the closest segment. We call it “pin”. Two types
of rigid transformations are realized.
Figure 2 illustrates the rigid transformations. Figure 2(a)
illustrates traditional rigid operation (translation and rotation),
handling middle point of the link. Figure 2(b) illustrates
freestyle operation by direct pin handling. The latter
manipulation is based on physical simulation that keeps
constant length of the link (see the next section). This is
more intuitive approach to handle sketched object.
2) Shape deformation: We use simple bending
deformation using the link. It is difficult for novice users to
introduce complex shape deformation technique. Therefore,
in our approach, it is not supported in preserving user’s
sketch features.
3) Grouping: Select all segments to be merged. This
selection process is done by drawing a loop around them.
4) Layer selection: Change layer for each segment to
solve overlap problem.
5) Skeletal structure modeling: Link multiple segments.
We will describe detail of skeletal structure in the next
section.

OBJECT SKETCHING

A.

Definition of sketched segment
We first describe definition of hand-drawn sketch in
object sketching. We use one user stroke as shape primitive.
We call it "sketched segment". Each sketched segment is not
treated as image data but as a series of several points.
Multiple sketched segments can also be assigned to the same
group which has been combined by grouping operation. Such
grouping is done by selecting the desired segments to be
merged. Figure 1 shows an example of sketched segments.
They consist of 13 user strokes. 2 groups are newly
constructed (in this case, 5 groups will be manipulated).
B. Object modeling
Next, we describe how rough sketch is manipulated.
Main basic operations for object sketching are as follows:
1) Rigid transformation: Change relative location and
pose of sketched segments as rigid body. This
transformation is needed for putting together multiple
segments and for modifying initial location and pose.
We adopt an intuitive transformation using the principal
axis of the sketched segment. Before rigid transformation,
user has to set a link which consists of two joints on the
sketched segment. Two joints are picked up by user
relatively. A sketched segment can have just a link to do

38

V.

MOTION SKETCHING

In this section, we describe detail of motion sketching. In
motion sketching, the sketched segment to be animated is
treated as a “sketched object”. Motion sketching has consists
of the following two modes: motion path editing and skeletal
motion editing.
A.

Motion path editing
After object sketching process, user can create the whole
animation scenario, adding a motion path. Our tool provides
an ordinary motion path technique to coordinate motion of
sketched objects. Motion path is the recorded stroke for each
sketched object. Motion path is determined by handling each
pin or middle point of the link. We assume that the link (two
pins) has been already set in object sketching. Figure 3
shows an example of typical motion path. Red line indicates
recorded motion path (with middle point of the link).

Figure 3. Motion path: (left) initial frame (right) middle frame.

shared pin

B.

Skeletal motion editing
Our tool can also add a bone rig to each sketched
segment to enable it to be animated. In order to articulate the
sketched segment, user begins with drawing a link for itself.
In general, we call it "bone". A sketched segment to be
animated must have a bone which consists of two pins. The
bone means a link to change the location and pose that we
described in the previous section. Each bone can be
manipulated by handling pins sequentially.
Connecting two bones through the pins, skeletal structure
of articulated figure is constructed. Figure 4 shows an
example of bone linking. Figure 4(a) shows a new link
between two bones and the articulated pose (red link). The
new link does not belong to any sketched object. The bone
can also be created by sharing with a pin of another object.
This is often used to represent such as arms and legs. Figure
4(b) shows a new link has the shared pin and the articulated
pose changed by handling red pins.
Fixed pin is employed to fix on the base object such as
torso. When the base object is undefined, static background
is treated as the base (in equal, the sketched object is fixed in
the scene). When a fix pin is defined, relative location to the
base object is preserved. Figure 5 shows an example of
articulated object with 2 fix pins (blue pins). This is sketched
using 5 links (segments). Clicking a pin, its state changes
fixed pin mode.
In order to keep the structure of multiple bones, we
introduce a fast and physically based motion synthesis
method [13], keeping point to point constraints between
adjacent joints of the skeletal model.
The articulated body parts have to be moved apart to
reduce the amount of undesirable influence. Figure 6 shows
an example of articulated figure (polygonal shape). This is
sketched using a total of 10 links, one for each of the head,
torso, arm and leg. 4 fix pins are defined on top of the torso.
As a result, 5 parts are connected with the base torso. Right
figure shows the articulated pose.

(a)

(b)

Figure 4. Bone linking: (a) two bones linking (b) shared pin linking.

Figure 5. Use of fix pin.

Figure 6. Articulated figure example.

obj1
obj2
obj3
obj4
timeline
start i

end i

Figure 7. Motion sketching workflow.

39

C. Motion sketch interface
We adopt a frame-by-frame, and simple timeline-based
motion sketch interface. The timing of motion sketching is
taken directly from user's stroke. Figure 7 shows motion
sketching workflow. In this example, 4 sketched objects are
existed in an animation scenario. Red lines indicate motion
events appeared. All sketched objects must move
simultaneously when time advances, while user needs to add
motion of each object sequentially. In particular, it is
difficult to manage multiple objects such as an articulated
figure simultaneously. In our interface, user adds a new
motion, replaying preserved motions of the other objects.
Pin-based approach only allows one object to move at a time
and therefore require multiple record-and-playback cycles to
build an articulated figure animation.
VI.

3) Record the object motion generated in the physics
world. The generated motion is acquired as a rigid
transformation.
4) Export the sketched object and its motion into motion
sketch interface.
Figure 12 shows an example of the triangulation process.
Each piece of generated triangles (polygons) is created as a
Box2D object. Physically based motion trajectory is shown
in Figure 13. This image is created by synthesizing the
object appearance every 15 frames. This animation scenario
is assumed that human-like character falls down the stairs.

D. Predefined skeletal structure model
Next, we have considered use of predefined skeletal
structure model. The structure model consists of several parts
which are connected by bones. The structure model is
overlaid before user sketches. Then, user sketches an object
(part) on top of the corresponding part of them. The merit is
that motion data registered in advance can be employed for
the skeletal structure model. For example, registered walking
motion can be quickly applied for a sketched human-like
character. This technique is used as a first step animation
task for novice user. Figure 14 shows an example of a
structure model (flower) and its motion (dancing). Upper left
figure shows the structure model consists of 4 parts. Upper
right figure shows a sketch object overlaid on top of the
model. Bottom figures show two shots of motion data driven
sketch animation results (the structure model is visible).

EXPERIMENTS AND EXTENSION

A. Implementation
We have developed a prototype of our animation tool.
Figure 8 shows a demonstration on a pen tablet PC (with
Wacom CintiQ 21UX). The prototype tool is implemented in
C++. We use just an OpenGL library, so we can use it under
any platform such windows and linux.
B. Experimental results
Figure 9 illustrates examples of typical animal sketch
with skeleton and their articulated pose created by object
sketching (polygonal shape). Figure 10 shows an excavator
work animation created by motion sketching. Upper left
figure shows a sketched object (initial frame). The rest of
figures show several shots of the animation. In the Figure 11,
robot and screw are linked together. In motion sketching, our
tool can create the dynamic link between sketched objects.
Upper right figure shows at the initial frame. When handling
the screw object, robot posture is interlocked (see the rest of
figures).

VII. CONCLUSIONS
We have developed a sketch-based animation tool for
novice users. It consists of two main parts. The first is
concerned with object sketching. User sketches an object to
be animated and then modifies the sketch segment using
modeling operations such as rigid transformation, grouping
and skeletal structure modeling. The second is concerned
with motion sketching. Motion sketching provides a sketchbased motion path editing to record the motions of sketched
segments. Moreover, a skeletal motion editing can also be
realized.
The primary contribution of this work is that it allows
novice users to create animation almost entirely from rough
sketches, with little additional effort. Our tool is unique in
immediately animating a rough sketched object with skeletal
motion and in its ease of use for non-experts.
Future work is to explore more appropriate shape
modeling and animation technique from rough sketch. In
particular, we are interested in fusion of sketch-based
character modeling and procedural generation. In Spore
Creature Creator [15], user can create a favorite character
with a set of branching limbs. In our case, sketched segments
correspond to limbs such as legs, arms, feet, hands and
decorative elements, and thus their shape and color give the
characteristics. The character motion is procedurally applied
depending on the topology of the character.

C. Physically based motion
We have developed a few advanced operations. Freehand
motion is not adequate to some animation tasks. In order to
move object as in "real life", physically simulation is one of
powerful representation. By the grace of research progress in
physically-based animation, it is easy to apply such physical
motion for a sketched segment. In our prototype
implementation, we use Box2D library [14] that enables 2D
rigid body simulation.
To acquire physical motion, we use the following
strategy:
1) First, user sketches a target object in physical sketch
mode. In the physics world, static objects are arranged in
advance. The static objects are also created as hand-drawn
sketches.
2) Then, triangulate the target object contour. In this
stage, only the target object is transformed.

40

Figure 8. Sketch demonstration on a pen tablet PC.

Figure 11. Linked sketches animation results.

Figure 12. Sketch triangulation.

Figure 9. Several sketched objects: (left) sketched object and the skeleton
(right) articulated pose

sketch

Figure 13. Physically-based motion.

Figure 10. Sketch animation results.

41

[4]
[5]

[6]

[7]

[8]
[9]

[10]

[11]
Figure 14. Structure model and its motion.
[12]

REFERENCES
[1]
[2]
[3]

[13]

Microsoft Powepoint: http://office.microsoft.com/
SmithMicro AnimeStudio: http://anime.smithmicro.com/
Adobe Flash: http://www.adobe.com/jp/products/flash/

[14]
[15]

42

Toon Boom Animation Inc. ToonBoom Studio:
http://www.toonboom.com/
T.Moscovich, “Animation Sketching: An Approach to Accessible
Animation”, Unpublished Master's Thesis, C. S. Department, Brown
University, 2001.
J.Davis, M.Agrawala, E.chuang, Z.Popovic and D.Salesin, “A
Sketching Interface for Articulated Figure Animation”, In
Proceedings of the ACM SIGGRAPH/Eurographics Symposium on
Computer Animation, pp.320-328, 2003.
R.C.Davis, B.Colwell, and J.A.Landay, “K-Sketch: a kinetic sketch
pad for novice animators”, Research Collection School of
Information Systems, pp.738, 2008.
Flipnote Studio: http://flipnotestudio.nintendo.com/
J.Popovic, S.Seitz and G.Hinton, “Motion Sketching for Control of
Rigid-Body Simulations”, ACM Trans. Graphics, Vol. 22, No. 4,
1034-1054, 2003.
M.Thorne, D.BURKE and M.Van De Pannne, "Motion Doodles: An
Interface for Sketching Character Motion", ACM Transactions on
Graphics, Vol.21, no.3, pp.424-431, 2004.
T.Igarashi, T.Moscovich and J.Hughes, "As rigid-as-possible shape
manipulation", ACM SIGGRAPH, Vol.24, no. 3, pp.1134-1141, 2005.
A.Jacobson, I.Baran, J.Popovic and O.Sorkine, “Bounded biharmonic
weights for real-time deformation”, ACM Trans. Graph. Vol.30, no.4,
pp.1–8, 2011.
S Yonemoto and R Taniguchi, “Human Figure Control Software for
Real-Virtual Application”, Proceedings of International Conference
on Information Visualization, pp.858-862, 2004.
Box2D library: http://box2d.org/
Erectronic Arts Spore: http://www.spore.com/

