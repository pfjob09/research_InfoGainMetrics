Framework for Real Time cloud Rendering
Muhammad Azam Rana 1, Mohd Shahrizal Sunar 2, Mohd Norikhwan Nor Hayat 3,
Sarudin Kari 4, Abdullah Bade 5
Department of Computer Graphics and Multimedia
Faculty of Computer Science and Information System
University Technology Malaysia
81310 Skudai
Johor Darul Takzim, Malaysia.
1
mazamrana@hotmail.com , 2 shah@fsksm.utm.my , 3 ikhz@cakarharimau.com,
4
aukauk@itc.utm.my, 5 abd-lah@fsksm.utm.my

Abstract
Computer Graphics (CG) is a key technology for
producing visual contents. Currently computer generated
imagery techniques are being developed and applied,
particularly in the field of virtual reality applications,
film production, training and flight simulators, to provide
total composition of realistic computer graphic images.
Clouds are an integral feature of the sky without them
synthetic outdoor scenes seems unrealistic. Modeling and
animating clouds is a difficult task. Most systems are
difficult to use, as they require adjustment of numerous,
complex parameters, and are non-interactive. This paper
presents an intuitive, interactive system to artistically
model, animate, and render visually convincing clouds
using modern graphics hardware. A high-level interface
models clouds through the visual use of cubes. Clouds are
rendered as textured billboards by making use of
hardware accelerated API - OpenGL. The resulting
interactive design and rendering system produces
perceptually convincing cloud models that can be used in
any interactive system.

Keywords: Cloud, Rendering, Virtual Reality, Flight
Simulator, Billboard.

1. Introduction
Clouds are very important in generation of images for
outdoor scenes, interactive flight simulator applications,
games and so on. The color and shape of clouds is
dependent on the position of sun and position of the
viewer as well [1]. This makes it important to display

clouds in three-dimensional space so that changes in their
shape and color with varying positions of sun and viewer
may be observed.
Therefore, a lot of methods have been methods
developed to create photo-realistic images. These
methods can be classified into two groups. Methods in
first group [2] [3] [4] [5] [6] [7] [8] [9] [10] [11] [12] [13]
[14] [15] [16] [17] [18] [19] [20] [21] [22] [23] [24] [25]
[26] [27] [28] [29] [30] [31] [32] [33] [34] use procedural
modeling techniques. Methods in the second group model
phenomena by simulating physical process [1] [35] [36]
[37] [38] [39] [40] [41]. Modeling phenomena such as
clouds, smoke, water, and fire have proved difficult with
the existing techniques of computer image synthesis.
These "fuzzy" objects do not have smooth, well defined,
and shiny surfaces; instead their surfaces are irregular,
complex, and ill defined [29].
Clouds, like other amorphous phenomena, elude
traditional modeling techniques with their peculiar
patterns of intricate, ever-changing volume-filling
microstructures [2]. This challenge has lead us create an
interactive system that allows artists to easily design and
interactively render visually convincing clouds. This will
accelerate rendering to real-time and extend applications
from static data visualization and movies to interactive
exploration and video games. In addition, the use of
responsive, interactive system aids comprehension of
synthetic environments and increases the productivity of
artists.
We have developed an interactive, multi-level, cloud
modeling and rendering system using intuitive controls.
Our system is composed of a high level modeling system,
the renderer, and the user interface. The design of an
intuitive, multi-level interface for the system makes it
easy to use for both novice and expert users. The designer

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

interactively outlines the general shape of the clouds
using cubes. The cloud details are described by selecting
a 2D texture for cubes from a pool of pre-computed 2D
textures. The clouds are then rendered using textured
billboarding technique. This detailed modeling and
rendering is performed using the graphics processor
through the use of textures and texture transformations.
We begin with a brief survey of current cloud
modeling techniques, and then introduce our framework
for cloud formation and rendering. Next, we present our
test results. Finally, we present conclusions and our
planned future work.

2. Previous Work
Approaches to cloud modeling may be classified as
simulation-based or procedural [13]. Simulation methods
produce realistic images by approximating the physical
processes within a cloud. Computational fluid simulations
produce some of the most realistic images and movement
of gaseous phenomena. However, despite the recent
breakthroughs in real-time fluid simulation [36], largescale high quality simulation still exhausts commodity
computational resources. In contrast, procedural methods
rely on mathematical primitives, such as volumetric
implicit functions [42], fractals [31][42], Fourier
synthesis [27], and noise [32] to create the basic structure
of the clouds. This approach can easily approximate
phenomenological modeling techniques by generalizing
high-level formation and evolution characteristics. These
procedural modeling systems often produce more
controllable results than true simulation in much less
time. Many approaches use volumetric ellipsoids to
roughly shape the clouds, and then add detail
procedurally [42][12][34].
Correct atmospheric illumination and shading is
another difficult problem that must be addressed to
produce convincing cloud images and animations. Early
work discussed accurately modeling light diffusion
through clouds, accounting for reflection, absorption, and
scattering [43]. Further research has explored accurate
volumetric light scattering and inter reflection for clouds
[38][44][7][42][45].
While
full
self-shadowing,
translucent volume rendering is approaching interactive
rates [34], we elect to implement a visually convincing
approximate volumetric lighting model utilizing graphics
acceleration to achieve true interactive performance.
Two areas of previous work, cloud modeling and
cloud rendering are important to our work. Cloud
modeling is concerned with the generation of cloud data,
and how to use and organize this data to represent clouds
in computer. Reeves introduced particle system as an
approach to model clouds and other fuzzy phenomena
[29]. Voxels are another choice for clouds, which provide

a uniform sampling of the volume, and can be rendered
with both forward and backward methods. Procedural
noise techniques are also important to cloud modeling as
a way to generate random and continuous density data to
fill cloud volumes [46][32][17]. We model our clouds by
making use of texture-mapping techniques. We make use
of Graphics Hardware accelerated API-OpenGL to
implement this technique at a very fast rate.
Cloud rendering is much difficult, as realistic shading
requires the integration of the effects for optical
properties through the cloud volume and incorporation of
complex light scattering with the cloud volume. Previous
work has attempted to approximate the physical
characteristics of clouds at various levels of accuracy and
complexity, and then to use these approximate models to
render images of clouds. Blinn [43] introduced the use of
density models for image synthesis in, where he presented
a low albedo, single scattering approximation for
illumination in a uniform medium. Kajiya and Von
Herzen [38] extended this work with methods to ray trace
volume data exhibiting both single and multiple
scattering. Max [44] provided an excellent survey in
which he summarized the spectrum of optical models
used in volume rendering and derived their integral
equations from physical models. David Ebert has done
much work in modeling “solid spaces”, including offline
computation of realistic images of smoke, steam, and
clouds [21][1]. Nishita et al. introduced approximations
and rendering techniques for global illumination of clouds
accounting for multiple anisotropic scattering and
skylight [20].
Most of the physical methods need a large amount of
computation time. The simulation of clouds covering a
large area in the sky is impossible by these methods on
today’s desktop PCs. Controlling cloud shapes is also
difficult by using the methods in this category. Procedural
methods such as presented by Dobashi et al. [11] and
Harris [3] produce good cloud images taking into account
light scattering and shadows, still these techniques require
a lot of processing power. For the applications that are not
mission critical and where the effects of light can be
ignored, our approach can produce very fast images
requiring less computing power. The viewer even can go
very close to clouds and this produces no visual artifacts,
the only limitation is that viewer cannot pass through the
clouds as clouds are modeled as 2D textures.

3. Framework
3.1 Cloud Modeling
The evolving structure of clouds is modeled using a
two-level approach. At the high-level, we use cubes for
controlling general shape of clouds. For low-level cloud

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

details, we use 2D textured billboards. The user can
design the shape of clouds by placing cubes at appropriate
places and then selecting 2D texture for each cube; in
rendering phase these 2D textures are rendered as
billboards. At the end, all data about high-level model is
saved in a data file. The various steps of high-level model
are listed in figure 1.

4. User Interface
We develop user interface using GLUI [47] controls. We
organize variables hierarchically through a tree of GLUI
groups. Novice users can design complete clouds using
the most basic controls.
We group controls into four general groups: Viewing
parameters, global rendering parameters, cloud media
shaping controls and file manipulation controls. Basic
position, shaping, and media sculpting controls are
located on the bottom of the render window, as shown in
Figure 3.

Figure 1. High- level cloud modeling

3.2 Cloud Rendering
Rendering of clouds is based on the algorithm using
billboards. In high-level modeling phase, a pre-computed
2D is attached with each cube. In rendering phase, each
cube is drawn as a textured billboard. We are making use
of hardware accelerated API such as OpenGL, the
rendered images are very fast. The viewer can fly very
close to clouds without having visual artifacts. As our
approach uses 2D textures, the viewer cannot pass
through clouds. The various steps of cloud rendering are
listed in Figure 2.

Figure 3. User interface

5. Results and testing
Figures 4 through 6 show the clouds rendered with
18, 64 and 128 textured billboards without terrain. In
figure 7 we present clouds rendered over a terrain.
Figures 8 through 11 show test results performed with
different display modes of 320x240, 640x480, 800x600
and 1024x768. These tests were performed over different
PCs with a variety of hardware specifications. As shown
in figures 8 through 11, the symbols Awan1, Awan2 and
Awan3 are described as:
Awan1 o Cloud rendered with 18 billboards
Awan1 o Cloud rendered with 64 billboards
Awan1 o Cloud rendered with 128 billboards
Similarly technical details about the symbols SiS,
Riva, GeForce1, GeForce2, Raeon1 and Radeon2, shown
in Figures 8 through 11 are as follows:

Figure 2. Cloud rendering

SiS
Processor
System RAM
Graphics card

Intel Celeron 1.1 GHz
320 MB
SiS 630 with 64 MB RAM (built-in)

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

Riva
Processor
System RAM
Graphics card
GeForce1
Processor
System RAM
Graphics card

AMD Barton +2500 1.8 GHz
256 MB
NVIDIA Riva TNT2 with 32 MB RAM

AMD Duron 1.1 Ghz
512 MB
NVIDIA GeForce 4 MX 440 with 64
MB RAM
Figure 6. Cloud rendered with 128 billboards

GeForce2
Processor
System RAM
Graphics card

Intel Pentium IV 2.4 GHz
256 MB
GeForce 4 MX 440 with 128 MB RAM

Radeon1
Processor
System RAM
Graphics card

Pentium IV (M) 1.9 GHz
512 MB
ATI Radeon 7500 with 64 MB RAM

Radeon2
Processor
System RAM
Graphics card

Intel Pentium IV 2.1 GHz
256 MB
ATI Radeon 9000 with 64 MB RAM

Figure 7. Clouds rendered over a terrain

Figure 4. Cloud rendered with 18 billboards

Figure 8. Test result for 320x240 resolution

Figure 5. Cloud rendered with 64 billboards

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

Figure 9. Test result for 640x480 resolution

rendering, we are able to create a more intuitive system
for artists and animators and allow the designers to
interact with their full cloud models at interactive rates.
As seen in Figures 7, our system can create and
render fast and visually convincing cloudscapes. Figures
8 through 11 show performance plots for SiS, Riva,
GeForce1, GeForce2, Radeon1 and Radeon2 (details can
be found in section 5 above) on a variety of processors
including Pentium IV and AMD each having different
hardware specifications. Performance varies with the
quantity of geometry and projected size on screen.
Increasing number of billboards reduces the number of
rendered frames per second. The performance results
indicate suitability and usefulness of the technique for
large-scale cloudscapes with a fast rendering rate on
desktop PCs. Even on low-cost PC graphics hardware,
visually convincing images of rendered clouds are
possible.
We have used 2D texture mapping techniques, which
is a good approximation for visualizing clouds from a
distance. This does not allow flying through the clouds.
We plan to extend our work to 3D textures. We are
also exploring to integrate simulation of clouds using
particle system with this interactive development
environment.

References
[1]

Figure 10. Test result for 800x600 resolution

[2]

[3]

[4]

[5]

Figure 11. Test result for 1024x768 resolution

[6]

6. Conclusion and future work
[7]

We have demonstrated an interactive system for
artistically modeling and rendering visually convincing
clouds using low-cost PC graphics hardware. Using a
procedural-based two-level approach for modeling and

[8]

Mark J. Harris, Willium V. Baxter III, Thorsten
Scheuermann and Anselmo Lastra “Simulation of
Cloud
Dynamics
on
Graphics
Hardware,”
SIGGRAPH/Eurographics Workshop on Graphics
Hardware 2003
J. Schpok, J. Simons, David S. Ebert, C. Hansen. A
Real-Time Cloud Modeling, Rendering, and
Animation
System.
Eurographics/SIGGRAPH
Symposium on Computer Animation, 2003
Mark J. Harris, “Real-Time Cloud Rendering for
Games,” Game Developer Conference 2002
Proceedings
Andrzej Trembilski, "Surface-Based Efficient Cloud
Visualisation
For
Animation
Applications,"
Proceedings WSCG 2002
Andrzej Trembilski, Andreas BroBler "Transparency
of Polygon Based Cloud Rendering," Proceedings of
the ACM Symposium on Applied Computing (ACM
SAC 2002), p785-790.
Paul Heinzlreiter, Gerhard Kurka, Jens Volkert: Realtime Visualization of Clouds, WSCG'2002 - the 10-th
International Conference in Central Europe on
Computer Graphics, Visualization and Computer
Vision'2002, Czech Republic, Feb. 2002.
Mark J. Harris and Anselmo Lastra. Real-Time Cloud
Rendering. EUROGRAPHICS 2001, Volume 20
(2001), Number 3
T. Nishita, Y. Dobashi, "Modeling and Rendering of
Various Natural Phenomena Consisting of Particles,"

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

[9]

[10]

[11]

[12]

[13]

[14]

[15]

[16]
[17]

[18]

[19]

[20]

[21]

[22]

[23]
[24]
[25]

[26]

[27]

Proceedings of Computer Graphics International
2001, pp.149-156
Andrzej Trembilski, "Two methods for cloud
visualization from weather simulation data," the
Visual Computer (2001) 17:179-184.
Andrzej Trembilski, "Two methods for cloud
visualization from weather simulation data," the
Visual Computer (2001) 17:179-184.
Dobashi Y., Kaneda K., Yamashita H., Okita T.,
Nishita T., “A Simple, Efficient Method for Realistic
Animation of Clouds,” ACM SIGGRAPG, pp. 18-28,
2000
Pantelis Elinas and Wolfgang Stürzlinger. Real-time
rendering of 3D clouds. Journal of Graphics Tools,
5(4):33-45, 2000.
T. Nishita, Y. Dobashi, "Modeling and Rendering
Methods of Clouds," Pacific Graphics 99, pp.218-219,
1999-10
Yoshinori Dobashi, Tomoyuki Nishita, Hideo
Yamashita, Tsuyoshi Okita: “Using metaballs to
modeling and animate clouds from satellite images,”
The Visual Computer 15(9): 471-482 (1999)
T. Nishita, Y. Dobashi, "Modeling and Rendering
Methods of Clouds," Pacific Graphics 99, pp.218-219,
1999-10
L. Westover, “Footprint evaluation for volume
rendering” SIGGRAPH 1990, Pages 367 - 376
David S. Ebert, Edward Bedwell, “Implicit Modeling
with Procedural Techniques,” Proceedings Impliict
Surfaces '98, June 1998
Y. Dobashi, T. Nishita, and T. Okita. Animation of
Clouds Using Cellular Automaton. In Proceedings of
Computer Graphics and Imaging'98, pages 251-256,
1998.
D. S. Ebert, Volumetric Modeling with Implicit
Functions: A Cloud is Born, Visual Proc. of
SIGGRAPH’97, 1997, pp.147.
T. Nishita, Y. Dobashi, E. Nakamae, Display of
Clouds Taking into Account Multiple Anisotropic
Scattering and Sky Light, Proc. of SIGGRAPH’96,
1996, 379-386.
D. S. Ebert, R. E. Parent, “Rendering and Animation
of Gaseous Phenomena by Combining Fast Volume
Scanline A-Buffer Techniques,” SIGGRAPH 1990,
pp. 357-366.
A. Lamorlette and N. Foster. Structural modeling of
natural flames. ACM Transactions on Graphics, 21(3),
July 2002.
J. Stam, Stochastic Rendering of Density Fields, Proc.
of Graphics Interface’94, 1994, 51 58.
K. Nagel and E. Raschke, Self-Organizing Criticality
in Cloud Formation?, Phisica A, 182, 1992, 519-531.
K. Kaneda, T. Okamoto, E. Nakamae, and T. Nishita,
Photorealistic Image Synthesis for Outdoor Scenery
under Various Atmospheric Conditions, The Visual
Computer, 7(5&6), 1991, 247-258.
D. S. Ebert and R. E. Parent, Rendering and
Animation of Gaseous Phenomena by Combining Fast
Volume and Scanline A-Buffer Techniques, Computer
Graphics, 24, 1990, 357-366.
G.Y. Gardener, Visual Simulation of Clouds,

[28]

[29]

[30]

[31]

[32]

[33]

[34]

[35]

[36]
[37]

[38]
[39]

[40]
[41]

[42]

[43]

[44]

[45]
[46]
[47]

Computer Graphics, 19(3), 1985, 279-303.
R. Voss, Fourier Synthesis of Gaussian Fractals: 1/f
noises, landscapes, and flakes, SIGGRAPH’83:
Tutorial on State of the Art Image Synthesis, 10,
1983.
Reeves, W., "Particle Systems - A Technique for
Modeling a Class of Fuzzy Objects," SIGGRAPH'83,
pp. 359-376.
FOURNIER, A., FUSSEL, D., AND CARPENTER,
L. Computer rendering of stochastic models.
Commun. ACM25, 6, (June 1982), 371-384.
R. Voss. Random fractal forgeries. In R. A. Earnshaw,
editor, Fundamental Algorithms for Computer
Graphics. Springer-Verlag, 1985.
K. Perlin. An image synthesizer. In Computer
Graphics (Proceedings of SIGGRAPH 85), volume
19, July 1985.
Y. Dobashi, T. Nishita, H. Yamashita, and T. Okita.
Modeling of clouds from satellite images using
metaballs. Paciٝ c Graphics 98, 1998.
J. Kniss, S. Premoze, C. Hansen, and D. Ebert.
Interactive translucent volume rendering and
procedural modeling. In Proceedings of the
conference on Visualization '02. IEEE Press, 2002.
F. Neyret, Qualitative Simulation of Convective
Clouds Formation and Evolution, EGCAS’97, 1997,
113-124.
J. Stam. Interacting with smoke and fire in real time.
Communications of the ACM, 43(7), 2000.
N. Max, Efficient Light Propagation for Multiple
Anisotropic Volume Scattering, Proc. of the Fifth
Eurographics Workshop on Rendering, 1994, 87-104.
J. T. Kajiya and B. P. V. Herzen, Ray Tracing Volume
Densities, Computer Graphics, 1984, 18, 165-174.
J. Stam, E. Fiume, Dipicting Fire and Other Gaseous
Phenomena Using Diffusion Processes, Proc. of
SIGGRAPH'95, 1995, 129-136.
J. Stam, E. Fiume, Turbulent Wind Fields for Gaseous
Phenomena, Proc. of SIGGRAPH'93, 1994, 369-376.
T. Kikuchi, K. Muraoka, and N. Chiba, Visual
Simulation of Cumulonimbus Clouds, The Journal of
The Institute of Image Electronics and Electronics
Engineers of Japan, 27(4), 1998, 317-326
D. Ebert, F. Musgrave, D. Peachey, K. Perlin, and S.
Worley. Texturing & Modeling: A Procedural
Approach. Morgan Kaufmann, 3 edition, 2002.
J. Blinn. Light reflection functions for simulation of
clouds and dusty surfaces. In Proceedings of the 9th
annual conference on Computer graphics and
interactive techniques, 1982.
N. Max. Optical models for direct volume rendering.
IEEE Transactions on Visualization and Computer
Graphics, 1(2), 1995.
J. Stam. Multiple scattering as a diffusion process.
Eurographics Rendering Workshop 1995, June 1995.
J. Levis. “Algorithms for Solid Noise Synthesis”.
SIGGRAPH 1989, pp. 263-270.
P. Rademacher. GLUI, A GLUT-Based User Interface
Library, second edition, June 1999.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

