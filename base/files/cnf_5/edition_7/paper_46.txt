Enhanced LIC Pencil Filter
Shigefumi Yamamoto
Fuji Data System Inc
{Daisy@yamanashi.ac.jp}

Xiaoyang Mao
University of Yamanashi
{mao@yamanashi.ac.jp}

Abstract
This paper proposes an extension to the existing
automatic pencil drawing generation technique based on
Line Integral Convolution (LIC). The original LIC pencil
filter utilizes image segmentation and texture direction
detection techniques for defining outlines and stroke
directions, and the quality of a resulting image depends
largely on the result of image segmentation. It may fail to
generate a reasonable result when the segmentation result
is not consistent with the structure of the input image. To
solve this problem, we propose in this paper to avoid the
explicit region subdivision. Instead, we divide a source
image into layers of successive intensity ranges, generate
a stroke image for each layer, and add them together to
obtain the final pencil drawing

Atsumi Imamiya
University of Yamanashi
{imamiya@yamanashi.ac.jp}

becomes more critical, while it is usually difficult to
extract such information from 2D raster images
automatically. Instead of modeling line strokes
geometrically, we have developed a pencil drawing filter
using Line Integral Convolution(LIC), a texture based
flow visualization technique[12]. The technique utilized
the similarity between the appearance of LIC images and
pencil strokes, and succeeded in generating line stroke like
images with pixel-by-pixel image filtering. It employs
image segmentation and texture analysis technique to
automatically detect outlines and decide stroke orientation.
Figure 1b shows a pencil drawing automatically generated
from the photo in Figure 1a using LIC pencil filter.

1. Introduction
In the past decade, a number of techniques have been
developed to simulate traditional artistic media and styles,
such as pen and ink illustration[4-7], graphite and colored
pencil drawing[8-10], impressionist styles[2], paintings of
various materials including oil[1], water color[3] and so
on. The existing researches on painterly image generation
mainly take two different approaches. The first approach
is to provide physical simulation to the materials and skills,
and has been mainly combined with interactive painting
systems or 3D non-photorealistic rendering systems for
generating realistic painterly images. The second approach
is the painterly filtering, which involves taking an image
and applying some kind of image processing or filtering
techniques to convert it into an image of a painterly look.
While many excellent painterly filtering techniques have
been developed for generating brushstroke based
paintings[11], relative few publications can be found on
converting a source image into line stroke based drawings.
In case of drawing, geometric information such as the
outline of regions, the direction and shape of strokes

Input image

Output image
Figure 1 Result of existing LIC pencil filter

This paper proposes an extension to the original LIC
pencil filter. With the original LIC pencil filter, the source
image is first segmented into different regions. Then for
each region, if it contains directional textures, the texture

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

directions are used as the stroke directions, otherwise a
randomly chosen stroke direction is assigned. We will
refer to this method region based technique here after.
With the region based technique, the quality of the
resulting image depends largely on the result of image
segmentation. Unfortunately, despite of the long history of
image recognition technology, it is still difficult to find a
good segmentation algorithm which can always produce
regions which are consistent with the regions perceived by
human eyes. Therefore the existing LIC pencil filter may
fail to generate ideal results for those images where
segmentation result is critical in representing the scene.
Figure 2 shows an example of such failure caused by the
unnecessary segmentation of the face area into small
regions. To solve this problem, we propose in this paper to
avoid the explicit region segmentation. Instead, we divide
a source image into layers of intensity range, and define a
stroke direction for each layer. Such intensity layer based
technique is actually well used in real pencil drawing
where artists usually render a target tone by successively
adding layers of strokes. Our experiments show that the
new layer based technique is particularly useful for those
source images consisting of regions with continuous
intensity distributions.

Source image

Output image

hardness of pencil, the pressure applied to a pencil, and
the orientations of strokes. Recently, Sousa and Buchanan
developed several pencil drawing rendering techniques
based on an observation model of pencil drawings[9,10].
They built the models of pencil, paper and how lead
pencils interact with drawing paper through a careful
investigation of the real pencil drawings using scanning
electron microscope. When the parameters of those
models and the strokes are specified, a 2D image can be
converted into a pencil drawing[9]. 3D polygon models
can be automatically rendered into pencil drawings by
referring to the tone value lookup table for the parameter
values of the models[10]. Takagi and Fujishiro proposed
to model the paper micro-structure and color pigment
distribution as 3D volume data and use volume ray-tracing
for rendering color pencil drawings[8]. Other existing
painterly image generation techniques closely related with
our work are probably those successful work on pen–andink illustrations[4-7]. In their interactive systems, penand-ink illustrations can be generated either from 3D
models[6] or 2D images[7] by using a set of pre-stored
stroke textures. The largest difference between our
technique and all these existing techniques is that our
technique can generate a pencil drawing from a source
image in a completely automatic way while all these
existing techniques rely, to certain extent, on user
interventions, for specifying the attributes and directions
of strokes. Several commercial packages provide some
filters for creating pencil drawing effects. For example,
Jasc Paint Shop Pro£ software supports a black pencil
filter. However, to obtain a satisfactory result with those
filters, a user usually needs to combine the effects of many
other filters and explore the best generation process
experimentally through trial and error for many times.

Figure 2 Result of existing LIC pencil filter

The remainder of this paper is organized as the follows:
Section 2 gives the background of our research. Section
2.1 is a short survey on related work. Section 2.2
introduces the original LIC pencil filter. Section 3 presents
the algorithm of the new intensity layer based LIC pencil
filter and Section 4 describes how to automatically divide
the source image into different intensity layers. Section 5
concludes the paper.

2.Background
2.1Related work
Pencil drawing has been an important topic since the
beginning of painterly image generation research history.
In an early 2D painting system called PencilSketch[13], a
mouse based virtual tablet is provided for allowing users
to interactively specify a set of parameters, such as the

2.2 LIC pencil filter
Line Integral Convolution (LIC) is a texture based vector
field visualization technique[14]. It takes a 2D vector field
and a white noise image as the input, and generates an
image which has been smeared out in the direction of the
vector field through the convolution of the white noise and
the low-pass filter kernels defined on the local streamline
of the vector filed. The idea of using LIC for pencil
drawing generation was inspired by the visual similarity of
LIC images and pencil drawings. As an LIC image is
obtained by low-pass filtering a white noise along the
local streamlines of a vector field, we can observe the
traces of streamlines along which intensity varies
randomly. Such traces have a similar appearance of pencil
strokes where the variance of intensity is caused by the
interaction of lead material and the roughness of paper
surface. Figure 3 depicts the algorithm of original LIC
pencil filter. It converts a 2D source image into a pencil
drawing in the following seven steps[12]:

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

(a)
(c)

(b)
(e)
(d)

(f)

the source image into different regions and each region is
assigned with a unique and randomly chosen stroke
direction. At Step 4, a Fourier analysis technique is
employed to extract the directions of texture at each
pixel[16]. If the pixel is not a part of a directional texture,
then the stroke direction assigned to the region containing
the pixel is used as the stroke direction at the pixel. Such
approach is based on the consideration that a well used
technique in real pencil drawing for conveying the 3D
shapes of objects and spatial relationship among different
objects is to emphasize the boundary between different
regions by changing the appearance of strokes for
different regions. As we mentioned in Section 1, however,
this previous approach fails to produce ideal result due to
the limitation of current automatic image segmentation
technique.

3. Intensity layer based LIC pencil filter
(g)

(h)

(i)
Figure 3 Algorithm of LIC pencil filter

1.
2.
3.
4.
5.
6.
7.

Generate a white noise(Figure 3(b)) from the source
image(Figure 3(a)).
Segment the input image(Figure 3(a)) into different
regions(Figure 3(c)).
Extract region boundary(Figure 3(d)).
Generate the vector field (Figure 3(e)) representing
the orientation of strokes.
Generate stroke image (Figure 3(f)) by applying LIC
to the white noise(Figure 3(b)) and the vector
field(Figure 3(e)).
Add the boundary (Figure 3(d)) to obtain the drawing
with outlines(Figure 3(g)).
Composite the resulting image (Figure 3(g)) with the
paper sample (Figure 3(h)) to obtain the finished
pencil drawing(Figure 3(i)).

We can easily change the appearance of the pencil
drawing through adjusting some parameters of LIC. For
example, varying the length of the line integral
convolution kernel visually changes the length of strokes
and adjusting the granularity of white noise changes the
width of strokes. To match the tone between the source
image and the resulting pencil drawing, the white noise
image is generated in a way that the probability a white
value is set for a pixel is proportional to the intensity level
of the corresponding pixel in the source image. At step 2,
a texture based segmentation technique is used to segment

In this paper, we propose a new technique which avoids
using image segmentation, but divides the source image
into different intensity layers. We generate stroke image
for each intensity layer and then add them together to
obtain the final pencil drawing. As shown in Figure 4, the
new layer based LIC pencil filter converts a source image
into a pencil drawing in the following 5 steps:
1.

Divide the source image into different intensity layers.
In real pencil drawing, artists usually use quantized
levels of tones instead of continuous one to make the
resulting drawing more illustrative and expressive. To
simulate such effect, we select the average intensity of
each layer as the representative intensity value for the
layer, and convert each layer into a binary image by
change all non white pixel into the representative
value(Figure 4(b)(c)(d)). .

2.

For all layers except for the darkest layer, generate
their stroke images with LIC pencil filter. We use one
stroke direction for each layer(Figure 4(e)). By
varying the stroke direction for different layers, we
can achieve cross-hatching effect.

3.

Since the darkest layer is usually most important for
representing the texture as well as the shape of an
object, we use the same method as in the original LIC
pencil filter for defining the stroke direction for this
layer. In other words, we first detect texture direction.
If texture direction is detected, then it is used as the
stroke direction. Otherwise a given direction is used
for the whole layer. Also we use a mask image
obtained by binarizing the intensity value of the layer
to clip the resulting stroke image so as to obtain
regions of sharp boundaries (Figure 4(f)).

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

4.

Extract outlines by applying edge detection algorithm
to the source image. Since all strokes on a layer are in
the same direction, outlines become more important
in depicting the structure of a scene. We enhance the
detected edges image by darken those pixels whose
values exceed a given threshold(Figure 4(g)).

5.

Add all layers together and adjust the resulting image
with the paper model to obtain the final pencil
drawing( Figure 5(h)).

5 shows another result generated with the enhanced LIC
pencil filter.

(a) Source image

(a)

(g)

(b)

(c)

(d)

(b) Result
Figure 5 Result of enhanced LIC pencil Filter
(e)

(f)

4. Automatic layer subdivision

(h)
Figure 4 Algorithm of intensity layer based
LIC pencil filter

Comparing Figure 4(h) and Figure 2(b), we can find
that the new layer based technique can produce better
result than the original region based technique. In this
example, the source image is divided into three layers:
white, gray and dark. Strokes are oriented to have an angle
of 60q from X-axis on the gray layer. On the dark layer,
strokes are oriented in the direction of hair texture. Figure

To achieve realistic pencil drawing effect with our new
layer based technique, the intensity layers should be
consistent with the layers perceived by human eyes. An
ideal layer subdivision usually corresponds to a clustering
of pixels, with lowest intensity deviation or continuous
intensity distribution within each cluster, and large
deviation or abrupt intensity change among different
clusters. Although it might be possible to employ some
classic image clustering technique, we propose an intuitive
method to obtain such a layer subdivision automatically.
Our algorithm starts with sorting the pixels of the source
image according to their intensity values. Then as shown
in Figure 6(b), we generate a 2D graph with X axis
representing pixels in increasing order of intensity value
and Y axis representing intensity values of the pixels. We
call this graph intensity distribution graph. Obviously the
pixels within an interval of constant gradient on the
intensity distribution graph should belong to the same
layer. Therefore we find all positions on the intensity
distribution graph where gradient changes abruptly, and
use the intensity values there as the thresholds to divide

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

source image into different layers. To find these positions,
we keep comparing the gradient at adjacent pixels on the
intensity distribution graph. If the difference of gradient at
two adjacent pixels exceeds a user given threshold, then
the position is selected. In our current implementation, we
only support three layers. If more than two positions are
selected, we will only choose the two with most abrupt
gradient change. On the other hand, if less than two
positions are selected, we lower the threshold to have
more candidates. Figure 6 uses an example to depict our
automatic layer subdivision method. Figure 6(a) is the
source image, Figure 6(b) is its intensity distribution graph
and it is automatically divided into three parts of relative

constant gradient. These three parts correspond to the
three layers in pencil drawing generation. Figure 6(c)
shows the image with the three automatically subdivided
intensity layers and the resulting pencil drawing. For
comparison, Figure 6(d) shows the result of dividing
intensity range equally into three parts. Obviously the
proposed method produces more natural results where the
bright layer approximately correspond to the back ground,
and the other two layers correspond to subjects.

Y

white

Pixel value

gray

dark

X
(a) Source image

(b) Intensity distribution graph of the input image and
automatic intensity layer subdivision

(c) Result of automatic layer subdivision

(d) Result of dividing intensity range equally
into three parts.

Figure 6 Intensity layer subdivision

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

6. Conclusions
We presented an extension to the existing LIC based
pencil filter. The new intensity layer based LIC pencil
filter has been implemented as a windows application
using Visual C++ programming language. The new
algorithm is also much faster than the existing one. The
existing LIC pencil filter took about 10 minutes to
generate an image of size 516 *516 on a Pentium III PC
and the image segmentation was the most time consuming
part of the algorithm. By avoiding image segmentation,
the enhanced LIC pencil filter can generate an image of
the same size in about 20 seconds. The major future
research directions include the extension of the technique
for converting video clips into animations with pencil
drawing effect, extension to colored pencil drawing and
application to non-photorealistic rendering of 3D models
and scenes.

References
[1]

[2]

[3]

[4]

[5]

A. Hertzmann, “Painterly Rendering with Curved Brush
Strokes of Multiple Sizes”, SIGGRAPH 98 conference
proceedings, pages 453–460, 1998.
P. Litwinowicz, “Processing Images and Video for An
Impressionist
Effect”,
SIGGRAPH97
conference
proceedings, pp.407-414, 1997.
C. J. Curtis, S. E. Anderson, J. E. Seims, Kurt W. Fleischer,
and David H. Salesin, “Computer-Generated Watercolor”,
SIGGRAPH 97 conference proceedings, pages 421–430,
1997.
G. Winkerbach, D. H. Salesin, “Computer-Generated Penand-Ink
Illustration”,
SIGGRAPH94
conference
proceedings, pages 91-100, 1994.
M.l P. Salisbury, S. E. Anderson, R. Barzel, and D. H.
Salesin,
“Interactive
Pen–And–Ink
Illustration”,
SIGGRAPH 94 conference proceedings, pages 101–108,
1994.

[6]

[7]

[8]

[9]

[10]

[11]
[12]

[13]

[14]

[15]
[16]

G. Winkenbach and D. H, Salesin, “Rendering Parametric
Surfaces in Pen and Ink”, SIGGRAPH96 conference
proceedings, pages 469–476, 1996.
M. P. Salisbury, M. T. Wong, J. F. Hughes, and D. H.
Salesin, “Orientable Textures for Image-Based Pen-andInk Illustration”, SIGGRAPH 97 Conference Proceedings,
pages 401–406, 1997.
S. Takagi, I. Fujishiro and M. Nakajima, “Volumetric
modeling of colored pencil drawing,” Pacific Graphics '99
conference proceedings, page 250-258, 1999.
M.C.Sousa and J.W.Buchanan, “Observational Model of
Blenders and Erasers in Computer-Generated Pencil
Rendering”, Graphics Interface '99 conference
proceedings, pages 157-166, 1999.
M.C.Sousa and J.W.Buchanan, “Computer-Generated
Graphite Pencil Rendering of 3D Polygonal Models”,
EUROGRAPHICS '99 conference proceedings, pages 195207, 1999.
Gooch & Gooch, Non-Photorealistic Rendering, AK
Peters Ltd, 2001,
X. Mao, Y. Nagasaka and A. Imamiya", Automatic
Generation of Pencil Drawing from 2D Images Using Line
Integral Convolution", Proceedings of the Senventh
International Conference on Computer Aided Design and
Computer Graphics CAD/GRAPHICS2001, PP. 240-248,
2001.
A. H. Vermeulen and P. P. Tanner, “PenchilSketch̆A
Pencil-Based Paint System”, Graphics Interface '89
conference proceedings, pages 138-143 , 1989.
B. Cabral and C. Leedom, “Imaging Vector Field Using
Line Integral Convolution”, SIGGRAPH93 conference
Proceeding, pages 263-270, 1993.
A.L. Guptill, “Rendering in pencil”, Watson-Guptill
Publications Inc., New York, 1977.
H. Tamura Edited, “Introduction to Computer Image
Processing (In Japanese)”, Soken Shuppan Publisher Inc.
1984, ISBN4-7952-6304-3.

.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

