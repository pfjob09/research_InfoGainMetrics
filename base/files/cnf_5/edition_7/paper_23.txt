Generating G1 Fonts Using Cubic Ball Functions With Weight
A. R. M. Piah, P. C. Chew
School of Mathematical Sciences
Universiti Sains Malaysia
11800 USM Pulau Pinang MALAYSIA
arahni@cs.usm.my
Abstract
This paper explores the construction method proposed by
Said [9], using basis functions which are derived from
basis functions of Bezier and Ball. This method reduces to
Bezier and Ball respectively by choosing suitable
parameters (weight) for the Said case. The properties of
the generated curves will be given in order to construct
fonts which satisfy tangent plane continuity. Constructed
curves and fonts using suitable weight will be displayed.
Keywords: control points, control polygons, convex hull,
normalised, geometric continuity

1. Introduction
Said [9] introduced blending functions which in this paper
for simplicity, will be known as Bezier-Ball basis
functions to control the shape of a cubic curve. This paper
will focus only on the role of the weights and control
points (or similarly polygons) of these basis functions in
order to generate fonts which satisfy geometric continuity
of order one at common control points.

2. Review on the Bezier, Ball and BezierBall cubic curves
Given a system of basis functions {f0, f1, . . ., fn}
which is defined on a compact interval, say [a, b], and
points p0, p1, . . ., pn ± ¥s for some positive integer s  2, a
curve p is defined by:
n
p (t ) ¦ p i f i (t ) .
(1)
i 0
The points p0, p1, . . ., pn are called the control points of p
and the polygon formed from these points is called the
control polygon of p [5, 6]. In computer-aided geometric
design (CAGD), the system is usually nonnegative and
normalized (i.e. these basis functions are usually
nonnegative and satisfy the partition of unity property,

n
¦ f i (t ) 1  t ± [a, b]) and we say that {f0, f1, . . ., fn}
i 0
is a blending system. The so-called convex hull property
holds if and only if {f0, f1, . . ., fn} is a blending system.
The convex hull property is an important property for
curve design; for any control polygon, the curve always
lies in the convex hull of the control polygon.
Bezier began with the principle that any point on a
curve segment must be given by a parametric function of
the following form:
n
p ( t ) ¦ p i f i (t ) ,
(2)
i 0
where t  [0,1] and vectors pi represent the n + 1 vertices
(control points) of a characteristic polygon. fi are
Bernstein polynomials as the basis functions with the
following properties : interpolate the first and last vertex
(control) points (i.e. start on p0 and end on pn), tangent at
p0 is given by p1 – p0, and tangent at pn by pn – pn-1 and
the functions fi are symmetrical with respect to t and 1 – t
[7]. For four points (n = 3), cubic Bezier curve with
control points pi, i = 0, .. , 3 is represented by
p(t) = (1 – t )3p0 + 3t(1 – t)2p1 + 3t2(1 – t)p2 + t3p3 . (3)
Ball [2, 3, 4] introduced a system of cubic basis
functions {1 – t2, 2t(1 – t)2, 2t2(1 – t), t2} to replace fi in
(2) in order to produce the so-called Ball cubic curve. If
the Ball basis functions are generalised using weights,
say, D and E as in Said [9] where
f0(t) = (1 – t)2(1 + t(2 - D)), f1(t) = D (1 – t)2t, f2(t) = E(1 –
t)t2 and f3(t) = t2(1 + (1 – t)(2 - E)), we will obtain cubic
curve which for simplicity, will just be called the BezierBall curve.

3. Properties of cubic Bezier-Ball basis
functions
Similar to Bernstein basis functions, the partition of
unity property of Bezier-Ball basis functions namely,
n
¦ f i (t ) 1 , will lead to the convex hull property of the
i 0
generated curve. Since this property requires the positivity
of its basis functions, it is obvious that the Bezier-Ball

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

cubic curves will be inside the convex hull of the polygon
when 0  D, E  3 [9]. Bezier-Ball curve also interpolates
its end control points. Finally, it can easily be shown that
the Bezier-Ball basis functions are symmetrical with
respect to t and 1 – t, i.e. fi(t) = f3-i(1 – t), when D = E.

4. Bezier-Ball cubic curves
Beside the four control points pi, i = 0, .. , 3, a cubic
Bezier-Ball curve is also controlled by the free
parameters, D and E. The chosen values of D and E affect
the shape of the corresponding generated curve (refer to
Figures 1 – 6). Geometrically, it can be interpreted as
fullness factor (when D/E = 1) or bias (when D/E  1) [1,
10]. When D = E = 3, we will obtain a cubic Bezier curve
(see Figure 1). Cubic Ball curve is obtained when D = E =
2 (see Figure 3). Other type of curves can be formed by
changing the values of D and E, for instance Timmer cubic
curve is obtained when D = E = 4 (see Figures 2 and 4)
[9].

Figure 1. Chinese character “ren” using D = E = 3
(Bezier) and its control polygons

5. Geometric continuity for cubic BezierBall curves
We are interested in constructing parametrically
defined curves, i.e. functions of the form r : [a, b]  ¥s,
where s = 2 or 3. This raises the question of how to join
together, in our case, two piecewise polynomials on
consecutive intervals to produce a curve that looks
smooth. Let us consider two Bezier-Ball curves,
­p(t ), 0 d t d 1
r(t) = ®
¯q(t ), 0 d t d 1
where p and q of the form (2) and the control points of p
are p0, p1, p2 and p3 while q0, q1, q2 and q3 are controls
points of q. Usually we want p(1) = q(0) which is
satisfied by p3 = q0, being the common control point to
both p and q. We also want no sharp corners on the curve,
i.e. we want the unit tangent vector to be continous. If
r c(t) z 0,  t (which we shall always assume), this is
equivalent to q c(0) O p c(1) where
O

q c(0)
p c(1)

Figure 2. Arabic letter “ain” using D = E = 4
(Timmer) and its control polygons

! 0.

We say that a curve has geometric continuity of order 1 or
G1 if it is continous and has continous unit tangent vector.
For the case of Bezier-Ball curve (just as in the case of
Bezier or Ball), it is sufficient to require that the four
adjacent control points p2, p3 = q0, and q1 to be collinear
[9].
Figure 3. “S” using D = E = 2 (Ball)

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

Figure 4. “S” using D = E = 4
(Timmer)

Figure 6. “S” using D = 3, E = 2

Conclusion

1

6. Generating G Fonts
Convex hull, end points interpolation and
symmetrical properties dicussed in Section 3 as well as
the G1 continuity conditions in Section 5 enable us to
generate various font designs such as letters or numbers
using cubic Bezier-Ball curves. The Chinese character
“ren” in Figure 1 is generated using D = E = 3. The letter
“S” in Figures 3 to 6 are obtained by changing the
corresponding values of D and E [8]. Mathematica version
5.0 was used to generate all the Figures in this paper.
Figures 7 to 11 display the generated fonts which satisfy
geometric continuity of order 1, G1 described in Section 5.

Figure 5. “S” using D = 1, E = 3

In this paper, we have used the construction proposed
by Said [9] which was based on the construction of Bezier
and Ball schemes to generate fonts which satisfy
geometric continuity of order 1. The parameters
introduced by this new construction scheme have
provided greater flexibility to interested designers. Further
works can be extended to generating fonts which satisfy
curvature and torsion continuity.

Figure 7. “S” satisfies G1 continuity with control
polygons

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

0.
0 .5
0 .2 5
0

1
75

0
1
2
3
4

6

4

2

0

Figure 8. G1 Arabic letter “ain”

Figure 11. G1 surface “S”

Acknowledgements
The authors would like to extend our gratitude to
Universiti Sains Malaysia for supporting this work under
its Fundamental Research Grant Account No.
203/PMATHS/670055. The authors also wish to thank
Ms. S. F. Chong and S. F. Lim for generating Figure 11.

References
[1] Ali, J. M. (1995), An Alternative Derivation of Said Basis
Functions, Sains Malaysiana 24 (4) : 47 – 50.

Figure 9. G1 number “2”

[2] Ball, A. A. (1974), CONSURF I. Computer Aided Design,
6 : 245 – 249.
[3] ________ (1975), CONSURF II. Computer Aided Design,
7 : 237 – 242.
[4] ________ (1977), CONSURF III. Computer Aided Design,
9 : 9 – 12.
[5] Farin, G. (1996), Curves and Surfaces for Computer Aided
Geometric Design (4th edition), San Diego, Academic
Press.
[6] Hoschek, J. and Lasser, D. (1993), Fundamentals of
Computer Aided Geometric Design, Wellesley, A K Peters.
[7] Mortenson, M. E. (1997). Geometric Modelling. New York,
USA : John Wiley & Sons, Inc.

Figure 10. G1 Chinese character “ren”

[8] Piah, A. R. M. (2003), Weight factor of Ball-Bezier
functions in generating fonts (in Malay), In Proceedings

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

of the Eleventh National Symposium on Mathematical
Sciences (Amran Ahmed et. al, editors), 248 – 251.
[9] Said, H. B. (1990). Bezier-Ball Type Cubic Curves and
Surfaces. Sains Malaysiana, 19 (4) : 85-95.
[10] Yeap, T. H. (2001). Swept Surfaces and Solids (in Malay).
Master’s thesis, Universiti Sains Malaysia.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualization (CGIV’04)
0-7695-2178-9/04 $20.00 © 2004 IEEE

