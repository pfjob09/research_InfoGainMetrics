2009 Sixth International Conference on Computer Graphics, Imaging and Visualization

A Framework on the Applications of Interactive Art
Teeragit Nasaree Hare, Natasha Dejdumrong
Department of Computer Engineering
King Mongkut’s University of Technology Thonburi
Bangkok,10140, Thailand
Email: t@kmutt.net, natasha@cpe.kmutt.ac.th

through a variety of inspirational pools which have seen the
development of methods for creating interactive art. One
such tool is Processing [1], an open-source language easy
enough to understand for visual artists to code interactivity
into art. This stimulating language, which has inspired
much of this work, will be discussed in the following
section after we deﬁne the concept of Interactive art.

Abstract—With the fusion in the world of art and science,
technology has made a dent in the course of art, and there
is now a time and place for those actively interested in both
the academics of art and science like never before. Interactive
art is one of the current trends that can be seen from this
group of creative minds. The incorporation of code into forms
of visual art helps create a dialogue between the artwork and
the audience. We describe the use of the Processing coding
toolkit along with other methods for digital artists to create
innovative interactive artworks. By furthering the application
of this intriguing art form, we can surely gain beneﬁts in a
wide range of ﬁelds, such as promotional purposes or any way
in creatively expressing a ﬁgure.

Interactive art is explained to be an art installation in
which the spectator is involved by, but not limited to,
walking-in, on, or around the installation. To gain this
interaction, a vast range of sensors is used for input and a
variety of devices for output. The installation is totally up
to the creativity of the artist but must be able to interact
with the observer in terms of creating a dialogue between
the observer and the artwork. Most Internet and electronic
art are clear examples of art that is highly interactive.

Keywords-Interactive Art, Computer Vision, Curves, Particles, Promotional Applications

I. I NTRODUCTION
The sense of motion which reﬂects vivid life within a
masterpiece tends to come from the renderer’s sheer talent.
To complicate the situation, the renderer or artist may
seek more than just to project an emotion of life onto the
canvas, but to add a completely new dimension in which
true interactivity can be found. Interactivity in which a still
painting in the shadow, animates at the mere hint of light.
In particular, the portrayed object may seem to jump free
from it’s constraining bounds of the frame.

An example that illustrates these tenets of interactive
art is the NextFest Grass Wall by the Barbarian Group [2]
in Fig. 1; a massive video wall depicting a ﬁeld of tall grass
which is generated through code. A single stem of grass
is coded to react to the motion of the audience in such a
way the grass seams to wave as the observer passes by. To
give the grass waves a more realistic effect, Perlin noise [3]
is used; random values that ﬂuctuate in a smooth motion
similar to patterns found in nature. Apart from the code,
the installation works by capturing video of the audience
and detecting spots in which motion had occurred to pass
to the variables in the grass stems that are generated and
projected onto the video wall.

By bringing code into the equation, the problem may
be looked upon from a whole new perspective. In code,
the art process is reinvented just like good art should be.
Differing from the use of paint, we are now looking at a
masterpiece generated from code. Code that is manipulated
in a way that select variables are used to add a sense of
interactivity, a contribution between the artist’s desire and
the pleasure of the observers.

The above installation shown in Fig. 2 is a good example
of the intriguing aspects of Interactive art which can be
conﬁgured and complicated to a more complex level in a
vast range of applications discussed later.

II. I NTERACTIVE A RT
With current art trends, it may seem hard to avoid the
term ’interactive’. That said, not much of the thin line
between the world of art and science may be left with
contemporary artists adapting methods of science into works
of art. Art like the world itself is continually changing
to whatever artists may see help beneﬁt in expressing a
masterpiece. And with a global network connecting artists
from all sides of the planet, creativity has propagated
978-0-7695-3789-4/09 $25.00 © 2009 IEEE
DOI 10.1109/CGIV.2009.77

Another example of a more common form of Interactive
art is Fig. 3, sound visualization such as that found in
most music management software [4]. The visualizations
use code to generate graphics in which their variables are
affected by the amplitude of different frequencies found in
the current sound sample.
83

Figure 1.

The NextFest Grass Wall Installation (left) and its setup (right)

Figure 2.

Figure 3.

The way the Grass Wall interacts with its spectators

The sound visualization, Magnetoshpere; captured from iTunes

III. T HE P ROCESSING L ANGUAGE

graphics. As a tool in fulﬁlling creativity, it has gained
popularity with students, artists, designers, and researchers
in expanding capabilities in education, development, and
deployment [5].

Ideas and emotions that maybe found hard to express
via more traditional forms of art may ﬁnd a way out via
code. This is an important factor of Interactive art different
from other forms of media, such as ﬁlm, photography, or
illustration. Looking back we may notice that pastel colors,
cameras, and ﬁlm all have helped make an impression in the
history of art and have presented many new possibilities.
Even though we may not truly say technology has reinvented
art, it has given us many new possibilities and forms of
media to work and express our individuality. This is due
to the uniqueness of the code that has helped create vivid
forms of art in portraying behaviors in nature together with
text, images, and sound. Processing [1] is a toolkit that
brings programming to Interactive art. Processing was built
to simplify the coding process towards generating computer

Processing is a computer language that was speciﬁcally
designed for the creation and manipulation of images with
speed and resolution. For the beginner, the learning step
was designed to be fast and simple, and let the user get
into their work swiftly. For the more advanced user, the
language was designed to be expandable with new plugins
for advanced interaction and generation of art, and answer
the needs of the artist.
That said, Processing responds to the education on
computer graphics, interaction, image processing, color

84

camera.

manipulation, keyboard and mouse events, networking,
and object-oriented programming. Whereas additional
libraries help expand the capabilities of the language into
alternative ﬁelds such as sound, data, and multiple ﬁle types.

Shown in Fig. 4 is the difference in color between
the current and past frame. Areas in which show different
color between frame cause the difference effect and are
used to determine motion in the area. The amount of
past frames used to compare to the current frame sets the
sensitivity of the motion detection.

The use of Processing is based on Java, which helps
users already familiar with the language jump in, and
start creating captivating visual designs. The uniqueness of
the language is its ability to program graphics in a more
simple form; helping the user code for drawing, motion,
and responding to the environment with ease. Moreover,
the code created is portable over a vast amount of media
and has the ability to interact with sound, motion, and
electronic devices.

Differing from the human eye, computers still don’t
have the capability in making out objects they see through
video images especially in an uncontrolled environment.
This is due to most algorithms being designed to work
with a speciﬁc predeﬁned environment. If the presumption
is to change, the calculated data shall be error-some and
inaccurate. This is why it is important for the coder to keep
in mind the environment they are designing for.

IV. C OMPUTER V ISION
Despite broad research into the ﬁeld of computer vision,
there is not yet an answer for enabling the computer to
reliably detect the type of object within an image. But from
foregoing study there are a few techniques that have proved
to be simple yet effective [5]. The technique we will be
using has gained popularity in the art ﬁeld for detecting
motion within a video frame from a stationary camera.

Algorithms in computer vision are gaining popularity
in Interactive art and other forms of computer generated
art. Hence there is a vast variety of methods in identifying
people, places, gestures, facial expressions, eye contact,
and other advance recognitions. However, they tend to
require advanced code and equipment; even so, there is a
range of open-source libraries that can cater for the needs
of digital artists. The designer should simply pay careful
attention to the video quality and environment to ease the
detection process, giving us sufﬁcient quality close to that
of advanced devices.

To ﬁrst present the problem of computer vision we
must understand that video ﬁles come in massive arrays of
streaming data. But none of this data has any information
to what is in the frame; we may say it does not contain any
meta data. This is on the contrary to text data which the
computer can access, manipulate, and understand at some
level. Given this long string of video data, the computer has
completely no way of knowing for sure what can be found
within that particular video frame, whether its a person or
an object, or a day shot or a night shot, etc.

V. D ESIGN
Together with the use of Processing and additional
libraries, Interactive art can be designed with ease. To assist
in the process of computer vision, the JMyron [6] library,
which is a free library to provide high quality computer
vision functionality for artists, has been selected. JMyron
extends the capabilities of Processing towards motion
detection, color tracking, and glob distinction. Motion
detection via the difference image will help us determine
motion for use in the example design.

Simple techniques or methods in computer vision that
have found their way into the Interactive art world are to
determine the pixels within the frame in which an event
has occurred, whether that event is due to the difference
between frame used to determine motion, the difference
from the background image to determine presence, or the
brightness above threshold for further application. These
methods are used vastly throughout interactive installations.

To get started, we call the differenceImage() method which
returns a pixel array in the form of pixels[y ∗ width + x].
The value of a speciﬁc pixel indicates the amount of
motion; that is, the difference in color between the current
and past frames as explained earlier.

The motion within a video can be determined by the
difference between the current and past frame. This method
compares each and every pixel in the current frame to
that of the corresponding pixel in the past frame, in which
pixels that have different colors depict motion occurring
in that pixel. It is up to the user to extend this technique
into spanning across multiple frames for a more accurate
detection of motion, or using only a select area of pixels
for detection. However this method will only ﬁnd itself
accurate in a controlled environment using a stationary

A straightforward but interesting work of art can be
generated from this pixel array by assigning random objects
in a grid across the screen. Setting the size of each object
to the motion value at that corresponding point achieves the
artwork found in Fig. 5. Manipulating the code further and
creatively can be by randomizing each object at a certain
motion value or assigning different objects at different

85

Figure 4.

The difference image computed from the JMyron library in Processing

motion values. From here we grasp a better understanding
of the difference image, for use in a more advanced work
of art, the key artwork of this paper.

general curvature. Like in Fig. 8 an envelope stroke had
been drawn, followed by multiple curves, then masked, and
ﬁnally reﬁned with hairline curves.

By drawing random curves that their control points react to
the difference image such as in curveVertex(x[i], y[i] + d[i])
adding a slight bit of transparency we achieve the images
found in Fig. 6. In which d[i] is the difference image at the
corresponding control point manipulated from

Particles are graphical objects which store randomly
generated attributes changed each time redrawn. These
attributes or variables are that of the current screen position,
the velocity in different directions, and the affect of the
difference image toward these variables. To give the work of
art more detail and interactivity, adding particles generated
at high values of motion like in Fig. 9 create digital water
splashes giving the masterpiece a true sense of electronic
aqua.

d[i] = (d[i]+diﬀerenceImage[i]∗sensitivity)∗decline. (1)
This adds interactivity, that is, the difference image
into the current curve point while decreasing the total
value. These random points can then be shifted while being
regenerated at an edge to give the effect of a stream of water.

VI. A PPLICATIONS
With gaining popularity in Interactive art, interactive designers are often commissioned for the design of interactive
installations on building facades, foyers, museums, airports,
and a number of public places. These installations are
joint creations between designers, artists, architects, and
technicians. But beyond these frequent creators, people of
different and interesting professions are involved in creating
interactive installations in speciﬁc areas. This is due to the
fact that people love art, and representing a fact or ﬁgure
through art is truly a stylish yet effective way in getting the
message across. By applying the techniques given here and
from further research, interactive art can be used in a variety
of applications much more than of today.

The generated values of these random points come
from the noise(i+=random(0.01)) method which returns
a random value through Perlin noise referencing the
passed attributes. Because in generating a Perlin noise [3]
value, a reference number or the attribute is required to
control the ﬂuctuation. That is, if the reference number
increases fast, the returned values will ﬂuctuate rapidly,
and vise versa. A 0.005 increase has been tested and
found to produce a rather smooth ﬂuctuation, but for
the multiple curves not to overlap completely, a random
increment not more than 0.01 is used, making the curves
differ from each other while still maintaining a natural form.

A. Promotional Purposes
The curve-like artwork created in the above section
closely resembles the artwork associated with a highly
popular brand of soda. If the marketing agencies were to
adopt a similar artwork approach in a public place, this
would surely help gain public recognition and interest; the
reason why interactive installations are so popular among
museums is their power in captivating the audience.

The random curves can then be modiﬁed for a more
advanced effect like found in Fig. 7 which its curves have
been created with only a few solid colors for the curves
to merge, creating intriguing sharp edges at merge points.
Layers of curve strokes and masks have also been used to
create the effect. Masks are made by ﬁlling the inverted
area of the curves while curves which their control points
extend beyond the boundaries of the mask get cut off
creating the sharp ends. Masks with a ﬁll colors differing
from that of the background are used to create envelope
strokes containing the other curves.

Today artwork is used in promoting many products.
By incorporating interactivity into these art installations, the
product should be able to gain much more interest within
the trendy and fashionable demographic of today.

To wrap this up, the created curves are masked by a
slightly thicker curve cutting off curves at the edge for the
same and overall effect. Hairline curves have been added
above the mask for a thin and clean representation of the

B. Corporate Figures
Like exhibits found in museums, the use of art in explaining a fact greatly beneﬁts the understanding of a topic. If an
86

Figure 5.

Figure 6.

A grid of objects reacting to the difference image

Multiple curves with slight transparency also reacting to the difference image

Figure 7.

Multiple curves and masks to add sharp ends

Figure 8.

Steps in layering to create sharp ends

87

Figure 9.

Letting the creativity ﬂow with added particles

interactive art installation were to depict corporate ﬁnancial
ﬁgures or maybe simply its corporate mission, facts and
ﬁgures would surely ﬂy across and stand out in the minds
of the common man.

[3] Ken
Perlin,
Making
Noise
[Online],
Available:
http://www.noisemachine.com/talk1 [2009, January 31].
[4] Apple
iTunes
[Online],
Available:
http://www.apple.com/itunes/features/#musicplayback [2009,
January 31].

C. Creative Diagrams

[5] Casey Reas, Ben Fry, Processing, MIT Press, USA, 2007.

So the next time a scientiﬁc fact needs explaining, or a
graph needs to be drawn, if that information is the key topic
and a wide range of audience is the focus, try adding an interactive touch of art to the process. Because the importance
of art is much more beyond conventional application with
its appeal to many individuals, helping create a much closer
link of understanding and interest between the represented
fact and the audience.

[6] Myron (WebCamXtra) - Computer Vision & Wall
Connected
Motion
Tracking
[Online],
Available:
http://webcamxtra.sourceforge.net [2009, January 31].

C ONCLUSIONS
Interactive art has made its debut in art history and
is seeping into a vast number of professional categories.
With tools and technologies that ease the process of art
and a blurry line between individuals of art and science,
artwork has gone beyond the orthodox and incorporated new
measures, as good traditions should. Interactive art can now
be found in a majority of public places, but as we have
written, there are many other potential applications that can
also beneﬁt from this new art form. We believe that with the
simple methods and applications presented, incorporating
interactive art for promotional purposes, corporate ﬁgures,
and other creative ideas should be simple with effective
responses.
ACKNOWLEDGMENT
This work was supported by the laboratory of CAGD
and Animation (CADLAB), the department of computer
engineering, KMUTT.
R EFERENCES
[1] Processing 1.0 [Online], Available: http://www.processing.org
[2009, January 31].
[2] The Barbarian Group: Grass [Online], Available:
http://portfolio.barbariangroup.com/nextfest [2009, January
31].

88

