2009 Sixth International Conference on Computer Graphics, Imaging and Visualization

Skeletonization of Grayscale Volumes for Shape Description

1

Liang Ye1,2 , Jun Liu1 , Guihua Shan1 , and Xuebin Chi1
Supercomputing Center, Computer Network Information Center, CAS
2
Graduate University of Chinese Academy of Sciences
Beijing, China
{yehl, liujun, sgh, chi}@sccas.cn

curves and surfaces. Redundant surface and curve features
can be removed with a simple and efficient pruning routine.
Our method is demonstrated on biomedical data-sets.

Abstract—Skeletons as important shape features of an object are useful for shape description. Unfortunately, methods
obtaining skeletons of a grayscale volume are lacking due to no
clear boundary between object and background. In this paper,
we present a new segmentation-free skeletonization method
on grayscale volumes based on Marching Cubes, topological
thinning and a novel pruning routine. Our method is capable
of generating a family of skeletal curves and surfaces that lie
centered at rod-like and plate-like parts in the grayscale volume
for shape description. It is demonstrated on biomedical datasets.

II. R ELATED WORK
Solid models: A number of skeletonization methods on
solid models including topological thinning [8], distance
transforms [22], potential field [14], Voronoi diagrams [13]
have been proposed. For the purpose of identifying shape
features, Bonnassie et al. [2] differentiated skeletal curves
and surfaces by post-classifying skeleton voxels based on
their local neighborhood, while K´alm´an Pal´agyi et al. [8][9]
extracted skeletal curves and surfaces respectively without a
post-classification. Using a different connected relation, the
method of Ju et al. [21] can directly obtain both skeletal
curves and surfaces.
Grayscale volumes: In contrast, few works have addressed skeletonization of grayscale volumes especially unsegmented volumes. Segmentation techniques have been
used to build solid models of grayscale volumes [17], but
skeletons derived from these models may not align well
with the high density regions of the volume. Doklada et
al. [15] computed only skeletal curves by thinning on the
full grayscale volume with a grayscale threshold to remove
insignificant skeleton parts.
Based on the second-order tensor field of the grayscale
volume, methods [4][18] have been proposed to acquire
both skeletal curves and surfaces for flow anisotropy visualization. With the help of domain-specific knowledge, Z.
Yu et al. [23] obtained both skeletal curves and surfaces
for protein secondary structure identification. The method
of Abeysinghe et al. [1] relied on the same tensor field to
extract both accumulative skeletal curves and surfaces within
full range of gray values in the volume without domainspecific knowledge. Based on major processing procedures
in this method, our method uses a different thinning and
pruning process and computes the skeletons in an accumulative way.

Keywords-Grayscale Skeletonization; Thinning; Pruning

I. I NTRODUCTION
Skeletons that capture essential topology and shape features of an object in a simple form are extremely useful
in solving various problems such as character recognition
and animation, virtual navigation, 3D model matching and
retrieval, and biomedical image analysis.
For solid models, computing object’s skeletons is a typical
approach for identifying object’s rod-like and plate-like
shape features [5]. Unfortunately, the 3D data produced by
biomedical imaging techniques such as EM, CT and MRI
are usually in the form of a grayscale volume, which lacks
a clear boundary between the object and the background.
Although segmentation can be used to separate the object
from the background, the segmented object would assume
varying shapes depending on grayscale related thresholds or
stop conditions [3], and then the skeletons of the segmented
object may not capture intrinsic shape features.
In typical grayscale volumes, the gray values behave like
a density distribution. In this distribution, voxels within a
certain grayscale range usually belong to the same type of
subject and voxels with higher gray values are likely to
locate closer to the center of the imaged subject. In addition,
object structures, such as rod-like or plate-like parts, are
usually displayed by isosurface at a certain isovalue using
Marching Cubes algorithm or its variations [20] in a densitylike volume. Based on these observations, our method computes skeletons on density-like grayscale volumes.
Our method is capable of generating a family of skeletons
that lie centered at rod-like and plate-like parts in grayscale
volumes by three user-specified parameters, which determine
the isovalue of Marching Cubes and the size of skeletal
978-0-7695-3789-4/09 $25.00 © 2009 IEEE
DOI 10.1109/CGIV.2009.17

III. D IGITAL T OPOLOGY
Here we briefly review several basic concepts in digital
topology that are fundamental to topological thinning-based
skeletonization method.
337

(a)

(b)

(c)

(d)

X-ray scan of arteries of the right half of a human head (a). Isosurface with isovalue = 0.75; (b). Skeletons in the range [0.75,
1.0] with interval = 0.005; (c). Skeletons in the range [0.75, 0.9] with interval = 0.05; (d). Skeletons with d1 = 6, d2 = 10, the forth two
with d1 = 6, d2 = 4.
Figure 1.

(a)

preserving for 3D (26,6) pictures if all of the following
conditions hold [7][10]:
1. Only simple points are deleted.
2. If two object corners, p and q, of a unit lattice square
are deleted, then the set p, q is simple.
3. If three object corners, p, q, and r, of a unit lattice
square are deleted, then the set p, q, r is simple.
4. If four object corners, p, q, r, and s, of a unit lattice
square are deleted, then the set p, q, r, s is simple.
5. No object component contained in a unit lattice cube
can be deleted completely.

(b)

Three frequently used neighborhood sets (a). The set
N6 (p) contains points marked U, D, W, E, S, and N. The set N18 (p)
contains N6 (p) and points marked “ * ”. The set N26 (p) contains
N18 (p) and points marked “o”;
A template for surface-pruning (b). If surface-end point p matches
the template or its rotation and reflection, p can’t be deleted. Every
“·” is either an objet point or a background point, and every “•” is
an object point.
Figure 2.

B. Curve-end Point and Surface-end Point
Knowledge of curves and surfaces is critical as they are
the components of skeletons that carry shape features of
the object. To preserve such information during thinning, it
is important to avoid shrinking of these features. Here we
follow K´alm´an Pal´agyi and Attila Kuba’s definitions [8][9]:
Definition 3. An object point p is a curve-end point in a
3D (26, 6) picture if the set N26 (p,V) is singleton.
Definition 4. An object point p is a surface-end point in
a 3D (26, 6) picture if the set N6 (p,V ) contains at least one
opposite pair of points. (Note that each curve-end point is a
surface-end point.)

A. Simple Point
We consider a volumetric model as a uniform 3D (26,
6) digital picture consisting of object points/voxels V and
background points/voxels V [6]. For topology analysis, there
are three frequently used sets, N6 (p), N18 (p) and N26 (p),
each consisting of points (other than p) that share a common
grid edge, face or cell with p (see Fig. 2(a)). The set N6 (p)
is subdivided into three kinds of opposite pair of points
(U,D), (N,S), and (E,W). In addition, we denote Nk (p,V)
= Nk (p)∩V, for k = 6, 18, 26.
An object point is called simple point if its deletion does
not alter the topology of the picture [12]. We make use of
the following result for 3D (26, 6) pictures:
Theorem 1. Object point p is simple in 3D (26, 6) pictures
if and only if all of the following two conditions hold
[11][16]:
1. The set N26 (p,V) contains only one 26-component.
2. The set N6 (p,V ) is not empty and it is 6-connected in
the set N18 (p,V ).
Theorem 2. A 3D parallel reduction operation is topology

IV. T HE NEW METHOD
The new segmentation-free skeletonization method is
based on a kind of Marching Cubes algorithm and alternates
a skeleton-preserving topological thinning process and a
novel pruning process on grayscale volumes.
A. Isosurface Modulating
The Marching Cubes is the most popular isosurfacing
algorithm [20], and a rich body of literature has grown up
around it. Extracted isosurface can enable one or more phenomena or structures of interest in a data-set to be isolated
and rendered. We use the topology-guaranteed Marching
Cubes algorithm [19] and normalize the range of gray values
in a volume to [0, 1.0].

338

(a)

(b)

(c)

Cryo-EM volume of a HBV virus (a). Isosurface with isovalue = 0.75; (b). Skeletons in the range [0.75, 0.9] with interval =
0.05; (c). Skeletons with d1 = 4, d2 =4, the forth one with d1 = 1, d2 =2.
Figure 3.

the thinned surfaces and curves are in their geometrically
correct positions.

In the first stage of our method, in order to choose an
appropriate isovalue in [0, 1.0], the user modulates the
isosurface of the volume until it captures some kinds of userinterested object structures or components. Once an isovalue
is chosen, the minimum threshold is defined. The maximum
threshold is 1.0 by default.

(a)

//Thinning object V while preserving S
T hinm (V, S)
BEGIN
DO
V = delete UNW(V, S);
V = delete DSE(V , S);
V = delete UNE(V, S);
V = delete DSW(V , S);
V = delete USE(V, S);
V = delete DNW(V , S);
V = delete USW(V, S);
V = delete DNE(V , S);
WHILE no points are deleted;
RETURN V;
END.

(b)

Cryo-EM volume of a SARS virus (a). Isosurface with
isovalue = 0.2; (b). Skeletons in the range [0.2, 0.4] with interval
= 0.05, d2 =4;
Figure 4.

For the purpose of obtaining the skeletal surfaces and/or
curves that capture the intrinsic shape features of a grayscale
volume, our method accumulates them at each threshold
from maximum threshold to minimum threshold with an interval 0.005 by default. This accumulation approach ensures
that skeletons computed at lower thresholds are aligned with
skeletons at higher thresholds. Hence extracted skeletons
align well with high density regions, which are likely to
be centers of the object structures in the grayscale volume.

B. Topological Thinning
K´alm´an Pal´agyi and Attila Kuba [9] proposed a directional 3D thinning method using 8 sub-iterations that
can extract curve-skeleton and surface-skeleton respectively
from a solid model. Our topological surface-thinning and
curve-thinning routine is based upon their method, but in
order to obtain both skeletal surfaces and curves, surfacethinning must run before curve-thinning. This is because a
curve can be geometrically defined as a subset of a surface.
If performing curve skeletonization on a surface-like feature,
that feature will be incorrectly classified as a curve.
The pseudo-code of thinning is shown below. Program
T hinm (T hin1 as surface thinning, T hin2 as curve
thinning) takes an extra parameter S, which is a subset
of V that will be protected during thinning for the
whole skeletons accumulation process. Subroutines like
delete UNW delete simple but not end points from 8
directions. The deletion order shows a kind of symmetry so

C. Skeleton Pruning
Pruning is the process of removing redundant curve or
surface features from skeletons. Following the definitions of
curve-end point and surface-end point in Section III, we give
the pruning conditions.
For curve-pruning, all the curve-end points on short curve
branches and short isolated curves can be pruned. According
to user-specified parameter of curve-pruning, we iteratively
delete the curve-end points, but record the iteration-level of
every deleted curve-end points. This is an erosion process.

339

(a)

(b)

(c)

Cryo-EM volume of a translation initiation complex from Escherichia coli (a). Isosurface with isovalue = 0.31; (b). Skeletons
in the range [0.31, 0.6] with interval = 0.01, d1 = 6, d2 =4; (c). The ground-truth structure of this complex.
Figure 5.

(a)

// Pruning skeleton V with iteration number dm
P runem (V,dm )
BEGIN
S = V;
tmp dm = dm ;
WHILE tmp dm > 0
FOR all end points in S
IF end point p meet pruning condition
p is deletable;
p’s iteration level = tmp dm ;
tmp dm = tmp dm - 1;
S\{all deletable points};
tmp dm = 1;
WHILE tmp dm <= dm
FOR all end points in S
FOR all points in end point p’s N26 (p)
IF point q’s iteration level == tmp dm
q is a new skeleton point;
tmp dm = tmp dm + 1;
S∪{all new skeleton points};
RETURN S
END.

(b)

CT scan of a foot (a). Isosurface with isovalue = 0.35;
(b). Skeletons in the range [0.35, 0.8] with interval = 0.15, d1 = 1;
Figure 6.

Then starting from the remaining curve-end points, we do a
reverse-iterative dilation process that extents the remaining
curve-ends.
For surface-pruning, all the surface-end points on the
small surface branches, isolated small surfaces, jagged surface borders and curves can be pruned. We can see that there
are three categories of surface-end points, each consisting
one, two or three opposite pair of background points (U,D),
(N,S), and (E,W) in the 6-neighborhood. For the last two
categories, if surface-end point p is not match to at least a
template (see Fig. 2(b)) or its rotation and reflection, then p
can be deleted. For the first category, apart from the same
condition as the last two categories, if the number of object
points in N6 (p,V) is less than 4, p can be deleted too. Under
above pruning condition, surface-end point p is on jagged
surface borders or small surface branches or curves, and
it’s not in the interior of surface. The erosion and dilation
processes are similar to curve-pruning.
The pseudo-code of pruning is shown below. Like
thinning, we refer to program P rune1 (V,d1 ) as surface
pruning and P rune2 (V,d2 ) as curve pruning. Larger values
of dm remove more redundant surfaces or curves.

D. The Complete Method
To create a skeleton that is topology-preserving and comprises meaningful features, we combine topological thinning
and skeleton pruning in alternating steps. Given an initial
object V and pruning parameters d1 , d2 , we compute the
final skeleton S (null set initially) in four steps:
Step 1. Surface skeletonization. Accumulating the skeletal
surfaces of the grayscale volume at a range of thresholds
based on T hin1 (V,S).
Step 2. Surface pruning. Pruning redundant surfaces in the
result of Step 1 using P rune1 (V,d1 ).
Step 3. Curve skeletonization. Accumulating the skeletal
curves of the grayscale volume at the same range of thresholds based on T hin2 (V,S).
Step 4. Curve pruning. Pruning redundant curves in the
result of Step 3 using P rune2 (V,d2 ).

340

Figure 7.

Statistical Information in a table (timing in seconds and the number of skeleton voxels after each step)

time from 4194.618 seconds to 305.702 seconds and obtain
almost the same results on a X-ray scan volume of arteries.
Fig. 1 (c) and (d) show that with a lager curve-pruning
parameter, short curve branches and short isolated curves
are deleted.
In Fig. 3 (b) and (c), with larger surface-pruning and
curve-pruning parameters, more redundant features are
deleted on a Cryo-EM volume of HBV virus. Fig. 4 and
Fig. 6 show that our method computes the skeletons on a
Cryo-EM volume of SARS virus and a CT scan volume of
foot that capture one primary kind of shape features.
Fig. 5 is an example of skeletonization of a translation
initiation complex volume, including α-helices (rod-like), βsheets (plate-like) and loops (rod-like). Observe, from Fig.
5 (b), that our method is capable of capturing shape features
that correlate well with the actual structures shown in (c).

While varying the parameters will produce a family of
skeletons, reasonable choices of parameters generate descriptive skeletons whose surfaces and curves correspond
well to the plate-like and rod-like parts of the object.
Considering that a grayscale volume may contain only one
kind of shape features, our method enables the user to choose
corresponding thinning and pruning process without to run
all four steps.
E. Optimization and Skeleton Display
As the method computes the skeletal surfaces and curves
in a range of thresholds with an interval to all, approaches
to narrow the range as small as possible and increase the
interval as large as possible can speed up the method. Right
now, these can be obtained from user’s manual modulation
process of the isosurface of the grayscale volume. If the
isosurface captures the user-interested object structures in
a range as narrow as possible, the execution time of the
method is shortened. If altering the isovalue by an interval
makes the isosurface vary a little, larger interval can be
used, and then the running time is also shortened. In order
to obtain a more accurate result, the prior skeleton-pruning
method of Abeysinghe et al. [1] based on the structure
tensor can be applied. At last, Marching Cubes can be
used to display the skeletons, but its results may cause
confusion with the previous isosurface of the volume. We
display skeletal surfaces and curves with lines connecting
the skeleton points in the 26-neighborhood.

VI. C ONCLUSION
In this paper, we describe a new method for computing
a family of topology and shape preserving skeletons of a
grayscale volume for the purpose of shape description. Our
method does not require an explicit pre-segmentation of the
volume, and is capable of extracting skeletal surfaces and
curves corresponding to plate-like and rod-like object parts.
It is tested on biomedical data-sets.
For future research, we are investigating more shape
applications of the skeletons generated by our method, such
as segmentation, matching and recognition. In addition, automatically determining the pruning parameters, thresholds
and interval to compute desirable skeletons with minimum
or no human input is another direction.

V. R ESULTS
We demonstrate our method on a set of biomedical
data produced by biomedical imaging, where the biological
structure of interest consists of rod-like and/or plate-like
parts. All experiments were performed on a notebook PC
with a 2.19GHz AMD TURION MK-38 CPU and 896MB
of memory. Fig. 7 shows the breakdown of the time for each
step in our method.
Fig. 1 (b) and (c) show that using a more tight range of
thresholds and a larger interval can fast shorten execution

ACKNOWLEDGMENT
We would like to thank Laboratory of Biological Electron
Microscopy and Structural Biology, Institute of Biophysics
of CAS for the “HBV” and “SARS” Cryo-EM data-sets,
Philips Research for the “Foot” and “Aneurism” datasets and Howard Hughes Medical Institute for the “Complex” data-set.

341

R EFERENCES

[19] Thomas Lewiner, Hlio Lopes, Antˆonio Wilson Vieira, and
Geovan Tavares, “Efficient implementation of Marching
Cubes’ cases with topological guarantees,” Journal of graphics tools, 8(2), pages 1-15, 2003.
[20] Timothy S. Newman and Hong Yi, “A survey of the Marching
Cubes algorithm,” Computers & Graphics Volume 30, Issue
5, Pages 854-879, October 2006.
[21] T. Ju, M. Baker, and W. Chiu, “Computing a family of skeletons of volumetric models for shape description,” ComputerAided Design, 39(5):352-360, 2007.
[22] Y. Zhou and A.W. Toga, “Efficient skeletonization of volumetric objects,” IEEE Trans. Visualization and Comp. Graphics,
5(3):196-209, 1999.
[23] Z. Yu and C. Bajaj, “A structure tensor approach for 3d image
skeletonization: Applications in protein secondary structure
analysis,” Image Processing, 2006 IEEE International Conference on, pages 2513-2516, 8-11 Oct. 2006.

[1] Abeysinghe, S.S. Baker, M. Wah Chiu, and Tao Ju,
“Segmentation-free skeletonization of grayscale volumes for
shape understanding,” Shape Modeling and Applications
(SMI 2008), IEEE International Conference on, pages 63-71,
June 2008.
[2] A. Bonnassie, F. Peyrin, and D. Attali, “Shape description
of three-dimensional images based on medial axis,” In ICIP,
volume 3, pages 931-934, 2001.
[3] D. L. Pham, C. Xu, and J. L. Prince, “A survey of current
methods in medical image segmentation,” Technical report,
Johns Hopkins University, Baltimore, Jan. 1998.
[4] G. Kindlmann, X. Tricoche, and C.-F. Westin, “Anisotropy
creases delineate white matter structure in diffusion tensor
MRI,” In Ninth International Conference on Medical Image Computing and Computer-Assisted Intervention (MICCAI’06), Lecture Notes in Computer Science 4190, pages
126-133, Copenhagen, Denmark, October 2006.
[5] H. Blum, “A transformation for extracting new descriptors
of shape,” Models for the Perception of Speech and Visual
Form, pages 362-380, 1967.
[6] Kong T.Y. and Rosenfeld A., “Digital topology: Introduction
and survey,” Computer Vision, Graphics, and Image Processing, pages 357-393, 1989.
[7] Kong T.Y., “On topology preservation in 2-d and 3-d thinning,” International Journal of Pattern Recognition and Artifical Intelligence, pages 813-844, 1995.
[8] K. Palagyi and A. Kuba, “A parallel 3D 12-subiteration
thinning algorithm,” Graphical Models and Image Proc.,
61(4):199-221, 1999.
[9] K. Palagyi and A. Kuba, “Directional 3D thinning using 8
subiterations,” Lecture Notes in Computer Science, 1568:325336, 1999.
[10] Ma C.M., “On topology preservation in 3D thinning,” CVGIP:
Image Understanding, pages 328-339, 1994.
[11] Malandain G. and Bertrand G., “Fast characterization of 3D
simple points,” Proc. 11th IEEE International Conference on
Pattern Recognition, pages 232-235, 1992.
[12] Morgenthaler D.G., “Three-dimensional simple points: Serial erosion, parallel thinning and skeletonization,” Technical
Report TR-1005, Computer Vision Laboratory, Computer
Science Center, University of Maryland, 1981.
[13] N. Amenta, S. Choi, and R. Kolluri, “The Power Crust,” Proceedings of 6th ACM Symposium on Solid Modeling, pages
249-260, 2001.
[14] N. Cornea, D. Silver, X. Yuan, and R. Balasubramanian,
“Computing hierarchical curve-skeletons of 3D objects,” The
Visual Computer, 21(11):945-955, 2005.
[15] P. Dokladal, C. Lohou, L. Perroton, and G. Bertrand, “A new
thinning algorithm and its application to extraction of blood
vessels,” Proc. of Biomedsim, pages 32-37, 1999.
[16] Saha P.K. and Chaudhuri B.B., “Detection of 3-D simple
points for topology preserving transformations with application to thinning,” IEEE Transactions on Pattern Analysis and
Machine Intelligence, pages 1028-1032, 1994.
[17] S. Svensson, I. Nystrom, C. Arcelli, and G. S. di Baja,
“Using greylevel and distance information for medial surface
representation of volume images,” icpr, 02:20324, 2002.
[18] S. Zhang, Cagatay Demiralp, and D. H. Laidlaw, “Visualizing
diffusion tensor mr images using streamtubes and streamsurfaces,” IEEE Transactions on Visualization and Computer
Graphics, 9(4):454-462, 2003.

342

