2009 Sixth International Conference on Computer Graphics, Imaging and Visualization

A New Uniﬁed Model of Univariate and Bivariate Bases for Curves,
Rectangular surfaces and Triangular surfaces
Jaratpong Jangchai, Natasha Dejdumrong
Department of Computer Engineering,
King Mongkut’s University of Technology Thonburi,
Bangkok, 10140, Thailand
Emails: jaratpong.jan@kmutt.ac.th, natasha@cpe.kmutt.ac.th

In addition, this model would offer an evaluation algorithm
with linear computations.
In this work, a new proposed curve representation is
introduced with the most shape preserving property and
linear computational complexity. The basis functions can be
formed similarly to the notions of the linear interpolations of
Wang-Ball and Dejdumrong basis functions. Moreover, several important geometric properties are investigated, i.e., the
partition of unity, convex hull property, symmetry, recursive
algorithm, coefﬁcient matrix representation, the derivatives
and the B´ezier representation of this curve. Ultimately, a
new proposed rectangular and triangular basis functions are
also presented.

Abstract—In this paper, a new basis for polynomial curve
modeling is presented with its linear computation. This new
proposed curve can be formed by the convex combination of its
blending functions and related control points. Moreover, several
important geometric properties for this curve are identiﬁed,
for examples, a partition of unity, convex hull property and
symmetry. Later the recursive algorithm, coefﬁcient matrix
representation, the derivatives and the relationships between
B´ezier curve and this proposed curve are deﬁned. Finally, a
new proposed rectangular and triangular basis functions are
also presented with their surface deﬁnitions.
Keywords-B´ezier curve, Said-Ball curve, Wang-Ball curve,
DP curve, Dejdumrong curve, Linear complexity, Rectangular
surfaces, Triangular surfaces.

I. I NTRODUCTION

II. N EW U NIVARIATE BASIS F UNCTIONS

In geometric modeling, there are several kinds of curves
represented by different blending functions, e.g., B´ezier Bernstein, Ball, Volk-Schumaker (or abbrev. VS) [1], SaidBall, Wang-Ball, Delgado-Pe˜na (or abbrev. DP) [1], and
NB1 polynomials. Some of them possess both univariate and
bivariate polynomials for examples, Bernstein and Said-Ball
polynomials [2,3] while the others provide only univariate
functions. Particularly, Wang-Ball basis functions were generalized from a cubic Ball basis by Hu et. al. [4]. It provided
a recursive evaluation algorithm with linear computational
complexity. It can be noticed that the Wang-Ball polynomials
have coefﬁcients with the multiplicity of two. Later in 2008,
a recent basis was proposed by Dejdumrong.[5] with efﬁcient algorithm and linear computational complexity. Likewise, the coefﬁcients of Dejdumrong’s polynomials have the
multiplicity of three. However, both of them compute the
curves relatively far from their control points. Although,
the Wang-Ball basis has the least time computation for
evaluating the curves but this curve is closed to its control
points less than both B´ezier and Dejdumrong curves. For
Dejdumrong curves, it consumes a linear time complexity
for generating its curves more than Wang-Ball basis while
Dejdumrong curve is closer to its control point than WangBall curve. In the other words, it is more shape preserving.
Thus, it would be an inspiration to present a new curve
modeling providing the coefﬁcients of the multiplicity of 4.
978-0-7695-3789-4/09 $25.00 © 2009 IEEE
DOI 10.1109/CGIV.2009.75

Given a sequence of n + 1 control points, denoted by
n
{di }i=0 , the proposed curve of degree n deﬁne by these
points, can be expressed as
Dn (t) =

n

Din (t) · di , 0 ≤ t ≤ 1.

(1)

i=0

where Din (t) is a new blending function of this proposed
basis function, denoted by
⎧
δ n ti (1 − t)i+4 , for 0 ≤ i < n2 − 1,
⎪
⎪
⎨ i
δin ti (1 − t)n−i , if i = n2 − 1 or i = n2 ,
Din (t) =
⎪
⎪
⎩
n
Dn−1
≤ i ≤ n.
(1 − t) , for n+1
2
(2)
and δin is a coefﬁcient of the polynomials of this basis
function, calculated by
⎧
1
, if i = 0 or i = n,
⎪
⎪
⎪
⎪
⎪
n−1
n−1
⎨ δ
≤ i ≤ n+1
,
, for n−1
i−1 + δi
2
2
n
δi =
⎪
δin−1
,
, if i < n−1
⎪
2
⎪
⎪
⎪
⎩
n−1
n+1
δi−1
, if i > 2 .
(3)
For examples, the formulae for the curves of degree n =
3, 4, 5 and 6 can be shown as follows.
222

Figure 1.

The comparisons of several polynomial curves of degree 7.

For n = 3,

•

3

3

2

2

D (t) = (1 − t) d0 + 3t(1 − t) d1 + 3t (1 − t)d2
+t3 d3 .
(4)
For n = 4,
D4 (t) =

•

(1 − t)4 d0 + 4t(1 − t)3 d1 + 6t2 (1 − t)2 d2
+4t3 (1 − t)2 d3 + t4 d4 .
(5)

A. The Coefﬁcient Matrix Representation
When computing a point on the proposed curves in any
programming languages, sometimes, it is easier or more
convenient than to write the program in the matrix form.
Given a sequence of control points, a proposed curve of
degree n can be computed from the matrix multiplication of
the form
⎤
⎡
1
⎢ t ⎥
⎥
⎢
D(t) = d0 d1 . . . dn · Mi,j · ⎢ . ⎥ , (10)
⎣ .. ⎦
tn

For n = 5,
D(t)

=

(1 − t)4 d0 + 4t(1 − t)4 d1 + 10t2 (1 − t)3 d2
+10t3 (1 − t)2 d3 + 4t4 (1 − t)d4 + t4 d5 .
(6)

For n = 6,
= (1 − t)4 d0 + 4t(1 − t)5 d1 + 14t2 (1 − t)4 d2
+20t3 (1 − t)3 d3 + 14t4 (1 − t)2 d4
+4t5 (1 − t)d5 + t4 d6 .
(7)
The comparisons of several curves between B´ezier
(2), Said-Ball (4), Wang-Ball (7), NB1 (6), DP (1) and
Dejdumrong (5) curves are shown in Figure.1. In addition,
a curve in (3) determines our proposed curves.
D(t)

where a coefﬁcient matrix denoted by Mi,j of the proposed curve, can be deﬁned by
Mi,j =
⎧
(−1)j−i δin
⎪
⎪
⎪
⎪
⎪
⎨ (−1)j−i δin

It is obvious that the proposed curve is the closest curve to
the control points among the other curves with linear complexity, e.g., Wang-Ball, DP, Dejdumrong and this proposed
curve, in the other words, the most shape preservation. In
addition, it is also the most similar B´ezier curve.
Consequently, this new basis satisﬁes the following properties
• Nonnegative basis functions :
Din (t) ≥ 0, for 0 ≤ t ≤ 1.
•

⎪
⎪
⎪
⎪
⎪
⎩

Din (t) = 1, for 0 ≤ t ≤ 1.

i+4
j−i ,
n−i
j−i ,
n−i
n
(−1)j−i δn−i
j−i

for 0 ≤ i <
if i =
,

n−i
n
(−1)j+i−n δn−i
j+i−n+4

,

n
2

n
2

−1

− 1 or i =
n+3
2

n
2

for

n+1
2

≤i<

for

n+3
2

+ 1 ≤ i ≤ n.
(11)

+1

(8)

B. Recursive Algorithm

Partition of Unity :
n

Convex hull property : The proposed curve is a convex
combination of its control points, and hence, the curve
lies inside the convex hull of its control polygon.
The proposed curve interpolates both two end-points :
because D0n (0) = Dnn (1) = 1.

Algorithm 1.
A proposed curve of degree n with control points,
n
denoted by {di }i=0 where i = 0, 1, . . . , n can be evaluated

(9)

i=0

223

ˆ i be the
by using the following recursive algorithms. Let d
temporary control points of degree n − 1.

Proposition 1 shows how to convert from a given set of
control points into a B´ezier point set of the same curve.

Step 1 : Let
⎧
d
⎪
⎪
⎨ i
ˆi =
(1 − t) · di + t · di+1
d
⎪
⎪
⎩
di+1

Proposition 1 The B´ezier points {bk }k=0 of a proposed
curve of degree n can be obtained in terms of proposed
n
curve control points {dk }i=0 by

n

,

if i = 0 or i = n,

,

for

,

if i

n−1
≤i
2
.
> n+1
2

≤

n+1
2

,

(12)
Step 2 : n ← n − 1. If n ≥ 3 then let
ˆ i (i = 0, 1, . . . , n) and go back to Step 1.
di = d

b0
bn

=
=

bk

=

bk

=

Step 3 : If n = 2, the value of D(t) can be readily obtained
as follows
ˆ1
ˆ0 + t · d
Q = (1 − t) · d
ˆ
ˆ2
R = (1 − t) · d1 + t · d
D(t) = (1 − t) · Q + t · R.

(13)

additions
Theoretically, this algorithm requires 7n−9
2
and 7n − 9 multiplications for n odd, and requires 7n−8
2
additions and 7n − 8 multiplications for n even. Therefore,
the recursive algorithm for this proposed curve is more
efﬁcient than the de Casteljau algorithm because its
computational complexity is only O(n).

n

ˆ in (t) · di , 0 ≤ t ≤ 1,
D

(ki)(n−k
i+4 )
· di
(ni)(n−i
i+4 )
n+3
k
n−k
n−
n ( i )( n−i )
· di
+ i=n− 2 n +2 δn−i
n
(i)
2
k
n−k
n
n (n−i+4)( n−i )
· di ,
+ i=n− n+3 +1 δn−i
n
i−4
(n−i+4
)(n−i
)
2
n
n+1
≤k≤n
for k < 2 − 1 or
2
k
n−k
n
2 −2 n ( i )( i+4 )
δi n n−i · di
i=0
( i )( i+4 )
n+3
k
n−k
n− 2
n ( i )( n−i )
· di
+ i=n− n +2 δn−i
n
(i)
2
k
n−k
(
)(
n
n−i+4
n−i )
n
· di
+ i=n− n+3 +1 δn−i
n
i−4
(n−i+4)(n−i
)
2
k
n−k
( )( )
+δin i nn−i · dk ,
(i)
for k = n2 − 1 or k = n2 .
n
2

−2

i=0

δin

(16)
To obtain a new set of proposed curve’s control points
from B´ezier curve, proposition 2 will be readily employed.

C. The Derivatives
Given a sequence of n + 1 control points, denoted by
n
{di }i=0 , the derivative of the proposed curve of degree n
deﬁned by these points, can be expressed as
D (t) =

d0
dn

n

Proposition 2 The B´ezier points {bk }k=0 of a proposed
curve of degree n can be derived from a set of proposed
n
curve control points {dk }i=0 in terms of the matrix form
by
n

(14)

bk =

i=0

ani,k · di ,

(17)

i=0

n

ˆ n (t)} , are deﬁned by
where the basis functions, {D
i
i=0

n

(ani,k )

dk =

ˆ n (t) =
D
i

−1

· bi ,

(18)

i=0

⎧ n
δi · [ i · ti−1 · (1 − t)i+4 − (i + 4) · ti · (1 − t)i+3 ],
⎪
⎪
⎪
⎪
⎪
for 0 ≤ i < n2 − 1
⎪
⎪
⎪
⎨
δin · [ i · ti−1 · (1 − t)n−i − (n − i) · ti · (1 − t)n−i−1 ],
⎪
⎪
⎪
if i = n2 − 1 or i = n2
⎪
⎪
⎪
⎪
⎪
⎩ ˆn
Dn−i (1 − t), for n+1
≤ i ≤ n.
2
(15)

where ani,k is an element (i, k)th of an (n + 1) × (n + 1)
matrix, denoted by

ani,k =

III. R ELATIONSHIPS BETWEEN B E´ ZIER AND THE
P ROPOSED C URVES
In this section, the relationships between the B´ezier curve
and this proposed curve are considered and explicitly deﬁned
by using polar form approach.

⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎩

δin

(ki)(n−k
i+4 )
,
(ni)(n−i
i+4 )

for i <

n
2

− 1,

for n+1
≤ i ≤ n+3
+1
(ki)(n−k
2
2
n−i )
,
n
(ni)
and if i = k = 2 − 1 or n2
k
n−k
(
)( n−i )
for n+3
+ 1 ≤ i ≤ n.
δin n−i+4
n
i−4 ,
2
(n−i+4
)(n−i
)
(19)
δin

where (ani,k )

−1

is an inverse matrix of a matrix ani,k .

Example 1 The relationships between the B´ezier control
points and the control points of the proposed curve when
the degree n = 5 and n = 6 are shown below.

224

,

•

for n = 5

⎡

1
⎢ 1
⎢ 5
⎢ 0
a5 = ⎢
⎢ 0
⎢
⎣ 0
0
⎡

and

a−1
5

•

b0 =
b1 =
b2 =
b3 =
b4 =
b5 =
for n = 6

⎢
⎢
⎢
=⎢
⎢
⎢
⎣

b0
b1
b2
b3
b4
b5
b6

⎡

1

1
⎢ −1
2
⎢
⎢ −1
⎢ 14
=⎢
⎢ 0
⎢ 0
⎢
⎣ 0
0
=
=
=
=
=
=
=

0
0
0
0

1
− 14
0
0
0
0

0
5
4

0
0
0
0

d0
+ 4d1 )
d2
d3
1
(4d
4 + d5 )
5
d5

⎡

a−1
6

4
5

1
5 (d0

⎢ 1
⎢ 31
⎢
⎢ 15
a6 = ⎢
⎢ 0
⎢ 0
⎢
⎣ 0
0
and

0

0
2
3

0
0
0
0
0
0
3
2

0
0
0
0
0

0
0

14
15

0
0
0
0

0
0

15
14

0
0
0
0

d0
+ 2d1 )
+ 14d2 )
d3
1
(14d
4 + d6 )
15
1
(2d
5 + d6 )
3
d6
1
3 (d0
1
15 (d0

0
0
1
0
0
0
0
0
1
0
0
0

0
0
0
1
0
0

=
=
=
=
=
=

0
0
0
1
0
0
0

0
0
0
0

d0
d1
d2
d3
d4
d5
d6

0
0
0
0

0

1

4
5

0
0
0
1
0
0

d0
d1
d2
d3
d4
d5

0
0
0
1
0
0
0

0
0
0
0

0
0
0
0
− 14
1

5
4

0

Dn (u, v) =

⎥
⎥
⎥
⎥
⎥
⎥
⎦

1
5

0
0
0
0

or

⎤

⎤
⎤ ⎡ n
D0 (v)
· · · d0n
⎥
..
.. ⎥ · ⎢
..
⎦,
.
.
. ⎦ ⎣
n
· · · dmn
Dn (v)
(25)
n
where Di (u) are univariate polynomials of degree n,
and di,j (0 ≤ i ≤ n, 0 ≤ j ≤ m) are the control points of
D(u, v).
d00
⎢ ..
m
m
[D0 (u) . . . Dm (u)] · ⎣ .
dm0

(20)

⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎦

(21)

We can represent a basis function D(u, v) by using the
coefﬁcient matrix of polynomials Din (u)
Dn (u, v) =

b0
− b0 )
b2
b3
1
(5b
4 − b5 )
4
b5

14
15

0
0

0
0
0
0

1
15
1
3

2
3

0

0
0
0
0

15
14

0
0

=
=
=
=
=
=
=

d00
m T ⎢
] · ⎣ ...
[1 . . . um ] · [Mi,j
dm0

⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎦

3
2

0

0
0
0
0
1
− 14
− 12
1

m

D(u, v) =

⎡

IV. A N EW P ROPOSED B IVARIATE BASIS FUNCTION
Next, we determine the construction of proposed basis
functions on bary centric coordinates. The idea is similar to
the B´ezier control nets of triangular B´ezier patches. Then,
the proposed triangular surfaces can be deﬁned by basis
n
(u, v, w) and control points, denoted by di,j,k for
Di,j,k
degree n.

⎤
⎥
⎥
⎥
⎥
⎥ (23)
⎥
⎥
⎥
⎦

n
di,j,k · Di,j,k
(u, v, w).

D(u, v, w) =

(27)

i+j+k=n

b0
1
2 (3b1 − b0 )
1
14 (15b2 − b0 )
b3
1
(15b
4 − b6 )
14
1
(3b
5 − b6 )
2

A. Recurrence of bivariate functions
Algorithm :
1
1
D1,0,0
(u, v, w) = u, D0,1,0
(u, v, w) = v,
Let
1
D0,0,1 (u, v, w) = w, r = 0.
For i + j + k = m
´ = n − 3r and i = 0 or j = 0 or k = 0

b6

Now, it is determined the construction of proposed basis
functions on the rectangular domain. The control nets which
are similar to B´ezier control nets of rectangular B´ezier
patches are used. Hence, a proposed rectangular surface of
this proposed curve of degree n × m can be represented by
n

⎤
· · · d0n
.. ⎥ · M n
..
.
i,j
. ⎦
· · · dmn

(22)

1

0
0
0
0
0

⎡

⎤
1
⎢
⎥
· ⎣ ... ⎦,
vn
(26)
n
where Mi,j
are a coefﬁcient matrix of polynomials
n T
Din (u) and [Mi,j
] is a transposed matrix of a coefﬁcient
n
matrix Mi,j .

1
4 (5b1

0
0
0
0
0

⎡

•

If i, j, k ≤
(m+3r)
´

m+1
´
2
(m+3r−1)
´

Di+r,j+r,k+r (u, v, w) = uDi+r−1,j+r,k+r (u, v, w)
(m+3r−1)
´

+vDi+r,j+r−1,k+r (u, v, w)
(m+3r−1)
´

+wDi+r,j+r,k+r−1 (u, v, w).
(28)

di,j Din (u) · Djm (v), 0 ≤ u, v ≤ 1. (24)

•

i=0 j=0

225

Otherwise,

•

(m+3r)
´

Di+r,j+r,k+r (u, v, w) =
⎧
(m+3r−1)
´
⎪
uDi+r−1,j+r,k+r (u, v, w), i =
⎪
⎪
⎪
⎪
⎪
(m+3r−1)
´
⎪
⎪
vDi+r,j+r−1,k+r (u, v, w), j =
⎪
⎪
⎪
⎪
´
⎪
⎨ wD(m+3r−1)
i+r,j+r,k+r−1 (u, v, w), k =
(m+3r−1)
´
⎪
⎪
Di+r−1,j+r,k+r (u, v, w),
⎪
⎪
⎪
⎪
⎪
(m+3r−1)
´
⎪
Di+r,j+r−1,k+r (u, v, w),
⎪
⎪
⎪
⎪
⎪
´
⎩ D(m+3r−1)
i+r,j+r,k+r−1 (u, v, w),

m+1
´
2

+ 1,

m+1
´
2

+ 1,

m+1
´
2

+ 1,

i≥

m+1
´
2

+ 2,

j≥

m+1
´
2

+ 2,

k≥

m+1
´
2

+ 2.
(29)

•

n
n
n
Di,j,k
(u, v, w) = Dj,i,k
(v, u, w) = Dj,k,i
(v, w, u)
n
n
= Dk,j,i (w, v, u) = Dk,i,j (w, u, v)
n
= Di,k,j
(u, w, v).
(34)

V. D ISCUSSIONS

• r =r+1
End Algorithm

1. The de Casteljau algorithm for computing a point on
a B´ezier curve of degree n has a computational complexity of O(n2 ). For the proposed algorithm (Algorithm 1),
the computational complexity is only O(n). As such, this
algorithm is much more efﬁcient as compared to the de
Casteljau algorithm but less than both Wang algorithm and
Dejdumrong algorithm.
2. Among the curves with linear complexity, e.g., WangBall, DP and Dejdumrong curves, the proposed curve is
closed to its control points more than those curves. In other
words, it is the most shape preserving curve with linear
computational complexity.
3. For the proposed rectangular basis function, a basis
function is represented by using the coefﬁcient matrix of
polynomials of this proposed curve. We use control nets
which are similar to the notion of B´ezier nets of rectangular
B´ezier patches. Hence, we can generate a rectangular B´ezier
surface by using a coefﬁcient matrix and a conversion matrix
of this proposed curve.
4. For the proposed triangular basis function, we proposed
a new type of bivariate basis on the triangular domain. On
each side of the triangle, these basis functions reduce to
the univariate basis of this proposed curve. The recursive
algorithm for evaluation algorithm presented in this work is
more efﬁcient than the de Casteljau algorithm for evaluating
triangular B´ezier surfaces.

B. Recursive Evaluation
We can provide the following recursive algorithms for
generating the triangular surface D(u, v, w).
Algorithm :
(n)
Step 1: Let di,j,k = di,j,k
Step 2:
For m = n − 1, n − 2, . . . , 1, 0
Let r = 0
For i + j + k = m
´ = m − 3r and i = 0 or j = 0 or k = 0
m+2
´
• If i, j, k ≤
2
(m+3r)
´

di+r,j+r,k+r

(m+3r+1)
´

(m+3r+1)
´

= udi+r+1,j+r,k+r + vdi+r,j+r+1,k+r
(m+3r+1)
´

+wdi+r,j+r,k+r+1 .
•

(30)

Otherwise,

(m+3r)
´

di+r,j+r,k+r

⎧
(m+3r+1)
´
⎪
di+r+1,j+r,k+r
⎪
⎪
⎪
⎨
(m+3r+1)
´
=
di+r,j+r+1,k+r
⎪
⎪
⎪
⎪
´
⎩ d(m+3r+1)
i+r,j+r,k+r+1

, i>

m+2
´
2

,

, j>

m+2
´
2

,

, k>

m+2
´
2

.
(31)

r =r+1
(0)
Step 3: Let D(u, v, w) = d000
•

VI. C ONCLUSION

End Algorithm

In this work, a new basis for curve representation is
introduced with a linear complexity and the most shape
preserving. The relationship between B´ezier curve and this
proposed curve are developed. Using this relationship, an
algorithm for computing the points on the B´ezier curves are
formally addressed. In addition, rectangular and triangular
bases are also proposed in this work. They can be used
for free-form surface design if these patches are necessary.
Again, these algorithms are also more efﬁcient than the
de Casteljau algorithm for evaluating both types of B´ezier
surfaces.

C. Properties of bivariate functions
n
(u, v, w)
The proposed triangular basis functions Di,j,k
have the following properties.
• Nonnegative basis functions :
n
(u, v, w) ≤ 1.
0 ≤ Di,j,k
•

Convex hull property : From equations (32) and (33), it
can be concluded that the proposed triangular surface
is a convex combination of its control points and it is
guaranteed that the surface lies inside the convex hull
of its control net.
Symmetry :

(32)

Partition of Unity :
n
Di,j,k
(u, v, w) = 1.

(33)

i+j+k=n

226

ACKNOWLEDGMENT
This work was supported by the laboratory of CAGD
and Animation (CADLAB), the department of computer
engineering, KMUTT.
R EFERENCES
[1] J. Delgado and J. M. Pe˜na . A Shape Preserving Representation
with an Evaluation Algorithm of Linear Complexity. Computer
Aided Geometric Design, 20(1):120, March 2003.
[2] Goodman T N T, Said H B. Properties of generalized Ball
curves and surfaces. Computer Aided Geometric Design, 1991,
23: 554-560.
[3] Goodman T N T, Said H B. Shape-preserving properties of
the generalized Ball basis. Computer Aided Geometric Design,
1991, 8: 115-121.
[4] Hu S M, Wang G Z, Jin T G. Properties of two types of
generalized Ball curves. Computer Aided Geometric Design,
1996, 28(3): 125-133.
[5] N. Dejdumrong. Efﬁcient Algorithms for Non-Rational and
Rational B´ezier Curves, The 5 th International Conference on
Computer Graphics, Imaging and Visualization (CGIV’08),
Penang, Malaysia, August 26-28, 109-114, 2008.
[6] Hu, S.M., Wang, G.J. and Sun, J.G. A Type of Triangular
Ball surface and Its Properties, J. Comput. Sci. Technol. v13
i1. 63-72.

227

