2009 Sixth International Conference on Computer Graphics, Imaging and Visualization

Cluster Coding Algorithm for Stochastic Textures Identification
1

Hee-Kooi Khoo, 2Hong-Choon Ong, 3Ya-Ping Wong
School of Mathematical Sciences, Universiti Sains Malaysia, 11800 Gelugor, Penang, Malaysia
3
Faculty of Information Technology, Multimedia University, 63100 Cyberjaya, Selangor, Malaysia
{1hkkhoo@gmail.com, 2hcong@cs.usm.my, 3ypwong@mmu.edu.my}
1&2

Support vector machines (SVM) algorithm is a slow
but highly accurate clustering method [6]. The SVM
training algorithm was introduced by Boser et al. [7]. A
combined GLCP and SVM technique has been proposed
for two class segmentation in [8].
The self-organizing map (SOM) is an unsupervised
single layer artificial neural network (ANN). The
advantage of SOM is that the more number of neurons
placed in the grid of image, the higher classification
result will be obtained. However, if the number of
neurons is too large, SOM may end up with over
classification [9]. On the other hand, the number of
neurons required is unknown. Furthermore, the
classification using SOM may fail at the local minimum
in training [10].

Abstract
A stochastic texture is a texture whereby the
arrangement of the pattern is random in nature. The
identification for each of these textures is uncertain and
usually involves complex methods to search for the
locations of the correlation between these textures. We
propose the cluster coding algorithm which could easily
classify the stochastic textures in a semantic way based
on statistical features. This algorithm is successfully
applied in both synthetic and real-life textures for
segmentation. In this study, the cluster coding showed a
significant improvement over other techniques in terms
of classification accuracy and computation time.
Keywords--- Feature Selection, Clustering
Algorithm, Grey Level Co-occurrence Probabilities,
Texture Segmentation, Flood Fill Algorithm.

2. Methodology
2.1. Texture Feature Extraction

1. Introduction

Grey level co-occurrence probabilities (GLCP)
method is a texture descriptor that represents joint
probabilities, Cij, of different sets of pixels having
different grey levels. This algorithm is developed by
Haralick with statistical features in [2]. The joint
probability density function is defined by,

In human vision, a texture can be described
qualitatively in several different ways. These terms
include randomness, stationary, coarseness, periodicity,
roughness, brightness and so on. These terms are
subjective and lack measurements to quantitatively
describe a texture, and thus further analysis of texture is
not possible to proceed. In order to explain texture in a
quantitative way, the distribution of a texture can be
described in the form of statistics, differential equations,
and geometry. Some of these texture descriptors are
wavelet [1], grey level co-occurrence probabilities
(GLCP) [2], and the hidden Markov models (HMM) [3].
Texture feature selection is an important part of the
texture segmentation process because it determines
which pixels belong to which texture of an image. The
use of parameters of a chosen method is crucial to the
efficiency of the result. A commonly used texture feature
selection method is the K-means algorithm whereby the
method is based upon the closest distance [4]. K-means
algorithm assumes that all clusters are in spherical shape,
but it may return inappropriate result for non-spherical
clusters [5]. An advanced version of K-means algorithm
is proposed by David Clausi in [5].
978-0-7695-3789-4/09 $25.00 © 2009 IEEE
DOI 10.1109/CGIV.2009.59

Cij =

F

∑

ij
G −1

F
i , j = 0 ij

(1)

where Fij represents the frequency of occurrence between
grey levels, i and j. G is the grey level quantization. The
common angle used is either 0°, 45°, 90° or 135°. The
GLCP can also become rotational invariant using a
Gaussian weighting scheme to describe isotropic texture
[11]. An adequate grey level setting is 64 which form a
64×64 grey level co-occurrence matrix (GLCM) [11]. In
GLCM, the various types of textures could carry
different correlation information. In order for GLCP
statistics to properly detect certain natural texture, a
reasonable window size, a×b has to be set to extract the
features. More analysis on co-occurrence matrix can be
found in [12]. In our study, we analyzed 15 GLCP
features as shown in Table 1.

285

from Ta to Tb for each of the features, which is used to
split each of the domains into two regions. Then in each
of the regions, we label with a unique code as shown in
Figure 1B and Figure 1C. Next, we sum up all the codes
from every region to form a new set of cluster codes as
shown in Figure 1D for each pixel. The following
procedure below gives the detail about the algorithm:

Table 1: Statistical features used in GLCP
Statistics
First order
uniformity
Second order
uniformity
Contrast

Formula
G −1

UNI1 =

∑C

ij

i , j =0

G −1

∑C

UNI 2 =

2

ij

i , j =0
G −1

∑ C (i − j )

CON =

2

Algorithm 1: Cluster Coding Algorithm

ij

i , j =0

Entropy

G −1

ENT = − ∑ Cij log Cij
i, j =0

Mean

m1 =

G −1

∑ iC , m
ij

2

i , j =0

Standard
deviation
Correlation

Covariance

Determine the features to be used.

2

Split each feature domain into 2 regions using
threshold range from Ta to Tb.

ij

i , j =0

G−1

G−1

3

Each region assigned with a unique code.

i , j =0

i , j =0

4

Sum up all codes from each region in every domain.

5

For each feature code

6

If it is the first code

σ1 = ∑ (i − m1 )2 Cij , σ 2 = ∑ ( j − m2 )2 Cij
G −1

∑

COR =

(i − m1 )( j − m2 )Cij

σ1 × σ 2

i, j =0

Simplified
correlation

G −1

∑ jC

=

1

G −1

∑ ijC

SCOR =

ij

i , j =0

G −1

∑ (i − m1 )( j − m2 )Cij

COV =

7

Create a new cluster.

8

Plus 1 count for the size of the new cluster.

i , j =0

Cluster shade

G −1

9

∑ ((i − m ) + ( j − m )) C

CLS =

3

1

2

ij

10

i , j =0

Cluster
prominence
Homogeneity

G −1

∑ ((i − m ) + ( j − m )) C

CLP =

4

1

2

11

ij

i , j =0

HMG =

Cij

G −1

∑ 1+ | i − j |

i , j =0

Inverse
difference
moment
Dissimilarity

IDM =

Cij

G −1

∑ 1+ | i − j |

DIS =

G −1

∑C

ij

|i− j|

i , j =0

Maximum
probability

Plus 1 count for the size of the existing cluster.
Else

12

Create a new cluster.

13

Plus 1 count for the size of the new cluster.

14

2

i , j =0

Else if the codes already exist

End if

15

End for loop

16

Sort the clusters in descending order according to
the size of each cluster.

MXP = max Cij
i, j

End Algorithm 1.
The proposed cluster coding algorithm uses
minimum and adequate features for texture
discrimination. This indirectly helps to reduce the
dimensionality of statistical features used.

2.2. Cluster Coding Algorithm

2.3. Noise Suppression
A

B

C

D

Section 2.2 explains about the determination of the
texture classes. However in real-life applications, there
are always two main issues that affect the quality of the
segmentation process; the noise and the outliers. A
modification of the flood fill algorithm is proposed in
order to eliminate the noise and the outliers. A basic
flood fill algorithm is used to search and locate all the
same and connected pixels of a given pixel [13].
We use an iterative structure with the 4-connected
approach as the basic flood fill. During the run time of
the flood fill algorithm, we can collect two important
information; the locations of the same and connected
pixels, interior and the edges. From the label set of the

Figure 1: The segments. A. The actual
segments. B. Coded regions of statistical
feature domain 1, f1. C. Coded regions of
statistical feature domain 2, f2. D. The new
coded regions derived from f1 and. f2.
The appropriate use of statistical features can be
determined based on supervised visual inspections of the
set of two dimensional (2D) statistical feature domains.
Suppose Figure 1A is the texture mosaic structure that
we want to discriminate. First, define a threshold range,

286

edges, edge, we can compute the size of dominant edge,
edgedmt, which cover around the interior. Given the
smallest size of the segment region, sizemin, the interior
region will be reassigned if
(2)
sizeinterior ≤ sizemin , and

diameter of the circle and the length of each straight line
are in the ratio of approximately 1:3. Once the mosaic
structures are ready, we can insert any textures into the
regions, for instance the Brodatz’s textures [14].

tEdge
(3)
2
where tEdge, is the total number of edges. If the
conditions (2) and (3) above are true, then the label of
the interior will merge with the same label of the edgedmt,
else the interior will remain the same. The effects of the
noise elimination are shown in Figure 3, Column 2 and
Column 3.
edgedmt ≥

3.2. Parameters Configuration
All statistical features in Table 1 are used for the
visual observations and to determine the best feature
using cluster coding algorithm. The distance and angle
was set to the current pixel and the next octave
directional pixels to achieve some form of rotational
invariance. The settings of the parameter set for GLCP
are shown in Table 2:

3. Experimental Design
Table 2: GLCP parameters configuration

3.1. Synthesis of Test Images

Criteria
Grey level quantization, G
Distance, d(pixel)
Angle(°)

Some of the Brodatz’s textures images [14] are
selected to test out the performance of the cluster coding
algorithm. Four types of 1024×1024 mosaic structures
are used to hold the selected textures as shown in Figures
2.

Statistical Features, f
Window size to scan, a×b

Value
64 levels
1 pixel
Octave direction (0, 45,
90, 135, 180, 225, 270,
315)
All the statistical
features in Table 1.
16×16

3.3. Equipments and software used
A

B

C

D

Two types of computer systems were utilized for the
performance testing, namely the Dell Inspiron M6000
and the Hewlett-Packard NW9440 mobile workstation.
Both of these two systems have the 2048 megabytes of
memory. Dell M6000 is running on a single core
processor, while the HP NW9440 model is running on a
two parallel core processor. All the segmentation system
is developed in C++ programming language. There are
three modules, which are the GLCP feature extraction,
cluster coding for feature selection, and modified flood
fill algorithm.

Figure 2: The mosaic structures used for
testing. A. Two crescents. B. Bi-partite with
sinusoidal boundaries. C. Middle straight
boundaries. D. Centre circle with two semimiddle straight boundaries.

4. Result and Discussion
4.1. Segmentation Results

The mosaic structures of two crescents and the bipartite with sinusoidal boundaries in Figure 2A and
Figure 2B were created using the second order B-Spline
curves. In Figure 2C, the boundaries was drawn under
the condition
w
h
(4)
r = or c = , r ∈ 0,..., w − 1; c ∈ 0,..., h − 1
2
2
where r, c, w and h represent a row, a column, the width
and the height of the image respectively. The same
procedure is repeated to create boundaries for Figure 2D
under the condition (4). Then, at the centre point between
the two straight boundaries, we insert a circle. The

Column 1

A

287

Column 2

Column 3

hierarchical KIF in [5], compared with the cluster coding
algorithm proposed respectively.
Table 3: The accuracies of KIF [5] and cluster
coding algorithm

B

Test
Images
Figure 3A
Figure 3B
Figure 3C
Figure 3D

C

Mixture
Resolving
KIF
96.40
95.30
94.70

Accuracy (%)
Binary
Cluster
Hierarchical Coding
KIF
97.25
96.40
96.66
94.80
98.22
94.80
98.26

Cluster coding algorithm could segment the texture
mosaic in Figure 3B with slightly the same accuracy as
the KIF methods. But Figure 3C shows that our
algorithm has improved the accuracy to 98.22%. Our
algorithm generated 98.26% accuracy compared to
94.7% and 94.8% in the KIF methods in Figure 3D. In
KIF methods, the Herringbone texture in Figure 3D was
recognized as two kinds of textures. However, our result
does not split into two different regions. The fact that our
GLCP algorithm has some rotational invariant effects
using the octave directions for GLCM has helped us to
improve the selection of textures.

D
Figure
3:
Texture
mosaics
and
the
corresponding segmentation results. A. Mosaic
with oriental-rattan (D64) & handmade paper
(D57). B. Mosaic with cork (D4) & cotton (D77).
C. Mosaic with cork (D4), cotton (D77),
handmade paper (D57) & raffia (D84). D. Mosaic
with straw matting (D55), Herringbone (D17),
raffia (D84), cotton (D77) & pressed calf leather
(D24).
The result outputs are presented in Figure 3. In
Figure 3, the images on the left are the original texture
mosaics. The images in the next column in Column 2
illustrate the outputs obtained using cluster coding
algorithm. The final results are shown in the right
column in Column 3 after noise reduction using a
modified flood fill algorithm.
The texture mosaic in Figure 3A is designed similar
to those found in [15]. The difficulties of segmenting this
mosaic are that they are non-spherical shape, there are
several distances between clusters, and are non-linearly
separable. Our method could successfully segment it as
shown in Column 2 and 3.
The bi-partite texture mosaic with a sinusoidal
boundary was created to approximate the 256×256 test
image given in [5]. The four classes’ of texture mosaic
shown in Figure 3C was also created to make it similar to
the 256×256 test image in [5]. Next, the five classes’ of
texture mosaic found in Figure 3D is similar to the
256×256 test image in [16] and compares our results
with the methods used by Clausi in [5].

Figure 4: The bar chart for comparison of the
accuracies of KIF [5] and cluster coding
algorithm.
In terms of segmentation time, cluster coding
algorithm provided faster segmentation with less than 10
seconds as compared to the KIF methods as shown in
Table 4. The higher performance of computer system and
better compiler used may cause the segmentation time to
become less. However, we used higher resolution with
1024×1024 of synthetic images for our testing. Besides,
our focus is on the two critical issues, which are the set
of algorithms with less complexity and to minimize the
use of the computer memory. For example, we had
evolved the GLCP algorithm by limiting the number of
windows in a pixel by pixel routine, w×h, to a block by
block pixels routine, (w/a)×(h/b). We also reduced the
size of GLCM, G×G, by storing only the non-zero

4.2. Comparative Performance
Table 3 and Table 4 reported the segmentation
accuracies and computational times of the mixture
resolving K-means Iterative Fisher (KIF) and binary

288

probabilities [12] in a vector structure, v. As a result, the
big-O notation for our GLCP algorithm is denoted as
O(nv), where n=(wh/ab).

Acknowledgements
The research is funded by the Research Universiti
(RU) under the Grant Number 1001/PMATHS/811024
of Universiti Sains Malaysia (USM).

Table 4: The computation times of KIF [5] and
cluster coding algorithm
Test
Images

Figure 3A
Figure 3B
Figure 3C
Figure 3D

References

Time (minutes: seconds)
Mixture Binary
Cluster Coding
Resolvi Hierarc Dell
HP
ng KIF
hical
M6000 NW9440
KIF
0:07
0:06
3:59
7:48
0:06
0:05
3:46
9:19
0:09
0:06
11:27
12:08
0:09
0:05

[1]
[2]

[3]
[4]

4.3. Application
[5]

We applied the cluster coding algorithm to detect the
malignant parts of breast cancer based on the
mammogram imagery. The 240×280 mammogram image
is illustrated in Figure 6 below. The fastest time used to
detect the tumour (covered with white boundaries) takes
about 609 milliseconds running on HP NW9440
computer system.

[6]
[7]

[8]

[9]

Figure 6: The mammogram image of a breast
with malignant tumour in [17]. A. Original image.
B. Classified image.

[10]
[11]

5. Conclusions

[12]

The cluster coding algorithm is found to be fast and
accurate. The algorithm is non-recursive and does not
require the complex calculations to search for the basis
of texture patterns and thus the training time was
excluded. The semantic of cluster coding is easy to
understand and program. The modified flood fill
algorithm has successfully searched and eliminated noise
without violating the texture distribution.

[13]
[14]
[15]
[16]
[17]

289

Haar A., Zur theorie der orthognonalen funktionensysteme. Mathematische Annalen 69, p.331-371, 1910.
Haralick R. M., Shanmugam K. & Dinstein Its’hak,
Textural features for image classification, IEEE Trans.
On Systems, Man, and Cybernetics, vol. 3(6), p.610-621,
1973.
Rabiner L. R., A tutorial on hidden Markov models and
selected applications in speech recognition, Proceedings
of the IEEE, vol. 77(2), p.257-286, 1989.
Petrou M. & Sevilla P. G., Image processing dealing
with texture, West Sussex, England, John Wiley & Sons
Ltd., 2006.
Clausi D. A., K-means iterative fisher (KIF)
unsupervised clustering algorithm applied to image
texture segmentation, Pattern Recognition 35, p.19591972, 2002.
Schölkopf B. & Smola A. J., Learning with kernels:
support vector machines, regularization, optimization,
and beyond, London, England, the MIT Press, 2002.
Boser B. E., Guyon I. M. & Vapnik V. N., A training
algorithm for optimal margin classifiers, Proceedings of
the 5th Annual ACM Workshop on Computational
Learning Theory, p.144-152, 1992.
Khoo H. K., Ong H. C. & Wong Y. P., Image texture
classification using combined grey level co-occurrence
probabilities and support vector machines, CGIV’08 5th
International Conference on Computer Graphics,
Imaging and Visualization, p.180-184, 2008.
Martens G., Poppe C., Lambert P. & de Walle R. V.,
Unsupervised texture segmentation and labelling using
biological inspired features, IEEE 10th Workshop on
Multimedia Signal Processing, p.159-164, 2008.
Abe S., Support vector machines for pattern
classification, Spring Street, New York, Springer
Science+Business Media, LLC, 2005.
Jobanputra R. & Clausi D. A., Preserving boundaries for
image texture segmentation using grey level co-occurring
probabilities, Pattern Recognition 39, p.234-245, 2006.
Clausi D. A. & Zhao Y. P., Grey level co-occurrence
integrated algorithm (GLCIA): a superior computational
method to rapidly determine co-occurrence probability
texture features, Computers & Geosciences 29, p.837850, 2003.
Hearn D. & Baker M. P., Computer graphics with
OpenGL, 3rd edn. Upper Saddle River, New Jersey,
Pearson Education, Inc, 2004.
Brodatz P., Textures: a photographic album for artists
and designers, New York, Dover Publications, Inc, 1966.
Hammouche K., Diaf M. & Postaire J.-G., A clustering
method based on multidimensional texture analysis,
Pattern Recognition 39, p.1265-1277, 2006.
Jain A. K. & Farrokhnia F., Unsupervised texture
segmentation using Gabor filters, Pattern Recognition
24(12), p.1167-1186, 1991.
BreastCancer.org url: http://breastcancer.org.

