2009 Sixth International Conference on Computer Graphics, Imaging and Visualization

Skull Registration Using Rigid Super-Curves

Iman Yi Liao, Pan Zheng, Bahari Belaton
School of Computer Sciences
Universiti Sains Malaysia
Penang, Malaysia
e-mail: iman@cs.usm.my, panzheng@gmail.com, bahari@cs.usm.my
establish the point-point correspondence between two curves
[5], [6], [7]. Sometimes feature points can be extracted first
and the correspondence is then established between these
feature points [8], [9]. As for 3D curves, B-Spline
representation based methods are of more interest. Cohen
et.al. [10], [11], [12] have addressed one of the earliest curve
matching methods that are based on B-Spline fitting. BSpline was chosen for its various attractive attributes such as
spatial uniqueness, boundedness and continuity, local shape
controllability, and invariance to affine transformation.
However, it suffers from the non-uniqueness of control
points. To overcome this disadvantage of using B-splines,
various methods were presented such as knot shifting
combined with equidistant re-sampling of the fitted curves
[13], [11], matching Curvature Scale Space images of the BSpline fitted curves instead of the curves themselves [14],
comparing the sum of the residual error between the sample
and the different prototype curves and then adjusting the
control points to minimize the sum of residual [11], and in
the case of 2D closed curves [15], assigning equal extra
points to the two fitted curves with significant corners.
Recently, a more promising method called “Super-Curves”
was proposed for 2D image registration [9]. The main
advantage of a super-curve is that it considers two curves to
be matched as a single curve that allows a uniform B-Spline
representation for this single curve. However, this promising
method cannot be directly applied to our problem to recover
rigid transformation, as the affine transformation between the
two curves is intrinsically embedded in this super-curve
scheme as we can see in section 2.
Thus in this research, the development of super-curves is
extended to 3D image registration with a rigid transformation
which is hereby named Rigid-Super-Curves. The main
contribution is that by adopting the B-Spline representation
for super-curves, a rigid transformation between the curves is
calculated instead of simultaneously obtaining the affine
transform as it is the case in the original method. Then a twostep algorithm is suggested to recover the rotation and
translation between two sets of curves based on our RSC
method. The rest of the paper is structured as follows. In
section 2 the basic concept of super-curves is briefly
described. The new rigid-super-curves and the two step
algorithm are illustrated in section 3. Experimental results
and discussion are carried out in section 4, followed by
conclusion in section 5.

Abstract—This research presents an algorithm, Rigid Super
Curves (RSC), to solve the problem of registering two sets of
digitized skulls data under a rigid transformation using crest
lines. The method that restitutes the rigid transformation
between two sets of fully matched curves is propounded. RSC
exploits the non-ambiguity of B-Spline representation of supercurves whilst overcoming the inability of super-curves to
restore rigid transformations. A further contribution of this
study is a two-stage algorithm based on RSC which registers
two sets of partially matched curves under a rigid
transformation. The algorithm improves the robustness over
feature based methods by considering the structure rather
than individual points of the curve. Experimental results on
CT scanned skull data show that proposed algorithm is more
robust and accurate at restoring the rigid transformation
between two sets of crest line data compared with Iterated
Closest Point and Super Curves methods.
Keywords- Medical image registration; crest lines; curve
matching; super-curves; rigid transformation; Iterated-ClosestPoint.

I.

INTRODUCTION

Data generated by various scan mechanisms for medical
diagnoses provide playground for researchers of scientific
visualization. 3D visualization and geometric analysis of
these data, in other hand, facilitate the medical procedures. In
this paper the problem of registering two skulls of the same
person that are obtained at different times, resolutions and
devices using feature lines such as crest lines that are under
rigid transformation is investigated. One of the earliest works
that have focused on this topic was done by INRIA group
[1], [2]. The two set of curves to be matched were fitted
using B-Splines and geometric hashing was used to find the
correspondence of the point of the test curves to that of the
model curves. Transformation between two sets of curves
was then found by majority voting on all candidates
transformations determined by the corresponding pair of
points. The method is based on local information of the
curve. Other majority voting methods are voting on the
correspondence determined by, for example, semidifferential invariants [3] or Iterated Closest Point (ICP) [21]
based voting [4]. An alternative way is to consider curve
registration as curve matching, where the structure of the
curve is studied rather than the local information.
Curve matching as a general problem is to find the
similarity or dissimilarity between two curves as well as to
978-0-7695-3789-4/09 $25.00 © 2009 IEEE
DOI 10.1109/CGIV.2009.62

475

II.

translation, since no orthogonal constraint is ensured on the
rotation matrix. Thus the super-curves method cannot be
directly applied to the skull registration under rigid
transformation.

SUPER-CURVE MODEL

The super-curves concept in [9] was originally proposed
for registering 2D images. As it is reasonably convenient to
extend the method to 3D scenario, it is depicted here as an
extension to 3D cases. It is supposed that the model curve P
~
and test curve P are under an affine transformation with
each other. Thus they can be registered and superimposed
upon each other either with respect to the model or to the test
to form a single curve called super-curve. Therefore a single
B-Spline can be fitted to this super-curve and the underlying
affine transformation can be recovered simultaneously by
solving the following minimization problem
~
~
~
~ ~ ⎡ Pa ⎤
~ ~ ⎡ Pa x ⎤
~ ~ ⎡ Pa y ⎤
min
+ Hd y − ⎢ ~ ⎥ + Hd z − ⎢ ~ z ⎥
~ ~ Hd x − ⎢ ~ ⎥
d ,a
⎣ Px ⎦
⎣ Pz ⎦
⎣ Py ⎦
2

2

III.

A. Rigid Super-Curves

(1)

[

(

~ ~ ~
C = PT P

]

)

−1

(

~
~ ~ ~
P T H 1 , D = H T H − H 1T PC

)

−1

~
~ ~ ⎡H ⎤
H 2 , H = ⎢ ~1 ⎥
⎣⎢ H 2 ⎦⎥

⎧
−1 T ~
⎪
T
⎪C = P P P H 1
~T ~ ~T
⎪
⎨ D = H H − H 1 PC
⎪
~
~ ⎡ H1 ⎤
⎪H
=⎢~ ⎥
⎪
⎣⎢ H 2 ⎦⎥
⎩

(

(

)

)

−1

~
H2

)

−1

(

]

~
~
~~
P T H 2 , D = H T H − H 2T PC

(

(2)

~
~
a~y , d y , a~z , d z can be similarly calculated. Evidently, the
super-curve is only represented by a single B-Spline
~
determined by the control points d and the super resolution
is achieved by using two superimposed curves.

~
⎧⎪a~x = CDPx
⎨~
~ ,
⎪⎩d x = DPx

[

(4)

)

−1

⎡H ⎤
H1 , H = ⎢ 1 ⎥
⎣H 2 ⎦

(5)

In case of this research it is assumed the two curves are
~
fully matched, it results in H = H . Thus the rotation matrix
to register the test curve to the model curve can be calculated
using R = VU T , where UAV T forms the singular
~ ~T
decomposition of the matrix d − d (d − d ) . d~ , d are the
mean values of d~ , d respectively [35]. The translation vector
~
is therefore t = d T − Rd T . This can be directly extended to
register identical number of curves in both the model and the
test. Note that this is a closed-form solution for recovering
the rigid transformation.
Basically rigid super-curves make the advantage of
consistent representation of B-Splines for both model and
test curves, whilst finding the underlying transformation
between them in the context of registering 3D point sets [16].
However, it differs from ICP in the way that the points used
here are control points of the B-Spline that convey the
structural information of the curve rather than just local
points. A method that is conceptually close to our method is
to match sets of 3D line segments that are designed for
polygon curves [17]. However, the idea of representing line
segment by starting point, length, and angle of the line may
not be suitable for the research problem of this study.
Rigid super-curves discussed here cannot be directly
applied to practical problems as most of them involve two
sets of curves that are in different number. The curves may
be partially matched to each other, or even appear certain
scale of mismatch and deformations from one another.
Hence, a two stage algorithm is brought out to register two
sets of curves based on rigid super-curves.

~ ~
~
a~x = CDPx , d x = DPx ,

(

]

~
~
~ ~ ~
d = D Px , Py , Pz , d = D Px , Py , Pz

test curve and the model curve being registered to the test.
This leads to a closed form solution

C = PT P

~

Suppose the model curve P and test curve P are under
a rigid transformation that only involves rotation and
transformation. Applying super-curves method to both P
~
and P , we obtain two sets of control points d for the model
~
and d for the test

2

P = (Px , Py , Pz ,1)
where the curve
, control points
T
d = (d x , d y , d z )
A = [a x a y a z l ]
, and affine transform
and
T
l = (0,0,0,1) are with respect to the model. Similarly,
~ ~ ~
P, d , A
are
with
respect
to
the
test
and
~
~T ~T T
~
~T
T
−1
obviously P = AP and A = A . H = H 1 H 2 is the
coefficient matrix determined by the B-Spline that is fitted to
~
~
the super-curve. H 1 and H 2 respectively correspond to the

[

RIGID SUPER CURVES REGISTRATION

In this section the idea of super-curves to the problem of
rigid registration is explained and a method called RigidSuper-Curves is put forward. The basic concept is to use the
B-Spline fitting of the SC and registration is then found
between the two sets of control points that represent model
curves and test curves respectively.

(3)

From (3) it indicates that the affine transformation
between two curves is intrinsically embedded in the structure
of the method. However, this scheme cannot restore those
rigid transformations that only involve rotation and

476

)

c) Align the test curves to the model curves using the
transformation Ts obtained in (b) and calculate the distance
between the model and the test.

B. The Two-Stage Registration Algorithm
Firstly, the two sets of curves are pre-aligned based on
the dissimilarity measurement for all possible pair of curves
being considered as full match. Then partial match is
achieved and alignment is refined in an iterative manner
similar to ICP.
1) Pre-alignment. In this stage a cost matrix for all
possible pair of curves is computed based on a definition for
dissimilarity between two curves. An instant choice is to
combine the Mean-Squared-Error (MSE) between the fitted
B-Spline and the super-curve and the alignment error under
rigid transformation between two fitted ~B-Splines. Consider
that the model curve P and test curve P are fully matched,
i.e. the two ends of the model curve correspond to the two
ends of the test ~curve respectively. Then the dissimilarity
between P and P is defined as

[

⎛ Hd− P P
x
y
(1 − λ )⎜⎜ 1
2M
⎜
⎝
+λ

((

)

~~ T
Hd − R Hd + t

Pz

)

]

2

+

[

~ ~ ~
H 2 d − Px
2N

~
Py

~
Pz

]

2

⎞
⎟
⎟
⎟
⎠

d) If the distance between two sets of curves increases
or the maximum number of iterations is met, then stop
aligning and output the final transformation Tc . Otherwise,
reinitialize the routine to step (a).
P

A
O

l1

C
Q

l2

B

(6)

Figure 1. Best Match of Two Curves. The best match of curve l1 and l2 is
the matched segments OQ from l1 and AC of l2

T 2

In step (a), the two curves are previously aligned in stage
1. For example, curve l1 and l2 are aligned as shown in
figure 1. The distances of the two end points of the curve l1
to the curve l2, |PA| and |QC|,, and the distances of the two
end points of l2 to l1, |AO| and |BQ| are calculated based on
minimum distance between the point to the curve. The
associated points are also marked so that we have (P, A) or
(O, A) for the choice of start points and (Q, C) or (Q, B) for
end points for the matched segments on both l1 and l2. If
|PA|>|OA|, then (O, A) is chosen for the starting points on l1
and l2 respectively. Otherwise, (P, A) is selected. The similar
selection can be done for the end points.
For those model curves that have no corresponding test
curves, a search is run on the test curves that have no
corresponding model curves and only the mutual
correspondence is added as a new correspondence to the
record, during which a modified Hausdorff distance [9] is
referred. Then it is marked as an approved curve
correspondence and their optimally-matched segments can
be similarly obtained.

M +N

~
where M , N are the number of points in curve P and P
correspondingly λ ∈ [0,1] is the weight that balances the
effects between the MSE of the B-Spline and super-curve
and (the first term in (6)) and the MSE of rigid alignment
(the second term in (6)).
The cost matrix is then passed to a linear assignment
algorithm (Hungarian Algorithm is adopted here and code
courtesy of Mr. Cao [18]) to choose from test curves a best
match for each of the model curve. A model curve can be
assigned no match if the lowest cost is still too high
according to the linear assignment. As all effective matches
of curves are obtained, an initial alignment between the
model and the test can be established according to our rigid
super-curves method.
2) Iterated Closest Curve.The initial alignment between
the model curves and the test curves is achieved under the
assumption that for any two curves to be matched they are
fully matched. Since this is not the case most of the time, an
iterative algorithm similar to ICP is indicated here in order
to enhance the alignment. The overall scheme of the
proposed algorithm is described as follows.
a) Given the correspondences between the model
curves and test curves and their current alignment Tc , for

IV.

EXPERIMENTAL RESULTS AND DISCUSSION

The digitized human skull data used in this research is
obtained by CT scan of real subjects. The visualization of 3D
isosurface of skull is extracted using Marching Cubes [19]
with a contour value of 1200. Two sets of crest lines of a
same skull are then identified with a modified multi-scale
Marching Line methods implemented as an add-on
component of the experiment, where original ML algorithm
[20] is carried out with Gaussian Scale Space operators. The
extracted crest lines with coarse-scale (red curves) and finescale (blue curves) are shown in Figure 2(a) where only
curves whose length are longer than a predefined threshold
value of 30 are remained for display. Coarse crest lines are
considered as the model curves, and fine crest lines are

each of the model curves find the segment of the test curves
that are best matched with it.
b) Compute the rotation and the translation between
the matched segments using our rigid super-curves method.
Denote the transformation as Ts and set the current
alignment as Tc = TsTc .

477

artificially rotated as the test curves to be aligned with the
model (as shown in Figure 2(b)).

Figure 3. Affine registration using super-curves method (a) Affine
registration of same data: the model and the test curves are the same,
coarse-scale crest lines in Fig. 2.(a), and the test curves are rotated with the
same matrix provided in Fig. 2(b). (b) Affine registration of the data in Fig.
2(b): the test data is distorted after registered to the model.

Figure 2. Curves Registration. (a) Original coarse-scale (red) and finescale (blue) crest lines. (b) Coarse curves are considered the model and fine
curves are considered the test and artificially rotated. (c) Pre-alignment in
stage 1 of the proposed method. (d) Result of (c) followed by ICP. (e) Finealignment in stage 2 based on (c). (f) Result of (e) followed by ICP.

The two-stage rigid super-curves registration algorithm is
applied to the data shown in Figure 2(b). The pre-alignment
result after the first stage is shown in Figure 2(c) and the
refined result after ICC in Figure 2(e). It is also shown that
the pre-alignment has achieved a relatively reasonable match
even though the curves are considered fully matched whilst
they are not. A significant progress has been made with ICC
by the pre-alignment that the final alignment is both visually
promising (see Figure 2(e)) Results of applying ICP after
each stage are also shown in Figure 2(d) and (f).
Nevertheless, ICP failed to recover the transformation after
the pre-alignment in stage 1 (see Figure 2(c) and (d)). This is
because ICP suffers the problem of falling in local minima.
However, it can finely tune the alignment if the model and
the test are already matched in stage 2 (see Figure 2(e) and
(f)). It is well known that ICP will fail to align two data sets
if they are not close enough, as in the experiments.
As the second stage of the method, the convergent
behaviour of ICC suggests that the convergent result may not
be the optimal result for alignment (see Figure 4). The
optimal transformation matrix to align the test curves to the
model is picked up at iteration 2 in this case. This
experimental experience indicates that one of the stopping
criteria should be selected as the sign of increasing distance
between two curve sets.

Figure 4. Convergence of ICC, The optimal result of alignment using ICC
is achieved at the iteration 2.

However, the effect of this fine tune stage is not much
obvious compared to rigid super-curves registration itself.
This also explains why there is a need to explore other
methods rather than just using ICP for curves registration.
The results of using affine registration based super-curves
method are also shown in Figure 3. If the two sets of curves
are exactly the same, then the transformation between them
can be correctly recovered as manifested in Figure 3(a).
However, as for the case in Figure 2(b), the aligned data in
Figure 3(b) is distorted and the recovered matrix suggests
that the method is more biased to recover the translational
part than the rotational part as in this experimental case the
test curves are only under a rotational transformation to the
model curves.

478

V.

CONCLUSION

[15] Gu, Y.H.I., Tjahjadi, T.: Efficient Planar Object Tracking and
Parameter Estimation Using Compactly Represented Cubic B-Spline
Curves, IEEE Trans. on Systems, Man, and Cybernetics--Part A:
Systems and Humans, Vol. 29, No.4, pp. 358-367 (1999)
[16] Arun, K.S., Huang, T.S., Blostein, S.D.: Least-Squares Fitting of Two
3D Point Sets, IEEE Trans. Pattern Analysis and Machine
Intelligence, vol. 9, pp. 698-700 (1987)
[17] Kamgar-Parsi, B.: Matching Sets of 3D Line Segments with
Application to Polygonal Arc Matching, IEEE Trans. on PAMI, Vol.
19, No.10, pp. 1090-1099 (1997)
[18] Cao, Y.: Hungarian Algorithm Matlab code, http: // www .
mathworks . com / matlabcentral / fileexchange / 20652
[19] Lorensen W. E., Cline, H. E.: Marching Cubes: A high resolution 3D
surface construction algorithm, In: Computer Graphics, Vol. 21, No.
4, (1987)
[20] Thirion J.-P., Gourdon A.: The 3D Marching Lines Algorithm,
Graphical Models and Image Processing, Vol. 58, Issue 6, pp. 503509 (1996)
[21] Besl, P.J., McKay, N.D.: A Method for Registration of 3D Shapes,
IEEE Trans. Pattern Analysis and Machine Intelligence, vol. 14, pp.
239--256 (1992)

In this paper the problem of registering two skulls using
crest lines is explored. The study presents a new method
called rigid-super-curves to match two sets of curves, based
on which a two-stage algorithm was proposed that can
efficiently and accurately align two sets of curves that are
under a rigid transformation involving rotation and
translation. Experimental results on real skull data show the
effectiveness and robustness of the proposed method. It is
theoretically more robust than the feature based methods,
more suitable for recovering rigid transformation than supercurves method, and more general than ICP which may fail by
falling in local minima.
ACKNOWLEDGMENT
The authors would like to acknowledge MOSTI
(Ministry of Science, Technology and Innovation) for
providing grant for the research number: 01-01-05-SF0045
under the Science Fund grant scheme.
REFERENCES
[1]

[2]

[3]

[4]
[5]

[6]

[7]

[8]

[9]
[10]
[11]

[12]

[13]

[14]

Gueziec, A., Ayache, N., INRIA SA.: New Developments on
Geometric Hashing for Curve Matching, In: IEEE Conf. on CVPR,
pp. 703-704 (1993)
Thirion, J. P., Gourdon, A.: The 3D Marching Lines Algorithm and
its Application to Crest Lines Extraction, Rapport de Recherche
INRIA, 1672 (1992)
Pajdla, T., Van Gool, L.: Matching of 3-D Curves using Semidifferential Invariants, In; Fifth Intl. Conf. on Comp. Vision, pp. 390395 (1995)
Caunce, A., Taylor, C.J.: 3D point distribution models of the cortical
sulci, In: Sixth Intl. Conf. on Comp. Vision, pp. 402-407 (1998)
Frenkel, M., Basri, R.: Curve Matching Using the Fast Marching
Method, Lecture Notes in Computer Sciences, Vol. 2683/2003, pp.
35-51 (2003)
Gdalyahu, Y., Weinshall, D.: Flexible Syntactic Matching of Curves
and Its Application to Automatic Hierarchical Classification of
Silhouettes, IEEE Trans. on PAMI, Vol.21, No. 12, pp. 1312-1328
(1999)
Buchin, K., Buchin, M., Wang, Y.: Exact algorithms for partial curve
matching via the Fréchet distance, In: Nineteenth Annual ACM SIAM Symposium on Discrete Algorithms, pp. 645-654 (2009)
Deriche, R., Faugeras, O.: 2-D Curve Matching Using High
Curvature Points :Application to Stereo Vision, In: 10th Intl. Conf. on
Pattern Recognition, Vol. 1, pp. 240-242 (1990)
Xia, M., Liu, B.: Image Registration by “Super-Curves”, IEEE Trans.
on Image Processing, Vol. 3, No.5, pp. 720-732 (2004)
Cakmakov, D., Celakoska, E.: Shape Matching of Digital Curves, In:
4th Intl. Symp. On Imag. Sign. Proce. Anal., pp. 457-461 (2005)
Cohen, F.S., Huang, Z., Yang, Z.: Curve Recognition Using B-spline
Representation, In: IEEE Workshop on Applications of Computer
Vision, pp. 213-220 (1992)
Cohen, F.S., Huang, Z., Yang, Z.: Invariant Matching and
Identification of Curves Using B-Splines Curve Representation, 1995,
IEEE Trans. On Image Processing, Vol. 4, No.1, pp. 1-10 (1995)
Krebs, B., Korn, B., Wahl, F.M.: 3D B-Spline Curve Matching for
Model Based Object Recognition, In: Intl. Conf. on Image
Processing, Vol. 2, pp. 716-719 (1997)
Wang, Y., Teoh, E.K.:A Novel 2D Shape Matching Algorithm Based
on B-Spline Modeling, In: Intl. Conf. on Image Processing, Vol.1, pp.
409-412 (2004)

479

