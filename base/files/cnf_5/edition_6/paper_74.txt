Surface Modelling Using Fourth Order Geometric Flows ∗
Guoliang Xu

Qing Pan

State Key Lab of Scientiﬁc and Engineering Computing, Institute of Computational Mathematics,
Academy of Mathematics and System Science, Chinese Academy of Sciences, Beijing, China

Abstract
We use two fourth order geometric partial diﬀerential
equations to eﬃciently solve several surface modelling
problems, including the surface blending, the N -sided
hole ﬁlling and the free-form surface ﬁtting with the
G1 boundary continuity. The nonlinear equations used
include the surface diﬀusion ﬂow and the Willmore
ﬂow. These nonlinear equations are discretized using
the mixed ﬁnite element method based on the combination of the Loop’s basis and the linear basis. The
proposed approach is simple, eﬃcient and gives very
desirable results.
Key words: Geometric PDEs; Surface blending; N sided hole ﬁlling; Free-form surface ﬁtting; Finite element method.

1

Introduction

We use the curvature driven geometric partial diﬀerential equations (GPDEs) to solve several surface modelling problems. The GPDEs we use include the surface diﬀusion ﬂow and the Willmore ﬂow. These equations are nonlinear and geometry intrinsic, i.e., they do
not depend upon any particular parametrization. The
problems we solve include the surface blending, the N sided hole ﬁlling and the free-form surface ﬁtting with
the G1 boundary continuity.
For the problems of the surface blending and the N sided hole ﬁlling, we are given triangular surface meshes
of the surrounding area. Triangular surface patches
need to be constructed to ﬁll the openings enclosed
by the surrounding surface mesh and interpolate its
boundary with the G1 continuity (see Fig. 1.1). For
the free-form surface ﬁtting problem, we are given a set
of points. We construct a surface which interpolates the
points with the speciﬁed G1 continuity. The free-form
surface ﬁtting problem is the most general, including
the surface blending and the N -sided hole ﬁlling as its
∗ Project

support in part by NSFC grant 10371130 and National Key Basic Research Project of China (2004CB318000).

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

special cases.
There are basically two classes of approaches for solving a GPDE on any domain. One class is based on
the generalized ﬁnite divided diﬀerences, the other is
based on the ﬁnite element method (see [2, 8, 10, 13]).
The approach we adopt in this paper is based on the
mixed ﬁnite element method. The generalized ﬁnite
divided diﬀerence method has been used in [23]. It is
well known that the ﬁnite divided diﬀerence method
is simpler and easier to implement, but lacks the convergence analysis. The ﬁnite element method is not
as simple as the ﬁnite divided diﬀerence method, but
is based on the well developed mathematical foundation. In this paper, we use the mixed ﬁnite element
method consisting of using the Loop’s subdivision basis for representing the surfaces and the linear basis for
representing the curvatures. Since the Loop’s subdivision surface is C 2 (except for the extraordinary vertices
whose valences are not 6), its curvature is continuous,
we use the C 0 linear element to approximate the curvature.
Our two-step strategy for solving these surface modelling problems is as follows: First we construct an initial triangular surface mesh (“ﬁller”) using any of a
number of automatic or semi-automatic free-form modelling techniques (see [1, 12, 15]). One may also interactively edit this “ﬁller” to meet some weak assumptions for an initial solution shape. This “ﬁller” may
be bumpy or noisy, and in general it does not satisfy
the smoothness boundary conditions, though it may
roughly characterize the shape of the surface to be constructed. Second we deform the initial mesh by solving
a suitable geometric ﬂow. Unlike most of the previous
free-form modelling techniques, our approach treats the
smooth boundary continuity constraints without any
prior estimation of normals or derivative jets along the
boundary. In this paper, we focus our attention on solving the GPDEs with boundary continuity constraints,
rather than the construction of the initial ﬁller mesh.
Previous Work. Earlier research on using PDEs to
handle the surface modelling problems can be traced
back to Bloor et al’s work at the end of the 1980s

(a)
(b)
(c)
Figure 1.1: (a) shows a bunny mesh with broken ears. (b) shows an initial ﬁller construction. (c) is the
faired ﬁller surface, after 3 iterations, generated using the Willmore ﬂow. The time step-length is chosen to
be 10−5 .

([3, 4]). The basic idea in their work is to use biharmonic equations on a rectangular domain to solve
the blending and the hole ﬁlling problems. The biharmonic equation on a rectangular domain is linear, so
can be solved easily. However, the equation is not geometry intrinsic and its solution (the geometry of the
surface) depends on the concrete parametrization. Furthermore, these methods are inappropriate for modelling surfaces with arbitrary shaped boundaries. In
contrast, the equations we use in this paper are geometry intrinsic.
The mean curvature ﬂow (MCF) and its various variations have been intensively used to smooth or fair
noisy surfaces (see [2, 7, 9, 14] for references). MCF has
been shown to be the most important and eﬃcient ﬂow
for fairing or denoising surface meshes. However, for
the surface modelling or design problem, MCF cannot
achieve the G1 smooth joining of the diﬀerent patches.
Recently, the fourth order geometric ﬂows have been
used to solve the surface blending and the free-form
surface ﬁtting problems (see [6, 17, 18, 23]). In [17], fair
meshes with the G1 conditions are created in the special
case where the meshes are assumed to have the subdivision connectivity, using the surface diﬀusion ﬂow. In
this work, the local surface parametrization is used to
estimate the surface curvatures. The later paper [18]
uses the same equation for smoothing meshes while satisfying the G1 boundary conditions. The outer fairness
(the smoothness in the classical sense) and the inner
fairness (the regularity of the vertex distribution) criteria are used in their fairing process. The ﬁnite element method is used by Clarenz et al [6] to solve the
Willmore ﬂow equation, based on a new variational formulation of the ﬂow, for the aim of surface restoration.
Main Results. We use the surface diﬀusion ﬂow and
the Willmore ﬂow for solving each of the surface modelling problems. We propose a nice stratagem for the

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

treatment of the boundary conditions, a beautiful combination of the Loop’s subdivision space and the linear
element space. The proposed approach is simple and
easy to implement. It is general, solves several surface
modelling problems in the same manner, and gives very
desirable results for a range of the complicated freeform surface models. Furthermore, it avoids estimating
normals or tangents or curvatures on the boundaries.
The rest of the paper is organized as follows: Section
2 describes the nonlinear GPDEs used in this paper.
Section 3 gives the variational form of the GPDEs. In
section 4, we give the details of the discretization of the
variational forms in both the spatial and the temporal
directions. Examples to illustrate the diﬀerent eﬀects
achievable from the solutions of the diﬀerent GPDEs
are given in section 5. Section 6 concludes the paper.

2

Partial Diﬀerential Equation
Models

Let us introduce some terminologies. Let M ⊂ IR3 be a
two-dimensional manifold, and {Uα , pα } be the diﬀerentiable structure. The mapping pα with p ∈ pα (Uα )
is called a parametrization of M at p.
Laplace-Beltrami Operator and Mean Curvature. Denote the coordinate Uα as (ξ1 , ξ2 ), then for
f ∈ C 2 (M ), the Laplace-Beltrami operator ∆M applying to f is given by (see [22])
∆M f

=

1
√
g

ij

∂
∂ξi

√

g g ij

∂f
∂ξj

,

(2.1)

where gij = tTi tj , G = (gij )2i,j=1 , G−1 = (g ij )2i,j=1 and
∂p
ti = ∂ξ
. Then we could derive, from (2.1), that (see
i
also [21], page 151)
∆M p = 2H(p) ∈ IR3 ,

where H(p) is the mean curvature normal. Let
T

H(p) = H(p), n(p) = n(p) H(p).

(2.2)

Then H(p) is the mean curvature.
Gradient. Let f be a smooth function on M . Then
the gradient operator ∇M acting on f is given by (see
[5], page 102)
∇M f = [ t1 , t2 ]G−1 ∇f ∈ Tp M,

(2.3)

T

∂f (p(ξ1 ,ξ2 )) ∂f (p(ξ1 ,ξ2 ))
∈ IR2 and
where ∇f =
,
∂ξ1
∂ξ2
Tp M is the tangent space of M at p. For a vectorvalued function F = [f1 , f2 , f3 ]T ∈ IR3 , we deﬁne

∇M F =
∇M F

∇M f1

2

+ ∇M f2

2

+ ∇M f3 2 .

In particular,
∇M p = [ t1 , t2 ]G−1 [ t1 , t2 ]T , p ∈ M.

M

The Willmore ﬂow evolves surfaces in such a way as
to reduce the total quadratic curvature. The existence
and uniqueness of the solutions for this ﬂow is given in
[19].

Variational Form

To solve the fourth order equations (2.6) and (2.7) for
the unknown p, we solve the following two coupled second order equations for the unknowns p and H(p),

(2.4)
∂p
= −∆M [H(p)]n(p),
∂t
1
H(p) = n(p)T ∆M p,
2

Let φ ∈ IR and F ∈ IR3 be a smooth function and a
vector-valued function on M , respectively. Then it is
easy to derive that
∇M (F φ) = φ∇M F + F (∇M φ)T .

(2.5)

Green Formula. Let T be a region on M with boundary Γ and let g be a smooth function on T , then we have
the Green formula
T

g∆M f dp +

T

∇M g∇M f dp =

Γ

gDν f ds,

where ν ∈ Tp M is the outward normal of Γ, Dν f =
ν T ∇f .
Surface Diﬀusion Flow (see [18]). Let M0 be a
compact immersed orientable surface in IR3 . The surface diﬀusion ﬂow (SDF) consists of ﬁnding a family
([17, 18]) {M (t) : t ≥ 0} of smooth orientable surfaces
in IR3 which evolve according to the following equation
∂p
∂t

= −[∆M H(p)]n(p), M (0) = M0 ,

(2.6)

∂M (t) = Γ, H(p(t))|p(t)∈Γ = H(p(0)|p(0)∈Γ .
The existence and uniqueness of the solutions for this
ﬂow is given in [11]. It is well known that the surface
diﬀusion ﬂow is area shrinking and volume preserving
for a closed surface.
Willmore Flow. Using the notations above, the the
Willmore ﬂow (WF) is deﬁned as
∂p
∂t

H 2 dσ.

W (M ) :=

3

[∇M f1 , ∇M f2 , ∇M f3 ]T ∈ IR3×3 ,

=

where K is the Gaussian curvature. Surfaces satisfying
the equation ∆M H + 2H(H 2 − K) = 0 are called Willmore surfaces or thin-plate surfaces, which arise as the
critical points of the functional (see [21], page 282)

2

= −[∆M H + 2H(H − K)]n, M (0) = M0 ,

∂M (t) = Γ, H(p(t))|p(t)∈Γ = H(p(0)|p(0)∈Γ ,
(2.7)

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

(3.1)

and
∂p
= −[∆M H(p)+2H(p)(H(p)2 −K(p))]n(p),
∂t
1
H(p) = n(p)T ∆M p,
2

(3.2)

respectively. Let φ, ψ ∈ H0 (M ) be test functions with
compact supports. Then, by the Green formula, we
have

M

M

nφ∆M Hdp = −

ψnT ∆M p dp =−

M

∇M [nφ]∇M H dp,

Trace ∇M (nψ)(∇M p)T dp,

M

where Trace[·] denotes the trace of a square matrix.
From (2.4) and (2.5), we can derive that
Trace ∇M (nψ)(∇M p)T = ψTrace ∇M (n)(∇M p)T .
Therefore, the variational form of (3.1) is as follows:
F ind (p, H(p)) such that
∂p
φ dp −
∇M [n(p)φ(p)]∇M H(p) dp = 0,
M ∂t
M
∀φ ∈ H01 (M ),
1
Hψ dp +
Trace[∇M (n)(∇M p)T ]ψ dp = 0,
2
M
M
∀ψ ∈ H01 (M ).
(3.3)

Similarly, the variational form for the Willmore ﬂow is
F ind (p, H(p)) such that
∂p
φ dp −
∇M [n(p)φ]∇M H dp
M ∂t
M
+
M

(1)

lij

M

1
Trace[∇M (n)(∇M p)T ]ψ dp
2 M
= 0, ∀ψ ∈ H01 (M ).
(3.4)

Let p1 , · · · , pN0 be the interior control vertices to be determined, pNk−1 +1 , · · · , pNk be the k-th ring neighbor
control vertices, for k = 1, 2, · · ·. For each control vertex pi of the discrete surface mesh, we associate with
a basis function φi (p) for representing the surface and
a basis function ψi (p) for representing the mean curvature. Suppose φi (p) and ψi (p) have compact supports
and the sizes of their supports are γ and δ, respectively. Then the surface and the mean curvature are
represented as
n

n

φj (p)pj ∈ IR3 ,

ψj (p)Hj ∈ IR.

H=

j=1

j=1

Substituting these into (3.3) and (3.4), taking the test
functions φ and ψ to be φi and ψi , respectively, and
∂pj (t)
noting that ∂t
= 0 for j > N0 , we obtain the following matrix form of (3.3) and (3.4):
(1) ∂P (t)
MN0 N∂t0
(2)
MN2δ HN2δ (t)

−
+

(1)
LNγ+δ−1 HNγ+δ−1 (t) =
(2)
LNγ+δ PNγ+δ (t) = 0,

0,

(4.1)

Hj (t)

[pT1 (t), · · · , pTj (t)]T ∈ IR3j ,

=

T

(1)

(1)

MK = mij
(1)

(1)

LK = lij

N0 ,K
ij=1
N0 ,K
ij=1

(2)

(2)

, MK = mij
(2)

,

(2)

LK = lij

(1)

(1)

lij

M

=
M

φi φj dp I3 ,

(2)

mij =

∇M (nφi )∇M ψj dp

M

(2)

+ LN0 PN0 (t) = B (2) .

(4.2)

(2)

∇M n
∂n
∂ξi

=

∂n ∂n
G−1 [t1 , t2 ]T ,
,
∂ξ1 ∂ξ2

=

t1i × t2 + t1 × ti2
t 1 × t2

−

(t1 × t2 )(t1 × t2 )T (t1i × t2 + t1 × ti2 )
,
t1 × t2 3
2

p
. The proposed scheme needs the
where tij = ∂ξ∂i ∂ξ
j
value of the mean curvature at each vertex. For an
ordinary vertex, the Loop’s subdivision surface is C 2 ,
the curvature can be computed directly from the surface. If the vertex is extraordinary (its valence is not
6), the mean curvature is computed by a ﬁtting scheme
proposed in [22].

4.2

Finite Element Spaces

Before introducing the used ﬁnite element spaces, we
ﬁrst give a simple lemma.

˚i ∩ T
˚j = ∅, ∂(Tl ) = Γl ,
Tl , T

M=
l=1

N1 ,K
ij=1
N1 ,K
ij=1

,

,

and
mij =

(1)

− LN1 HN1 (t) = B (1) ,

m

j

[H1 (t), · · · , Hj (t)] ∈ IR ,

=

(1) ∂PN0 (t)
∂t
(2)
MN1 HN1 (t)

MN0

Lemma 4.1 Suppose M consist of piecewise smooth
patches Tl with boundaries Γl , l = 1, · · · , m:

where
Pj (t)

ψi (∇M φj )T [∇M (n)]T dp .

(1)

Spatial Direction Discretization

p=

M

Note that MN0 and MN1 are symmetric and positive
deﬁnite matrices. The integrations in the matrices are
computed by the Gaussian quadrature formula (see [2]
for details). The gradient of n is computed as

Solution of the GPDEs

4.1

1
=
2

Moving the known terms of (4.1) to the right-handed
side, the system can be rewritten as

Hψ dp +

4

∇M (nφi )∇M ψj − nψj (H 2 − K)φi dp,
for WF,

(2)
lij

2nφH(H 2 − K) dp= 0, ∀φ ∈ H01 (M ),

M

=

ψi ψj dp,
for SDF,

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

˚l denotes the interior of Tl . If the surface norwhere T
mal n is a constant vector on each of the patches Tl ,
then the second terms of (3.3) and (3.4) vanish.
The lemma implies that if we use a piecewise linear
surface patch to represent the surface M , the second
equations of (3.3) and (3.4) always give zero solutions.
Therefore, the linear element space could not be used to
represent the surface M under the current variational
formulations.

Now let us introduce two ﬁnite element spaces Eh
and Fh for representing the surfaces and the curvatures,
respectively. Let
Eh = span[φ1 , · · · , φn ], Fh = span[ψ1 , · · · , ψn ],
where the basis functions φi and ψi are deﬁned for the
vertex pi . φi is deﬁned as the limit function of the
Loop’s subdivision scheme for the control values one
at pi and zero at other vertices. It is known that φi
is a quartic box spline. The size γ of the support of
φi is two. ψi is a piecewise linear function which has
the values one at the vertex pi and zero at other vertices. Hence the size δ of the support of ψi is one.
Since ψi is a piecewise linear function, its evaluation
is straitforward. For evaluating φi , we employ the fast
computation scheme proposed by Stam [20].

4.3

Temporal Direction Discretization
(n)

Suppose we have the approximate solutions PN0 =
(n)

PN0 (tn ) and HN1 = HN1 (tn ) at tn . Then we construct
(n+1)

(n+1)

and HN1
for the
the approximate solutions PN0
next time step tn+1 = tn + τ (n) using a semi-implicit
∂P
Euler scheme. That is, we replace the derivative ∂tN0
by [PN0 (tn+1 ) − PN0 (tn )]/τ (n) , and the matrices M (1) ,
M (2) , L(1) and L(2) in (4.2) are computed using the
surface data at tn . Such a treatment yields a linear
(n+1)
and
system of the equations with the unknowns PN0
(n+1)

HN1 .
The coeﬃcient matrices of the system are highly
sparse, and hence an iterative method for solving such a
linear system is desirable. Though M (1) and M (2) are
symmetric and positive deﬁnite, the total coeﬃcient
matrix of the system is not. We use Saad’s iterative
method [16], named GMRES, to solve the system. The
experiment shows that this iterative method works very
well.

5

Examples

In this section, we give several examples to show how
the GPDEs are used to solve the diﬀerent modelling
problems in a uniform fashion.
1. Surface Blending
Given a collection of surface meshes with boundaries,
we construct a fair surface to blend the meshes with
the speciﬁed G1 continuity at the boundaries. Fig 5.1
shows the case, where three cylinders to be blended are
given (ﬁgure (a)) with an initial G0 construction (ﬁgure
(b)) using [1] with additional noise. The fair blending

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

surfaces (ﬁgures (c) and (d)) are generated using SDF
and WF, respectively. These ﬁgures clearly show the
G1 smoothness and the diﬀerence of the blending surfaces. SDF produces a thinner surface than WF.
2. N -sided Hole Filling
Given a surface mesh with a hole, we construct a fair
surface to ﬁll the hole with the speciﬁed G1 continuity
on the boundary. Fig 1.1 shows such an example, where
a bunny mesh with broken ears is given (ﬁgure (a)). An
initial G0 construction of the ears is shown in (b) with
some noises added. The fair blending surface (ﬁgures
(c)) is generated using WF.
3. Smooth Surface Construction from Triangular Mesh
Fig. 5.2 shows the free-form ﬁtting approach from
an input triangular mesh, where (a) shows the input
surface triangular mesh with the G1 continuity requirement (see (a)). Figure (b) shows an initial construction
of the surface mesh. (c) is the faired mesh by SDF, after 3 iterations with τ (n) = 0.00003. The obtained
surface interpolates the input points and exhibits the
G1 smoothness everywhere.

6

Conclusions

We propose the use of the ﬁnite element method to
solve two fourth order GPDEs based on simple variational formulations for solving several surface modelling
problems with the smooth boundary continuity conditions. The scheme has the following features: It produces very fair and desirable solution surfaces. It is relatively simple and easy to implement comparing with
previous ﬁnite element approaches [6]. Speciﬁcally, it
uses a uniform fashion to solve the surface blending,
the N -sided hole ﬁlling and the free-form surface ﬁtting problems. It treats the smooth boundary continuity problem in an easy and natural way as if there is no
boundary condition, and therefore avoids a prior estimation of normals or derivative jets on the boundaries.
The implementation shows that the proposed approach
works well for a wide range of surface models.

References
[1] C. Bajaj and I. Ihm. Algebraic surface design with hermite
interpolation. ACM Transactions on Graphics, 19(1):61–91,
1992.
[2] C. Bajaj and G. Xu. Anisotropic Diﬀusion of Surface and
Functions on Surfaces. ACM Transaction on Graphics,
22(1):4–32, 2003.
[3] M. I. G. Bloor and M. J. Wilson. Generating Blend Surfaces Using Partial Diﬀerential Equations. Computer Aided
Design, 21(3):165–171, 1989.

(a)

(b)

(c)

(d)

Figure 5.1: Blending three cylinders. (a) shows three cylinders to be blended. (b) shows the initial
construction with added noise. (c) and (d) are the faired blending meshes generated using SDF and WF,
respectively. These ﬁgures show the results after 50 iterations with the time step-length 0.001.

(a)

(b)

(c)

Figure 5.2: Interpolating points: (a) shows some input points and their triangulation. (b) shows an initial
construction of the surface mesh. (c) is the evolution result of SDF after 3 iterations with τ (n) = 3 ∗ 10−5 .

[4] M. I. G. Bloor and M. J. Wilson. Using Partial Diﬀerential
Equations to Generate Free-Form Surfaces. Computer Aided
Design, 22(4):221–234, 1990.
[5] M. P. Do Carmo. Diﬀerential Geometry of Curves and Surfaces. Englewood Cliﬀs, New Jersey, 1976.
[6] U. Clarenz, U. Diewald, G. Dziuk, M. Rumpf, and
R. Rusu. A ﬁnite element method for surface restoration
with boundary conditions. Computer Aided Geometric Design, 21(5):427–445, 2004.
[7] U. Clarenz, U. Diewald, and M. Rumpf. Anisotropic Geometric Diﬀusion in Surface Processing. In Proceedings
of Viz2000, IEEE Visualization, pages 397–505, Salt Lake
City, Utah, 2000.
[8] K. Deckelnick and G. Dziuk. A fully discrete numerical
scheme for weighted mean curvature ﬂow. Numerische
Mathematik, 91:423–452, 2002.
[9] M. Desbrun, M. Meyer, P. Schr¨
oder, and A. H. Barr. Implicit Fairing of Irregular Meshes using Diﬀusion and Curvature Flow. In SIGGRAPH99, pages 317–324, Los Angeles,
USA, 1999.
[10] G. Dziuk. An algorithm for evolutionary surfaces. Numerische Mathematik, 58:603–611, 1991.
[11] J. Escher, U. F. Mayer, and G. Simonett. The Surface Diffusion Flow for Immersed Hypersurfaces. SIAM Journal on
Mathematical Analysis, 29(6):1419–1433, 1998.
[12] G. Greiner. Variational design and fairing of spline surface.
Computer Graphics Forum, 13:143–154, 1994.
[13] L. Kobbelt, T. Hesse, H. Prautzsch, and K. Schweizerhof. Iterative Mesh Generation for FE-computation on Free Form
Surfaces. Engng. Comput., 14:806–820, 1997.

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

[14] M. Meyer, M. Desbrun, P. Schr¨
oder, and A. Barr. Discrete Diﬀerential- Geometry Operator for Triangulated 2manifolds. In Proceedings of Visual Mathematics’02, Berlin,
Germany, 2002.
[15] J Peters and M. Wittman. Smooth blending of basic surfaces using trivariate box spline. In IMA 96, The Mathematics of Surfaces. Dundee, UK, 1996.
[16] Y. Saad. Iterative Methods for Sparse Linear Systems. Second Edition with corrections, 2000.
[17] R. Schneider and L. Kobbelt. Generating Fair Meshes with
G1 Boundary conditions. In Geometric Modeling and Processing, pages 251–261, Hong Kong, China, 2000.
[18] R. Schneider and L. Kobbelt. Geometric Fairing of Irregular Meshes for Free-form Surface Design. Computer Aided
Geometric Design, 18(4):359–379, 2001.
[19] G. Simonett. The Willmore Flow for Near Spheres. Diﬀerential and Integral Equations, 14(8):1005–1014, 2001.
[20] J. Stam. Fast Evaluation of Loop Triangular Subdivision
Surfaces at Arbitrary Parameter Values. In SIGGRAPH
’98 Proceedings, CD-ROM supplement, 1998.
[21] T. J. Willmore. Riemannian Geometry. Clarendon Press,
Oxford, England, 1993.
[22] G. Xu. Discrete Laplace-Beltrami Operators and Their Convergence. Computer Aided Geometric Design, 21:767–784,
2004.
[23] G. Xu, Q. Pan, and C. Bajaj. Discrete Surface Modeling using Geometric Flows. TICAM Report 03-38, August 2003,
Institute for Computational Engineering and Sciences, The
University of Texas at Austin, 2003.

