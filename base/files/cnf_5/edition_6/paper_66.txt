Directional Smoothing of Triangular Meshes ∗
†

Huanxi Zhao

Guoliang Xu

LSEC, Academy of Mathematics and System Sciences,
Chinese Academy of Sciences,100080,Beijing, China

Abstract
In this paper, we propose a so-called directional
smoothing method based mean curvature ﬂow. The
selection of the diﬀusion direction is based on the descent of some energy functional. We show that the directional diﬀusion ﬂow is volume-preserving. Based on
the local directional diﬀusion ﬂow, we present a featurepreserving smoothing method. Finally, we provide a series of examples to graphically demonstrate the quality
of our results.
Keyword: Mesh smoothing, Volume-preserving,
Feature-preserving ﬂow, Surface diﬀusion

to a point. The other one is that some smoothing algorithms inevitably ”blurs out” important shape feature
such as ridges and corners often exist in mesh models
tempered with random noise. To compensate shrinkage of the surface and to additionally avoid undersired
deformations of the shape, many improvements and extensions of the Laplace smoothing for surface fairing
and denoising have been proposed.
To avoid the shrinkage, in [14], Taubin presented an
approach using two scale factors of opposite signs with
the negative factor of larger magnitude and by alternating the sign in the Laplace smoothing. The diﬀusion equation that Taubin used can be deﬁned by the
following equation:
∂t u = λ
∂t u = µ

1

Introduction

Meshes extracted from image data or supplied by
laser scanning devices often carry high-frequency noise
in the position of the vertices. Mesh smoothing or
denoising is a process dedicated removal of inevitable
noise in the measurements. The ultimate goal of mesh
smoothing is to produce highly smooth meshes eﬃciently for rendering, modelling and visualization, while
still preserving the basic overall shape and important
features of the original model.

1.1

Related work

The most common techniques for fairing and denoising
of surfaces are based on Laplace smoothing ([3],[7]),
but it is well known that Laplace smoothing methods suﬀer from a number of problems. Perhaps the
most serious one is the shrinkage problem when the
smoothing method is applied iteratively a large number of times, curves and surfaces eventually collapses
∗ Supported in part NSFC grant 10371130 and National Key
Basic Research Project of China (2004CB318000).
† e-mail:hxzhao@ustc.edu ,
xuguo@lsec.cc.ac.cn

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

S u,
S u,

or

ut = ut + λU(ut ),
ut+1 = ut + µU(ut ),

(1)
where λ > 0, µ < −λ, and U is the discrete LaplaceBeltrami operator or umbrella operator. Desbrun et al.
[4] proposed a simple strategy to allows maintaining the
original volume of the mesh, but this volume scaling
algorithm depends on the topological structure of the
smoothed mesh. Liu et al. [9] proposed a method that
keeps the volume of each star of a vertex and Vollmer
et al. [16] tackled the shrinking problem in the spatial
domain using their HC algorithm. The basic idea is
to push the vertices back to their previous positions.
Ohtake [11] extended the Laplace smoothing by combining it with mesh regularization.
Feature-preserving surface smoothing has also been
proposed more recently ([1],[2],[5],[10],[13],[18]). One
technique that was commonly used is the so-called
anisotropic diﬀusion, which was originally proposed
in image processing [12]. The idea behind these approaches is to modify the smoothing process in the
area with highly diﬀerent principle curvatures. Usually, such areas contain signiﬁcant shape information
such as corners and sharp edges, and the goal is to
preserve and enhance these features. Another closelyrelated technique is called bilateral ﬁltering ([6],[8]),
which was also originally proposed in image processing
[15]. The basic idea of bilateral smoothing is to com-

next. Inspired by Taubin’s idea, we remedy the
shrinkage problem using the so-called directional
diﬀusion ﬂow based on the mean curvature ﬂow:

bine a standard Gaussian ﬁlter and a feature-preserving
weighting function, a similarity function. The third
technique for feature-preserving smoothing is based on
a median ﬁlter that was well-known in image processing. A nice feature about the median ﬁlter is that it can
be ﬂawlessly implemented for polygonal meshes [17].

1.2

∂t u = (a, n)Hn, for any a = 0.

In our directional fairing process, the ﬂow above
contains forward and backward diﬀusion simultaneously, which diﬀers from the Taubin’s diﬀusion
approach. In fact, in section 2, we prove that the
ﬂow (3) is exact volume-preserving when it applies
to a closed surface.

Our contributions

In this paper, we propose the directional smoothing
according to the following reasons:
1. Directional noise data smoothing
Sometime, the noise on the mesh is of directional.
In other word, there are some noise in one part of
the mesh, and there are none in another part of the
mesh. In such a case, we should smooth this mesh
along the noised data direction. For example, see
Fig.1(a) The forward part of the sphere is noised,
but The back part is not noised. In Fig.1(b) is
the denoising result using our directional fairing
approach. In this paper, we propose the following
directional smoothing mode for this case,
∂t u = (a, n)Hn, a = 0,

3. Feature-preserving smoothing
As we known, GPDE (geometric partial diﬀerential equations) smooth model arises naturally from
minimizing an energy functional by applying variational calculus. For example, the mean curvature
ﬂow, a geometric PDE that minimizes surface area
functional
A(s) =

has been a popular choice for enforcing smoothness of the model, where dA is the diﬀerential
area form. Because the energy functional is global,
that is, the energy is deﬁned on the whole surface,
so this ﬂow may not be feature-preserving. If we
make an adjustment to minimize local energy functional instead of the global one, then perhaps we
obtain the feature-preserving smoothing method.
This idea is similar to the relation between polynomial spline and polynomial function in spirit. In
this paper, we propose a local direction diﬀusion
ﬂow to reach the goal of feature-preserving.

(2)

2
2.1
(b)

Figure 1: (a) with part noise added (b) the result of the directional smoothing

2. Exact volume-preserving
To avoid shrinking in the process of mesh smoothing, Taubin applied an un-shrinking step, as shown
in (1). Generally this approach produces good results, and no shrinkages occur during the process
of smoothing. The major drawback of this scheme
is that the volume is not preserved in anyway: the
volume can vary from one smoothing step to the

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

dA,
S

where H and n are the mean curvature and the
outer unit normal vector at u, respectively, and (,)
is inner product. a is determined by making some
energy functional decreased (for detail see section
2), In general, a is an approximation of the noised
data direction.

(a)

(3)

Directional smoothing
Some notation

Let us introduce some notations used throughout this
paper. To begin with, let Σ be a 2-dimensional submanifold of R3 . Consider a smooth map
X : Σ × (−ε, ε) → R3 ,
where Σt := X(Σ, t) ⊂ R3 is a regular surface for all
t ∈ (−ε, ε) and Σ0 = Σ, such a map is called a variation
of a surface Σ. Let e1 , e2 , e3 be an orthonormal frame
on the surface Σ ∈ R3 with e3 normal to the surface
at each point p ∈ Σ. Throughout this text we use the
Einstein convention for sums. Since e1 , e2 , e3 form a
basis for R3 , we can write
dp = ωi ei , dei = ωij ej ,

(4)

where ωi ei , ωij ej are 1-form on Σ, and satisfy the structure equations
dωi =

−ωji

∧ ωj ,

dωji

=

ωki

∧

ωjk .

(7), we have
d(a, dp × n) = (a, dp × dn)
= (a, (ω1 e1 + ω2 e2 ) × (ω31 e1 + ω32 e2 ))

(5)

= (a, e3 )(ω1 ∧ ω32 − ω2 ∧ ω31 ))
= −2Hω1 ∧ ω2 (a, n).

Recall that when the Maurer-Cartan forms of R3 are
restricted to this frame, we have
w13
w23

=

h11
h21

h12
h22

w1
w2

,

(6)

where hij (i, j = 1, 2) are the coeﬃcients of the second
fundamental form of the surface Σt . Thus
h11 + h22
H=
.
2

2.2

(7)

Directional diﬀusion

In this paper, we deﬁne a directional diﬀusion based on
the mean curvature ﬂow
∂Σt
= (n, a)Hn,
∂t

(8)

where a = 0 is a given constant vector. For this diﬀusion ﬂow (8), we must answer the following two questions:
1. Can this mode (8) smooth the noised mesh?
2. Because there may exist an inverse linear diﬀusion
process in equation (8), the major problems associated with the inverse diﬀusion process must be
addressed: Is this model stable?
In section 2.4, we prove that the model can smooth
the noised mesh if we select a suitable vector a which
decreases some energy functional of the mesh. In addition, we will prove that the diﬀusion ﬂow (8) is volumepreserving in next section (2.3), so we believe that the
diﬀusion surface does not blow up.

2.3

Volume-preserving

(n, a)HdA.

2.4

The selection of diﬀusion direction

In this section, we determine a direction a such that the
ﬂow (8) smooths the noised meshes. As we have known,
a common method to guarantee excellent surface fairness is to minimize fairness functionals based on geometric invariants. Diﬀerent deﬁnitions of smoothing
term were proposed in the previous work. Some of the
best known fairness functionals in that category are

Σ

k12 + k22 dA or

H 2 dA
Σ

punishing large curvature values and
(
Σ

dk1
dk2
+
)dA
dˆ
e1
dˆ
e2

punishing the variation of the curvature. Here k1 and
k2 are the principal curvatures and eˆ1 and eˆ2 are the
corresponding principal directions. A minimization
process based on such fairing functionals leads to high
quality surfaces. In our paper, we select a direction to
minimize the following energy functional
H 2m dA

E(t) =

(10)

Σ

where m = 0, 1, 2, · · · . It is clear that E(t) is a geometric quantity whose deﬁnition is independent of parameterization.
Let us discretize diﬀusion equation (8) in time direction, we get a variation of Σ
Σt = Σ + t(n, a)Hn

Let V (t) denote the volume of the region enclosed by
Σt . When a closed surface Σt evolves according to (8),
it is easy to prove that the enclosed volume V evolves
according to
dV (t)
=
dt

Therefore, we have Σt H(a, n)ω1 ∧ ω2 = Σt H
(a, n)dA = 0, which implies the equation dVdt(t) = 0.

(11)

where t ∈ (−ε, ε). Since the Σt is a manifold, without
loss of generality, we may assume that the surface Σ
can be local parametrized. According to the diﬀusion
equation (11), the variation of Σt along normal n is

(9)

Σt (u, v) = Σ(u, v) + t(n(u, v), a)H(u, v)n(u, v). (12)

If we can prove dVdt(t) = 0, then the ﬂow is volumepreserving. In fact, considering the following diﬀerential 1-form (p, dn × a) and by means of (4), (5),(6) and

Let us compute the energy function of the surface Σt :

Σt

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

H 2m dA,

E(t) =
Σt

2

where

Lt Gt + N t E t − 2F t M t
H=
2(E t Gt − (F t )2 )

nu nv

(13)

a,b=1

is the mean curvature of the surface Σt , here
E t , F t , Gt , Lt , M t , N t are the coeﬃcients of the ﬁrst
and second fundamental form of Σt .
For simplicity, we omit parameter u, v and let h(u, v) :=
(n(u, v), a)H(u, v). By the deﬁnition of the coeﬃcients
of the ﬁrst and second fundamental form of Σt , we have
t

E

Ft

(Σtu , Σtu )

=
= E − 2thL + t2 (h2 nu nu + h2u )
= (Σtu , Σtv ) = F − 2thM
2

G

t

Lt
Mt
Nt

2

+ t (h nu nv + hu hv )
= (Σtv , Σtv )
= G − 2thN + t2 (h2 nv nv + h2v )
= −(Σtu , nu ) = −[L + thnu nu ]
= −(Σtu , nv ) = −[M + thnu nv ]
= −(Σtv , nv ) = −[N + thnv nv ].

(14)

=

t 2

g ab Ωa2 Ωb2

=
a,b=1

=

GM 2 − F M N + EN 2
.
EG − F 2

(25)

It follows from (23),(24) and (25) that
Env nv + Gnu nu − 2F nu nv
= (EG − F 2 )(4H 2 − 2K),

(26)

Lnv nv + N nu nu − 2M nu nv
= (EG − F 2 )(HK).

(27)

(15)
and
(16)
(17)
(18)
(19)

According to (13), we have
Ht =

2

E G − (F ) = EG − F − 2th(LG + N E
−2F M ) + t2 h2 (4LN − 4M 2 + Env nv + Gnu nu
−2F nu nv ) + t2 (Eh2v + Gh2u − 2F hv hu ) + o(t2 ) (20)
t

M (GL + EN ) − F (LN + M 2 )
(24)
EG − F 2
2

nv n v

According to the equations (14)-(19), we have
t

g ab Ωa1 Ωb2

=

−2H + 4th(K − H 2 + K
2 ) + Hn
,
1 − 4thH + Hd

(28)

where
Hn = t2 (h2 HK − Lh2v + N h2u − 2M hu hv ) + o(t2 ), (29)
and

and
Lt Gt + N t E t − 2F t M t = 2M F − LG − N E
+2th(4LN + 4M 2 − Gnu nu − Env nv +
2F nu nv ) − t2 (Lh2 nv nv + Lh2v + N h2 nu nu
+N h2u − 2M h2 nu nv − 2M hu hv )
2 2
+2t h (N nu nu + Lnv nv − 2M nu nv ) + o(t2 ).

Hd = t2 h2 (4H 2 + 2K) + t2 |∇h|2 + o(t2 ).
Therefore, we have

(21)

2
)
where limt→0 0(t
t2
note Σ1 = Σu , Σ2

= 0. For convenience, we de= Σv , n1 = nu , n2 = nv and
L = Ω11 ,M = Ω12 , N = Ω22 , g11 = E, g12 = g21 =
F, g22 = G.
By Weingarten equation, we have

Therefore,

=
=

Σ

(a,

(nk , nl ) = Σa,b=1 g Ωak Ωbl , k, l ∈ 1, 2.

(22)

ab

g Ωa1 Ωb1
a,b=1

=

Σ

GL2 − 2F LM + EM 2
EG − F 2

dE(t)
dt |t=0 <

(31)
0, we

n(2H)2m (6m(2H 2 − K) + 2H 2 )dA) < 0. (32)

a=−

2

=

h(2H)2m−1 (6m(2H 2 − K) + 2H 2 )dA.

The left-handed side of (32) get its minimal value at

Using equation (22), we obtain
nu nu

=

d
dE(t)
|t=0 = (
(H t )2m dA)|t=0
t
dt
dt
d
( (H t )2m E t Gt − (F t )2 )dudv)|t=0
dt D
d
d
( (H t )m |t=0 Hd + (H t )2m
Hd |t=0 )dA
dt
dt
Σ

Note that h := (n, a)H, if we require
have

nk = −Σ2i,j=1 g ij Ωik Σj , k = 1, 2.

ab

(30)

(23)

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

Σ

n(2H)2m (6m(2H 2 − K) + 2H 2 )dA.

(33)

In practise, we select a to satisfy inequality (32) and
make the ﬂow feature-preserving. In some special cases,
we may select vector a given by equation (33).

3

Feature-preserving fairing

In this section we formulate a feature-preserving
smoothing mode for triangulated surface. Curvature
energy minimization-based surface smoothing is based
on the observation that noise surfaces usually have a
large curvature than smooth surfaces. Previous surface smoothing sought shapes that minimize a global
measure of curvature, that is, these approaches took
as the surface fairing objective function the integral of
the smooth term( in general, they are the function of
the principal curvatures) over a whole surface, In this
paper, we propose a new feature-preserving algorithm
for surface smoothing which seeks shapes that descend
a local measure of curvature. Unlike the mean curvature ﬂow or Willmore ﬂow that minimize the energy
functional over the whole surface, our ﬂow descend the
energy functional deﬁned on the local surface patch.
That is, for each surface patch Si , we design a diﬀerent
diﬀusion ﬂow,

We integrate the ﬂow (34) with an explicit Euler
method that leads to an algorithm that is easy to
understand and implement. In terms of its vertices
x1 , x2 , · · · , xn , an explicit iterative integration step of
the local direction diﬀusion ﬂow (34) is given by

∂t u = βi n, u ∈ Si ,

P k+1 = P k − s(ai , n(P k ))H(P k )n(P k )

ψdA
Si

where S = i Si .
In our approach, we consider the following case: the
surface patch S(pi ) is an umbrella neighborhood (1ring neighborhood) of point pi with N1 (i) triangles,
the point on the surface patch S(pi ) evolves according
to the following equation:
∂P
= (ai , n)Hn, P ∈ S(pi ),
∂t

(34)

where ai in equation (34) is so deﬁned to make the
diﬀusion ﬂow (34) descend the following local energy
functional
H 2m dA.
(35)
E(t) =
S(pi )

Similar to computation in above section, and in order
to preserve the geometric feature, we select


|K| < ε;
 −|K|bi
1+K
ai =
(36)
K > ε;
− (1+H
2 )K bi ,

 0,
otherwise,
where bi =

||

S(Pi )
S(Pi )

n(2H)

2m

2

2

(6m(2H −K)+2H )dA

n(2H)2m (6m(2H 2 −K)+2H 2 )dA||

4

Numerical implement and result

where s is the adaptive site of the integration step, and
P ∈ S(xi ), i = 1, 2, · · · , n, ai is deﬁned in (36). In this
paper, the discretized mean curvature normal can be
derived as (see [5])

that minimizes the local energy functional
A(Si ) =

Figure 2: Notation used in equation(37) and
(38)

, and ε

is a user-deﬁned constant. According to our experiments, a better selection is ε = 0.001 ∼ 1. It is easy
to verify that the ﬂow (34) descend the local energy
functional (35).

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

Hi ni =

1
4Ai

(cot(αj ) + cot(βj ))(xj − xi ), (37)
j∈N1 (i)

where αj and βj represent the triangular angles opposite to the edge xi xj , N1 (i) the index set of the neighbors (or 1-ring neighbors) of xi , Ai is the area of 1-ring
neighbor of xi (see Fig.2).
A discretization algorithm of the Gaussian Ki at a
vertex xi depends on the vertices in a local neighborhood can be written as
1
Ki =
(2π −
ϕj ),
(38)
AM ixed
j∈N1 (i)

where AM ixed is the area of Voronoi region (see [10] for
detail), ϕj is the angle ∠xj xi xj+1 .
In Figure (3), we show how well our approach is able
to smooth a mesh and preserve the linear and nonlinear
feature of the mesh.

5

Conclusion and future work

We present a volume-preserving approach and a
feature-preserving approach based on directional
smoothing. But there are still two open problems. The
ﬁrst one is that equation (8) is volume-preserving, can
we design a volume-preserving numerical scheme. The
other is how to design an implicit integration scheme
for equation (34).

References

(a)

(b)

(c)

(d)

(e)

(f)

(g)

(h)

(i)

(j)

Figure 3: (a and g) original model, (b and f )
with a uniform noise added, (c and i) after 4
iterations, (d and j) after 6 iterations, (e) after
8 iterations, (f ) after 11 iterations. The time
step-length is chosen to be 0.005 and with m=0,
ε=0.05.

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

[1] Bajaj, C. and Xu, G. Anisotropic diﬀusion of subdivision
surfaces and functions on surfaces. ACM Transactions on
Graphics. 22[1], 4-32. 2003.
[2] Clarenz, U., Diewald, U., and Rumpf, M. Anisotropic geometric diﬀusion in surface processing, Proceedings of IEEE
Visualization. 397-405, 2000.
[3] Derose, T., Duchamp, T., Hoppe, H., McDonald,j.
and Stuetzle,W., Mesh optimization. Proc. of ACM
Siggraph’93,19-26, 1993
[4] Desbrun, M., Meyer, M., Schroder, P., and Barr, A. H., Implicit Fairing of Irregular Meshes Using Diﬀusion and Curvature Flow, Proc. of ACM SIGGRAPH’99, 317-324,1999.
[5] Desbrun, M., Meyer, M., Schroder, P., and Barr, A. H.,
Anisotropic feature-preserving denoising of height ﬁelds and
bivariate data, Graphics Interface, 145-152. 2000.
[6] Fleishman, S., Drori, I., and Cohen-Or, D., Bilateral mesh
denoising. Proc. of ACM SIGGRAPH’03, 950 - 953, 2003.
[7] Hubeli, A. Gross, M., Fairing of non-manifolds for visualization. IEEE Visualization, 407-414,2000.
[8] Jones, T. R., Durant, F., and Desbrun, M., Non-iterative,
feature-preserving mesh smoothing. Proc. of ACM SIGGRAPH’03, 943 - 949, 2003.
[9] Liu X., Bao H., Heng P., Wong T. and Peng Q., Constrained
Fairing for Meshes, Computer Graphics Forum, 20(2), pp.
115-123, 2001.
[10] Meyer, M., Desbrun, M., Schroder, P., and Barr, A. H.,
Discrete diﬀerential-geometry operators for triangulated 2manifolds. Berlin, Germany. Proceedings of Visualization
and Mathematics, 2002.
[11] Ohtake, Y., Belyaev, A., and Bogaevski, I. A., Polyhedral
surface smoothing with simultaneous mesh regularization.
GMP’00,229-237, 2000.
[12] Perona, P. and Malik, J. Scale-space and edge detection
using anisotropic diﬀusion. IEEE Transactions on Pattern
Analysis and Machine Intelligence 127, 629-639. 1990.
[13] Tasdizen, T., Whitaker, R. T., Burchard, P., and Osher, S.,
Anisotropic geometric diﬀusion in surface processing. IEEE
Visualization 2002, 125-132, 2002.
[14] Taubin, G., A Signal Processing Approach to Fair Surface
Design, Proc. of ACM SIGGRAPH’95, 351-358, 1995.
[15] Tomasi, C. and Manduchi, R., Bilateral ﬁltering for gray
and color images, Proceedings of IEEE ICCV, 836-846.
1998.
[16] Vollmer, J., Mencl, R., and Muller, H., Improved Laplacian
smoothing of noisy surface meshes. Computer Graphics Forum 183, 131-138, 1999.
[17] Yagou, H., Ohtake, Y., and Belyaev, A., Mesh Smoothing
via Mean and Median Filtering Applied to Face Normals.
GMP’02, 124–131, 2002.
[18] Zhang, H. and Fiume, E. L., Mesh smoothing with shape or
feature preservation, in Vince, J. and Earnshaw, R. (eds.),
pp.167-182, 2002.

