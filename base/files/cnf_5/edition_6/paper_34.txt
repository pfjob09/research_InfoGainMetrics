A Novel Linear Time Corner Detection Algorithm
M. Sarfraz, A. Rasheed, and Z. Muzaffar
Department of Information and Computer Science,
King Fahd University of Petroleum and Minerals,
Dhahran 31261, Saudi Arabia
{sarfraz,aimanr,zeeshanm}@ccse.kfupm.edu.sa

Abstract
In areas like pattern recognition, motion analysis,
outline capturing, reconstruction of objects etc, the
corners of an object play a very vital role as of
features for shape representation and analysis. We
have presented a novel scheme for detecting corners
of a planner object SRM05. The core of the algorithm
is based upon slope analysis. The complexity of our
algorithm is linear. It is very efficient and as well as
accurate. This scheme works for both, smooth planner
and irregular planner shapes. Test results of this
algorithm are compared with some commonly referred
corner detectors. The experiments show that this
method leads to good quality results and robustness to
noise with low computational cost.

1. Introduction
Corners in digital images give important clues for
shape representation and analysis. Generally objects
information can be represented in terms of its corners,
thus corner points play a very vital role in object
recognition, shape representation and image
interpretation [1,2,3,4,8,13,16]. Corners are robust
features in the sense that they provide important
information regarding objects under translation,
rotation and scales change. A shape can be presented
compactly, efficiently and accurately if corners are
detected aptly. Since the mathematical notion of a
corner is that of a high curvature point in planer curves
[7,8,9,10,11,13] therefore most of the corner detection
algorithms are based on curvature evaluation or
calculation of opening angle at each contour point .
This approach is effective for smoother shapes. Incase
of noisy shapes it detects false corners. Like other
approaches, we are also considering the corner point
as any point with a change in slope with respect to
previous state of slope. The enhancement is that we
have developed a scheme to reject false corners.

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

Moreover our algorithm can also detect non-sharp
corners and thus we have lower rate of false rejections.
This algorithm also preserves the shape of the object.
For literature review, reader is referred to
[6,7,9,10,11,12,14,18].
The paper is organized as follows. In Section 2
the new corner detection algorithm is explained.
Results are demonstrated and compared in section 3.
Finally section 4 concludes this paper.

2. Proposed Algorithm
The algorithm is composed of three phases. First
phase is the basis of the whole algorithm where
candidate points are detected using slope analysis.
Points detected in the first phase are passed to the
second phase for refinement, which is done by
removing adjacent points. This adjacency is based
upon a certain threshold. The third phase takes the
refined points and removes the cluster of points lying
on the jaggedly planner shape to give the final set of
corner points. The cluster of points is removed using
angular measurements. The tangents at each point for
slope analysis are calculated as follows [17]; the
tangent calculation is taken as a preprocessing step.

T0 = 2( P1 − P0 ) −

( P2 − P0 )
2

Tn = 2( Pn − Pn−1 ) −

( Pn − Pn−2 )
2

Ti = ai ( Pi − Pi −1 ) + (1 − ai )( Pi +1 − Pi )

(1)

(2)
(3)

where,
ai =

Pi +1 − Pi
Pi +1 − Pi + Pi − Pi −1

(4)

2.1. First Phase
The slope analysis is done on the basis of
transitions. For example, there are only three possible
states of slope.
1.
2.
3.

actually acts as a preprocessing step for the next
phase. Figure 1b shows the figure after second phase.
The close coordinate points are removed.

Increasing, i.e. +ve.
Decreasing, i.e. –ve. and
Constant, i.e. moving along any of the axis in
2D-plane.

(a)

Depending upon slope states, we have only four
transitions,
1.
2.
3.
4.

+ve Æ 0
0 Æ –ve
–ve Æ 0
0 Æ +ve

(b)

Now any point Pi is taken as a candidate point if it
comes after any one of the transitions, which means
that there is a change in slope. Notice that if we
encounter transitions 1 and 3 then we also need to take
care of a small jaggy. To cater such problem we have
defined a threshold, which is describing if such
transition is a proper one or just a small jaggy. Incase
where it is taken as a small jaggy, we ignore it and
keep record of our last transition state. The advantage
of this technique is that, we can apply this algorithm
for smooth functions as well as irregular objects with
jaggies.

Figure 2. (a) Unwanted clustered points, (b)
Removed clustered points

2.3. Third Phase
The basic requirement of this phase is to remove
the cluster of unwanted points as shown in figure 2a.
The points shown in big spots would have been
enough rather than having so many intermediate
points. We solved this problem by taking the angle
K
between them. We considered a = PiPi+1 as a vector
K
and b =Pi+1Pi+2 as another vector. The angle is
calculated using dot product between them as follows:
KK K K
a.b = a b cosθ

(5)

(a)

(b)
Figure 1. (a) Close coordinates, (b) Removed
close coordinates

2.2. Second Phase
Sometimes the corners to be detected are not the
sharp angle points or they are the result of sharp
jaggies and we may detect superfluous candidate
corner points in first phase. These superfluous points
are discarded in this phase. The superfluous points in
this case are the ones with very close co-ordinate
positions as shown in figure 1a. So, in order to get
refined points we remove such points. This phase

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

If this angle is greater than a certain threshold, the
points are then taken as collinear and therefore the
middle point is no more a corner point. This is
demonstrated in figure 2b.

2.4. Tuning Parameters
The algorithm needs three different tuning
parameters at different phases. In the first phase Zero
Count Threshold (ZCT) is needed to differentiate a
jaggy from a line. Incase of a line the end points of it
as corner points. The jaggies are ignored. Distance
Threshold (DT) is used in second phase in order to
remove the points nearer by this parameter. The last
parameter is Tolerance Angle (TA) which is used to
remove the clustered points. If points are clustered so
that the intermediate points are not needed then such
superfluous points are removed from the list of final
corner points. The hypothesis is that if three

•

consecutive points are making an angle greater than
TA then such points are taken as collinear points and
due to which middle point is neglected. The default
value of ZCT is 7, DT is 5 and TA is 152o. A distinct
property of our algorithm is that the default values of
tuning parameters work equally well for almost all the
shapes, either it be a smooth curve or irregular object
boundary.

•
•
•

3. Results and Analysis
A number of frequently cited corner detectors are
chosen for testing [13,24]. we are also comparing our
algorithm with SAM04 [5]. These algorithms are
referred as SAM04, IPAN99, BT87, FD77, RW75 and
RJ73 respectively in this paper. The comparisons are
represented in figure 3. Further more we have also
compared our algorithm with [8,15,19,20,21,22,23,25]
shown in figure 4. Also we tested the objects present
in [6,14,18] against our approach as depicted in figure
5. After this we have tested our algorithm for different
tuning parameters, shown in figure 6. Finally we have
demonstrated in figure 7 that our algorithm works
perfect in case of smooth functions. The criteria for
performance evaluation of corner detectors were given
by Chetverikov and Szabo [4], which are as follow:
•
•

Selectivity: The rate of correct detections
should be high and the wrong ones should be
low.
Precision: The positions of detected corners
should be precise.

(a)

(b)

(e)

(f)

Robustness to noise: The algorithm should
perform well for noisy shapes as well.
Easy setting of parameters: Parameters
should be logical and easy to tune for variety
of shapes.
Robustness to parameters: Minor changes in
parameter should not cause drastic changes in
performance.
High Speed and low complexity.

In figure 3 we analyze that except for figure 3(c)
and (d), all the approaches work almost the same.
Furthermore extra detected corner points are in the
range of acceptable point set. We can clearly observe
in figure 4 that our proposed algorithm is identifying
each corner point at a very precise position. Thus it is
preserving the shape of the object.
In figure 5 we examined that (c) is high on false
acceptance and on the other hand (a) has high rate of
false rejections. Incase of (b) the rate of false
acceptance and rejection is varying with the position
of each petal. Unlike other algorithms our approach is
working in a similar fashion for all the objects with
negligible false acceptance in a few cases. In figure 6
we have depicted that our approach is not much
dependent upon the tuning parameters as is the case
with other algorithms.
We have demonstrated in figure 7 that our
approach works even better in case of smooth
functions. How ever it is important to note that only 1st
phase is enough for such mathematical functions.

(c)

(d)

(g)

Figure 3. Detected corner points using the algorithms: (a) SAM04, (b) IPAN99, (c) BT87, (d)
FD77, (e) RW75, (f) RJ73, (g) SRM05.

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

(a)

(b)

(c)

(d)

(e)

(f)

(g)

(h)

(i)

(j)

Figure 4. Corner points detection using (a) Results without collinear points suppression [8] (b)
Results with collinear points suppression [8] (c) The-Chin [25] (d) Ansari-Huang [23] (e) RayRay [21] (f) Ray-Ray [22] (g) Arcelli-Ramella [20] (h) Sarkar [19] (i) Cornin [15] and (j) SRM05.

(a)

(b)

(c)

(d)

Figure 5. Corner points detection (a) Guru [6] (b) Chang [18] (c) Tsai [14] and (d) SRM05

The analysis of all experiments shows that our
algorithm has less false rejection and less false
acceptance rate as compared to any of the algorithms
presented. Moreover our approach is giving the
optimal and precise corner point set for all shapes
irrespective of its nature thus it follows the shape
preservation property. Further more the corners are
detected at the precise positions in all the cases. The

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

important aspect of this approach is that it is robust to
noise.
In case of smoother shapes, the algorithm works
fine as shown in case of smooth functions. Another
preeminence of this approach is that although we are
using some of the tuning parameters for better output
but changing them does not change the result by big
margins. Also we do not need to change these tuning
parameters with respect to different shapes.

Default

ZCT = 7, DT = 5 and TA = 145o

ZCT = 5, DT = 7 and TA = 145

ZCT = 5, DT = 7 and TA = 152

ZCT = 7, DT = 5 and TA = 140

ZCT = 5, DT = 7 and TA = 140

Figure 6. Testing SRM05 with different tuning parameters.

(a) y = sin(x)

preservation and representation. The problem with this
algorithm is that if tuning is needed then it is done
manually. This work can be extended for
adaptive/dynamic tuning of parameters. Further a
tuning parameter independent algorithm will be the
best option.

Acknowledgement
The authors acknowledge the support of King Fahd
University of Petroleum & Minerals for this research.

References
(b)

x +y =r
2

2

2

Figure 7. Results of SRM05 for functions
using default tuning parameter values.

4. Conclusion and Future work
We have demonstrated a linear time corner
detection algorithm which is simple to implement,
efficient and robust to noise. It is non-recursive in
nature, does not depend much on tuning parameters
and it is not effected greatly by small changes in
tuning parameters. It is very effective for shape

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

[1]. Sarfraz M., Asim M.R., Masood A., “Piecewise
Polygonal Approximation of Digital Curves”, IEEE
Computer Society in the proceedings of 8th International
Conference on Information Visualization - IV 2004, London,
England 14-16 July 2004.
[2]. Sarfraz, M., Asim, M. S., and Masood, A., “Capturing
Outlines using Cubic Bezier Curves”, The Proceedings of
The International Conference on Information &
Communication Technologies: from Theory to Applications ICTTA'04, Omayyad Palace, Damascus, Syria, IEEE
Computer Society Press, USA, ISBN: 0-7803-8482-2, 2004.
[3]. Sarfraz M., Asim M.R., Masood A., “Web Based
System for Capturing Outlines of 2D shapes”, Submitted for
the International Conference on Information and Computer
Science, KFUPM Dhahran, Saudi Arabia 28-30 Nov, 2004ICICS’ 2004.
[4]. Sarfraz M., Asim M.R., Masood A., “Capturing Outlines
with Cubic Bezier Approximations”, Submitted for a special
session on Graphic Models and Imaging in the 2nd IEEE-

GCC, Advancing Technology in the GCC: Challenges and
Solutions, Gulf International Convention and Exhibition
Centre Manama, Bahrain, 2004.

[14]. Tsai D.M., H.T. Hou and H.J. Su, “Boundary Based
Corner Detection Using Eigenvalues of Covariance
Matrices”, Pattern Recognition Letters, 20, pp.31-40, 1999.

[5]. Sarfraz, M., Asim, M. R. and Masood, A. “A New
Approach to Corner Detection”, Kluwer in the book series:
Computational Imaging and Vision, Kluwer, ISBN: 1-40201817-7, pp. 181 – 197, 2004.

[15]. T. M. Cronin, “A Boundary Concavity Code to Support
Dominant Point Detection”, Pattern Recognition Letters, 20,
pp. 617-634, 1999.

[6]. D.S Guru, R. Dinesh and P. Nagabhushan, “Boundary
Based Corner Detection and Localization Using New
‘Cornerity’ Index: A Robust Approach”, Proceedings of the
First Canadian Conference on Computer and Robot Vision
(CRV’04), IEEE, 2004.

[16]. Zheng Z., Wang H. Teoh E., “Analysis of Gray Level
Corner Detection”, Pattern Recognition Letters, 20: pp. 149162, 1999.
[17]. M. Sarfraz, “A Rational Spline with Tension: Some
CAGD Perspectives”, International Conference on
Information Visualisation, IV 1998, London, England, UK.
IEEE Computer Society, 29-31 July, 1998.

[7]. Lu Sun, Y.Y, Tang, Xinge You, “Corner Detection for
Object Recognition by Using Wavelet Transform”,
Proceedings of the Third International Conference on
Machine Learning and Cybernetics, IEEE, Shanghai, 26-29
August 2004.

[18]. Chang S.P, J.H. Horng, “Corner Point Detection Using
Nest Moving Average”, Pattern Recognition, 27 (11), pp.
1533-1537, 1994.

[8]. Marji M., Siy P., “A New Algorithm for Dominant
Points Detection and Polygonization of Digital Curves”,
Pattern Recognition, 36: pp. 2239-2251, 2003.

[19]. D. Sarkar, A Simple Algorithm for Detection of
Significant Vertices for Polygonal Approximation of ChainCode Curves”, Pattern Recognition Letters, 14: pp. 959-964,
1993.

[9]. C.Urdiales, C. Trazegnies, A. Bandera and F. Sandoval,
“Corner Detection Based on Adaptively Filtered Curvature
Function”, Electronic Letters, Vol. 39 No. 5, 6th March
2003.

[20]. C. Arcelli, G. Ramella, “Finding Contour-Based
Abstractions of Planner Patterns”, Pattern Recognition
26(10): pp. 1563-1577, 1993.

[10]. Wen-Yen Wu, “An Adaptive Method for Detecting
Dominant Points”, Journal of Pattern Recognition, 36: pp.
2231-2237, 2003.
[11]. P. Reche, C. Urdiales, A. Bandera, C. Trazegnies and
F. Sandoval, “Corner Detection by Means of Contour Local
Vectors”, Electronic Letters Vol. 38, No. 14, July 2002.
[12]. Bandera, A. Urdiales, C. Arrebola, F. and Sandoval, F.,
“Corner Detection by Means of Adaptively Estimated
Curvature Function”, Electronic Letters, 36, (2), pp. 124126, 2000.
[13]. Dmitry Chetverikov and Zsolt Szabo, “A Simple and
Efficient Algorithm for Detection of High Curvature Points
in Planar Curves”. Proceedings of 23rd Workshop of the
Australian Pattern Recognition Group, pp. 175-184, 1999.

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

[21]. B. K. Ray, K. S. Ray, “Detection of Significant Points
and Polygonal Approximation of Digitized Curves”, Pattern
Recognition Letters, 12: pp. 443-452, 1992.
[22]. B. K. Ray, K. S. Ray, “An Algorithm for Detecting
Dominant Points and Polygonal Approximation of Digitized
Curves”, Pattern Recognition Letters, 13: 840-856, 1992.
[23]. N. Ansari, K. W. Huang, “Non-Parametric Dominant
Point Detection”, Pattern Recognition 24: pp. 849-862,
1991.
[24]. H. C. Liu and M. D. Srinath, “Corner Detection from
Chain-Code”, Pattern Recognition, pp. 51-68, 1990
[25]. C. The, R. Chin, “On the Detection of Dominant
Points on Digital Curves”, IEEE Transaction. Pattern
Analysis and Machine Intelligence 8: pp. 859-872, 1989.

