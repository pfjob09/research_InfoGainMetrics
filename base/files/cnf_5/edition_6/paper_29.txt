DualView: A Focus+Context Technique for Navigating Large Graphs
Quang Vinh Nguyen and Mao Lin Huang
Faculty of Information Technology
University of Technology, Sydney, Australia
{quvnguye@it.uts.edu.au, maolin@it.uts.edu.au}
Abstract
This paper presents a fast and efficient
focus+context technique, called DualView for navigating
large graphs/hierarchies which are usually displayed in
a high-density manner. The DualView includes two
transformations: a browsing and a fisheye-like
distortion. The browsing transformation is responsible
for interactively exploring large hierarchies with a highresponse rate and inexpensive computational cost. On
the other hand, the fisheye-like viewer increases the
degree of distortion of the image by increasing the
original magnification function which is created by the
browsing transformation. This dual enlargement enables
users to see the detail of any interested area in a highdensity visualization.
Keywords: focus+context, navigation, information
visualization, magnification, distortion.

1. Introduction
With the rapid growth of information, the size of
data sets is increasing every year, and the visualization of
large graphs/hierarchies has become more and more
important. Although some advanced graph and tree
layout techniques can display in detail a reasonable
number of nodes and edges, no layout algorithm can
work alone to overcome the problem of visualizing large
information spaces. This is because the limitation of the
visual space which allows only a limited amount of
information to be possibly displayed at the same time.
Therefore, associated techniques for interactive
navigation are becoming the essence in the design of
large size information visualization. These techniques
assist the user to decide where they currently are, and
where they should go next through the information
space.
To archive easy access to both the contextual and
detail information in the large graphs/hierarchies, there
are several navigation solutions have been developed in
accommodating geometrical layout techniques. Most of
the current navigation techniques can be roughly
classified into three approaches: focus+context,

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

zooming+filtering and incremental exploration. These
approaches are briefly described as below.
Focus+context approach includes information
visualization
techniques
that
provide
users
simultaneously with a detailed view of a small focus area
as well as the visibility of a larger context. In other
words, it can be defined as detailed views of particular
parts of an information set which are blended in some
way with a view of the overall structure of the set. This
approach improves the user’s perception since the
overview context is retained when enlarging the focus
area [1]. Typical focus+context techniques include
Fisheye Views [2], Polyfocal Display [3], Bifocal Lens
[4], Perspective Wall [5], Hyperbolic Tree Browser [6],
Cone Tree [7], and other.
Zooming+filtering is defined as a viewing approach
that works by reducing the amount of context in the
display. The reduction is by filtering the information in
the form of selecting a subset of the data along a range of
numerical values of one or more dimensions. There are
two approaches for zooming including geometric
zooming and semantic zooming. The geometric zooming
enlarges a particular geometry area or graph or tree
content without modifying the layout manner of
information while the semantic zooming changes the
information contents. Typical zooming+filtering
techniques are Starfield Display [8], TreeMaps [9], Pad
[10], Pad++ [11], and other.
Incremental Exploration is defined as a viewing
approach that displays only a small portion of the full
graph/tree incrementally following the user’s exploration
of information space. Therefore, techniques in this
approach are quite capable to handle huge datasets where
it is impossible to display the entire hierarchy on the
screen at the same time. Although this approach is
relatively new, it already produces some interesting
results from experiments. Some typical incremental
exploration techniques are described in [12], [13] and
[14].

1.1.
DualView: a focus+context navigation
technique
From the three approaches, focus+context
techniques generally provide a better solution for
accessing the contextual information during the
navigations, and it receives a large effort from
researchers in information visualization community.
However, these focus+context techniques do not usually
deal efficiently with the high-density display of large
hierarchies, such as the display of Space-Optimized
Trees [15].
This paper introduces a fast and efficient
focus+context navigation technique called DualView.
The technique can be used to view and navigate large
relational hierarchies that are presented in a high-density
display manner. Our viewing mechanism combines a
browsing transformation and a fisheye-like distortion
transformation. The browsing transformation allows
users to interactively explore large hierarchies with a
high-response rate and inexpensive computational cost.
The distortion transformation increases the degree of
distorted magnification of the focused sub-hierarchy by
redefining the original magnification function of the
browsing transformation. This dual enlargement enables
the user to see the detail of any interested area in a highdensity displayed visual structure.

2

Technical detail

Our focus+context navigation technique is
independent to the geometrical layout of the relational
hierarchies. In order to reduce computation cost, we only
apply our transformation technique in nodes from a
layout, and all edges are redrawn as straight lines. We
apply two independent transformations for every node
when the user interacts with our system.

TDualView = TBrowsing oTDistortion
TBrowsing is a browsing transformation function which
is responsible for shifting and browsing through
hierarchy in order to move a sub-structure into focus
area. TDistortion is a distortion transformation function
which is responsible for further enlarging a particular
region.

2.1 Terminology
A graph consists of vertices and edges. We also use
the term node to indicate a vertex with its display
properties. In our implementation, edges are straight
lines linking two nodes. The initial layout of the graph
(or tree) is called the normal view of the graph. Its
coordinate system is called normal coordinate. In normal
coordinate, the point (0, 0) locates at the center of the
rectangular displaying area. The coordinate system of the

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

graph in browsing transformation is called the browsing
coordinate. The coordinate system of the graph in
distortion transformation is called the distortion
coordinate.
We call location of a point in coordinate systems,
normal, browsing and distortion are respectively (xn, yn),
(xb, yb) and (xd, yd).

2.2 Browsing transformation
Browsing transformation is used to transform the
visualization to a new location when the mouse drags a
node from one point to another. This transformation is
independent of the layout algorithm, and the movement
of a point must satisfy the following properties:
x A point closer to the center move faster then a
point closer to border (see Figure 1).
x All points in the displaying area must not move
outside the displaying area during this
transformation.

Figure 1 An example of the movement of points
In the normal coordinate system, suppose that the
mouse drags a point A(xno, yno) to a new location B(xno’,
yno’); and thus a node N(xn, yn) in the original
visualization will move to a location with coordinate of
(xn’, yn’). The value of xn’ and yn’ are calculated
independently based on the browsing transformation
function TBrowsing.
Suppose on horizontal direction, the function
TBrowsing becomes TBrowsing(xb) where xb is in the browsing
coordinate system. The movement property ensures that
the value xb of point B in this coordinate system has to
satisfy conditions: 1) TBrowsing(xb) is continuous, and 2)
TBrowsing(xb) towards negative or positive infinitive when
xb closes to its minimum or maximum boundaries.
Although there are a number of functions which satisfy
the above conditions, we simply use the equation:

Tbrowsing(xb) = Tangent(xb)
Where the value of xb varies in the domain of (-S/2,
S/2), and thus the domain of TBrowsing(xb) is (-f, f).
Figure 2 shows the graph of the tangent function.
When xn0 moves to xn0’ in the normal coordinate
system, correspondingly xb0 move to xb0’, the function
TBrowsing(xb) becomes TBrowsing(xb) + K. Where K is
calculated by the following fomula:

K = TBrowsing(xb0’) – TBrowsing(xb0)

Figure 2 Graph of the tangent functionG

(a)

(b)

Figure 3 Graph of the distortion transformation

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

Figure 4 . An example of browsing
transformation that (a) shows the original tree
layout and (b) shows the layout after applying
browsing transformation.

As a result, the new value of xb is recalculated by the
equation:

xb = Tangent-1(TBrowsing(xb))
Figure 4 is an example of our browsing technique on
a tree layout.

2.3 Distortion transformation
Distortion magnification is used to enlarge the focus
area when the content in this area is too dense. The
browsing transformation is responsible for moving and
enlarging focus information. However its magnification
sometimes is not sufficient enough to display clearly the
information in the focus area. To overcome this problem,
we apply a similar concept as fisheye distortion but in a
simpler way in which a focus point is the center of the
displaying area. Similar to browsing transformation, the
distortion function TDistortion is applied independently in
horizontal and vertical directions. We normalize the
distortion coordinate to [-1, 1]. In its half domain [0, 1],
TDistortion (xd) is a curve that goes through 2 points (0, 0)
and (1, 1) and above the line l(xd) = xd. This
transformation has the similar property at other half
domain [-1, 0] which is also a curve going through two
points (0, 0) and (-1, -1) and below the line l(xd) = xd.
Simply, this distortion transformation is the function of
an arc that goes through 3 points (0, 0), (1, 1) and C(xd0,
yd0), where C(xd0, yd0) defines the magnitude of the
distortion transformation (see Figure 3).
In our prototype, the distortion transformation
function is simply defined as:

Tdistortion

b  c  ( x d  a ) 2 for x d t 0

Tdistortion

b  c  ( x d  a ) 2 for x d  0

3 Conclusions and Future Work
We have presented the DualView, a fast and
effective focus+context technique for visualizing
relational large hierarchies. This technique includes a
browsing transformation and a fisheye-like distortion
transformation. The browsing is responsible for bringing
a sub session to the focus area, while the distortion
further enlarges the focus information. Although there is
still need of improvement, we believe that this
focus+context navigation technique is a valuable tool for
visualizing large relational hierarchies.
We are currently refining our techniques to
eliminate crossing edges during the navigation. The
crossing elimination is only applied to edges within the
focus region in order to reduce the running time. The
refinement is also applying to displaying property where
nodes at focus area are gradually enlarged to enhance the
visibility of the hierarchies. We are also investigating a
new technique that attempt to preserve layout property of
the relational hierarchy. Noticeably, our technique is able
to expand to 3D.

where a, b, and c are constants.

2.4 Examples
Figure 5 to Figure 7 illustrate our DualView
navigation technique on a very large hierarchy where the
original layout is defined by the Space-Optimized Tree
algorithm. Figure 5 displays the original layout before
the navigation. Figure 6 shows the display when users
apply the browsing transformation to bring information
into the focused area, i.e. the center region. Figure 7
shows the display when the users apply the distortion
transformation to further increase the distorted
magnitude to the information at the focus area.

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

Figure 5 The original tree layout of
approximately of 3900 nodes

[3]
[4]
[5]

[6]

[7]

Figure 6 The display after applying the browsing
transformation with small magnification

[8]

[9]

[10]

[11]

[12]
Figure 7 The display after applying the
distortion transformation to increase its
magnification

References
[1]
[2]

S. K. Card, J. D. Mackinlay, and B. Shneiderman,
Readings in Information Visualization - Using
Vision to Think: Morgan Kaufmann, 1999.
G. W. Furnas, "Generalized Fisheye Views,"
presented at SIGCHI '86 Conference on Human
Factors in Computing Systems, Boston,
Massachussetts, 1986.

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

[13]
[14]

[15]

N. Kadmon and E. Shlomi, "A Polyfocal
Projection for Statistical Surfaces," the
Cartographic Journal, vol. 15, pp. 36-41, 1978.
R. Spence and M. D. Apperley, "A Bifocal
Display Technique for Data Presentation,"
presented at of Eurographics 82, 1982.
J. D. Mackinlay, G. G. Robertson, and S. K. Card,
"The Perspective Wall: Detail and Context
Smoothly Integrated," presented at ACM
Computer-Human Interaction '91 Conference on
Human Factors in Computing Systems, New
York, USA, 1991.
J. Lamping and R. Rao, "The Hyperbolic
Browser: A Focus + Context Technique for
Visualizing Large Hierarchies," Journal of Visual
Languages and Computing, vol. 7, pp. 33-55,
1996.
G. G. Robertson, J. D. Mackinlay, and S. K. Card,
"Cone Tree: Animated 3D Visualizations of
Hierarchical Information," presented at ACM
SIGCHI conference on Human Factors in
Computing Systems '91, New York, USA, 1991.
N. K. Jog and B. Shneiderman, "Starfield
Visualization with Interactive Smooth Zooming,"
presented at Visual Database Systems 3, Visual
Information Management (VBD'95), Lausanne,
Switzerland, 1995.
B. Johnson and B. Shneiderman, "Tree-Maps: A
Space-Filling Approach to the Visualization of
Hierarchical Information Structures," presented at
the 1991 IEEE Visualization, Piscataway, NJ,
USA, 1991.
K. Perlin and D. Fox, "Pad: An Alternative
Approach to the Computer Interface," presented at
20th International Conference on Computer
Graphics and Interactive Techniques (ACM
SIGGRAPH '93), New York, USA, 1993.
B. B. Bederson, J. D. Hollan, K. Perlin, J. Meyer,
D. Bacon, and G. W. Furnas, "Pad++: A
Zoomable Graphical Sketchpad For Exploring
Alternate Interface Physics," Journal of Visual
Languages and Computing, vol. 7, pp. 3-32, 1996.
M. L. Huang and P. Eades, "A Fully Animated
Interactive System for Clustering and Navigating
Huge Graphs," presented at Graph Drawing
(GD'98), Montréal, Canada, 1998.
S. C. North, "Incremental Layout in DynaDAG,"
presented at Graph Drawing (GD '95), Passau,
Germany, 1995.
U. Brandes and D. Wagner, "A Bayesian
Paradigm for Dynamic Graph Layout," presented
at The Symposium on Graph Drawing (GD'97),
Rome, Italy, 1997.
Q. V. Nguyen and M. L. Huang, "SpaceOptimized Tree: a Connection+Enclosure
Approach for the Visualization of Large
Hierarchies," Information Visualization Journal
(Palgrave Macmillan), vol. 2, pp. 3-15, 2003.

