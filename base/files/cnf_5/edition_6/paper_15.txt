Line Feature Detection from 3D Point Clouds via Adaptive CS-RBFs Shape
Reconstruction and Multistep Vertex Normal Manipulation
Qibin Hou, Li Bai
School of Computer Science and Information Technology
University of Nottingham
Nottingham, NG8 1BB, UK
{qbh, bai}@Cs.Nott.AC.UK
Abstract
This paper presents a multistep based on vertex normal manipulation method for ridge line detection on 3D
surfaces, which is reconstructed from 3D point clouds via
adaptive CS-RBF. Based on point density, centers of RBF
are randomly chosen from the points. The support size
of each RBF is obtained adaptively depending on surface geometry which surrounds the RBF center. After
the reconstructed shape is polygonized, a classiﬁcationbased method for vertex normal approximation is executed.
Searching the entire neighborhood in geodesic distance, we
calculate the standard deviation of angles between a vertex
and its geodesic neighbors, decide which kind of neighbor
can be employed for ﬁnal normal estimation, with the help
of a user-speciﬁed parameter. With continuing curvature
tensor estimation and ridge vertex evaluation, ridge-valley
lines of salient features on polygon meshes are detected.
Comparing with common vertex normal approximation, experiment results show that this method works satisfactorily,
especially for 3D human faces.

1. Introduction
In recent years 3D data have been become popular in
many applications associated with computer vision and
computer graphics. They are deemed as more appropriate
representation than 2D image as they provide more information about shapes of objects. For example, illumination, expression or pose variations have been the problems that are
difﬁcult for general 2D recognition methods to overcome
[1]. So many researchers are seeking efﬁcient solution for
recognition from 3D ﬁeld [2]. Sampled vertices and irregular connectivity form meshes of shape which can be reconstructed from scattered, noisy, incomplete point clouds
[4].

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

Among various technologies which are used for 3D scattered data interpolation and approximation, Radial Basis
Function (RBF) methods has proven to be very attractive
because of their effective capability to produce high quality shape from irregularly sampled data, and cope with arbitrary topological complexity, etc [8]. From the ﬁrst time
when RBF was introduced in implicit surface modelling [6],
studies on RBF-based shape reconstruction has been developed quickly which allow user to process scattered data
consisting of millions of points of real object [4], [7], [8].
Based on the shape of 3D point clouds, [9] illustrated
that ridge-valley lines are popular shape descriptors of polygon meshes used in geomorphology [10], analysis and registration of anatomical structures [11], geometric modelling
[12], and so on. Existing line feature extraction methods for
meshes generally are based on the estimating principal curvatures, principal directions, and derivatives of curvatures
[9], [13]. [3] classiﬁed methods for reliable computation
of curvature related measures into three categories. From
those referenced literatures, it can be seen that normal calculation on each vertex is the basic for curvature approximation, and for further processing. Practically, 1-Ring umbrella neighborhood of faces around each vertex are commonly used to curvature estimation [3]. [14] used a collection of triangles in the geodesic neighborhood of a vertex
with the aim for estimate orientation and curvature on original noise surface. Investigating current normal computing
algorithms, [15] made a conclusion that none of the available algorithms are particular good for every case.
In this paper, an approach is proposed to detect feature points from 3D scattered data by combining two steps,
which are shape reconstruction via adaptive CS-RBF and
per-vertex normal estimation via multistep vertex normal
manipulation. The purpose is to further develop existing
work. The rest of paper is arranged as follows: Section
2 describes adaptive CS-RBF approximation scheme. Section 3 proposes the details for estimating normal on each

mesh vertex. Section 4 presents practical results from this
approach step by step. Section 5 concludes the paper.

[4] initially set L = 0, and R = 100ε0 . If ε(R) < ε0 the
search interval is shifted: Lnew = R, and Rnew = 2R.

2. Shape Reconstruction with Adaptive CSRBF Approximation

2.2. RBF Center Selection and Least Square Fitting

Suppose we have a set of points P = {p1 , . . . , pN } ⊂
3
sampled from a surface, with unit normals N =
{n1 , . . . , nN }. The shape reconstruction requires the recovery of an unknown function f : 3 → , such that its zero
level-set {x ∈ 3 : f (x) = 0}, which is also named implicit surface, approximates the set of points P , especially
in the situation when the number N is large and the points
in P are randomly distributed.
Given a set of approximation centers C = {c1 , . . . , cM },
M < N , Function y = f (x) was suggested in [4] to approximate P in the following form:
[gi (x) + λi ]Φσi ( x − ci )

f (x) =

(1)

ci ∈C

where Φσ (r) = Φ(r/σ), Φ(r) = (1−r)4+ (4r+1), is Wendland’s compactly supported RBF [16], σ is its support size,
and gi (x) and λi are unknown functions and coefﬁcients to
be determined.

Ohtake [4] provides seven steps for selection of RBF
centers. There are two key requirements during those
steps. One is that suppΦσi (ci ) covers all the points of P .
The other is a minimal cover should be generated with an
amount of overlap.
[4] uses ζi = Σj ωσi ( pi −cj ) to measure the amount of
overlap at pi ∈ P , and control overlapping by a user-deﬁned
parameter T . He also cope the multiple choice problem
with a randomized optimization tool.
The other unknown coefﬁcients in Formula. 1 is λi .
From Formula. 1 induce following formula
λi Φσ ( x−ci ) = −
ci ∈C

gi (x)Φσ ( x−ci ), x = cj ∈ C
ci ∈C

(7)
Then coefﬁcients λ1 , . . . , λM are found by solving system
of linear equations with preconditioned biconjugate gradient method [17].

3. Multistep Vertex Normal Manipulation for
Feature Lines Extraction

2.1. Adaptive RBF Support Size Selection
[4] deﬁnes a local approximation error at c as
ε(σ) =

1
Φ
(
j σ pj − c )

j

g(pj ) 2
)
Φσ ( pj − c )(
∇g(pj )

(2)
where g(x) is a local quadratic approximation at center c.
For each point pi , a local orthogonal coordinate system
(a, b, w) is determined with the origin of coordinates at pi
such that the plane (a, b) is orthogonal to ni and the positive
direction of w coincides with the directions of ni . P in a
vicinity of c can be approximated by a quadric equation:
W = H(a, b) ≡ Aa2 + 2Bab + Cb2 + Da + Eb + F (3)
where the coefﬁcients A, B, C, D, E and F are determined
via the following least squares minimization
Φσ ( pj − c )(wj − h(aj , bj ))2 → min

(4)

3.1. Common Vertex Normal Approximation and
Geodesic Neighbors

(5)

Commonly used algorithms for estimating per-vertex
normal are based on 1-Ring neighborhood facets, as follows
[18]:

(aj ,bj ,wj )

Then g(x) can be obtained by
g(x) = w − h(a, b)

While maintaining user speciﬁed accuracy ε0 , we hope to
maximize σ. It is also intended to look for σopt such that
ε(σopt ) = ε0

Reconstructed shape from Section 2 can be polygonized
to 3D meshes. Suppose a pair of lists S = {V, F } is a
represent of triangle meshes. V = {vi : 1 ≤ i ≤ nV } is a
list of vertices. F = {fk : 1 ≤ k ≤ nF } is a list of faces.
Each facet fk = (ik1 , ik2 , ik3 ) is a tern of non-repeated indices
of vertices.
As we know, Ridge-valley lines are the powerful shape
descriptors for 3D meshes. They are curves on surface
around feature parts where surface bends seriously. Generally, the process of line feature detection on 3D meshes
can be divided into three main steps, which are vertex normal approximation, curvature estimation, and ridge vertex
tracing. Vertex normal approximation is the basis of other
two steps.

(6)

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

Nvi =

fk ∈F i
fk ∈F i

|fk |Nfk
|fk |Nfk

(8)

where Nfk is a well deﬁned unit length normal vector on
each face fk . F i denotes the set of facets that contain vertex
vi . fk belongs to F i .
This algorithm deals with all vertexes equally. However,
for the purpose of 3D recognition, those lines detected at
last on salient parts should be reserved, while lines on other
parts need to be ignored. In order to approach this aim,
we need to treat vertices with different kinds of neighbors
according to its position on mesh surfaces when estimating
vertex normal.
Kimmel and Sethian [19] presented an algorithm to ﬁnd
shortest geodesic path over the surface. Sun and Abidi [20]
proposed a more readily fast marching algorithm for realization. Page [14] developed a method to select geodesic
neighbors of a vertex for normal estimation on dense and
noisy meshes, and illustrated the beneﬁt of k-geodesic
neighborhood over a k-ring neighborhood is the balanced
support attribute. Using this attribute, the normal vector of
interested vertex be reset to the average of all the normal of
neighborhood. This is equivalent to decouple the curvature
estimation at that vertex. The choice of the neighborhood
size k depends on the feature size at our application. This
paper will give analysis how the choice of k effects the feature lines detection results.

3.2. Vertex Location Examination
Next issue required by multi-step manipulation is to decide whether interested vertex locates on salient feature
parts with high curvature or not. The variation of angles
between vertex and its geodesic neighborhood can be used
to make judge for this issue.

θi = arccos

N •N
N · N

(9)

There is a set Θ = {θi : i = 1, . . . , n} for v, n is the
amount of k-geodesic neighbor of v.
The standard deviation of θi is:
n

n

(θi − θ)2 , θ =

σ=
i=1

θi /n

(10)

i=1

if σ < τ , where τ is a user speciﬁed threshold, then v is
at the low curvature part of surface, and its normal vector is
re-computed with the help of normal of geodesic neighborhoods as:
N = (N +

Ni )/( N +

Ni )

(11)

3.3. Multistep Manipulation
The whole multistep manipulation for vertex normal can
be stated as:
Input: Triangle Meshes S = {V, F }, where
V = {vi : 1 ≤ i ≤ nV }, F = {fk : 1 ≤ k ≤ nF }
Output: Vertex Normal
FOR Each Vertex vi
STEP 1: Use commonly 1-ring neighborhood algorithm
with Formula. 8
STEP 2: Find k-geodesic neighborhood
Ω = {Ni : i = 1, . . . , n}
STEP 3: Compute Θ = {θi : i = 1, . . . , n}, and standard
deviation σ of θi

Figure 1. Angles between vertex and its
geodesic neighborhoods

As shown in Fig. 1, v is the interested vertex. vi , vj are
geodesic neighborhoods belong to v. N , Ni , Nj are the
vertex normal associated with v, vi , vj got by using 1-ring
neighborhood method in advance. θi is the angle between v
and vi ,

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

STEP 4: Discrimination
IF σ ≥ τ
Output vertex normal got at First Step;
ELSE
Re-compute normal with Formula. 11;
Output new vertex normal;
END IF
END STEP
END FOR

3.4. Curvature Estimation and Tracing Ridges
The next two steps for ridge line detection after vertex
normal approximation are curvature estimation and tracing
ridges. Ohtake [9] gave details on how to implement these
processing.
Combing with methods listed in Section 2, Section 3.2
and Section 3.3, the goal of line detection on salient features
of 3D point clouds is reached. Experiment results are shown
in next section.

4. Experiment Results and Discussion
Experiment results from adaptive CS-RBF based shape
reconstruction and multistep vertex normal manipulation
are now investigated. Fig. 2 illustrates the performance of
approach in this paper.
From Fig. 2, we can see that methods offered in paper
can actually work. The efﬁciency of feature lines detection
partly depends on quality of reconstructed shape. Effect of
parameters of adaptive CS-RBF on quality of shape reconstruction has been discussed in Ohtake [4] He has looked
for other methods, such as multi-scale one to replace single level global ﬁtting, or using other statistic learning algorithms, etc, to improve the accuracy of shape reconstruction. Considering computational time and quality of point
clouds, we still use the single level CS-RBF approximation
in this paper.
The other factor which affects ﬁnal feature detection results is selection of parameters for vertex normal approximation. This is shown in Fig. 3. The face mesh has been
smoothed by adaptive bilateral ﬁlter [21] in advance.
In Fig. 3, two parameters, k and τ , have different effects
on ﬁnal results. Geometric distance equals k times average
mesh edge length. If we only vary the neighborhood size,
we obtain the effects in Fig. 3(b) to Fig. 3(d). Small neighbor size k and large standard variation τ of normal vertex
angles lead to discrete selection of vertex which has high
curvature on ridge or ravine. Fixing neighbor size, decreasing the standard variation τ guides to the increase of number
of ridge lines on surface. It can be watched from Fig. 3(d)
to Fig. 3(f). Choosing large neighbor size k and small standard variation τ means that nothing will be done on original
lines result, by comparing Fig. 3(f) and Fig. 3(a). The empirical value in the application of human face for k is 8, and
choosing range of τ is [0.1, 0.15].

5. Conclusion
This paper introduces a scheme for line feature detection
from 3D point clouds through adaptive CS-RBF approximation for shape reconstruction and vertex normal approximation on triangle meshes by vertex classiﬁcation. Experiment

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

Figure 2. Adaptive CS-RBF approximation
and feature line detection of Lion-dog
model.(a) Original point clouds. (b) Visualized approximation center of adaptive CSRBF by sphere of radius, T = 1.5, ε0 =
5 × 10−4 ; the spheres of different sizes are
in different colors from blue to red. (c) Polygonized meshes from reconstructed shape.
(d) Feature line detection on meshes with
common vertex normal approximation, k = 2,
Λ = 1.4; red line denotes ridge, blue line denotes ravine. (e) Feature line detection with
multistep vertex normal approximation, k = 2,
Λ = 0.8, τ = 0.15

results show that it can detect ridge-valley lines on important feature position. User-speciﬁed parameters help it to
reﬁne the results. The results have potential for 3D shape
recognition.

Acknowledge Special thanks to Yutaka Ohtake for providing the basic platform on which we can implement our
algorithm and do comparison efﬁciently. Original data
used in this paper are courtesy of A. Balyaev. This work
was funded by University of Nottingham (Project Code
A2RH04). We would like to thank the anonymous reviewers of this paper for their valuable comments.

Figure 3. Effect of parameters selection for
feature line detection. (a) Λ = 0.8; (b) Λ = 0.8,
τ = 0.15, k = 4; (c) Λ = 0.8, τ = 0.15, k = 7; (d)
Λ = 0.8, τ = 0.15, k = 10; (e) Λ = 0.8, τ = 0.10,
k = 10; (f) Λ = 0.8, τ = 0.08, k = 10

References
[1] V. Blanz, S. Romdhani, and T. Vetter. Face Identiﬁcation
across Different Poses and Illuminations with a 3D Morphable Model. In Proc. Of the 5th IEEE Conf. On AFGR,
2002.6
[2] K. Bowyer, K. Chang, and P. Flynn. A Survey of 3D and
Multi-Modal 3D+2D Face Recognition. International Conference on Pattern Recognition (ICPR), 2004
[3] S. Rusinkiewicz. Estimating Curvatures and Their Derivatives
on Triangle Meshes. Symposium on 3D Data Processing, Visualization, and Transmission, 2004
[4] Y. Ohtake, A. Belyaev, and H-P. Seidel. 3D Scattered Data
Approximation with Adaptive Compactly Supported Radial
Basis Functions. Shape Modeling International 2004. Genova, Italy, June 2004.
[5] A. Iske. Scattered data modelling using radial basis functions. Tutorials on Multiresolution in Geometric Modelling,
Springer, 2002, 205-242

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

[6] V. V. Savchenko, A. A. Pasko, O. G. Okunev, and T. L. Kunii.
Function representation of solids reconstructioned from scattered surface points and contours. Compter Graphics Forum,
14(4): 181-188. 1995
[7] J. C. Carr, R. K. Beatson, J. B. Cherrie, T. J. Mitchell, W.
R. Fright, B. C. McCallum, and T. R. Evans. Reconstruction
and representation of 3D objects with radial basis function. In
Proceedings of SIGGRAPH, 67-76, August 2001
[8] A. Iske, and J. Levesley. Multilevel Scattered Data Approximation by Adaptive Domain Decomposition. To appear
in Numerical Algorithms. Preprint, Technische Universitat
Munchen, January 29, 2004.
[9] Y. Ohtake, A. Belyaev, and H-P. Seidel. Ridge-Valley Lines
on Meshes via Implicit Surface Fitting. Siggraph, 2004
[10] J. J. Little, and P. Shi. Structural Lines, TINs and DEMs.
Algorithmica, 30(2): 243-263, 2001.
[11] X. Pennec, N. Ayache, and J. P. Thirion. Landmark-based
registration using features identiﬁed through differential geometry. Handbook of Medical Imaging, Academic Press, 499513, 2000.
[12] K. Watanabe, and A. G. Belyaev. Detection of salient curvature features on polygonal surfaces. Computer Graphics Forum, 20(3): 385-392. Eurographics 2001 Issue.
[13] C. Rossl, L. Kobbelt, and H-P. Seidel. Extraction of feature
lines on triangulated surfaces using morphological operators.
2000
[14] D. L. Page, Y. Sun, A. F. Koschan, J. Paik, and M. A. Abidi.
Normal Vector Voting: Crease Detection and Curvature Estimation on Large, Noise Meshes. Graphical Models, 64, 199229, 2002
[15] S. Jin, R. Lewis, and D. West. A Comparison
of Algorithms for Vertex Normal Computation.
http://www.tricity.wsu.edu/ bobl/personal/mypubs/, 2003
[16] H. Wendland. Piecewise polynomial, positive deﬁnite and
compactly supported radial basis functions of minimal degree. Advances in Computational Mathematics, 4:389-396,
1995
[17] W. H. Press, S. A. Teukolsky, W. T. Vetterling, and B. P. Flannery. Numerical Recipes in C++: The Art of Scientiﬁc Computing. Second Edition. Cambridge University Press, 2002
[18] G. Taubin. Estimating the Tensor of Curvature of a Surface
from a Polyhedral Approximation. Proceedings of the Fifth
International Conference on Computer Vision, 902-907, 1995
[19] R. Kimmel and J. A. Sethian. Computing Geodesic Paths on
Manifolds. Proc. Natl. Acad. Sci., 95: 8431-8435, 1998
[20] Y. Sun and M. A. Abidi. Surface Matching by 3D Point’s
Fingerprint. Proc. of the Eighth International Conference on
Computer Vision, 2: 263-269, 2001
[21] Q. Hou, L. Bai, and Y. Wang. Mesh Smoothing via Adaptive Bilateral Filtering. the Fourth International Workshop on
Computer Graphics and Geometric Modeling, CGGM2005,
Atlanta, USA, May 22-25, 2005. Springer, LNCS 3515: 273280

