Fifth International Conference on Computer Graphics, Imaging and Visualization
Visualisation

Implementation of Virtual Environment using VIRTOOLS
Mustafa Agil Muhamad Balbed, Nazrita Ibrahim, Azmi Mohd Yusof
College of IT, Universiti Tenaga Nasional, Malaysia
Balbed@uniten.edu.my, Nazrita@uniten.edu.my, Azmiy@uniten.edu.my

interaction techniques and graphical representations,
especially if major parts of the final environment are
not yet available. This requires a visual authoring
environment that allows the developers to switch
between design elements, provides a repository of
advanced interaction techniques, and easily allows
generating new elements. However, it is difficult to
have a development tool that provides all the function
in one package: modeling, animation, video and audio
editing, interaction and real time rendering in the
immersive environment.
This project is about developing a virtual
environment which could simulate the presence of
height. The environment will then be used to treat
patient suffering from acrophobia (fear of height). In
this paper, we concentrate on outlining the steps taken
in developing the environment, using Virtools as the
main engine. At the end of the development, we are
convinced that Virtools is a good and reliable
development tool towards implementing a truly
immersive virtual and interactive environment. We
have no intention of comparing Virtools with well
known packages (tools) in term of speed and quality

Abstract
VRML is one of the most common and popular
virtual reality development tools available in the
market. This low end product is widely used in school
or college. High end product such as Sense8, EON,
Cartia and many others have been in the market for
quite number of years. These applications have been
popularly used in the big industries such as medical,
automobile and infrastructure design. However, for
our purpose of environment visualization and
immersion, Virtools development kit was used. The
main focus of this paper is to describe the approach
used in producing an immersive and interactive 3D
environment used to treat acrophobia. The 3D
environment consists of a busy city surrounded by tall
buildings. The advantages and benefit of using Virtools
as virtual reality development tool is then explained.

1. Introduction
Virtual Reality (VR) is a term referring to a
combination of high-speed computers, advanced
programming techniques and interactive devices that
allow a user to interact with a computer-simulated
environment [1]. Most current Virtual Environments
(VE) are primarily visual experiences, displayed either
on a computer screen or through special or stereoscopic
displays, but some simulations include additional
sensory information, such as sound through speakers or
headphones [2]. Virtual Reality has long been used in
industries such as automotive, medical and
infrastructure design [3][4]. In any virtual reality
environment, the truly immersive environment can only
be created when the whole images and environment are
photorealistic. Another very important factor towards a
successful immersive virtual environment is the
availability of real time interaction and rendering. For
virtual environment developer, it is necessary to
quickly generate prototypes and to test different

978-0-7695-3359-9/08 $25.00 © 2008 IEEE
DOI 10.1109/CGIV.2008.24

2. Review
Many virtual reality systems are developed by using
either programming language such as OpenGL or
modeling language such as VRML (Virtual Reality
Modeling Language). One of the problems in using
these languages are that everything must be specified
using the program, including the positioning of the
objects in the environment and the interactivity
between the users and the environment.
Positioning using program can be such a headache
since everything needs to be specified using coordinate.
The developers need to be very well verse with the
environment coordinate system in order to make sure
that an object is placed at the correct position. This can
be quite a tedious job to do since over times we tend to
move things around.

101

Virtools is a virtual reality development solution
that enables easy creation of virtual application and
support most industry standard VR devices and
displays [5].
Virtools simplify the development process since it
incorporates necessary interface to help the developer
expedite the work. The preview of the environment and
all the objects is similar to any other 3D modeling
software. Each object can be positioned and
manipulated by using the ‘drag and drop’ technique.
We can also create light and camera objects in
Virtools.
The existing library is packed with useful built-in
function. A function in Virtools is represented using
what is called “building block”. Each building block
behaves like a pre-written function, and what we need
to do is to feed the block with the necessary input. For
example, there are built-in building blocks for character
movement in Virtools such as walk, run, jump or idle.
Virtools also allows us to customize the existing
building block, or to create our own building block.
We could also specify the camera view whether it is a
first person view or a third person view or simply a
perspective view.
Figure 1 and 2 show snapshots of the usage of
building blocks in Virtools. One building block works
as a function in structural programming (like C), and
each building block could receive input parameters and
sent out output parameter [6]. You can have one
building block which connects to another building
block through parameters, as well as having building
blocks within another building block (similar to
function within another function in most programming
languages). Virtools incorporate what is called visual
programming experience where program is written in
blocks. You see the program visually as in chunk of
block.

Figure 2: Example of Building Block with parameter coming in
and out

Virtools also comes with built-in building blocks
that allow promising integration with Head Mounted
Display (HMD) and Data Glove.
One of the drawbacks of using Virtools is its steep
learning curve. It could take quite sometimes to
understand the way things work in Virtools. References
in terms of books and online help are limited.
Despite of the drawback, Virtools is still a better
tool to use when it comes to developing the virtual
interaction.

3. System Architecture
The architecture of the system is shown in Figure 3.
Firstly, the environment and all the associated objects
were modeled using a 3D modeling software called
Autodesk MAYA [7]. The objects are the buildings,
the road, the terrain, the car, the elevator and the
helicopter. The objects were then exported to Virtools,
and arranged based on sketch shown by Figure 4.
Model the 3D virtual
environment in MAYA
Export the model into Virtools

Add interaction to the model
Figure 1: Example of a graph of behavior building block in
Virtools

Integrate with HMD

Figure 3. Architecture of the system.

102

Figure 5. The main building
Figure 4. The sketch of the city.

The rest of the buildings were created from polygon,
with ‘bevel’ effect being applied to each one of them.
Texture mapping and bump mapping were applied to
every building. The screenshot of the buildings is
shown by Figure 6.

In Virtools, the interactivity was added to the
environment through the set up of camera view,
character movement and object movement. Head
Mounted Display (HMD) is used as the display device.
The detail process of each step of modeling and
integration will be described further in the following
sections.

4. Environment Modeling Using MAYA
The following objects were modeled using MAYA:
i.
The buildings
ii.
The terrain
iii.
The Scaffolding elevator
iv.
The trees.
The following objects were taken from the readymade 2D internet objects and modified using a 3D
modeling software Autodesk 3dsMax [8]:
i.
The cars
ii.
The helicopter

Figure 6. Other Buildings.

4.2. Modeling the Terrain
The terrain becomes the ground of all elements in
the environment. The terrain was created by sculpting a
plane material so that it will end up looking like a hill.
In addition, the edited picture of grass was used as a
texture map of the terrain. The snapshot of the terrain is
shown in Figure 7.

4.1. Modeling the buildings
We have created seven different buildings to fill up
the environment. The main building was created by
extruding polygon cube and applying Lambert material
with a little bit of transparency effect. The model was
constructed using repetitive method where we created
the shape of the first floor, and stacking the copy of the
first floor to make up the rest of the floor. The image of
the main building can be seen in Figure 5.

Figure 7. The Terrain

103

4.3. Modeling the Scaffolding Elevator
We created the scaffolding elevator by using
polygon. The based and the pillar of the elevator were
created using cube, while the railing was done using
cylinder. Metal image was then texture-mapped to the
elevator. The snapshot of the elevator is shown in
Figure 8.

Figure 10. The Car

Figure 11. The Helicopter

5.
Environment
and
Manipulation Using Virtools.

Figure 8. The Scaffolding Elevator

Interaction

Once the modeling phase has been completed, all
the objects were exported to Virtools. There are five
main actions that need to be done in Virtools, such as:
i.
Objects arrangement
ii.
Animation of the cars
iii.
Adding the stereotype sound to increase
reality
iv.
Incorporate interaction
v.
Integration with the HMD

4.4. Modeling the Trees
The trees were used to enhance the realism effect to
the environment. The trees were placed in every corner
of the road and in front of each building. The trees
were taken from the built-in model provided in Maya.
The picture of the trees can be seen in Figure 9.

5.1. Object location and arrangement in
Virtools
All objects imported from Maya must be arranged
carefully. Some of the objects were resized in order to
make sure that the objects relates properly to the
overall environment. The arrangement of the
environment can be seen in Figure 12.
Figure 9. The Trees

4.5. Modeling the Cars and Helicopter
Models of the cars and helicopter were taken from
the ready-made model available from the internet. The
models were then modified in terms of their shapes and
colours. The snapshot of one of the cars and helicopter
is shown by Figure 10 and Figure 11.

Figure 12. The arrangement of the environment

104

speaker will become louder compared to the right
speaker.
However, the wind sound was not attached to any
object but was set as background. We configured the
sound of the wind so that it could only be heard when
the elevator is raised to a certain height. The wind
sound is disabled when the elevator is on the ground
level. Figure 15 shows the snapshot of the sound set up
in Virtools.

5.2. Animating the cars
The cars need to be animated to mimic the real
world scenario. The road was designed so that the
traffic can flow in both directions. To animate the car,
we used path animation. We created a path for the car
to follow. Since the road is two-ways road, two path
were set up, one for each direction. The position of the
cars with the visible path can be seen in Figure 13,
while Figure 14 shows the bird eye view of the city
road.

Figure 13. Position of the cars
Figure 15. The block diagram of sound

5.4. Incorporating interaction
To replicate the user movement in the environment,
we created a virtual character to represent the user in
the virtual environment. To move around the
environment, the user basically will need to control the
virtual character. As the character moves around the
environment, Virtools will automatically update what
the user see inside the virtual environment through the
use of camera. Figure 16 shows the snapshot of camera
set up in Virtools which allows the users to see the
environment through the virtual character.

Figure 14: Bird eye view of the cars

5.3. Adding the stereotype sound to mimic
reality
In the effort of making the environment to be more
realistic, we have included stereotype sound of each
object in the environment such as the helicopter, the
wind, the elevator and the car passing by. We attached
each sound to the related object. For example, the
elevator sound was attached to the elevator; the car
sound was attached to the car and the sound of
helicopter was attached to the helicopter itself.
By attaching the sound to the object, it was easier
for us to simulate ‘distance’ in the virtual environment.
The further away the object to the character that we are
controlling, the softer the sound will be. The nearer we
are to the object, the louder the sound will be. By using
stereotype sound, the sound could be listened
dynamically rather than static. For example, when the
car moves on the left hand side of the listener, the left

Figure 16. The set up of camera in Virtools

105

We applied collision detection in the environment to
avoid the character from walking through the objects
inside the environment. The implementation of the
constraint was applied using one of the Virtools
building block or modules called Object Slider
Building Block. The usage of Object Slider Building
Block will allow us to simulate the collision detection.
When the character controlled by the user collide with
an object in the environment, the character will slides
along the object surfaces.
Character Controller Building Block was used to
add animations (e.g. move forward, backward, jump,
and run) to the character. Each of the animation was
assigned to the arrow key on the keyboard using
Keyboard Mapper Building Block. The Character
Keep-on-floor Building Block was used to keep
character on a user-defined floor which in our case is
the road.

Figure 18: The installation of HMD.

6. Future Work
As mentioned before, photo realism is one of the
important factors affecting the present (level of
immersion) of the subject in the virtual environment.
Are there any other factors that need to be considered?
For future work, we plan to test and measure the
anxiety level of the subjects by using three different
setups. The first setup is by using big display screen
projected through projector. Second setup is looking at
the virtual world using HMD, and the third setup is
where the subjects looking at the virtual world using
HMD including other set up such as the wind effect.

5.5. Integration with Head Mounted Device
(HMD)
In our case, we were using a stereoscopic 5DT Head
Mounted Display with the following specification: 80026 Resolution 800x600 per display, 26° Diagonal
Field-of-View, LCOS Display Technology and
Sennheiser HD25 (16Hz - 22kHz) Headphones . Figure
17 shows the image of 5DT HMD used in our lab.
The environment runs on Pentium 4 3GHz Graphic
Workstation, 2 GB RAM using NVIDIA graphic card
(Quadro FX1400, 128 Mb). There are some settings
that need to be made to the graphic card display before
we can connect the HMD to the PC [9].
First, we need to set the 3D display setting to
‘clone’ mode so that the environment is projected to
both the monitor and to the HMD screen. Second, we
need to set the resolution of the virtual world to 800 x
600.
Finally, the HMD is connected to the PC using the
VGA port. Figure 18 shows the details of how to
connect the HMD to the PC.

7. References
[1] Sean M. Grady, Virtual Reality: Computers Mimic The
Physical World, Facts on FileInc. 1998.
[2] John Vince, Virtual Reality Systems , ACM Press Book,
Addison-Wesley Publishing, 1995.
[3] Fan Dai, “Virtual Reality for Industrial Applications”,
Springer, 1998.
[4] Brooks Jr., F. P. (1999). "What's Real About Virtual
Reality?", IEEE Computer Graphics And Applications, 1996
[5] Virtools, http://www.virtools.com/
[6]
Virtools
SDK
Abstract,
http://www.virtools.com/solutions/products/pdfs/SDK_abstra
ct.pdf
[7]
Autodesk
MAYA,
http://usa.autodesk.com/adsk/servlet/index?id=7635018&site
ID=123112
[8]
Autodesk
3dsmax,
http://usa.autodesk.com/adsk/servlet/index?siteID=123112&i
d=5659302

Figure 17. 5DT HMD

[9] 5DT HMD 800-26 Series, User’s Manual, Fifth
Dimension Technologies, http:\\www.5DT.com

106

