Fifth International Conference on Computer Graphics, Imaging and Visualization
Visualisation

Kohonen-Swarm Algorithm for Unstructured Data in Surface Reconstruction
Fadni Bin Forkan1 and Siti Mariyam Hj Shamsuddin2
Faculty of Computer Science & Information Systems,
Universiti Teknologi Malaysia, 81310 Skudai, Johor Malaysia
{1fuelcon@gmail & 2 mariyam@utm.my}
There are many issues that have arisen in surface
reconstruction particularly in choosing the appropriate
techniques and methods. There are two types of input
that are obtained from the object which need to be
reconstructed. First, the inputs that are obtained from the
scanned image using scanners such as image mesh and
graphic computerization [8,1,11,21,10,15,18].
Second, the extracted point data from the scanned
image. These points are usually scattered and have noise.
If these points are not fixed, it will cause the constructed
surface appears differently from the original one. These
data are often organized using mathematical approach,
for instance distance formulation, and statistical theory
[5,13,17,12].
Hence, the issue in surface reconstruction is to rearrange the scattered point data to be more organized.
Realising the importance of having organized data, few
studies have been conducted by incorporating the
Artificial Intelligence (AI) in reconstructing surfaces
using Artificial Neural Network (ANN) [2,4,23,20,19],
and Functional Network [14,9,16,7,22].
Another issue in surface reconstruction is due to
high computerization cost and longer processing time
due to their formulation and programming complexity.
Since late 1990’s and 2000’s, few AI techniques have
been employed in surface fitting such as Kohonen
networks [6,2] and genetic algorithm [3]. Genetic
algorithm seems to be an alternative solution to the
problem of finding optimum in the process of surface
fitting. However, due to its iterative steps, the technique
consumes longer processing time, and sometimes,
difficult to converge.
Consequently, there is a need to explore alternative
solutions that can produce better algorithms that can
benefit surface reconstruction process. This paper
proposes a hybrid Kohonen-Swarm algorithm for surface
reconstruction by restructuring unorganized points. We
propose growing grid in Kohonen network to generate
mapping dimension that can be adapted to the given data
accordingly. Subsequently, Particle Swarm Optimization
(PSO) algorithm will fit the surfaces by probing the
optimized surfaces in the fitting process. The proposed

Abstract
This work introduces a new method for surface
reconstruction based on hybrid soft computing
techniques: Kohonen Network and Particle Swarm
Optimization (PSO). Kohonen network learns the sample
data through mapping grid that can grow. The
implementation is executed by generating Kohonen
mapping framework of the data subsequent to the
learning process. Consequently, the learned and wellrepresented data become the input for surface fitting
procedure, and in this study, PSO is proposed to probe
the optimum fitting points on the surfaces. The proposed
algorithms are applied on different types of curve and
surfaces to observe its ability in reconstructing the
objects while preserving the original shapes. The
experimental results have shown that the proposed
algorithm have succeeded in producing the
reconstructed surfaces with minimum errors generated.
Keywords: Surface reconstruction, Kohonen network,
Growing grid, Particle Swarm Optimization.

1. Introduction
Reconstruction of an object is the main process in
reverse engineering. This is important in situation where
surface of a product has damage or the product model
has no longer exists. To regenerate a model based on
existing surfaces, it has to be scanned using scanner tool
to get the digital image of the object. That digital image
then will be used to produce a new model.
Surface reconstruction consists of two main step, i)
parameterization and ii) surface fitting. In 3-dimensional
surfaces, parameterization is a process of mapping the
3D surfaces to 2D form and defines relationship among
the surfaces points. In contrast, surface fitting is a
procedure of fitting the surfaces through relationship and
map that has been obtained from the parameterization
procedure.

978-0-7695-3359-9/08 $25.00 © 2008 IEEE
DOI 10.1109/CGIV.2008.58

5

algorithm is compared to the conventional Kohonen
network for benchmarking performance effectiveness.
This paper is organized as follows: Section 2
describes the proposed method: Kohonen-Swarm
algorithm. Section 3 explains the experiment setup,
discussion and analysis, and finally follows by the
conclusion.

3.1. Generation of Mapping Framework with
Kohonen Network
Kohonen network can learn from a set of data
without supervision and detail information of the data. In
this study, Kohonen network is created as a 3D map that
consists of weight nodes. Each node has a position
values of (x,y,z) that represent the coordinates of the
surface. These nodes are related to each other to form the
topological properties for each surface.
In this study, the proposed Kohonen network is a
rectangular map and being enhanced using growing grid
method. B-Spline is employed for surface representation
purposes. Kohonen network is trained using random data
sample and the nodes are growing according to the
surface structure.
In standard Kohonen architecture, the map
dimension (mxn) is defined initially, and will not
changed through the learning process. However, in this
study, the value of the dimension (n and m) can be
changed accordingly, and it is based on the data. The
proposed algorithm for the growing grid Kohonen
network is given below:

2. Kohonen-Swarm Algorithm for Surface
Reconstruction
In this study, we propose a hybridization of kohonen
network and PSO in surface reconstruction. A growing
grid algorithm in Kohonen network learning is exploited
to organize the scattered point data, while PSO algorithm
is implemented for surface fitting. The procedures for the
proposed reconstruction method are as follows (Figure
1):
i. Organization of the unstructured data with growing
grid Kohonen network.
ii. Construction of the initial surfaces framework from
the newly organized points using B-Spline.
iii. Optimization of surfaces with PSO by fitting
procedure.
The data for the experiments are in unorganized
format. Hence, we need to organize these data
accordingly for surface reconstruction. Subsequently, the
generated output from the network learning becomes the
input for PSO surface fitting.

i.

Initialize number of neuron and grid size. In this
study, n = 2, m = 2 and number of neurons = n x m =
4.
ii. Initialize the position of all the neurons (x,y,z).
Neuron coordinates are set to random numbers
within the bounding box of the sampled points. All
neurons are initialized as mobile and active.
iii. Initialize the weights W for all sample point to 1.
iv. Every neuron retains a win counter Winc that
accumulates the number of times it is chosen
(winning neuron). Initially Winc = 0.
v. Choose a sample point Ps in random order.
vi. Find the closest active neuron (winning neuron) to
the sample point Ps using Euclidean distance. The
win counter Winc for winning neuron is increased.
vii. Determine whether winning neuron are the boundary
neurons. Boundary neurons are the neurons N ( i , j )
where i = 0 or i = n or j = 0 or j = m. The weight W
of sample point is increased if the boundary neuron
is detected; else the weight is reset to 1. If the
winning neuron is not a boundary neuron, the
boundary neurons will not be included during the
updating position later.
viii. Update the position of each active and mobile
neuron in the neighbor hood of the winning neuron
with respect to the sample point (according to the
update rules below).
ix. Determine whether the grid size should be increased
or not (according to the grid size update)
x. Increment time step s. If s is smaller than the run
length L, go back to step 5, otherwise stop.

Figure 1: A Framework of the Proposed Method

3. Implementation
Figure 1 illustrates the framework of the proposed
study. It commences by performing the growing grid
Kohonen network to the unorganized point data, and
follows an optimization of the surfaces using PSO.

6

The neuron update rules and parameters are:
Projected sampled points Ps are represented in
(x,y,z) coordinates.
ii. Initial and final neighborhood radius: R0 , R f .
i.

iii. Initial and final learning rate : α 0 , α f .
iv. Initial and final width parameter : σ 0 , σ f .
v. Run Length : L
vi. The neighborhood of the winning neuron is defined
as follows:
N ( i, j )
that satisfied:
All the neurons
i − iwin + j − jwin <

R0 ⋅ ( s − L )

L
vii. The neuron position update is defined as:
N ( i, j ) . position = N ( i, j ) . position + G s ⋅ ( Ps − N ( i, j ) . position )

Figure 2: Node Addition to Column
iv. If Nwin and Nn are on the same column, add a row
of neurons between the rows of Nwin and Nn:
- Increase the network size n by 1 and modify the
indices of all neuron accordingly;
- The new row position are half value between
Nwin and Nn (Figure 3).

where G s is Gaussian training function:

Gs = αs ⋅ e

⎛ ( i − i ) 2 + ( j − j )2
win
win
−⎜
⎜
2σ s2
⎝

⎞
⎟
⎟
⎠

,

where α s is the learning rate for point s:
Ws

⎛ α0 ⋅ ( s − L ) ⎞ ⎞
⎟ ⎟⎟ .
L
⎝
⎠⎠

⎛
⎜
⎝

α s = 1 − ⎜1 − ⎜

σ s is defined as the current width :
σs =

σ 0 ⋅( s − L)
L

.

The grid size is increased by adding one row or
column to the grid and can be implemented as follows:
i.

Determine the maximum number of winning counter
Winc. In this case the number of maximum winning
counter is 5.
ii. If the winning counter Winc for winning neuron Nwin
has reached the maximum value, then find the direct
neighbor Nn with the smallest number of winning for
the neuron Nwin.
iii. If Nwin and Nn are on the same row, add a column
of neurons between the columns of Nwin and Nn:
- Increase the network size m by 1 and modify
the indices of all neuron accordingly;
- The new column position is half value between
Nwin and Nn (Figure 2).

Figure 3: Node Addition to Row
v.

Reset the winning counter of all the neurons to zero
and continue the Kohonen algorithm.

To generate an initial shape of the surfaces, B-Spline
technique is implemented by parameterization and knot
vector generation. In this case, we use centripetal
equaation as below:
i −1

uij =

∑

Pl +1, j − Pl , j

1/ 2

∑

Pl +1, j − Pl , j

1/ 2

l =1
mu −1
l =1

7

2 ≤ i ≤ mu ;1 ≤ j ≤ mv

with

the distance of the point Ps from each particle
surface S p ( u p , v p ) and is given as:

u1, j = 0.0, j = 1, 2,…, mv ,

n

j −1

vij =

∑P

l =1
mv −1

∑
l =1

− Pi,l

1/2

Pi ,l +1 − Pi ,l

1/2

i ,l +1

1 ≤ i ≤ mu ; 2 ≤ j ≤ mv

i =1 j =1

, and

v.

Compare particle’s fitness evaluation with particle’s
pbest. If current value is better than pbest, then set
pbest value equal to the current value, and the pbest
position equal to the current position.
vi. Compare fitness evaluation with the population’s
overall previous best. If current value is better than
gbest, then reset gbest to the current particle’s array
index and value.
vii. Change the velocity and position of the particle as
below:

vi ,1 = 0.0, i = 1, 2, …, mu .

B-Spline surfaces can be constructed through a set
of control points and a set of known knot as knot vector.
Knot vectors have a significant influent to the shape that
represents the control points. Therefore, to generate a
good surface, the quality of knot vectors should be
generated to yield better surface.
Assume that n + 1 parameter with u0 , u1 , …, un with
the degree p, we need m + 1 knot, where m = n + p + 1 .
The average knot vector is generated as follows:
t0 = t1 =
t j+ p =

1
p

Velocity = w * Velocity + c1 * rand () * (Vgbest − V particle ) +
c2 * Rand () * (V pbest − V particle ) ,

Vij = Vij + η Bi ( u s ) ⋅ B j ( vs ) ⋅ Fitnesss + Velocity

with
w = inertia weight
.
c1 = c2 = acceleration constant
viii. Repeat step 1 until a criterion is met.

= tp = 0
j + p −1

∑u
i= j

t m − p = tm − p +1 =

i

m

Fitness p = Ps − ∑∑ Bi ( u p ) ⋅ B j ( v p ) ⋅ Vijparticle

j = 1, 2, …, n − p
= tm = 1

4. Experimental Results
The experiments are conducted in 2 phases. The first
phase involves the organization of the surfaces by
Kohonen network in 2D mapping. The second phase
involves surface fitting with PSO where the number of
particle is based on the sample data.

To construct surfaces, knot vectors should be
generated based on average parameters for each row and
column as below:
si = ( ui ,0 + ui ,1 + " + ui , n ) / ( n + 1) in u direction,

rj = ( v0, j + v1, j + " + vm , j ) / ( m + 1) in v direction.

4.1. Experiment Setup
In this study, 3D form data have been used, and
these include mask, semi-sphere, 2 types of free-form
objects, and ship hull object (Table 1).

3.2. Surface fitting with PSO
The results from the parameterization with growing
grid Kohonen network is an initial mapping framework
of surfaces that need to be reconstructed. At the moment,
the scattered data points have been rearranged to form an
initial shape. However, the initial mapping framework
needs to be upgraded to obtain better surfaces and
shapes.
Surface fitting is generated subsequent to
parameterization process. In this study, PSO is exploited
to optimize the surfaces by finding the nearest points
(generated by Kohonen network) to the original surface.
The proposed PSO algorithm in surface optimization is
described as follows:

Table 1: Sample Data for Surface
Data

Number of Data

Mask
Semi-sphere

1470
1951

Free-form-1,

y = x4 − z4

1600

Free-form-2,

y = x5 + z5

1600

Ship hull

1488

The specification of growing grid Kohonen network
and PSO design are shown in Table 2 and Table 3.
Table 2:Growing grid Kohonen network architecture
Parameter
Value
Learning rate
0.25
Num. of iteration
30000
Initial node
2x2
Num. of weight node
Depends on data

i. Choose a sample point Ps in random order.
ii. Initialize a population (array) of particle with
random positions and velocities.
iii. Generate initial surface of each particle.
iv. For each particle, evaluate the desired optimization
fitness function. In this paper the fitness function is

8

Table 3: PSO architecture
Parameter
Value
Num. of particle
5
Num. of iteration
3000
Minimum Error
0.0000193
Accelerator constant, C1
1.0
Accelerator constant, C2
0.2
Time_step
0.05
Initial weight value
0.729844

points being used in this study are employed to assist in
generating the surfaces subsequent to the optimization
procedure.
Table 5: Errors for PSO algorithm

4.2. Experimental Analysis
Errors evaluation are important criteria when
evaluating the performance of growing grid Kohonen
network and PSO. The error is a difference between the
results of the process and the original value. In this
study, we use the distance between the generated
surfaces (initial mapping framework) and the original
surfaces for Kohonen network, and distance between the
generated optimized surfaces and the original surfaces
for PSO. The error is calculated based on Mean-Square
Error function as below:
n

MSE =

∑ ( ai − xi )

4.3. Results Discussion
From the experiments, we can see that the
exploitation of growing grid in Kohonen network
learning has conveyed better impact to the efficiency of
initial surface mapping framework. This is due to the
ability of the Kohonen network to construct a dynamic
grid that can grow based on the row or column of its
mapping dimension automatically. This scenario can
benefit the user since the learning process can be
performed based on data types without the intervention
of early parameters definition that normally occurs in
standard Kohonen network. We also propose the parallel
identification of boundary process for each surface;
hence all the points can be learned and preserved during
surface reconstruction process.

2

i =1

n

where
ai is the generated value,
xi is the original value, and
n is the number of data.

The optimization of the surface fitting has
successfully been conducted in this experiment. The PSO
algorithm has simplified the process of surface fitting
with efficient algorithm. The results have shown
significant impact of PSO in optimizing the surfaces with
very minimum error. Further illustrations of PSO in
optimizing surfaces reconstruction are given in Appendix
A.

The ability of an algorithm to converge shows that
the algorithm has successfully trained and can produce
the desired output. If the algorithm fails to converge,
then it indicates the algorithm is not well-trained and
fails to generate a good surface.
From Table 4, we find that the Kohonen network has
successfully in organizing the point’s data with minimum
error surfaces. The growing node field indicates that the
final number of weight nodes in the mapping generated
during learning process.
The output of this process becomes the input to PSO
algorithm for probing the most optimized surfaces.

5.0

Conclusions and Future Work

A hybrid method for simplifying the process of
surface reconstruction has been presented in this study.
An application of Soft Computing techniques is not only
assist in providing an alternative solution for surface
reconstruction in computer graphics, but also can benefit
to the development of the research in the Soft Computing
area itself.
Experimental results have shown that the proposed
method has produced very convincing outcomes. In
conclusion, the contributions of our study can be
summarized as follows:

Table 4: Errors for growing grid Kohonen network

i.
In Table 5, the generated error by PSO is relatively
very small; hence indicates the surfaces are successfully
reconstructed with very minimum error. The control

9

The modification of Kohonen learning algorithm
using growing grid for structuring unorganized
points data.

ii. The development of new PSO algorithm in surface
reconstruction process.
iii. The hybridization of Kohonen network and PSO to
develop a complete and simplified Kohonen-Swarm
algorithm for surface reconstruction in computer
graphics.

[8]

For future study, the exploration of B-Spline
surfaces, NURBS surfaces and Nu-NURBS surfaces will
be further conducted by exploiting our proposed
hybridization algorithms to optimize the behavior of the
weights and knot parameters accordingly.

[9]

[10]

Acknowledgement

This work is supported by Ministry of Higher Education
(MOHE) under Fundamental Research Grant Scheme
(FRGS VOT 78202). Authors would like to thank
Research Management Centre (RMC) Universiti
Teknologi Malaysia, for the research activities and Soft
Computing Research Group (SCRG) for the support and
incisive comments in making this study a success.

6.0
[1]
[2]

[3]

[4]

[5]

[6]

[7]

[11]

[12]

References
N. Amenta, S. Choi & R.K. Kolluri. The Power
Crust. In: Proceeding of 6th ACM on Solid
Modeling, Michigan, USA. Pp. 249-266. 2001.
J. Barhak & A. Fischer. Adaptive Reconstruction
of Freeform Objects with 3D SOM Neural
Netwrok Grids. In: Proceedings of 9th Pacific
Conference on Computer Graphics and
Applications, Tokyo, Japan. IEEE. pp. 97-105.
2001.
Y. Bokhabrine, Y.D. Fougerolle, S. Foufou & F.
Truchetet. Genetic Algorithms for Gielis Surface
Recovery From 3D Data Sets. In: IEEE
International Conference on Image Processing
(ICIP2007). IEEE. Vol. 2. pp. 549-552. 2007.
A.M.B. Junior, A.D.D. Neto & J.D. de Melo.
Surface Reconstruction using Neural Networks
and Adaptive Geometry Meshes. In: Proceedings
of 2004 IEEE International Joint Conference on
Neural Networks. IEEE. Vol. 1. pp. 807. 2004.
K.S.D. Cheng, W. Wang, H. Qin, K.Y.K. Wong,
H. Yang & Y. Liu. Fitting Subdivision Surfaces to
Unorganized Point Data usin SDM. In:
Proceedings of 12th Pacific Conference on
Computer Graphics and Application. Pp. 16-24.
2004.
B. Fritzke. Growing Grid – A Self-Organizing
Network with Constant Neighborhood Range and
Adaptation Strength. In: Neural Processing
Letters (1995). Vol. 2. pp. 9-13. 1996.
A. Galvez, A. Iglesias, A. Cobo & J.P. Pey. Bézier
Curve and Surface Fitting of 3D Point Clouds
Through
Genetic
Algorithms,
Functional
Networks and Least-Squares Approximation. In:

[13]

[14]

[15]

[16]

[17]
[18]

[19]

10

Computational Science and Its Applications
(ICCSA2007). Springer Berlin/Heidelberg. Vol.
4706/2007. pp. 680-693. 2007.
H. Hoppe, T. DeRose, T. Duchamp, J. McDonald
& W. Stuetzle. Surface Reconstruction from
Unorganized Points. In: Proceedings of
SIGGRAPH’92. pp. 71-78. 1992.
A. Iglesias, G. Echevarr & A. Galvez. Functional
Networks for B-Spline Surface Reconstruction. In:
Future Generation Computer Systems 20 (2004).
Elsevier. Pp. 1337-1353. 2004.
S. Ivekovic & E. Trucco. Fitting Subdivision
Surface Models to Noisy and Incomplete 3-D
Data. In: Computer Vision/Computer Graphics
Collaboration
Techniques.
Springer
Berlin/Heidelberg. Vol. 4418/2007. pp. 542-554.
2007.
I.V. Ivrissimtzis, W.K. Jeong & H.P. Seidel.
Using Growing Cell Structures for Surface
Reconstruction. In: Shape Modeling International,
2003.
Max-Plank-Inst.
fur
Informatik,
Saarbrucken, Germany. Pp. 78-86. 2003.
A.C. Jalba & J.B.T. Roerdink. Efficient Surface
Reconstruction using Generalized Coulomb
Potentials. In: Transactions on Visualization and
Computer Graphics. Univ. of Groningen,
Groningen. Vol. 13. Issue 6. pp. 1512-1519. 2007.
M. Kazhdan, M. Bolotho & H. Hoppe. Poisson
Surface Reconstruction. In: Proceedings Of The
Fourth Eurographics Symposium On Geometry
Processing. Pp. 61-70. 2006.
G.K. Knopf & A. Abouhossein. Adaptive
Reconstruction Of Anatomical Surfaces From
Human Body Measurements. In: IEEE
International Conference on Systems, Man, and
Cybernetics, 2000. IEEE. Vol. 2. pp. 1181-1185.
P. Lavoie, D. Ionescu & E. Petriu. Constructing
3D Virtual Reality Objects from 2D Images of
Real Objects using NURBS. In: IEEE
International
Conference
on
Virtual
Environments, Human-Computer Interfaces, and
Measurement Systems. Pp. 117-124. 2007.
B. Li, Q. Meng & H. Holstein. Compact
Representation of Range Imaging Surfaces. In:
IEEE International Conference on Image
Processing, 2006. IEEE. Pp. 2189-2192. 2006.
A.A. Mahmoud. Development of Hybrid NURBS
Skinning Surface Method for Ship Hull Design.
Phd Thesis. Universiti Teknologi Malaysia. 2005.
J. Nie, T. Liu, L. Guo & S.T.C. Wong.
Reconstruction Of Central Cortical Surface From
Brain Mri Images: Method And Application. In:
4th IEEE International Symposium on Biomedical
Imaging: From Nano to Macro, 2007. pp. 213216. 2007.
V. Noguera, L. Tortosa & A. Zamora. Analysis
And Efficiency Of The GNG3D Algorithm For
Mesh Simplification. In: Applied Mathematics
and Computation. Elsevier. 2007.

[20]

[21]

[22]

G. Sun, S.F. Qin & D.K. Wright. Neural Networks
Based Recognition of 3D Freeform Surface from
2D Sketch. In: The International Conference on
Computer as a Tool, EUROCON 2005. Vol. 2. pp.
1378-1381. 2005.
J. Wu & L. Kobbelt. Optimized Sub-Sampling of
Point Sets for Surface Splatting. In: Computer
Graphics Forum. Vol. 23. Issue 3. pp. 643-652.
2004.
X.M. Wu, G.X. Li & W.M. Zhao. Sparseness
Points Cloud Data Surface Reconstruction Based
on Radial Basis Function Neural Network

[23]

(RBFNN) and Simulated Annealing Arithmetic.
In: Computational Intelligence and Security
Workshops, CISW 2007. pp. 877-880. 2007.
L.M. Yan, Y.W. Yuan & X.H. Zeng. Adaptive 3D
Mesh Reconstruction from Dense Unorganized
Weighted Points using Neural Network. In:
Proceedings of International Conference on
Machine Learning and Cybernetics, 2004. Vol. 5.
pp. 3238-3242. 2004.

APPENDIX A

Original

Kohonen
PSO
Figure 4: Results for Mask Surface

Original

Kohonen
PSO
Figure 5: Results for Semi-sphere

Original

Kohonen
PSO
Figure 6: Results for Free-form-1

Original

Kohonen
PSO
Figure 6: Results for Free-form-2

Original

Kohonen
PSO
Figure 7: Results for Ship Hull

11

