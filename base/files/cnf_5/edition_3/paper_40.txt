Fifth International Conference on Computer Graphics, Imaging and Visualization
Visualisation

Skew Estimation and Correction of Text using Bounding Box
Muhammad Sarfraz
Department of Information Science
Kuwait University
P.O. Box 5969, Safat 13060, Kuwait
Email: prof.m.sarfraz@gmail.com

Zeehasham Rasheed
Department of Information and Computer
Science, King Fahd University of Petroleum and
Minerals, Dhahran 31261, Saudi Arabia
Email: hasham@kfupm.edu.sa
the introduction of the skew estimation phase has
become mandatory. In fact, a little skewing of the
page is often introduced during processes such as
copying or scanning. Today, documents are ever
more free styled. Moreover, text aligned along
different directions is not an uncommon feature. The
subsequent stages of OCR systems, mainly depend
upon the accuracy of preprocessing stage. For
instance, if OCR system under estimates or over
estimates skew angle, then OCR system which is
utilizing projection based technique will fail
miserably.
The paper has been organized in such a way that,
in the next section, we provide brief literature survey
of skew estimation algorithms in which we discuss
some consequences related to them. Two newly
proposed algorithms are explained in Section 3, some
experimental results are also shown in this section.
Section 4 contains a comparison analysis of the two
proposed algorithms with some other algorithms in
the literature. Section 5 concludes the paper.

Abstract
This paper, in addition to reporting some
existing techniques, proposes a new technique for
skew correction. It includes a novel document skew
detection algorithm based on bounding box
technique. The algorithm works quite efficiently for
detecting the skew and then correcting it. The method
has been experimented on various text documents
and very promising results have been achieved given
more than 97% accuracy. A comparative study has
been reported to provide a detailed analysis of the
proposed method together with some other existing
methods in the literature.
Keywords íí Image processing, skew estimation, tilt
correction,
character
recognition,
connected
component.

1. Introduction
Preprocessing is a stage in typical OCR system,
which focuses on enhancing the acquired image to
increase the ease of feature extraction and to
compensate for the eventual poor quality of the
scanned document [1]. When patterns are scanned
and digitized, the raw data may carry a certain
amount of noise. If the acquired image contains
noise, it is subjected to the preprocessing stage where
the “de-noising” of the image takes place.
Furthermore, when a document is fed to the scanner
either mechanically or by a human operator, a few
degrees of skew (tilt) is unavoidable. Skew correction
is a process which aims at detecting the deviation of
the document orientation angle from the horizontal or
vertical direction. Skew detection and correction are
important preprocessing steps of document layout
analysis and OCR approaches.
OCR systems typically assume that the
documents are printed with a single direction of the
text and that the acquisition process did not introduce
a relevant skew. The advent of flat bed scanners and
the need to process large amounts of documents at
high rates, made the above assumption unreliable and

978-0-7695-3359-9/08 $25.00 © 2008 IEEE
DOI 10.1109/CGIV.2008.10

2. Literature Survey for Previous
Approaches
There has been a variety of techniques proposed
in the literature to estimate and correct the skew of
document images. Comprehensive surveys could be
found in [2-3]. Most of the skew estimation
techniques can be divided into main classes
according to the basic approach they adopt [2]. Some
of them are analysis of Projection Profiles [4-9],
Principal Component Analysis [10-14], Connected
Components Clustering [15-16].
The traditional projection profile approach was
proposed by Postl [5]. In this approach, the input
document is rotated through a range of angles and a
projection profile is calculated at each angle. Features
are then extracted from each projection profile to
determine the skew angle. This is computationally
expensive as it is performed directly on the original
document images. Moreover, it is sensitive to the
layout of the document image. Another projection
profile approach was proposed by Bloomberg and

259

Kopec [6] in which the original document image is
down-sampled before the projection profile is
computed. Therefore, the image data to be processed
is reduced and the computational cost is reduced
significantly. However, a major weakness is that its
detection accuracy is influenced by the document
image layout. It often fails on document images with
multiple font styles, sizes or the ones that contain a
large amount of non-text regions.
The second class of skew correction is based on
component analysis [15] in which most significant
eigenvector is calculated which leads to the skew
angle of distribution. The problem with this method
is that each eigenvector is constructed with support
from projections of every point. It is expensive in
terms of time and that it involves least squared
estimation technique and hence fails to account for
outliers which are common in images. The details of
some of the methods are provided in the following
subsections.

Steinherz [11] used this method on Latin text. It was
found that the performance is high when using the
background pixels for PCA rather than the
foreground. The algorithm of this method works as
follows:
1.
2.
3.
4.
5.

2.3. Blobs and Connected Component
Analysis Technique
This approach [16] is based on identification of
words within a single line. In general, it looks for the
connected components and estimates the optimum
skew angles of these components. The idea behind
this approach is that the distance between the
consecutive words in a single line is much smaller
than the distance between consecutive words in two
lines. So if we are able to make all words in a line as
one single object or blob, we then estimate the
orientation of the line. Initially, document image is
preprocessed by dilating the text pixels using suitable
structuring element or mask for identification of
connected components or blobs.
The convention used for the dimension of the
image array, in this paper, is I for rows and J for
columns. The centroids (xc,yc) of the image are
estimated using the following equations:

2.1. Projection Profile Based Technique
As we know that baseline is the part of the script
having most of the black pixels. Projection profile
based technique [4-9] takes the advantage of this
property to find the space between the lines of the
script. Then the tilt angle using projection and
rotation can easily be estimated. Projection Profile
based algorithm works as follows:
1.

2.

3.
4.

Convert the image into a set of vectors
describing each foreground pixel that makes
up the text.
Perform PCA on these points and pick the
eigenvector with the largest Eigen value. This
vector gives the direction of the baseline.
Rotate the image so that this estimated
baseline angle lies horizontal.
Take the projection histogram of the image.
Use the peak of this projection histogram to
determine the vertical position of the baseline.

Start with (T = 0) and project horizontally and
vertically to get the sum of the black pixels in
the binary image and record the max of these
two sums as well as T.
Decrease T by 1 and rotate the image
clockwise and project to get the maximum of
the two sums. If the current sum is greater than
the previous one then update the maximum
sum and T other wise go to the next T.
Repeat Step 2 till T=90.
Rotate the image either by T or by T+90
depending on whether the maximum are gotten
horizontally or vertically respectively.

I

xc

J

¦¦
x 1 y 1
I

yc

J

¦¦
x 1 y 1

2.2. Principal Components Analysis

x * g ( x, y )
g ( x, y )

(1)

y * g ( x, y )
g ( x, y )

(2)

where g(x,y) is the gray level of the pixel at the
location (x,y).
The orientations of the objects are located by
finding the angles of the major axes. The major axis
has the longest distance inside the object and passes
through the centroid of the object. The angle T of the
major axis with the horizontal line can be estimated
using the following equations:

Principal Components Analysis (PCA) is a way
of finding the directions along which a distribution
exhibits the greatest variation [10]. These directions
are termed in the Principal Components of the
distribution. They correspond to the most significant
eigenvectors of the covariance matrix of the data
points. PCA is used to find the principal axis of the
foreground distribution. This gives an angle for the
baseline but not necessarily its vertical position.

260

I

a

J

¦¦ ( x  x )
c

2

*

g ( x, y )

tan 2T

(3)

x 1 y 1
I

J

b 2¦¦ ( x  xc ) * ( y  yc ) * g ( x, y ) (4)
c

J

¦¦ ( y  y )
c

2

*

g ( x, y )

(6)

The parameters of a, b, and c, found in Equations (35) are used to estimate the major axis angle using
Equation (6).

x 1 y 1

I

b
ac

(5)

x 1 y 1

(a)

(b)

Figure 1. An Arabic text example: (a) Original Image, (b) Image of Figure 6(a) after Connected
Component Analysis.

Figure 2. Image of Figure 1 after Skew Correction.

(a)
(b)
Figure 3. An English text example: (a) Original Image, (b) Image of Figure 8(a) after Connected
Component Analysis applied.

261

The algorithm is as follows:
1. Take a specific mask, as structuring element,
and traverse the whole image to find connected
components.
2. Calculate the centroid of each connected
component or blob by using Equations (1) and
(2).
3. Find the major axis of connected component.
Since each blob looks like an ellipse, we
approximate each blob as an ellipse and detect
the major axis.
4. Find the angle T of the major axis with the
horizontal line using Equation (6).
5. Repeat Steps 2 - 4 for all blobs.
6. Take the average of all the angles (Tavg) and
rotate the image by angle Tavg.

points supposed to be found correctly forming a
perfect rectangle, we can easily find out the estimated
angle in much less time. The four extreme points could
be found using horizontal and vertical projections on
the image. The advantage of this Bounding Algorithm
is that if any two of the four corner points detected
correctly, it will give the accurate skewed angle. In
order to verify whether the extreme points are valid or
not, we use trigonometric relations and slope
estimations among four sides of bounding box.
1.
2.

Figure 1 (a) shows an Arabic text example. It can
be seen that, by using connected component analysis,
we can easily merge all words in a single line as one
blob, Figure 1(b). The estimated skew angle is found
to be 25.4 degrees compared with an original image
skew of 25 degrees. Figure 2 represents the text of
Figure 1(a) after applying tilt correction.
Another example of English text is shown in
Figure 3(a). It can be seen that, by using connected
component analysis, we can easily merge all words in
a single line as one blob, Figure 3(b). The estimated
skew angle is found to be 30.1 degrees compared with
an original image skew of 30 degrees). Figure 4
represents the text of Figure 3(a) after tilt correction.

3.

The algorithm is as follows:
Traverse the image in all the directions one by one
to get the four extreme points
Keep traversing the image until specific amount
of text (black) pixel is found. This will give the
extreme point in that direction. (We define a
threshold for the amount of black pixels).
Calculate the Euclidean distance between these
points. Euclidean distance is given by

d
4.

 x2  x1    y2  y1 
2

Check the length of opposite sides and slope of
adjacent sides of bounding box. The slope of a
line is defined by

m

5.

3. Proposed Work
This section proposes a new approach namely
Bounding Box Test. This method is based on finding
the extreme corners of text image, it is explained in
detail in Section 3.1.

6.

7.
8.

2

 y2  y1 
 x2  x1 

where (x1, y1) and (x2, y2) are the two points on the
line.
In this step we have two cases.
(a) When all the lines in the document are
justified. In this case, opposite sides are equal
and parallel and slope of adjacent sides
equals -1.
(b) The lines are not justified (or not of the same
length) either in the beginning or end of the
document.
In case if the opposite sides are not equal, make
use of theorems regarding parallel lines and find
the exterior and interior angles to solve the
bounding box inequality.
For each case, use trigonometric ratios to solve for
required skewed angle.
Rotate the image either by T or by T+90
depending on nature of rotation.

The demonstration of this algorithm is made in
Figures 5 and 6 when the lines are justified and not
justified respectively. Figure 5(a) is for a tilted text,
one can see the bounding box with red lines around the
text. The Figure 5(b) is obtained after Skew correction
by the algorithm.
Figure 6 shows that if the lines are not justified,
this algorithm is able to fine correct skew angle.

Figure 4. Image of Figure 3 after Skew
Correction.

3.1. Bounding Box Algorithm
Bounding Box technique is a way of finding the
extreme corners of text image. If the four extreme

262

Figure 6(a) is for a tilted text, one can see the
bounding box with red lines around the text. The

Figure 6(b) is obtained after Skew correction by the
algorithm.

Figure 5. (a) Bounding box with red lines, (b) After Skew Correction.

Figure 6. (a) Bounding box with red lines, (b) After Skew Correction.

Table 1. A comparative study of the
proposed methods to those in the literature.

Projection
Profile
Technique
Principal
Component
Analysis
Connected
Component
Analysis
Bounding
Box
Algorithm

Skew
Angle
(Original
Image)

Accuracy
(%)

Average
Time
(Seconds)

1-25
Degrees

99.09

3.02

1-25
Degrees

98.52

2.98

1-25
Degrees

99.50

2.55

1-25
Degrees

97.08

2.05

4. Comparison Analysis
This section is devoted to exhibit a comparative
study of different algorithms discussed and proposed
in Sections 2 and 3. This study has been made after
making various experiments. These experiments were
made on 3.2 GHz processor and 512 MB Ram.
The Table 1 shows comparative analysis among
different algorithms used for skew correction. We
can see that algorithms which are more accurate take
much time for computation. As in the case of
Projection Profile Technique, the computation time is
more as compared to other algorithms. Similarly the
algorithms which take less time are comparatively
less accurate. The proposed algorithm using
bounding box technique is fastest among the listed
algorithms in Table 1. However, it is relatively
optimal in terms of accuracy.

263

[5] Postl, W., (1986). Detection of linear oblique
structures and skew scan in digitized documents. In:
Proc. 8th International Conference on Pattern
Recognition, Paris, France, 687–689.
[6] Bloomberg, D.S., Kopec, G.E., (1993). Method and
apparatus for identification and correction of
document skew. Xerox Corporation, US Patent
5,187,753.
[7] Bloomberg, D.S., Kopec, G.E., Dasari, L. (1995).
Measuring document image skew and orientation.
Proc. SPIE 2422, 302–316.
[8] Ishitani, Y, (1993), Document skew detection based
on local region complexity. In: Proc. 2nd Internat.
Conf. on Document Analysis and Recognition,
Tsukuba Science City, Japan, 49–52.
[9] Liolios, N., Fakotakis, N., Kokkinakis, G., (2002). On
the generalization of the form identification and skew
detection problem. Pattern Recognition 35, 253–264.
[10] Smith, L.I. (February 26, 2002), A Tutorial on
Principal
Components
Analysis,
http://www.cs.otago.ac.nz/cosc453/student_tutorials/p
rincipal_components.pdf.
[11] Steinherz, T. Intrator N. and Rivlin, E. (1999), Skew
detection via principal components analysis. In
Proceedings of the 5th International Conference on
Document Analysis and Recognition, IEEE Computer
Society, 153–156.
[12] Sarfraz, M., Zidouri, A., and Shahab, S.A. (2005), A
Novel Approach for Skew Estimation of Document
Images in OCR System, Computer Graphics, Imaging
and Visualization – New Trends, Sarfraz, M., Wang,
Y., and Banissi, E. (Eds.), ISBN: 3-7695-2392-7,
IEEE Computer Society, USA, 175-180.
[13] Steinherz, T. Intrator, N. Rivlin, E. (1999), Skew
Detection via Principal Component Analysis,
Proceedings of the Fifth International Conference on
Document Analysis and Recognition, IEEE Computer
Society, USA, 153 – 156.
[14] Okun, O. Pietikainen, M. Sauvola, J. (1999), Robust
Skew Estimation on Low-Resolution Document
Images, Proceedings of the Fifth International
Conference on Document Analysis and Recognition,
IEEE Computer Society, USA, 621 – 624.
[15] Ramesh, D.R. Piyush, M. K. Mahesh, D. D. (2006),
Skew Angle Estimation and Correction of Hand
Written, Textual and Large areas of Non-Textual
Document Images: A Novel Approach, IPCV 2006,
510-515.
[16] Sarfraz, M., Mahmoud, S.A. and Rasheed, Z. (2007),
On Skew Estimation and Correction of Text:
Computer Graphics, Imaging and Visualization – New
Advances, Banissi, E., Sarfraz, M., and Dejdumrong,
N. (Eds.), ISBN: 0-7695-2606-3, IEEE Computer
Society, USA, 308 – 313.

In the experimental study, the documents have
been tilted within 25 degrees when they were
scanned. Fifty images were tested and each of them is
analyzed using different skewed angles within 25
degrees to get the best results. Table 1 demonstrates
the average experimental results made on different
images. It is to be noted that the experimental results
have been made on images of different sizes.

5. Conclusion and Discussion
In this paper, an efficient and novel algorithm for
document skew is proposed. The algorithm is based
upon bounding box method. This algorithm takes
much less time to compute skew angle and is very
efficient in terms of time. This algorithm works over
a wide range of skewed angle. The proposed
algorithm relatively saves computation time and
accuracy achieved is very reasonable and acceptable.
This scheme has been tested extensively on Arabic
fonts which are connecting in nature and other
languages like English, Chinese and Japanese which
are isolated in nature. The proposed scheme is
accurate within all practical limits. The experimental
results show that the proposed algorithm works well
on various documents including Arabic, English,
Chinese and Japanese. A comparative study, with
some of the prominent existing algorithms, indicates
that the proposed algorithm is efficient and accurate
and worth to use when a large number of documents
are under process. It can save a good amount of time.

6. Acknowledgments
This work has been supported by the Kuwait
University.

References
[1] Sadallah, S. and Yacu, S. (1985), Design of an Arabic
Character Reading Machine, Proceedings Computer
process, Arabic Language, Kuwait.
[2] Jonathan J. H. (1998), Document Image Skew
Detection: Survey and Annotated Bibliography, World
Scientific, 40-64.
[3] Jung, K. Kim, K.I., Jain, A.K, (2004), Text
Information Extraction in Images and Video: A
Survey, Pattern Recognition, Vol. 37(5), 977-997.
[4] Akiyama, T. and Hagita, N. (1990), Automatic entry
system for printed documents, Pattern Recognition,
Vol. 23(11), 1141 – 1154, Elsevier Science.

264

