Fifth International Conference on Computer Graphics, Imaging and Visualization
Visualisation

A New Framework for Plot-based Interactive Storytelling Generation
Hussein Karam Hussein Abd El-Sattar1,2
Ain Shams University, Faculty of Science,
Mathematics & Computer Science Department, Cairo, Egypt
2
Prince Sultan University, Riyadh, Saudi Arabia
1

based on Petri nets reachability analysis. The idea is
derived from the study of both Petri nets (PN) and
interactive storytelling technology. The approach uses a
Petri nets as a state-based model for story plot
generation, where each scene in a plot is regarded as a
goal to be reached. Depending on the user interactions
and story context, different consequent goals may be
reached after a certain goal, i.e. different scenes are
achieved in different situations. The main contribution
in this paper was to show that: (i) PN as a graphical and
modeling tool can be used as a visual-communication aid
in films to model the computer graphics scenes (story
plot) and characters, (ii) PN characteristics such as: the
linearity of the firing rule, the monotonicity of the
enabling condition and the marking of the net, enable PN
analysis techniques such as the invariant calculus, the
coverability graph technique, or approaches based on
unfolding analysis, and (iii) most computer-based
application techniques developed outside the realm of
Petri nets can be applied to Petri nets as well.

Abstract
Interactive storytelling (IS) is a promising growth
area in computer-based technologies, in the
entertainment computer industry, and other applied
areas. Content/story production is a major bottleneck in
the entertainment industry. The plot of the story and the
character(s) are the two most important elements of a
story. Previous work has identified key problems, such
as narrative control, the duality between character and
plot, and the tension between interactivity and
storytelling. In this paper we developed a new framework
for solving the narrative control problem and model the
story plot generation based on Petri nets reachability
analysis. The idea is derived from the study of both Petri
nets (PN) and interactive storytelling technology. The
approach uses a Petri nets as a state-based model for
story plot generation, where each scene in a plot is
regarded as a goal to be reached. A complex scene is
represented as a composite goal, and a simple scene is
represented as an atomic goal. Validation of our
approach is given by discussion, analysis and an
illustration of some experimental results.

The paper is organized as follows. Section 2, gives a
brief introduction to interactive storytelling technology,
interactive drama, and Petri nets. Section 3 reviews
some of the previous work in interactive storytelling and
the problems that were encountered. The development
processes of the proposed framework for modeling the
story plot generation based on PN is discussed in section
4. Evaluation and practical performance results are
discussed in section 5. Section 6 concludes this paper
and outlines some directions for future work.

1. Introduction
With the rapid advancement of hardware and
software, entertainment computing industry has been
popularized during the last decade. Interactive
storytelling in the virtual environment promises to be an
important evolution in computer entertainment, reintroducing better narrative content and extending user
experience. Virtual environments are a digital media in
which each time more stories are told with the purpose of
teaching, training, entertaining or communicating
something to the users. Content/story production is a
major bottleneck in the entertainment industry. The
internet has certainly created a major stir, but the fact
remains that content/story generation is still the primary
means by which most people around the world get their
information.
Content/story production is not only
limited to producers, directors, actors/actresses, etc., but
also requires some level of explicit narrative
representation and narrative control. In the field of
interactive storytelling technology, we try to bridge a
connection between player desires and story content to
provide a deep connection between what the player does
in the story world and where the story leads. In this paper
we developed a new framework for solving the narrative
control problem and model the story plot generation

978-0-7695-3359-9/08 $25.00 © 2008 IEEE
DOI 10.1109/CGIV.2008.50

2. Basic Notions and Terminology
For clarity and accuracy, this section summarizes the
background and the basic terminology and notions that
will be used throughout this paper.

2.1. Interactive Storytelling Overview
Interactive storytelling is a developing kind of
computer entertainment in which the player plays the
role of the protagonist in a dramatically rich
environment. In traditional forms of storytelling, a
storyteller would present the scenario of a story to the
audiences in a predefined way (also known as a plot),
which limited the variation in character interactions and
context. The story refers to the succession of actions that
happen in the world represented by the narrative. A

317

narrative means a certain type of artistic and social
expression, where a kind of imitation of real events is
involved. In dramatic writing, stories are thought of as
consisting of events that turn (change) values. A value is
a property of an individual or relationship, such as trust,
hope, etc. In fact, a story event is precisely any activity
that turns a value. Thus one of the primary goals of an
interactive storytelling system should be to make sure
that all activity turns values, and is thus a story event.
Major value changes occur in each scene. Each scene is a
large-scale story event. Semantically, a scene (story
event) is an atom of a story plot, which involves the
interactions among a number of virtual actors with
dedicated roles, under a certain context. An actor is the
virtual entity which performs the tasks assigned from the
drama manager (director). Each actor has its own profile,
which includes states and preferences. Generally, scenes
are composed of beats, where the term beat refers to the
smallest unit of action that has its own complete shape. A
beat should not last longer than a few actions or lines of
dialog. Equivalently, a beat is a dramatic action that
occurs in a scene to achieve a narrative goal. A beat
consists of (1) preconditions; a list of predicates that
need to be true for the beat to be selected; (2) post
conditions; a list of predicates that will be true as a
consequence of firing the beat; (3) success and failure
conditions and (4) a joint plan to be executed by the
actors. The joint plan coordinates the actors in order to
carry out the specific beat. Beats serve several functions
and play an important role within the structure of our
proposed interactive storytelling framework. First, beats
are the smallest unit of dramatic value change. They are
the fundamental building blocks of the interactive story.
Second, beats are the fundamental unit of actor guidance.
The beat defines the granularity of plot/actor interaction.
Finally, the beat is the fundamental unit of player
interaction.

which are invisible to the player, but which affect the
way story world actors behave. Deikto is a form of
simplified English used by the storyteller. Deikto words
are story world elements which the player can come in
direct contact with. A Deikto sentence describes a
dramatic action taken by an Actor in the story world. If
past, it is called an event, if planned for the future it is
called a plan. A plan is a sentence that hasn't happened
yet. Plans are created by actors in reaction to events
during the reacting cycle. An Event is a sentence that has
already happened. Most events are plans which were
performed during the action cycle. Story worlds contains
all the concrete pieces that are used to build up the story
such as story world’s actors, places, stages, props as well
as past and present occurrences and future plans. On the
other hand, scripts are applied by actors at certain times,
causing changes in the story world or directing actors on
how to behave. Scripts are created using a special
scripting language. This language is built out of
operators, the same way that human language is built out
of words. Our approach uses a modified TVML as a
scripting language [8].

2.3 Petri Nets (PN)
A Petri nets (PN) [14,16] is an abstract, formal
model of information flow. It is a graphical and
mathematical modeling tool applicable to many systems.
As a graphical tool, PN can be used as a visualcommunication aid similar to flow charts, block
diagrams, and networks. As a mathematical tool, it is
possible to set up state equations, algebraic equations,
and other mathematical models governing the behavior
of systems. A Petri nets PN = ( N , M 0 ) consists of a
structure N and an initial marking M 0 , where:
N=(P,T,F,W) is a Petri net structure,

P = { p1 , p 2 ,L , p m } is a finite set of m places,
T = {t1 , t 2 ,L , t n } is a finite set of n transitions,
F ⊆ ( P × T ) ∪ (T × P ) is a set of arcs,
W : F → {1,2,3,L} is a mapping which

2.2. Interactive Drama Technology
There have been three main approaches in creating
interactive drama technology: “Branching Narrative
(Lots of story, little interactivity)”, “Narrative Game
(Lots of interactivity, little story)”, and “Storytronics
(Lots of both story and interactivity)”. In Storytronics
technology, interactive storytelling is achieved through
artistic works called story worlds. A story world is a
universe of dramatic possibilities. A story world is
played by a player, who controls the protagonist actor in
that story, with the other actors controlled by the
computer. It is comprised of two groups of information:
(i) dramatic components, and (ii) dramatic principles.
Dramatic components are the same things that make up
any story - the story’s actors, locations, props, and
occurrences. Dramatic principles are the unique way in
which a story builder expresses his or her authorial
voice. A story world is built up of many kinds of
elements. These elements are divided into three broad
categories: Deikto words, behavior controllers, and
scripts. Behavior controllers are story world elements

associates to each arc of the net its weight,
M 0 : P → {1,2,3,L} is the initial

marking

representing the initial state of PN.

P ∩ T = φ , P ∪ T ≠ φ.
A special PN in which place capacities and arc
weights are equal to one is called a condition/event net
(C/E net). A transition without any input place is called a
source transition and one without any output place is
called a sink. Labels for unitary weight are usually
omitted. In modeling using PN, we regard the places as
conditions and the transitions as events. The dual of a
Petri nets N=(P,T,F,W) is the Petri nets

N = (T , P, F ,W ) which results from interchanging
places and transitions. On the other hand, the state of PN
is described by means of the concepts of marking. A

318

using PN for such purpose are due to the rich theory of
PN for analyzing its behaviors, as well as the degree of
freedom which the PN possesses.

marking is a function that assigns to each place a
nonnegative integer called a token. A token is a primitive
concept of PN like places and transitions. From a graphic
point of view, places are usually represented by circles,
transitions by rectangles and marks by black dots into
places. The dynamics of the net is described by moving
tokens among places according to the following
transition firing rules:
1. A transition t is said to be enabled if each input
place p of t is marked with at least W(p,t) tokens,
where W(p,t) is the weight of the arc from p to t.
2. An enabled transition may or may not fire depending
on whether or not the event actually takes place.
3. A firing of an enabled transition t removes W(p,t)
tokens from each input place p of t and adds W(p,t)
tokens to each output place of t, where W(p,t) is the
weight of the arc from p to t.
4. The marking of other places which are neither inputs
nor outputs of t remains unchanged.

4. Development Process
Developing an interactive storytelling system to achieve
the autonomy of story generation and story performing is
an exhaustive and complicated process requiring careful
design and layout of the story content and its visual
presentation. This section outlines the main design and
methodology used in developing our proposed technique.

Architectural Design
Architectural design defines the interconnection and
resource interfaces between system subsystems,
components and modules in ways suitable for their
detailed design and overall configuration management.
Design involves decomposing the system into modules.
The result is a design specification document which
contains a description of the software architecture: what
each module is intended to do and the relationships
among modules. Figure 1 shows some of the basic
architectural design of our proposed storytelling system.

3. Previous Work
Recent developments in interactive storytelling (IS)
have resulted in many different approaches which differ
on various dimensions and sometimes overlap, such as:
immersive storytelling [12]; emergent storytelling [1];
interactive story authoring/generation [11]; plot-based
[13,15] and character-based interactive storytelling [2,3].
Plot-based approach is a plot management system which
is used to directly control actions of characters, leaving
only the lowest level of behaviors. In addition, in plotbased storytelling, the story is unfolded according to the
viewer interactions at given story-branching points. As a
result, it is easy to maintain the story while considering
the viewer’s will. Since most interactions are allowed at
the given story-branching points, they do not drastically
change the story. In character-based approach broad and
believable autonomous characters are placed before the
player, and then a story emerges from the player’s
interaction. Previous work has identified relevant
dimensions and key problems for the implementation of
(IS), among which are: the status of the user, the level of
explicit narrative representation and narrative control, the
modes of user intervention, the duality between character
and plot, the tension between interactivity and
storytelling, and the tools that artists can use to create
interactive story worlds. Our approach attempts to solve
narrative representation and narrative control using Petri
nets. Petri nets is equipped as a modeling tool for 3Dvisualization in [6], used in [5] for specifying the
scenarios of an on-line multi-player strategy game called
“Europe 2045” and Karsten W. [9] used the Petri nets
based state space tool called LoLA (low level Analyser)
to improve the implementations of formalismindependent techniques. In this paper we presented a new
idea for interactive storytelling technology using a new
kind of analysis method for the marking of the PN and its
reachability analysis. The approach used PN to solve the
narrative control problem in interactive storytelling and
model the story plot generation. The main advantages of

System Architectures (Modules)

Take a Tour Module
Run
Module
Support Module
About Module

Support
users for
Solving
technical
Problems

Create/Edit
Module

Run existing
Applications

Provides users with
guiding information
Edit an existing application and/or creates a
new plot by setting the necessary story worlds
based on some particular story context

Figure 1 Architectural Design

Methodology

Our methodology is based on a basic ontology which
holds the various concepts that are relevant to story plot
generation as well as character behavior. Story plot and
character interactions are two important elements of
interactive storytelling. However, we believe that
interactive stories also need to include investigation
dealing with the visual presentation of the story and the
way it is shown and told. Theatre directors, filmmakers,
and animators have emphasized the importance of visual
design. Film and theatre, as well as animation artists,

319

simple semantics, and the rich theory for analyzing their
behavior. PN reachability is the fundamental basis for
studying the dynamic properties of any system [7].

spend many hours, days, or even months, creating a
visual design for a production. A visual design is
considered the heart of a performance; it deepens and
enriches the dramatic experience through artistic works
called story worlds via its dramatic components (e.g.
camera, lighting, studio set, etc.) which have direct
impact on communicating the narrative, evoking
emotions and moods, and engaging viewers.
We
considered these important factors in developing our
proposed framework and we modeled it according to
content production processes used in the real world. The
system workflow follows standard formats for content
production which is classified into two categories:
“information data” and “presentation data”. Information
data refers to the story development process and the
knowledge data base that is to be conveyed to viewers
via the program. The story itself is generated from a set
of smaller sub-stories or plots, each of which is
composed of scenes and scenes are composed of beats.
In our system, plot generation is modeled based on PN
and explained in detail in subsection 4.3. Presentation
data describes the way in which that information should
be shown to viewers as a program. Presentation data is
the core of any content production which needs some
resources or production modules obtained from the
information data. The system deals with the visual
presentation data of the story and the way it is shown and
told, in the context of applying a formal cinematic
language to the visual components, in order to give a
better shape to the story, and to the whole dramatic
experience [4, 10]. Cinematic language, translated from a
movie to a virtual environment, should be a valid option,
with different proved formalisms that can be translated to
a storytelling system. Our system embedded a modified
TVML [8] as a cinematic and scripting language for an
action/reaction pair between actors, executed through
story worlds via its dramatic components in order to
provide better dramatic experiences and supporting the
narrative relevance of the stories being narrated. We
modeled the process of our system according to the
storytronics technology (see subsection 2.2) and content
production processes used in the real world. There are
two modes in our system, scene mode and editing mode.
Both of them are supported by a smart user-friendly
graphical user interface GUI screens. Each screen
supports level of details (LOD) rendering techniques.
The user starts in scene mode to execute his/her scene
constructions (tasks) required for creating the desired
shots based on the information data given by the story
plot which is modeled based on PN as described in
details by next section. The user then moves to editing
mode to edit, run, manipulate, play movies or preview
the shots which have been previously constructed.
System workflow is shown in figure 2.

Story
Content

Story
Scenari

Petri Nets
Evolution

Information
Data

Plots or
Storylines

Presentation
Data

Scene
Mode

Editing
Mode

System User

Play/Add

Support/Exit
Create

Create/Add

Create/Run
Create/Undo

Content/Story Generation

Figure 2 System Workflow
The idea behind using Petri nets (PN) to model the story
plot generation is based on three factors: (i) the story is
generated from a set of smaller sub-stories or plots, each
of which is composed of scenes, and scenes are
composed of beats, (ii) the degree of freedom, which the
PN possesses (e.g. marking of the net, the sequence of
firing, etc.) as well as PN properties such as, sequential
execution, conflict, concurrency, synchronisation,
priorities, etc. [16], and (iii) the concept of PN
reachability which can be simply stated as “Can we reach
one particular state from another?” [7]. Based on these
factors, our idea is derived for using PN as a state-based
model for story representation/plot. Each scene in a plot
is represented as a graph of desired states to be reached.
The final goal states for a scene mark the end of the
scene, just as the initial state describes how the scene
should begin. A state is marked with a transition from
one state to another, which provides a relative ordering
of how states should flow temporally. Transitions are
“source-action-target” triplets where the execution of an
action triggers a change of state. For the state of a Petri
nets only the set of places P is relevant, because the
network structure of a Petri nets does not change and
only the distribution of tokens over places changes. A
state, also referred to as marking, corresponds to a
mapping from places to natural numbers. Marking is

4.3 Story Plot Generation
Petri nets are a graphical and mathematical
modeling tool applicable to many systems. The main
advantages of Petri nets are their graphical notation, their

320

based on the number of beats the scene constitutes, and
plots are constructed based on the firing the beat, where a
scene of the story is regarded as a goal. Any state s can
be presented as s ∈ P → {0,1,2, K}, i.e., a state can be
considered as a multi-set, function, or vector. In the
context of state spaces, we use places as attributes. In
any state the value of each place attribute is known:
s ( p ) is the value of attribute p ∈ P in state s. Since,
firing a transition will change the state marking M to a
new marking M ′ . The state space of a Petri nets with n

B. Conflict: Transitions t1 ,

shown in Figure 3(b). All are enabled but the firing
of any leads to the disabling of the other transitions.
C. Concurrency: (Fig. 3(c)), the transitions t1 , t 2 , and

t 3 are concurrent. A necessary condition for
transitions to be concurrent is the existence of a
forking transition that deposits a token in two or
more output places.
D. Synchronisation: (Fig. 3(d)), t1 will be enabled only
when a token arrives into the place currently without
token. The arrival of a token into this place could be
the result of a possibly complex sequence of
operations elsewhere in the rest of the PN model.

n

places is the set of all markings, that is N . Now the
question that arises is how to decide which scene to
attempt to make happen next? For this, we should
examine the list of unused scene and choose the one that
has a satisfied precondition and whose value change best
matches the shape of the global plot arc. We formulated
the state change caused by a transition firing using a
partial function α which we call the next-state function,
where,
n

n

α : N ×T → N
The function α when
transition

Equation (2) can be written in a compact recursive
manner as follows:

α (M k , t j ( k ) ) = M k +1

(1)

for k=0,1,2, ….

(3)

Equation (3) forms an iterative process of marking which
exhibits a certain analogy of the recursive process for
story plot modeling (generation).

applied to a marking M and a

t j yields the new marking M ′ which results

from firing the enabled transition

t 2 and t 3 are in conflict as

t j in the marking M,

that is,

undefined if

is

α (M , t j ) = 
if
 M′

is

tj
not enabled
(2)
tj
enabled

(a) Sequential

(d) Synchronisation

Figure 3 Some PN Properties

The functionality and the performance of the proposed
system have been evaluated according to several criteria
such as: (i) the creativity process including psychological
and historical creativity, story-predictability including
structure and content elements, (ii) story-development
processes and knowledge data-bases stored by the
system, including rhetoric-knowledge, story-world
knowledge and common-sense knowledge, (iii)
interestingness which is a combination of content,
originality, suspense and coherence (the user’s ability to
comprehend the relationships between the events in the
story, both within the story world and storytelling), and
(iv) use of the natural language structure and meaning.
The system was shown to a few visual artists and
designers who are practically test the system and
reported the following results obtained for the story (in a
scale from 1 to 5, where 5 indicates best): narrative flow:
3.9; clever plot: 4.1; coherency: 4.5; use of language:
4.4; content: 3.9; suspense: 4.2; creativity: 4.7. They
showed great interest in the system, especially in its use
as a rapid prototyping tool for writers. They reported that
the system has shown great utility as an authoring tool
for content production and can be objectively used as a
teaching aid for many purposes like education,

t j . The function α given by equation (2) incorporates a
notion of distributed state, and a rule for state change of
a Petri net via a sequence of markings
(M 0 , M 1 , M 2 ,K) and a sequence of transitions
j (0)

(c) Concurrency

5. Evaluation and User-Test

M ′ is the marking which results from removing tokens
from the inputs of t j and adding tokens to the output of

(t

(b) Conflict

, t j (1) , t j ( 2) , K) which were fired. The relationship

between these two sequences as well as the properties of
Petri nets [16] such as, sequential execution, conflict,
concurrency,
synchronisation,
duality,
bounded,
reversible, live, conflict, etc., form the main idea for
story plot generation. The notion of conflict is often
described as the main mechanism of drama, where it
occurs when a possible action for a character is not
compatible with his/her value. Figure 3(a-d)
demonstrates some PN properties which are represented
using a set of simple constructs as follows:
A. Sequential execution: (Fig. 3(a)), transition t 2 can
fire only after the firing of t1 . This imposes the
precedence of constraints “ t 2 after t1 ”.

321

complex scene is represented as a composite goal, and a
simple scene is represented as an atomic goal. The
proposed framework can be objectively used as a
teaching aid for many purposes like education,
cinematography, communication, authoring tool, etc.
Due to the tradeoff between story narrative and user
interactions, striking a balance between the two is a big
challenge. Currently, we are working on extending our
proposed framework to solve this problem.

cinematography, communication, etc. Figure 4, shows a
sample story scenario example for equation (3), which
contains scenes from P1 (start state) to P4 (final or goal
state) with initial marking M 0

= (1,0,1,0,2) .

References
[1]

[2]

[3]

[4]

[5]

[6]

Figure 4 Scene Scenario Example with marking
reachability

[7]

In figure 4, tokens are regarded as beats where marking
is based on. For instance, with the initial
marking M 0 = (1,0,1,0,2 ) , two transitions t1 and

[8]

t 3 are

t 3 producing the
In
this
marking α (M 0 , t 3 ) = (1,0,0,1,2 ) = M 1 .
marking, transitions t1 and t 4 are enabled, firing t 4
changes the marking to α (M 1 , t 4 ) = (1,1,0,0,2 ) = M 2 .
In M 2 , t1 is enabled and firing it leads to
α (M 2 , t1 ) = (0,2,1,0,3) = M 3 .
enabled,

choosing

[9]
[10]

[11]

6. Conclusion and Future work

[12]

Building interactive storytelling systems has been a
growing topic of research over the past decade. In this
paper, we presented a new idea for interactive
storytelling technology using a new kind of analysis
method for the marking of the PN and its reachability
analysis. We proposed a new framework for solving the
narrative control problem and model the story plot
generation using PN. The approach used a Petri nets as a
state-based model for story plot generation, where each
scene in a plot is regarded as a goal to be reached. A

[13]

[14]
[15]

[16]

322

Aylett R.: Narrative in Virtual Environments. Towards
emergent narrative. In AAAI 1999 Fall Symposium on
Narrative Intelligence.
Cavazza M., Charles, F. and Mead, S.J. Interacting with
Virtual Characters in Interactive Storytelling, ACM Joint
Conference on Autonomous Agents and Multi-Agent
Systems, Bologna, Italy, pp. 318-325, 2002.
Cavazza M., Charles F. and Mead S.J. Character-based
Interactive Storytelling. IEEE Intelligent Systems,
special issue on AI in Interactive Entertainment, pp. 1724, 2002.
Courty N., Lamarche F., Donikian S., Marchand E. A
cinematography system for virtual storytelling. LNCS
Volume 2897/2003, pp. 30-34. Also in Int. Conf. on
Virtual Storytelling, ICVS'03,, O. Balet, G. Subsol, P.
Torguet (eds.), Toulouse, France, Novembre 2003.
Cyril Brom, Vít Sisler, and Tomas, Holan. Story
manager in ‘Europe 2045‘ Uses Petri Nets. LNCS
Volume 4871, pp. 38-50, 2007.
Ekkart Kindler, and Csaba Páles. 3D-Visualization of
Petri net Models: Concept and Realization. LNCS
Volume 3099, pp. 464-473, 2004.
Huang J., Tadao M. Classification of Petri net transitions
and their application to firing sequence and reachability
problems. IEEE Conference on Systems, Man, and
Cybernetics, Vol. 1, pp. 263-268, 1997.ac
Hayashi M., Douke M., Ariyasu K. and Hamaguchi N.
TV program Making language (TVML) - Benefits of
object-based contents-creation method. IBC2001
Conference, Vol. 2, pp. 23-31, 2001.
Karsten Wolf. Generating Petri Net State Spaces. LNCS
Volume 4546, pp. 29-42, 2007.
Magy Seif El-Nasr. Interactive narrative architecture
based on filmmaking theory. International Journal on
Intelligent Games and Simulation, vol. 3, issue 1, 2004.
Magerko B. and Laird J. Building interactive drama
architecture. In First International Conference on
Technologies for Interactive Digital Storytelling and
Entertainment, pp. 226-237, 2003.
Nakatsu R. and Tosa N. Interactive Movies, Handbook
of Internet and Multimedia, IEEE, 2000.
Pablo G., Díaz-Agudo B., Federico P. and Raquel H.:
Story plot generation based on CBR. Knowledge-Based
Systems Journal, Vol. 18, pp. 235-242, 2005.
Peterson J. L. Petri nets. ACM Computing Surveys, Vol.
9, No. 3, pp. 223-252, 1977.
Sgouros N., Papakonstantinou G., and Tsanakas P.
A Framework for Plot Control in interactive story
systems. Proc. Am. Assoc. Artificial Intelligence (AAAI
’96), AAAI Press, pp. 162–167, 1996.
Tado M. Petri nets: properties, analysis and applications.
Proc. IEEE, vol. 77, no. 4, 1990.

