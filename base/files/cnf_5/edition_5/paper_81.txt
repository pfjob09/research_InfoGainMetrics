Gridding Multivariate Positive Data for Real Time Visualization
Ghulam Mustafa
Department of Computer
Science & Engineering,
UET Lahore, Pakistan.
gm221166@yahoo.com

Abad Ali Shah
R &D center of computer
science,
UET Lahore, Pakistan.
abad_shah@hotmail.com

Abstract
Common visualization methods require an
underlying grid. For visualization of scattered data
samples it is required to approximate the data at the
same grid using some interpolation technique. It is
common that the data samples are positive and
representing the quantities for which negative value is
meaningless. For example mass, volume and density
are meaningless when negative. Modified Quadratic
Shepard method is a commonly used method for
gridding purposes. However it does not preserve
positivity for inherently positive data sets. This paper
discusses the problem of gridding inherently positive
data sets for real time visualization applications using
Modified Quadratic Shepard’s method. Key
requirement for an algorithm to be used for real time
application is its predictable timing behavior. We
present an efficient and deterministic alternative
Quadratic Shepard Method as a solution to the
problem of visualization of multivariate positive data
in real time.

1. Introduction
Data Visualization is an important tool used for
study of phenomena in scientific and business research.
Samples are usually collected at scattered sites due to
variety of constraints like economical, physical,
temporal and socio-political. Since common
visualization methods require an underlying grid; it is
required to approximate the reality at the same grid
using some interpolation technique.
Characteristics of the data to be visualized and
visualization requirements are important considerations
while selecting an interpolant for construction of the
data representation. We know number of
characteristics of the data to be explored like spatial
distribution (1D, 2D, 3D), type of data (scalar, vector

Muhammad Rafiq Asim
COMSATS Institute of IT,
Off Raiwind Road, Lahore,
Pakistan.
drmrasim@hotmail.com

etc), data distribution type (scattered or ordered data),
coordinate system, scale, continuity, complexity etc.
Many interpolation techniques are available for this
purpose. The algorithms for scattered data interpolation
are often computationally expensive, difficult to
implement and extend to higher dimensional data. For
scattered data sets, inverse distance weighted methods
are considered better due to their efficiency,
extendibility to higher dimensions, global in nature and
ease in implementation. Modified Quadratic Shepard
(MQS) method, being smooth with C1 continuity, is a
commonly used method of this family in the field of
science and engineering such as geophysics, astronomy
and meteorology.
Positive data is encountered in many areas of
science, engineering and business. The significance of
positivity lies in the fact that sometimes it does not
make sense to talk of some quantity to be negative. For
example, percentage mass concentrations in a chemical
reaction, volume, absolute temperate & pressure,
radiation dose and number of persons are meaningless
when negative. When MQS method is used for
visualization of such datasets, it interpolates negative
values. Many researchers have worked to preserve
positivity using this method. However the schemes are
less efficient and their timing behavior is not
deterministic. In real time applications, not only the
correctness of the behavior is important but also the
physical instant at which these results are produced.
Real time applications are classified from a number of
viewpoints. It is common to classify them as hard and
soft real-time. A missed deadline in hard real-time
applications is catastrophic and in soft real-time
applications it can lead to a significant loss. Hence
predictability of the timing behavior is the most
important concern in such applications. For example
radar at an air traffic control does a scan of the airspace
at a rate of 10msec [13]. Now this data must be
processed by the computer system within a time frame
of 10msec. If the real time system assigned to perform
the function miss this deadline there may be a head-on

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

collision. Real time visualizations find its use in many
fields like virtual reality and simulations in defense,
space, environment, petroleum and medical. For
interested readers we refer to the research work in [9],
[10], [11] and [12] regarding real time visualization
applications.
In order to visualize scattered data, where
visualization needs to take place in real time,
deterministic and efficient approaches to scattered data
modeling are required. In this paper we will present a
modified version of the Quadratic Shepard method as
an efficient and deterministic alternative to solve the
problem of preserving positivity of data.
The remainder of this paper is organized as
follows: In Section 2, we give an introduction to the
original Shepard method and Modified Quadratic
Shepard interpolant. The problem of visualization of
positive data using this method, a brief summary of the
previous work and problem of using this for real time
visualization applications is also given in the section.
In Section 3 we suggest the changes required to have a
solution that is not only efficient but also provides
predictable timing behavior. We compare and discuss
the results of implementation in section 4. In section 5,
we give our concluding remarks and future direction of
this work.

2. An Overview of Modified Quadratic
Shepard Method
MQS is an inverse distance weighted method that is
based on the approach introduced by Shepard [6] in
1968. Let a set of N non-negative data values, fi, at
associated scattered sampling locations, Xi = (x1i, x2i,
x3i,……), where i =1, 2, ….., N, is given. Shepard
interpolant is defined as follows:
N

∑ w (X )
i

F (X ) =

i =1

fi

(1)

N

∑ w (X )
i

i =1

where

wi ( X ) =

1
di ( X )

and di (X) =[(x1 − x1i )2 + (x2 − x2i )2 +.....]
F(X) is bounded between maximum and minimum
values in the data set [14]. Although this interpolant
provides one of the solutions to the problem of
visualization of positive data; however it is not a
suitable choice for many visualization applications. For
example the bound preservation property may result in
lose of information carried by the original sampled
data in the subsequent steps of visualization process
Xiao [7]. This interpolant has an unnecessary property
that slop at each reference point is zero as shown in

Figure 1 (a). Also as it is a global method so it
becomes inefficient for large data sets.
Numbers of modifications have been suggested to
overcome the drawbacks of the original Shepard’s
method. The most interesting modification for data
visualization perspective is due to Frank and Neilson
[4]. They improved continuity of the method by
replacing constant basis function, fi, by the quadratic
basis function, Qi(X), with the following
characteristics:
1. Qi(X) is inverse distance weighted least square fit to
the other data points. This made the method a C1
continuous method.
2. Qi(Xi) = fi. This constraint forces Qi(X) to interpolate
the corresponding data value.
The resulting interpolant called Modified Quadratic
Shepard interpolation function, F(X), is defined as
follows:
N

∑ w ( X )Q ( X )
i

F (X ) =

i

(2)

i =1

N

∑ w (X )
i

i =1

The basis functions Qi (X) is defined as follows:
1
Qi ( X ) = fi + giT ( X − X i ) + ( X − X i )T Ai ( X − X i ) (3)
2
The Matrix, Ai, is Hessian Matrix of the quadratic basis
function and gT is the gradient vector. The
modifications given above not only improve continuity
of the interpolant but also eliminate the problem of
missing data values with the original Shepard method.
To overcome the inefficiency due to global nature
of Shepard method, weight functions suggested by
Franke and Neilson [4] and Renka [5] are important.
Weight function due to Frank and Neilson are defined
as follows:
2

wi(X) = ⎡ R − d i ( X ) + ⎤
⎢
⎥
⎣ Rdi ( X ) ⎦
if R > di ( X )
where [R-di(X)]+= ⎧⎨R − di ( X )
0
otherwise
⎩
and R is the radius within which the nodes take part for
construction of Q(X) and calculation of weight function
wi(X). Frank and Neilson suggested two fixed values
for R i.e. Rq for construction of Q and Rw for
calculation of weight.
Rq= D Nq
2 N
where

, and

Rw= D
2

Nw
N

D = Max i , j ( X i − X j ) 2

and Nq are the number of control points used for fitting
the least square quadratic, Q(X), and Nw are the
number of control points used to evaluate w(X) and N

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

(a)
(b)
Figure 1: Plot of data in Table 1 (a) using Shepard Method (b) using MQS method
is the sample size. D is maximum distance between
two points in the data set. Suggested values for evenly
distributed 2D data sets are Nw=9 and Nq=18. This
suggestion reduces processing cost. However this is
suitable only for uniformly distributed data. For sparse
data or where data sets are small (N<25) considerable
increase in Nq and Nw are required with Nq/Nw=2.
Renka [5] obtained improvement in accuracy using
different criteria for selection of Nq and Nw and
suggested values for 2D data sets that are Nw=19 and
Nq=13.
The modifications given above also improve
extrapolation capability of the method. The resulting
interpolant has become a suitable choice for many
business and scientific visualization applications.
However it does not preserve positivity where data is
positive.

2.1 Loss of Positivity using MQS Method
The Modified Quadratic Shepard Method does not
guarantee to preserve positivity. In Table 1 samples of
oxygen percentage in flue gases from a boiler with
respect to time are given. Mass concentration is always
positive. We expect interpolated values to be positive.
Using Modified Quadratic Shepard method a curve has
been constructed in Figure 1(b) for this data set. The
graph goes negative, interpolating negative values of
mass %, which does not make sense.

2.2. Previous Work to Preserve Positivity using
MQS Method
A number of solutions to the problem have been
suggested. We discuss some of these solutions in this
subsection.

Xiao [8] suggested truncation of negative part of
the interpolant, F(X) by putting all negative values to
zero. This is simple solution but it has drawback that
continuity of the graph is reduced to C0. This level of
continuity is usually not acceptable for visualization
applications.
Weight functions, w(X), of MQS interpolant are
always positive. The function, F(X), will never go
negative if all basis functions, Q(X), remain positive in
their domain of participation. We can modify basis
function in many ways to solve the problem.
We can truncate negative part of the basis function,
Q(X) by putting all negative values to zero. This is
simple solution but it has drawback that C1 continuity
is not maintained. This level of continuity is usually
not acceptable for visualization applications.
We can also constrain the radius of participation of
basis function, Rw, for construction of graph such that
the basis function is positive in this radius. This
scheme is simple and low cost. The most significant
drawback of this scheme is that the number of basis
functions participating in construction of the graph
may be too small to maintain the continuity of graph.
Work has been done by Asim [1] and Asim,
Mustafa and Brodlie [2] and Brodlie, Asim and
Unsworth [3] to preserve positivity using this method.
The basic technique involved is scaling of the basis
function. Searching of minima of the basis function in
the domain of participation of basis function is
required to be computed in this method of
constraining. This causes big loss of efficiency

Table 1. Oxygen Levels in Flue Gases from a
Boiler
0
20 40 100 280 300 320
Time (sec)
20.8 8.8 4.2 .5 3.9 6.2 9.6
Oxygen (%)

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

especially for large and higher dimensional datasets. In
addition the searching is not deterministic. If we use
error as criterion for stopping the iterations then the
number of iterations required to converge to a solution
is not deterministic. On the other hand if we put a limit
on the number of iterations then we are not sure of
finding the minima with reasonable accuracy. The
resulting graph may not be positivity preserving.

3. Current Work
In order to have an efficient and deterministic
solution we apply the following strategy:
• We reduce the degree of freedom of the least square
quadratic fit such that computation of minima of the
basis function can be done efficiently and
deterministically.
• We scale the basis functions that go negative in their
domain of participation.
• Zero reference values are treated as special case.

3.1 Reducing the Degree of Freedom of Least
Square Quadratic Fit
Instead of generalized least square fitting we reduce
the degree of freedom of fit of the quadratic basis
function. The modified quadratic basis function has the
following form:
1
Q ( X ) = f + g T ( X − X ) + ( X − X ) T Aˆ ( X − X ) (4)
i

i

i

i

2

i

i

ˆ , in the quadratic Qi(X), is Hessian Matrix
where A
having zeros in off-diagonal elements. All diagonal
elements of the matrix are equal. For surface data it
forms a circular paraboloid. This modification has two
benefits:
• It reduces time both for least square quadratic fitting
and evaluation of grids. This is significant as shown in
the chart in Figures 2(a) and 3(a). The advantage is
more significant after implementation of positivity
preserving algorithm because fewer computations are
involved for finding minima of the modified basis
function.
• Finding minima is deterministic i.e. maximum
computations involved for finding minima are known.
Being deterministic and efficient are the key
requirements for an algorithm to be used for real-time
applications.
Loss of accuracy due to this modification is not
significant. RMS deviations and absolute maximum
deviations of the four sets of data are shown in the
charts given in Figure 2(b) and Figure 2(c).

3.2. Finding Minima of the Basis Function
First step in the scaling of the basis function is to
find the minima in its domain of participation, Rw. For
generalized quadratic basis function some searching
algorithm is required that are usually not deterministic
and often costly. The modification suggested in section
3.1 reduces these problems. For the modified basis
function few steps are required to find minima for
multivariate data sets. Our problem for finding minima
takes the following form:
Minimize
1
Qi ( X ) = f i + g iT ( X − X i ) + ( X − X i ) T Aˆ ( X − X i )
2
subject to the constraints
( X − X i ) T ( X − X i ) ≤ R w2

We know that the quadratic form in the modified basis
function is either convex or concave as all elements in
the leading diagonal of the Hessian matrix, Aˆ , are
equal. The following conditions hold for the minima of
the quadratic Q(X):
1. Is stationary point of the quadratic is minima?
If the elements of the leading diagonal of Hessian, Aˆ ,
are positive and the following condition for stationary
points, Xs, of the quadratic holds:
( X s − X i ) T ( X s − X i ) ≤ R w2
then extrema of the basis function is the required
minima. In this situation Xm= Xs and Qi(Xm)=Q(Xs).
2 Otherwise minima lie at the boundary of the circular
domain. In this case our problem reduces to:
Minimize
1
Q i ( X ) = f i + g iT ( X − X i ) + ( X − X i ) T Aˆ ( X − X i )
2
subject to the equality constraint:
( X − X i ) T ( X − X i ) = R w2

To find the minima at the boundary, we apply
Lagrange Multiplier method:

∇Q = −λ∇G

where
G= ( X − X i ) T ( X − X i ) − R w2
This results in a set of equations that can be
analytically solved for the point of minima of the basis
function. The time to find minimum of the basis
function is predictable. This is possible due to the use
of simplified version of the quadratic basis function in
this research.

3.3 Basis Function Scaling
After finding the minima we can find the scaling
factor to scale the basis function to be positive. We use
fixed point scaling technique described below to find
the scaling factor. In this scheme we take reference

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

Deviation from Functions

Data Set 2

Data set 1

Data Set 4

Data Set 3

Data Set 2

Data set 1

0

Data Sets

Data Sets

(a)

(b)

MQS
NEW

Data Set 4

0.1

NEW

Data Set 3

NEW

0.2

MQS

Data Set 2

MQS

0.3

0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
Data set 1

0.4

0.18
0.16
0.14
0.12
0.1
0.08
0.06
0.04
0.02
0
Data Set 4

0.5
RMS

Time (Sec)

0.6

Data Set 3

0.7

Deviation From Functions

Absolute Maximum

Execution Tim e

Data Sets

(c)

Figure 2. Comparison of efficiencies and accuracies using MQS and the New method for the test
data sets. The four data sets have been generated at 30 random locations using the test functions
given in section 4. Chart (a) shows the time to execute for a 50x50 grids. Chart (b) shows RMS
deviations from the original and chart (c) shows absolute value of maximum deviations computed
for grids of 200x200.
point of the basis function as fixed point. We scale the
basis function given in equation (4) by a positive
scaling factor, α i , such that the following conditions
)
for the modified positive basis function Q (Xi) hold:
)
)
(5)
Q (Xi) = fi and
Q (Xm) = 0
where Xm is the coordinates of minima of the basis
function in the region Rw. The scaled basis function
takes the following form:
)
1
Q ( X ) = f +α [ g T ( X − X ) + ( X − X )T Aˆ ( X − X )] (6)
i

i

i

i

i

2

i

i

i

To find scaling factor, α i , we apply the boundary
conditions as given above (5). We get:
αi =

fi
f i − Qi ( X m )

(7)

It is worth noting that α i varies between 0 and 1.
If fi=0 then α i =0. This means that the basis function
becomes Q(X)=0 for all cases where fi is zero. So we
treat zero reference values as a special case in section
3.4.
For semi-positive value of Q(Xm) there is no need of
scaling.
Scaling is required only if Q(Xm) is negative. In this
case scaling factor is defined by the equation (7).

3.4. Zeros Reference Values as Special case
For semi-positive datasets scaling of the basisfunction of zero valued reference points result in a
scaling factor that too is zero. So instead of fitting a

least square quadratic, for such cases, we replace Q(X)
= 0. We also consider this fact in designing of scaling
module and at the implementation stage. This
treatment of zero valued reference points as a special
case further reduces the computational cost.

4. Results
For construction of examples in 2D and comparison
purposes we used following test functions for
generation of test data at 30 random locations:
if ( y − x) 〉 12
⎧1
⎪
if 0 ≤ ( y − x) ≤ 12
⎪2( y − x)
F ( x, y) = ⎨
1
if P ≤ 161
⎪12 cos(4πP 2 ) + 12
⎪
Otherwise
⎩0
where P = ( x − 32 )2 + ( y − 12 )2
F(x, y) = exp(x) sin(y)
F(x, y) = exp(x) sin2(y)
F(x, y) = sin2(x) sin2(y)
The key features of MQS that make it suitable for
certain applications are continuity, efficiency and
extendibility to higher dimensions. The formulation of
the new algorithm is similar to MQS and without its
dimensional consideration so its implementation and
extension to higher dimensions is straightforward.
Basis function of the new method is also a quadratic so
the continuity of the new method is also C1.
Computational cost for the new method is significantly
lower as shown in the Figures 2(a) and 3(a).

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

De viatio ns u s in g Po s itive Alg or ith m s

MQS

0.3

NEW

0.2

0.3

MQS

0.25

NEW

0.2
0.15

0.1

0.1
0.05

Data Sets

Data Set 4

Data Set 3

Data Set 2

0
Data set 1

Data Set 4

Data Set 3

Data Set 2

Data set 1

0

Data Sets

MQS
NEW

Data Set 4

0.4

RMS Value

0.35

Data Set 3

0.4

0.5

1.1
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
Data Set 2

0.45

Absolute Maximum Values

0.6
Time (sec)

Deviations using Positive Algorithms

0.5

Data set 1

Execution Time of Positive Algorithms
0.7

Data Sets

(a)
(b)
(c)
Figure 3. Comparison of efficiencies and accuracies of positive MQS and New positive method.
The four data sets have been generated at 30 random locations using test functions given in
section 4. Chart (a) shows the time to execute for the datasets plotted on 50x50 grids. Chart (b)
shows RMS deviations from the original values and (c) the maximum absolute deviation
computed at 200x200 grids.
Execution time for positive MQS varies
significantly for the same sample and grids sizes. This
makes it unsuitable for real time applications. The new
algorithm shows the constant timing behavior as
shown in Figure 3(a) that is the key requirement for
real time applications. Execution time for the data set 4
is lower because it contains many zero data values that
have been treated as a special case. The maximum time
to execute is predictable as we can determine this by
inputting all non-zero data values.
We have achieved the goal of positivity but with
some accuracy penalty. However difference in
deviations between positive MQS and the NEW
Positive algorithm is very small. Plots of data set 4

using positive MQS and the new positive algorithms
are shown in Figure 4 (a) and (b) respectively. The
perceptual difference in these two graphs is so small
that the both look similar.
There is considerable increase in deviations, shown
in Figures 3(b) and (c), for both Positive MQS and
New positive algorithms. This indicates that the scaling
causes reduction in accuracy of the interpolant for
positive data modeling.

5. Conclusions and Future Work
We have presented an efficient C1 solution to the
problem of visualization of multivariate data in real

(a)
(b)
Figure 4: 50x50 grids generated for data set 4 having sample size 30 (a) using Positive MQS and (b)
Using New Positive Algorithm.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

time where data to be visualized is inherently positive.
The comparison reveals that new interpolant not only
show predictable timing behavior but also it is an
efficient solution to preserve positivity while
visualizing positive data.
Regarding future work we are exploring the
possibility of improving accuracy of the interpolant
that degrades as a result of scaling of the basis
function.

Acknowledgement
The authors acknowledge enabling role of Higher
Education Commission (HEC), and PAEC Islamabad,
Pakistan and appreciates financial supports through
“Development of S&T Manpower through Indigenous
PhD (300 Scholars).”

References
[1] Asim M. R., “Visualization of Data Subject to Positivity
Constraint,” Doctoral thesis, School of Computer Studies,
University of Leeds, Leeds, England, 2000.
[2] Asim M. R, G. Mustafa and K.W. Brodlie, “Constrained
Visualization of 2D Positive Data using Modified Quadratic
Shepard Method” Proceedings of The 12th International
Conference in Central Europe on Computer Graphics,
Visualization and Computer Vision, Czeck Republic, 2004,
pp 9-13.
[3] Brodlie, K. W., M.R. Asim, K. Unsworth, “Constrained
Visualization Using the Shepard Interpolation Family,”
Computer Graphics Forum, 24(4), Blackwell Synergy, 2005,
pp. 809–820.
[4] Franke, R. and G. Neilson, “Smooth Interpolation of
Large set of Scattered Data,” International Journal of
Neumerical Methods in Engineering, 15, 1980, pp 16911704.

[5] Renika R. J., “Multivariate Interpolation of Large Set of
Scattered Data. ACM Transactions on Mathematical
Software, 14 (2), 1988, pp 139-148.
[6] Shepard, D., “A two-dimensional interpolation function
for irregularly spaced data,” Proceedings of 23rd National
Conference, New Yark, ACM, 1968, pp 517-523.
[7] Xiao, Y and C. Woodbury, “Constraining Global
Interpolation Methods for Sparse Data Volume
Visualization,” International Journal of Computers and
Applications, 21(2), 1999, 56-64.
[8] Xiao, Y., J.P Ziebarth, B. Rundell, and J. Zijp, “The
Challenges of Visualizing and Modeling Environmental
Data,” Proceedings of the Seventh IEEE Visualization
(VIS'96), San Francisco, California, 1996, pp 413-416.
[9] William F. G., F. Henry, C. W. Mary and S. Andrei,
“Real-Time Incremental Visualization of Dynamic
Ultrasound Volumes Using Parallel BSP Trees,” Proceedings
of the 7th IEEE Visualization Conference (VIS’96), San
Francisco, California, 1996, page 1070-2385.
[10] Fuhrmann A. and E. Gröller, “Real-Time Techniques for
3D Flow Visualization,” Proceedings of the IEEE
Visualization 98 (VIZ’98), 1998, pp 0-8186-9176.
[11] Wagner, T. C., M.O. Manuel, C. T. Silva and J. Wang,
“Modeling and Rendering of Real Environments,” RITA,
9(2), 2002, pp 127-156.
[12] Park S.W., L. Linsen, O. Kreylos, J. D. Owens, B.
Hamann, “A Framework for Real-time Volume Visualization
of Streaming Scattered Data,” 10th International Fall
Workshop on Vision, Modeling and Visualization (VMV
2005), 2005, Erlangen, Germany.
[13] Nagarajan H., “Software for Real Time Systems,” Real
Time Systems Group, Centre for Development of Advanced
Computing, Bangalore, 2002.
[14] W. J. Gordon & J. A. Wixom, “Shepard's method of
‘Metric Interpolation’ to bivariate and multivariate
Interpolation,” Mathematics of Computation, 32(141), 1978,
253-264.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

