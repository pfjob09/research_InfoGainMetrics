Bottled Sand Movies
Bruno M. Carvalho, Laurindo S. Britto Neto, and Lucas M. Oliveira
Departamento de Inform´atica e Matem´atica Aplicada
Universidade Federal do Rio Grande do Norte, Brazil
bruno m carvalho@yahoo.com, laurindobneto@gmail.com, lmoliveira@gmail.com

Abstract
Non-Photorealistic Rendering (NPR) is a class of techniques deﬁned by what they do not aim, the realistic rendering of artiﬁcial scenes. NPR techniques, on the other hand,
aim to reproduce artistic techniques renderings, trying to
express feelings and moods on the rendered scenes. This
paper introduces a new style of NPR based on a typical art
craft from the northeastern region of Brazil, that uses colored sand to compose landscapes inside glass bottles. A
method for generating two-dimensional (2D) virtual sand
textures is introduced, as well as techniques for combining
them in a point-by-point or in an area basis.

1. Introduction
Non-Photorealistic Rendering (NPR) is a class of techniques deﬁned by what they do not aim, the realistic rendering of artiﬁcial scenes. NPR techniques, on the other
hand, aim to reproduce artistic techniques renderings, trying to (convey or express) feelings and moods on the rendered scenes. Another way of deﬁning NPR is that it is the
processing of images or videos into artwork, generating images or videos that can have the visual appeal of pieces of
art, expressing the visual and emotional characteristics of
artistic styles (e.g. brush strokes).
Animation techniques can convey information that cannot be simply captured by shooting a real scene with a video
camera. However, such kind of animation is labor intensive
and requires a fair amount of artistic skill. NPR techniques
can be used to generate highly abstracted animations with
little user intervention, thus, making it possible for nonartist users to create their own animations.
One of the objectives of NPR techniques for video stylization is to make automatic or semi-automatic procedures
that mimic real life artistic styles, thus allowing a user to
stylize real movie sequences captured with a camera with
little effort when compared to the task of creating an animation from scratch. Video stylization also offers the choice

of mixing real movies with stylized objects, rendering with
one or more NPR techniques only parts of a movie sequence, leaving the rest of the video sequence intact.
When producing a NPR video from a modeled 3D scene,
it is important to maintain temporal coherence, moving the
elements of the drawing (e.g. brush strokes) with the surfaces of the objects being drawn, otherwise, these elements
stick to the view plane and the animation appears as if it is
seen through a textured glass, the so called “shower door”
effect [12].
However, if the input for the NPR video is a normal
video, it has been reported in the literature that not maintaining temporal coherence incurs in severe ﬂickering on the
output video. This ﬂickering comes not only from changed
objects being rendered with elements that follow the object
movement but also from static areas being rendered differently each time.
To solve part of this problem, [11] introduced a method
for maintaining temporal coherence in video sequences
stylized using an impressionist style. The method consists
of using optical ﬂow [4] tracking movement in the scene and
move, add or remove brush strokes from frame to frame. An
approach for coherent rendering of static areas in successive
frames was proposed by [9], by detecting areas of change
from frame to frame and painting over them, i.e., keeping
the brush strokes of the static areas. Intra-object temporal
coherence is achieved by warping the brush stroke’s control points using the output of an optical ﬂow method. In
[14], the authors propose a method for creating cartoon animations from video sequences by using a mean shift segmentation algorithm for end-to-end video shot segmentation. After the segmentation is performed, the user speciﬁes
constraint points on keyframes of the video shot through a
graphical interface. These points are then used for interpolating the region boundaries between keyframes.
In the NPR style introduced here, temporal coherence is
not as important as when drawing with watercolor [1] or impressionist [11] painting styles. The nature of the sand-ﬁlled
bottle style incorporates some randomness that is present in
the sand used for composing the images. Thus, changes in

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

positions of sand grains are expected, if constrained to the
object which they belong.

these sites are now protected reserves that attract money for
the surrounding communities as tourism attractions. Thus,
artists had to turn to the artiﬁcial sand used today, that not
only is easier to handle but also provides bright shades of
blue, green, orange, purple and other colors that were not
available when the artist used natural sand.
The simulation of such images using NPR techniques allows us also to produce something that is not possible in
real life, video sequences using the rendering style of these
sand-ﬁlled bottle crafts.

2.1. Procedural 2D Sand Textures

Figure 1. Typical sand-ﬁlled bottle.

2. Bottled Sand Movies
The creation of bottled sand images, such as the one
shown in Figure 1 is a type of art developed in the last century by coastal craftsman families in the Brazilian northeastern states of Rio Grande do Norte and Cear´a. In these
places, the sand is everywhere, and several colors and
shades of sand can be found in local dunes and other sand
formations.
The art of making such craft consists of pouring sand of
different colors inside an empty and transparent bottle and
arranging it using a wood stick, or more recently, an iron
tool with one thin sharp end and another ﬂat end. Thus, the
artist draws from inside out in the inner surface of the bottle,
that acts as a canvas. After pouring an amount of sand inside
the bottle, the artist manipulates the tool, ﬁrst using its ﬂat
end, to remove excess sand of a particular color close to the
bottle’s inner surface, roughly “delineating” the borders of
the object that is being drawn. Then, the artist uses the sharp
end or the ﬂat end of the tool to create details in the object
being drawn by dragging sand from surrounding areas. For
example, when drawing a house, the artist ﬁrst composes
the wall with the sand, pours sand of a different color for
the doors and windows on top of the wall sand, and then
makes way in the wall sand with the ﬂat end of the tool for
the door sand to drop in front of it.
The natural sand used originally for creating these bottles were extracted from coastal areas that are now protected for environmental reasons, i.e., to stop the degradation of these sites caused by the sand collecting. Some of

Procedural texture generation is a very popular technique
for simulating natural materials. One particular example of
such procedural techniques is Perlin noise [13], that can be
used to procedurally generate 3D textures simulating marble, wood and rock [6], for example. The sand textures generated for this work are simpler because they are generated
using a noise 2D function [5], since the animations generated are 2D images that are placed on the inside of a bottle
model.
In order to produce 2D textures simulating the type of artiﬁcial sand used nowadays for making the sand-ﬁlled bottles, we photographed samples made out of a single colored
sand. The images were then analyzed in the HSV (HueSaturation-Value) space in order to determine what kind
of distribution better characterized them. As expected, the
variation in the hue component was much smaller than the
variations observed in the saturation and value components.
The histograms for the pixels of the collected sand samples
for all three channels were found to be representable with a
reasonable accuracy using Gaussian distributions.
Then, Gaussian noise functions were used to generate
perturbations in the pixel values for the three channels using
P (x) = e

−(x−μ)2
2σ2

(1)

where μ and σ for the sand primary colors were determined
by visually matching the generated colors with colors used
by the artists, as well as creating new primary colors that resemble natural sand. We have generated sand primary colors at least every 30◦ in the hue space ([0◦ , 360◦ ]). Based
on these values, we then generated three 255 long channel probability vectors for each sand color. These vectors
were then used to pre-compute, for each primary sand color,
the correspondent procedural textures with the same size as
the input image, that are stored in texture memory. Typical HSV values for color primaries are (56, 182, 215) and
(210, 64, 235), for yellow and blue, respectively, where S
and V are in the range [0, 255].
In the rendering step, we compute, for every pixel location, the correspondent primary sand texture to which the

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

(a)

(b)

(c)

(d)

Figure 2. Original landscape image (a), the sand style rendered image (b), and the same zoomed area
of both images, (c) and (d), respectively.

pixel belongs, and draw the texture value stored on that location on the frame buffer. However, there are some special
cases that have to be taken care of. For example, if the value
channel (V of the HSV color model) of the input image is
close to 0 (smaller than a threshold), we use the black sand
color primary. The value of this threshold can be set interactively by the user, as well as the threshold for the saturation (S) channel, that tells if the color is close to be on the
gray scale. Three sand primary textures have been created,
namely, the black, gray and white textures.
If a color is located in the hue (H) channel between
two primary sand colors, we calculate the mixture of the
two closest primaries that would match its hue, and draw
a pseudo-random number that will determine from which
primary sand color texture the pixel value will be retrieved.
For example, if the color of the pixel under examination is
formed by 30% of orange and 70% of red, a pseudo-random
number smaller than 0.3 (in a range of [0, 1]) will cause the
pixel to be rendered with the value fetched from the orange
sand texture, while a value greater than 0.3 will assign to
the pixel the value fetched from the red sand texture.
However, in order to avoid mixing small quantities of
one sand into a large quantity of another one, we can limit
this amount by setting up a threshold. Thus the user can
interactively play with these thresholds, visualizing in realtime the effect on the animations, and choosing the appro-

priate settings.

2.2. Segmentation
In video stylization, some authors have used optical ﬂow
techniques for enforcing temporal coherence, such as the
work of [11] or the work of [9]. However, the local characteristic of the optical ﬂow techniques and their sensitivity
to noisy images somehow limit their applicability. To overcome those problems, segmentation algorithms have been
applied to video shot segmentation to produce end-to-end
segmentations that are later used to enforce temporal coherence [3, 14]. Such end-to-end segmentations can be made
more robust using not only intensity and color information,
but also motion cues, such as the algorithms presented in
[7, 10]
In this paper, some the video shots were treated as a 3D
volume and interactively segmented using a variant of the
fuzzy segmentation algorithm introduced in [8, 2], that was
extended for segmenting color 3D volumes.

3. Experiments
To show the results of our method we applied the generation of sand textures to several real and animation images.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

Figure 2 shows a landscape photograph (a), the correspondent sand style rendering (b) generated using a point-bypoint color mixture, while (c) and (d) show two zoomed
areas of (a) and (b).
Figure 3 shows an image extracted from an animation (a)
and three sand style renderings, with no sand primary mixture (b), with a minimum amount of 60% of sand mixture
(c) and a minimum amount of 20% of sand mixture (d).
Figure 4 shows the original image (a) and an example
of a sand style rendering using an area based color mixture
(b), where we determined which sand primary colors could
be used in each segmented object. This produces areas with
less variation than the original image, an effect that may be
desired. An important point to make is that, since the pixel
values are stored in the sand textures, as long as a pixel
belongs to the same object in successive frames, and there
is no mixture of sand primaries, the pixel will have the same
value, producing a time coherent texturing.
Finally, Figure 5 shows two snapshots of a sand bottle animation generated from a movie sequence. This animation was generated using the option where the sand primaries are not mixed to form a new color.

4. Conclusions and Future Work
This paper introduces a simple method for generating 2D
sand textures that are used for rendering still sand-style images and sand-style videos that can then placed on the inside of a rendered glass bottle, simulating a typical art craft
from the northeast region of Brazil. This new style of NPR
combines precomputed 2D textures created from Gaussian
distributions of imaged samples of the artiﬁcial sand used
nowadays for creating these sand-ﬁlled bottle crafts.
Future work will concentrate on reproducing more accurately the artistic effects used by the artists that produce
sand-ﬁlled bottle art crafts. Currently, we are developing a
graphical interface that will allow the user to draw on top
of the input frames and specify the type of artistic effect desired for speciﬁc areas, such as mixing sands according to a
hand drawn stroke captured by the interface.

5. Acknowledgements
This work was supported by CNPq Grant PDPG-TI
506555/04-6.

References
[1] A. Bousseau, M. Kaplan, J. Thollot, and F. Sillion.
Interactive watercolor rendering with temporal coherence and abstraction. In Proceedings of International Symposium on Non-Photorealistic Animation
and Rendering (NPAR), to appear.

[2] B.M. Carvalho, G.T. Herman, and T.Y. Kong. Simultaneous fuzzy segmentation of multiple objects. Discrete Applied Mathematics, 151:55–77, 2005.
[3] J.P. Collomosse, D. Rowntree, and P.M. Hall. Stroke
surfaces: Temporally coherent artistic animations
from video. IEEE Transactions on Visualization and
Computer Graphics, 11:540–549, 2005.
[4] E.R. Davies. Machine Vision: Theory, Algorithms,
Practicalities, 2nd Ed. Academic Press, London,
1996.
[5] D.S. Ebert, F.K. Musgrave, D. Peachey, K. Perlin, and
S. Worley. Texture and Modeling: A Procedural Approach, 2rd Ed. Morgan Kaufmann, San Francisco,
2003.
[6] P. Elinas and W. Stuerzlinger. Real-time rendering of
clouds. Journal of Graphical Tools, 5:33–45, 2000.
[7] M. Galun, A. Apartsin, and R. Basri. Multiscale segmentation by combining motion and intensity cues.
In Proceedings of the IEEE Computer Society Conference on Computer Vision and Pattern Recognition,
pages 256–263, 2005.
[8] G.T. Herman and B.M. Carvalho. Multiseeded segmentation using fuzzy conectedness. IEEE Transactions on Pattern Analysis and Machine Intelligence,
23:460–474, 2001.
[9] A. Hertzmann and K. Perlin. Painterly rendering
for video and interaction. In Proceedings of International Symposium on Non-Photorealistic Animation
and Rendering (NPAR), pages 7–12, 2000.
[10] S. Khan and M. Shah. Object based segmentation
of video using color, motion and spatial information.
In Proceedings of the IEEE Computer Society Conference on Computer Vision and Pattern Recognition,
volume 2, pages 746–751, 2001.
[11] P. Litwinowicz. Processing images and video for an
impressionist effect. In Proceedings of the ACM SIGGRAPH, pages 407–414, 1997.
[12] B. Meier. Painterly rendering for animation. In Proceedings of the ACM SIGGRAPH, pages 477–484,
1996.
[13] K. Perlin. Improving noise. ACM Transactions on
Graphics, 21:681–682, 2002.
[14] J. Wang, Y. Xu, H.-Y. Shum, and M.F. Cohen. Video
tooning. ACM Transactions on Graphics, 23:574–583,
2004.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

(a)

(b)

(c)

(d)

Figure 3. Original animation image (a) and the sand style rendered images with no sand mixture (b),
with a minimum of 60% sand mixture (c), and with a minimum of 20% sand mixture (d).

(a)

(b)

Figure 4. Original car image (a) and the sand style rendered image (b).

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

(a)

(b)

(c)

(d)

Figure 5. A movie frame (a) and the correspondent sand-ﬁlled bottle rendering of it (b).

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

