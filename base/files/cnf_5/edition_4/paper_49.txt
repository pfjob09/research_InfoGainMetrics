On Skew Estimation and Correction of Text
M. Sarfraz, S.A. Mahmoud and Z. Rasheed
Department of Information and Computer Science
King Fahd University of Petroleum and Minerals
KFUPM # 1510, Dhahran 31261, Saudi Arabia
Email: {sarfraz; smasaad; hasham@kfupm.edu.sa}
Abstract
This paper, in addition to reporting some
existing techniques, proposes some new techniques
for skew correction. It includes two novel document
skew detection algorithms based on histogram
statistics and connected component analysis. The
histogram based algorithm works much efficient for
detecting skew angle in which we analyze the lines as
peaks and valleys on histogram. The connected
component analysis is based on finding the connected
components within a single line and considers them
as one blob to estimate skew angle. The two methods
have been experimented on various text documents
and very promising results have been achieved given
more than 99% accuracy. A comparative study has
been reported to provide a detailed analysis of the
proposed methods.
Keywords: Image processing, skew estimation, tilt
correction,
character
recognition,
connected
component.

1. Introduction
Preprocessing is a stage in typical OCR system,
which focuses on enhancing the acquired image to
increase the ease of feature extraction and to
compensate for the eventual poor quality of the
scanned document [1]. When patterns are scanned
and digitized, the raw data may carry a certain
amount of noise. If the acquired image contains
noise, it is subjected to the preprocessing stage where
the “de-noising” of the image takes place.
Furthermore, when a document is fed to the scanner
either mechanically or by a human operator, a few
degrees of skew (tilt) is unavoidable. Skew correction
is a process which aims at detecting the deviation of
the document orientation angle from the horizontal or
vertical direction. Skew detection and correction are
important preprocessing steps of document layout
analysis and OCR approaches.

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

OCR systems typically assume that the
documents are printed with a single direction of the
text and that the acquisition process did not introduce
a relevant skew. The advent of flat bed scanners and
the need to process large amounts of documents at
high rates, made the above assumption unreliable and
the introduction of the skew estimation phase has
become mandatory. In fact, a little skewing of the
page is often introduced during processes such as
copying or scanning. Today, documents are ever
more free styled. Moreover, text aligned along
different directions is not an uncommon feature. The
subsequent stages of OCR systems, mainly depend
upon the accuracy of preprocessing stage. For
instance, if OCR system under estimates or over
estimates skew angle, then OCR system which is
utilizing projection based technique will fail
miserably.
The paper has been organized in such a way that,
in the next section, we provide brief literature survey
of skew estimation algorithms in which we discuss
some consequences related to them. Two newly
proposed algorithms are explained in Section 3, some
experimental results are also shown in this section.
Section 4 contains a comparison analysis of the two
proposed algorithms with some other algorithms in
the literature. Section 5 concludes the paper.

2. Literature Survey for Previous
Approaches
There has been a variety of techniques proposed
in the literature to estimate and correct the skew of
document images. Comprehensive surveys could be
found in [2-3]. Most of the skew estimation
techniques can be divided into main classes
according to the basic approach they adopt [2]. Some
of them are analysis of Projection Profiles [4-9],
Principal Component Analysis [10-14] and
Connected Components Clustering [15].
The traditional projection profile approach was
proposed by Postl [5]. In this approach, the input
document is rotated through a range of angles and a

projection profile is calculated at each angle. Features
are then extracted from each projection profile to
determine the skew angle. This is computationally
expensive as it is performed directly on the original
document images. Moreover, it is sensitive to the
layout of the document image. Another projection
profile approach was proposed by Bloomberg and
Kopec [6] in which the original document image is
down-sampled before the projection profile is
computed. Therefore, the image data to be processed
is reduced and the computational cost is reduced
significantly. However, a major weakness is that its
detection accuracy is influenced by the document
image layout. It often fails on document images with
multiple font styles, sizes or the ones that contain a
large amount of non-text regions.
The second class of skew correction is based on
component analysis in which most significant
eigenvector is calculated which leads to the skew
angle of distribution. The problem with this method
is that each eigenvector is constructed with support
from projections of every point which is expensive in
terms of time and that they are least squared
estimation techniques and hence fail to account for
outliers which are common in images. The details of
these methods are provided in the as following
sections.

of finding the directions along which a distribution
exhibits the greatest variation [10]. These directions
are termed in the Principal Components of the
distribution. They correspond to the most significant
eigenvectors of the covariance matrix of the data
points. PCA is used to find the principal axis of the
foreground distribution. This gives an angle for the
baseline but not necessarily its vertical position.
Steinherz [11] used this method on Latin text. It was
found that the performance is high when using the
background pixels for PCA rather than the
foreground. The algorithm of this method works as
follows:

2.1. Projection Profile Based Technique

This section proposes two new approaches
namely Peaks and Valleys Test and Blob Test. The
first method is based on finding the peaks and valleys
to estimate skew angle, it is explained in detail in
Section 3.1. The second method performs Connected
Component Analysis to get each line as a single blob
and find the orientation of different blobs, this is
explained in Section 3.2.

As we know that baseline is the part of the script
having most of the black pixels. Projection profile
based technique [4-9] takes the advantage of this
property to find the space between the lines of the
script. Then the tilt angle using projection and
rotation can easily be estimated. Projection Profile
based algorithm works as follows:
1.

Start with (θ=0) and project horizontally and
vertically to get the sum of the black pixels in
the binary image and record the max of these
two sums as well as θ.
2. Decrease θ by 1 and rotate the image
clockwise and project to get the maximum of
the two sums. If the current sum is greater than
the previous one then update the maximum
sum and θ other wise go to the next θ.
3. Repeat Step 2 till θ=90.
4. Rotate the image either by θ or by θ+90
depending on whether the maximum are gotten
horizontally or vertically respectively.

2.2. Principal Components Analysis
Principal Components Analysis (PCA) is a way

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

1.
2.
3.
4.
5.

Convert the image into a set of vectors
describing each foreground pixel that makes
up the text.
Perform PCA on these points and pick the
eigenvector with the largest eigen value. This
vector gives the direction of the baseline.
Rotate the image so that this estimated
baseline angle lies horizontal.
Take the projection histogram of the image.
Use the peak of this projection histogram to
determine the vertical position of the baseline.

3. Proposed Work

3.1. Peaks and Valleys Test
Because the baseline is the part of the script
having the majority of black pixels, we can take the
advantage of this property to allocate the base line of
the script. Then we can find the tilt angle using
projection profile technique. Our technique works as
follows:
1.

2.

First we start with the bisection of input image
and process the right half and left half of
image individually. For images having long
lines, divide the image into more that two
parts. Dividing the image into halves make
line more efficiently readable.
Taking the right half of the bisected input
image and project horizontally to get the sum
of the black pixels in a row and record the

3.
4.

5.
6.
7.
8.

sums. Same procedure will be repeated for the
left half of bisected image.
Analyze peaks and valleys for each portion of
image and plot histograms for the same.
The first valley of the right portion histogram
shows the starting point of first line. Similarly
the second valley of the left portion histogram
shows ending point of first line.
Project the lines from these points until they
intersect at a point and find perpendicular
distance between these points.
Repeat Steps 4 and 5 for the remaining lines
and calculate the distance between the left and
right projections of the line.
Calculate
the
skewed
angles
using
trigonometric ratios.
Take the average of all the angles.

The experimental results are demonstrated in
Figures 1-6. Figure 1 exhibits Steps 1 and 2 of the
algorithm. Step 3 of the algorithm has been
demonstrated in Figure 2 which is used to analyze
the Peaks and Valleys of each portion of the image of
Figure 1.
As it is clear from histogram in Figure 2 that the
peaks are well defined and prominent. We can easily
find out the orientation of lines and thus skewed
angle. The estimated angle, see Figure 3(a), is found
to be exactly 10.1 degrees computed in 0.7 seconds.
Figure 3(b) is the text after skew correction.
The same algorithm is applied on an image tilted
at 25 degrees, Figure 6(a). The estimated angle is
found to be 25.3 degrees computed in 0.9 seconds.
Figure 6(b) is the text after skew correction. In this
example, Figures 4 and 5 are similar to those of
Figures 1 and 2, respectively.

3.2.1. Finding the Centroid
The convention used for the dimension of the image
array in this paper is I for rows and J for columns.
The centroids (xc,yc) of the image are estimated using
the following equations:
I

J

x * g ( x, y )
x =1 y =1 g ( x , y )
I
J
y * g ( x, y )
yc = ∑∑
g ( x, y )
x =1 y =1

xc = ∑∑

(1)
(2)

where g(x,y) is the gray level of the pixel at the
location (x,y).

Figure 1. The top left and right figures give
the left and right halves of the image,
respectively. The lower left and right figures
give the projection profile histograms of the
image for left and right halves, respectively.

3.2. Finding Blobs using Connected
Component Analysis
This approach is based on identification of words
within a single line. In general, we look for the
connected components and estimate the optimum
skew angles of these components. The idea behind
this approach is that the distance between the
consecutive words in a single line is much smaller
than the distance between consecutive words in two
lines. So if we are able to make all words in a line as
one single object or blob. We then estimate the
orientation of the line. Initially, document image is
preprocessed by dilating the text pixels using suitable
structuring element or mask for identification of
connected components or blobs.

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

Figure 2. The Peaks and Valleys of the left
and right haves of image of Figure 1.
3.1.1

Finding the orientation of the object or
blobs

The orientations of the objects are located by finding
the angles of the major axes. The major axis has the
longest distance inside the object and passes through
the centroid of the object. The angle θ of the major
axis with the horizontal line can be estimated using
the following equations:

I

J

a = ∑∑ ( x − xc) 2 * g ( x, y )

tan 2θ =

(3)

x =1 y =1
I

J

b = 2∑∑ ( x − xc) * ( y − yc ) * g ( x, y ) (4)
x =1 y =1

I

J

c = ∑∑ ( y − yc )2 * g ( x, y )

b
a−c

(6)

The parameters of a, b, and c, found in Equations (35) are used to to estimate the major axis angle using
Equation (6).

(5)

x =1 y =1

(a)

(b)

Figure 3. An example text: (a) Before Skew Correction, (b) After Skew Correction.

The algorithm is as follows
1.
2.
3.
Figure 4. The top left and right figures give
the left and right halves of the image,
respectively. The lower left and right figures
give the projection profile histograms of the
image for left and right haves, respectively.

Figure 5. Analyze Peaks and Valleys of each
portion of the image.

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

4.
5.
6.

Take a specific mask, as structuring element,
and traverse the whole image to find
connected components.
Calculate the centroid of each connected
component or blob by using Equation (1 and
2).
Find the major axis of connected component.
Since each blob looks like an ellipse, we
approximate each blob as an ellipse and detect
the major axis.
Find the angle θ of the major axis with the
horizontal line using Equation (6).
Repeat Steps 2 - 4 for all blobs.
Take the average of all the angles (θavg) and
rotate the image by angle θavg.

Figure 6 (a) shows an Arabic text example. It can
be seen that, by using connected component analysis,
we can easily merge all words in a single line as one
blob, Figure 6(b). The estimated skew angle is found
to be 25.4 degrees compared with an original image
skew of 25 degrees. Figure 7 represents the text of
Figure 6(a) after applying tilt correction.
Another example of English text is shown in
Figure 8(a). It can be seen that, by using connected

component analysis, we can easily merge all words in
a single line as one blob, Figure 8(b). The estimated
skew angle is found to be 30.1 degrees compared

(a)

with an original image skew of 30 degrees). Figure 9
represents the text of Figure 8(a) after tilt correction.

(b)

Figure 6. An Arabic text example: (a) Original Image, (b) Image of Figure 6(a) after Connected
Component Analysis.

Figure 7. Image of Figure 6 after Skew
Correction.

4. Comparison Analysis

This section is devoted to exhibit a comparative
study of different algorithms discussed and proposed
in Sections 2 and 3. This study has been made after
making various experiments. These experiments were
made on 3.2 GHz processor and 512 MB Ram.
The Table 1 shows comparative analysis among
different algorithms used for skew correction. We
can see that algorithms which are more accurate take
much time for computation. As in the case of
Projection Profile Technique, the computation time is
more as compared to other algorithms. Similarly the
algorithms which take less time are comparatively
less accurate. The two proposed algorithms’ Peaks
and Valleys test and Connected Component analysis
are relatively optimal in terms of time and accuracy.

(a)
(b)
Figure 8. An English text example: (a) Original Image, (b) Image of Figure 8(a) after Connected
Component Analysis applied.

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

In the experimental study, the documents have
been tilted within 25 degrees when they were
scanned. Fifty images were tested and each of them is
analyzed using different skewed angles within 25
degrees to get the best results. Table 1 demonstrates
the average experimental results made on different
images. It is to be noted that the experimental results
have been made on images of different sizes.

proposed algorithms work well on various documents
including Arabic, English, Chinese and Japanese.

6. Acknowledgments
This work has been supported by the King Fahd
University of Petroleum and Minerals for the Project
# ICS/OPTICAL TEST/337.

7. References

Figure 9. Image of Figure 8 after Skew
Correction.
Table 1. A comparative study of the
proposed methods to those in the literature.
Skew
Average
Accuracy
Angle
Time
(Original
(%)
(Seconds)
Image)
Projection
1-25
99.09
3.02
Profile
Degrees
Technique
Principal
1-25
Component
98.52
2.98
Degrees
Analysis
Peaks and
1-25
Valleys
99.09
1.96
Degrees
Analysis
Connected
1-25
99.50
2.55
Component
Degrees
Analysis

5. Conclusion and Discussion
In this paper, two efficient and novel algorithms for
document skew are proposed. Peaks and valley test
algorithm takes much less time to compute skew
angle and is very efficient in terms of time.
Connected component analysis algorithm works over
a wide range of skewed angle. Our proposed
algorithms relatively save computation time and
improve accuracy. These schemes have been tested
extensively on Arabic fonts which are connecting in
nature and other languages like English, Chinese and
Japanese fonts which are isolated in nature. The
proposed scheme is accurate within all practical
limits. The experimental results show that the

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

[1] Sadallah, S. and Yacu, S. (1985), Design of an Arabic
Character Reading Machine, Proceedings Computer
process, Arabic Language, Kuwait.
[2] Jonathan J. H (1998), Document Image Skew
Detection: Survey and Annotated Bibliography, World
Scientific, 40-64.
[3] Jung, K. Kim, K.I., Jain, A.K, Text Information
Extraction in Images and Video: A Survey.
[4] Akiyama, T. and Hagita, N. (1990), Automatic entry
system for printed documents, Pattern Recognition,
Vol. 23(11), 1141 – 1154, Elsevier Science.
[5] Postl, W., (1986). Detection of linear oblique
structures and skew scan in digitized documents. In:
Proc. 8th Internat. Conf. on Pattern Recognition, Paris,
France, 687–689.
[6] Bloomberg, D.S., Kopec, G.E., (1993). Method and
apparatus for identification and correction of
document skew. Xerox Corporation, US Patent
5,187,753.
[7] Bloomberg, D.S., Kopec, G.E., Dasari, L., (1995).
Measuring document image skew and orientation.
Proc. SPIE 2422, 302–316.
[8] Ishitani, Y,(1993), Document skew detection based on
local region complexity. In: Proc. 2nd Internat. Conf.
on Document Analysis and Recognition, Tsukuba
Science City, Japan, 49–52.
[9] Liolios, N., Fakotakis, N., Kokkinakis, G., 2002. On
the generalization of the form identification and skew
detection problem. Pattern Recognition 35, 253–264.
[10] Smith, L.I, A tutorial on Principal Components
Analysis; February 26, 2002.
[11] Steinherz, T. Intrator N. and Rivlin, E. (1999), Skew
detection via principal components analysis. In
Proceedings of the 5th International Conference on
Document Analysis and Recognition, pages 153–156.
IEEE Computer Society.
[12] Sarfraz, M. Zidouri, A. Shahab, S.A, 2005. A Novel
Approach for Skew Estimation of Document Images
in OCR System. Proceedings of the Computer
Graphics, Imaging and Vision: New Trends
(CGIV’05) IEEE.
[13] Steinherz, T. Intrator, N. Rivlin, E. (1999), Skew
Detection via Principal Component Analysis.
[14] Okun, O. Pietikainen, M. Sauvola, J., Robust Skew
Estimation on Low-Resolution Document Images.
[15] Ramesh, D.R. Piyush, M. K. Mahesh, D. D., Skew
Angle Estimation and Correction of Hand Written,
Textual and Large areas of Non-Textual Document
Images: A Novel Approach.

