A Blind Watermarking of 3D Triangular Meshes Using Geometry Image
Ni Yi-qiang, Liu Bo, Zhang Hong-bin
College of Computer Science, Beijing University of Technology, China
niyiqiang@gmail.com, liubo@emails.bjut.edu.cn, zhb@public.bta.net.cn
Abstract
A novel blind watermarking method for the 3D
mesh model is proposed. This method is based on the
geometry image which is created by the
parameterization and sampling of the model. The
geometry image except the boundary is partitioned into
several sub-images of equal size. Every sub-image is
normalized and decomposed with two-dimensional
Haar wavelet. The watermark is embedded into the low
components of the wavelet coefficients with the LSB
method. Other conventional 2D image watermarking
methods could also be applied. The watermarked
model is reconstructed from the embedded geometry
image. For the extraction of the watermark, the
original model is not required. Experimental results
show the proposed algorithm is robust against the
attacks such as translation, scaling, rotation, local
deformation and certain amplitude of noise
disturbance.

1. Introduction
Copyright protection is one of the most important
issues in the production and consumption of digital
media. Digital watermarking techniques have been
considered as a solution to this problem. Most of the
watermarking technologies focus on media types like
image, video and audio stream. The increasing use of
3D models for the animation and CAD promotes the
study in the watermarking of 3D models.
The first watermarking method of 3D models was
presented by Ohbuchi [1] in 1997. Over the last
decennium, many new methods were proposed, which
can be classified into two parts according the domain
the watermark was embedded: spatial domain
watermarking and transform domain watermarking.
The spatial domain watermarking methods usually
embed the watermark by directly modifying the vertex
position [2~4], the vertex connectivity [1], or the
surface normals [5].The distances from the centroid to
the points [6], the sets of similar triangles [1], the ratio

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

of the tetrahedral volumes [1] and the attribute datum
associated to the points of the mesh, such as texture
coordinates [7] also could be used for watermark
embedding.
The first transform domain watermarking method
was presented by Kanai et al. [8], who applied the lazy
wavelet transform to decompose the mesh model into a
spectral domain. In [9, 10] the 3D model was
transformed into a translation, rotation and scaling
invariant space. Yin et al. [11] performed the
multiresolution decomposition and the watermark
could be embedded into the low-frequency component.
Ohbuchi et al. [12] used the eigenvectors of the
Laplace matrix as the orthogonal basis to get the
pseudo spectral of the coordinates of the vertices.
Muratani et al. [13] adopted the singular spectrum
analysis to get the spectrum of the vertexes. Wu et al.
[14] combined the radial basis functions and singular
spectrum analysis together to embed watermark into
large meshes efficiently.
Nevertheless, all of the above algorithms directly
handled the vertices in the 3D coordinates. Different
from the 3D conventional watermarking algorithms,
Song et al. [15] presented a scheme that used a virtual
scanner to get a 2D range image from 3D model, and
then applied the conventional 2D image watermarking
to the range image. But the reference axes of virtual
scanner were changed when the model suffered the
attack of local deformation.
In this paper, we propose a novel blind algorithm
that embeds watermark into the geometry image of the
3D model. Most of the conventional 2D watermarking
algorithm can be adopted for the watermarking of
geometry image. Different from [15], the geometry
image of the model is created by parameterization, and
partitioned into several sub-images of equal size. Every
sub-image is normalized and decomposed with twodimensional Haar wavelet. The watermark is
embedded into the low components of the wavelet
coefficients with LSB method [16]. In the extraction
procedure, the original model isn’t required.
Experimental results show that our method is robust

against to translation, scaling, rotation,
deformation and certain amplitude of noise.

local

2. Geometry Image
The Geometry Image representation was introduced
by Gu et al. [17], which used a completely regular
sampling to capture the shape of the 3D model. The
coordinates of the vertices of the 3D model were
presented in a 2D grid of ( x, y,z ) values, which could
be seen as (r, g,b) colors of a true-color image. Thus,
the traditional image algorithms could be applied to the
Geometry Image.
In [17], the Geometry Image was created as follows:
The arbitrary mesh was cut along a network of edge
paths. Then it was mapped onto a square using the
2
Floater parameterization [18] with the L geometricstretch metric [19]. The surface was sampled at grid
points in the parameterization domain and thus
geometry image was created. To reconstruct the 3D
model, each 2*2 of grid points were splitted into two
triangles, along the shorter one of the two diagonals.
(see Figure 1, from [17])

3.2. Partition of the Geometry Image
Because the vertices of the reconstructed model
corresponding to the adjacent grid points of the
geometry image are neighboring, the geometry image
except the boundary is partitioned into several subimages of equal size to achieve the robustness against
local distortion. For the reason that the cut-nodes along
which the model was cut are replicated and lie on the
boundary of the geometry image, the boundary should
be preserved to avoid cracks in the reconstructed
model. For every sub-image Gi , we do the same
transformation as following and embed the same
watermark.

3.3. Normalization of the Vertices in the subimages
The purpose of normalization is to transform the
points in Gi to a space that is not affected by
geometrical attacks like translation, rotation and
scaling of the 3D model. Thus the robustness against
the above attacks is achieved.
Vertices in the sub-image Gi are

V = {vi = ( xi, yi , zi ) ∈ \ 3 | i = 1, " , S}
where S is the size of the sub-image Gi .The centroid
C of V is calculated as [9]:

C=

1

S

∑v
S

(1)

i

i =1

V are translated and form the point set
Figure 1. Creation and rendering of a geometry
image

3. Watermark Embedding
3.1. Creation of the Geometry Image of the
Model
A 2-manifold triangle mesh TM can be depicted by
a set of vertices P and a set of faces F where
3

P = { pi = ( xi, yi, zi ) ∈ \ | i = 1," , Nv}
F = {(i, j , k ) | i, j , k ∈ [1, " , Nv],{i, j, k} is a face}
A geometry image G is created by the way

V' = {vi ' | vi ' = vi − C

3

= ( xi ', yi ', zi ') ∈ \ | i = 1, " , S }

(2)

When the watermarked model is translated, the
relative position of V and C (i.e., V' ) keeps
unchanged. Thus, the robustness against translation of
the model is achieved. Then, the following covariance
matrix M is calculated as [9]:

 ∑N x '
 Ni =0
M =  ∑ i =0 x ' y '
 N
 ∑ x 'z '
 i =0
v

2

i

v

i

i

i

i

v

∑
∑
∑

Nv

i =0

x'y'
i

i

Nv

y '2
i =0
i

Nv

y 'z '
i =0
i

i

∑
∑
∑

Nv

i =0

x ' z '
i

i



y ' z '  (3)
i =0
Nv

i

i




z '2 
i =0
Nv

i

introduced in the section 2, which consists of an
N × N array of ( x, y,z ) values:

The columns of the rotation matrix R are the
eigenvectors (u,v,w) of M which are ordered by

G = {gi , j = ( xi ', yi ', zi ') ∈ \ | i, j = 1," , N }

their related eigenvalues ascendingly. V' are rotated so
that (u,v,w) coincides with the axes ( x, y,z )

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

correspondingly. This can be done by simply
multiplying V' by the matrix R :

V'' = {vi '' = vi '⋅ R = ( xi '', yi '', zi '') ∈ \

3

| i = 1," , S }

(4)

For the reason that when the watermarked model
was rotated, the direction of eigenvectors (u,v,w)
may be reversed, the absolute values of coordinates of
vertices in V'' are necessary to be calculated:

V ''' = {v ''' = (| xi '' |,| yi '' |,| zi '' |)
= ( xi ''', yi ''', zi ''') ∈ \ 3 | i = 1, " , S }

(5)

signV '' = sign(V '')
where sign V'' is a sign matrix to save all the signs of
the coordinates in V''' . The eigenvectors (u,v,w) are
the principal components of V' , which can be seen as
the inner coordinate axes of V' and the absolute values
of the relative coordinates derived from projecting V'
to them are invariant to rotation. Thus, the robustness
against rotation of the model is achieved. The scaling
factor is calculated as follows [10]:

SC = ( SCx 2 + SCy 2 + SCz 2 ) / 3
SCx =

1

S

∑ | x ''' |, SC
S
i

i =1

SCz =

1
S

y

=

1

S

∑ | y ''' |
S
i

(6)

i =1

S

∑ | z ''' |
i

i =1

which can be as the divisor of V''' in the following
way to achieve the robustness against the scaling of the
model:

V '''' = {v '''' =

1
SC

⋅ ( xi ''', yi ''', zi ''')

(7)

3

= ( xi '''', yi '''', zi '''') ∈ \ | i = 1, " , S }
Through the transformation in the section 3.2 and
3.3, the robustness against to the attacks of translation,
rotation, scaling and local distortion of the 3D model is
achieved.

3.4. Permution and Wavelet Decomposition
For every sub-image, the vertices are permuted in
order that the watermark is embedded into a random
position to improve the security of the watermark:
V ''''' = permute(V '''', k 1)
(8)

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

The coordinates of the vertices ( x, y,z ) could be
seen as the ( r, g,b) of a true color image. Every value
of ( r, g,b) of the true color image could be seen as a
gray-scale image, which is marked as X - image,
Y - image and Z - image accordingly. For the reason
that the coordinates ( x, y,z ) of the vertices would be
changed simultaneously once the position of a vertex is
moved, Y - image and Z - image should be both
permuted:

Y − image ' = permute(Y − image, k 2)
Z − image ' = permute( Z − image, k 3)

(9)

k1,k2 and k 3 are the secure keys. Then
X - image,Y - image' and Z - image'

could be
watermarked by the conventional methods of image
watermarking. Here, we use the two-dimensional Haar
wavelet to decompose the X - image,Y - image' and
Z - image' separately and the low-frequency
components of the wavelet coefficients multiple an
embedding factor α (e.g. α =100) and are rounded to
the nearest integers CoIX, CoIY and CoIZ . Thus, the
LSB method could be applied. Other 2D image
watermarking methods also could be applied
depending on the demand.

3.5. Watermark Embedding and Reconstruction of the Model
The watermark W is a binary sequence wi ∈ {0, .
1} . Same W is embedded into CoIX, CoIY and
CoIZ separately with the LSB method.
After the inverse transformation of the steps in the
section 3.5, 3.4, 3.3, 3.2, a new geometry image G' is
generated. A model TM' embedded with watermark
can be reconstructed from the geometry image G' .

4. Watermark Detection
The vertices of the 3D mesh object TMt under
investigation are arrayed into an N × N array Gm ,
which have the same indices of the vertices with the
geometry image G' . Gm is transformed as described
in section 3.2,3.3,3.4. For every sub-array Gi of Gm ,
the watermark Wix,Wiy and Wiz could be extracted
from CoIX, CoIY and CoIZ separately, and the
watermark Wi is calculated as:

Wi = {Wij = round ((Wixj + Wiyj + Wizj ) / 3)
| j = 1," , size(W )}
where

(10)

round ( I ) is to round I to the nearest integer.

The correlation between the embedded watermark
and every extracted watermark Wi could be calculated
by performing bitwise comparisons as:

Ri =

1
size(W )

performance and robustness against attacks are under
investigated as follows:
(1) Perceptual Invisibility of the Watermark
Figure 3(b, c, d) show the change of appearance of
the watermarked bunny at different settings of
embedding factor α :

size (W )

⋅(

∑

(Wij == Wj ))

(11)

j =1

The extracted watermark We which has the largest
correlation R with the embedded watermark is chosen
as the extracted watermark. If R is larger than a
specified threshold (e.g., 0.75), the attacked test mesh
object TMt is confirmed to contain the originally
embedded watermark. All through the extracting
procedure, the original model is not required.

5. Experimental Results
The proposed algorithm is applied to the bunny
model. The bunny has 35147 vertices and 69642 faces
(shown in Figure 2(a)). The size of the geometry image
of the bunny is 257 × 257. The model reconstructed
from it has 66049 vertices and 131072 faces (shown in
Figure 2-(b)). The watermark embedding factor α is
set to 200. The size of watermark region is 64 × 64(512
bytes, shown in Figure 2-(c)).

(a)

(b)

(c)

Figure 2. An example for the watermarking: (a)
original bunny (b) reconstructed bunny (c)
watermark
The SNR of the watermarked bunny model is
49.8829dB, where SNR is defined as

 var{& P − P &} 

 var{& Pw − P &} 

SNR = 10 log10 

(d)

(2) Invariance to Translation Rotation and Scaling
Transformation
The watermark is embedded into bunny under the
same condition α =100. Then the watermarked bunny
is attacked with translation, rotation, scaling and the
concatenation of them. The watermark was extracted
after transformation. (shown in Figure 4, R is the
largest correlation between the embedded watermark
and every extracted watermark)

(b)

(c)

(d)

Figure 4. Extracted watermark after several
affine transformations: (a) translation ( R =1)
(b) rotation ( R =1) (c) scaling ( R =1) (d)
concatenation ( R =1)
(3) Robustness for the Local deformation
Half of the right part of the bunny is suffered local
deformation with the concatenation of rotation,
translation and scaling randomly under the condition

(12)

where P,Pw are the coordinates of the vertices of the
original model reconstructed from the geometry image
and the watermarked model , P are the mean value of
P . The value SNR could be seen as an objective
value to measure how much watermark is added. The

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

(c)

Figure 3. The change of appearance of the
watermarked bunny: (a) reconstructed bunny
(b) watermarked bunny ( α =200) (c)
watermarked bunny ( α =100) (d) watermarked
bunny ( α =50)

(a)

(a)

(b)

Figure 5. Extracted watermark after local
deformation ( R =1)

α =100. Figure 5 shows the watermark extracted after
deformation.

The noise used here is generated randomly. The
relation of rate of noise imposed vertices with the
correlation R is shown in Figure 6-(a) under the
-3

condition that the amplitude of noise is 10 and
α =100. While the relation of the amplitude of the
imposed noise with the correlation R is shown in
Figure 6-(b) under the condition that the rate of noise
imposed vertices is 100% and α =100.

(a)

4

we run the algorithm up to 10 times and false alarm
doesn’t occur.

6. Conclusions
We have presented a novel watermarking algorithm
for the 3D mesh models. The geometry image of the
model is created with parameterization and then is
partitioned into several parts of equal size. The points
in the sub-images was normalized and permuted. Then
we use the two-dimensional Haar wavelet to
decompose the sub-images and the low-frequency
components of the wavelet coefficients multiply an
embedding factor and are rounded to the nearest
integers. Then the watermark is embedded with the
LSB method. Other 2D image watermark methods also
can be used. The watermarked 3D object is
reconstructed from the watermarked geometry image.
In the extraction procedure, the original model isn’t
required. The vertices of the watermarked model are
arrayed as a square matrix which is just the
watermarked geometry image. The watermark could be
extracted after the same transformation as in the
embedding procedure. The results show that it’s robust
against the attacks such as translation, scaling, rotation
and local deformation and certain amplitude of noise.
Future work can be extended in such direction: the
robustness against more types of attacks like cutting,
changing the indices of the vertex and simplicity
should be handled.

Acknowledgments
This work is supported by National Natural Science
Foundation of China (No. 60443005, 60575008) and
China Ministry of Education (No.20040005016). The
geometry image of the model bunny is downloaded
fromftp://ftp.research.microsoft.com/users/hhoppe/data
/gim/.

References
(b)
Figure 6. The Relation of R with the ImposedNoise: (a) R versus Rate of Noise Imposed
Vertices (b) R versus Amplitude of Imposed
Noise
In summary, the results show the proposed
algorithm is robust against the attacks such as
translation, scaling, rotation, local deformation and
certain amplitude of noise. For false alarm probability,

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

[1] R. Ohbuchi, H. Masuda, M. Aono. Watermarking Threedimensional Polygonal Models. In Proceedings of ACM
Multimedia 97, 1997, 261-272.
[2] R. Praun, H. Hoppe, A. Finkelstein. Robust Mesh
Watermarking. In Computer Graphics Proceedings, Annual
Conference Series, ACM SIGGRAPH, New York, 1999, 4956.
[3] M. Ashourian, R. Enteshary. A New Masking Method for
Spatial Domain Watermarking of Three-Dimensional
Triangle Meshes. In Proceedings of the Conference on

Convergent Technologies for the Asia Pacific, 2003, 428431.
[4] T. Harte, A. G. Bors. Watermarking 3D Models. In
International Conference on Image Processing, 2002, 3:661664.
[5] O.Benedens. Geometry-based Watermarking of 3D
Models. IEEE Computer Graphics and Applications, 1999,
46–55.
[6] Yu Zhi-qiang, H. H. S. Ip, L. F. Kowk. Robust
Watermarking of 3D Polygonal Models Based on Vertex
Scrambling. In Proceedings of the Computer Graphics
International 03, 2003, 254-257.
[7] Zhang Liangjun, Tong Ruofeng, Su Fei,Dong Jinxiang. A
Mesh Watermarking Approach for Appearance Attributes. In
Proceedings of the 10th Pacific Conference on Computer
Graphics and Applications (PG'02), 2002, 450-451.
[8] S. Kanai , H. Date , T. Kishinami. Digital Watermarking
for 3D Polygons using Multiresolution Wavelet
Decomposition. In Proceedings of the 6th IFIP WG 512
International Workshop on Geometric Modeling, 1998, 296307.
[9] A.Kalvilas, A.Tefas and I.Pita. Watermarking of 3D
Models using Principal Component Analysis. In Proceedings
of IEEE International Conference on Acoustics, Speech, and
Signal Processing (ICASSP’03), 2003, 676-679.
[10] Liu Wang, Sheng-he Sun. Rotation, Scaling, and Translation Invariant Blind Digital Watermarking for 3D Mesh
Models. In Proceedings of the First International Conference
on Innovative Computing, Information, and Control
(ICICIC’06), 2006.

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

[11] K. K. Yin, Z. G.. Pan, J. Y. Shi and D. Zhang. Robust
Mesh Watermarking Based on Multiresolution Processing. In
Computers and Graphics, 2001, 409-420.
[12] R. Ohbuchi, S. Takahashi, T. Miyazawa and A.
Mukaiyama. Watermarking 3D Polygonal Meshes in the
Mesh Spectral Domain. In Proceedings of Graphics Interface,
Ottawa, Canada, 2001, 9-17.
[13] K.Muratani and K. Sugihara: Watermarking 3D
Polygonal Meshes Using the Singular Spectrum Analysis.
IMA Conference on the Mathematics of Surfaces, 2003, 8598.
[14] Wu Jianhua, L. Kobbelt. Efficient Spectral Watermarking of Large Meshes with Orthogonal Basis Functions. In
Visual Comput. 2005, 847-857.
[15] H. S. Song, N. I. Cho and J. W. Kim. Robust
Watermarking of 3D Mesh Models. In Proceedings of IEEE
Workshop on Multimedia Signal Processing, 2002, 332-335.
[16] W. Bender, D. Gruhl, N. Morimoto, A. Lu. Techniques
for Data Hiding. In IBM System Journal, 1996. 35(3,4): 313336.
[17] X. Gu, S. J. Gortler, H. Hoppe.Geometry Images. In
Proceedings of SIGGRAPH 2002, 2002, 355-361.
[18] M. S. Floater. Parameterization and Smooth Approximation of Surface Triangulations. In Computer Aided
Geometric Design 14, 1997, 231-250.
[19] P.Sander, J. Snyder, S. Gortler, and H. Hoppe. Texture
Mapping Progressive Meshes. In SIGGRAPH 2001, 2001,
409-416.

