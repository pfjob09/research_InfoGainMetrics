PhylloTrees:
Harnessing Nature’s Phyllotactic Patterns for Tree Layout
†

‡

Sheelagh Carpendale

Anand Agarawala

Department of Computer Science
University of Calgary

Department of Computer Science
University of Calgary

ABSTRACT
We explore the use of nature’s phyllotactic patterns to inform the
layout of hierarchical data. These naturally occurring patterns
provide a non-overlapping, optimal packing when the total
number of nodes is not known a priori. We present a family of
expandable tree layouts based on these patterns.

137.5o

2
1
137.5o

a

CR Categories: I.3.3[Computer Graphics]:display algorithms
Keywords: Graph layout, information visualization, phyllotactic
patterns, tree visualization

1 INTRODUCTION
Hierarchically structured data sets or trees occur with sufficient
frequency that tree visualization approaches continue to be a
reoccurring research topic. Trees arise naturally due to data
characteristics as in the case of family trees, phylogenic trees, and
file structures, as well as arising from common methods of
information organization. One example involves creating
categories and subdividing these categories, thereby imposing a
hierarchical structure that can be useful in information access and
navigation. The resulting hierarchies lend themselves to be
visualized as trees. While many tree visualizations exist (for
survey see [1]) increasingly massive data sets, expanding
computational power, and still relatively limited display space
makes this a topic of ongoing interest.
We add a family of layout variations to the growing number of
tree algorithms. The inspiration for these 3D layouts comes from
Cone trees [5] and phyllotactic patterns [6]. PhylloTrees offer
several advantages. They are fractal and therefore self-repeating,
making it easier to comprehend a large numbers of nodes, as one
only needs to understand one principle shape. They support
interactive manipulation yielding many layout possibilities
through the adjustment of two parameters. They provide the
ability to visualize quite large hierarchies. PhylloTree layouts can
handle growth in the numbers of nodes at any level without
requiring significant restructuring. Expandable layouts are of
interest because information visualizations often have to contend
with dynamic data that is not fully specified a priori. A common
example is our personal computer data files where it may be
necessary to add nodes any level during use.
Tree layouts that can handle large numbers of nodes
(~100,000 nodes) such as Botanical [3], Fractal [4], and
PolyPlane[2] trees have been developed. Fractal trees extend
Cones trees [5] using the same form factor, Botanical trees create
layouts resembling natural trees, and while the PolyPlane
algorithm is easy to implement, finding the best partitioning in
their approach is NP hard.
†

e-mail: sheelagh@cpsc.ucalgary.ca
e-mail: anand@cpsc.ucalgary.ca

‡

b

c

Figure 1: Development of the phyllotactic pattern

2 CREATING PHYLLOTACTIC TREES
Phyllotactic patterns are common in nature. Familiar examples
include the placement of seeds in a sunflower (Figure 1a) and the
organization of the scales on a pineapple. Vogel [6] gave the
following mathematical description of a phyllotactic pattern for
constant-sized objects in a plane. Polar coordinates for the nth
object are

φ = n ⋅ 137.5°,

r=c n,

n=1,2,…

where c is a constant. Figure 1b shows the positioning of two
nodes n=1 and n=2, and Figure 1c shows the algorithmically
generated pattern with 300 nodes. The angular constant for
sunflowers is 137.5° and has been shown to provide optimal
packing without introducing overlapping [6]. Adjustments to the
angular constant and the spacing constant c provide a rich palette
of layout possibilities. Figure 2a shows a simple tree with a root
and 50 children nodes that have been laid out using the angular
constant 137.5°. The view from the bottom (Figure 2b) shows the
emerging spirals with closely packed nodes. In Figure 2c the
spacing constant has been adjusted to allow more space for the
addition of second level children nodes.

a

b

c

Figure 2: Single level tree, angular constant=137.5°°; varying
spacing constant adjusts the space between nodes

Figure 3a includes 6 secondary child nodes for each of the 50
primary children nodes. One can see that the secondary children
are becoming crowded. This crowding can be addressed by
increasing the spacing constant. In Figure 3b the primary
children’s spacing constant has been increased and now allows for
30 secondary children. Alternatively, the angular direction of a
parent node can be used as the principle angular direction of the
children nodes. The angular direction of a node is defined as the
angle created by the edge connecting the node and its parent.
Figure 4a illustrates this, showing how the secondary children
groupings are now extended as continuations of the primary
child’s layout direction. Figure 4b shows this same layout from
below, revealing the additional space. By calculating the distance
to the closest node neighbour we can automatically determine an
appropriate spacing constant for each level.

[2]
[3]
[4]

b

a

Figure 3: Using the primary children’s spacing constant to
provide more space for secondary children.

[5]
[6]

a

Transactions on Visualization and Computer Graphics 6(1):24-43,
2000
S.-H. Hong, T. Murtagh. Polyplane: An implementation of a New
Layout Algorithm for Trees in Three Dimensions. Interactive Poster,
IEEE Information Visualization 2003.
E. Kleiberg, H. van de Wetering, J.J. van Wijk. Botanical
Visualization of Huge Hierarchies. In:Proceedings IEEE InfoVis'01 .
87-94, 2001
H. Koike, H. Yoshihara: Fractal Approaches for Visualizing Huge
Hierarchies, Proceedings of IEEE Symposium on Visual Languages,
55-60, 1993
G.G. Robertson, J.D. Mackinlay, S.K. Card. Cone Trees: Animated
3D Visualizations of Hierarchical Information. In the Proceedings of
ACM CHI’91, ACM Press, 189-194, 1991
H. Vogel. A Better Way to Construct the Sunflower Head.
Mathematical Biosciences, 44: 179-189, 1979.

b
Figure 4: Using angular direction of primary children to form
the principle direction of the secondary children.

While the angular constant of 137.5º provides optimal packing,
many other angles also provide interesting layouts, though the
node spacing is not as regular. In Figure 5 the angle 344.2º has
been used. Figure 5 also illustrates the addition of nodes. In
Figure 5b, 5 more primary children nodes have been added to the
50 in Figure 5a. Figures 6 and 7 display layouts using angular
constants of 9º and 141.5º respectively. Figure 8 adds a third level
to the layout of 31,250 nodes and uses an angle of 15.5º.

a

Figure 6: Using an angular constant of 9º

b
Figure 5: Expanding the tree. 50 primary child nodes (a)
increases to 55 (b). Angular constant of 344.2º

3 CONCLUSIONS

Figure 7: Angular constant of 141.5º

We introduce the use of phyllotatic patterns to create tree layouts.
The phyllotactic angular constant of 137.5º offers optimal packing
with an expandable layout. Since in information visualization the
focus is often on creating visualizations for data where the exact
number of nodes is not known a priori, algorithms that can handle
increases and decreases in the number of nodes gracefully are an
asset. PhylloTrees offer a readily available family of layouts
through adjustments of two parameters: the angular constant and
the spacing constant.

ACKNOWLEDGEMENTS
This research is supported by the National Science and Engineering
Research Council, Canadian Foundation for Innovation and Intel Inc.

REFERENCES
[1]

I. Herman, G. Melancon, M. Marshall. Graph visualization and
navigation in information visualization: A survey. IEEE

Figure 8: A 3 level tree, angular constant 15.5º, 31,250 nodes

