Interactive Poster: Interactive Visualization approaches to the
Analysis of System Identiﬁcation Data
Jimmy Johansson∗
∗ NVIS

Patric Ljung∗

David Lindgren†

Matthew Cooper∗

- Norrk¨
oping Visualization and Interaction Studio, Link¨
oping University, Sweden
† Division of Automatic Control, Link¨
oping University, Sweden

a,b) One region with large residuals

c,d) Two regions with large residuals

Figure 1: A semi-immersive display showing the relationship between the model input, the residual (the error between the model and the real
system) over time. The visualization reveals that in some regions the residual is quite large, i.e. the model does not ﬁt very well. The temporal
information is crucial for the model validation which is an important step in the system identiﬁcation process.

A BSTRACT
We propose an interactive visualization approach to ﬁnding a mathematical model for a real world process, commonly known in the
ﬁeld of control theory as system identiﬁcation. The use of interactive visualization techniques provides the modeller with instant visual feedback which facilitates the model validation process. When
working interactively with such large data sets, as are common in
system identiﬁcation, methods to handle this data efﬁciently are required. We are developing approaches based on data streaming to
meet this need.
CR Categories: I.3.6 [Computer Graphics]: Methodology and
Techniques—Interaction techniques; I.6.4 [Simulation and Modeling]: Model Validation and Analysis;
Keywords:
System Identiﬁcation, Interactive Visualization,
Model Validation
1

Denoting the model regressor, model input and model output by
ϕt , ut and yt respectively we can deﬁne ϕt as
ϕt = [yt−1 , yt−2 , ..., yt−k , ut , ut−1 , ..., ut−l ]
and the estimated model output, yˆt , as
yˆt = f (ϕt ),

Noise

Input, ut

System
(discrete)

3. Validate the model, see ﬁgure 2. If the residual is satisfactory
then ﬁnish, else select another model structure and start again.
We show how step 3 above can be aided by the use of interactive
visualization.
∗ e-mail:{jimjo,plg,matco}@itn.liu.se
† e-mail:david@isy.liu.se

System output, yt
−
Residual, et
+

1. Select model structure.
2. Estimate model parameters given data sampled from a system
and calculate the model residual – that which is left unmodelled.

(2)

where k and l are the number of time steps the model uses as a
“memory” in order to predict the current time step, yˆt . In the most
general case the aim of model validation is to identify the function
f and the parameters k and l.
With large k and l the data to be considered in the model validation becomes highly multivariate and the relationships between
these data are frequently non-linear and difﬁcult to observe directly.
This makes the model validation process difﬁcult.

I NTRODUCTION

The purpose of system identiﬁcation [4] is to ﬁnd a mathematical
model for a real world process, for example, a model that describes
the relationship between the outﬂow and level in a set of connected
water tanks.
The process of system identiﬁcation can be broken down into
three steps:

(1)

Model

Model output, yt

Figure 2: Model validation. The output yt of the system, here discrete, is compared to the output of the model, yˆt . The diﬀerence
between the two makes the residual, et = yˆt − yt , t = 1, 2, . . . , N. If
the residual is dependent on the noise only, not on the input ut , then
there is nothing more to model. Depending on the application, ut
and et could be either a scalar or a vector.

LOAD

PROCESS

DISPLAY

LOAD

PROCESS

DISPLAY

LOAD

PROCESS

DISPLAY

a) Example of serialized parallel pipeline.
LOAD

PROCESS

LOAD

PROCESS

LOAD

PROCESS

DISPLAY

b) Example of parallel pipeline with a synchronized display stage.
Figure 4: Representation of two diﬀerent pipeline constructs.
Figure 3: Our 3D visualization running on a semi-immersive display.
The visualization shows the relationship between ut , et and t.

2

V ISUALIZATION OF T IME -VARIANT DYNAMICS

In a time-variant system, the differential equation relating ut to yt
changes over time. We can seldom understand this change in dynamics by looking at the signals alone. Often we cannot even see
when the changes occur. By using a time-invariant model, however, that describes the system well at one time instant, we can
detect when new measurements do not match. This often means
that something is wrong with the system, for example, overﬂow in
a tank or a broken pipe. This will give rise to a large residual and
can thus be identiﬁed. The interactive 3D visualization enables the
user to dynamically visualize pair-wise combinations of et , ut , yt
(or any of their time-lagged instances) against t. In ﬁgure 3 we can
clearly see two different regions where the residual is large and so
the model does not ﬁt. The visualization gives the modeller the
necessary temporal information to easily identify those regions.
The techniques we use in this work are well-known in their respective disciplines. Using interactive 3D visualization as a tool for
system identiﬁcation, however, we have not seen elsewhere. What
we have seen, though, are great efforts being made to visualize complex process data, for instance, by means of scatter plot matrices
and parallel coordinates [2]. The applications have mainly been in
decision support [3]. For the interested reader, refer to [1] for an
overview of concepts and taxonomies of visual data exploration.
Our implementation merges the rich variety of estimation methods provided by MATLAB with interactive visualization techniques
offered by the AVS/Express visualization software. The developed
application has also been extended from an ordinary desktop PC to
a much larger semi-immersive stereoscopic display.
3

P IPELINED S TREAM P ROCESSING

Dealing with data sets of sizes requiring unattainable amounts of
internal memory prompt for new schemes of data management [6].
The nature of time-varying data sets often lend themselves to process data by streaming blocks of data through a processing pipeline
instead of the entire data set at once. By formalizing the processing
pipeline to work on blocks of data it becomes possible to provide
progressive interactive visualization as well as to integrate external
tools for processing of large data sets.
Although model ﬁtting is usually performed on selected subsets
of the data under study the validation of the ﬁtted model is carried out on the entire data set. In order to support large data sets,

blocks of data can be sent through the pipeline in sequence which
reduces the memory requirement and enables reuse of memory for
temporary data along the processing data path. In addition, parallel
processing is also enabled, speciﬁcally useful on multi-CPU systems [5]. The pipelined processing increases the interactivity and
allows for progressive visualization that also enables a user to abort
and redeﬁne a poor choice of processing at an early stage.
In ﬁgure 4 two schematic conﬁgurations are shown. The typical
pipeline in subﬁgure a can apply to progressive processing and visualization as well as to time-varying presentation or animation of
data. Data sets that allow for partitioned processing can be made in
parallel (subﬁgure b). For this application both schemes can beneﬁt
the interactive visualization.
4

C ONCLUSIONS

The understanding and experience gained from interacting with
data through our application has proven to be a valuable tool in
the system identiﬁcation process. The use of interactive visualization seems to be a promising technique for model validation and a
good complement to the more traditional techniques in use today.
R EFERENCES
[1] Maria Cristina Ferreira de Oliveira and Haim Levkowitz. From visual
data exploration to visual data mining, a survey. IEEE Transactions on
Visualization and Computer Graphics, 9(3):378–394, 2003.
[2] Jimmy Johansson, Robert Treloar, and Mikael Jern. Integration of unsupervised clustering, interaction and parallel coordinates for the exploration of large multivariate data. In Proceedings of the 8:th IEEE
International Conference on Information Visualisation, 2004.
[3] Rudolf Kulhav´y. A developer’s perspective of a decision support system. IEEE Control System Magazine, pages 40–49, Dec 2003.
[4] Lennart Ljung. System Identiﬁcation: Theory for the User. PrenticeHall, Upper Saddle River, N.J. 07458, USA, 2:e edition edition, 1999.
[5] Patric Ljung. Optimization and Parallelization of code for computing 3D Quantum Chaos. Technical report, Department of Science and
Technology, Link¨oping University, 2003.
[6] Patric Ljung, Mark E. Dieckmann, Niclas Andersson, and Anders Ynnerman. Interactive Visualization of Particle-In-Cell Simulations. In
Proceedings IEEE Visualization 2000, pages 469–472,592, 2000.

