Visual Path Analysis
T. Alan Keahey

Stephen G. Eick

Visintuit
keahey, eick @visintuit.com
Abstract
This paper describes a system for analyzing the flow of
traffic through web-sites. We decomposed the general path
analysis problem into a set of distinct subproblems, and created a visual metaphor for analyzing each of them. Our system works off of multiple representations of the clickstream,
and exposes the path extraction algorithms and data to the
visual metaphors as web services. We have combined the
visual metaphors into a web-based “path analysis portal”
that lets the user easily switch between the different modes
of analysis.

1 Introduction
Path analysis for a website is the study of how visitors
navigate through the site, what content they access and how
traffic flows through the site. It involves both understanding the sequences of content pages that an individual visitor
accesses as well as overall aggregate traffic flows among
different content groups. The sequence (path), begins at the
visitor’s entry point into the site, often the site home page,
contains one entry for each page that the visitor accesses,
and ends with the visitor’s exit page. For each visitor session, or visit to the website, a path is generated. Understanding visitor paths, what content visitors access, what
links users click on, and what content visitors are missing,
is a critical input for designing an effective web site. The
sorts of questions path analysis addresses include: Where
do visitors go after visiting the products page? Can you
show all paths for visitors that accessed the page for a promotion? Do the paths for visitors who arrive from a search
engine differ than those who came from an email blast?
Because this problem is so important, it has been the
topic of much research. Most of this has appeared in the areas of web analysis and web usage mining, addressing problems such as extracting visitors paths [5], surfing patterns
[6] and [8], and ordering relationships [12], and prediction
of the next web page for caching strategies [11]. While past
research visualized the structure of web sites [10, 4], our
focus is instead on how users navigate sites. In contrast
to previous researchers who focused on specific aspects of
path analysis, our approach is to partition path analysis into
a set of related issues and build an interactive visual toolkit
that addresses each issue individually. We call our toolkit
the “Path Analysis Portal.” Our toolkit combines unique
presentation metaphors with path analysis algorithms. The
visual metaphors are integrated in the portal to provide a
rich environment for interactive path analysis.

2 Organizing Path Data
Broadly speaking there are three classes of data that
come together for path analysis. Page View Sequences: are
the sequence of pages visited by the user in a session. This
is often referred to as the visitor’s clickstream. Site Content
and Content Groups: involves the actual material on each
page and how the pages are arranged within the site. The
vast majority of sites follow an approximately hierarchical
structure. For example, the top-levels of hierarchy within a
company site be shown in a nested list as (Products (Widgets, Grommets), Company, Employment, ...). It is common for most sites to we have about 5-10 content groups at
each layer in the hierarchy. Individual pages are mapped to
these specific content groups. Other content categories can
be defined using methods such as URL parsing or Content
Management Systems that define the content structure apriori. Visit Attributes: are associated with each session, and
include: visit duration, referring url, date and time, browser
type, entry page, exit page, visitor type.
At first glance, collecting path data may appear to be
easy [7]. There are, however, many subtle issues that complicate data collection. These involve accurate sessionization, handling sites with dynamic content, multiple browser
windows, etc. Details of these issues are beyond the scope
of this paper. We have built a robust back-end data collection system that we used for our analysis. It extracts paths
from log files, performs sessionization, and stores the result
in a relational store. From this store, multidimensional and
hierarchical OLAP cubes [13] are produced.

3 Presentation Metaphors and Algorithms
In this section we describe a number of path presentation metaphors and discuss the problems that they address.
we have found that no single presentation metaphor is suitable for answering all of the types of questions that a user
is likely to ask about paths. As such, our focus has been
on the creation of a suite of lightweight presentations that
can be easily manipulated and understood by the user. The
presentations make extensive use of animation to show the
progression of time-varying flows through the web site(s).
All of the metaphors are linked together, thus allowing the
user to switch between them easily. Behind each metaphor
is a web service that computes the required paths and sends
the result to the presentation client via XML. A common
feature of our metaphors is the ability to easily toggle between showing absolute traffic flows, and flow differences
over time or some other attribute.

Proceedings of the IEEE Symposium on Information Visualization 2002 (InfoVis’02)
1522-404X/02 $17.00 © 2002 IEEE

3.1 Funnel Chart dropouts on a sequence of pages.
Funnel analysis [9] is a technique to find dropout rates
along a designated sequence of pages. For the website designer, the intent is that visitors are supposed to access a
designated sequence of pages such as completing the steps
in a buying pipeline. By analyzing dropout rates site key
problem areas can be identified. We have created a dynamic
funnel chart that can be easily attached to any HTML table.
Figure 1 shows an example funnel chart having seven steps.
The width of each rung in the funnel encodes the number
of visitors accessing each page. It shows that 183 visitors
entered the site and only seven completed the purchase.

Figure 2. Paths between source/target pairs.
be very useful for discovering larger traffic patterns within
a website. Figure 3 shows an image of our leaky-pipe analysis tool. We used a modified hierarchical layout algorithm
with crossing reduction [1].
Figure 1. Funnel chart showing dropout rates.

3.2 Source/Target Chart all paths between two pages.
Source/target analysis shows a set of successful paths between two designated pages. The user of a source/target
analysis designates two pages (e.g. the home page and
the products page), and can then view the successful
paths for sessions that accessed both pages. One goal for
source/target charts is to identify inefficient navigation patterns. For example, if the most common paths between two
pages involve a third page, it suggests adding a hyperlink
to streamline navigation. A similar type of “couple analysis” computation (without a visual component) is described
in [2]. We have created a new visual metaphor for this, as
shown in Figure 2. Here we size the flow links between
successive pages to encode the traffic volumes.
Figure 3. All paths between a set of pages.

3.3 Leaky Pipe Chart ad hoc path and flow analysis
The previous metaphors allow a user to specify single
start and end points for analysis. Sometimes however a
more general analysis mode is required that allows the user
to specify a set of starting points, a set of destination points,
and possibly a set of intermediate points. This allows the
user to set up a moderately complex network of interest and
view traffic flow through that network to discover patterns
in the flow. Within this presentation, we have encoded the
volume of traffic by the thickness of lines so that customer
dropout from source to destination is revealed. This leakypipe analysis is similar to the clickstream tool in [3], and can

3.4 Inter-site Chart show flow among websites
Sophisticated organizations will frequently run multiple
websites that are related. For example, one large financial
organization has websites for on-line banking, mortgage
originations, home equity loans, etc. In total, this organization operates approximately a couple dozen websites. A
critical business problem for it is to understand cross-site
traffic flows. For example, how frequently do on-line banking customers access the mortgage site? Figure 4 shows
traffic flow differences among related sites and also referrals. The core sites are represented as large circles in the

Proceedings of the IEEE Symposium on Information Visualization 2002 (InfoVis’02)
1522-404X/02 $17.00 © 2002 IEEE

inner ring of the display. Arcs represent traffic flows among
the sites. The top referring urls for each site are shown
around the edges and are sized according to the amount of
traffic they send. The arrows between the inner sites are
coded red/green to show decrease/increase in flow, and the
color of the referring URL nodes similarly indicates positive
or negative differences. The user can easily toggle between
this mode, and the mode showing absolute traffic flows.

a rich capability for filtering and differencing. In addition,
we can use this flow metaphor to directly represent those attributes. For example, a given flow pattern between promotions and products can be further broken down by another
attribute such as time of day. Our system lets the user view
those attributes as branches within the flow metaphor.

Figure 5. Difference in flow among groups.

3.6 Live Hot Spot Page show click locations

Figure 4. Inter-site chart showing differences.

3.5 Hierarchical Flow Chart flow among content
Flow analysis is a special case of path analysis with only
a single-step transition between source and destination. For
example a marketing person might want to determine how
many users clicked on a promotion link to view a specific
product. If we generalize this example to include multiple promotions with multiple products, a fairly complex
network of single step flows can develop. To support this
type of analysis, we have created a multi-dimensional data
model that constructs content hierarchichies from website
structures. These content hierarchies can be drilled down to
show detail, or rolled up to aggregate. In our example, we
might break a website down into top-level categories, two of
which are Promotions and Products. Each of these can be
further broken down into their specific subcategories. Attributes in the data model (such as time or visitor type) can
also be used to filter the data. Our system can also show the
difference in flows over time. Our system allows the user to
view the differences using a sequence of color coded leftright bar charts. In addition to time, we can compute differences on any other attribute such as domain name, or visitor
type. Figure 5 shows the difference in flows between promotions (left) and products (right) over time. It shows that
promotion-product flow increased for all promotions except
the topmost one. Our data model includes many other attributes such as time or purchasing behavior, which provide

A critical problem for a website designer is how to arrange the content on the page so that it is easy and efficient
to use. Live Hot Spot Pages can show where users are clicking on a page. They superimpose click density information
over a “live” web page, while still allowing the user to interact with the page in the same way as they would with a
normal browser. Click locations in drop-down menus etc.
also have click density information superimposed on them.
In Figure 6, on top of each clickable location (including in
the drop-down menu) a semi-transparent rectangle visually
encodes the number of times that each particular link was
clicked (using a blue-yellow colormap). This display is particularly useful since it shows which regions of a web page,
images, and links are generating user activity.

Proceedings of the IEEE Symposium on Information Visualization 2002 (InfoVis’02)
1522-404X/02 $17.00 © 2002 IEEE

Figure 6. Hot spot page showing click density.

4 Path Analysis Portal
We have combined all of these path analysis metaphors
into a single ”Path Analysis Portal” that lets the user rapidly
switch between the different modes of path analysis. The
portal is a browser-based thin client that uses Java applets
and a dash of JavaScript. All of our presentation metaphors
have a similar “look and feel” and have a number of features
in common. Animation is used extensively to show either
the initial directions of path flow, or to show the buildup of
flow over time. The latter is used in conjunction with semiopaque rendering to “accumulate” traffic volume within the
alpha channel. As multiple time-steps lay down traffic flow
along a given path, the opacity of the path increases as successive semi-transparent lines are overlayed. Thus flow traffic can be visually encoded as a line thickness and/or as an
opacity, depending on whether we are viewing time varying
flows or a single snapshot.
This portal serves as a front end for our tiered architecture for path analysis. At the back end we have stored
clickstream data in a number of data formats including relational webhouses and hierarchical multidimensional OLAP
datawarehouses. In our middle tier, we have created web
services that perform the path analysis algorithms, and ship
the results via XML to the portal or other client for presentation. Although the client is able to send sophisticated data
requests to the middle-tier services, it does so in a metaphorspecific language and without reference to specific details of
the back-end data. This architecture greatly facilitates rapid
creation of new presentation metaphors as the need arises
for them. In most cases, we can automate the construction
of our presentation parameters from a simple query to discover our product database schemae.

5 Conclusions
This paper describes a set of charting types and a system
for website path analysis. Broadly speaking, there are three
research contributions. First, we have partitioned a broad
problem (path analysis) into a set of six distinct subproblems. For each subproblem we constructed an algorithm for
data extraction and created a visual presentation metaphor.
The second research contribution involves the visual
metaphors. Although some of our visual metaphors contain
conventional aspects, they also contain many novel features.
The funnel charts can be attached to HTML tables (overlaid
on top of any column); the source/target, leaky pipe, and
intersite traffic charts are animated to show time-varying
flows and can also show traffic differences; the flow charts
provide a hierarchical structure to the clickstream with visual drill-down and differences; to our knowledge the live
hot spot pages and source/target chart with embedded funnels are unique. Even where the chart type itself is not completely novel, it’s application toward path analysis is.

Finally, our third contribution is to combine our presentation metaphors into a common portal for interactive path
analysis. This portal, uses web services to provide an interactive environment for visual path analysis from a common web browser. Within this environment each individual
metaphor is simple to manipulate and understand, and when
taken together they provide a rich set of analysis tools for
understanding web-site traffic.

6 Acknowledgements
We would like to acknowledge that this research was
supported in part by Visual Insights, Inc.

References
[1] G. D. Battista, P. Eades, R. Tamassia, and I. G. Tollis. Graph
Drawing: Algorithms for the Visualization of Graphs. Prentice Hall, 1999.
[2] P. Berkhin, J. D. Becher, and D. J. Randall. Interactive
path analysis of web site traffic. In KDD-2001 Proceedings,
pages 414–419, San Francisco, California, 2001. ACM.
[3] J. Brainerd and B. Becker. E-commerce clickstream visualization. pages 153–156, 2001.
[4] E. H. Chi, J. Pitkow, J. Mackinlay, P. Pirolli, R. Gossweiler,
and S. K. Card. Visualizing the evolution of web ecologies.
In Proc. of ACM CHI 98 Conference on Human Factors in
Computing Systems, 1998.
[5] R. Cooley, P.-N. Tan, and J. Srivastava. Websift: the web site
information filter system. In Proceedings 1999 KDD Workshop on Web Mining, San Diego, California, 1999. SpringerVerlag.
[6] B. Huberman, P. Pirolli, J. Pitkow, and R. Lukose. Strong
regularities in world wide web surfing. Science, 280:95–97,
1997.
[7] R. Kimball and R. Merz. The Data Webhouse Toolkit. John
Wiley & Sons, Inc., New York, New York, 2000.
[8] S. Lawrence and C. L. Giles. Accessibility of information
on the web. Nature, 400(6740):107–109, 1999.
[9] T. Mah, H. Hoek, and Y. Li. Funnel report mining for the
msn network. In KDD-2001 Proceedings, pages 450–455,
San Francisco, California, 2001. ACM.
[10] T. Munzner and P. Burchard. Visualizing the structure of the
World Wide Web in 3D hyperbolic space. In VRML Conference Proceedings, 1995.
[11] A. Nanopoulos, D. Katsaros, and Y. Manolopoulos. Effective prediction of web-user accesses: A data mining approach. In R. Kohavi, B. Masand, M. Spiliopoulou, and
J. Srivastava, editors, WEBKDD 2001 Working Notes, pages
1–12. ACM Press, 2001.
[12] M. Spiliopoulou, C. Pohle, and L. Faulstich. Improving the
effectiveness of a web site with web usage mining. In Proceedings 1999 KDD Workshop on Web Mining, San Diego,
California, 1999. Springer-Verlag. In Press.
[13] E. Thomsen. OLAP Solutions. John Wiley & Sons, Inc.,
New York, New York, 1997.

Proceedings of the IEEE Symposium on Information Visualization 2002 (InfoVis’02)
1522-404X/02 $17.00 © 2002 IEEE

