Visual Mining of Multimedia Data for Social and Behavioral Studies
Chen Yu*

Yiwen Zhong

Thomas Smith

Ikhyun Park

Weixia Huang

Indiana University

Indiana University
Fujian Agriculture and Forestry University

Indiana University

Indiana University

Indiana University

ABSTRACT
With advances in computing techniques, a large amount of highresolution high-quality multimedia data (video and audio, etc.) has
been collected in research laboratories in various scientific
disciplines, particularly in social and behavioral studies. How to
automatically and effectively discover new knowledge from rich
multimedia data poses a compelling challenge since state-of-theart data mining techniques can most often only search and extract
pre-defined patterns or knowledge from complex heterogeneous
data. In light of this, our approach is to take advantages of both
the power of human perception system and the power of
computational algorithms. More specifically, we propose an
approach that allows scientists to use data mining as a first pass,
and then forms a closed loop of visual analysis of current results
followed by more data mining work inspired by visualization, the
results of which can be in turn visualized and lead to the next
round of visual exploration and analysis. In this way, new
insights and hypotheses gleaned from the raw data and the current
level of analysis can contribute to further analysis. As a first step
toward this goal, we implement a visualization system with three
critical components: (1) A smooth interface between visualization
and data mining. The new analysis results can be automatically
loaded into our visualization tool. (2) A flexible tool to explore
and query temporal data derived from raw multimedia data. We
represent temporal data into two forms - continuous variables and
event variables. We have developed various ways to visualize
both temporal correlations and statistics of multiple variables with
the same type, and conditional and high-order statistics between
continuous and event variables. (3) A seamless interface between
raw multimedia data and derived data. Our visualization tool
allows users to explore, compare, and analyze multi-stream
derived variables and simultaneously switch to access raw
multimedia data. We demonstrate various functions in our
visualization program using a set of multimedia data including
video, audio and motion tracking data.
KEYWORDS: visual data mining, multimedia data.
INDEX TERMS: H.1.2 [Information Systems]: Models and
principles - user/machine systems; H.5.1 [Information Interface
and Presentation]: Multimedia Information Systems; H.5.2
[Information Interface and Presentation]: User Interfaces —
Graphical user interfaces (GUI); H.3.3 [Information Storage and
Retrieval]: Information Search and Retrieval; H.2.8 [Database
Management]: Database Applications —Data mining
1

INTRODUCTION

With advances in computing and sensing techniques, multimedia
data are ubiquitous. In particular, a large amount of highresolution high-quality multimedia data (video, audio, EEG, and
*

e-mail: chenyu@indiana.edu

IEEE Symposium on Visual Analytics Science and Technology
October 21 - 23, Columbus, Ohio, USA
U.S. Government work not protected by U.S. copyright.

fMRI, etc.) has been collected in research laboratories in various
scientific disciplines, especially in social, behavioral and
cognitive studies. For instance, video-typing is a standard method
to document participants’ behaviors and responses in laboratory
environments and everyday contexts which will be analyzed later
by researchers to infer empirical results and new knowledge.
How to automatically and effectively discover new knowledge
from rich multimedia data poses a compelling challenge.
Multimedia data mining in general consists of two stages. In the
first step, researchers extract some derived data from raw
multimedia data. This step can be implemented by human coding
or by using image/speech processing programs. For example, one
may extract a time series of the location of a participant in a video
clip to form one temporal continuous variable. Multimedia data
contains a huge amount of information with various kinds. In
video data, each frame may contain several objects and people in
a scene. One can extract different properties from each entity (an
object or a person) in an image frame, such as the location of the
entity, the size of the entity, the speed of the entity, or the color
change of the entity. Assume that there are M objects and N
people appearing in a video clip, and K properties can be extract
from each, we will have (M+N)K temporal continuous variables.
With the increase of M, N and K, extracting all the information
from a video clip seems not to be efficient and may not be
possible. For another example, speech data seem to be relatively
simple since we can code them (automatically or manually) as
speech transcription. However, in addition to linguistic content,
raw speech data also contains other information that may also be
valuable, such as a speaker’s gender and age, the speaker’s
emotional state encoded in speech prosody, and so on. Thus, how
to identify and extract useful derived data is a challenge for
researchers, which turns out to be a chicken-and-egg problem. To
discover new knowledge in scientific studies, researchers may not
know in advance what information is most critical and interesting,
and should be extracted first. But meanwhile, without extracting
some data first and computing some results based on those data,
researchers may not know where to start.
In the second step of multimedia data analysis, researchers
work on derived data (time series, etc.) with the goal to find
interesting patterns. Recent advances in machine learning and data
mining have provided effective data analysis tools to discover
underlying patterns from time series[1]. However, data mining
algorithms can effectively search and discover only predetermined patterns and those patterns need to be statistically
reliable. This limitation significantly constrains what can be
achieved using standard data mining algorithms because the
exploratory nature of discovering new knowledge requires the
ability to detect uncommon (but interesting) patterns. This
observation points to a similar chicken-and-egg problem like the
one in the first step of data processing – without knowing what
patterns to look for, data mining algorithms most often cannot
work effectively in purely unsupervised mode. But meanwhile, a
huge amount of information must be reduced and summarized in
order to find meaningful results. Without the results from some
forms of data reduction, researchers may not have concrete ideas
on what to look for.

155

multimedia raw
data

visualization
and data
exploration

data mining and
analysis

derived data

multimedia raw
data

visualization
and data
exploration

insights

data mining and
analysis

derived data

Figure 1. Left: Information visualization and data mining are
traditionally treated as two topics. Right: Our approach builds
the links between these two and by doing so forms a closed
loop between visualization and data mining.

The key to solve the above problem is to develop a mechanism
that allows data researchers to explore the data and gain some
insights on how to analyze it[2]. In light of this, we propose to use
visualization techniques that present the data in various
informative ways and by doing so make it easier for researchers to
employ their own visual perception system to detect new patterns
that previously overlooked, to gain new insights, and to generate
new hypotheses which will lead to new discoveries. Thus, our
solution is to take advantages of both the power of human
perception system and the power of computational algorithms.
More specifically, researchers can use data mining as a first pass,
and then form a closed loop of visual analysis of current results
followed by more data mining work inspired by visualization, the
results of which can, in turn, be visualized and lead to the next
round of visual exploration and analysis. In this way, new
insights and hypotheses gleaned from the raw data and the current
level of analysis can contribute to further analysis.
As shown in Figure 1 (left), previous work either concentrates
only on information visualization (the blue arrow line) or only on
data mining (green arrow lines). A huge amount of information
must be cut and summarized to be useful. But statistics and
measures extracted from raw data may exclude interesting
patterns embedded or even be misleading. We need a mechanism
to represent the overall statistics and meanwhile make finegrained data accessible. Information visualization provides a
unique opportunity to accomplish this task. Often, potential users
of information visualization are not aware of the benefits of
visualization techniques on data mining; Or they use those
techniques only as a first phase in the data analysis process. As
shown in Figure 1 (right), we propose a more interactive mode
between data mining and information visualization. In our system,
researchers can not only visualize raw data at the beginning but
also visualize processed data and results. In this way, data mining
and visualization can bootstrap each other – the more informative
visualization based on new results will lead to the discovery of
more complicated patterns which in turn can be visualized again
to lead to more findings.
In this paper, we will first briefly review related work. After
that, we will introduce the multimedia dataset we used in this
study. Next, we will present our visualization tool while focusing
on several novel analytical functions we designed and
implemented to visualize multimedia multi-stream data. We will
explain how those visualization techniques allow users to actively
explore the data, highlight certain properties and patterns in multistream data, and facilitate further data mining. We will also
describe both the interface between visualization and data mining
and the interface between raw multimedia data and derived data.

156

2

RELATED WORK

There are several visualization approaches for multivariate data
over time in the literature (see an overview in [3]).
TimeSeracher[4] is a time series exploratory and visualization tool
that allows users to query time series by use of TimeBoxes, which
are rectangular query regions drawn directly on a two-dimensional
display of temporal data. ThemeRiver[5] is used to visualize
thematic changes in large document collections. VizTree[6] is
designed to visually mine and monitor massive time series data. It
uses symbols to represent time series data first, and then codes
those symbols in a modified suffix tree in which the frequency
and other properties of patterns are mapped onto colors and other
visual properties. Spiral [7] is mainly used to compare and
analyze periodic structures in time series data, where the time axis
is represented by a spiral, and data values are characterized by
attributes such as color and line thickness. Van Wijk et al[8]
designed a cluster and calendar-based approach for the
visualization of calendar-based data. Those methods deal with
linear time or highly periodic time, they aren’t designed to handle
event-based data which is typical in multimedia applications. And
generally, those methods focus on visualization, navigation, or
query only. Our approach provides an interactive tool to integrate
visualization with data mining.
The present paper is also related to data mining. Various
algorithms have been proposed to discover sequential patterns[1,
9, 10]. Those algorithms can only extract temporal patterns that
frequently occur in the data. Depending on research topics,
researchers may also be interested in searching for unexpected
patterns. Most algorithms cannot easily accomplish this task.
3

MULTIMEDIA DATASET

The example dataset used to illustrate our work was collected
from a laboratory environment wherein a pair of participants
interacted with and talked to each other. The raw data were
collected from three sensing systems:
• Video: there were three video streams recorded
simultaneously with the frequency of 10 frames per second,
and the resolution of each frame is 320x240.
• Audio: The speech of the participants was recorded at a
frequency of 44.1kHz.
• Motion tracking: there were two sensors, one on each
participant’s head. Each sensor provided 6 dimensional
(x,y,z, head, pitch, and roll) data points at a frequency of
120Hz.
The whole dataset was collected from five pairs of participants
with a 10- minute interaction for each pair. In total, the dataset
consists of about 90,000 image frames, 864,000 position data
points, and 50 minutes of speech.
4

VISUALIZATION OF MULTIMEDIA DATA

4.1
An Overview
As shown Figure 2, there are two major display components in the
application: a multimedia playback window and a visualization
window. The multimedia playback window is a digital media
player that allows users to access video and audio data and play
them back in various ways. The visualization window is the main
tool that allows users to visually explore the derived data streams
and discover new patterns and findings. More importantly, when
users visually explore the dataset, these two display windows are
coordinated to allow users to switch between synchronized raw
data and derived data, which we will discuss more later. We will
first introduce the analytical functions in our visualization system.

Figure 2. There are two major display components in the application: a multimedia playback window and a visualization window. The
multimedia playback window is a digital media player that allows users to access video and audio data and play them back in various
ways. The visualization window is the main tool that allows users to visually explore the derived data streams and discover new
patterns and findings.

The main window in our visualization tool is designed based on
TimeSearcher[4]. There are three display areas. After users load a
multimedia data set, variables in the data set are displayed in a
window in the upper right corner of the application. Each variable
is labeled by its name. Users can select which ones they will load
into individual display panels. These individual display panels and
an overview display panel occupy the central area of the display
window. The overview display panel at the bottom of the
application is the place that users can select any of the loaded
variables as a reference to present global trends in the data. Within
the overview display, users can drag and resize a “zoom box” to
define the area of interest in the time axis. This zoom box allows
users to control the level of detail in the main display area wherein
users can select and examine multiple variables simultaneously by
zooming in the areas of interest defined by the zoom box in the
overview panel and comparing multiple data streams side by side.
We have developed various functions to visualize derived data
streams individually or together to highlight different aspects of
multimedia multivariable data
4.2
Data Representation and Visualization
From a multimedia data processing perspective, we propose that
these temporal data can be categorized into two kinds: (1)
continuous variables: related to time points (a series of single
measurement at particular moments in time) and (2) event

variables: related to time intervals (e.g. the onset and offset of an
event). For example, the location of an object in a video is a
continuous temporal variable that may vary over time. The time
intervals when a participant is speaking can be captured as an
event variable. In the following sections, we will first present how
our visualization tool deals with continuous data and event data,
and then we will introduce how we visualize these two kinds
together and how users can perform event-based visual
exploration.
4.2.1
Continuous Time Series Data
After loading the dataset, a list of continuous variables is
displayed next to individual display panels, from which users can
select one or multiple variables to display. Our visualization tool
supports three ways to visually explore continuous time series
data: (1) as individual data streams, (2) as a set of multiple data
streams, and (3) as an arithmetic combination of multiple data
streams. We will present each mode one by one.
Using curves to visualize individual data streams
The purpose is to allow users to explore individual data streams
and examine both the overall statistics of a data stream and the
statistics within a local window. As shown Figure 3, users can
examine multiple streams at the same time, one for each display
panel. Meanwhile, users can move the zoom box in the overview
panel to zoom in and take a closer look within a certain duration

157

Figure 3. Using curves to visualize individual continuous data streams with local and global histograms. We can easily notice that the local
histogram and the global histogram are similar for the first variable, while they are different for the second variable.

Figure 4. Using gray-level to examine a set of continuous variables. First, we can see that variable 1 and variable 2 are correlated while
variable 3 and variable 4 are not. Second, the red box highlights a moment that all the variables are changing indicating a potentially
interesting pattern in the data streams.

in time. A novel feature we added here is histogram display.
There are two histogram plots -- one corresponding the overall
histogram of the time series and the other corresponding to the
local histogram of the current window. The local histogram is
updated as users move the zoom box while the global histogram is
constant. Compared with summary statistics and metrics (means
and variances, etc.) extracted from the data, a visual plot of
histogram reveals more fine-grained features such as whether
distributions are uniform, normal, skewed, bimodal, or distorted
by outliers, and as well as the range of the time series and the
proportion of each bin. By doing so, our visualization tool
transparently allows users to examine the overall distribution of
the data and discover potential interesting features which can be
then quantified and confirmed by calculating those features in
data analysis. Moreover, by putting two histograms side by side,
users can easily compare these two and detect whether the local
statistics are the same with the global statistics from various
perspectives. The top plot in Figure X shows an example that
these two are different while the bottom one shows that they are
quite similar. In this way, users can easily identify and extract
those local durations that can be then used to interpret the
underlying implications of those data patterns. Also, the timequery box designed by [4] can be added here as an advanced
feature to explore individual time series.
Using gray-level representation to visualize a set of multiple
data streams
The main purpose here is to visually display and explore two
kinds of information: (1) the possible correlation between multiple
data streams and (2) interesting joint patterns across multiple data
streams. First, users are allowed to select multiple variables and
display them as parallel gray-level data streams to explore the

158

potential synchrony and correlation between multiple variables.
For example, by viewing two time series together, users can easily
detect whether two streams are correlated or not. As shown in
Figure 4, human observers can immediately detect that the top
two variables are closely correlated. Thus, even though the two
streams are not perfectly aligned, our visual observation can
tolerate and compensate for a certain degree of time shifting
between two temporal streams. Moreover, even though the
absolute values in the two streams are not perfectly matched, our
visual system is still sensitive to the overall similarity between the
two. Meanwhile, users can easily notice that the bottom two
variables are not correlated indicated by asynchronized changes
between two streams. The advantage here compared with data
mining algorithms is that users can dynamically adjust their
judgment of the similarity (time shifting or value differences)
based on their visual observation. Users can make and test
hypotheses in seconds, with no need to take the time to encode a
data mining algorithm as an external tool. Moreover, our visual
judgment is more flexible than parameterized data analysis
algorithms. Users can easily extend this pairwise comparison to
more general cases by selecting more than two temporal variables
and examining the possible temporal correlations across all of
them. To make this visualization more flexible, our visualization
tool also allows users to select how to convert data values into
gray levels, which can be either based on an individual data
stream itself or normalized across all data streams displayed
together.
Second, by simultaneously displaying multiple temporal
streams, users can also spot interesting patterns between those
data streams. Those interesting patterns usually cannot be easily
calculated using data mining algorithms because there may be

Figure 5. Using area graphs to visualize both an arithmetic combination of multiple data streams and the proportion of each component.

only a few instances of each pattern that are embedded in the sea
of irrelevant data. Therefore, the algorithms are less likely to find
interesting patterns because they do not occur often enough. Thus,
without any insights what to look for, researchers cannot take
advantage of the power of data mining techniques which are most
often purely based on statistics and therefore can only either find
pre-defined patterns or frequent patterns. Nonetheless, those
patterns may be particularly interesting for scientific purposes
which may lead to new knowledge discovery. Here lies in the
advantage of our visualization. With data visualization, users can
first visually spot those patterns (see an example in Figure 4
highlighted by a red box) and then use data mining techniques to
quantify their observation and obtain more rational and objective
results.
Using area graphs to visualize an arithmetic combination of
multiple data streams.
Our visualization tool also allows users to examine the joint
effects of continuous temporal variables by using area graphs.
More specifically, users can select multiple continuous variables
from the continuous variable list and decide the “sign” of each
variable. We use area graphs to present those variables. A “+”
sign (addition) will put a data stream above the time axis and a “-“
sign (subtraction) will indicate that the variable should be put
below the time axis. In this way, users can combine multiple
temporal variables together (by addition and subtraction) in
various ways and then visually explore the combined distribution.

Figure 5 shows two examples in which users can explore not only
the overall distribution of the combined variables, but also the
proportion made up by each component (an individual variable,
etc.) moment by moment.
4.2.2
Event Data
Events are presented as bars of color, with their size on screen
corresponding to their duration. To select event variables for
display, they are shown in a list next to the continuous variable
list. Event data can be displayed alone or with continuous data. In
both cases, each event is presented by a unique color. In this way,
users can see not only an event itself, but also the conjunction of
events because the overlapping of multiple colors will generate a
new color. For example, if two events A and B are labelled as
“red” and “green”, then users can see four color categories: red-“A^¬B”, green – “¬A^B”, yellow -- “A^B” and white –
“¬A^¬B”. In a more general case with more events, our colorbased event visualization scheme is still able to represent all
possible logic conjunctions of those events.
Now that users can visually explore several sequential patterns
from a single event: (1) the frequency of the event; (2) its
duration; and (3) its periodicity. Moreover, by displaying multiple
event variables, our visualization tool allows users to explore
sequential statistics across events, such as joint probability or
transition probability. Joint probabilities are visually represented

Figure 6. Our visualization of multiple event variables allows users to see not only individual events but also joint events.

159

by the overlapping (new color) of multiple events – how
frequently the new combined event (A^B) occurs. There are two
kinds of transition probabilities P(A|B) and P(A^B|B):
P(A|B): users can visually examine whether and if so how
frequently event A occurs after event B (red and green bars are
paired while red ones are always followed by green ones).
P(A^B|B): users can explore whether and if so how frequently the
joint event A and B always occurs after event B.
Moreover, high-order transitional probabilities, such as P(A^
B|C^D), can also be visually detected and examined. Although
one can argue that those probabilities or frequencies can be
calculated easily in data analysis, the practical problem in data
exploration and knowledge discovery is that given multiple
variables and many possible combinations of them with various
logic operations (and, or, not) and in different orders, this
combinatorial problem can be formidable. Now researchers can
use our visualization tool to significantly reduce their search space
by quickly going over the whole stream while rejecting
uninteresting and unreliable patterns, and concentrating on
interesting ones.
The above visualization is implemented by assigning different
colors to different event variables that users select to display. To
handle potential more complex patterns involving more variables
and logic operations that may be hard for users to visually
examine just based on color coding, we also allow users to define
a new event variable by combining existing events with three
universal logic operators (AND, OR, NOT). As shown in Figure
7, users can create a new event and assign a meaningful variable
name for the new event. After that, the new event variable will be
automatically added in the event list to allow users to select and
visualize this new variable.

Figure 7. A new event variable can be defined based on a logic
combination of existing events.

4.2.3

Concurrent visualization of continuous and event
variables
The visualization functions described so far concentrate on

visualizing either event variables or continuous variables. Here we
present an approach to visually exploring the combination of these
two. We are interested in exploring the potential complex patterns
hidden in continuous variables conditioned on event variables –
what trends and patterns exist in the continuous variables when
certain events happen. Our approach is to use colors to visualize
various events while using gray levels to visualize continuous
values, and overlap these two. As shown in Figure 8, users can
select multiple continuous variables displayed in parallel as before
to visually spot potential patterns across those data streams.
Meanwhile, users can also select multiple events (with different
colors) overlapped on the top of gray-level continuous variables to
visually examine the underlying patterns of continuous variables
at those moments when a certain event happens. We allow users
to select one or multiple events and also assign a transparency
value for each event to highlight certain events over others. The
other purpose of re-assigning transparency values is to allow users
to trade-off between the visibility of events and the visibility of
the underlying continuous data. Since the overall visualization
effects are based on the combination of continuous and event
variables, both of which change over time, we cannot use predefined transparency values that work perfectly across the whole
data streams with different variables. Instead, users can
dynamically adjust transparency values to find the best
visualization effect in the current local window to visually
examine both events themselves and as well as the underlying
continuous values.
4.3
Event-based Interactive Visual Exploration
We observe that many multimedia data are essentially eventdriven. Researchers can quantify their observations in terms of
individual events, such as the event of a person entering a room,
the event of a certain object appearing in a certain location, or the
event of two people shaking hands. Therefore, we provide
advanced functions to allow researchers to examine individual
events thoroughly. As shown in Figure 9, after users select both
an event and one or multiple continuous variables, all the
instances in this event are listed. Now users can explore those
moments one at a time and the corresponding continuous values
are displayed and updated as well. In this way, users can examine
in a fine-grained way the patterns of the underlying continuous
variables within a certain event. While doing that, users also are
allowed to change the time axis to zoom in or out to examine what
happen before and after each instance of the selected event while
the display panel is centered on the current instance. By visually
exploring the data instance by instance, users can directly
compare those moments to detect the similarities between these.

Figure 8. Users can select multiple continuous variables and multiple event variables. The display panel will highlight those continuous
values at the moments when the selected events happen.

160

same display and regroup them as needed, a display technique
called “small multiples” which works well for users [11]. This
complete picture of all the instances allows users to examine both
similarities within each group and dissimilarities across groups,
and by doing so facilitate users to improve the overall grouping
and thus more accurately discover various patterns from the
underlying data. When users finalize their grouping, they can save
the results of this visual analysis which can be directly used as a
guide for further data analysis.
5

VISUALIZATION AND DATA PROCESSING

In addition to various analytical functions provided in our
visualization tool to facilitate users to effectively examine the data
visually, we also provide flexible interfaces between visualization
and data mining that allows researchers to smoothly switch
between these two. This section introduces two interfaces: (1)
between raw data and derived data, and (2) between visualization
and data analysis.
Figure 9. Users can visually explore individual instances of the
same event one by one.

In this way, this event-based visual exploration allows users to
gain insights about complex patterns between continuous and
event variables which cannot be easily achieved by standard
statistical data mining techniques. This is because data analysis
algorithms may overlook interesting patterns in the data when
they extract statistical patterns from the data. At the meanwhile,
without a better understanding the data itself, researchers cannot
simply keep track of all the details over time when a certain event
happens. Visual exploration allows researchers to directly obtain
the insights on complex patterns.
Our visualization tool also allows researchers to organize the
data so that they can examine and comprehend the data better.
Users can visually examine each instance of an event, and
categorize the instances into groups. Then, the instances can be
viewed side-by-side in their groups. As shown in Figure 10 (right)
where each column shows the instances within the same group.
Users can visually analyze and compare all the instances on the

5.1

Synchronization of Multimedia Data and Visual
data exploration
We have so far described various ways for researchers to
visually examine and analyze continuous and event variables
derived from multimedia data. We notice that derived data are
extracted from raw multimedia data and can only include small
subsets of the information available in the raw multimedia data.
Therefore, it is important that users can refer to the raw
multimedia data while exploring derived data. Our media
playback panel allows users to play back video and audio data at
various speeds, from fast forward/backward to frame-by-frame
playback. Users can also control the onset of the playback and
stop/restart the video at any moment. On the top of these standard
video playback functions, we design and implement one critical
component to connect multimedia playback with visual data
mining. This feature is the ability to control the interval of video
that is played back using the visual data mining tools. A key
technical issue in implementing this feature is to synchronize in
time video playback with users’ ongoing visual exploration. We
notice that there are two places that users can change the current

Figure 10.
Event grouping. All the instances of the same event can be grouped based on the patterns of underlying continuous
variables. The overall grouping results can then be visualized in one single panel where each column includes the instances belonging
to the same group.

161

time in visual exploration and we have developed corresponding
mechanisms to synchronize multimedia playback with visual
exploration at those two places. First, users may drag or resize the
zoom box in the overview panel to look in detail at particular parts
of the dataset. When users do this, our playback program also
updates the play head of playback so that if users switch to the
media play panel and start to play the multimedia data, they will
see raw multimedia data starting exactly with the moment that is
being examined in the graphs. Second, when users explore the
instances of a certain event page by page, we also synchronize the
media playback with event exploration. In this way, users can
watch multiple video and audio segments one by one, each of
which corresponds to one instance of the event. The boundaries of
a multimedia segment are defined by the onset and the offset of an
event.
Access to raw multimedia data is critical in this kind of data
mining since multimedia data contains more information and is
more transparent to the human perceptual system than derived
data. By visually exploring the current derived data and
meanwhile examining the corresponding raw data, users can gain
insights about what additional variables are missing and should be
extracted from raw data. In this way, users can start with a small
set of derived data, either continuous or event variables, and
gradually augment the data exploration scale inspired by the
observations based on the current results.
5.2
Visual Exploration and Data Mining
Our visualization tool supports various procedures that allow
users to examine both raw and derived data, and gain insights and
hypotheses about interesting patterns embedded in the data. All
this is accomplished by human observer’s visual system. In order
to quantify and extend these observations, researchers need to
develop and use data mining algorithms and statistics to extract
and measure the patterns detected in visual exploration. We notice
that different researchers may have different preferences of
programming languages and may prefer to use certain software
packages. To increase the flexibility to be compatible with data
mining, our system allows users to use any programming
language to obtain new results. Thus, data researchers can
implement new data mining algorithms using their own analysis
tools (from Matlab, to R and to C/C++) as far as users write the
results into text files with pre-defined formats (one for continuous
variables and one for event variables). New results will be loaded
into our visualization program automatically since our
visualization tool monitors the status of the workspace in real
time. In this way, we propose a tight loop between visual
exploration and data mining. The insights gleaned from
visualization can be used to guide further data mining.
Meanwhile, the results from the next round of data mining can be
visualized which allows users to obtain new insights and develop
more hypotheses with the data.
6

CONCLUSION

This paper proposes a new framework of visual mining of
multimedia data. The key idea is to integrate data visualization
and data mining. Based on this idea, we have developed a
prototype system with several critical features to facilitate
knowledge discovery. First, we decompose and represent
multimedia data as a set of continuous variables and event
variables. Second, we developed various ways to visualize these
two kinds of variables separately and together. Third, we visualize
not only raw multimedia data, but also all intermediate and final
results of data mining, which allows researchers to access the
“ground truth” of an experiment along with the results. Fourth, we
provide a flexible interface between our visualization tool and
data mining tools users may use. Overall, our visualization tool

162

allows users to not only easily examine and synthesize
information into new ideas and hypotheses, but also quickly
quantify and test the insights gained from visualization. Our very
next step is to conduct a systematical evaluation of our prototype
system. We plan to use the experimental paradigm developed
by[12] to test what kinds of new findings researchers (both
experts and novices) can obtain by using this tool. By doing so,
we will have a better idea of what are advantages and limitations
of the current system and what will need to be improved in future
work.

ACKNOWLEDGEMENTS
This work was supported in part by by National Science Foundation Grant
BCS0544995 and by NIH grant R21 EY017843.

REFERENCES
[1]

[2]

E. J. Keogh and M. J. Pazzani. Relevance feedback retrieval of time
series data. In Proceedings of the 22nd Annual International ACM
SIGIR Conference on Research and Development in Information
Retrieval SIGIR ’99, pages 183–190,Berkeley CA, August 1999.
ACM.
Ben Shneiderman, Inventing discovery tools: combining information
visualization with data mining, Information Visualization, 2002,

1(1), 5-12, ACM Press.
[3]

Wolfgang Aigner, Silvia Miksch, Wolfgang Muller, Heidrun
Schumann, Christian Tominski Visualizing time-oriented data--A
systematic view. Computers & Graphics, Vol. 31, No. 3. (June
2007), pp. 401-409.
[4] Hochheiser, H., and Shneiderman, B. Interactive Exploration of
Time-Series Data. In Proceedings of the 4th International Conference
on Discovery Science. Washington D.C., 2001, Nov 25-28. 441-446.
[5] Susan Harve, Elizabeth Hetzler, Paul Whitney, and Lucy Nowell.
ThemeRiver: Visualizing Thematic Changes in Large Document
Collections. IEEE Transactions on Visualization and Computer
Graphics. 2002, Vol.8, No.1, 9-20.
[6] Lin, J., Keogh, E., Lonardi, S., Lankford, J. P., and Nystrom, D. M.
Visually mining and monitoring massive time series. In Proceedings
of the Tenth ACM SIGKDD international Conference on Knowledge
Discovery and Data Mining. Seattle, WA, USA, 2004, August 22 25. 460-469.
[7] Weber, M., M. Alexa, and W. Muller. Visualizing Time Series on
Spirals. In Proceedings of 2001 IEEE Symposium on Information
Visualization. San Diego, CA, 2001, Oct 21-26. 7-14.
[8] Van Wijk, J.J., and E. Van Selow. Cluster and Calendar based
Visualization of Time Series Data. In Proceedings of IEEE
Symposium on Information Visualization. San Francisco, CA, 1999,
Oct 24-29. 4-9.
[9] R. Agrawal and R. Srikant. Mining sequential patterns. In P. S. Yu
and A. L. P. Chen, editors, Proceedings 11th International Conference
on Data Engineering, ICDE, pages 3- 14, Taipei Tawian, March
1995. IEEE Press.
[10] D. J. Berndt and J. Clifford. Finding patterns in time series: A
dynamic programming approach. In Advances in Knowledge
Discovery and Data Mining, pages 229–248. AAAI Press/MIT
Press, 1996.
[11] Edward R. Tufte. The visual display of Quantitative information.
Graphics Press. Cheshire, Connecticut, 1997.
[12] Purvi Saraiya, Chris North, Vy Lam, Karen Duca, "An Insight-based
Longitudinal Study of Visual Analytics", IEEE Transactions on
Visualization and Computer Graphics, 2006, 12(6): 1511-1522.

