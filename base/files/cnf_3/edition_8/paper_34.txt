An Approach to 3D Digital Design
Free Hand Form Generation
Nancy Diniz
Bartlett School of Graduate Studies, UCL,
London, UK
n.diniz@ucl.ac.uk

César Branco
PTMG, Lisbon, Portugal
cesar@ponteiromagico.pt

Abstract
This paper describes a method for direct freehand
drawing of complex tri-dimensional surfaces, by moving 2
hands in space. The system tracks the movement of 2
lights in space using 2 web cams. The light’s (LED’s) are
attached to the designer’s finger who watches the surface
being drawn on a monitor. The user can draw any surface
that can be described by the movement in space of a line
of varying length, in any direction. The shapes generated
can be imported by 3D Studio and then AutoCAD for
later precise editing. The fundamental guidelines to this
research were: (1) non intrusiveness of the input and
visualization devices, (2) wireless free hand drawing in
3D space, (3) instinctive interface and (4) exporting
capabilities to other CAD systems. In conclusion this
work argues that 3D design, based on free hand form
generation, allows for an enhancement of the traditional
creative process through spontaneous and immediate
translation of a concept into 3D digital form.

1. Introduction
Traditional (non natural and spontaneous) interfaces
force 3D modeling using 2D interfaces and hardware to
manipulate 2D representations of 3D objects. This
“blocks” the mind, forcing the user to concentrate on the
interface rather than the design. It’s quite similar as to
thinking of the pen rather than thinking on the words
when writing. An application was developed to track
lights in 3D space and draw surfaces according to those
movements.

Figure 1. Setup
The need to overcome the problems in interfacing clumsy devices and limited real world applications to be
used effectively – is the underlying ambition of this work:
to bring mix reality closer to the expectations it has raised.
Precision is not an objective, simplicity in drawing
complex 3D forms is. Precision is achieved after export to
3D drawing applications as mentioned before, because
they have all the tools to use the 3D sketch and transform
it into a finish digital design. Training of the user will
always be needed as well as some adaptation time, but the
extension of the grammar used to communicate with the
application and the devices physically connected to the
user will be reduced as much as possible.
Depending on how tuned the tracking technology is, the
shapes drawn can be more abstract, and the application’s
main use will be 3D form generation, more chaotic and
organic. The next two diagrams show the differences in a
traditional design methodology and the sequence of
phases in using a 3D digital concept methodology:
Traditional Sketching:
Paper Sketch -> 3D Physical Model -> Digitized Model > Cad Model -> Physical Prototype
3D Virtual Sketching:
3D Digital Sketch -> Cad Model -> Physical Prototype

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

The possibility to generate 3D shapes from real 3D input,
i.e. an input device moving freely in 3D space, rather than
using CAD paradigms like a 3D form being extruded,
from a profile along a path in space (as illustrated next):

Figure 3. Diagram of the form - generation
system

Figure 2. 3D shape generated from the paths of 2
lights moving freely through 3D space.
These interfaces, based on simple, inexpensive, non
intrusive devices, such as web cameras and small lights,
should enable a non skilled user to intuitively start
designing with no or minimum CAD skills.

2. Two Hands - Two Light Tracking
2.1. Hardware/Software Configuration
The system used 2 web cams, 2 LED’s, 1 laptop,
OpenGL Performer for 3D graphics and DirectX 9.0 to
manage the two web cams, tracking two lights on both
web cams continuously. Each light detected on the first
web cam is matched to itself on the second web cam.
The position information about the lights is written on
shared memory by the tracking device and read from
shared memory by the design module (Open GL
Performer program).
Shared memory provides a fast method for real time data
interchange between several programs.
The design module always reads the most up to date
information about the LED’s.
This way the system reads the LED’s positions through
the web cams and the Direct X program and then it sends
it to Open GL Performer in real time that renders the
generated 3D design.

3. The 3D Tracking and Input Device
An important part of the configuration is the tracking
system. There was the possibility of using highly
developed hardware or software such as the well known
Flock of Birds from Ascension or Artoolkit from HIT
LAB, University of Washington. This paper suggests
something lighter: no wires, no vest, no boxes connected
to the computer, no head mounted display and minimum
calibration.
Artoolkit is a marker based system that relies on computer
vision techniques and on head mounted display attached
to the user. A marker can be attached to the user hand to
track movement and other marks placed in the
environment as place holders for objects and shapes. The
further the markers are from the user the bignger they
have to be. Flock of Birds is a system that tracks small
sensors attached to the end of a wire connected to
hardware built to track the magnetic sensors. The more
metallic objects there are in the surrounding environment
the bigger the error in the sensor tracking. Both systems
rely on expensive devices connecting the user to some
hardware that feeds the design applications with 3D data,
either a web cam on the user’s head or the Flock of Birds
sensors in her hands. This means dragging one or more
cords around in the environment connected to expensive
hardware.
The objective is to try something that would be
completely free to move in, inexpensive to make and easy
to replicate.
The purpose of the tracking system is to follow 2 LED
lights in space, feeding the design module 3D information
about the path each light follows (2 lights to draw
surfaces, 1 light to draw a line).

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Figure 5. Movement in 3D space as a surface
generator
Figure 4. Web cam layout to extract the LED's 3D
coordinates
One web cam provides only 2D information, x and y.
The system needs “depth” information, z, so another
camera is installed. To save the program some
calculations and the user some tedious calibration, the
cameras are placed orthogonal to each other (see Figure
6). The two cameras are connected to the computer and
the images analyzed by Direct X 9 image libraries. The
tracking program finds the 2 brightest spots on each
camera, applying a smoothing algorithm to detect sharp
changes in light position. Every frame the 3D position of
each LED is written to the shared memory reserved for
communication with the design program. Together with
the coordinates the intensity of the LED’s on the two
cameras is also sent, permitting Open GL Performer to
execute further testing and to smooth the 3D movement.

4. Surface Rendering Application
The surface rendering application reads the LED’s
positions from the tracker (through shared memory).
These positions are them united in triangles forming a
triangle strip. The shape is generated as the result of an
imaginary line uniting the two lights as they move
through space.

Three modules were implemented to test the movement
through space and the possibilities of the system: first
lines where drawn, then surfaces and last lines and
surfaces together.

Figure 6. Triangle creation sequence as LED
positions are united in every frame
This method allows for a varied range of surface types to
be rendered because of the varying distance between the
two lights. Their relative position can be constantly
changing generating ribbons, bows, eight shaped surfaces
or just simple strips with different widths along its length.

5. WRL and 3D Studio Export Module
In order to make the shapes available, an export
function was implemented. The choice of format
was .WRL files (VRML) because it can be read by 3D
Studio and from there saved as CAD *.DXF or *.DWG
files. Also because the *.WRL format is well known and
easily opened in a computer with a web browser. This
way anybody can experiment their own shapes without
installing complicated, “computer hungry” software. This

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

module works transparently to the user, as she/he uses the
application the shape is periodically being exported: every
300 frames and every time the drawing is stopped because
one or both lights are not visible or bright enough. The
next three pictures show the same shape in a VRML
browser, 3D Studio and Auto CAD.

6.1. Results

6. Testing
The program was tested during its development, until
the late stages by a test user for permanent feedback. He
is a web developer with experience in software programs
such as Macromedia Flash and 3D Studio. As this user
became increasingly trained using the software a test
round with users unfamiliar with the system was needed
for a non-biased feedback.
The aim was to determine the first reaction to a
system completely out of the traditional user input
paradigms. Essentially a qualitative study, as some other
primitives, inspection capabilities and undo/redo
functions have yet to be built. To determine future
directions after the completion of this dissertation there is
the need to now the reaction to a two hand input, a free
hand moving interface.
The first testing phase was conducted with several
test subjects. The testing of the sketch/modeling making
program was conducted by the developer of the software.
A brief explanation was given about the system
configuration, interface paradigm and objectives. The
three modules were also explained: lines, surfaces and
both primitives together. The test users filled a survey
after they tested the program, where they gave their
opinions about the system: strengths and weaknesses. The
limitations of the set-up were also explained: the tracker
and lighting conditions problem and the narrow field of
view problem.
After the first testing, there was the need to make some
improvements:
- Increase the field of view of the web cams.
- Use a wider Screen.
-Slow down the speed of the program.
A video camera with a wide field was used to capture de
x, and y coordinates. This doubled the space for the x and
y; additionally a projector and a screen were used to make
the result more visible. The speed of the program was
slowed so that users could have more time to think during
sketching.

Figure 7. Simple surfaces.

Figure 8. Tests conducted before and after
slowing the speed of the program and widening
the field of view of the cameras.

7. Conclusions
This project has developed one prototype for non
intrusive, inexpensive, free hand based 3D sketching
system to be used in the earliest phases of the design
process. The approach this paper suggests is based on the
independent free movement of both hands in space,
providing architects and other designers involved in
object conception, with a highly flexible 3D shape
generation instrument that takes advantages of mixed
reality concepts. That is to say: using real world
paradigms with virtual objects.
The software was conceived (and tested along its
development with that aim) to assist or enhance the first
2D drawings steps in the design process by using both
hands to draw organic, non parametric, surfaces. This
method produces rough 3D sketches that can be refined
latter using any 3D modeling software package (as it was
shown in 3D Studio and CAD examples).

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

7.1 Non-Intrusive, Spontaneous 3D Digital Design
The testing phase and all the research made for the
development of this system leads to the conclusion that a
non-intrusive and insightful 3D digital design system is
possible. All the problems encountered (and some solved)
were technical, not fundamental to the configuration.

7.2. Simple, Low-Cost Interfaces Based on Non
Intrusive Devices
The hardware used is not expensive and the hand
held input device is not cumbersome. The test users
immediately grasped the concept and liked the freedom
the un-connected LED light sticks allowed.
The (expensive) video camera used in the last tested
configuration can be substituted by low-cost cameras with
wide lens (common camera phones already have them).

7.3. Real World Applications: Concept Design
The export module demonstrates the applicability of
such systems as a plug in for 3D design systems such as
3D Studio or Auto CAD. This will permit faster
experimenting for designers and architects, without
physical models and digitizing.

would be helpful but not determinant. These are not real
constraints, but more a matter of time and financial
resources.
Three dimensional, direct, digital design systems are
possible and will be a common technology available to
concept design. The barrier between 2D paper
representations of 3D concepts is bound to fall and it will
be possible to translate a concept directly from mind to a
geometric entity stored in computer memory. This digital
design is ready to be edited, modified into something
powered be the endless possibilities of a computer. It will
be a digital model that has had one less stage of
translation where possibly some information would be
lost.
In conclusion this work argues that 3D design, based
on free hand form generation, allows for an enhancement
of the traditional creative process through spontaneous
and immediate translation of a concept into 3D digital
shape.

8. References
Schieck, AF Gen: 2001, Interactive Form Creation, Thesis MSc
in Virtual Environments, UCL, London.
Jenkins, DL and Martin, RR: 1993, The importance of free-hand
rsketching in conceptual design: Automatic sketch input, In:
ASME Design Automation Conference in Albuquerque.

7.4. Shape Generation
The system generates organic, complex, fractal like
shapes from the free, creative hand of the digital artist,
seeking new worlds inside the computer.
This kind of sketch system can also be seen as a creative
tool, a conceptual tool in computer design and
architecture. The arbitrariness derived from the non
precise movements of the hand is also a feature of the
resulting 3D design, thus giving it a natural (in the sense
of nature generated) quality. The 3D sketch program
gives the ability to be new in every design.
The fundamental difference from other design generating
programs is that no explicit mathematic knowledge is
required by the designer. No parameters need to be set.
The objective is to achieve new form through hand
movement. Not by a generative function that is left to
work on it’s own after the parameters are set. The main
obstacle between a working, marketable, 3D digital
design system and the current prototype is technology.
There’s a real need to have better video cameras (wider
field of view) and more accurate tracking systems before
extensive use. Advanced displays and brighter LED’s

Pugh, D: 1992, Designing solid objects using interactive sketch
interpretation, Computer Graphics Symposium on Interactive
3D Graphics), 25(2):117-126.
Dias, JMS et al: 2002, Tangible Interaction for Conceptual
Architectural Design,“ART02”, First IEEE International
Augmented Reality Toolkit Workshop”, ISMAR 2002, IGD,
Darmstad,Germany.
Forsberg, AS, LaViola Jr, JJ, Markosian, L. and Zeleznik, RC:
1997, Seamless Interaction in Virtual Reality, Computer
Graphics & Applications, IEEE, Vol. 17, No. 6, pp. 6 – 9.
Gross, MD and Do, E Y-L: 2000, Drawing on the Back of an
Envelope: a framework for interacting with application
programs by freehand drawing, Computers & Graphics, Vol. 24,
No. 6, pp. 835 – 849, Elsevier.
Lipson, H and Shpitalni, M: 1997, Conceptual design and
analysis by sketching, In AIDAM-97.
Hwang, T and Ullman, D: 1990, The design capture system:
Capturing back-of-the envelope sketches, Journal for
Engineering Design 1, 4.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Hwang, T and Ullman, D: 1994 Recognizing features from
freehand Sketches, Computers in Engineering- 1994 Vol. 1,
ASME.

Zeleznik, RC, Herndon, KP and Hughes, JF: 1996, Sketch: An
Interface for Sketching 3D Scenes, SIGGRAPH '96 Conference
Proceedings, ACM, Vol. 30, No. 4, pp. 163 – 170.

Jordão, JA and Glinert, EP: 2000, Calligraphic Interfaces:
towards a new generation of interactive systems, Jorge J A,
Glinert E P (guest editors), Computers & Graphics, Vol. 24, No.
6, pp. 817.
Kato, O, Iwase, H, Yoshida, M and Tanahshi, J: 1982,
Interactive Hand-Drawn Diagram Input System, Proc. IEEE
Conference on Pattern Recognition and Image Processing (PRIP
82), Las Vegas, Nevada, pp. 544-549.
Igarashi, T, Matsuoka, S and Tanaka, H: 1999, Teddy: A
sketching interface for 3D freeform design, SIGGRAPH 99
Conference Proceedings, pages 409–416.
Igarashi, T, Matsuoka, S and Tanaka, H: 1999, Teddy: “A
sketching interface for 3D freeform design, In Proceedings of
SIGGRAPH 99, pp. 409– 416. 1, 2, 5, 9.
Jordão, L, Perrone, M, Costeira, J and Santos-Victor, J: 1999,
Active Face and Feature Tracking, VisLab-TR 08/99,
International Conference on Image Analysis and Processing,
Venice, Italy.
Nielsen, M, Störring, M, Moeslund, TB and Granum, E: 2003, A
Procedure For Developing Intuitive And Ergonomic Gesture
Interfaces For Man-Machine Interaction, Aalborg University,
Laboratory of Computer Vision and Media Technology,
Denmark.
Pratini, E: 2001, The 3D Sketchmaker Project, University of
Brasília, Brazil.
Karpenko, O, Hughes, JF and Raskar, R: 2002, Free-form
sketching with variational implicit surfaces, Eurographics,
Saarbrucken, Germany.
Schkolne, S: 1999, Surface Drawing: The Perceptual
Construction of Aesthetic Form, M.S. thesis, Computer Science,
Caltech, USA.
Schkolne, S, Pruett, M and Schröder, P: 2002, Drawing with the
Hand in Free Space - Creating Organic 3D Shapes with Gesture
in a Semi-Immersive Environment, Computer Science
Department, Caltech.
Turner, A, Chapman, D and Penn, A: 2000, Sketching space,
Computers & Graphics, Vol. 24, No. 6, pp. 869 – 879, Elsevier.
Sutherland van E: 1963, Sketchpad: A man-machine graphical
communication system, In AFIPS Spring Joint Computer
Conference, pages 329--346, 1963.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

