Fourth Order PDE Blends
Lihua You Jian J Zhang
National Centre for Computer Animation
Bournemouth University
United Kingdom
{lyou|jzhang@bournemouth.ac.uk}
Abstract
It has been reported a fourth order partial
differential equation is effective in solving surface
blending problems. In this paper, we present a new
approximate solution to the fourth order partial
differential equation and apply it to a number of surface
blending tasks. The approximate solution consists of two
parts: a blended part of boundary functions is used to
accurately satisfy the original boundary conditions that
define the blending surfaces; and a bivariate polynomial
with zeroed boundary conditions, which is used to
minimize the error of the fourth order partial differential
equation. Using the developed method, a number of
examples are investigated to demonstrate the
applications of the proposed method in surface blending.
Keywords---surface blending, fourth order partial
differential equation, modified bivariate polynomial
solution

1. Introduction
Blending between primary surfaces is an important
topic in geometric design of surfaces. According to
different representations of blending surfaces, blends can
be divided into implicit, explicit and parametric ones.
Among them, implicit and parametric blending surfaces
are most popular.
The potential method is a main method to blend
implicit primary surfaces. It is based on finding a conic,
which is tangent to two straight lines at the given points
on a plane defined by both straight lines [1, 2]. This
technique was applied to surface blending by Middledich
and Sears [3]. Hoffmann and Hopcroft named this
approach the potential method [4, 5] which is able to
blend two or three surfaces. They also developed a
projective potential method [6]. Later, the potential
method was extended by Kosters [7] and Ohkura and
Kakazu [8]. In the work of Kosters, the method of
blending an arbitrary number of surfaces to form a
convex corner was shown, blending surfaces were

constructed for all cases where three surfaces meet
transversely, and a quite general method for
automatically constructing quadratic blending for a large
class of corners was presented. In the work of Ohkura
and Kakazu, more general formulation for convex and
nonconvex combinations was developed for the blending
of three surfaces by the potential method. The projective
potential method was extended for a convex combination
of three surfaces with the help of the two-map
explanation of the potential method.
The rolling-ball method is also a main method to
blend implicit surfaces. Early in 1984, Rossignac and
Requicha proposed such a method [9]. Recently, LukÃ¡cs
investigated the differential geometry of the G 1 variable
radius rolling ball method in implicit mathematical
equations [10]. KÃ³s et al. discussed methods to recover
constant radius rolling ball blends in reverse engineering
[11].
In addition, Rockwood presented the displacement
method for implicit blending surfaces [12]. Warren gave
a new definition of geometric continuity for implicitly
defined surfaces and derived general methods for
blending several surfaces simultaneously [13].
For parametric surface blending, the rolling ball
method was most popular. It can be classified into
constant-radius and variable-radius blends. Employing
the constant-radius rolling-ball method, Choi and Ju
investigated how to construct edge and corner blend
surfaces among rectangular parametric surface patches
[14]. Harada et al. introduced a method which uses the
rolling ball technique to generate geometrical and
topological information for blending two surfaces in Breps-based solid modeling systems. This method can also
be used to generate variable-radius blending surfaces
[15]. Using differential geometry, Sanglikar et al.
proposed a mathematical model of rolling ball blend with
which closed form analytical solutions can be obtained
for most of the surfaces which are common in solid
modelers [16]. Developed from the rolling ball principle,
Ying et al. studied the generation of blending surfaces
for solid modelling in which edge blending surfaces are
represented by bicubic Bezier patches, and corner
blending surfaces are represented by Gregory patches

Proceedings of the Eighth International Conference on Information Visualisation (IVâ€™04)
1093-9547/04 $ 20.00 IEEE

[17]. Based on an algorithm calculating the intersection
of two offset surfaces using only the first-order
derivatives of the progenitors, Barnhill et al. presented a
method for blending two parametric surfaces [18].
Farouki and Sverrisson proposed a numerical method for
a prescribed-precision approximation of constant-radius
blends between intersecting parametric surfaces by G 1
sequences of rational tensor-product patches. The
resulting discrete point/tangent data are then used to
formulate the constant-radius blend as a piecewiserational surface with (approximately) circular
isoparametric loci [19].
Blending using a variable-radius rolling ball was
also studied by some researchers. Since the generation of
variable-radius blending surfaces is difficult with
existing geometric modelers, Harada et al. proposed a
new method to generate variable-radius blends by
adopting sliding-circle blending where a variable-radius
blend can be generated if the radius of the circle changes
smoothly and the shape of the variable-radius blend is
represented by Gregory patches [20]. Chuang et al.
employed the derived spine curve and linkage curves to
compute a parametric form of the variable-radius
spherical and circular blends [21] and gave several
geometric constraints to specify the variable radius [22].
Chuang and Lien also proposed two formulations to
blend parametric surfaces [23]. Hartmann introduced a
numerical blending method for surfaces which produces
pencils of parametrically defined blending surfaces with
G n continuous contact to the base surfaces along curves
determined by a rolling ball of constant or variable radius
[24].
Compared to the above blending methods, the
blending based on the solution to a partial differential
equation (PDE) has some advantages including: (1). It
can easily achieve up to an nth order continuity, (2). The
shape of blending surfaces can be conveniently
controlled by changing a few parameters such as
boundary tangents and curvatures, and vector-valued
parameters, (3). The functions of the blending surfaces
are known which are very useful to functionality analysis
in some engineering applications.
With the PDE blending method, a blending problem
is defined by a suitably chosen partial differential
equation and corresponding boundary conditions [25]. In
order to solve the partial differential equation, some
methods have been proposed such as the finite element
method [26], finite difference method [27], collocation
method [28], Fourier series method [29] and spectral
method [30]. It has been reported that the vector-valued
parameter in the partial differential equation strongly
affects the shape of blending surfaces. Due to this reason,
Zhang and You have proposed a more general partial
differential equation [31] and discussed analytical C 2
surface blending [32]. You et al. also proposed a singlepatch surface for tool design of hot metal forming [33].
In this paper, we will use the partial differential
equation given in [31] and present a new approximate
solution for surface blending. As indicated below, exact

satisfaction of boundary conditions and error
minimization of the partial differential equation (1)
ensure the effectiveness of the proposed method in
various surface blending.

2. Fourth Order PDE and Approximate Solution
In [31], a general fourth order partial differential
equation has been proposed for free form surface
generation. Without considering the force function, this
partial differential equation can be written as
a

where

x

w 4x
wu

4

b

>c x c y c z @T

2

wu wv

2

c

w 4x

>a x a y a z @

T

are

, b

(1)

0

wv 4

y (u , v) z (u, v)@T

>x(u, v)

blending surface; a
c

w 4x

represents

>bx by bz @

T

the
, and

known as the vector-valued

parameters; and u and v are the parametric variables.
Boundary conditions should be devised to suit the
required degree of continuity. For blending surfaces with
up to the tangent continuity, the boundary conditions can
be formulated as
wx
g 2 (v )
wu
(2)
wx
u 1
x g 3 (v )
g 4 (v )
wu
where g 1 (v) and g 3 (v) are the boundary curves, and
g 2 (v) and g 4 (v) are boundary tangents at the boundary
curves between the blending surface and primary
surfaces.
The solution to PDE (1) under the boundary
conditions can be decomposed into two parts: one aims
to meet the boundary conditions exactly, and the other
minimizes the error of PDE (1).
For the first part, the vector-valued solution
function can be taken as a combination of the four
boundary functions given in Eq. (2) with the form of
x sin Suf1 (v)  u sin Suf 2 (v)  cos Suf 3 (v)
(3)
 u cos Suf 4 (v)
u

0

x

g 1 (v )

where f1 (v) , f 2 (v) , f 3 (v) and f 4 (v) are unknown
vector functions.
Substituting Eq. (3) into the boundary conditions
(2) and solving for the four unknown functions, we
obtain
1
>g1 (v)  g 2 (v)  g 3 (v)@
f1 (v)

S

f 2 (v )



1

S

>g 2 (v)  g 4 (v)@

(4)

f 3 (v ) g1 (v )
f 4 (v) >g1 (v)  g 3 (v)@
For the second part, the constructed solution must
satisfy the zeroed boundary conditions given below

Proceedings of the Eighth International Conference on Information Visualisation (IVâ€™04)
1093-9547/04 $ 20.00 IEEE

wx
0
wu
(5)
wx
u 1
0
x
wu
Bivariate polynomials have been widely employed
to represent parametric surfaces. In order to exactly
satisfy the zeroed boundary conditions (5), we modify
the bivariate polynomial and construct the following
solution function
0

u

M

sin 2 Su Â¦

x2

N

Â¦ a mn u m v n

S

M

m 0n 0

N

(8)

Â¦ Â¦ H(m, n, u,v)a mn S(u, v)

where

>

4

m n

a  8S u v cos 2Su  16m

3 m 1 n

S u

v sin 2Su  12m(m  1)S 2 u m  2 v n

cos 2Su  4m(m  1)(m  2)Su m 3 v n sin 2Su
 m(m  1)(m  2)(m  3)u m  4 v n sin 2 Su

>

2

m n2

 b 2n(n  1)S u v

(10)

Â­Âª 1
Âº
sin Su @g c4c (v)`  cÂ®Â« sin Su  (1  u ) cos Su Â»
Â¼
Â¯Â¬ S
Âª1
(1  u ) sin Sug c2ccc(v)  Â« sin Su  u
Â¬S
1
Â½
cos Su @g c3cc(c v)  u sin Sug c4ccc(v)Â¾
S
Â¿
g 1ccc(cv) 

1

S

and
d 2 g i (v )

g cic (v)

dv 2
4

d g i (v )

(11)
dv 4
(i 1,2,3,4)
Since our constructed solution is not an accurate
one, it is impossible to satisfy Eq. (8) exactly. The
method given in [34] can be used to solve equation (8).
Here we adopt the following strategy. If m and n take
values from 0 to M and 0 to N, respectively, the total
unknown constants a mn will be (M+1)(N+1). Therefore,
we can uniformly distribute the same number of points
within
the
resolution
region,
i.e.,
(u k , v k )
g cicc(cv)

(k 1,2,3, ( M  1)( N  1)) . Then substituting the
coordinate values of the parametric variables u and v at
these points into Eq. (8), we achieve the following
( M  1)( N  1) linear algebra equations
M

N

Â¦ Â¦ H(m, n, u k , v k )a mn S(u k , v k )

m 0n 0

H (m, n, u, v)

>4 cos Su  S (1  u ) sin Su @g 2 (v)
 S >3 sin Su  Su cos Su @g 3 (v)  S 2 >4 cos Su
 Su sin Su @g 4 (v)`  b^S >sin Su S (1  u )
cos Su @g 1cc (v)  >2 cos Su  S (1  u ) sin Su @g c2c (v)
 S >sin Su Su cos Su @g c3c (v)  > 2 cos Su  Su
3

(6)

Substituting the fourth order partial derivatives of
x with respect to parametric variables u and v into
PDE (1), and using the operation w k 0 ( w u, v )
when k  0 , the following equation is reached.

2

g 1 (v )  S

m 0n 0

where a mn is an unknown vector-valued constant, and
M and N stand for the term numbers of the modified
bivariate polynomial.
Eq. (6) guarantees the satisfaction of the zeroed
boundary conditions (5), which can be easily verified by
substituting it into (5). The unknown vector-valued
constant a mn will be used to minimize the error of PDE
(1).
The total approximate solution of PDE (1) subject
to boundary conditions (2) is the sum of the above two
solutions, i. e.,
1
Âº
Âª1
x Â« sin Su  (1  u ) cos Su Â» g 1 (v)  (1  u )
S
Â¬S
Â¼
1
Â§
Â·
sin Sug 2 (v )  Â¨ sin Su  u cos Su Â¸g 3 (v)
(7)
Â©S
Â¹
M N
1
 u sin Sug 4 (v)  sin 2 Su Â¦ Â¦ a mn u m v n

^

a S 3 > 3 sin Su  S (1  u ) cos Su @

S(u , v)

x

@

cos 2Su  2mn(n  1)

(9)

(12)
m 0n 0
(k 1,2,3, (m  1)( N  1))
Solving Eq. (12), all the unknown constants are
determined. Then, the approximate solution (7) can be
used to create blending surfaces. In the following, we
will present a number of examples to demonstrate
applications of the proposed method in surface blending.

Su m 1 v n  2 sin 2Su  mn(m  1)(n  1)u m  2

3. Application examples

v n  2 sin 2 Su  cn(n  1)(n  2)(n  3)u m v n  4

The first example is to generate a blending surface
between a circular cylinder and an elliptic hyperboloid of
two sheets. The implicit equations of a circular cylinder
and an elliptic hyperboloid of two sheets are
x2  y2  R2 0
(13)

@

2

sin Su

and
x2
a2

Proceedings of the Eighth International Conference on Information Visualisation (IVâ€™04)
1093-9547/04 $ 20.00 IEEE



y2
b2



( z  h2 ) 2
h32

1 0

(14)

The above two implicit surfaces can be
transformed into parametric representations from which
the boundary conditions for this blending task can be
obtained below
u

0

x

R cos v

y

R sin v

z

h0

wx
wu
wy
wu
wz
wu

0
0
 h1c

(15)

u 1

wx
a c cosh 1 cos v
wu
wy
y b sinh 1 sin v
b c cosh 1 sin v
wu
wz
z  h3 cosh1
 h3c sinh 1
wu
Using the method proposed in this paper and taking
the geometry parameters in Eq. (15) to be: R 0.9 ,
a a c 0.6 , b b c 0.4 , h0 0.2 , h1c 0.1 ,
h3 h3c 0.5 , all the vector-valued parameters to be 1,
the generated blending surface is given in Fig. 1.
x

a sinh 1 cos v

wx
a c sinh 1.2
wu
wy
b c cosh 1.2
y b sinh 1.2
wu
wz
z h0 v
0
wu
(18)
wx 0.8
0.32
u 1
x
wu
p
p
wy
1
y 0.8
wu
wz
0
z h1 v
wu
Setting the geometric parameters in Eq. (18) to be:
a a c 0.5 , b b c 0.3 , h0 h1 2 and p 1.5 , the
vector-valued parameters a and c to 1, and b to 4, and
using the above method, we generated the blending
surface as illustrated in Fig. 2.
u

0

Fig. 2.

x

a cosh 1.2

Blending between a hyperbolic cylinder and a
parabolic cylinder

The third example is to consider the blending
between an irregular conical surface and an elliptic
cylinder. The parametric equations of the conical surface
are given by

Fig. 1. Blending between a circular cylinder and an
elliptic hyperboloid of two sheets
The second example is to blend a hyperbolic
cylinder to a parabolic cylinder. The implicit equations
of a hyperbolic cylinder and a parabolic cylinder are
x2
a2



y2
b2

1 0

(16)

x
0

(17)

Converting the above primary surfaces into
parametric representations and specifying the trimlines
on both primary surfaces, the boundary conditions for
this blending problem can be written as

Ru cos v

y

Ruv sin v

z

h0 u

(19)

The axes of the frustum of the conical surface and
the elliptic cylinder are not parallel. They intersect at an
angle D . The parametric equations of the elliptic
cylinder are written as

and
y 2  2 px

x

x0  a cos D cos v  h1u sin D

y

b sin v

z

z 0  a sin D cos v  h1u cos D

(20)

The boundary conditions of the blending problem
can be formulized as follows

Proceedings of the Eighth International Conference on Information Visualisation (IVâ€™04)
1093-9547/04 $ 20.00 IEEE

u

0

u 1

wx
R c cos v
wu
wy
y Ru 0 v sin v
R cv sin v
wu
wz
z h0 u 0
h0c
wu
x x 0  a cos Ä® cos v  h1u 01 sin Ä®
x

y
z

Ru 0 cos v

wx
h1c sin D
wu
wy
0
b sin v
wu
z 0  a sin D cos v  h1u 01 cos D
wz
wu

R

Taking the
 R c 1.2 , h0

(21)

Fig. 4.

h1c cos D

geometric parameters
 h0c 2 , u 0 0.3 , x 0

to be:
u 01 1 ,

a 0.8 , b 0.6 , D 40 o , h1 1.5 , h1c 2 , and
z 0 1.9 , and setting the vector-valued parameters a
and c to 1, and b to 3, the blending surface created is
shown in Figs 3a and 3b. Both images are from the same
blending surface, viewed from different angles.

a
b
Blending between two trimlines of an elliptic
cylinder itself

Setting all the vector-valued parameters to 1, and
taking the geometric parameters in Eq. (19) to be:
a 0.8 , b 0.6 , h1 0 , h2 2 , a c a cc 1.6 ,
b c b cc 1.2 , and h1c h2c 6 , the generated blending
surface is depicted in Fig. 4 where a) is the elliptic
cylinder before the blending and b) is the blended shape.
Next, we investigate the blending between an
irregular cylinder and a plane at a specified ellipse. The
parametric representations for the cylinder are
x (a 0  a1v  a 2 v 2 ) cos v

(23)

y b0 v sin v
h0  >h1  h2 (2S  v)v@u

z

and the plane can be regarded as the set of the points
generated with the following mathematical equations
x au cos v
y bu sin v
z 0

a
b
Fig. 3. Blending between the frustum of an irregular
conical surface and an elliptic cylinder
The blending between an object itself is also an
interesting issue. Here, we discuss the blending between
the two trimlines on an elliptic cylinder. The boundary
conditions for this blending are
u

0

u 1

x

a cos v

y

b sin v

z

h1

x

a cos v

y
z

b sin v
h2

wx
wu
wy
wu
wz
wu
wx
wu
wy
wu
wz
wu

Taking the trimline at the cylinder to be at u

u0

and that at the plane to be at u u 01 , the boundary
conditions for this blending problem are
u

0

a c cos v

x

(a0  a1v  a2v 2 ) cos v

y

b0v sin v

z

h0  >h1  h2 (2S  v)v @u0
wz
wu

b c sin v
u

1

x

au01 cos v

y

bu01 sin v

z

0

h1c

(22)
a cc cos v
b cc sin v
h2c

(24)

bx

Proceedings of the Eighth International Conference on Information Visualisation (IVâ€™04)
1093-9547/04 $ 20.00 IEEE

wx
0
wu
wy
0
wu
h1c  h2c (2S  v)v
wx
wu
wy
wu
wz
wu

(25)

ac cos v
bc sin v
0

All the vector-valued parameters are set to 1 except
b y b z 10 . The geometric parameters in (25) are

taken to be: a 0

h0

h1

2

b 1 , a1

S

, a2



1

S

2

x au sin v  b sin(11v)
y au cos v  b cos(11v)
z h1

,

b0 0.3 , h2 0.1 , h1c 0.3 , h2c 0.03 , a 2 ,
a c 1.4 and b c 0.7 . The trimlines are taken to be at
u 0 0.5 and u 01 1.3 . With the above proposed
method, the obtained blending surface was shown in
Figs. 5a and 5b. From Fig. 5a, it can be seen that the
blending surface gradually translates from that with a
crease to a smooth one. However, the continuity between
the primary surfaces and the blending surface is well
maintained as indicated in Fig. 5b.

Taking u 0.2 in Eq. (26) and u 1 in Eq. (27),
we obtain the trimlines respectively on the surface and
the plane. The boundary conditions for this blending can
be written as
u

0

u 1

a

(27)

x 0.1 sinh(0.2v  0.1)  0.016 sin v
wx
0.4 sin v
wu
y 0.2 cosh(0.4v)  0.016 cos v
wy
0.4 cos v
wu
wz
(28)
z 0.5  e 0.2
e 0.2
wu
wx
1.5 sin v
x 1.5 sin v  0.1 sin(6v)
wu
wy
1.5 cos v
y 1.5 cos v  0.1 cos(6v)
wu
wz
0
z 0.6
wu

Setting the vector-valued parameters a and c to 1,
and b to 4, the created blending surface is given in Fig.
6.

b
Fig. 5. Blending between an irregular cylinder and a
plane at a specified ellipse
The final example is to study the blending between
a non-closed primary surface and a plane with a
prescribed pedal-like curve. The non-closed primary
surface is created with the following complicated
parametric
equations
consisting
of
power,
trigonometrical, exponential and hyperbolic functions of
parametric variables u and v
3

x

0.1 sinh(0.1v  0.2)  (1  u ) sin v

y

0.2 cosh(0.3v)  (1  u 3 ) cos v

z

h0  e

u

and the prescribed curve is generated with

(26)

Fig. 6. Blending between a non-closed surface and a
plane with pedal-like profile
Conclusions

In this paper, a general fourth order partial
differential equation together with suitably defined
boundary conditions has been used for surface blending.
In order to solve the partial differential equation, a
blending surface function has been constructed from the
boundary conditions and a bivariate polynomial.
Since the constructed blending surface function
exactly satisfies the boundary conditions of blending
problems and the error of the partial differential equation

Proceedings of the Eighth International Conference on Information Visualisation (IVâ€™04)
1093-9547/04 $ 20.00 IEEE

is minimized, the proposed method is very effective in
creating various blending surfaces. Some numerical
examples have been given to illustrate how to use our
method to solve various surface blending problems.
References
[1]
[2]
[3]
[4]
[5]
[6]

[7]
[8]
[9]

R.A. Liming. Mathematics for computer graphics. Aero
Publishers, USA, 1979.
I.D. Faux and M.J. Pratt. Computational geometry for
design and manufacture. Ellis Horwood, UK, 1979.
A.E. Middledich and K.H. Sears. Blend surfaces for set
theoretic volume modelling systems. Computer
Graphics, 1985, 19(3):161-170.
C. Hoffmann and J. Hopcroft. Automatic surface
generation in computer aided design. The Visual
Computer, 1985, 1:92-100.
C. Hoffmann and J. Hopcroft. Quadric blending surfaces.
Computer Aided Design, 1986, 18(6): 301-306.
C. Hoffmann and J. Hopcroft. The potential method for
blending surfaces and corners. in Farin, G. E. (Ed.)
Geometric Modeling: Algorithms and New Trends
SIAM, USA, 1987, pp. 347-365.
M. Kosters. Quadratic blending surfaces for complex
corners. The Visual Computer, 1989, 5:134-146.
K. Ohkura, and Y. Kakazu. Generalization of the
potential method for blending three surfaces. Computer
Aided Design, 1992, 24(11):599-609.
J.R. Rossignac and A.A.G. Requicha. Constant-radius
blending in solid modeling. Computers in Mechanical
Engineering, 1984, pp. 65-73.
1

[10] G. LukÃ¡cs. Differential geometry of G variable radius
rolling ball blend surfaces. Computer Aided Geometric
Design, 1998, 15:585-613.
[11] G. KÃ³s, R.R. Martin and T. VÃ¡rady. Methods to recover
constant radius rolling ball blends in reverse engineering.
Computer Aided Geometric Design, 2000, 17:127-160.
[12] A.P. Rockwood. The displacement method for implicit
blending surfaces in solid models. ACM Transactions on
Graphics, 1989, 8(4):279-297.
[13] J. Warren. Blending algebraic surfaces. ACM
Transactions on Graphics, 1989, 8(4): 263-278.
[14] B.K. Choi, and S.Y. Ju. Constant-radius blending in
surface modeling. Computer Aided Design, 1989, 21(4):
213-220.
[15] T. Harada, H. Toriya and H. Chiyokura. An enhanced
rounding operation between curved surfaces in solid
modeling. Proceedings of CG International '90.
Computer Graphics Around the World, Singapore, 25-29
June 1990, pp. 563-588.
[16] M.A. Sanglikar, P. Koparkar and V.N. Joshi. Modelling
rolling ball blends for computer aided geometric design.
Computer Aided Geometric Design, 1990, 7:399-414.
[17] D.-N. Ying, E.-J. Wang and K. Xue. Blending in solid
modelling. Proceedings of First International Conference
on Computational Graphics and Visualization
Techniques, Sesimbra, Portugal, 16-20 Sept. 1991, Vol.
2, pp. 239-247.
[18] R.E. Barnhill, G.E. Farin and Q. Chen. Constant-radius
blending of parametric surfaces. Computing Supple.
1993, 8:1-20.
[19] R.A.M.T. Farouki and R. Sverrisson. Approximation of
rolling-ball blends for free-form parametric surfaces.
Computer Aided Design, 1996, 28(11):871-878.

[20] T. Harada, K. Konno and H. Chiyokura. Variable-radius
blending by using Gregory patches in geometric
modelling. Proceedings of the European Computer
Graphics Conference and Exhibition, Vienna, Austria, 26 Sept. 1991 , pp. 507-518.
[21] J.-H. Chuang, C.-H. Lin and W.-C. Hwang. Variableradius blending of parametric surfaces. The Visual
Computer, 1995, 11:513-525.
[22] J.-H. Chuang and W.-C. Hwang. Variable-radius
blending by constrained spine generation. The Visual
Computer, 1997, 13:316-329.
[23] J.-H. Chuang and P.-L. Lien. One and two-parameter
blending for parametric surfaces, Journal of Information
Science and Engineering, 1998, 14:461-477.
n

[24] E. Hartmann. G blending with rolling ball contact
curves. Proceedings of Geometric Modeling and
Processing 2000. Theory and Applications, Hong Kong,
China, 10-12 April 2000, pp. 385-389.
[25] M.I.G. Bloor and M.J. Wilson. Generation blend surfaces
using partial differential equations. Computer Aided
Design, 1989, 21(3):165-171.
[26] Z.C. Li and C.S. Chang. Boundary penalty finite element
methods for blending surfaces, III, Superconvergence
and stability and examples. Journal of Computational and
Applied Mathematics 1999, 110:241-270.
[27] S.Y. Cheng, M.I.G. Bloor, A. Saia and M.J. Wilson.
Blending between quadric surfaces using partial
differential equations. in Ravani, B. (Ed.), Advances in
Design Automation, Vol. 1, Computer Aided and
Computational Design, ASME, 1990, pp. 257-263.
[28] M.I.G. Bloor and M.J. Wilson. Representing PDE
surfaces in terms of B-splines. Computer Aided Design,
1990, 22(6):324-331.
[29] M.I.G. Bloor and M.J. Wilson. Method for efficient
shape parametrization of fluid membrances and vesicles.
Physical Review E, 2000, 61(4):4218-4229.
[30] M.I.G. Bloor and M.J. Wilson. Spectral approximations
to PDE surfaces. Computer-Aided Design, 1996,
28(2):145-152.
[31] J.J. Zhang and L.H. You. PDE based surface
representation---Vase design. Computers & Graphics
2002, 26:89-98.
2

[32] J.J. Zhang and L.H. You. Analytical C smooth
blending surfaces. Further Generation Computer
Systems, accepted for publication, 2004.
[33] L.H. You, J.H. Hu, Y.H. Shi and J.J. Zhang. Single-patch
surfaces for tool shape design and finite element analysis
of hot metal forming. Journal of Materials Processing
Technology, accepted for publication, 2004.
[34] L.H. You, J.J. Zhang and P. Comninos. A solid
volumetric model of muscle deformation for computer
animation using the weighted residual method. Computer
Methods in Applied Mechanics and Engineering 2000,
190:853-863.

Proceedings of the Eighth International Conference on Information Visualisation (IVâ€™04)
1093-9547/04 $ 20.00 IEEE

