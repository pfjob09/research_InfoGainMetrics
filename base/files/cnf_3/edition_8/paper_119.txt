Visualization and ‘Auralization’ of Architectural Design in a Game Engine Based
Collaborative Virtual Environment
Jules Moloney and Lawrence Harvey
University of Auckland and the Spatial InformationArchitecture Laboratory, RMIT University
j.moloney@auckland.ac.nz, lawrence.harvey@sial.edu.au
Abstract
This paper describes the development of
collaborative virtual environment (CVE) software based
on a game engine to support the early stages of design in
the context of architectural education. The precedent of
narrative drawing technique in architecture is introduced.
From this we position the use of a CVE as a means to
explore design context in a manner that is not possible
when using typical architectural visualization software.
Outcomes from software trials are reported that establish
the value of working in a real time environment where
design iterations can be tested from multiple points of
view, and the important role of 3D sound to evoke
occupancy and materiality. Negative results are reported
in relation to collaborative design functionality and a
revised approach based on an integrated project database
is described.

1. Introduction:
“ Because architecture and product design is still
executed through the medium of two dimensional drawing
(or its electronic equivalent) the ‘objective’ properties of
the product or place tend to be stressed at the expense of
subjective aspects, including sensual qualities, such as
light, heat, sound, humidity and so on which cannot easily
quantified or specified” [1].
John Thackara’s reference above to drawing in his
description of the design primario theories of the late
1980’s is posited in relation to 2D visualization practices
prevalent in design studios at that time. Two dimensional
drawing practices were perceived as reductive, analytical
and incapable of communicating the subjective aspects of
design. Today the proliferation of 3D computer aided
design has transformed the means of design
representation with sophisticated visualization of form
and surface now well established within education and the
profession. However the emphasis has still being on the
visual appearance of the designed object and in this sense

continues the trajectory of the architectural illustrator –
the emphasis is on appearance usually from a particular
viewing position that shows the design to best advantage.
Thackara’s essay was titled ‘ Beyond the Object in
Design” and it is in that spirit that we have established a
research program in which one aim is to broaden the
manner in which architectural design has been historically
conceived as projective geometry that, more often than
not, has been devoid of physical or temporal context. This
broadening is based on the use of virtual environments
that allow some exploration of the subjective agenda of
design visualization: the use of real-time graphics to
explore the temporal dimensions of context; spatialized
sound to evoke qualities of space and place; the use of
multi-user networked projects to give a sense of
inhabitation and to enable collaborative design and
critique.
In order to place our research in context we first
review the legacy of narrative drawing that was prevalent
at the Architectural Association London during the 70’s
and 80’s and though this discussion we position an
approach to digital visualization that aims to evoke the
non objective aspects of architecture. We then describe
the software development of a collaborative virtual
environment (string CVE) that is based on extensions to a
commercial game engine. Outcomes from the use of this
software in the context of architectural education are
reported and as a consequence to this application testing
we describe future work on an integrated project database
that will address identified problems.

2. After projection: Narrative Drawing
Robin Evans’s seminal work “The Projective Cast’ [2]
is a history of architecture with a difference – it traces the
impact of drawing technique and makes the argument that
architecture has been constrained and in turn liberated by
developments in the ability to describe form via projective
geometry. Plan, elevation, section and perspective line
drawing have been the primary tools of visualization for
generations of architects and according to Evan’s thesis,

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

drawing technique have had a direct effect on theory and
practice. The development of perspective, the use of ruled
surface to approximate curvilinear geometry, and the
objectifying use of parallel projection to see the buildings
in its entirety are compelling examples that Evans uses to
discuss the impact of technique and its assimilation with
ways of thinking about architecture.

Bernard Tschumi's Manhattan Transcripts of the 1980s
employed a graphical notation system that mixed events,
spaces, and motion [4]. The term ‘narrative drawing’ was
coined as a term to describe this inventive research that
explored the relationship between functional programme
and building and this innovative approach continued after
Tshcumi through a former student Nigel Coates.

For modernist architects of the last century who
embraced the rallying call of a ‘machine for living’
architecture was conceived as a neutral mechanism
articulated via plan extrusions that neatly organized
structure and cladding into functional zones and
circulation systems. Of all the projections the plan was
seen as ‘the generator’ with the most ‘truthful’
visualizations being parallel projections that literally
presented buildings as dimensioned objects.

“It was said from the beginning that architecture lay
somewhere between the body and the city, that it was by
no means exclusive, but dependent on the experiences it
contained. It therefore had to consider fleeting meanings
as well as solid architectural forms, movement as well as
the volumes that contained them, the subjective as well as
the rational – in fact, be an interpenetration of structures
and life itself” [5].

By the late 1970’s and 80’s there was a re-evaluation of
the role of the drawing particularly at the Architectural
Association London where Bernard Tschumi reasserted
the importance of the functional program for architecture.
Inspired by a situationist view of the city Tschumi’s
continuing aim is to re assert the importance of
architecture as place for the unfolding of events. A key
strategy in this aim was experimentation with alternate
forms of architectural visualization and his design classes
at the architectural association were among the first to
attempt to inform architectural drawing with a sense of
occupation through time. Drawings were annotated with
evocative texts and photography was obsessively used
“as live insert, as artificial documentation, as a hint of
reality interposed in architectural drawing” [3].

Figure 1. Bernard Tschumi, Manhattan Transcripts.

The mode of design visualization for this
‘interpenetration’ was narrative drawings: lines produced
via the drawing board montaged with text, time notation,
and photographs; all artfully rendered in graphite and
charcoal. They represent a fascinating exploration of
architectural visualisation that is of interest to our
research into the potential use of virtual environments in
the context of design education. One interpretation of the
wholesale take up of digital drawing or modelling within
architecture that has occurred over the last ten years is
that there has been a regression in terms of the
interpenetration of object, place and the event (certainly
in relation to narrative drawing) and a reinforcement of
the paradigm by which architecture is conceptually and in
many cases literally developed as machine like object.
Architecture can now be modelled to the last rivet,
rendered seductively in burnished aluminium, and take
form via the machines of computer aided manufacture
(CAM). This process is compelling and we have argued
previously that this allows the re introduction of a sense
of craft that short circuits Robin Evan’s thesis via the use
of parametric digital models linked directly to CAM
machines [6].
The advantages of working at this higher level where
associative geometry and generative approaches to form
allow a high degree of refinement are clear in terms of
the creation of unique geometry. Our concern is that
concentration on the properties of the object within the
contextual vacume of this advanced software negates an
approach to architecture as place for the unfolding of
events, particularly in the context of design education.
This view does not undermine the value of these
advanced process but ideally allows their incorporation
within a virtual environment to allow a sense of
occupation and context, particularly during the important
early stages of design.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

3. String CVE software development
Architecture was seen as one of the logical
benefactors of virtual reality technologies in terms of
design visualisation but in practice the cost of software
and hardware has resulted in minimal impact. The School
of Architecture at the University of Auckland and SIAL
has been experimenting with multiplayer games software
as a feature-rich but low cost alternative to high-end
virtual reality software. While the applications themselves
are not appropriate for education usage, the underlying
engines are graphically sophisticated, offer advanced
multi-user network capability and are designed to perform
well on standard hardware and operating systems. Given
these advantages and the comparative high cost of
commercial virtual reality (VR) systems there has been
some interest in the use of game engines for a variety of
architectural applications [7]. Most of this activity has
involved using the content editing software distributed
with such games as HalfLife and Unreal Tournament. Our
early experiments with Halflife proved successful but also
revealed some limitations and by 2001 it was decided to
investigate options for developing a more educationally
orientated application. The key factors in the choice of a
development platform besides good graphic and sound
capability were support for large scale environments,
robust multi-user capability on low band width, and of
course access to engine source code to allow new
functionality to be developed. Access to source code is

usually prohibitive because of cost but in June 2001
Garage Games released the Torque game engine SDK [8]
at $US 100 per license and in late 2001 we started
development. Named ‘String CVE’ the initial focus of the
software development is on producing functionality that
allows exploration of ‘place for the unfolding of events’
as introduced above.
Deliberately positioned as an application that
compliments high end CAD software our approach is
tailored towards use in the context of architectural
education where design teaching is studio based. A
teaching studio in architectural education is a mode of
teaching by ‘the project’. The aim is to encourage
creative thinking and conceptual design skills and as a
result the outcomes are usually sketch designs that
communicate design concepts rather then projects
resolved to a high level of detail. In this context the
restrictions of game engines in terms of geometry and
level of detail are less important and similar to the
approach of narrative drawing our emphasis is on evoking
the experience of place over time. Game engines are not
capable (yet) of producing detailed geometry,
photorealistic lighting or acoustically correct sound in real
time. We accept these limitations and in turn stress the
evocation of context via image and sound, the use of real
time computation to allow a sense of immediacy when
designing, and the value of collaborative working made
possible by extending the multi user network
functionality.

Figure 2. Overview of collaboration functionality

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

3.1 Asynchronous Collaboration
Our primary development to date has been in the
extension of network capabilities to allow asynchronous
collaboration. The core torque engine allows real time
communication as usually found in multi user game
engines: any client application can operate as a server and
up to 128 users can share an environment simultaneously;
users are represented as avatars and the location and
avatar triggered events (pre recorded animations) are
continually updated on each client; while an embedded
text chat box allows remote users to share and interact in
the same environment. Our first enhancements evolved
writing a parsing program to automate the upload and
downloading of subsequent projects. Working with a
game engine involves handling multiple types of data and
the management of this proved difficult for design
orientated students. Our interface reduces the need for the
user to manage design content – once the publish project
option is chosen all the data is copied to a folder and
uploaded to the server. Other users could then see the
newly published project and in a reverse project the data
can be downloaded into the required directories and
immediately accessed. We subsequently developed an
asynchronous communication module to facilitate
internet-based design critique with users in different time
zones. This functionality has been implemented using a
mySQL database linked to a PHP chat forum to enable 3D
browsing of comments and ‘white board’ type mark ups
of the designs. Icons are placed within the 3D scene and a
mouse click will ‘teleport’ the user to the camera position
of the author and simultaneously overlay any annotation
and open up the text forum. Alternatively projects can be
browsed by locating new posts in the forum thus
teleporting the user to locations within the 3D world.

central theme of memory and its role in the collective and
individual experience of the city. The pedagogical aim is
that students understand how the built environment
resonates with the sounds of human presence, natural
events and technology. The sound samples are not
acoustically correct but are used primarily as a form of
notation – in effect a 3D ‘sound sketch’. Sound was used
to communicate intent in terms of spatial characteristics
or materiality and as importantly the pre recorded sound
conveyed a sense of occupation and functional use.
Sounds from café, street or private spaces were arranged
in conjunction with visuals to stimulate discussion over
appropriate usage and to indicate performance over a 24
hour or seasonal cycle. At the end of the studio, the
individual works resided in a series of collective spaces.
These spaces contained varied readings of Melbourne’s
CBD. Two approaches are illustrated below.

Figure 3: Student project by Laura Harper.

x

The work of Laura Harper recaptured the events
from her chosen site, which at certain times of
day becomes an urban ‘soup kitchen’. Her
environments merge parallel ‘mirrored’ spaces
which give a stimulating sense of déjà vu.

x

The work of Fooch Chi examined a graphical or
iconographical representation of the CBD. He
defined place by sound, allowing the city to be
‘reread’ literally as textual entities and sound.

3.2 Sound
The core torque engine utilises openAL to provide
2D and 3D sound. We have implemented an alternative to
this using the Aureal SDK [9] to implement multi channel
sound output to enable surround sound.

4. Software Trials
We present below some observations of the software
in use for two architectural design studios – Memory
games and Future Sounds - conducted by the authors at
UoA and SIAL. The Memory Games studio in 2002 (with
SIAL staff Mark Burry and Gregory More) was
undertaken prior to the development of the asynchronous
design functionality and was an initial test of the real time
environment to allow better understanding of spatial
sequence and the possibilities for the use of sound to
evoke materiality and context. The brief proposed a

Figure 4: Student project by Fooch Chi.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

x

In summary the memory games studio demonstrated
the following points in relation to the effectiveness of the
software to meet the research aims.
x

The use of the upload / download functionality
made it possible to effectively share projects
amongst distributed users. Students and tutors
would schedule shared sessions where design
evaluation could occur via avatar interaction and
the use of text chat.

x

Sound was a more effective way of
communicating functional use then graphics.
However the quantity and quality of the audio
files created more substantial file sizes, limiting
the distribution potentials of the CVE.

x

The ability to explore projects in real time
demonstrated the importance of context and
challenged the ‘object’ based thinking of typical
design students. The importance of spatial
sequence was emphasized.

In the second studio, The Future Sound of Cities the
asynchronous communication module was implemented.
The studio would continue the focus on sound augmented
visualization and also test the effectiveness of the
software to support collaboration between students in
Auckland, Melbourne and a tutor located in London. In
general this studio confirmed the results of the first studio
but the asynchronous communication module was not
successful due to the following factors.
x

x

Poor interface design. There was a marked
difference in use between the Auckland students
who worked together in a university studio with
constant access to equipment and technical help.
These students managed to work together in
small groups on the same project and regularly
upload work for critique. In contrast the
Melbourne students who had limited resources
and worked primarily from home did not
collaborate successfully with each other or
upload projects regularly. This highlighed the
difficulty of creating game engine compatable
graphics and sound and that the working
environment and asynchronous communication
interface were not sufficiently intuitive, but also
underlined the importance of the social aspects
of studio culture in facilitating group dynamics
and the sharing of technical skill.

Media focus. Perhaps due to the success of the
first studio there was too much emphasis on
sound with a corresponding lack of graphical
sophistication.
Some
students
became
disillusioned with the technical skill required to
produce sophisticated sound environments.

Figure 5 : Current Asynchronous communication functionality.

5. Subsequent Software development.
There are factors beyond the scope of the software
development that affected the success and failures of the
above design studios. The dynamics of different groups of
students and the role of design studio culture – students
and tutors conversing face to face – are important factors.
There are however two clear outcomes: the value of using
a virtual environment to allow an understanding of design
context and in particular the important potential of sound
to augment visualisation; and the need to rethink
functionality to support collaborative design and critique.
Consequently we are examining options for better
sound functionality and have developed an approach to
collaboration that uses an integrated project database to
allow projects to be dynamically edited and viewed by
multiple users. In anticipation of adapting more advanced
games engines the database is been designed to allow data
to be exported and imported from standard CAD
software. (The importance of data transfer has been
discussed in a recent paper in which we position the use
of a CVE in relation to CAD [10].) Implementation of the
integrated project database is underway and we hope to
present an alpha version at the conference which will
have the following features.

Lack of immediacy. There would usually be a 1
to 2 day time difference between projects being
uploaded and the review of the project. Often by
the time dialogue had been established the
students had made design changes that could not
immediately be shared.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

x

Allow multiple users to access a database server
and add or modify design components. On client
login new design components and design edits
are detected and the client updated.

x

Allow any client to manipulate the design
(environment and components) and propagate

these updates to multiple clients in real time.
x

Provide managed control of the data set: levels
of access are to be assigned to each user and
design; implementation of ‘save edit’ and
‘design history’ functions are planned with each
edit able to be undone (i.e. users can step
through design versions).

References
[1]

J. Thackara. Design After Modernism. London,
Thames and Hudson. 1988. p. 26

[2]

R. Evans. The Projective Cast: Architecture and
its Three Geometries. Cambridge, Mass. MIT
Press.1995.

[3]

B. Tschumi. Spaces and Events. In Exhibition
Catalogue The Discourse of Events. London.
Architectural Association. 1983. p.8

6. Conclusion and further work

[4]

B. Tschumi. The Manhattan
London.Academy Editions. 1994.

The use of a game engine based collaborative virtual
environment has enabled the development of software to
support architectural design education. The focus of this
paper has been on establishing the role of a CVE to allow
an exploration of design context in a manner that is not
possible when using typical architectural visualization
software. The advantages of working in a real time
environment where early design iterations can be tested
from multiple points of view, and the value of using
sound to evoke occupancy and materiality, allow students
to understand architecture as place for the framing of
events over time. In the context of design education where
there are declining resources to support traditional studio
teaching there is a need for software that allows distance
collaboration. The focus of our next design studio will
build on our previous outcomes and test the integrated
project database functionality to support design
collaboration between remote users and tutors.

[5]

N. Coates. Narrative Breakup. In Exhibition
Catalogue The Discourse of Events. London.
Architectural Association. 1983. p.12.

[6]

J. Moloney. Digital Craft. Proceedings of the 32nd
Annual Conference of the Australia and New
Zealand Architectural Science Association”,
Wellington. 1998. pp 289 – 29

[7]

M.F. Shiratuddin & W. Thabet. Virtual Office
Walkthrough using a 3D Game Engine.
International Journal of Design Computing Vol.
4.url:
http://www.arch.usyd.edu.au/kcdc/journal/vol4/

[8]

GarageGames url:http://www.garagegames.com

[9]

Aureal
url:http://members.optushome.com.au/kirben/3ds
oftware.html

x

Extend existing asynchronous design critique
functionality to allow comments to be recorded
with each design iteration.

We are also interested in the capacity for a CVE to
augment the visual and the aural with information that
gives the designer real time feedback on design attributes
such as floor area and environmental performance. This
embedded information need not be highly accurate for the
early stages of design but provide approximate values on
building performance to enable the designer to monitor
the implications of different basic approaches. A
precedent for this development is the Pangea software
developed by researchers at the Bartlett School of
Architecture that linked computer models to a range of
techniques (Neural Nets, Genetic Algorithms, Fuzzy
Logic) that communicate design performance to the
designer [11]. We plan to develop similar performance
based modules in future work and to this end we are
currently evaluating an alternate engine that uses LISP as
a scripting language.

Transcripts.

[10] J. Moloney & R, Amor. String CVE: Advances In
a Game Engine Based Collaborative Virtual
Environment For Architectural Design.
Proceedings of the International Conference on
Construction Applications of Virtual Reality,
Blacksburg Virginia U.S.A., 2003, pp.156-168.
[11] Pangea
url:http://www.cebe.cf.ac.uk/learning/habitat/HA
BITAT2/pangea.html

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

