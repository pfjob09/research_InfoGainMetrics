Using Information Visualization for Accessing Learning Object Repositories
Joris Klerkx, Erik Duval and Michael Meire
Computer Science Department, K.U.Leuven
Celestijnenlaan 200 A, B-3001 Leuven, Belgium
{Joris.Klerkx, Erik.Duval, Michael.Meire}@cs.kuleuven.ac.be
Abstract
Learning objects are entities that may be used for
learning, education or training. Nowadays they are
often stored in Learning Object Repositories (LORs),
such as the Ariadne Knowledge Pool System (KPS)
[23], Merlot and EdNa. Typically users can search for
learning objects in those LORs by filling out an
electronic form that enables them to compose Boolean
combinations of search criteria. More research is
needed on novel access paradigms to enable more
effective and flexible access to these repositories. In this
paper, we investigate how we can use information
visualization techniques for this purpose. We discuss the
use of three existing information visualization
techniques that we applied to the ARIADNE Knowledge
Pool System (KPS).
Keywords--- learning objects, learning object
repositories, information visualization.

1. Introduction
According to the Learning Object Metadata (LOM)
standard, a learning object is ’any entity, digital or nondigital, that may be used for learning, education or
training’ [1]. This definition allows for an extremely
wide variety of granularities. This means that a learning
object could be a picture of the Mona Lisa, a document
on the Mona Lisa (that includes the picture), a course
module on da Vinci, a complete course on art history, or
even a 4 year master curriculum on western culture [2].
Learning objects are stored in Learning Object
Repositories (LORs) together with extensive metadata
(e.g. LOM) that describes them. A few examples of
such LORs are the Ariadne Knowledge Pool System
(KPS) [19] [23], Merlot [20], EdNA [21],
Universal/educaNext [22], etc. Students and teachers are
able to search for learning objects in those LORs, based
on the metadata-elements that describe the learning
objects.

In most of those systems, there are two ways for
users to search. The first one is to formulate a simple or
an advanced query by filling out an electronic form that
enables end users to compose boolean combinations of
search criteria. The second one is to perform a kind of
directory or category search by browsing the learning
objects by subject. The resulting set of learning objects
are always presented in a traditional results list.
It is clear that there is a need for more research on
novel access paradigms that enable an end user to zoom
in on relevant learning objects without requiring him or
her to go through a lengthy process to formulate
complex search criteria, to evaluate some of the results,
refine the search criteria, etc. Information Visualization
can improve this kind of access to LORs by enabling
end users to manipulate controls over the metadata,
zoom in on potentially more relevant learning objects
and continuously keep an overview of how additional
search criteria restrict the remaining number of learning
objects [2].
We will start this paper in section 2 with a discussion
of the strategies users can follow to access LORs. In
section 3, we will compare three information
visualization techniques that we have applied to the
Ariadne KPS [19] [23]. In section 4 we will discuss a
few techniques for manipulating controls over the
metadata.

2. Access strategies
There are a number of ways of accessing a LOR.
Imagine an end user, like a teacher, who wants to reuse
a learning object in his own course. The first and
traditional way is to start from an empty set of results
and formulate a simple or an advanced query to get a
number of results. The teacher can then evaluate some
of the results and reformulate the query to filter out
some results or include some others. This process of
formulating queries and evaluating the results could be a
lengthy process and is therefore rather time-consuming
and user-unfriendly [2].

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

The second way is to start from a visualization of the
complete LOR and filter out learning objects that are
uninteresting by manipulating the metadata. This
process should be highly interactive to be effective.
A combination of both these approaches is also
possible. The user could start his search by entering a
simple search criterion to make a first selection or
filtering of the learning objects. The results of this
simple search could be used as a good starting point for
the visualization.
In the next section we will refer to these strategies
when we compare a few information visualization
techniques for visualizing learning object repositories.

3. Space Usage
It is important to investigate how we can use the
available space to present the learning objects. We have
to decide which elements of the available metadata are
interesting to use in our visualization. Learning Object
Metadata (LOM) [1] can contain a semantic
classification of the subject of the learning object. For
example the classification of the subject of a learning
object about the Fibonacci-numbers could be:
• Exact, Natural and Engineering sciences
o Informatics/Information Processing
General/Sundry.
This classification seems interesting to use as a
starting point in visualizations of LORs because
students and teachers typically search for learning
objects of a particular topic. Besides that, they create a
lot of useful subsets in the complete LOR, which are
interesting to visualize. This classification could be used
in combination with the second access strategy we
mentioned in the previous section.
We will compare three visualization techniques that
we have applied to the Ariadne KPS. These three
techniques are squarified cushion tree-maps, hyperbolic
trees and Venn-diagrams (Grokker). The reasons for
choosing these rather straightforward visualization
techniques are based on their characteristics [3] [14]
[18]. We will use the techniques to visualize the
semantic classification of the subject of the learning
objects.

3.1. Squarified Cushion Tree-map
A tree-map is a visualization of hierarchical structure
that makes 100% use of the available display space. It
maps the complete hierarchy onto a rectangular region
in a space-filling manner [3]. Cushion tree-maps inherit
the elegance of standard tree-maps: compact, spacefilling displays of hierarchical information, based on
recursive subdivision of a rectangular image space.

Intuitive shading is used to provide insight in the
hierarchical structure [4].
We used the semantic classification we described
above to cluster the learning objects in a tree-map. To
be able to evaluate the use of a squarified cushion treemap to visualize the Ariadne KPS, we implemented a
coupling between a tree-map-library [5] and the KPSClient of the Ariadne system [6] [7]. The result is shown
in the figure 1.
In the visualization we use two colors, red and green,
to visualize the usage rights of the learning object. The
meaning of the red color is that the learning objects are
restricted and therefore cannot be used by every user.
The green color means that every user can use the
learning object freely. The choice of this metadata-field
is illustrative.
The users are able to zoom in on elements of their
interest. Tooltips, a standard way to visualize extra
information, are provided with basic information about
the learning objects: title, author, and identifier. By
clicking on the learning object, the user can view the
complete metadata in his web-browser.

Figure 1: Squarified Cushion Tree-map of the
Ariadne KPS
The access strategy that was adopted in this example
is the second one we described above: the user starts
with a visualization of the complete LOR. At that point,
he should be able to filter out learning objects that are
not of interest by manipulating the metadata. However
this necessary functionality is not yet available in the
prototype.
3.1.1. The advantages of a tree-map for accessing
and visualizing a LOR are the following:
•

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

It provides an overall view of the entire LOR. So it
allows users to move rapidly to any location in the
LOR without getting lost.

•

•

•
•

It is easy to add extra levels to the hierarchy, based
on the query or the metadata-manipulation that the
users perform. It would for example be easy to add
a level that represents the granularity of the
learning objects. The granularity of a learning
object could be one of the following: raw media
element, course, lesson, … .
An extra level of information about the learning
objects could be provided by using colors. We
could use almost every metadata-field for this
purpose. Most interesting would for instance be to
use colors to represent the language or the usage
right of the learning object. Imagine e.g. a teacher
who searches a learning object to use in his
economy class. Typically such a user does not want
to lose much time by searching for such a learning
object. In figure 1 the learning objects on the
economy-topic are represented in the right
rectangle. The teacher can immediately see that
many of the learning objects are represented in a
red color and therefore cannot be used freely.
It’s easy to control. The user can easily navigate in
the learning object space by zooming in or out
interesting areas.
No space is lost in this kind of visualization. It
makes use of every available pixel.

3.1.2. Disadvantages of using a squarified cushion
tree-map to visualize a LOR are the following:
•

•

When just using the semantic classification of the
subjects to cluster the learning objects, there are too
many learning objects in one level. This is useful if
the user wants answers to general questions about
the contents of a complete LOR like:
o How many learning objects does it contain
on biology or chemistry?
o Can I use most of the learning objects in
this domain or are they restricted?
o Are most of the learning objects complete
courses or are they just short lessons.
These answers give general information about the
complete set of learning objects of the repository.
However if the user searches for individual learning
objects on a specific subject, the use of this
classification for visualizing the LOR does not
cluster the learning objects well enough. The user
will have to evaluate too many learning objects at
the deepest level of the tree-map.
The prototype lacks the necessary controls to be
able to filter out uninteresting learning objects by
manipulating the metadata of the learning objects.
Therefore the tree-map visualization should be
combined with other methods. Data sliders [8] or

•

•

magical lenses [9] for example could be used for
this purpose.
We mentioned that we used the second accessmethod in the prototype. The prototype is coupled
on a LOR with about 4500 learning objects.
However much research is done on the
interoperability of LORs [10] [11]. So, in the future
we will easily have tens of thousands learning
objects. The visualization should still be highly
interactive so that the user can filter out
uninteresting learning objects efficiently. This
performance-issue could become a real challenge.
Because of the number of learning objects that have
to be presented, it is difficult to use other visual
cues than colors. Extra visual cues could be
pictograms that can be used to e.g. show the mimetype of the learning objects. This can be solved in
two ways. First of all we could combine the
visualization technique with extra controls to
manipulate the metadata as described above. With
these controls the user should be able to filter out
many learning objects. In this way the screen areas
available to represent the different learning objects
will increase and there will be extra place to add
visual cues. Alternatively, we could use distortion
techniques [12] like fisheye-views [13] to give
extra space to the learning objects.

3.2. Hyperbolic tree
A hyperbolic tree is a focus+context technique based
on hyperbolic geometry for visualizing and
manipulating large hierarchies [14]. Users can navigate
through the hyperbolic tree by clicking on the nodes of
interest. By doing so, the user brings those nodes into
focus at the center.
To cluster the learning objects in a hyperbolic tree,
we used the same semantic classification of the subjects
of the learning objects as described before. The access
strategy that was adopted was again the second one. To
be able to evaluate the usage of hyperbolic trees for
visualizing the contents of LORs, we made a coupling
between a hypertree-library [15] and the KPS-Client of
the Ariadne system [6] [7]. The result is shown in the
figure 2. By clicking on a node that represents a
learning object, the user can view its complete metadata
in his web browser.
It was immediately clear that using the semantic
classification was not useful when searching for specific
individual learning objects because the number of
internal nodes was too small and as a result there were
too many leaf-nodes with the same parent-node. This is
shown in figure 3.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Another possibility is to give the users the
opportunity to choose themselves. They should be able
to select these metadata elements efficiently at the
moment of the query or in some kind of customizable
user-profile so that they will not have to select it every
time they access the LOR. A user could e.g. choose the
metadata-fields granularity, document language and
author, to cluster the learning objects.
3.2.1. The advantages of using a hyperbolic tree
with the strategy described above are the following:
•

Figure 2: Hyperbolic tree of the complete
Ariadne KPS
Therefore we could use the third access strategy that
we discussed before: The user first enters a simple
search criterion and the results of that simple query are
used as a start for the visualization. However it is still
possible to have too few internal nodes in this case. The
user could for example use a name of an author as the
first simple query. It is likely that an author indexes
most of his learning objects with the same semantic
classification. Most of the leaf-nodes in this case would
then belong to the same parent-node. This example
shows that using the third strategy is not always a
solution for this problem.

•
•
•

3.2.2. Disadvantages of using hyperbolic trees are
the following:
•

•

•
•

Figure 3: Too few internal nodes
Other or extra metadata elements than the semantic
classification are therefore needed to further cluster the
learning objects. We could use almost any metadata
element as internal node of the hyperbolic tree. These
metadata-fields could be chosen, based on the empirical
analysis of the actual use of metadata in the Ariadne
KPS [16]. We could for instance choose the fields that
are used most in queries in the current system.

The user can choose the metadata elements that
should be used to cluster the learning objects in the
hyperbolic tree.
Colors can be used as visual cues to show extra
information.
It is easy to navigate through the tree. Users can
browse through the tree and select the learning
objects of their interest.
Tooltips can be used to show extra information.

When the user makes a bad choice of which
metadata elements to use in the hyperbolic tree, the
results will not be clustered in a nice way and
again, there will be too few internal nodes. The user
will then lose time.
More space gets wasted than the tree-map
visualization, but not in a problematic way because
the user can easily browse to the space and the
space will be dynamically reallocated.
The visual space for each node is too small to add
textual information like document titles, authors,
publication dates, etc.
When too many metadata elements are added to the
hyperbolic tree, the user’s overview could degrade.
When there are 5 or 6 levels and the user already
browsed to the fifth level, he has to remember the
top-levels of the hyperbolic tree to be able to make
a good choice of the learning objects.

3.3. Venn diagrams
We could also visualize the learning objects of a
repository with Venn diagrams. A Venn diagram is an
illustration of the relationships between and among sets
or groups of objects that share some or all
characteristics.
Grokker [18] is a program that contains an interface
that makes use of non-intersecting Venn-diagrams.
Navigating through the diagrams is possible by clicking
on the set of the user’s interest. Grokker will then zoom

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

in on that particular set. We used Grokker to evaluate
this kind of visualization for the access to LORs. We
did not couple the KPS-Client of the Ariadne system [6]
[7] with Grokker yet because, at this moment, the
Grokker-toolkit to write plugins for Grokker was not
available. Therefore we manually made a diagram of the
complete semantic classification of the subjects of the
learning objects to be able to evaluate the visualization.
The access strategy was again the second one.
Because we did not couple the KPS-Client with
Grokker, we did not add all the learning objects in this
visualization of the LOR. The result is shown in figure
4. Obviously, in the future, we should evaluate a
complete visualization of the LOR with all learning
objects included. However, we can already see some
trends in this version.

•

This is shown in figure 5 where the user has to
remember the complete classification of the subject
of the learning object by remembering how he
navigated to this point in the visualization.
Using the semantic classification to visualize the
learning objects in a Venn diagram is not the most
useful classification to visualize or structure the
learning objects. There are too few inner nodes or
in this case top-level sets. This can be seen in figure
5. In this figure you can see again that a lot of space
is wasted in the middle. So the semantic
classification is not enough to structure the learning
objects.

4. Manipulating metadata
In the previous section we compared a few
information visualization techniques for presenting the
learning objects in a LOR. These techniques look
promising to enable a more flexible access to LORs.
However, these visualizations are not enough. They
should be combined with methods to manipulate
controls over the metadata elements that are used to
cluster the learning objects. With these methods, the
users should be able to adapt the kind of clustering that
is used in the visualization as we described in the
section about hyperbolic trees. They should also enable
users to filter out learning objects that are not of their
interest. However these methods were not taken into
account in the prototypes.

Figure 4: Using Grokker to visualize the
LOR.
3.3.1. The advantages of using Venn diagrams to
visualize the LOR are the following:
•
•
•

Easy to filter out uninteresting learning objects by
using colors.
Colors can be used as visual cues to show extra
information.
Tooltips can be used to add extra information.

3.3.2. Disadvantages of
(Grokker) are these:
•

•

using

Venn

diagrams

When using the semantic classification of the
subject as a basis to cluster the results, a lot of
space is wasted. You can clearly see this in figure 4
where almost 50% of the screen is not used to
represent information.
When completely zoomed in on a diagram, it is
difficult to keep an overview of the complete LOR.

Figure 5: 60 Learning objects with semantic
classification: “Exact, natural and Engineering
Sciences, Informatics/Information Processing,
General/Sundry.”
We already mentioned some existing methods such
as the use of data sliders [8] and magical lenses [9]. We
could e.g. use a data slider to manipulate the metadatafield ‘document language’. The user could then easily
filter out all languages but English. A magical lens

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

could also be used for this metadata-field. When
applying this method to the tree-map visualization, the
lens could be moved over the learning objects in the
map. The learning objects under the lens would then get
the color that represents the appropriate ‘document
language’.

[4]

[5]
[6]

Conclusions
In this paper, we investigated how we could use
information visualization techniques to improve the
access to learning object repositories. We used the
semantic classifications of the subjects of the learning
objects to cluster them together. Using this
classification only seems interesting when the users are
looking for general information about the complete
LOR. When they are searching for specific individual
learning objects, using this classification to cluster them
does not suffice.
Therefore we plan to further
investigate how we can use the metadata to create
interesting subsets of learning objects.
We compared three information visualization
techniques for visualizing a LOR: tree-maps, hyperbolic
trees and Venn-diagrams. Venn-diagrams are the least
interesting because users can lose the overview of the
LOR and on top of that, a lot of space is not used for
representing information. Tree-maps and hyperbolic
trees on the other hand, are more interesting but only
when they are used in combination with methods to
manipulate controls over the metadata elements that are
used to cluster the learning objects.
The use of these visualization techniques will be
empirically evaluated with extensive user studies. We
will also complete the prototypes and extend them with
the mentioned metadata manipulation techniques.
This research will hopefully result in more effective
and flexible access to learning object repositories.

[7]

[8]
[9]

[10]

[11]
[12]

[13]

[14]

[15]

Acknowledgement
[16]

We gratefully acknowledge the financial support of
the K.U. Leuven Research Fund, in the context of the
BALO project on “Basic research on Learning Objects”.

[17]

References
[1]
[2]

[3]

1484.12.1 IEEE Standard for Learning Object Metadata,
June 2002, http://ltsc.ieee.org/wg12.
E. Duval, W. Hodgins, “A LOM Research Agenda.”
WWW2003 - Twelfth International WorldWideWeb
Conference, Budapest, Hungary, 20-24 may 2003,
http://www.cs.kuleuven.ac.be/~erikd/PRES/2003/www2
003/www2003-paper.pdf
B. Shneiderman, B. Johnson (1991). “Tree-maps: A
space-Filling Approach to the Visualization of
Hierarchical Information Structures.” Proceedings of
IEEE Information Visualization ’91, pp 175-282.

[18]
[19]
[20]
[21]
[22]
[23]

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

J. J. van Wijk, H. van de Wetering, “Cushion Treemaps:
Visualization of Hierarchical Information”, IEEE
Symposium
on
Information
Visualization
(INFOVIS99),1999, pp 73-78
A tree-map java library, http://tree-map.sourceforge.net/
S. Ternier, E. Duval, “Web services for the Ariadne
knowledge Pool System”, Proceedings of the 3rd
Ariadne Annual Conference, Leuven, 20 november
2003,
http://www.cs.kuleuven.ac.be/~stefaan/papers/Webservi
cesForAriadne.pdf
KPS-Client
of
the
ariadne
system,
http://rubens.cs.kuleuven.ac.be:8989/ariadne/KPSClient
/
S. G. Eick, “Data Visualization Sliders”, Proceedings
UIST’94, 1994, pp 119-120
K. Fishkin, M.C. Stone. “Enhanced Dynamic Queries
via Movable Filters”. Proceedings of CHI’95, 1995, pp
415-420.
J. Najjar, E. Duval, S. Ternier and F. Neven, “Towards
Interoperable Learning Object Repositories: the
ARIADNE Experience”, Proceedings of the IADIS
International Conference WWW/Internet 2003, pp 219226,
http://www.cs.kuleuven.ac.be/~najjar/papers/Empirical
Analysis_ARIADNE2003.pdf
Prolearn: network of Excellence in Professional
Learning, url: http://www.prolearn-project.org/
Y.K. Leung, M.D. Apperley, “A review and taxonomy
of Distortion-Oriented Presentation Techniques.” ACM
Transactions on Computer-Human Interaction, 1(2),
1994, pp 126-160.
G. W. Furnas. “The FISHEYE view: a new look at
structured files.” Readings in information visualization:
using vision to think (1999), Morgan Kaufmann
Publishers, Inc., pp 312 – 330, ISBN: 1-55860-533-9
J. Lamping and R. Rao, “The Hyperbolic Browser: A
Focus+Context Technique for Visualizing Large
Hierarchies.” Journal of Visual Languages and
Computing, 7(1), 1996, pp. 33-55.
A hypertree java library,
http://hypertree.sourceforge.net/
J. Najjar, S. Ternier and E. Duval, "The Actual Use of
Metadata in ARIADNE: An Empirical Analysis",
Proceedings of the 3rd Annual Ariadne Conference,
2003
J. Venn, “On the Diagrammatic and Mechanical
Representation of Propositions and Reasonings”,
Philosophical Magazine and Journal of Science S. 5.
Vol. 9. No. 59. July 1880
Grokker: http://www.grokker.com/
Ariadne, http://www.ariadne-eu.org/
Merlot, http://www.merlot.org/
EdNa, http://www.edna.edu.au/edna/page1.html
Universal/educaNext, http://www.educanext.org/
E. Duval, E. Forte, K. Cardinaels et al., “The
ARIADNE Knowledge Pool System”, Communications
of the ACM, May 2001, 44 (5), pp.73-78

