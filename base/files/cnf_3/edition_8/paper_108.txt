Visualisation Design Knowledge Reuse
Hu Jiawei1, 2, Alex Bailey2 & Alistair Sutcliffe1
1
UMIST, United Kingdom
2
Canon Research Centre Europe, United Kingdom
{jiawei@cre.canon.co.uk, alexb@cre.canon.co.uk, ags@co.umist.ac.uk}
Abstract
This paper describes an approach for visualisation
specification and retrieval, with the aim of supporting
the reuse of visualisation design knowledge. For this
purpose, the approach focuses on requirement
abstraction, visualisation characterisation, mapping
rules and visualisation retrieval. Requirement
abstraction represents knowledge for problem
understanding. Visualisation characterisation and
mapping rules represent the design knowledge.
Visualisation retrieval makes the knowledge reuse
effective. The novelties include using generic features for
the visualisation specification and proposing a vector
model for visualisation retrieval.

1. Introduction
Significant achievements have been made in the
theoretical framework, empirical studies, tools, and
products of information visualisation [3]. Visualisation
design knowledge has been accumulated as research in
these fields has progressed. It would be useful if this
knowledge could be reused. The direct benefits include
the reuse of existing visualisations for new and different
purposes, and the ability to guide visualisation designers
when selecting effective visualisations.
Various approaches have been taken for the
description and access of visualisation design knowledge
[3, 4, 9, 11, 13]. However, a systematic approach for
knowledge description and retrieval that can be applied
for a general purpose has not been designed. The
challenge is to describe a uniform language for the
specification of various visualisations and design a
retrieval mechanism for matching application
requirements to visualisation techniques, so that users
can get suggestions on visualisation design for a broad
range of practical application problems.
A generic method for visualisation knowledge
description and retrieval is described in this paper. The
contributions of the method include using a set of generic
features for visualisation description and using a vector
model for visualisation retrieval. The generic features are
empirically validated [12]. And they can be combined to

provide comprehensive specifications to the existing
visualisations. User studies showed the approach is
effective at guiding visualisation selection and design
[6].
The following sections will describe the features for
visualisation specification, the vector model for
visualisation retrieval and the design of the software
application used to implement these ideas.

2. Visualisation specification feature vector
Each visualisation is described using a feature
vector, composed of target features and visual features.
Target features describe the purposes of the
visualisations. Visual features describe how the target
features are presented. These features and their relations
represent the visualisation design knowledge. The
specification of feature vectors provides the knowledge
base for the knowledge reuse.

2.1. Target Features
It has been claimed that problems in the real world
could be abstracted [10, 12] using a small number of
features. The features can form various combinations and
represent a broad range of applications. This approach
takes a hybrid approach by using two generic features,
generic tasks and information types. Generic tasks, taken
from the Domain Theory [12], represent human
reasoning, problem solving and action. Information
types, taken from ISO 14915 [5], describe necessary
content. These features are called target features, since
they represent the purpose of the application. Their
combinations provide comprehensive specifications to
the application requirements.
2.1.1. Information types
The motivation for classifying content into
information types is to specify information needs clearly
before selecting visualisations. The information types are
“tools for thought” [11].

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Descriptions of practical application requirements
indicate information types implicitly or explicitly. For
example, the application requirement “to recognise the
types (e.g. nouns, verbs) of words in a document”
involves information types “category” (types of words)
and “object” (word). Information types are useful for the
clarification of information needs. For example, the
information need “tell me something about Washington”
is vague. The answer can be the weather in Washington,
the main events happening in Washington, the
population in Washington, etc. If the information need is
changed to “tell me about the activities happening in
Washington” by adding information type “action (for
activity)”, the user intention will be expressed more
clearly.
Nine information types are described in ISO 14915.
This approach further proposes three new information
types, i.e. category, object and time. The reason for using
“category” is that people group information. For a certain
amount of information, people will categorise them and
identify the information based on the categories. The
reason for adding information type “object” is that
physical and abstract objects are commonly involved in
the information processing. As for information type
“time”, very few common-sense problems can be
formulated in purely static terms. Temporal information
is central in prediction, planning, and most kind of
explanations. Table 1 lists the information types with
their definitions.
Information
types
Action

Category

Causation

Event

Object

Procedure

Definitions
Information describing movement and
other activity that is perceived to occur.
Usually, an action will cause an event to
take place.
Category is a collection of things
sharing a common attribute. In a
category, each component is considered
only in relation to the set without taking
into account relationships among the
components.
Information describing the cause and
effect of an event, including a sequence of
events that describe causation.
Information about a state change, a
message indicating the occurrence of an
action or conveying a significant change in
the world. An Event may be a review
meeting, a decision point, or simply the
time at which one activity is completed
and another begins.
Information that describes an entity, or
agent, which has a well-defined boundary
and identity that encapsulates state and
behaviour.
Information about a sequence of actions
organised to achieve a goal or task.

Information
types
Relation

Definitions

Relational information is about the
association among objects or agents. The
relational information can include
hierarchical relation, sequential relation,
network relation and overlap relation.
Space
Information about the spatial properties of
the world, such as dimensions, directions
and location.
State
Properties of the environment, objects or
agents that remains constant during a
period of time.
Time
Temporal information describes an
instance or single occasion in time for
some event, or a continuum period.
Value
A numerical quantity measured or
assigned or computed. Or the quality
(positive or negative) that renders
something desirable or valuable.
Table 1: Information types and definitions.
Eight of them are based on the ISO 14915.
2.1.2. Generic tasks
Generic tasks describe abstractions of human
problem solving activity. The Domain Theory [12] has
described the main properties of the generic tasks. These
are summarised as follows:
• Generic tasks are the primitive activity components
composed of a single procedure and achieve single
goals. Generic task actions are fully cohesive with
respect to their goals, i.e. all the task actions and
only those actions contribute to the goal. Generic
tasks cannot be decomposed further without
impairing the goal attainment.
• Generic tasks preserve flexibility for reuse. Generic
tasks are composable so their aggregations can be
reused as composites. For example, information
analysis is composed of classify, sort, model and
evaluate generic tasks. There exists a one-to-many
relationship between generic tasks and more
complex goals. For example, generic task evaluate
can be used for support several high level goals,
such as validation test, decision making, and
problem diagnosis.
• Generic tasks elaborate Norman’s model of action
[8] by proposing models of goal oriented cognitive
activity. The Domain Theory does not describe
generic models for physical tasks because the
motivation is to define task support requirements
primarily for problem solving and decision-making.
This approach focuses on visualisation selection and
design and uses thirteen generic tasks (Table 2), which
are a subset of the generic tasks described in the Domain
Theory [12]. Some generic tasks, such as communicate,
do not indicate visualisations directly and are not
considered in this paper.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Generic
Tasks
Assemble

Definitions

In Assemble, parts or components are
placed together so they make a coherent
whole. Assembly usually involves
physical items; however, conceptual items
may also be assembled, e.g. topics for an
essay plan.
Associate
To associate is to link or join in a
relationship.
Compare
Comparison is a specialisation of
evaluation where judgement is made
between two or more phenomena (events,
agents, and objects), either relative to one
another or against an external benchmark
standard. To compare is to examine so as
to notice similarities and differences.
Evaluate
Evaluate assesses the implications of a
state change with respect to progress
through a task or a perceived state of the
world.
Explain
Explanation provides facts and
information to a requesting agent with
reasons and supplementary information,
and may be used to answer problem
related questions, resulting in providing
supplementary information.
Identify
Identification is the process in which the
name, label or category of an item is
established by examining its attributes or
properties.
Model
Modelling is constructing a mental model
of the problem in hand, the environment
or other phenomena (agent’s beliefs,
roles) implicated in reasoning.
Monitor
Monitoring observes the environment for
state changes of interest.
Orient
Orienting is finding a location for travel or
an object in an environment, including
finding orientation cues.
Plan
The planning generic task describes
human activity of mental planning for
action.
Search
Searching is detecting (usually looking
for) items of interest in the environment
either visually or using other senses, such
as audio.
Sort
To sort a data type is to give it an order or
position with respect to other objects of
like type. Sorting is intended to be used
when an absolute or a relative ranking is
to be given to some series of objects.
Transform Transform changes one representation of a
problem into another, usually representing
the solution.
Table 2: Generic tasks and definitions.
These are based on the Domain Theory [12]

2.2. Visual features
While target features are used to clarify information
needs and presentation intentions, it is necessary to know
the available visualisation features in order to map the
requirements abstracted as target features to suitable
visualisations.
Visual features are described using a set of encoding
options, consisting of visual forms, visual objects, visual
properties, visual organisations and interaction options.
A visual form reflects the structural characteristics
of the visualisations. Visual objects include marks (e.g.
line, area, volume) and text. Visual properties include
position, shape, texture, shade, colour, size and
orientation. Visual objects and visual properties were
identified by Bertin [2] and further described by
Mackinlay [7] and Card et al [3]. Card et al. also
described interaction options. These include location
probes, viewpoint controls, distortion and filtering.
This approach further proposes the concept of visual
organisations, which describes the typical structural
patterns formed by visual objects and visual properties.
The patterns are useful, because they are frequently
reused in different visualisations. Fourteen visual
organisations are identified in this approach, which are
described in Table 3.
Visualisations are composed of these visual features.
Further explanations will be given in the following
sections.
Organisation
Options
Attach

Enclosure

Composition

Connect
Proximity

Sequence

Overlap

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Explanation
To present main
concept and its
associated
attributes
To use a closed
form to group
spatially separated
objects together
To piece visual
object together to
form a coherent
whole
To connect nodes
with lines
To put objects
spatially close to
each other
Using position to
show visual objects
in sequence order
To present
membership in
overlapping
categories

Examples

Organisation
Options
Overlay

Adjacent

Explanation

Examples

To apply visual
properties on visual
objects
To position visual
objects adjacent to
each other

N/a

Alignment

To position objects
along an axis in the
ordered sequence

Parallel

To position visual
objects parallel in
order to present
concurrent relations
Using lines to show
interrelations
among concepts

Network

Hierarchy

Grid

Using hierarchical
layout to show
categories and
subcategories, or
organizational
structures
To show
characteristics of a
set of comparable
items

Table 3: Visual organisations represent the
typical structural patterns formed by visual
objects and visual properties

2.3. Feature vector
A modelling language is used to specify the
purposes of visualisations (i.e. what the visualisations are
used for) and encoding options (how the visualisations
presents the purposes) used in the visualisation. This is
important for visualisation retrieval, because its aim is to
find visualisations that satisfy user needs and represent
these needs informatively.
The modelling representation designed in this paper
uses a feature vector space (FVS). The concept of a FVS
is based on the idea that a visualisation expresses a
complex mapping between a set of target features and
visual features. A full list of the features is provided in
Table 4.
The target features are described using generic tasks
and information types. Apart from the eleven basic
information types described in section 2.1.1, some
important information properties are also considered. For
example, information type “relation” is divided into six
types of relations, including overlap relation, sequence

relation, part of relation, hierarchical relation, network
relation and concurrent relation.
The visual features are composed of thirty-one
encoding options.
The FVS takes the following format:
<GT1, GT2, ……, GTm,
IT1, IT2, ……, ITn,
VF1, VF2, ……,VFp>
58 features are considered. These consist of eight
generic tasks (m), nineteen information types and
important properties (n) and thirty-one visual features
(p). GT represents generic tasks, IT information types
and VF visual features.
ID
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Features
Assemble
Associate
Compare
Evaluate
Explain
Identify
Monitor
Sort
Action
Category
Causation
Event
Object
Procedure
Overlap relation
Sequence relation
Part of relation
Hierarchical relation
Network relation
Concurrent relation
Space in extended scope
Space in limited scope
Spatial location
Spatial direction
State
Time
Quantitative value
Table
Chart
Diagram
Map
Marks
Text
Position
Shape
Texture
Shade
Colour
Size
Orientation
Attach
Enclosure
Composite

Type
GT
GT
GT
GT
GT
GT
GT
GT
IT
IT
IT
IT
IT
IT
IT
IT
IT
IT
IT
IT
IT
IT
IT
IT
IT
IT
IT
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF

ID
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

Features
Connect
Proximity
Sequence
Overlap
Overlay
Adjacent
Alignment
Parallel
Network
Hierarchy
Grid
Location probes
Viewpoint controls
Distortion
Filtering

Type
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF
VF

Table 4: Target features, visual features and
their corresponding ID.
The FVS is created from XML representations that
expresses the relations between the target features and
the visual features. Each generic task or information type
has one corresponding visual feature. The benefit is that
it is easy to know which visualisation is used to present
the application requirements and how they are presented.
Following are two examples, coloured map (taken from
http://ais.gmd.de/and/time/AreaAnalysis/app/euro/pop_t
ot.html) and Kartoo (taken from http://www.kartoo.com)
(Table 5) using feature vectors for visualisation
specification.
Coloured Map

Kartoo

Table 5: Coloured map and Kartoo
A XML document is used for the specification of
visualisation. For example, the coloured map in Table 5
is specified as a XML node:
<VisExample visualisation="coloured_map">
<baseform name="map"/>
<basitem name="associate"
encoding="overlay"/>
<basitem name="quantitative_value"
encoding="colour"/>
<basitem name="space in extended_scope"
encoding="map"/>
</ VisExample>
The XML node for the representation of Kartoo in
Table 5 is:

<VisExample visualisation="VFnetwork_and_attach">
<baseform name="network"/>
<basitem name="part of relation "
encoding="attach"/>
<basitem name=" network relation "
encoding="network"/>
<basitem name="object"
encoding="mark"/>
<basitem name="category"
encoding="colour"/>
<basitem name="quantitative value"
encoding="size"/>
<basitem name="associate"
encoding="overlay"/>
</VisExample>
The XML specifications can be converted into
feature vectors for the purpose of visualisation retrieval.
For example, the visualisation feature vector for the
coloured map in Table 5 is:
VF1: <associate, space in extended scope, quantitative
value, overlay, map, colour>.
The visualisation feature vector Kartoo is:
VF2: <part of relation, network relation, object,
category, quantitative value, associate, attach, network,
mark, colour, size, overlay>
Further explanation of the feature vectors will be
given in section 3. The feature vector space (FVS) is
used to represent the visualisations and for visualisation
retrieval.

3. Retrieval algorithm
Based on the feature vectors for visualisation
representations, this section addresses how to effectively
retrieve relevant visualisations to a user request. A
critical step in this process is to develop a similaritymatching algorithm that can be used to precisely measure
how well a collected visualisation matches the user
request.
The retrieval algorithm uses a vector space model.
The vector space model is based on the idea of
representing visualisations in n-dimensional space. The
query is also located in the same space. Visualisations
are ranked in order of their “closeness” to the query.
Both the query and visualisations are specified as
binary feature vectors. For the ith visualisation, it is
expressed as:

r
Vi = ( Fi ,1 , Fi , 2 ,....Fi , k ,.....Fi ,58 )

Fi ,k represents one feature, which can be one or
zero. If the visualisation supports the feature,

Fi ,k is set

to one. Otherwise, it is set to zero.
Each query and visualisation is represented using a
binary vector with 58 dimensions. For example, coloured
map in Table 5 supports the following features of
associate, space in extended scope, quantitative value,
overlay, map, and colour. In the feature vector for the

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

coloured map, features 2, 21, 27, 48, 31 and 38 (Table 4)
are set to one and all the others to zero.
Queries are also specified using feature vectors. For
example, the query “What visualisations can be used to
present populations in the European countries?”
requires the following features:
QF: <associate, space in extended scope,
quantitative value>
In the feature vector of QF, features 2, 21 and 27
(Table 4) are set to one and all the others to zero.
The feature vector expresses the 58 features in a
fixed order. The simple idea is that for a feature required
in a query vector, if it is also presented in a visualisation
vector, then the visualisation is relevant to the query.
Based on our users’ study, it is noticed that users
require that the retrieved visualisations should be ranked
according to three conditions:
Condition 1: The high ranked retrieved
visualisations should contain most of the required
features.
Condition 2: The high ranked retrieved
visualisations should contain least of the un-required
features.
Condition 3: In cases of conflict, the first condition
has priority.
To satisfy these requirements, this approach uses a
similarity-matching algorithm called “dice coefficient”
[1]. The equation is expressed as:

the knowledge. The limitation of feature independence
and use of the binary vectors is accepted in this
approach.

4. Visualisation Selection Software
The Visualisation Selection Software, referred as
VSS, is designed to support cycles of iterative querying,
browsing, and evaluation of retrieved visualisations.
Using the software, users can make a query by
identifying the generic tasks and information types
representing application requirements. VSS provides two
paths for visualisation retrieval. One is using the
combinations of identified generic tasks and information
types. The second is using the combinations of identified
generic tasks and information types, along with the
user’s preferred encoding options. The thumbnails of the
retrieved visualisations are listed in a ranked order based
on their relevance to the query. Users can evaluate the
visualisations and make further refinement to the queries.

A
B

m

SIMB(VFi , QF ) =

where m = 58,

∑VFi, j * QF j

D

E

j =1

m

m

j =1

j =1

∑VFi, j + ∑ QF j

C

Figure 1: The interface of VSS

VFi represents a visualisation in the

database, and QF represents the query.
The benefits of using the vector space model for
visualisation retrieval include
• The similarity between visualisation and query is
calculated.
• The output is ranked by sorting similarity values.
• Partial matching is supported. The queries can
contain only target features, or only visual features,
or a sub-set of the features. The flexibility makes the
software very useful.
The disadvantage is that the features are used
independently. For example, the feature vector could not
reflect the relations between generic tasks and
information types. Also, the binary vector does not
reflect the importance of the visual features. These
limitations also apply to the area of information retrieval.
Some research tried to assign weight to the features [9],
and used the structural information [4, 13]. However, it
incurs new limitations in that the data is difficult to
collect and the structure of complex visualisations still
cannot be specified [13].
This approach is mainly concerned with the
visualisation design knowledge specification and use of

The interface of VSS has five frames (Figure 1):
Frame A: contains information types, which are used
to clarify the content of the application
requirements.
• Frame B: contains generic tasks, which are used to
clarify human actions that are applied to the
information types.
• Frame C: presents the most frequently used
combinations of generic tasks and information types
and the corresponding visualisation names. This is
used to guide visualisation selection.
• Frame D: presents encoding options applicable to
the selected generic tasks and information types.
Users can choose the encoding options in order to
identify suitable visualisations.
• Frame E: displays relevant visualisations that match
the application requirements.
Users identify generic tasks and information types
representing application requirements in Frames A and
B. Based on the identifications, VSS ranks the predefined commonly used combinations of generic tasks
and information types using the similarity-matching
algorithm. The combinations are ranked and presented in
•

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Frame C. At the same time, VSS also presents the
recommended encoding options to the identified generic
tasks and information types in Frame D, and appropriate
visualisations ranked based on the identified generic
tasks and information types in Frame E. At this stage,
users can check the individual combination of generic
tasks and information types in Frame C and analyse the
corresponding visualisation in Frame E. Users can also
specify the preferred encoding options for the
presentation of the identified generic tasks and
information types in Frame D. This will affect the
combination ranking in Frame C and the visualisation
ranking in Frame E. By browsing the presented
visualisations in Frame E, users can refine the visual
feature specifications, or refine the identification of
generic tasks and information types. This forms the
iterative process for visualisation retrieval.

5. Conclusion
This paper has described an approach for
visualisation specification and retrieval. The approach is
based on requirement abstraction, visualisation
characterisation, mapping rules and visualisation
retrieval. Requirement abstraction represents knowledge
for problem understanding. Visualisation characterisation
and mapping rules represent the design knowledge.
Visualisation retrieval makes the knowledge reuse
effective.
There are several directions for future work. These
include the integration with an existing visualisation
design package. VSS gives suggestions for visualisation
selection, also the suggestions of encoding options.
Currently thumbnails are used to represent the
visualisations and encoding options. In the user study,
users expressed that a try and test function will be useful.
The idea is that the software should provide drag and
drop functions, so that users can apply different encoding
options on the proposed visualisations.
The combination of VSS with an existing
visualisation design package will make the automatic
visualisation generation more effective. The combined
software will be intelligent in that it can abstract
application requirements and automatically generate
visualisations that represent the requirements. Users can
still make some further configurations to the generated
visualisations to make them suitable to their specific
preference.

[3]

[4]

[5]

[6]

[7]

[2]

Mackinlay, J. D. (1986). Automating the design of
graphical presentations of relational information.
ACM Transactions on Graphics, 5(2), 110-141.

[8]

Norman, D.A. (1988). The psychology of everyday
things. New York: Basic Books.
[9] Salisbury, L. (2001). Automatic visual display design
and creation. Ph.D. thesis. University of Washington.
[10] Schreiber, G., Akkermans, H., Anjewierden, A., de

Hoog, R., Shadbolt, N., Van de Velde, W., &
Wielinga, B. (1999). Knowledge engineering and
management. the CommonKADS methodology.
Cambridge, MA: MIT press.
[11] Sutcliffe, A. (1997). Task-related information analysis.
International Journal of Human-Computer Studies, 47,
223-257
[12] Sutcliffe, A. (2002). Domain theory: patterns for
knowledge and software reuse. Hillsdale, NJ: Lawrence
Erlbaum Associates.
[13] Zhou, M., Chen, M., & Feng, Y. (2002). Building a
visual database for example-based graphics generation.
Proceedings of IEEE Symposium on Information
Visualization: InfoVis 2002 (pp. 23-32). Los Alamitos,
CA: IEEE Computer Society Press.

References
[1]

Card, S., Mackinlay, J., & Shneiderman, B. (1999).
Readings in information visualisation: using vision to
think. San Francisco, CA: Morgan Kaufmann.
Chuah, M. C., Roth, S. F., & Kerpedjiev, S. (1997).
Sketching, searching, and customizing visualizations: a
content-based approach to design retrieval. In M.
Meybury, (Eds.), Intelligent Multimedia Information
Retrieval (pp. 83-111). Cambridge, MA: MIT press.
ISO 14915. (2002). ISO 14915-3: Software ergonomics
for multimedia user interfaces – Part3: Media selection
and combination. International Organisation for
Standardisation.
Jiawei, H. (2003). Reuse of Visualisation Design
Knowledge. Ph.D. thesis. UMIST, U.K.

Baeza-Yates, R., Ribiero-Neto, B., & Ribeiro-Neto,
B. (1999). Modern information retrieval. Addison
Wesley.
Bertin, J. (1983). Semiology of graphics: diagrams,
networks, maps. University of Wisconsin Press.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

