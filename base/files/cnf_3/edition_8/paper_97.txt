Issues in the Non-Visual Presentation of Graph Based Diagrams
Andy Brown, Robert Stevens, Steve Pettifer
Department of Computer Science, University of Manchester, Oxford Road, Manchester M13 9PL. UK
browna@cs.man.ac.uk, rds@cs.man.ac.uk, srp@cs.man.ac.uk
Abstract
One aspect of non-visual visualisation is providing accessibility to diagrams for users with visual impairments.
In this paper we review the literature on diagrams and nonvisual presentation in order to elucidate the issues involved
in making graph based diagrams accessible using speech
and non-speech sound. First we examine the nature, scope
and uses of these diagrams. We then describe the nature of
diagrams: how do diagrams differ from other representations; how do sighted readers read, understand, and extract
information from diagrams; what cognitive processes do diagrams facilitate; and what factors affect how diagrams
may be understood? After a comparison of visual with aural presentation we discuss the work presented by others in
this field, particularly looking at their reasons for implementing how they do in light of our examination of visual
comprehension. The paper concludes with a discussion of
how these issues combine and conflict to influence requirements for interface design.

1. Introduction
Graphs form the basic component of many diagrams and
the ability to provide non-visual visualisation of graphs is
vital if print disabled readers are to be able to use this form
of diagram. This paper discusses how graphs are understood
by sighted readers before examining some of the issues involved with, and previous efforts into, making them accessible through audio presentation.
The Shorter Oxford English Dictionary [18] defines ‘graph’ as:

cess flowcharts, universal modelling language (UML) diagrams, organisational structure hierarchies, molecular structures and biological diagrams such as the nitrogen cycle.
These graphs do not include Cartesian type graphs expressing numerical correlation between quantities; rather they are
used to present a more or less abstract view of relationships
between entities. An important result of this distinction is
that the diagram layout is not important: the information is
contained in the knowledge of which nodes are connected
to which others by which edges, and any attributes of the
nodes and connections. This is not to say that layout cannot be used to ease reading of the diagram. Conversely, it
is also important to note that layout and presentation can
be (to some extent) simply an artefact of the presentation
medium, not an inherent part of the information.
Graphs are ubiquitous, yet for users unable to see them
clearly, due to either visual impairments, difficult environments, or hardware limitations, they may become unusable.
To put this in context, it is estimated that there are over
150,000 visually impaired people in the U.K., and their
rights of access to information have been enshrined in law.
Can the design of interfaces for such users be influenced
by combining an understanding of the nature of visual diagrammatic representation (how these representations are
understood and how they benefit readers) with appreciation
of the differences between the visual and audio channels?

2. The Nature and Uses of Graphs
As an example of a graph, consider Figure 1, which
shows the structure of the molecule ethanoic acid. In this

‘2 MATH . A symbolic diagram in which connections between items are represented by lines. Now
also in abstract terms, a finite, non-empty set of
elements together with a set of unordered pairs of
these elements.’
This may be summarised by saying a graph is composed
of a collection of nodes and edges. Examples include pro-

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Figure 1. Diagram showing the structure of
ethanoic acid.

type of graph the nodes represent atoms and the edges
bonds. Edges have only one attribute – order, i.e., whether
the bond is a single bond, double bond, etc. The nodes have
different attributes, including the type of atom (unlabelled
ones are carbon). An interesting feature is that hydrogen
atoms connected to carbons are not explicit; to benefit from
a simpler diagram the user is expected to have sufficient
chemical knowledge to deduce their locations. This diagram
also gives an example of drawing conventions: the molecule
is a three-dimensional object, but to be represented on paper needs to be mapped on to two dimensions. In the case
of molecules the atoms and bonds are normally laid out on
a roughly hexagonal grid, and both further chemical knowledge and a slightly different notation are necessary if the
three-dimensional structure is to be known. Note, however,
that the tasks these representations are used for often do not
require this level of understanding.
The features of these diagrams illustrate all of the factors highlighted by Peebles [11] as involved when reasoning with diagrams. He described diagrammatic reasoning as
behaviour involving interaction between the cognitive and
perceptual skills of the reasoner, the graphical properties of
the diagram, and the specific requirements of the task. Here
we see firstly that the user must be trained in the use of
these diagrams to understand that an unlabelled node is carbon, and must have sufficient chemical knowledge to determine the locations of hydrogens. Secondly, the reasoning
he is able to perform depends upon the diagram; if no 3D
bonds are given, the reader is generally unable to make deductions about the 3D structure. The third factor, the task,
will be discussed later.
To understand how to best present a diagram nonvisually it is important to know why it was created in the
first place. Finding the intention of a diagram is not always a simple task. Many diagrams are simply used to
illustrate the relationships between the entities in a concise way; it was easier for the author to draw a diagram than
to write some prose describing the same system. In other instances a diagram may be used simply to break up a section of text that might otherwise be intimidating to read
or appear ‘dry’ and boring. When appearing amidst a section of text, a diagram is easily found and therefore may be
used to present information that the reader will need to refer back to, saving the need to search text. If a diagram is
used to describe a system where there may be action between nodes (e.g., a chemical plant schematic) , the diagram
can allow the reader to perform a pseudo-animation, following a text description while tracing a route across the
diagram.
In some cases the diagram is an essential part of the
communication, while in others it may be safely ignored.
Clearly this decision must be left to the reader, although
providing a means of assessing the diagram could save them

significant effort.

3. Are Graph Based Diagrams Useful?
Assuming diagrams can actually facilitate understanding
and reasoning, knowing which aspects are important, and
why, should allow designers of non-visual interfaces to develop analogues or replacements.
Larkin & Simon [8] asserted that 2D indexing of the
information in diagrams can support extremely useful and
efficient computational processes. By examining the computation required for problem solving using sentential and
equivalent diagrammatic representations, they concluded
that diagrams facilitated problem solving by easing search
and recognition.
The first of these conclusions is that localisation of related nodes in diagrammatic representations reduces the
need for searching, and allows computation without generating and matching symbolic labels. That is, the twodimensional space can be used to group related nodes much
more efficiently than a one-dimensional string of text (or
speech). The second conclusion, and in their view the more
important one, was that diagrams make recognition considerably easier. They illustrate this with a geometry problem
that describes two parallel lines crossed by two transversal
lines, which intersect between the parallel lines. With a diagram it is immediately apparent that there are two triangles
formed, while with the sentential description above, some
mental computation is required to make this inference.
Further research on diagrammatic representations has
developed the work of Larkin and Simon to consider the
interaction between internal and external representations –
distributed (or external) cognition. These are discussed by
Scaife and Rogers [12]. For example, Bauer and JohnsonLaird [1] challenged Larkin and Simon’s conclusion that diagrams were not helpful in inference making. They demonstrated that users solving certain types of problem (involving double-disjunctive reasoning, where one must envisage and remember certain alternative states) were significantly quicker when using diagrams than sentential representations. The suggestion was that the diagram acts as an
external memory; the problem states and solution are more
explicitly represented in the diagram so reasoners are much
less likely to overlook possible configurations. Scaife and
Rogers, however, disagree; they argue that the benefits arise
because the problem has been re-represented into simpler
and different tasks, i.e., the diagram constrains the variety
of errors possible when interpreting the problem. Nevertheless, both agree that the diagram helps.
A further theme highlighted by Scaife and Rogers is that
of interactivity: suggesting attempts to maximise computational offloading from the internal to the external representation.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Work on visual perception has indicated that (given certain constraints) it is inevitable that people perceive the
whole before the parts. The classic experiments (as described in, for example, A Handbook of Cognitive Psychology [6]) demonstrating this used large letters that were
formed from many smaller letters – people perceived the
larger letter first. Later experiments refined this by identifying an upper limit for the proportion of the visual field taken
by the large letter (8◦ ), above which the smaller letters became easier to identify.
Palmer [10] proposed a theoretical model to account for
this phenomenon. His model lies between the Gestaltist
view that the whole is all, and the opposing view that only
the primitive components of a visual scene are perceived.
He proposed that the visual form is analysed hierarchically
starting with the overall configuration and moving down
towards the basic features or elements. The clustering of
components to form structural units (which he compared to
Miller’s chunks [9]) occurs selectively, in a way that maximises connections between units which have ‘important’
relationships. In the abstract geometric patterns Palmer was
using, importance was determined by spatial proximity; this
is clearly a domain-dependant criterion. Palmer performed
various experiments that confirmed some predictions of his
model. Two of these involved tasks that required manipulation or synthesis of patterns and indicated that low level
cognitive processes deal with the information in a manner
consistent with his model. If this model accurately reflects
the mind, it suggests that process of visual perception might
organise diagrams into a hierarchical form. We might speculate that the cognitive processes that deal with diagrams
are therefore optimised for this type of data structure.
It is interesting to note that it is also the established view
that spatial environments are represented in the mind hierarchically. For example, Stevens and Coupe [13] accounted
for distortions in spatial judgements by proposing a hierarchical coding of the information. Other studies have provided evidence supporting this model and this is now the
dominant view [5].
These theoretical studies highlight some of the attributes
of diagrams that make them useful. The main feature of a
diagram is that it facilitates recognition of information; that
which would be implicit in some representations often becomes explicit when presented as a diagram. Diagrams also
facilitate searching by using 2D indexing, allowing related
nodes to be easily identified. These features should be replicated, if possible, when a diagram is presented non-visually.
Palmer’s model of perception suggests that building the data
into a hierarchical structure might allow processes to perform in as similar a way as possible to visual perception.

4. Visual vs. Aural Presentation
The form of the representation will have been influenced
by the constraints imposed by its medium. In visual diagrams these are mainly the availability of only two dimensions, but also restrictions on the available area and, more
mundanely, cost. Presenting the same information through
other channels leads to a dilemma; do we present as close
a translation as possible of the ‘paper copy’, including any
artefacts created by its constraints, or do we try to present
the raw information in as simple a manner as possible,
given the constraints of the new medium? The choice made
has implications for the ability of the reader to communicate with others who have read the same diagram on paper.
There is a similar problem with the notations and conventions used when drawing; it is presumably desirable that the
reader does not have to learn how to read conventional diagrams in order to read them non-visually, yet a common
language is necessary for discussion.
There are other features of a traditional diagram that influence how it is read. The most striking, perhaps, is that
all parts of the diagram are effectively instantly accessible.
This allows the user to gain an overview of the diagram at a
glance (c.f. hierarchical perception, above), gaining an appreciation of the level of complexity and the rough structure without needing to examine detail. If the same information is presented as a straight-forward speech description the reader will only have access to the fine detail.
The ability to move rapidly around the diagram also facilitates distributed cognition, where understanding the diagram (or problem solving using it) occurs as a cognitive
process continuously spread over the user’s partial mental
model of the diagram and his perception of the diagram itself; the diagram may be considered as an external memory.
Particularly when using paper, this may be developed further with the possibility for annotation [12].
It might be that lack of a permanent external representation fundamentally changes the nature of problem solving.
For certain tasks it might be easier for the reader to build a
complete mental representation, before performing the task
without significant interaction with the diagram. Being unable to offload cognitive processing to the external representation, as one can do with a visual diagram, puts great strain
on the short-term memory. It has been known for years that
we are limited to holding only a handful of items in shortterm memory, but that if items may be ‘chunked’ together,
we can still recall a similar number of chunks [9]. If a diagram contains more than 7 ± 2 items of information, it is
unlikely that a user will be able to build a complete mental
representation of the diagram unless some chunking takes
place.
In summary, the traditional media for presenting diagrams constrain some aspects of the presentation which

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

may, or may not, need to be replicated for non-visual presentations. All parts of a visual presentation are instantly
accessible, providing the reader with overviews, and reducing the load on their short-term memory.

5. Tools for Audio Presentation of Graph
Based Diagrams
This section does not cover all proposed solutions, instead it describes a selection chosen to exemplify the different problems and approaches. We concentrate on audio solutions, simply due to their relative cheapness and
widespread availability.
Several groups have considered the provision of
overview facilities to be useful or essential. One example is the development of tools to make algebra notation accessible to visually disabled students, a task
that has many parallels with graphs in that the different sub-expressions of an equation can be considered nodes
connected by operators (such as +, -, =), and the equation cannot be simply read from left to right. Stevens et
al. [14] considered a complex equation to have a hierarchical structure where a sub-expression is itself composed of
sub-expressions. They highlighted the need for the reader
to be active in his reading, not just passively have the equation read to him. They also stressed the need for summarisation as a method for the reader to keep in mind
his ‘location’ in the equation and estimate the complexity of an expression. This was facilitated by the hierarchical
view. Most of the techniques were designed to overcome lack of an external memory and to increase the
control over the flow of information.
The TeDUB1 (“Technical Drawings Understanding for
the Blind”) partners completed an evaluation of how experts
in different fields described diagrams to each other [16].
This, as well as reiterating the usefulness of overviews, also
highlighted the task dependence of the descriptions and the
usefulness of relative locators (such as North, South, East
and West). It appeared that floor plans were described as
if walking through them, and were considered very different from UML or circuit diagrams. Further work extended
to systems that used hierarchical data structures to allow
overviews, in a similar fashion to Stevens, above. Evaluation of their ‘EuroNavigator’ system [15] (which contained
data about European countries) indicated that this reduced
cognitive load, but they commented that strict hierarchies
were not effective for navigation between related nodes, and
that ‘Navigating hierarchies at the lower levels no longer remains intuitive and it can be difficult to know where something of equal rank down another branch is’. Their later
‘DiagramNavigator’ [17], a system for understanding dig1

http://www.tedub.org/ (last checked 25/2/04)

ital circuit diagrams, was a system that presented information in a hierarchical structure, for example a group of logic
gates might be grouped to form a half-adder. This was intended to chunk the information to reduce the demands on
short-term memory and facilitate overviews.
A different approach to those structuring the data into hierarchies was that taken by Blenkhorn and Evans [3], who
concentrated on the connections between nodes. They created a system, known as ‘Kevin’, which used a tactile pad
in combination with audio output to allow visually disabled
users to read and edit a form of data-flow diagram used by
software developers. The tactile pad was composed of two
regions, with the output area split into a N×N grid, where
N was the number of nodes in the graph. The leading diagonal of the grid gave access to the nodes and their attributes,
while the remainder was used to give access to information about the connections. The user could find out what
nodes there were, and to which other nodes they were connected, by following his finger along either the row (connections leaving the node) or column (connections entering
the node) containing that node. It is clear that this system
would be inappropriate for graphs containing large numbers
of nodes, but the diagrams considered form part of a hierarchy themselves, so one diagram should never be too complex.
Bennett looked at the limitations of the Kevin system described above [2]. He felt that the method by which the
Kevin user moved around the diagram was different from
the original and the two representations therefore lacked
computational equivalence. He proposed that presenting information as a hierarchy would afford the benefits Simon
and Larkin associated with grouping. He investigated how
the nature of the task influenced whether diagrams were better presented with this hierarchical structure, or with a connection based structure, as with Kevin. He conducted some
experiments using central heating schematics as test diagrams, and demonstrated that hierarchically presented information facilitated hierarchical tasks, but that if the tasks
were navigational the information was best presented with
an emphasis on connections. Although he mentions a system allowing both types of browsing, this was not described
or tested.
Presentation of location information was more commonly found (implicitly) in systems that used tactile methods for presentation, such as Audiograf [7]. Bennett, however, also investigated its use in audio presentation, since he
felt previous work ‘suggests that position information is part
of the reason why diagrams are successful representations’;
he argued that not knowing the location of the components
in the original diagram creates an informational inequivalence. He therefore also investigated if musical ‘earcons’
(the audio equivalent of graphical icons) presenting coordinate information would ease the tasks, but found no evi-

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

dence to support this hypothesis. It is debatable if lacking
coordinate information destroys informational equivalence;
we would argue that in graph-based diagrams the inequivalence is purely computational.
The use of non-speech sounds was a feature of some
work, notably Stevens et al, who investigated their use,
along with prosody, to improve the quantity of information
output without overwhelming the listener with descriptive
speech. Considering the use of hierarchies in many of the
systems described above, another relevant piece of research
concerning non-speech sounds is that by Brewster et al. into
the use of 3D earcons to aid navigation through a hierarchical menu in telephone-based interfaces [4]. They found the
earcons helpful in giving a quick reminder of current position, but problems arose with earcon length when deep in a
hierarchy.
Although the designers of many of the systems described
above are not explicit about their reasons for implementing
in a particular manner, some themes emerge. It is clearly
considered useful to get an overview of the diagram; this
would appear to be the reasoning behind the hierarchical
methods of navigation favoured by some. The building of a
hierarchy was also considered beneficial by reducing memory load. There is also agreement over the need to give the
user control over the information flow – all systems allow
the user to move around the diagram to control what information they receive. The methods for moving around diagrams appear to be the most variable feature of the systems examined, although there was recognition that the best
method of interaction is task-dependant.

6. Comparison of Theory with Practice
The model proposed by Palmer for visual perception fits
with the hierarchical data organisation used by some of the
systems above (e.g., Bennett, TeDUB), although none of
these cite it as justification. Building a hierarchical data
structure for the information in the diagram (or providing
another means of viewing the information hierarchically)
could allow the audio representation to be overviewed in
a manner analogous to (although presumably much slower
than) a visual representation. Whether this then provides
real benefits to the non-visual reader is perhaps open to
question, although it seems intuitive that overviews are useful, for example by allowing an uninteresting or irrelevant
diagram or part of diagram to be safely ignored.
It is striking that only one of the systems described above
provided any facility for making implicit features of the diagram explicit. This is the feature of diagrams identified
by Larkin and Simon as the most beneficial, yet it seems
to have been ignored. Even the TeDUB DiagramNavigator, which identified larger features (such as half-adders),
did not justify this feature in terms of easing recognition,

but claimed reduction of the number of items in the diagram to remember. This is a valid claim, and is as important as easing recognition when we are denied the easily accessible external memory afforded by the visual representation.
The idea of giving users positional information was proposed, and found to be ineffective, by Bennett. Analysis of
the reasons for the benefits of visual diagrams explains this
point. The knowledge of the location of a node is not in itself particularly interesting (although it might help readers
build a mental representation that is closer to one built by
a sighted colleague), rather it is grouping by location that
provides benefits. These are achieved by making it easier
for the reader to search, e.g., to identify related nodes; it is
therefore useful not to know exactly where a node is, but
instead what other nodes are nearby. The closest relationship between nodes on a graph is probably that of connectedness, so it should be made possible to identify to which
other nodes a node is connected. This gives some explanation for why the TeDUB studies found pure hierarchical
systems unsatisfactory.

7. Discussion
By looking at the nature and use of graphs in diagrams
and attempts to obtain non-visual visualisations, we can
enumerate a collection of issues that any system needs to
address:
Recognition: It is, of course, a non-trivial task to facilitate recognition of otherwise implicit features of the data,
but there are features of diagrams that are of generic interest. Cycles are typically interesting to readers, for example, yet seem particularly difficult to infer from a sentential representation. A facility to identify cycles in any graph
could save the reader considerable computation. In a similar way many diagrams (particularly those concerned with
processes) have one or more paths from a start-point to an
end-point; these could be similarly identified for the reader.
Some of the systems were designed for specific applications
– in these cases it might be possible to define a set of particular patterns of interest which may be recognised by the
system (e.g., half-adders). Another example would be identification of functional groups in molecules.
Overviews: Some means of reducing the effect of the
loss of external memory is necessary. The provision of
overviews for all or parts of the diagram offers a chunking
mechanism that can reduce the number of items a reader
needs to remember. These overviews can be easily integrated into a hierarchical data structure; the same form as
visual and environmental information is thought to be represented in the mind.
Search: Further search facilities would seem to be important, to overcome the lost ability to scan the eyes rapidly

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

over the diagram and allow readers to find nodes related
to the one they are currently viewing. It is clearly necessary to be able to find out quickly to which other nodes any
node is connected – this requires connection based navigation.
These three main themes suggest that a combination of
hierarchical and connection-based navigation is necessary.
It will also probably prove necessary to build identified features of the graph into the hierarchy.
Task Dependence: A further consideration that has not
been examined in too much detail is the nature of the task.
Automatic recognition of implicit features is likely to be
useful in many situations, although the type of features that
need to be identified will vary depending upon both the type
of diagram, and the information that is needed from it. An
additional issue is the use of these diagrams for teaching and
examination; one can envisage a situation where a chemist
is learning functional groups and an exam question might
require identification of the presence or absence of such a
group. In this situation it would not be appropriate to do
this automatically!
Representational Constraints: Perhaps one of the
main decisions, however, is how closely to make the nonvisual representation resemble the original diagram. In a
collaborative piece of work where communication is essential, it is probably necessary to recreate many of the features
and artefacts of the original, but if the diagram is intended
merely to communicate information, it is likely that a more
efficient interface can be achieved if the non-visual representation is constructed around the data in as simple a
manner as possible. An example would be a 3D molecular structure diagram: do we need to give the reader a
knowledge of which atoms are in the plane of the paper, or can we just consider all equally, rendering the
molecule in three-dimensions?
From an investigation into the nature and use of graph
based diagrams we have a set of issues that must be addressed by non-visual visualisation systems and a theoretical basis from which to address them. In combination,
these issues suggest features that will be necessary for nonvisual presentation of any graph, and highlight areas where
choices need to be made depending on the domain and the
specific application.
It is our intention to develop a speech-based tool for nonvisual presentation of graphs, with particular efforts towards
making implicit features explicit and easing simultaneous
hierarchical and connection-based navigation. We will be
concentrating on the role annotation can play in such a solution, whether performed automatically by the system, such
as labelling of implicit features, or by the user. The prototype will allow exploration of chemical molecules, although
we are interested in the general case so this will be extended
to look at another type of graph, for example UML or cir-

cuit diagrams.

Acknowledgements
Andy Brown is funded by an EPSRC studentship.

References
[1] M. Bauer and P. Johnson-Laird. How diagrams can improve
reasoning. Psychological Science, 4:372, 1993.
[2] D. Bennett. Effects of navigation and position on task when
presenting diagrams to blind people using sound. Lecture
Notes in Artificial Intelligence, 2317:161, 2002.
[3] P. Blenkhorn and D. Evans. Using speech and touch to enable blind people to access schematic diagrams. Journal of
Network and Computer Applications, 21(1), 1998.
[4] S. Brewster, A. Capriotti, and C. Hall. Using compound
earcons to represent hierarchies. HCI Letters, 1(1):6–8,
1998.
[5] J. Brockmole and R. Wang. Switching between environmental representations in memory. Cognition, 83:295, 2002.
[6] M. Eysenck.
A Handbook of Cognitive Psychology.
Lawrence Earlbaum Associates, 1984.
[7] A. Kennel. Audiograf: A diagram-reader for the blind. In
Proceedings of the second annual ACM conference on Assistive technologies, pages 51–56. ACM Press, 1996.
[8] J. Larkin and H. Simon. Why a diagram is (sometimes) worth
10000 words. Cognitive Science, 11:65, 1987.
[9] G. Miller. The magical number seven plus or minus two.
Psychological Review, 63:81–97, 1956.
[10] S. Palmer. Hierarchical structure in perceptual representation. Cognitive Psychology, 9:441, 1977.
[11] D. Peebles and P. Cheng. Modeling the effect of task and
graphical representation on response latency in a graph reading task. Human Factors, 45:28–46, 2003.
[12] M. Scaife and Y. Rogers. External cognition: How do graphical representations work? International Journal of HumanComputer Studies, 45(2):185–213, 1996.
[13] A. Stevens and P. Coupe. Distortions in judged spatial relations. Cognitive Psychology, 10:422–437, 1978.
[14] R. D. Stevens, A. D. N. Edwards, and P. A. Harling. Access
to mathematics for visually disabled students through multimodal interaction. Human-Computer Interaction (Special issue on Multimodal Interfaces), pages 47–92, 1997.
[15] TeDUB project. D5.2 Evaluation of the pre-prototype. Personal communication.
[16] TeDUB project. A study with domain experts. Personal communication.
[17] TeDUB project. D5.3 Report on evaluation of 1. Prototype,
2003. Personal communication.
[18] W. Trumble and A. Stevenson, editors. Shorter Oxford English Dictionary. Oxford University Press, 5th edition, 2002.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

