EzMail: Using Information Visualization Techniques
to Help Manage Email
Maryam Samiei
School of Engineering Science
Simon Fraser University
{msamiei@cs.sfu.ca}

John Dill
Arthur Kirkpatrick
School of Engineering Science School of Computing Science
Simon Fraser University
Simon Fraser University
{dill@cs.sfu.ca}
{ted@cs.sfu.ca}

Abstract
Originally designed as a messaging application, email
is now used for a wide range of functions. Email clients
however have not progressed correspondingly to support
users with email management.
This paper describes the design of EzMail, an email
visualization tool that runs in conjunction with an email
client and creates a multi-view interface to assist with
email management. Our primary focus is to group and
visualize messages as components of threads to provide
contextual information and conversational history. We
have developed visualizations for individual messages,
message properties, and messages in a thread. Message
annotation is incorporated, along with a capability for
replying simultaneously to several messages. A small
user survey and a user study provided information
regarding users’ management of their messages and
threads, and a comparative evaluation of EzMail with
respect to Microsoft Outlook.

Keywords --- email, electronic mail,
information visualization, thread visualization

threads,

1. Introduction
Electronic mail or email is an asynchronous electronic
messaging system that uses standard conventions for the
exchange of messages among users over communication
networks. However, it is increasingly being used for
information management, document exchange, and task
management as well as communication management [2]
[8] . The increasing number of email users, usages, and
messages has been referred to as email overload [8] .
Part of the problem arises from users’ attempts to
organize a large number of messages into a filing
system [8] . In practice, users find creating an efficient
filing system and choosing appropriate folders a
difficult and time consuming task [2] [8] . As a result,
searching and retrieving information from email
messages is also challenging. Therefore, users often
leave their messages in the inbox both to keep their

tasks and to-dos available and as a reminder that further
actions are required [8] .
Another problem with email is the limitation of this
medium as a file transfer tool, though it is used
extensively to exchange documents. The lack of version
control on the attached documents makes the tracking of
document revisions difficult. [2]
There are also other problems related to task
management in email such as: managing deadlines and
reminders, grouping messages of a thread and related
files, and getting a task-oriented view. [1]
Email clients generally seem not to have progressed
correspondingly to handle these new email functions.
Therefore, email clients need to be redesigned to help
users in classification and structuring of email messages
into workable units to get a better overview of the
contents and context of their mailbox.
Several solutions have been proposed by email
researchers to create a better email client. Threading for
example provides users with the context, history, and
status of a thread and reduces the inbox clutter [8] . The
benefits of a threaded email client are: better local
context from displaying a message along with all related
messages, a greater global context to view more
conversations by collecting messages of a thread into a
single entity, and valuable global operations for group of
messages rather than single messages that reduce the
user’s effort for handling messages [6] . Other
suggestions include:
x Semantic clustering of related messages and
documents to view contextual information and
reduce clutter. [8]
x Marking particular inbox items as action items such
as to-dos, reminders, and so on. They must be highly
visible and re-appear as action items in time. [8]
x Ability to file attachments separately from mail but
keep links between the message and attachments. [6]
x Ability to make reference, perhaps by hyperlinks, to
sub-components of documents, such as a particular
paragraph in a document. [2] [9]
x Prioritized list of pending messages to help users
catch up with accumulated email. [6]

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

The paper begins with a discussion of related research
and then presents our design ideas, incorporated into an
email visualization tool called EzMail. The results of an
email user survey to explore email users’ management
habits, and a user study to evaluate EzMail are described.
We conclude with some suggestions for future work.

2. Related work
Several approaches, including visualization, task
management, and automatic classification, have been
proposed to help address the problems of email clients.
Email visualization has been applied in two ways [4] .
The first approach is the visualization of the activities
performed in email such as tasks and threads. The other
approach is focused on the visualization of email to
reveal patterns in communication such as usage patterns
and social connections.
Rohall et al [5] have designed several email
prototypes in a project on Reinventing Email (ReMail).
They use tree structures combined with timelines to
visualize the relationships among messages in threads
and among people involved in the conversation. There
are reduced-resolution color-coded overviews of
messages to visualize the structure of documents and
help users pick out different types of email.
Venolia and Neustaedter [7] present a mixed-model
conversation visualization that supports two models of a
conversation: a sequential model that creates a
chronological list of messages clustered by conversation,
and a tree model that specifies the sequence of replies in
a thread. It shows the conversation messages along with
their contents in a chronological order. A schematic
overview of the conversation tree keeps the context in
view.
Thread Arcs [3] is a thread visualization technique
that encodes the chronology of a thread by placing
message nodes in a linear layout and shows the context
of the thread by connecting nodes with relationship arcs.
This layout gives a compact and stable visualization of a
thread capable of highlighting a number of message
attributes such as messages from a sender or unread
messages.
Taskmaster [1] is a task management environment
that groups task-related messages or thrasks including
single messages and messages of a thread along with
their attachments and links. Meta-information like
reminders, deadlines, and flags can also be added to the
thrasks.
The goal of our approach is to apply information
visualization techniques to assist with information
management and retrieval in email clients. The inherent
relations among textual elements of a mail system
suggest the use of document visualization and graph

visualization techniques. In particular, we have focused
on thread visualization to provide contextual information
and conversational history for messages in EzMail.

3. EzMail
EzMail is an email visualization tool that runs in
conjunction with a user’s default email client and creates
a multi-view interface for email messages. Our primary
focus is to group and visualize messages as part of their
conversational thread, displaying the content of messages
in detail while both preserving the contextual overview
and visually representing relationships among messages.
Threading collects messages of a conversation
scattered throughout the mailbox and presents them as
one entity. We defined threads in the usual way, as
collections of messages with the same topic, where the
topic of a thread is the subject line of each message after
stripping all the “Re: ” and “Fwd: ” tags from its
beginning and end. To increase the reliability of this
method, we then compare the senders and recipients of
those messages to ensure the sender of a child message is
among the recipients of the parent message. If this is not
the case, we conclude the messages do not belong to one
thread despite sharing the same topic.
The main interface of EzMail (Figure 1) consists of
five interconnected views to display messages at several
levels of detail, providing a kind of focus + context view.
The folder view lists personal email folders created by
the email user.
The list view shows a list of all messages in a selected
folder. Each line in the list represents a message whose
attributes (subject, sender, and date) are displayed in
three columns. To show messages in the context of their
threads, messages are clustered by thread topic and
sorted by date in descending order. Sorting the list by
sender or date results in a standard linear list without
thread groupings. Messages in a thread are displayed in a
tree structure. The root message is the root of the tree
and replies are displayed as children of the root,
indicated by indenting. Icons at the left of each row
indicate ‘read’ status. Icons for threaded messages show
whether a message is a ‘child’ or a ‘root’. Unread
messages are bolded.
Selecting a message in the list view shows its contents
and header in the message view.
The greeked view is a kind of high-level overview,
showing relative sizes of messages by displaying them as
horizontal lines with the length of the line proportional to
message length. The replies in a thread are indented as in
the list view. Thicker lines indicate unread messages.
This presentation gives an overview of the structure of
messages in a smaller view and allows the comparison of
messages based on their size.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Figure 1 EzMail interface
The node view (Figure 2) is a more detailed graphical
presentation of messages in the list view. We have used
clustering to group messages based on thread topic and
enclosure as a visual structure to show messages of a
thread. Any singleton message or root of a thread is
represented by a frame node whose title is the subject of
the message. The replies in a thread are shown as box
nodes inside the root frame. The width of a frame node is
proportional either to the character length of the subject
or to the width of the box nodes inside, whichever is
bigger, and limited to the width of the node view.
A simple layout is used to show the structure of
messages by placing the frame nodes in a chronological
order, and clustering the messages of a thread inside their
frame in a temporal order from left to right; this reduces
interface clutter and space needed for nodes, giving a
clear view of messages and threads.
Graphical views (greeked and node views) allow
adding visual cues to represent attributes of a message
such as attachments and annotations. Each attachment is
represented by a small blue line (greeked view) or square
(node view) at the lower right corner of the message.
Clicking on attachment cues shows a list of attachments
in text form.
A small white, yellow, or red line (greeked view) or
square (node view) at the upper right corner of a message
indicates a normal, high, or very high priority annotation
on the message. The annotation is accessed by double
clicking the visual cue.

Annotations

Frame node
Attachments

Box node

Figure 2 Node view
Two additional views have been provided to help in
managing messages. The thread view (Figure 3) collects
and displays messages of a thread from all folders in the
mailbox. This view provides both context and history for
a message and helps users get an improved overview of
conversations and their messages, status, and
participants. The sender view collects and displays
messages to or from a given correspondent from all
folders. Both views are accessible from the main menu
or a pop-up menu in the list, greeked, and node views.
Both views have a list of messages sorted by date and
clustered by thread, as well as a node view in which

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

frame nodes represent folders and the contained box
nodes correspond to messages from that folder.
Attachments, annotations, and unread messages are
shown as in the main view.

Figure 3 Thread view
Two additional functions support task and
communication management. The first is message
annotation, which may serve as a reminder or to-do. Text
can be added and edited, and a priority can be set
(normal, high, or very high).
Second, EzMail also supports replying simultaneously
to several messages allowing a user to gather two or
more threads together. Most email clients support only
‘divergent’ conversations; topics may be added and
refined, which differ from face-to-face discussions where
participants pull ideas from different discussion threads
to summarize or to create new ideas. In fact, drawing
conclusions, reaching agreements, creating hypotheses,
and summarizing results are the main objectives of many
discussions. This powerful function thus adds
considerable utility.

4. Email user survey
To explore how email users manage their messages,
we conducted a small user survey, asking participants to
complete a questionnaire and describe their email habits,
preferences, and difficulties. We selected our subjects
from both academia and industry: three professors, three
students, and eight directors or managers. Most were
high-volume email users. The questionnaire addressed
general issues, foldering, threading, attachments, and
email management.
We noted much variation in email programs: 14
different programs for our 14 subjects. Each subject
might use 1-4 different programs based on the platform
on which she or he works at a given time. On average,
subjects spent about two hours a day dealing with their
email and half the subjects checked for new mail more
than once per hour. On average, about 20 messages/day
were sent, and 60 received.

Folders were used in two ways: archiving old or
passive items and organizing active messages.
Participants used folders “to organize communications
with a variety of people for a variety of purposes”, “with
the hope of finding messages quickly”, “to organize mail
into hierarchical categories”, “to decide what to read now
vs. later”, “to group similar messages for later reference,
responding or deleting” and “to identify ‘action’ or
‘urgent’ messages”.
Despite this effort on organizing, on average, subjects
had a high number of messages (about 650) in their
inbox. The maximum number of messages in a folder
had a wide range with an average of 500. The total
number of messages in all folders could be also very
high for those subjects who kept most of their messages.
The largest number was 22,000 and the average was
about 5000 messages. Half the subjects had less than 20
folders. The most used criteria to create folders were
sender and topic; date, organization, threads, workflow,
attachment size, and research group were also used.
Visual scanning and search were the two most popular
methods to retrieve messages from folders. Automatic
filtering was only used to filter spam or messages from
specific senders or mailing lists.
We found that 86% of the participants used threading
and did not find it difficult. A possible explanation is that
they usually followed recent conversations that might
still be in the inbox. Sort and scan were the more popular
methods to track a thread. ‘Grouping’, by which we
mean collecting messages of a thread, was not very
common though often felt to be helpful [6] [8] .
An important problem with threading is ‘missing’
messages as a result of users either choosing to delete
some received messages or not saving sent messages.
Almost all subjects saved sent messages ‘always by
default’. On average, subjects included the original
message in their reply ‘quite often’ (5.07 on a 1-5 scale
and 6: always by default). They ‘often’ (3.29) replied to
a message instead of creating a new message to avoid
retyping the recipient’s email address. When their reply
was not relevant to the original message, they ‘usually’
changed the subject (3.86) and deleted the original
message from their reply (3.79). The habit of replying to
an unrelated message increases the number of messages
that may be misinterpreted as messages of a thread.
Among the comments and complaints about threading
were “collecting sent and received messages together”,
“losing the link to the thread when they file it away”, and
“grouping messages of a thread in a temporary folder”.
The main complaint with attachments was their large
size often exceeded mail quotas, and the lengthy
downloading time over dial-up connections. Another
complaint was versioning of the attachments. It is hard to
follow versions of attachments through several email
messages.

4.1. Discussion
Email is a significant activity, occupying 25% of a
working day. Client-based email is used more often than

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Web-based email, with Outlook being a common choice
for users in industry.
Folder use is prevalent though many find effective
message filing in a folder structure time-consuming and
inefficient, and prefer to keep messages in their inbox,
finding messages by visual scanning and search. Folders
also seem to be used either for archiving old or passive
items and organizing active messages, suggesting
categorizing our users as archivers and organizers.
Archivers keep their messages in the inbox using a few
folders to archive old items from time to time.
Organizers have a well-structured folder system, using it
regularly to organize their messages.
Users find viewing messages by sender, date, or other
attributes helpful, possibly because it reduces the need to
structure messages into folders.
Threading use seems not yet well developed, likely
due to lack of familiarity with threading and its benefits.
The results of this user survey and participants’
comments suggested EzMail’s design was at least a step
in the right direction, and we felt justified in moving on
to a more formal evaluation, which we describe next.

(p=0.047), and total task time (p=0.001), were
significantly different for the two sample groups and the
mean value for EzMail was in each case less than that for
Outlook. Completion times for finding a message in a
thread using the greeked view and finding a message
from a sender were not significantly different at the level
of p=0.05.
The average number of errors in completing the tasks
(incorrect or incomplete tasks) was less for EzMail users:
0.17 vs. 1.5, as was the average number of errors
(incorrect or no response) for task-related questions: 0.3
vs. 3. However, using a U-test, the difference was not
significant (p=0.093 for both).
minutes
10

EzMail (Total:15.8 min)
Outlook (Total:26.8 min)

5

0

find msg annotate

5. EzMail user study
We performed a user study to evaluate the usability
and usefulness of EzMail. We used a between-subject
experimental method with 12 subjects, half assigned to
Microsoft Outlook as the control, and half to EzMail as
the experimental condition. No subject was previously
familiar with the tool to which he or she was assigned.
All subjects were engineering or computing graduate
students. The goal was to compare the performance of
subjects under these two conditions.
Each session of the study consisted of a pre-session
questionnaire, a training phase, a set of tasks, and a postsession questionnaire. The pre-session questionnaire
determined the subject’s general email habits. The
training session familiarized the subject with either
Outlook or EzMail and provided a short practice period.
The subject next performed a set of on-screen tasks
based on a real scenario and was required to answer taskrelated multiple-choice questions. The session concluded
with a qualitative post-session questionnaire to explore
the subject’s opinion about EzMail or Outlook.
We wanted to evaluate EzMail visualizations for
individual messages (message itself, attachments,
annotations, and size of message), visualizations for
groups of messages (grouped by threads and senders),
and new functions (annotating messages, and replying
simultaneously to more than one message). The
dependent variables were the time to complete an
assigned task, the number of task errors, and the number
of errors in task-related questions.
We used a t-test to estimate the confidence with which
we may reject the null hypothesis. The results (Figure 4)
showed that the average times to find a message
(p=0.015), annotate a message (p=0.009), find a message
in a thread (p=0.069), reply to several messages

find in
thread

find in find from reply to
thread sender several

Figure 4 Task completion times for EzMail and
Outlook. First “find in thread” required using
different message attributes.
The post-session questionnaire suggested subjects
found EzMail easier to use than Outlook for finding
messages in a thread (p=0.093), and annotating a
message (p=0.002) (Figure 5). The difference was not
significant (performing a U-test) for finding messages
from a sender (p=0.394). An identical rating for replying
to several messages is because the EzMail users who did
not use the feature rated it as difficult.
EzMail users found its various views and functions
useful (average: 3.9 on a scale of 1: not at all to 5: very
much) and easy to use (average: 4.4). They also liked its
visualizations for a single message (average: 4.6),
messages of a thread (average: 4.3), and messages in a
folder (average: 3.3). They found grouping by thread,
thread view, and node view helpful in finding messages.
One subject found the “clean simple layout and design of
EzMail” appealing. Another subject found EzMail “a
good organized offering of different views”. One of the
participants mentioned its “ease of learning”. Two
subjects commented on the node view that gave the
opportunity “of an easy and fast scan of messages” and
“to view information about a message such as annotation
and attachments”. Another participant found “a separate
view for messages from a sender quite useful”.

5.1. Discussion
Since our subjects were not high-volume email users,
most were not familiar with threads (half said that they
did not work with threads). This group of users thus

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

differed from the participants of our user survey who
were mostly high volume email users, and familiar with
threads. We speculate that high-volume email users may
benefit more than low-volume users from EzMail and its
threading features.
user rating
EzMail

5

Outlook

3

messages and threads. EzMail integrates the traditional
file organization of messages with a graphical hierarchy
that reveals linkages and relationships among messages
and provides a high level overview of the linear
incoming stream of messages.
Next steps would include both minor improvements
such as color coding greeked messages and showing
attachment size graphically to help clean up mailboxes,
and more major steps such as the use of content analysis
to reveal patterns of social interaction among users, and
providing more robust versions for more of the major
email clients.

Acknowledgement

1
find in thread

find from
sender

annotate

reply to
several

Figure 5 Subjects’ rating of ease of performing
various tasks.
Even though somewhat unfamiliar with threads,
EzMail subjects quickly picked up the idea of threading
while Outlook users did not look for threading features.
Apparently, these features are not easily accessible for
Outlook users.
Since EzMail is a companion tool running in
conjunction with an email client, it has only a fraction of
Outlook’s features. This lack of functions (e.g. search)
made it more challenging for the EzMail users to
perform some tasks.
Qualitatively, our observations of subjects’ behavior
suggested Outlook users found it more difficult to
complete the tasks than EzMail users. This suggests that
EzMail’s features are more visible and easier to use than
those of Outlook. We note however that Outlook, being a
complete personal data management system, including
being a complete email client, is more difficult to explore
in a short time for a new user.
EzMail users, despite its limited set of features,
completed the tasks faster and with fewer errors than
Outlook users. According to the statistical results,
EzMail is significantly helpful in finding messages in a
thread, annotating a message, and replying
simultaneously to several messages.
Overall, the user study results suggest that the
threading features, visualizations, and functions of
EzMail help users work more effectively with their email
messages and threads when compared with similar tasks
using Microsoft Outlook.

6. Conclusion
Based on an analysis of email patterns of use,
problems, and solutions, we applied information
visualization techniques to devise a multi-view interface,
focusing on thread visualization. We developed and
tested EzMail as an email client companion tool with
new visualizations and functions, which resulted in
improved user performance in dealing with email

This work was partially funded by the Natural
Sciences and Engineering Research Council of Canada
(NSERC).

References
[1]

[2]

[3]

[4]

[5]

[6]

[7]

[8]

[9]

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Bellotti, V., Ducheneaut, N., Howard, M., and Smith, I.
(2003) "Taking Email to Task: the Design and
Evaluation of a Task Management Centered Email
Tool." Conference Proceedings on Human Factors in
Computing Systems, CHI’2003, April 5-10, 2003.
Ducheneaut, N. and Bellotti, V. (2001) "Email as
Habitat: an Exploration of Embedded Personal
Information Management" ACM Interactions, 8, 5, pp.
30–38.
Kerr, B. (2003) “Thread Arcs: An Email Thread
Visualization” 2003 IEEE Symposium on Information
Visualization, IBM Research.
Moody, P.B. (2002) “Reinventing Email” CSCW 2002
Workshop: Redesigning Email for the 21st Century,
http://peach.mie.utoronto.ca/people/jacek/emailresearch/
CSCW2002/submissions/Lotus-pmoody%20cscw%20
email%20workshop%20final.pdf (accessed Jan. 2004).
Rohall, S.L., Gruen, D., Moody, P., and Kellerman, S.
(2001) “Email Visualizations to Aid Communications”
IEEE Symposium on Information Visualization (InfoVis)
2001, San Diego, CA.
Venolia, G.D., Dabbish, L., Cadiz, J., and Gupta, A.
(2001) “Supporting Email Workflow” Microsoft
Research Technical Report, http://research.microsoft.
com/research/coet/Email/TRs/01-88.pdf (accessed Jan.
2004).
Venolia, G.D., and Neustaedter, C. (2003)
“Understanding Sequence and Reply Relationships
within Email Conversations: A Mixed-Model
Visualization” ACM, Proceedings of the Conference on
Human Factors in Computing Systems, pp. 361–368.
Whittaker, S., Sidner, C. (1996) “Email Overload:
Exploring Personal Information Management of Email”
ACM Conference proceedings on Human factors in
computing systems, CHI’96.
Xin, C., and Feenberg, A. (2002) “Designing for
Pedagogical Effectiveness: the TextWeaver” 35th Annual
Hawaii International Conference on System Sciences.

