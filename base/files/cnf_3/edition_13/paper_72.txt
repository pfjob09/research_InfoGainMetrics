Visualization of Multi-scale Data Sets in Self-Organized Criticality Sandpile
Model.
B. Hnat, S. C. Chapman
Space and Astrophysics Group, University of Warwick, UK

Abstract

dynamics in space and time requires simultaneous display
of structures differing in scale by several orders of magnitude. An additional challenge is that the bandwidth of the
multi-scale sandpile implies large data sets. Our selection
of a CA model for Self-Organized criticality [1] system,
that is used as an example here, is quite arbitrary. The goal
was to develop a tool for display and analysis of the multiscale structures, that is, with generic features on different
scales. To achieve that, one has to be able to select interesting regions of the structure and focus on its detailed
topology. Selecting the region of interest can be a problem.
For the sandpile problem considered here, the data set size
is so large that simple static display of the entire structure
is prohibitive. Under these circumstances an overview (a
state variable, such as total energy) can be used to summarize the data.
In this paper we present some complex problems that
arise when the large size of the data set is accompanied
by its multi-scale character. For analysis of the full threedimensional surface we need to retain all the information
required for understanding a decimated data set without a
priori knowledge of the region of interest. Here we discuss
developing, in OpenGLTM , rendering techniques for realtime display of the multi-scale data. Information of detailed
structure in the sandpile has also been coded into the sound,
which can be played simultaneously by the user to further
enhance data analysis.
Since the future goal is to port the code to
ImmersaDeskTM tracked semi-immersive virtual reality
system as a real-time computational steering application
the benefits and drawbacks of the different implementations will be discussed in some detail.

To study the three-dimensional evolution of a CA
model of a sandpile as a function of control parameters
a computational steering approach has been used. Sandpile profiles are calculated in real time and displayed in
three dimensions simultaneously with the evolution plots of
state variables. This represents a generic problem of multiscale structure in data sets derived from nonlinear systems.
The software modules were developed in OpenGLTM and
the GlutTM library and will ultimately be implemented in
semi-immersive VR on ImmersaDeskTM . To achieve sufficient speed in real time display, the full data set is represented graphically in a compact form.

1. INTRODUCTION
Most visualization techniques deal, to some extent,
with handling of the large data sets. Algorithms such as
visibility culling, triangle meshes or polygonal surface simplification are available to reduce the complexity of the
graphical representation of the model [4, 3]. Many of those
techniques, however, have serious limitations when used
for multi-scale structures that require a close-up viewing
at full resolution. Another problem that most visualization
applications must overcome is real-time managing and rendering of the data. For application that perform data storage (CAD systems) some optimization/compression of the
geometry can be performed to speed up future rendering.
Computational steering methods, however, must respond
to user’s interrupts at a speed that makes any disk storage
rather impractical in use.
Many complex physical systems generate data sets that
are both large and multi-scale. A generic class of cellular automata (CA) used to simulate complex systems are
avalanche or ”sandpile” models. Multi-scale structures are
a hallmark of complex nonlinear systems [6]. To study their

1.1. TERMINOLOGY
Figure 1 shows two-dimensional (length vs. height)
time slice of the sandpile surface. The sandpile length is
descretized (slots), each part with one unit of length. The
sand is always added to slot one, positioned at the origin
2

Height
Sand in

Avalanches of
different length

Time

Length

Figure 1. Timeslice of the sandpile evolution
surface.

Figure 2. Time evolution of the state variable.
Total energy of the system

of the graph. Dynamic rules applied to the model cause
the distribution of the sand from one slot to another. These
avalanches can move from left to right only. Avalanche
length is defined as the number of slots involved in one
slope relaxation process. The system has a single control
parameter which determines the range of interaction of the
CA (this range of interaction is referred to as correlation
length here). The system is open at the end, allowing the
sand to leave the system when boundary is reached.

Figure 3 presents the simplest technique for generating
the surface of the sandpile profile in time. A wire frame
was created using thickened lines and no lighting model
was used. It quickly become apparent that one needs much
advanced methods to visualize the topology of the model.
A polygonal surface with OpenGL lighting model was used
to generate the image on Figure 4. The three-dimensional
surface can be rotated, translated and viewed in a close-up
mode by the user.
Looking at Figure 4 multi-scale character of the structure is very obvious. The topology of the surface also varies
strongly with a distance across the system and time. Over a
short length range one can observe a plethora of short peaks
oscillating in time. The structure contains complex patterns
the user needs to extract. If we look on increasing length
scales, larger, simpler “step-like” structures are apparent.
Such large dynamic range in the structures is hard to
manage. Since different regions of the surface must be
studied in a close-up mode we cannot use anyone simple
optimization techniques for coarse graining of the entire
surface. Different regions have to optimized differently
based on the topology details they include. The simplest
regions are the ones that create flat facets. Successive vertex removal can be used for these areas as described in [3].
Smooth surfaces should be estimated more carefully. Nor-

2. STRUCTURE VISUALIZATION.
The easiest method of summarizing the evolution of a
complex system is to use a state variable graph. The simplicity of the plot allows display of the entire evolution of
the system. Figure 1 is a time evolution of the total energy
of the CA system. Although simple, the graph can present
researcher with very useful information. The existence and
starting position of the equilibrium state is important physically. Multi-scale character of the system is also revealed.
In the equilibrium state of the system the energy plot has
clearly self-repeating and, for some values of control parameters, fractal pattern. Different scales of this oscillations allow us expect the existence of the similar features
in the generated three-dimensional image.

Figure 3. Sandpile height time evolution.
Grid with no light

Figure 5. Close-up view of the surface.

mal vector direction changes can be used to estimate the
amount of information loss during the surface coarse grain
process. No simplification is possible for the most rapidly
changing areas (peaks). One could use a simple interpolation method to smooth the peaks for further close-up analysis [7]. We describe this simplification method and its
impact on the size of the data set in the next chapter.

Figure 4. Sandpile height time evolution.
Polygonal surface with lighting. The time
scale is 7:5  106 , y-axis varies from 0 to 256.
Maximum height is 104 .

Ability to view the closed-up details of the surface
presents yet another problem. In order to achieve sufficient
speed for computational steering it is not feasible to use
normal vector averaging. Since most of the surface contains flat facets this seems to be a reasonable approach.
However, once the close-up view is in use, normals may
have to be averaged for the smooth curves represented by
polygons. Figure 5 shows a close-up of the curved structure
on the surface.
The image on Figure 6 represent a special case in our
studies. An exact analytical solution exists for a sandpile
model with correlation equal to the length of the system
(both parameters equal 256 in our case) and the surface is
known to be fractal [2]. That allowed us to test the efficiency of our visualization techniques against the existing mathematical model.Figure 6 shows clearly the fractal
character of the system - i.e., self repeating patterns in both

Figure 6. Fractal character of the surface revealed.

the length and time directions. Regions of fractal structures are revealed in all our images once correct visualization techniques are used.

2.1. COLOUR CODING AND SONIFICATION.
To encode more data elements into three-dimensional
structure we also used color meshing to represent certain parameter. Figure 7 shows 250 records output with
avalanche length encoded as a color mesh (greyscale here).
Adding color increases already large amount of data per
vertex, therefore we limited it to images of the small size
(250 - 500 records). In our case color coding also required
different algorithm for surface optimization. Coarse graining was run only along one direction (y-axis) since each
polygon strip required different color.
Quantitative sonification was also used to enhance
user’s experience of the explored system. In our case we
used sound to improve the analysis of the most complex areas of the surface. The frequency of the sound, its volume
and duration are all based on the sequence of avalanche
lengths in time. The choice of the parameter was based on
the analytical solution presented in [2]. In this special case
of the sandpile with correlation being equal to the length
of the system, avalanche lengths are shown to only exist

Figure 7. Color meshing of the avalanche
length (shown as greyscale).
with lengths 2N cells (where N is an integer). For other
values of the correlation length, avalanches cluster around
values of 2N . The avalanche lengths are hence approximately, always linear on the logarithmic scale and so are
tones in the octave. Combined with a “close-up”view of the
structure sonification is an additional tool for visualization
of the multi-scale topology. We should mention, however,
that the large disadvantage of sonification is that various
parameters describing the sound can influence each other
(i.e., the volume and the frequency of the sound) giving
false perceptions of the changes within the system.

3. DATA SET REDUCTION AND SURFACE
OPTIMIZATION
The computational steering method calls for the output
data to be manipulated and recomputed with high speed. To
accomplish both requirements, the disk access must be limited to minimum and all output data should be maintained
in the memory.
The storage requirement for the presented problem
may be quite stringent. For typical system length and correlation (256 length and 64 correlation were most commonly
used) interesting behavior could be observed for amount of
sand exceeding 106 grains. Smaller values of correlation

need more sand grains to reach the equilibrium state. Table
1. presents input and output parameters of the system together with sizes of data sets before and after optimization
process.
To achieve sufficient speed and memory usage, some
simple techniques has been used. Examining closer the algorithm for our CA model one can deduce that after the relaxation the large part of the sandpile would form step-like
areas. Such structures are compatible with the run length
encoding to reduce the size of the data describing it. If the
heights in the neighboring sites are the same, or lay within
allowed difference, only one record is used to record the
heights together with its start and end position. Efficiency
of this procedure decreases with increasing complexity of
the image - the surface includes less flat areas. For the correlation length equal to one-forth of the system’s length,
however, the impact is very significant. When the correlation equals the length of the system, the size of the output
can be reduced by the factor of four.
The next step for data reduction exploits the continuity
of the time function, related to the value of the sand grains.
Instead of storing the absolute value of the sand grain we
store a first instance (for the first relaxation) and then the
difference for each record after the relaxation. The procedure can be written as:
z

0

0 =

z 0; z

0

i =

z i

,

z i

, 1

:

(1)

Both methods allowed us to reduce the output size
from about 500 MB per run to around 100 MB. Run length
encoding of the height data sets also allowed us to simplify OpenGLTM display routines. Surface coarse graining process was used to reduce the number of polygons
drawn for the three-dimensional image. Data sets were first
searched for large, flat surfaces that can be drawn as one
polygon. Then remaining, smaller surfaces were created.

Correlation
1
16
32
64
128
256

Sand
Grains



7 5  106
5 0  106
2 0  106
1 0  106

2:0 107
1:0 107
:
:

:
:

Size
Before
700 MB
500 MB
350 MB
275 MB
180 MB
160 MB

Size After
250 MB
200 MB
150 MB
100 MB
80 MB
40 MB

Table 1. Data set size before and after optimization.

Surface coarse graining methods often introduce shading
problems. The problem appears where the surface bends
sharply and the polygons were used to describe a smooth
surface, rather then facets. In our case however the large
areas are flat facets and the curves are made of small polygons for which normal vectors do not have to be average,
since run length encoding maintains the original accuracy
of the calculations. Once ”close-up” functionality is added
to an application, allowing the user to view the three- dimensional graph in more detail, normal vectors need to be
processed differently to avoid the problem. The standard
procedure involves calculating normals for the polygonal
facets, averaging them and then assigning them to a vertex
that the neighboring facets have in common.

4. FURTHER DEVELOPMENT
The ultimate goal for this development process is
to port the simulation into an ImmersaDeskTM semiimmersive virtual reality environment. An eight processor Onyx2TM will be used to calculate multiple instances
of the sandpile running under different control parameters.
Higher computational capability would allow us to view
multiple surfaces and compare their structures. The number of records displayed in three dimensions could be increased also (currently maximum of 4000 records can be
drawn).
Porting the code to a semi-immersive environment
presents certain problems. The user interface must be modified to implment pop-up panels to allow the user to access
parameters with a wand; as there is no keyboard access.
Selection of the time interval of the data and the length
interval of the sandpile, currently done through the state
variable window, may be changed to a cube selection directly from the surface model. Apart from the changes
associated with change of the environment new features
will be added to existing application. Normal vector averaging combined with edge detection will be introduced
to improve smooth surface close-up view. A linear interpolation algorithm is required to enhance most complex surface details in the areas where many rapid changes appear
on a short length/time scale. Texture mapping should replace simple colour meshing technique to avoid the constrains that colour meshing puts on the surface simplification. Ability to generate cross sections of the surface will
also be explored.

5. Acknowledgment
S. C. Chapman was supported by a PPARC Lecture
Fellowship and B. Hnat was supported by HEFCE for this

work.

References
[1] P. Bak, C. Tang and K. Weisenfeld, Phys. Rev. Lett.
118, 381 (1987).
[2] P. Helander, S. C. Chapman, R. O. Dendy, G. Rowlands, and N. W. Watkins, in press at Phys. Rev.
[3] P. Lindstrom, G. Turk Proceedings of IV 98 Conference, San Francisco, 1998.
[4] M. M. Chow Proceedings of IV 98 Conference, San
Francisco, 1998.
[5] H. J. Jensen, Self-Organized Criticality, first edition,
(Cambridge University Press, Cambridge, 1998).
[6] M. F. Barnsley, R. L. Devaney, B. B. Mandelbrot, H. O.
Peitgen, D. Saupe, R. F. Voss ,The Science of Fractal
Images, (Springer-Verlag, NY, 1988)
[7] Alan Watt and Mark Watt ,Advanced Animation and
Rendering Techniques, (Addison-Wesley, NY, 1998).

