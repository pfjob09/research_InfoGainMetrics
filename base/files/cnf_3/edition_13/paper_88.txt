Fast 3D Visualization of Road Product Models
Andrej Tibaut, Branko KauCC’, Danijel Rebolj’
Civil Engineering Injormatics Lab
Fc1cu11y qfCivi1 Engineering, University ojA4arihor. Slovenirr
an&e]‘. tibaut@uni-mb.si

Abstract

visualization of the designed object. 3D visualization
can be very widely applied. Let us look at some of the
possibilities:

Due to its monolithic nature, 30 visualization software
integrated wzth legacy engineering applications contain
every possible,feature you might use - whether or not a
user really wants them. With the advent of distrrbuted
interpreted
otj]ect.c
and
platform-independent
languages such us Java und VRML it IS possible to
d e v e l o p cross--plaffbrm p o r t a b l e 30 vrsualrration
softwurc as components that work tn an ease-to-use
manner. Adopting these advances, fast 30 v,sualization
can considerably srmpl@ the job of maintaining the life
cycle qf a road integrated within an agreed road
product model.
This paper alms to rntroduce new levels 01 support to
engineers throughout the integrated product life cycle
b)J dealtng with i s s u e s s u c h as f a s t platformindependent 30 visualrsation und product modelling
using roads as an example.

1.

2.
3.

According to the arl-anzement of required data for
generation of the 3D geometric model. two general
cases may occur:

1.

2.

1. Introduction

design software contains only basic data to which
the missing data required for visualization must be
added,
all the required data for visualization is included. in
the proper form. already in the program.

An important characteristic of the first case is
unconnected data structures. which are subordinated to
the procedure of conventional Iroad design. This is
particularly true with the upgrades of the different
universal CAD software. where extra-specialized
functions for road design are included, and which are
above all directed to the composition of drawings designs. From the point of view of 3D visualization. the
deficiencies of the software in the first case are obvious:
not only that steps towards a 3D-road presentation
require considerable extra effort. but they are also nontrivial.
In the second case automatic visualization can be
discussed, because after the design is complete all that
is required for visualization is. literally, the touch of a
button. However, the automatic generation of the 3D
model is possible only with software, which at least
possesses a suitable integral road model - a data
structure therefore. in which the [road axis. the elements
of the crossection. and the terrain are all linked
together. There is much less software, that contains an

Since the term visualization (see [McCormick 19871)
has found its place in the computing dictionary it has
brought substantial benefits to the areas where the
visual perception and graphical human-machine
interaction accounts for better understanding of
problem domain.
The historical trend in the field of 3D visualization of a
road has been: to help designers and other experts to
evaluate the design and compare different variants on a
visual basis and to present the newly designed road to
many different groups of interested non-experts. In both
cases there is a need for immediate and efficient visual
information that can be easily understood and
manipulated.
With the fast development of hardware and graphic
software, high quality computer visualization of
planned or existing building objects was made possible.
Also. in the field of roads, specialised software for road
design, apart from the usual 2D design drawings,
includes more or less realistic, static or dynamic, 3D

572
O-7695-0210-5/99 $10.00 0 1999 IEEE

a simultaneous 3D visualization during the design
stage provides engineer-s with 3D view of a
product,
virtual drive-on simulation sums up impressions
about the road quality.
fly-over simulation surveys the harmony of road
and terrain.

usually a CAD system. However, without a welldefined model, subsequent applications must be
modified whenever the primary application changes. To
date, the models for areas such as CAD geometry have
been the geometric models of popular CAD systems
s u c h a s AutoCAD, CATIA. Pro/Engineer. and
Unigraphics [Loffredo 19981. Because the models are
structurally and semantically rich, developers can only
afford to build tools around these successful models.
In practice, only) small. highly focused, applications
are ever developed by anyone other than the primary
application vendor. The resulting situation is that only
special-purpose
applications, c o n t r o l l e d b y C A D
vendors, are used to describe complex engineering
products. Also, mainstream CAD applications are
monolithic and vertically subordinated which in
consequence doesn‘t leave much space to other
applications that could improve segments of a market.
Industry has begun to addi-ess this pi-oblem by
developing standard engineering infor-mation models,
The ISO- Standard for the Exchange of
Product Data (STEP) contains formal descriptions of
the information used by the engineering activities in a
product lifecycle [Helpenstein 1993, IS0 1994a]. It
provides users with the ability to express and exchange
digitally useful product information from design to
analysis, including manufacture. quality control testing,
inspection, product support functions. and even product
demolition. In order to do this STEP must cover
geometry, topology. tolerances, relationships. attributes,
assemblies, configuration and more. To accomplish this
ambitious goal, STEP has been divided into multi-part
standard. The STEP parts cover general areas. such
testing procedures, file formats, and programming
interfaces, as well as industi-y-specific information.
STEP is extendable. Industry experts use tools to detaii
the exact set of information required to describe
products of that industry. The Application Protocols
form the bulk of the standard, and are the basis for
STEP product data exchange. Application protocols are
available for mechanical and electrical products. and
are under construction foi- composite materials. sheet
metal dies, automotive design and manufacturmg. and
others. Over time, many industries will develop their
own application protocols.
Another specification for industry inthi-mation
models is known as Industry Foundation Classes (IFC)
and supported through the International Alliance for
Interoperability (IAI). The IFC aims to serve as a basis
for project information sharing in the AEC
(architecture, engineering. construction, and facilitiesmanagement) industry. The information sharing is
world-wide, throughout the prqject life cycle. and
across all disciplines and technical applications.
The IA1 with its IFC I.5 [released in 1997 is rather
new and yet to come. M uch more work has been done
in product modellins within the STEP community.

integral road model, and even the software that does is
mostly specialised for photorealistic survey. A huge
amount of extra data is therefore required for
visualization. In each case the software modules for 3D
visualization (or at least for the generation of the 3D
graphic model, which can be written into one of the
more or less standard graphic formats) are inseparable
parts of the road design software packages. However.
dynamic jD visualization is often needed elsewhere as
well - not only for those who are directly involved in
the design of the road geometry. It is also interesting for
investors, analysts and jurists, who are included in the
purchase of the land, for ecologists and last of all for
the general public, who are more and more involved in
the decision-making process, and for whom an
objective and above all understandable information is
required.
What is needed therefore, is open and independent
visualization software, which can be easily used by
everyone who will have access to appropriate data
about a road.
Our research group has for the last few years been
focusing on the integration of computer-supported
processes of the life cycle of building objects especially roads. We have designed an open and
integrated product model of a road. For the last couple
of years we have been constantly refining model’s
elegant internal structure by reverse-engineering it
through several various software components that we
have implemented. The present model’s structure has
been most influenced by the software component,
which automatically generates a 3D graphic road
model. The latest version of the component has been
developed in Java. It transforms the model of a road
into a VRML representation, which can then be
presented on the WWW. The VRML representation of a
road is suitable for distributed environments where
virtual teams are often brought together for a project
and then break apart on completion.
The product model and 3D visualization will be
described further in the rest of the paper.
2. Product

models versus legacy
information models

Design and engineering companies want to integrate
their engineering process around a product model. One
reason for this is because engineering applications have
information
models. These
unusually
complex
information models are complex because engineering
applications manipulate simulations of the real world.
lntegration
around product model can enable
concurrent engineering - a process where multiple
engineers work on different facets of a product
concurrently.
Often. the information models exist only as program
language structures taken from a primary application,

573

For the vast majority of known software used in road
badly linked or unconnected data
construction,
structures are greatly significant. Out there is a software
on the market which relies on an underlying road model
in form of integrated data structures where the basic
elements. like the road axis, crossection elements and
terrain are mutually linked. But such road models are
usually not interoperable with other software. This
means that the program can not export its model to
other software without considerable loss of information.
This is very common with software where standard like
IGES, CGM or DXF are used for description of
geometrical data. A good example of commercial road
design software where the underlying road model is not
open is Plateia, an AutoCAD based software package
developed by CGS Software (llttp:/!ww\~~.c~s.si).
Plateia, which has been widely accepted by engineers.
supports the procedure of conventional road design
through features that surround an in-house road model a collection of scattered data tiles. This makes Plateia
not interoperable with other software that support the
building,
usage.
phases (planning,
follow-up
maintenance) of the road lifecycle. This accounts for
yet another vertically integrated road design software.
New standards in the field of information exchange
offer greater possibilities for more integral external
descriptions of building construction m o d e l s including roads. We could for example integrate axis
elements with crossections to form a more compact
model, with the standard for the semantic description of
the graphical layers [Bjork 19961. H o w e v e r , t h e
description of complex constructions with the help of
layers has other disadvantages. It is unsuitable when we
wish to derive one model from another, in order to
produce a different view of a building construction,
because direct integration of particular data in different
layers does not exist as such.
STEP, as the more universal standard, has been
gaining in popularity within the AEC community
because it goes considerably further than just
transmitting two-dimensional drawings (as does the
IGES). It transmits complete product models. STEP is
slowly. yet rather successfully getting importance.
especially for use in very complex projects [Hardwick
19971. One of the early projects that aimed to develop
product model for highways started around 1990 at
Rijkswaterstaat and TN0 in Holland. After several
years of unsuccessful attempts to propose the resulted
Road Model Kernel [Willems 19901 as an ISO/STEP
application the prqject was shut down due to model’s
complex data requirements that existing road design
applications couldn’t provide. In 1994 new project with
more limited scope was derived from the previous one.
It deals with integration of road shape modelling
( R M S K - Road Model Shape Kernel) and product
modelling [ Willems 19981
The largest project concerning road product
modelling is running in Sweden. Swedish National

Road Administration wants to see its STEP based Road
N e t w o r k M o d e l [http:liwww.eurostep.com/]as an
international standard.

3. MCT - a step to road product model, yet
without STEP
While facing the emerging need for the integration
of computer supported processes of the life cycle of
building constructions. roads in particular. our research
group CGI initiated the prqject for development of an
open and simple road product model. The project is
expected to shift the current road construction practice
from the “human-only understanding of drawing”
towards the more meaningful product data structures
that define the semantic context of geometry data.
The development of the road model can be followed
through [Rebolj 19931, [Tibaut 19941, [Rebolj 19951;
[Rebolj 19961, [Rebol.j 1997a]). The road body model
(MCT), as we named it. serves as a starting-point for an
improvement of data exchange among existing road
design software that supports different phases of the
road life cycle.
The linking element in the model structure is the
Prqect, which includes the main information about the
road project, as well as the essential attributes for the
rest of the structural parts (Figure I). The whole model
is defined in such a way that it enables addition-to and
modification-of the individual segments, witl1out
affecting other sections of the structure.
The Corridor is a simple structure, which defines the
possible borders within which a road may be located. It
is important in the early phase of a road life cycle. when
the most suitable road corridor is selected and the first
approximation of the road axts is elaborated. The
corridor is again used in the road geometry definition
phase (road design), since it determines the design area.
After the geometry of the road is defined, the corridor
represents the external borders of the observed area.
The road is a geographical feature, therefore the
Corridor and the ROLZ/ ,cyw77~11~1~ can be seen as
thematic components of a geographic information
system (GIS). Furthermore, other spatial data in the
form of geographic themes (or layers) are required in
several phases of the road life cycle. For this reason, a
link to Geographic themes is provided in the model.
The details of the model description are evident from
the external representation of the model - the metafile
of the road (Figure 2) which serves as a data translator
between applications involved in the road life cycle.
The first step in our approach was a simple metafile,
c a l l e d mCT (road body metafile). We have
implemented interfaces fat- import/export of mCT
between software packages that are being used in many
planning and consulting bureau’s and are included in
the road life cycle. mCT has a Ihierarchical structure and
is stored as a text file. Its components are described in

574

the form of sections, subsections, etc. Different sections
always beFin with the section name, which can be
found in the square brackets, and end with a neb’
section or with the end of a file. The metafile can

comprise only several sections. depending on the
project phase and the choice of the user.

Project

I

I

~~~~
~ Geographic
1 themes

Road
geometry

!_

I
:
Crossectlon

/
I

Figure 1. Main structure of the road product model
It seems to be best, if the model is designed and
described with the help of a standard like SI’EP
([Bakkeren 1994]), but at this stage our in-house
description proved itself to be more easy to implement
than complex STEP Interfaces [ Rebolj 1997aJ.
Besides visualization. the road model, explicitI\
described with the mCT. can also be applied to sipht
d i s t a n c e e v a l u a t i o n (Easa 19961, noise analysis.
calculation of substance emissions and their dispersion
[Rebolj 1997b].

4. Fast 3D visualization
The road geometry in digital form is obtained from
any road design package that implements the
appropriate
rnCT
translator.
The
road design
applications tnat apply the mCT translator are Plateia
and Cador.
Generation of the 3D sraphlc model is the ke)
component of the visualization program. The basic
algorithm provides fol- the connection of corresponding
elements in ad.jacent crossectlons along the road axis.
That is how the spatial surfaces. M,hich form the road
body are created. The algorithm is constructed in such a
way, that it sprin_ps up from the road axis and connects
elements that undoubtedly belong together - e.g.
pavement. Futtel. etc. In situation, where every single
e!ement in the two ad.jacent crossections has its
counterpart. the solution is simple. If for some reason
(for example. end of futter) the corresponding element
is missing in one of two adjacent crossections. the
program searches for the best element
match in another crossection according to the
distance from the axis and side of the road (left or
right). It then tries to link two elements of different
types. according to the distance from the axis. The

algorithm generates 3D [road surface - collection of
arbitrary patches composed of triangular and
quadrangular facets ([Tibaut 19941).
The connection
b e t w e e n t h e t w o adiacent
crossections can be whether rectilinear OI- parallel to the
road axis (curved). With the rectllmear connectlon all
that is required fol- 3D hod! generation is the ci-nssection data (Figure 2. section [CROSSECTIONS]). in
the second case we also need the axis element data
(Figure 2. section [AXIS]). The rectilinear connections
give adequate visualization quality. if the distances
between the crossections al-e short enou@ (typical <
20m). In both cases. the model is more precise where
the connections are in accot-dance with the axis.
However, the generation of 3D graphic model with
curved connections can be problematic. If the spatial
curved surfaces are to be used for the presentation.
more complex graphic systems must be employed.
However, this does not fulfil the critel-ia of ease and
speed of visualization. If. on the other hand. the
interpolation of flat sul-faces. which are dispersed
between the existing crossectlons on the road axis are
used and they are connected with stralzht lines, we
encounter the problem of Inca-eased time and memory
requirements. :n the present software version the plain
rectilinear connections between the cl-ossectioiis are
used.

5.

RoadVi

First implementation of the visualization software
RoadVi dates back to 1994 [Tibaut 19941. We used
RAD tools from MS Visual Studio package (Visual
C++. VB) and Micro systems 3d Graphic Tools library
for the graphic support.

The features we have included in the visualization
software make possible:
l automatic generation of 3D graphic model,
l camera and light position,
l “drive-on”, followin_p the road pavement at a
chosen height.

*“fly-over”. followin: the chosen trajectory.
simple shading,

l

l export of the 3D Fraphic road model to the
VRML format.

[PROJECT]
‘comments
[NAME]
ProjectName(text)
[DESCRIPTION]
ProlectDescription(text)
[SCHEDULE]
Stati_date(date) Actua/_date(date)
beginning of the sectlon
[WINDOW]
[I
Y_min Y_max X_min X_max
repetition is allowed
f?
[THEMES]
world co-ordinates
X,Y,Z
Path Name Type
X’, Y’
local (crossectlon) co-ordinates
L
axis co-ordinat (statlon)
[CORRIDOR]
/talk
variables (words In parenthesis denote
[PSEUDOAXIS]
variable types)
X Y
or (eg. GLOBAL 1 LOCAL means
I
[BUFFER]
GLOBAL or LOCAL, but not both
X Y
[AXIS]
[HORIZONTAL]
X-start Y-start X-end Y-end Radius A Length
[VERTICAL]
L-start Z-start L-end Z-end Radius Length
[CROSSECTIONS]
[POSITION]
Number L X Y Z
[TERRAIN]
X’ Y
[ELEMENTS]
[POINTS]
Id X’ Y
[CONNECTIONS]
Id_startpoint Id-endpoint E/ementType(text) GLOBAL 1 LOCAL
[CROSSECTION ELEMENT TYPES]
Element_Type(text) Classftext) Description(text)
(eof)

Figure 2. Definition of the road metafile MCT.
symmetry and harmony of road. Sequence of pictul-es
can then be processed and stol-ed as an animation.

The MS Windows based implementation of RoadVi
was integrated into the Road life-cycle environment
(RO) [Rebol.i I9961 - a software frame for applications
that employ the road model MCT for different
purposes. Figure 4 and 5 show 3D wire-framed and
rendered road surface, respectively. Both pictures were
generated in RoadVi. The camera was positioned at the
crossection number 41. The corresponding road
geometry data were obtained from a road design project
in Austria and consisted of 82 crossections along the
road axis. The generated 3D road surface contained
2739 facets spanned over 3050 vertices. Generation of
the rendered 3D road surface on an average P C
(Pentium 133 MHz), took only about 5 seconds.
The camera and target position (view direction) can be
defined with a crossection number or with global
coordinates.
Drive-on feature increments the camera position
along the road axis so that one can visually evaluate the

6. VR-Vi
Among RoadVi features there is a translator for
VRML. The translator facilitates export to a neutral
ASCII file format (Fipure 3) which can be imported by
another application called VR-Vi that we have
developed in Java. Vr-Vi is a multi-thread Java based
application developed with JavaSoft’s JDK 1.2. It uses
only JDK provided packages and is therefore fully
platform independent. The standardization of the
platform independent progl-amming language Java
offers great opportunity to create highly dynamic
visualization software.
The Vr-Vi features generation of the VRML 2.0
(Virtual Reality Modelling Language) representation of
a road which gives our road model the potential to

576

expand its online interactivity. At this development
stage RoadVi exports road geometry to the neutral file
format which shows the Figure 5. This file is then
imported by VR-Vi and serves for generation of VRML
model.

, #Info

system and as such much more universal. VRML
representation enables the designers to publish the new
road variants on the Inter-net so that investors can
control progress of the project. What is Irequired for the
visualization in this case. is the VRML viewer, which is
already included in some Intel-net browsers or can be
downloaded from the Internet at any time.lot features
can now be visually trecognized from the picture,
generated in the office. It is expected that this might
speed up the process of land acquisition. Such
application wouldn’t be possible without an open road
model.
The Slovene Ministry of traffic and communrcations
and the Ministry of science and technology financially
support development of the MCT and the visualization
software. Therefore the described software is freely
available to all interested parties in the road life cycle.

1

#Author TEXT
#Date TEXT
#Comment TEXT
#Intern
#N
InternlD.lnternName,Red.Green.Blue,TextureFiieName
#Extern
ExternlD,FileName,PositionX,PositlonY.Posit!onZ
#Anlmatlons
CameraX,CameraY,CameraZ,TargetX,TargetY,Targe~,Roil
#Lights
LlghtX.LightY,LightZ.Radius

8.

#Point
PositionX,PositlonY,PositionZ

Conclusion

With our road visualization software many excellent
3D graphic pictures and animations have already been
made. The essential advantage of our work is the
generation of the 3D road model. originating, entirely
automatically, in the integrated road product model.
The multi purpose use of the model and its
standardization are therefore important. In the future.
we will use standards like STEP for road desct-iption.
Java implementation of the visualization softwar-e
RoadVi will shape the future of its development
because it eliminates problems with code distr-ibution,
versioning and more. An obvious reseat-cl1 direction is
to use Java applets for- visualization. Using Java applets.
visualization code doesn’t actually even need to be
installed on a user’s machine. Instead, code can be
loaded dynamically to user-s as required. In theory. an
n-tiered web application written in Java eliminates the
problems of code distribution and versioning. Each time
users would hit our visualization ’ Web site. they
received a new version of applet for road visualization.
Further more. the VRML translation of the road
product model’s geometry data is facilitated.
If Java 3D API and VRML become synergistic this
would accelerate the deployment of 3D content on the
Web. In spite of this compatibility. VRML support is an
important feature.
Product modelling and 3D visualization - little things
perhaps but the smn is greater than the parts.

#Faces
#Range
Po~ntbl,PointlD2,PointlD3,...,PointlDN,lnternlD

Figure 3. RoadVi’s export format
With the VRML the road model is now easily
accesible to end-users.
There’s not nearly as much excitement about VRML
today, as there was a year ago [Rist 19981. However, a
popular way to use VRML now is within a frame in an
HTML document. Users can manipulate it with VRML
browsers. Although, this year SGI terminated the
development of its popular Cosmo Player [Karpinski
19981, other VRML browsers do exist - most notably
WorldView that is now also distributed as part of
Windows 98 and Internet Explorer.
A good news for the future of VRML is that Sun
Microsystems has joined the VRML Consortium to
promote the compatibility and interoperability of its
Java 3D API technology and the IS0 VRML 97
(VRML 2.0). VRML became a standard for the
encapsulation, delivery, and playback of interactive 3D
graphics on the Internet or intranets. Java 3D is a
general-purpose, scene-level 3D graphics API extension
to the Java language.
Figure 6 shows the same road in VRML (it can be
OUI
obtained
from
Web
site
at
http: ‘ham~rl.ulli-mb.siicri). It was generated with the
Java version of RoadVi. In this version we made our
road visualization software independent from operating

577

Figure 4.3D view of the wire-framed road generated in RoadVi

Figure 5.3D view of the constant shaded road generated in RoadVi

578

Figure 6. VRML representation of the road generated in Java version of RoadVi

9. References

Hartman. .I.. and 1. Wernecke. T/Z I’RA4L 2.11
Handbook. Addison-Wesley. Reading. Mass.. 1996.
[Helpenstein 19931
H e l p e n s t e i n I. IHrlmut: C A D Grometl-y D a t a
Exchange using STEP. Springer-Verlag. ISBN 3540-56902-2. I9Y3
[ISO I9941
I n t e r n a t i o n a l s t a n d a r d IS0 1 0 3 0 3 - l Part I :
Overview and fundamental prmclples. 1st Edition
1994-12-15
[Karpinski 19981
Karpinski. Richard. .S’o//wtrre un/t closing clouds
J~RRA4L’s,/urnre Inlernrt\\eek. 07~13198. Issue 723.
~14. 116~
[Loffredo 19981
Loffredo. David. E//?L.IP/I/ Dtr/obase

[Bakkeren 19941
Bakkeren. W.I.C. Inregrnlrnp Strucrurui Design and

.-J~~a/m/s through Product A4odeling. Proceedrngs
o/C/B W-8 M’orkshop on Compu/er /ruegrated
c‘ons/r7~~~0~~, Helsinki. Finland. 1994.
[BJOI-k I9961
B.ji,rk. 13.. K. Lownerrz. A Kiviniemi. /.%I 13.i6-

The proposed ~nrrrnnrronai srtrndordfor srr_7~crw,ng
ityers ,n computer orded hrild/ng desryn.
C‘o~~strllcr/or; nE rhe r~?formallon hrgl”l:a>
Unlvcrsity ofL.jubl.jana. 1996. pp. 77-88.
[Easa 19961
Easa. Said M.. Abd El Halim. Hassan Yasser. S/p/u

dIs/ance evol7ra1ron on complex hrgl7wa.v verrrcnl
a//p,lments. Canadian lournal of Civil Enginerrlng.

lmplemer~tn!ton o/ K\‘l’RE.C5’ I/~formotro~? A4odeis
PhD Thesis. Rensselaer Polytechnic Institute. Troy.
New York. Ma\ I998
[ M c C o r m i c k 19871
B. H. McCormick and -I-. A. DeFanti and M. D.
Brown. “Visuallzatlon 111 Sclentitic Computing”.
Computer Groph~c.~. h\rn\ 1987. Vol. 2 I. No. 6
[Rebolj I9931

Vol. 23. No. 3. .lune 1996. pp 577-586
[Eckel 19981
Eckel. BI-uce. TI71knp 111 Java. ISBN: 0136597238.
I I52 pasrs Prentice Hall. 1998
[Hnrdwlch I9971
I-lardwick. M.. D. L. Spooner. T. Rando. and K.C.
Morris Dora pro~ocols,for the ,ndusrrrnl virtual
eu/erpr7sc. IEEE internet computing. Vol. I. No. I
January - February 1997. pp 20-29.
[Hartman 19961

579

[Rebol,i 19951
Reho1.i. D Integrated road design and evaluation
environment. Comp~~trng ,n evil and huildrng
eng/neerrng A. A. Bakema. Rotterdam, 1995. pp.
1111001-1006.
[Reboil I9961
Rebo1.j. D. lntepraled rnJormatron s)srem
.w,u,uorrq road design, evalunr/on, nnd
consfrltction.. Computing & information technolog!
for architecture. engineerlne & constructton CIPremier. Smgapore. 1996. pp. 281-288.
[Rebol,i 1997a]
Rebo1.i. D. .4 product model of a road. /KIV
li?lri-r!nrlonnles Kolloq~r~um irber Anwendungen de/
I~?/ormatik lrnd A4aihematrk in Archirekiur und
B~w~vesen Bauhaus - Universitlt Weimar. 1997.
dleital pt-oceedinss on C D - R O M .
[Rebol,i I997b]
Rebo1.i. D.. P. 1. Sturm. and S. Hausberger. &nom/c
esllmation and vrsualrrairon ofroad rraj’c relnred
nrr po//utio,l. Proceedings of the Power Engineering
Expert Meeting. Univerza v Mariboru. 1997. pp.
c/201-210.
[Rist I9981
Rist. Oliver. I’RML: Notgwx and notjorgoiien,
eilher. Interne:week, 01112198 Issue 697, ~29. 2/5p.
[Tibau!

19ki]

l‘ibaut. A.. D. Rebo1.i. lisua/fsre~~~r?g des
.~rra~enf~or~~ern~odells. Proceeding of
lnternationales Kolloquium iiber Anwendungen der
Informatih und der Mathematik in .%rchitektur und
Rauwesen. held in Weimar. German)~. p. I5 I - 156.
3. 1994.
[Willems 19901
Willems. P.H. Road A4odel Kernel. TN0 Building
and Construction Research. B-89-83 I March 1990.
[Willems 19981
Willems. P.H.. Co/zcq~!,cllnl hdodel/,ng o/S/ructwe
and Shpe 0fComple.x Cwfl Eng/neering PrqecI.7
PhD Thesis. Delft University Technolog!
Ceptember 1998.

580

