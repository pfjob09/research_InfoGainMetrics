An Empirical Study of Task Support in
3D Information Visualizations
Ulrika Wiss1
E net AB
Aurorum 2
S-977 75 Lulea, Sweden
e-mail: ulrika@e net.com

David A. Carr1
Department of Computer and Information Science
Linkoping University
S-581 83 Linkoping, Sweden
e-mail: davca@ida.liu.se

Abstract
There is still little knowledge about what factors
are important for the usability of a 3D user interface.
We have performed a comparative study of three
3D information visualizations as a step towards a
better understanding of this. The study involved 25
volunteer subjects, performing three di erent tasks
with the Information Landscape, Cam Tree, and
Information Cube. The results of the study indicate
that the subjects were signi cantly faster with the
Information Landscape when compared with both other
visualizations. The Cam Tree was signi cantly faster
than the Information Cube. Our observations during
the study indicate that local and global overview are
extremely important factors. We also observed that
custom navigation is crucial in 3D user interfaces.
Finally, the study raises the question: "For what types
of tasks is a 3D user interface best suited?"
Keywords: 3D information visualization, usability
study, empirical study, navigation, overview

1 Introduction
Lately, technological advances in computer graphics have made 3D information visualization feasible
on personal computers. Meanwhile, the World-Wide
Web has made a vast amount of information available
to individuals. In parallel with these developments, a
number of 3D information visualizations have been invented by both researchers and commercial software
developers. But, the research community has still
made very few comparative studies of these visualizations.
The study described in this paper aims to explore
what factors are important for task support in 3D in1 also, the Department of Computer Science, Lule
a University
of Technology, Lulea, Sweden

formation visualization. Three 3D information visualizations were studied: the Cam Tree 10 , the Information Cube 9 and the Information Landscape 1, 12 .
These information visualizations all visualize hierarchical data. In our study, we chose to visualize a hierarchical le system, which is familiar to most computer
users.
The three user tasks in our study were based on
the seven high-level information visualization tasks as
described by Shneiderman 11 : overview, zoom, lter,
details-on-demand, relate, history and extract. When
designing tasks for the study, we re ned three of these
tasks into lower-level subtasks relevant to the hierarchical le system domain. Based on the zoom task, we
designed a Search task where subjects needed to zoom
into the visualization to nd directories. Based on the
relate task, we designed a Count task where subjects
counted the number of les in directories. And nally,
we designed a Compare task based on Shneiderman's
overview task, where users compared two directories
and selected the largest one.
We rst describe the three visualizations used in
the study. The study setup, including tasks, data sets,
subjects, and procedures follow. After this, we report
on the statistical analysis of the results. These results
are then discussed, and conclusions about important
factors are drawn. Finally, we review some related
work in the area and point out future work.

2 The Visualizations
In order to be able to compare task support between the visualizations, all three 3D information visualizations used in our study visualize the same type of
data, hierarchies. The chosen visualizations are all different in the way they visualize the hierarchical data.
The Information Landscape is a 2.5 D" visualization,
meaning that the tree layout is restricted to a at surface. The Cam Tree is more of a true 3D visualization,

using all dimensions to lay out the tree. Di ering from
the two others, the Information Cube does not display
the data in a traditional tree structure. It instead fully
exploits the possibilities of 3D space by representing
the hierarchy as nested cubes.

2.1 The Information Landscape
Our implementation of the Information Landscape
is based on the File System Navigator fsn from Silicon Graphics and the Harmony Information Landscape. These two information visualizations are similar, basically di ering only in how they are used by
the surrounding application.
In the Information Landscape, internal nodes are
represented as pedestal shapes standing on a at surface with lines connecting pedestals to form a tree.
Leaves are represented as box shapes standing on the
pedestals. This makes the pedestal cross-section proportional to the number of leaf children. The height
of the boxes encodes an attribute such as the size of
the data element represented by the box. Being a 2.5
D" visualization, the pedestals are restricted to a at
surface in 3D space. Only the box height makes use of
the third dimension. Figure 3 shows the Information
Landscape in our implementation.
Interactions in the Information Landscape include
selecting boxes or pedestals with the mouse and ying" up to a viewpoint close to the selected element.
Our implementation of the Information Landscape
does not include this custom navigation feature.

2.2 The Cam Tree
The Cam Tree displays hierarchies as trees of rectangular shapes representing internal nodes and leaves,
connected by lines. Each subtree is laid out as a cone
with its root at the top of the cone and the children
along the cone base. Rectangles and cones are semitransparent in order to reduce problems with occlusion. Figures 2 and 5 show the Cam Tree in our implementation.
Interactions with the Cam Tree include rotation of
the tree when a node or leaf has been selected with the
mouse. This brings the path to the selected rectangle
closest to the user and highlights the rectangles on that
path. The tree can also be pruned via a control panel
with buttons.
Our implementation of the Cam Tree did not include any independent rotation of sub-trees, nor any
pruning operations. Also, the original design included
the shadow of the tree placed underneath the tree. We
did not implement the shadow since its importance was
said to be small.

2.3 The Information Cube
The Information Cube uses semi-transparent,
nested cubes to represent leaves or internal nodes. The
parent-child relationships are represented by nesting
child cubes inside their parent cubes, scaling cubes to
enclose the contained cubes. Textual labels are displayed on cube surfaces. Color and degree of transparency indicate the currently selected cube. Figure 4
shows the Information Cube in our implementation.
The original system is designed for use with special
virtual reality equipment. The output can either be
displayed stereoscopically or monoscopically with head
motion tracking. The input device allows a model of
the user's hand to be displayed within the visualization
for grabbing, rotating, and pointing.
Our implementation includes no virtual reality
equipment or stereoscopic display techniques. Consequently, the model of the user's hand and the associated a ordances are not present.

3 Study Setup
We designed three tasks based on Shneiderman's
seven high-level information visualization tasks. The
three tasks were all related to the le-system application domain and were expected to reveal di erent
factors a ecting the task support of a 3D information
visualization.
Task 1, Search: The subjects were instructed to
nd two directories and click on them in the visualization. This task is based on Shneiderman's Zoom task,
since we expected that subjects would need to zoom
into the visualization to look for the directories, and
then zoom to the directory in order to click on it. We
thought performance on this task would be a ected by
the degree that the visualization supported a global
context while zooming in on a directory. The expectation was that the Cam Tree would provide the best
support, while the Information Cube and the Information Landscape would su er from the lack of global
context.
Task 2, Count: The subjects were instructed to
count the number of les in each of the two directories
they found in the previous task. This task is based on
Shneiderman's Relate task, since users had to understand parent-child relationship in the visualizations.
Here, we expected that performance would be a ected
by the way the visualization separates directories and
les. The Information Landscape was expected to be
the best, and the Cam Tree worst.
Task 3, Compare: The subjects were instructed
to compare the two directories and select the one that
contained most descendants. This task was based on

Level Directories Files
0
1
0
1
3
5
2
7
10
3
4
25
4
0
20
Table 1: Data set description

Shneiderman's Overview task. The subjects had to
gain a local overview of each directory to discover how
many children it contained and a global overview of the
two directories to simultaneously compare them. The
performance for this task was expected to be a ected
by the support for getting an overview of the number
of children. Here, the Information Cube was thought
to give the least support since children on lower levels
are occluded.
We implemented a visualization generator as described in 15 . The visualization generator takes hierarchical data as input, and creates any of the three
di erent 3D visualizations in VRML2.0 format. Our
implementations did not include any of the custom
interaction or navigation features found in the original implementations. Instead we relied entirely on
the VRML browser's interface for navigation and interaction. We used CosmoPlayer2.0 from SGI for the
study. It o ers all the basic navigation functions such
as: moving in all directions, rotating, undoing movements and moving to preset viewpoints. By eliminating all custom navigation, the three visualizations were
used under similar conditions. We also hoped to get
an indication of the importance of custom navigation.
We then generated six di erent data sets, representing les and directories in a hierarchical le system. All six data sets were some permutation of the
description in Table 1. The two directories involved in
the three tasks were both located on level 2 in the tree.
Using these six data sets as input to the visualization
generator, we created one Cam Tree, one Information
Cube, and one Information Landscape with each data
set.
The user interface for this study consisted of a
number of WWW pages generated by CGI scripts.
Each WWW page contained a visualization displayed
in an embedded CosmoPlayer browser plus a Java applet. The applet gave instructions and recorded times
and answers.
The 25 subjects for the study were recruited from
the student body at Lulea University of Technology.
Subject ages ranged from 19 to 35, with a median age
of 22 years. Four were female. Three of the subjects
stated that they had been using computers 1-3 years,
six for 3-6 years and 16 for more than six years. Most

subjects also used computers frequently; 19 for more
than 10 hours per week and none less than one hour
per week. When asked if they had ever used software
with 3D graphics, seven answered no and 18 yes.
Each subject spent about 1 1.5 hours with the
study, including about 20 minutes of practice tasks.
The six data sets were randomly assigned so that no
data set was seen twice by the subject. The order
in which the visualizations were presented was also
randomized, but the subjects always performed the
tasks twice with one visualization before moving on to
the next. During the study, time per task and error
frequency was recorded. The study leader also made
notes of the subjects' behavior and comments. If the
subject did not nish a task within ve minutes, the
subject was instructed to move on to the next task.
Subjects were at all times allowed to abort a task if
they felt they could not perform it without guessing.
After nishing all the tasks, a questionnaire form
was displayed for the subject. It contained background
questions about the subject such as age and computer
experience. The subjects were also asked to rate the
visualizations. Each visualization was given a rating
from 1 to 7 on four di erent scales as seen in Figure 1.

4 Statistical Analysis
Due to technical problems during the study, results from two of the subjects were removed from the
analysis. For the remaining, an ANOVA for the task
times and a Chi-Squared Test for the error frequencies
was performed.

4.1 Analysis of Task Times

A total of 45 tasks were either timed-out or
aborted by the user. All these were tasks using the
Information Cube. Assigning a xed time of 5 minutes to these tasks caused a skewed distribution of
the data, not the near-normal distribution needed for
the ANOVA. We therefore replaced this censored data
with simulated data, using the following procedure:
1. From the non-censored data, randomly select the
number of times needed.
2. Find the median of the non-censored data.
3. Add the median to each of the randomly selected
times.
4. Replace the censored data with these times.
Table 2 shows mean times for all three tasks.
For the Information Cube, both the mean including
5 minute values and the mean with the simulated
data are shown. The simulated data was used in the

Info Land
Cam Tree
Info Cube, censored
Info Cube, simulated
Simulated values

Search Count Compare
20.4
42.8
24.7
67.7
88.7
46.4
219.4 246.8
166.0
226.4 291.3
160.6
18
20
7

Table 2: Mean task times, seconds

MAIN EFFECTS F-Ratio P-Value
Search Task
dataset
2.24
0.0560
subject
1.52
0.0844
visualization
202.78 0.0000
sequence
1.36
0.2467
Count Task
dataset
1.23
0.3022
subject
3.66
0.0000
visualization
259.51 0.0000
sequence
1.17
0.3280
Compare Task
dataset
4.69
0.0007
subject
2.05
0.0091
visualization
100.11 0.0000
sequence
3.83
0.0033
Table 3: ANOVA tables

ANOVA. As can be seen, only seven values needed to
be simulated for the Compare task. The random sampling procedure resulted in some lower-range values
that had a strong overall e ect on the small number
of simulated values and resulted in a lower simulated
mean.
We found that the variance was considerably
larger for the Information Cube than for the two other
visualizations. The ANOVA requires stable variances.
To achieve this, we transformed the values with a logarithm function.
ANOVA tables for the three tasks can be found in
Table 3. To block out unwanted e ects, the ANOVA
included e ects of the di erent datasets and individual
subjects. We also included the sequence of the visualization in the analysis. The visualization e ect is in
that way cleared of any contribution from the other
e ects.
Looking at the P-Value" column in the ANOVA
tables, we see that the p-value for the visualization effect in all cases is well below .01. This means that we
can say, with 99 con dence that there is a signi cant di erence between the times to perform the tasks
with the tree visualizations. We also performed condence interval analysis on the data at the 95 level.
This analysis con rmed that for all tasks, the mean
times among the di erent visualizations are distinctly
di erent. The mean time is lowest for the Information

Search
No Error
Error
Skipped
Count
No Error
Error
Skipped
Compare
No Error
Error
Skipped

Info Land

Cam Tree

Info Cube

46
0 0 0
0

0

46
0 0 0
0

28
18 0 17
0

46
0 0 0
0

0

36
10 10 0
0

46
0 0 0
0

0

44
0 0 0
2

0

0

0

10
35 15 17
1
33
9 2 4
4

1

3

3

Table 4: Error Frequency Table (erroneous answers / timeouts / aborts)

Landscape, higher for the Cam tree, and highest for
the Information Cube.
We also see that the subject e ect is signi cant
for the Count and Compare tasks. These two tasks
required a lot of navigation. Some subjects managed
navigation well, while others had di culties with the
CosmoPlayer controls.
For the Compare task, e ects of dataset and sequence are also signi cant. In four of our six datasets,
one of the two directories contained no subdirectory.
These datasets showed the lowest mean times. Many
of the subjects did not need to count les and directories for these datasets, but instead immediately chose
the directory without a subdirectory. The sequence effect is very interesting. The lowest means were for the
second, fourth, and sixth visualizations. Therefore,
there is a signi cant learning e ect for this task. Our
observations and the comments from the subjects suggest that they learned to remember the relative sizes
of the directories from the Count task, and used this
knowledge in the Compare task. The rst time with
each visualization subjects were not able to do this,
but the second time they had grown more familiar
with the visualization and could use this strategy to
improve performance.

4.2 Analysis of Error Frequencies
As errors, we counted erroneous answers not applicable for the Search task, aborts, and timeouts.
Since the Chi-Square Test requires the expected frequencies for each cell to be at least 5, we summed
up the three types of errors into one row. In Table 4,
the number of erroneous answers, timeouts, and aborts
are shown within parentheses next to the sum of errors. The table also contains a row labeled Skipped".
The numbers in this row represent tasks that were ac-

Figure 1: Subjects’ ratings of the visualizations

cidentally skipped by the subjects. For the Compare
task, this row also includes four tasks for which subjects stated that they accidentally selected the wrong
directory while navigating.
The Chi-Square Test was performed at the 99
level of con dence. For all three tasks, the Chi-Square
Test showed that the error frequencies were indeed related to the visualization used to perform the task.

5 Discussion
So, were our initial expectations as described in
Section 3 met? Overall, the answer is no. We can,
however, see that some of the factors we anticipated
did a ect performance Section 5.1.
But, as the statistical analysis of the results show,
the Information Cube performed worst for all tasks,
and the Information Landscape performed best. Looking at the subjects' ratings Figure 1 we see that they
were overall most satis ed with the Information Landscape, and least satis ed with the Information Cube.
Our observations during the study also con rm this.
It seems factors that we had not taken into account, or had not expected to have such an in uence,
played an important role for the usability of the visualizations. Our results indicate that the most in uential
factor was overview. This can be further re ned into
local and global overview Sections 5.2 and 5.3. Navigation also played an important role Section 5.4.

5.1 Initial Expectations

For the Search task, we expected both the Information Landscape and the Information Cube to su er
due to lack of global context while zooming. This was
however true only for the Information Cube. In the Information Landscape, subjects either did not need to
zoom to nd the directories, or they managed to nd
their way around the visualization without the global
context.

Figure 2: Separating files and directories in the Cam Tree

Our initial expectation for the Count task was that
the Cam Tree makes it di cult to separate les from
directories. This is illustrated in Figure 2. The two
rectangles labeled work" and java" are directories.
The only indication of this is the cones attached to
their right side. Looking at the error frequencies for
the Count task, we note that this is the only task with
errors using the Cam Tree. We believe that this indicates that our initial expectation was correct but that
the e ect of overview was more powerful.
For the Compare task, our initial expectation was
that the Information Cube would perform worst since
children on lower levels were occluded. It did indeed
perform worst, but not more so than in the other two
tasks. This indicates that both the expected lack of
local overview and the lack of global overview a ected
task performance.

5.2 Local Overview
When examining a directory in detail, subjects
had to use di erent strategies with the three visualizations. These strategies varied due to the degree to
which the third dimension was used.
The Information Landscape is the least" three
dimensional of the visualizations. Here, a directory
could often be examined without too much navigation.
As a matter of fact, a majority of the subjects gured
out that if they ew up above the Information Landscape and tilted down, the tree of directories and les
virtually became a 2D visualization Figure 3. This
made counting les and directories faster and easier,
since subjects did not need to move around in 3D space
to look at objects from di erent angles.
The Information Cube is the most" three dimensional of the visualizations. To examine a directory,

subjects had to look into a directory cube from di erent angles to be able to see all the contained cubes.
This was made even more di cult by the fact that
adjacent cubes would block the subjects' line of sight
at times Figure 4. Several of the subjects explicitly
requested the possibility to lter out all other cubes.
The Cam Tree's degree of usage for the third dimension lies between that of the Information Cube
and that of the Information Landscape. Consequently,
strategies to examine a directory varied. Subjects were
at times able to get an overview of the contents of a directory from one single position, but just as often they
needed to navigate around the tree to make sure they
had seen everything in the subtree cone Figure 5.
Adjacent cones blocking the line-of-sight were not as
big a problem. But when we informed subjects about
the pruning function in the original design, most said
that it would have made the tasks easier.

Figure 3: Local overview in the Information Landscape

5.3 Global Overview
In addition to experiencing a lack of local overview
when studying a directory in detail, subjects also suffered disorientation and lack of global overview when
navigating. The nature of our tasks which involved
two directories in a le system made it necessary for
the subjects to navigate between directories while performing the tasks.
We observed that the subjects had big di culties
with this in the Information Cube. The lack of a global
context caused them to frequently get lost and head
back to the preset viewpoint outside the root cube,
only to get lost again due to directory occlusion. Some
subjects explicitly asked for an overview map so that
they would be able to orient themselves.
Contrary to our expectations, subjects did not experience this loss of global context when using the Information Landscape. They always had a sense of up"
and down" and could quickly nd their way again on
the few occasions they got lost. We must, however,
remember that the data sets used in our study were
relatively small. 3D visualizations are often claimed to
be useful for large data sets, so we cannot say whether
this result would have been di erent with 100 times
more data.
In the Cam Tree, the horizontal orientation of the
tree seemed to provide a similar aid in orientation.

Figure 4: Local overview in the Information Cube

5.4 Navigation
As previously mentioned, no custom navigation
was available to the subjects in the study. The CosmoPlayer navigation controls were not easy to master for
most of the subjects in spite of the practice tasks. It

Figure 5: Local overview in the Cam Tree

is indeed possible that an e cient custom navigation
might have improved the performance for those visualizations that required a lot of navigation to overcome
the lack of global context.
After the study was nished, we informed the subjects about the navigation features o ered by the original visualizations, and asked them if they thought it
would have helped. For the Information Landscape,
most thought that it was easy enough as it was. For
the Information Cube, most thought it would be interesting to try the Virtual Reality equipment, but no
one seemed convinced that this would help. Only for
the Cam Tree did the subjects reply that features such
as independent rotation of the cones and pruning the
tree would have made a big di erence.

5.5 Conclusion
To summarize, our observations show that the possibility to get a good local and global overview is the
single most important factor in supporting the types
of tasks that we studied. One way to overcome a lack
of overview is, as suggested by some of our subjects,
to provide an overview map of some kind.
Custom navigation might also be a partial solution
to the problems, but it is not clear how this custom
navigation should work. It is clear, however, that the
closer we get to a true 3D" visualization, the more
important it is to have an e cient navigation method.

6 Related Work
Information visualization designs similar to the
Cam Tree include hyperbolic-space displays 8 of directed graphs with cycles such as the WWW. The
SeeNet3D information visualization application 4 visualizes global networks on a sphere and local networks
on a map.
The Bead system 3 is similar to the Information Landscape. It displays bibliographic data with
documents as cubes interconnected by triangles in a
landscape-like space.
Nested designs, such as the Information Cube, are
more uncommon. The n -Vision system 5 visualizes
data with more than three dimensions. It uses nested
3D coordinate systems with axes. The Web Forager
and the Web Book 2 adopt a metaphorical nesting.
WWW pages are contained in books that in turn can
be contained in book shelves in a 3D room.
Previous 3D user interface studies concentrate on
the lower level cognitive aspects. One such study 6
suggests that users' understanding of a 3D structure
improves when they can manipulate the structure. Yet

another 14 indicates that displaying data in three dimensions instead of two can make it easier for users
to understand the data. Our study complements this
approach by looking at higher level aspect task support. Task support in 2D information visualizations
has been studied for example 13 , but task-oriented
comparative studies of 3D information visualizations
are still scarce.

7 Future Work

As can be expected, this study has raised more
questions than it has answered. Foremost is the question of the actual usefulness of 3D user interfaces. We
believe that for the types of tasks and data sets that we
have used in this study, a 3D user interface is probably
not preferable to a 2D user interface. But can 3D be
useful for other types of tasks? For huge data sets? In
order to make use of the possibilities o ered to us by
3D user interfaces, these issues should be addressed.
The results from the subjects' ratings of the visualizations point out an interesting angle Figure 1. The
ratings for aesthetics and stimulation were not so different between the visualizations. So perhaps, 3D user
interfaces are most suitable in applications that are
more about exploration and long-term learning, where
stimulating, aesthetically pleasing interfaces can be expected to be important.
It is clear that navigation is crucial in 3D user
interfaces. It is also clear that one ts all" is not
true the navigation features must be adapted to the
user interface at hand, and, more importantly, to the
user tasks. Navigation in 3D and Virtual Reality is
being researched, but the importance of tailoring the
navigation to the application, tasks, and users, should
be explored more.

8 Acknowledgments

We would like to thank the subjects for their participation in our study. Thanks also to Iva Tzankova,
Quality Technology and Statistics, Lulea University of
Technology, for guidance in the design and statistical
analysis of the study. We also owe thanks to Brian
Johnson for making his dissertation 7 available. It
was helpful in designing and analyzing our study. Finally, we would like to thank Carl Rollo for his help in
proofreading our drafts.
This work was partly performed under NUTEK
grant number P10552-1.

References

1 Keith Andrews. Visualizing Cyberspace: Information
Visualization in the Harmony Internet Browser. In

2

3

4
5

6

7
8

Proceedings of Information Visualization, pages 97
104. IEEE, 1995.
Stuart K Card, George G Robertson, and William
York. The WebBook and the Web Forager: An Information Workspace for the World-Wide Web. In
Proceedings of CHI'96, pages 111 117. ACM, 1996.
Matthew Chalmers, Robert Ingram, and Christoph
Pfranger. Adding Imageability Features to Information Displays. In Proceedings of UIST'96, pages 33 39.
ACM, 1996.
Kenneth C Cox, Stephen G Eick, and Taosong He.
3D Geographic Network Displays. Sigmod Record,
254:50 54, December 1996.
Steven Feiner and Cli ord Beshers. Worlds within
Worlds: Metaphors for Exploring n-Dimensional Virtual Worlds. In Proceedings of UIST'90, pages 76 83.
ACM, 1990.
Geo rey S Hubona, Gregory W Shirah, and David G
Fout. 3D Object Recognition with Motion. In Extended Abstracts of CHI'97, pages 345 346. ACM,
1997.
Brian Johnson. Treemaps: Visualizing Hierarchical
and Categorical Data. PhD thesis, University of Maryland, USA, 1993.
Tamara Munzner and Paul Burchard. Visualizing the
Structure of the World Wide Web in 3D Hyperbolic
Space. In Proceedings of VRML '95, pages 33 38.
ACM, 1995.

9 Jun Rekimoto and Mark Green. The Information
Cube: Using Transparency in 3D Information Visualization. In Proceedings of the Third Annual Workshop
on Information Technologies & Systems WITS'93,
pages 125 132, 1993.
10 George G Robertson, Jock D Mackinlay, and Stuart K
Card. Cone Trees: Animated 3D Visualizations of Hierarchical Information. In Proceedings of SIGCHI'91,
pages 189 194. ACM, 1991.
11 Ben Shneiderman. The Eyes Have It: A Task by
Data Type Taxonomy for Information Visualizations.
In Proceedings of 1996 IEEE Visual Languages, pages
336 343. IEEE, 1996.
12 J Tesler and S Strasnick. FSN: 3D Information Landscapes, 1992. Man page entry, Silicon Graphics, Inc.
13 David Turo and Brian Johnson. Improving the Visualization of Hierarchies with Treemaps: Design Issues
and Experimentation. In Proceedings of Visualization
'92, pages 124 131, Boston, MA, October 1992.
14 Colin Ware and Glenn Franck. Viewing a Graph in
a Virtual Reality Display is Three Times as Good as
a 2D Diagram. In Proceedings of 1994 IEEE Visual
Languages, pages 182 183. IEEE, 1994.
15 Ulrika Wiss, David Carr, and Hakan Jonsson. Evaluating Three-Dimensional Information Visualization
Designs: A Case Study of Three Designs. In Proceedings of 1998 IEEE Conference on Information Visualization, IV'98, pages 137 144, London, England,
July 1998. IEEE.

