Continuous Field Visualization with Multi-Resolution Textures
Ian Curington
Advanced Visual Systems Ltd.
Hanworth Lane, Chertsey, Surrey KT16 9JX, U.K .
ianc@avs.com

Abstract
A method of using a texture mapping approach to
color scales is described, for the purpose of
visualizing continuous field scalar quantities. The
technique is most appropriate where high gradients
are present in the data, or where geometric
surfaces are projected to significant screen area.
The use of texture mapping takes advantage of
widely available 3D display systems for interactive
visualization system design. The technique yields a
significant reduction in visualization artifacts
caused by color interpolation. Multiple resolution
textures are shown to improve visualizations of
high dynamic range data.
Key words: Interpolation, Color, Visualization,
Texture

1. Introduction
When continuous field numerical data is presented
in a visualization system as a continuously varying
color, artifacts can be introduced due to color
interpolation in the display system. A technique is
described using texture map color in the
visualization display, especially suitable where
small non-linear regions in the data must be
highlighted, or where the data contains sharp
gradients. The characteristics of the artifacts
caused by color are discussed first, followed by an
explanation and example of the texture color map
technique.

polygon. Although highly efficient, the technique
ignores variations in the data or the lighting
environment during interpolation, and simply
blends the vertex colors across the faces. As shown
in figure 1, the well-known artifact of “Mach
Banding” occurs where a curved surface under a
directional light source appears to have dark bands
or discontinuities in the surface shading. If the
surface color is derived from continuous numerical
data, as is the case in visualization systems, the
bands appear to be contour discontinuities. While
more sophisticated lighting models can eliminate
the banding effect due to shading, it cannot correct
for color interpolation effects when the color is
derived from numerical data.

3. RBG Color Interpolation
Most visualization systems contain operators to
map data values to color. These operators are
typically yield smooth contours, and are used to
represent continuous field data. Color map systems
are used to specify such mapping, such as blue for

2. Gouraud Shading
The common technique of Gouraud shading, used
by many 3D rendering systems, computes shading
and color information at discreet points, generally
at the vertices of polygonal objects [5]. Once the
color assignment has taken place, the graphics
system displays the object by performing linear
interpolation of the color across each face of each

Figure 1. Illustration of “Mach
Banding” effect in Gouraud shading.

a low value, and red for a high value. When applied
to data on geometry (meshes), data values are
known only at discreet points on the geometry.
Using continuous color maps, smooth changes in
color are displayed between available data points.
The way in which the color is smoothed, or
interpolated between the points can have a dramatic
effect on the interpretation of the underlying data
[2]. At best these factors display an approximation
of the data, with a possibility of completely hiding
important features in the data, and at worst create
misleading artifacts in the visualizations [4].
In many systems, the data values are sampled and
converted to color values, typically (Red, Green,
Blue) triplets at each node or vertex of the
geometry. During display, interpolation is left to
the underlying display system, which then
interpolates intermediate values by blending the
two colors using low precision color interpolation.

Blue

Red

Red

Orange
Black

Blue

Cyan
Green

Black

Green

Figure 2. Triangulation effect on interpolation.
Triangulation can also affect color interpolation. In
the illustration, the color of a point may change
from orange to cyan under different triangulation
directions. The more fundamental problem is that
colors specified in the color map may be omitted
completely. If two adjacent data points have the
colors Red and Blue, color interpolation will
generate Purple at the half-way point. If the values
are at extreme ends of the color map, and the color
map has Green at the center point of the scale, then
Green would be the expected color, not Purple.
Even when color space interpolation is desired, the
problems with using an RGB are well known, and
alternative color space models are available [3], but
rarely implemented by display system vendors.
If the color map resolution matches the data value
resolution, and the data variation across each facet
of the model is very low or close to the resolution
of the color map, then the color interpolation

method is adequate and few errors will be
observed. The highest chance of artifact generation
occurs when the data gradient is high over
individual facets, and relates the data range over
significant portions of the color map.

4. Texture Display
A solution to this situation is to use a 1dimensional texture mapping technique. Texture
mapping is an advanced graphics technique that has
become available on almost all graphics systems
through its popular use in games such as Doom,
Quake, and Tomb Raider. Texture mapping is also
well supported through software interfaces such as
OpenGL and Direct3D. Instead of passing presampled colors to the display, parametric texture
coordinates are passed, along with an RGB texture
image. Interpolation is then performed directly on
the texture coordinates (using floating point
arithmetic), which are used to look up color values
from the reference image. Pixel color assignment is
indirect, using the color image as a lookup table.
Textures have also been used to represent vector
fields, or more complex feature display of scalar
fields [1].
Using the same color map structure as used in
Gouraud shading as the reference image, the same
color map information may be passed to the
display. Display update times may be slightly
slower, since more operations are performed, and
more data must be processed by the display system,
however this is a small price to pay to achieve
interpolation accuracy. Interpolation can now show
much more detail in the original data, and show
subtle variations that are completely lost using the
usual color interpolation. Users can specify an
order of magnitude higher resolution color maps,
and the entire color map can be displayed between
two adjacent data points if needed.
Since many texture display systems need a square
image structure, a 1-dimensional color-map is
placed down the diagonal of the image. A color
map pattern is easily sketched using a paint
program to create a color map image. As so many
image handling tools exist, our prototype uses
standard TIFF images. Interactive performance of
this technique has been verified on systems ranging
from a small laptop PC to a Silicon Graphics
immersive
virtual
reality
environment.

5. Applications of Texture based Color
Maps
This texture based color map technique has been
implemented as a filter module in the visualization
framework AVS/Express. The filter takes any
geometric mesh with scalar node data, and replaces
it with a mesh with UV texture coordinate data.
The mapping matches the range of the input data,
so that all positions on a texture image source
containing color map values may be used. The
texture image source is intended as a single
dimensional color table source, with values
sampled along the primary diagonal. Because the
technique is a direct replacement for the color
interpolation technique, no additional user defined
parameters need to be specified.

The differences in detail presented in the
visualization can easily be seen in the following
comparison. In the bottom model (B), the data is
displayed using a standard color hue range from
low to high, with blue as the lowest color, and red
the highest. In the upper model (A), the same
colors are used as the texture based color map.
Much more data variation detail is shown in the
upper model than the lower, using the texture based
color map technique. The model is of a 3D finite
element analysis of a flag under windy conditions,
with resultant force magnitude values displayed as
color. Near the central crease, two bright red spots
indicate the highest forces. In the top model (A),
the red spots are surrounded by yellow, the next
color in table. In the lower model, color
interpolation skips over these values, so the yellow
rings are missing.
Multi-resolution texture images are used where the
data contains important information in different
numerical ranges. In this case a special image is
assembled with regions defined with independent
color scales that will allow differentiation of the
numeric ranges present in the data. In this way
wide dynamic range data can be interpreted in the
visualization system. The following example shows
a geologic structure with simulated oil reservoir
attribute values placed on the geometry using the
multi-resolution texture map color technique. Such
detail is normally lost using color interpolation.
6.

Conclusion

A technique is described to reduce visual artifacts
due to color interpolation using a texture map
display technique. The method is suitable for a
wide range of numerical data visualization
problems, and is especially suited to widely
available hardware, and where high data gradients
must be shown accurately. The software developed
for the research presented in this paper is available
at the International
AVS Center site,
http://www.iavsc.org .

7. References

Figure 3. Flag forces shown using (A)
texture based color map, and (B) color
interplation with Gouraud shading. Note the
yellow ring in A is missing in B.

[1] Roger Crawfis and Michael Allison, “A
Scientific
Visualization
Synthesizer”,
Proceedings of Visualization ’91, IEEE Press,
1991
[2]
Richard
S.
Gallagher,
“Computer
Visualization: graphics techniques for scientific
and engineering analysis”, CRC Press, 1995

[3] Roy Hall, “Illumination and color in
computer generated imagery”, Springer-Verlag,
1989
[4] Terry Hewitt, Manchester Visualization Centre,
Personal Communication, 1999
[5] William Newman and Robert Sproull,
“Principles of interactive computer graphics”,
McGraw-Hill 1979

Figure 4. Geologic structure showing oil reservoir properties, using multi-resolution
texture. (Data Courtesy of Schlumberger Geoquest)

