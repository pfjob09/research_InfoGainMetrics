2012 16th International Conference on Information Visualisation

Visualizing protein structural superpositions and alignments with
StructAlignViewer
Harald Kattnig

Aleksandar Poleksic

RECARDIO GmbH
Klagenfurt, Austria
e-mail: harald.kattnig@gmail.com

Department of Computer Science
University of Northern Iowa
Cedar Falls, Iowa, USA
e-mail: poleksic@cs.uni.edu

Abstract—With emerging amounts of genomic data,
research in the field of computational molecular biology is
calling for new tools for displaying macromolecular
structures. In this short article, we describe
StructAlignViewer – a software package for visualizing
protein
structures
and
spatial
superpositions.
StructAlignViewer can be used in a standalone mode or in
conjunction with an in-house software for optimal pairwise
protein structure alignment. The program can display a
single protein or a superposition of two proteins. The
distinguishing feature of StructAlignViewer is its ability to
visualize, in real time, the pairwise structural
superpositions and alignments generated by the protein
structure alignment algorithm MaxPairs.

(cartoons) [3,4]. The program supports standard display
actions, including rotation, changing the rendering,
focusing on specific parts of the structure and measuring
the protein geometry. Advanced capabilities include true
slabbing, cavity visualization and translucency. JMol
accepts a large set of different file formats, including
PDB, MOL, XYZ and CIF. The program has moderate
hardware requirements, as it does not require Java3D,
OpenGL or hardware acceleration, and it can be run on
all major operating systems.
RasMol [5,6] is another powerful visualization tool,
especially when used through the command line
scripting. Created in the 1990s, the program quickly
became one of the most popular molecular graphics
viewers in the world. The software’s main focus is on the
visualization of nucleic acids, proteins and small
molecules. RasMol accepts both, the PDB-formatted files
and mmCIF files, and is capable of displaying various
protein structural components in different ways
(wireframe, spacefill, strands and ribbons). The features
such as atoms marking, labeling and in-line scripting are
particularly useful. RasMol is currently available as
copyright-protected, open-source software.
Protein Explorer [7] has a well-organized user
interface, allowing users to mask out certain structural
features in order to focus on more relevant ones. The
program provides a user interface to the Chime plug-in,
which facilitates easy manipulation and analysis of
protein structure files. An added value of the program is
its ability to upload two proteins at the same time (into
the so-called “Comparator Module”), thereby supporting
the research in the area of protein structure comparison.
Although Protein Explorer does not require any
command language, the dependence on Chime mandates
that the software is run on the Windows operating
system. The newer versions of the program use the JMol
Java Applet.
PyMOL (http://www.pymol.org) is a comprehensive
visualization tool that incorporates advanced features
such as improved real-time rendering, molecular editing,
export of QuickTime movies and easy image copying
and pasting in Mac and Windows. It is a very popular
molecular graphics tool, in particular among protein
crystallographers. However, numerous advanced

Keywords-protein structure; structural
structural superposition; protein visualization

I.

alignment;

INTRODUCTION

Research in structural molecular biology relies
strongly on the use of computers to store, manipulate and
analyze large amounts of data. Protein visualization has
significant impact in the areas of protein modeling,
computational drug design and related fields [1]. Fast
growing databases of experimentally solved protein
three-dimensional structures establish the need for
practical and efficient tools for visualizing protein
structures and structural superpositions. In his 1962
Nobel Lecture, John C. Kendrew stated: “There is no
foreseeable limit to the number of proteins whose
structure is worth analyzing, since each will have its own
unique function which demands explanation in structural
terms”.
The structures of proteins and co-crystallized ligands
exhibit a high level of complexity. Although the human
eye is able to resolve three-dimensional solid shapes,
processing more complex 3D data sets proves to be
challenging [2]. Hence, the protein structures and their
related content are best visualized by focusing
independently on structural features, such as atoms, sidechains, or two-dimensional structural elements (α-helices
and β-sheets).
Many software packages exist for displaying tertiary
structures of proteins and other macromolecules. JMol is
an open-source program that makes diverse
representations of a protein structure using wireframes,
balls and sticks, spheres and schematics renderings
1550-6037/12 $26.00 © 2012 IEEE
DOI 10.1109/IV.2012.96

573

capabilities of PyMOL make this visualizer difficult to
learn.
KiNG (Kinemage Next Generation) [8] is an
interactive system for three-dimensional vector graphics.
The word “kinemage” stands for “expression kinetic
image”, which indicates that structures are represented
with simple geometric objects such as points, lines and
spheres.
Although
particularly
tailored
for
macromolecular visualization, KiNG can display a range
of spatially embedded information. KiNG is a Java-based
application, operated through a user interface that allows
editing of the uploaded structures. It allows users to
import multiple structures into the 3D area, but the
availability of tools to compare or interact between the
uploaded proteins is rather limiting. The program can be
extended through the plug-in modules.
This article describes StructAlignViewer - a software
package developed to fulfill the growing need for
visualizing
protein
3D
structure
similarities.
StructAlignViewer builds upon some common features of
the existing protein viewers, but it is tailored specifically
for visualization of proteins’ spatial superposition and
pairwise alignments. The structural alignments can be
either specified at input or computed on the fly, using a
built-in structural alignment program MaxPairs.
StructAlignViewer is developed using the Java
platform. The user interface is based on Java Swing and
the 3D visualization area is realized through Java3D.
The preliminary version of the software can be
downloaded at http://www.cs.uni.edu/~poleksic/sav.htm.
II.

Single Protein

x
9
x
9
x

x
x
CAlpha Atoms
CAlpha Trace
Side-Chain Atoms
Side-Chain Bonds
Alignment

Alignment of Two Proteins

9
9
x
x
9

CAlpha Atoms
CAlpha Trace
Side-Chain Atoms
Side-Chain Bonds
Alignment

Figure 1. Some of many possibilities for displaying a protein structure.

VISUAL DATA REPRESENTATION

Two types of visual data representation are possible
with StructAlignViewer: A) static visualization of (i) a
single protein or (ii) a given alignment of two proteins
and B) dynamic visualization of an alignment of two
proteins i.e., a real-time alignment rendering (Fig. 1).
A. Single Protein
This standard mode allows the user to display and
manipulate the structure of a single chain. After
uploading a PDB file containing the protein of interest,
the user is presented with a list of available chains to
select from. By default, StructAlignViewer displays only
the protein’s backbone. The InformationPanel section of
the viewer (Fig. 2) may then be used to display different
structural elements independently, including the alphacarbon atoms, the side-chain atoms and the side-chain
bonds. Protein’s sequential and structural characteristics
(such as the atom names and coordinates, residue names
and residue IDs) are provided in the InformationPanel
and in the InteractiveAlignmentPanel (Fig. 2).
In the single protein mode, the protein’s amino-acid
sequence is written in the InteractiveAlignmentPane.
Selecting a particular amino-acid letter in this pane
triggers two events: (i) the corresponding residue is
highlighted in the 3Darea and (ii) the detailed
specifications of that amino-acid is displayed in the
InformationPanel.

Figure 2. Visual components of the viewer.

Handling missing residues
StructAlignViewer retrieves the structural data from
the ATOM record of the input PDB file. Often times, the
crystallography process does not recognize all residues,
in particular those that are too flexible in the crystal and
not detected by X-ray scattering. Those residues are
missing in the ATOM section of the PDB file. If not
handled properly, missing residues can create
inconsistencies between the InteractiveAlignmentPanel
and the protein’s three-dimensional structural
574

visualizer MaxPairs, an in-house program for pairwise
protein structure comparison.

representation displayed in the 3Darea of the viewer. A
segment of the PDB file, called SEQRES can be used to
detect such anomalies and find positions in the protein
that
the
missing
amino-acids
belong
to.
StructAlignViewer handles missing residues using a
built-in program for finding the Longest Common
Substring (LCS) of two strings of amino–acid letters.
More specifically, missing residues are detected by
matching the sequence of residue letters found in the
SEQRES section and the ATOM section of the PDB file
(for details on the LCS algorithm, the reader is referred
to [9]). Whenever a missing residue is found, the
corresponding amino-acid letter is highlighted in the
InteractiveAlignmentPanel.

Description of MaxPairs
Our protein structure alignment algorithm is based on
the EPSILON-OPTIMAL routine [11-13], which is
capable of rigorously optimizing the number of residues
in the input structures that can be fit under a usedspecified distance cutoff. More specifically, for each pair
of proteins, a and b, and two positive constants V and
H , EPSILON-OPTIMAL finds a rigid body
transformation of the protein b (and a corresponding
alignment of a and b) that places at least as many pairs of
residues from a and b under the distance V  H as an
optimal transformation places under the distance V . To
achieve this, EPSILON-OPTIMAL searches the space of
all rigid body transformation with a “fine-tooth comb”,
keeping track of the best transformation and alignment
found so far. However, although it guarantees the
theoretical accuracy, EPSILON-OPTIMAL is too slow
for practical applications.
To circumvent high computational cost of EPSILONOPTIMAL, we incorporate into the StructAlignViewer a
heuristic version of EPSILON-OPTIMAL, called
MaxPairs. For efficiency, MaxPairs explores only a
relatively small number of transformations, namely the
transformations that are close to some high-scoring,
“seed” transformations. The underlying assumption is
that an optimal transformation is not far away from some
high-scoring (sub-optimal) “seed” transformation, which
can be found with an accurate and fast protein structure
alignment technique.
As described in [11], the set of “seed”
transformations in MaxPairs is computed using an
iterative extension algorithm, which combines a dynamic
programming alignment routine with the Kabsch
algorithm [14]. The extension algorithm first computes
an optimal residue-residue correspondence (alignment)
of two proteins and then finds a superposition that
minimizes the cRMS between the aligned sub-chains.
The whole procedure is repeated until convergence.
The subset of the set of transformations found in the
neighborhood of each “seed” transformation is explored
in a very detailed manner. More specifically, for each
selected set of three aligned residue pairs
(ai1 , bi1 ), (ai2 , bi2 ), (ai3 , bi3 ) found by the extension

B. Pairwise Alignment
StructAlignViewer is capable of displaying a precomputed structural match of two protein chains. The
program can handle a wide array of input alignment
formats, including FASTA, A2M, FAST and PIR. The
alignment files written in non-supported formats may be
dealt with using a third-party conversion tools (e.g. the
Alignment Format Converter Server [10]).
In the pairwise alignment mode, the residue-residue
correspondence (specified in the alignment file) is
represented with the dashed lines between matching
amino-acid letters in the 3Darea (Fig. 3).
The InteractiveAlignmentPanel displays the residueresidue correspondence as a set of matching pairs of
amino-acid letters. All display options that are available
in the single protein mode are preserved in the pairwise
alignment mode.

algorithm, MaxPairs explores a collection of nearby
transformations with a “fine-tooth comb,” while keeping
the points aik and bik , k 1,3 , under the predefined
distance from each other. By significantly reducing the
size of the search space, MaxPairs is capable of
detecting a high-quality, near-optimal transformation in a
timely manner.
It should be noted that the accuracy of MaxPairs
compares favorably to the accuracy of many existing,
distance-based methods for protein structure alignment,
including LGA [15], TM-align [16], Mammoth [17],
Structal [18] and Lock [19]. For instance, MaxPairs is
able to detect 4% more pairs of residues under 3

Figure 3. Pairwise alignment mode.

C. Pairwise Alignment in Real Time
The
main
feature
that
distinguishes
StructAlignViewer from other visualization programs is
its ability to display structural alignments in real-time
(on the fly). To achieve this, we incorporate into our
575

Figure 4. System architecture in StructAlignViewer.

requirement. The hardware requirements are moderate.
Slight performance differences can be seen depending on
the size of uploaded protein structures.

Ångströms than the official CASP [20] program LGA,
across all SCOP levels [11]. Nevertheless, it should be
noted that the accuracy advantage of MaxPairs is
achieved mostly at the cost of speed. Future releases of
StructAlignViewer will attempt to address this issue by
incorporating techniques to improve the asymptotic
running time of EPSILON-OPTIMAL and by using
additional heuristic techniques to speed-up MaxPairs.

System architecture
Once the locally stored PDB files (and/or alignment
files) are uploaded and the protein chains of interest
selected, the available actions can be performed through
the InformationPanel user interface. In cases where the
input PDB files contain multiple structures for the same
protein chain (for instance, when the protein structure
has been determined using the Nuclear Magnetic
Resonance Spectroscopy), the user can select among
available models identified by the program.
StructAlignViewer lists inconsistencies resulting from the
missing ATOM records in the input PDB file (as
explained earlier). Any missing alpha-carbon atoms are
indicated by dotted lines between the closest neighboring
atoms.
The main components of StructAlignViewer are
3Darea, MenuBar, InformationPanel and the
InteractiveAlignment Panel (Fig. 4). The job of
ProteinUploadListener and AlignmentUploadListener is
to extract necessary information from the input PDB and
alignment files before a corresponding protein structure
object (and/or an alignment object) is created. Protein
chains missing important structural information (e.g.,
missing alpha-carbon atoms) are filtered out at this point;
otherwise, a proper visualization wouldn't be possible.

Additional options supported
Several additional features of the program, supported
in the real-time alignment mode, are listed below.
1. SkipSteps - the number of intermediate
superpositions shown in the 3Darea.
2. ShowOnlyPeaks - render only superpositions that
score higher than the best score found so far.
3. SleepTime - the sleep time (in milliseconds) between
the superpositions shown.
4. HighlightAlignment - highlighting parts of the
structures that are within specified distance of each
other in an optimal alignment.
5. ShowStatistics - displaying more detailed alignment
information in a separate window.
III.

IMPLEMENTATION

StructAlignViewer is implemented in Java, which
assures that that the program is platform independent i.e.,
that it can be run on different operating systems, such as
Windows, Unix and Mac. The user interface is based on
Java Swing, while the 3D visualization area is realized
through Java3D. In fact, Java3D is the only software
576

To generate and display alignments on the fly, the
output of the MaxPairs algorithm with updated atom
coordinates is sent to RealtimeAlignmentVisualizer,
which serves as a bridge to VisualProteinUniverse. The
job of VisualProteinUniverse is two-fold: it serves as a
connector between other program modules and it creates
the Java3D representation of the protein’s structure.
IV.

for model comparison,” Protein Sci, vol. 11, pp. 2606-2621,
2002.
[18] M. Levitt and M. Gerstein, “A unified statistical framework for
sequence comparison and structure comparison,” Proc Natl Acad
Sci, vol. 95, pp. 5913-5920, 1998.
[19] A.P. Singh and D.L. Brutlag, “Hierarchical protein structure
superposition using both secondary structure and atomic
representations,” Proc Int Conf Intell Syst Mol Biol, vol. 5, pp.
284-293, 1997.
[20] J. Moult, K. Fidelis, A. Kryshtafovych, and A. Tramontano,
“Critical assessment of methods of protein structure prediction
(CASP)--round IX,” Proteins, vol. 79(Suppl 10), pp. 1-5, 2011.

CONCLUSIONS

In this short article, we describe StructAlignViewer a Java based software package for visualizing threedimensional structures of proteins. Our program is able
to display protein structures and their superpositions and
alignments by supporting a wide array of alignment
formats. Using an incorporated in-house algorithm for
protein structure matching, StructAlignViewer is also
capable of visualizing the protein superpositions and
alignments in real time.
Future releases of StructAlignViewer will support
research in the areas of multiple structural alignment and
drug design, particularly focusing on protein-small
molecule docking and protein binding site comparison.
REFERENCES
[1]
[2]
[3]
[4]

[5]
[6]
[7]
[8]
[9]
[10]
[11]
[12]
[13]
[14]
[15]
[16]
[17]

T. Can, Y. Wang, Y.F. Wang, and J. Su, “FPV: Fast Protein
Visualization Using Java 3D,” Bioinformatics, vol. 19, pp. 913922, 2003.
C. Gibas and P. Jambeck, “Developing Bioinformatics Computer
Skills,” Sebastopol, CA:O’Reilly & Associates, Inc., 2001.
A. Herraez, “Biomolecules in the Computer: Jmol to the rescue,”
Biochem Mol Biol Edu, vol. 34, pp. 255-261, 2006.
C. Steinbeck, Y. Han, S. Kuhn, O. Horlacher, E. Luttmann, and
E. Willighagen, “The Chemistry Development Kit (CDK): An
Open-Source Java Library for Chemo- and Bioinformatics,” J
Chem Inf Comput Sci, vol. 43, pp. 493-500, 2003.
H.J. Bernstein, “Recent changes to RasMol, recombining the
variants,” Trends Biochem Sci, vol. 25, pp. 453-455, 2000.
R.A. Sayle and E.J. Milner-White, “RasMol-Biomolecular
graphics for all,” Trends Biochem Sci, vol. 20, pp. 374-376, 1995.
E.
Martz,
“FrontDoor
to
Protein
Explorer,”
http://www.umass.edu/microbio/chime/pe_beta/pe/protexpl/frntd
oo2.htm (Retrieved October 7, 2010)
V.B. Chen, et al. “KING (Kinemage, Next Generation): A
versatile interactive molecular and scientific visualization
program,” Protein Science, vol. 18, pp. 2403–2409, 2009.
N.C. Jones and P.A. Pevzner, “An Introduction to Bioinformatics
Algorithms,” Cambridge, MA: The MIT Press, 2004.
R. Futami, C. Lloréns, M. Vicente-Ripolles, and A. Moya, “The
Alignment Format Converter Server 1.0,” in Biotechvana
Bioinformatics 2008, Biotechvana, Valencia. SCR: AFC.
A. Poleksic, “Algorithms for optimal protein structure
alignment,” Bioinformatics, vol. 25, pp. 2751-2756, 2009.
A. Poleksic, “Optimizing a widely used protein structure
alignment measure in expected polynomial time,” IEEE/ACM
Trans Comput Biol Bioinform, vol. 8, pp. 1716-1720, 2011.
A. Poleksic, “On Complexity of Protein Structure Alignment
Problem under Distance Constraint,” IEEE/ACM Trans Comput
Biol Bioinform, in press.
W. Kabsch, “Solution for the best rotation to relate two sets of
vectors,” Acta Crystallogr, vol. 32, pp. 922-923, 1976.
A. Zemla, “LGA - A method for finding 3D similarities in protein
structures,” Nucleic Acids Res, vol. 31, pp. 3370-3374, 2003.
Y. Zhang and J. Skolnick, “TM-align: A protein structure
alignment algorithm based on the TM-score,” Nucleic Acids Res
vol. 33, pp. 2302-2309, 2005.
A.R. Ortiz, C.E. Strauss, and O. Olmea, “MAMMOTH (matching
molecular models obtained from theory): An automated method

577

