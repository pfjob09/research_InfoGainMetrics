Trial Results from a Custom Distance Learning System Based on Hybridization of CD-ROM, Web, And Active-X Component Technology.
Carlos R. Morales
Scott W. Meador
Purdue Universiv, West Lafayette, IN
Crmorales@puk.indiana.edu, Wsmeador@tech.purdue.edu

Abstract

kilobits per second. A high level of sustained bandwidth is needed to meet the public's multimedia experience expectations.

This paper provides results from the first trial of the
implementation of a distance learning system developed
by the authors. A short instructional lesson was delivered to twenty-eight geographically dispersed students
through a variety of connection speeds ranging from
dial-up 56Kbs to dedicated TI 1.45 Megabit connection.

Web based products can not guarantee a specific level
of bandwidth will be available during instructional delivery, but have the advantage of being highly flexible
and dynamic. Altering the web pages on the server
rather than re-distributing CD-ROM's can accomplish
content changes more efficiently. The inherent connectivity makes Web solutions perfect for tracking student
performance and automatic content updating. If the user
is already going to be connected to the Intemet, why not
just track his or her performance and upload the results
to a central database. These two reasons have propelled
Web based solution in the marketplace. Sun has reported that by using Intemet based training it expects to
cut its sales training cost by as much as 50 percent [ 11.

The system strives to provide the same media deliveiy
capabilities available in a traditional classroom by integrating CD-ROM, Web, and Active-X technologies.
Using embedded ActiveX objects within a Macromedia
Director shell, the system renders web content within
the Director interface, interfaces with ASP databases,
delivers MPEG-I full-screen full-motion video on demand, automatically transcribe lectures, and multicast
live video. The system provides mechanisms for homework, tests, live lectures, video on demand lectures, and
software demos. Macromedia Director is used as the
anchor application, Macromedia Multiuser Server for
TCP/IP calls, Microsoft Media Services for live video
streaming, Microsoft's Web rendering Active-X component for web access, and Microsoft's NetMeeting Active-X component for application sharing.

Few hybrid solutions that combine the benefits of CDROM and Web products have emerged in the area of
distance leaming, but tools to facilitate this development have are becoming available. Tabuleiro markets a
plug-in, which renders HTML content directly within
multimedia applications. Macromedia Director 7.0 and
Authorware 5.0 incorporate a series of functions to fill
out HTML forms, create chat channels through TCP/IP
calls, and retrieve media assets through HTTP and FTP
[3] [4]. These tools allow the authoring of distance
leaming solution that updates the user's performance to
a central database, downloads new lessons, and allows
the leamer to "chat" with other users.

Introduction
As the need to deliver instruction to geographically diverse populations has increased, two technologies have
emerged to meet the challenge. Solutions based on delivering content from CD-ROM and using an authoring
environment such as Macromedia Director or Authorware have become common because of the bandwidth
delivery capabilities of they offer. Kahn tells us " ...
companies have opted to use CD-ROM technology for
training, bypassing the slow speed and lack of video associated with Net-based tools." [ 11

Another enabling technology in the development of hybrid CD-ROWWeb solutions has been the employment
of Active-X components within multimedia applications. Macromedia added a controller that allows authors to embed Active-X components within Director
[5]. Active-X objects are small pre-compiled programs
that provide specific functionality such as speech synthesis or integration with other applications [6]. These
objects adhere to the Component Object Model (COM)
API, but shield much of the complexity of the COM objects from the multimedia author so they are very accessible to the non-programmer.

As CD-ROM based multimedia products have become
pervasive in the market place, it has created consumers
who expect relatively high quality video and audio from
multimedia products. The Atlanta Computer Current
estimates that over seventy three percent of users in the
United States have a 24X CD-ROM drives or faster [2].
A large portion of these consumers is accustomed to accessing media content at a sustained 3600 kilobytes per
second or faster. It is common to find CD-ROM drives
with these specifications at training locations, but not
connections that can deliver a sustained rate above 60

In developing the Unified Multimedia Delivery System
(UMDS), the authors decided to select a base package
that would allow a high degree of media control and the
integration of ActiveX components. Macromedia Di-

39
0-7695-0743-3100 $10.00 0 2000 IEEE

Finally, the authors considered whether the activities
would occur in a scheduled manner, or require the instructor to be present. This would serve to identify areas, which required synchronous technology. The instructor would not have to be present during homework
assignments. The content for this area could be delivered asynchronously. The lecture component would require all of the students to go through the experience
simultaneously. Because of this, a synchronous command mechanism among all of the student’s applications was needed.

rector 7.0, in conjunction with the Macromedia Multiuser Server, met these conditions. It provided the necessary media control, means to establish TCP/IP socket
connections, and access to ActiveX object.
Development
The author’s goal was to provide many of the same media delivery capabilities available in a traditional classroom, but in a distance environment. To accomplish
this goal, the authors examined the activities that occur
within a traditional classroom and developed a set of
criteria that dictated the technological construction of
the distance leaming system.

-I

I

By organizing the UMDS into the areas familiar to students and instructors the system would be easier to
adopt. The authors identified four areas: lecture, homework, tests, and instructor/student conferences. The
lecture would contain any activity in which the instructor delivers visual and auditory materials to a group of
leamers. The homework component would contain any
activity in which the learner is expected to retrieve the
instructional materials himselfherself, complete an assignment, and tum-in his or her work. The test area encompasses activities that asked the student to demonstrate his or her mastery of the instructional objectives.
Finally, the conference area would serve as an area for
the instructor and the student to discuss issues privately.

Lecture

I

Communication flow: Mostly one way
Pace control: Instructor
Scheduled: Yes

Homework

Pace control: Student
Scheduled: No

I

Pace control: Student
Scheduled: Yes
Instructor present: No

Table 1. C l a s s r o o m Analysis

Architecture of the svstem

Once the areas of the system had been identified, the
authors established a set of criteria that would help to
identify the technological components needed to be
successful. The author elected to look at the areas in
terms of communication flow, pace control, synchronicity, and presence of the instructor.
First, the authors identified the direction and amount of
communication flow in each of the areas. This analysis
would serve to guide the authors in allocating the available bandwidth. During lectures, most of communication flowed from the instructor to the students. A
smaller amount of information flowed from the students
back to the instructor in the form of feedback. This
made it necessary for the technological component selected to allocate the majority of the bandwidth for
communication from the instructor to the students during lecture. In the other areas, the communication flow
would be approximately the same in both directions.

I
Figure 1. Screenshot of UMDS
The Unified Multimedia Delivery Systems was built using a variety of Web and traditional CD-ROM development components (figure I). Client applications
written in Macromedia Director served as the front-end
to the system for both the instructor and the students.
These applications were responsible for presenting media to the instructor andor the student based on the
Macromedia
messages they received via TCP/IP.
Multiuser Server (MMS) was used as a messaging
queue to distribute messages among the client applications. Using NetLingo in conjunction with the MMS,
the authors were able to establish a virtual message loop
among all of the client applications. Event handlers
were then written to intercept events sent through this
mechanism. This provided the control mechanism that
allowed the Director application to behave with the
flexibility of a Web application.

The second area, pace of instructional delivery, would
serve to allow the authors to devise a control mechanism for the interactions within each of the identified
areas. During the lecture component, the instructor
would set the pace. While the students would have the
ability to ask questions in the middle of the lecture, the
instructor would have the option of answering them
immediately or postponing until the end of the lecture.
The authors would need to provide a mechanism for the
instructor to control all aspects of the video streams
during lecture. This would not be the case with the
homework. tests or conference.

To deliver video, the authors came up with two plans.
First, the authors provided a means to deliver extremely

40

I

high quality video files on demand. Video on demand
would be delivered to the client ahead of time compressed as MPEG-I, MPEG-I1 or Microsoft’s MPEGIV. Because the files would be on the client’s machine
when the presentation would occur, network bandwidth
would not be a concern. A message from the instructor’s client station forced the MPEG video clips to play
on the student’s stations. Using this mechanism the instructor could deliver full-screen full-motion video to
the student application even under high traffic network
conditions. Questions and student feedback were handled via text chat and an embedded NetMeeting ActiveX object 171.

ActiveX object within the student’s applications. This
would allow the students to send video back to the instructor. The video transmitted by NetMeeting is lower
quality and lower bandwidth intensive than the video
transmitted by the Microsoft Media Server. Using this
mechanism, the author’s in effect had allocated most of
the bandwidth for video from the instructor to the student, but still allowed for the capability of studentoriginated video.
The authors decided to use an embedded NetMeeting
ActiveX component as the central piece in designing
the conference and demonstration sections of the
UMDS. The teleconferencing features of the component
allowed the students and the instructor to communicate
in a private environment. This became the mechanism
students would use to attend ‘‘office hours.” The application sharing and collaboration features allowed the
instructor to demonstrate software techniques and assist
the students with assignments. To allow the students to
query their grades, the authors embedded an ActiveX
component, which would embed a Microsoft Excel
based grade book into a Web page, which could be
viewed using the embedded Web renderer. Figure 3 details the internals components of the system.

In order to use the video-on-demand feature, the authors
implemented a mechanism for the system to update its
local video files dynamically.
Using the virtual
messaging loop, the student’s client applications
reported the content of their local files to the server.
The server then compared its content to these reports.
If differences were reported, the server instructed the
clients to download the latest files from an FTP server.
This mechanism insured that most of the clients would
have updated video files. An option that allowed either
the instructor or the student to force an update was also
instituted.
With the mechanism for video-on-demand implemented, the authors tumed their attention towards implementing a system for delivering live video from the
instructor to the clients and for sending video based
feedback from the students to the instructor. To deliver
high quality, high bandwidth video from the instructor
to the students, the authors implemented a Microsoft
Media Server. This system allowed the multicast of up
to 3.0 megabit per second multicast video. The multicast option of the system allowed the stream to be sent
to a virtually unlimited number of client stations without additional strain on the server. Three machines were
needed to implement this system. An NT 4.0 server
running Microsoft Media Server, another NT Server
running Microsoft Intemet Information Server, and a
Windows NT workstation running Windows Media Encoder were required (see figure 2) [8]. To decode the
multicast video stream, the authors embedded a Microsoft Media Player Active-X component, within the
Macromedia Director client applications.

-

=

Figure 3. Components of UMDS

Conditions of the trial
This trial was designed to test the ability of the system
to deliver video-on-demand instruction to a variety of
different environments over variable connection speeds.
Connection methods for the participants ranged from
dial up 56K to dedicated T1 connections. Students
were presented with a pre-test, a video instructional unit
delivered off CD-ROM, a software demonstration, and
a post-test.
Several files were created in preparation for the trial.
First, a seven question pre-test and post-test was prepared using Macromedia Drumbeat 2000 for ASP.
Drumbeat 2000 makes the generation of database
driven pages relatively easy. A Microsoft Access database was created to maintain student’s responses from
both the pre-test and post-test. The database and the
corresponding Active Server Pages were loaded onto an
IIS server in Kokomo, Indiana. The authors then set up
the UMDS configuration to retrieve these pages when
instructed.

“I

Figure 2. Live Video Streaming Based on MS
Media Server

I

The instructional video for the trial consisted of a six minute lecture on the basics of three-point lighting and
its relevance to three-dimensional animation. The authors produced it three days prior to the actual presentation using a multi-camera set-up. An Aver Key scan

To deliver video feedback from the student’s to the instructor, the authors decided to embed a NetMeeting 3.0

41

converter was used to convert a computer’s signal into a
composite signal for video recording of visual aids.
This signal, along with a signal coming from the camera
taping the instructor, was then fed to a live switcher. It
allowed the instructors to switch between the PowerPoint presentation and the instructor on the fly (see figure 4). The authors then digitized the video using a
Discreet edit station and produced an MPEG-I file. The
MPEG-I was then distributed to the students along with
the UMDS application.

After completing the pre-test, the instructor directed the
student’s client applications to play the MPEG-I video
clip containing the lecture. The authors had built in
mechanisms to play the video at full-screen full-motion,
but not allow a text area for questions or to play the
video at three-quarter’s screen size and allow text based
questions. The authors decided to play the video at fullscreen. Questions were taken during the Net Meeting
3.0 demonstration. All of the sites received the message to play the video clip and responded appropriately.
The quality was the same across all of the sites regardless of connection speed.
Next, the instructor sent a message that caused the client stations to launch local copies of Net Meeting 3.0
and call back the instructor. The decision to have client machines call back instead of originating the call at
the instructor station was made to allow the client station to be run anywhere. The instructor’s IP number
would always be known, but the student’s IP numbers
could change based on their location. The instructor
conducted a ten-minute demonstration of on how to apply lighting principles within 3D Studio Max. Using
the application sharing feature of Net Meeting, the instructor was able to transmit his computer desktop to
the student’s PC’s. The connection speed of the students did make a difference in the demo section. As
expected, students connected via a 56K modem connection did not receive screen updates as quickly as those
connected via an ADSL, Cable Modem, or the university’s OC3 connection.

Figure 4. Video Capture Mechanism
Upon receipt of the UMDS files, the students were
asked to update to the latest releases of Net Meeting 3.0
and Media Player. This was necessary because the
UMDS would be initiating Active-X components based
on those applications. If the client machines lacked applications these objects would not be accessible.
On the evening of the trial, the students were asked to
launch their UMDS clients before the presentation.
Students varied in location from Kokomo, Indiana; St.
Louis; Missouri; Atlanta, Georgia; Indianapolis, Indiana, and Guam. The instructor logged in from West Lafayette, Indiana. The actual servers resided in Kokomo,
Indiana, approximately 60 miles away from the instructor’s location.

The instructor then administered the post-test in the
same manner as the pre-test. An ASP application presented the question and deposited the answers into a database. Again the overworked server failed to relay the
message to small portion of the machines. A second
message instructing the client stations to retrieve the
post-test rectified the situation.

As the students logged on to system, they were taken to
the lecture waiting area and asked to wait for the instructor to begin lecture. While the video clips they
were about to watch resided on their local machines, the
system was set up to deliver the same content to all students simultaneously. This ensures students will go
through the lecture in a similar communal manner as in
a traditional classroom.

Results and Discussion
From a technical point of view, using video on demand
in a communal manner with all of the participants going
through it simultaneously, it is possible to achieve a respectable success rate. While bandwidth is expected to
continue to increase, so is the amount of distance leaming done over the Internet. This study seems to indicate
that video on demand is an alternative to the bandwidth
hungry live video streaming. By planning ahead, and
building efficient processes for acquiring quality lecture
performances, even sites with low bandwidth connections can achieve good results.

The instructor sent a message from his client to the
messaging server, which caused the machines to retrieve the pre-test in the form of an ASP page. The
ASP page was programmed to take the responses from
the students and deposit them into an established MS
Access database. The test was presented to the students
within the Director application. Many of them did not
realize that that portion of the application was actually
being downloaded off the Internet. No major problems
were encountered except for an occasional missed message due to an over burdened server. To simulate a
worse case scenario, all of the server components including IIS, MMS, and even an FTP server were started
on the machine that relayed the messages necessary for
program control. The site in Guam did not receive the
message to display the pre-test.

Regardless of connection speed, the students showed a
considerable improvement in the post-test. Because all
of the students were able to view the video lecture from
CD-ROM, the bulk of the instruction was not affected
by slow network connections, or heavy traffic. More
students answered the seven questions correctly in the
posttest than in the pre-test. The most obvious increases in correct answers were on the artist that influenced the development of the studio lighting setup, the

42

most effective color combinations of key and fill lights,
and the description of a key light. Little increase in correct answers were observed in the questions that asked
the student to identify the correct definition of a back
light and a kicker light. These two lights have similar
definitions, but the back light was illustrated in the
video lecture, and so its question had a bigger increase
in correct answers than the kicker light question, but
because of the similar definitions, there was an unacceptable amount of confusion among the students. See
Tables 2 and 3 for the results of the exams.
Defining a Lighting Key was another question that
showed an increase in correct answers, but not to a satisfactory level. Lighting Keys were not described in the
video, but they were in the conference at the end of the
demo. NetMeeting’s whiteboard was used to display a
picture of a key, and the chat window was used to describe its function. Unfortunately, the conference section of the session was difficult to monitor, because the
students did not respond to the ideas being presented.
Like the questiordanswer sessions at the end of a traditional lecture, the students were ready to end the session
rather than discuss the topics presented. This probably
had to do with the late time of day that the trial was performed, and the lack of focus because of some of the
network traffic. As noted earlier, the trial was done using one server running many applications rather than
multiple servers dedicated to a single job. Future trials
and ultimate implementation will most likely not be
performed under the same network conditions.

Correct
% Correct

a

b

c

d

a

43.3

56.6

53.3 36.6

20.0

30.026.61Yi

Correct

a

b

c

d

a

53.5

92.8

82.1 85.7

60.7

46.4 53.57Y%

c

c

b

b

% Cor-

,rect

Reference:
[I] Kahn, R. (1 997). 2 1st century training. Sales &
Marketing Management, 149,s 1-86.
[2] Online survey. (1 999, October) The Atlanta Computer Journal.

Conclusion
An area of improvement in the process of distance
learning with simultaneous instructor and student involvement is the instructor’s need to monitor the activity of the students. While the instructor was able to see
who was logged into a NetMeeting chat, it was not
known which student’s were supposed to be involved in
the session. Implementing a student roster that checked
against a database of names would let the instructor
know who all is involved in the activity, and know
when to proceed to a different part of a session. This
feature of the UMDS is in development and should be
available by the time the system is fully implemented in
the learning environment.

[3] WebXtra product information (2000) Tabuleiro
Corporation. [On-line] . Available:
http://xtras.tabuleiro.com/products/web/index.
htm
[4] Macromedia product information. (2000) Macromedia. [On-line] . Available:

http://www,macromedia.com.
[5] Director user’s manual. Macromedia Press, (1999)
San Francisco, CA, 1999.
[6] Active-X specifications. (2000) Microsoft Comora-

tion.[On-line] . Available:

Along with smaller developments in the usability of the
software, the next major step in the process of implementing the UMDS is to integrate live video with
video-on-demand in a transparent presentation. This
capability can increase the lifespan of the previously
acquired content by being able to add to it, or make adjustments in material “on the fly” based on the pace of
the particular semester, or events that require special attention and can’t be planned far enough ahead.

http://www.microsoft.com/com/tech/activex.asp
[7] NetMeeting 3.0 specifications. (2000) Microsoft
Corporation. [On-line] . Available:
http://www.microsoft. com/windows/netmeetingl

[SI Media services developer Information. (2000) &crosoft Corporation. [On-line] . Available:http://www.microsoft.com/windows/windowsmedi
a/en/developers/

43

