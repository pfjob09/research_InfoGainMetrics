Data Optimisation for Visualisation of FEM-Data
Gernot Opriessnig and Gernot Beer
Technical University Graz
Institute for Structural Analysis
Sin-Research Group
Lessingstraf3e 25/11 A - 8010 Graz Austria
Tel.: +43-316-873-6686
Fax: +43-316-873-6185
email: gemot.opriessnig@ifb.
tu-graz.ac.at

The visualization system is currently available on a
workstation with stereo option and has undergone
preliminary tests in the CAVE environment at Chalmers
University. An implementation on a PC running Windows
NT using head mounted display is underway.

Abstract
The amount of data, produced by a finite element
calculation places a particular challenge to scientific
visualisation. Specifically in the field of tunnelling,
because to describe the very complicated properties of the
rock-mass with a finite element mesh, this mesh must have
a very fine grid. This effects a large number of elements,
and for each of them, simulation results are calculated. If
the tunnel advance is simulated, a large number of
loadsteps are calculated, which also increases the amount
of data, so result files can reach a size of hundreds
megabytes. Because of decreasing hardware costs, the
storage of these data is no longer a real problem, but for
the visualisation in real-time techniques are necessary to
reduce this amount of data, without loosing any
information.
In this paper methods are presented, to extract the
parts of the FEM-output-data, that are necessary for the
visualisation of the simulation results. There are two
major parts, which have to be considered: the geometry
and the simulation data. In both the requirements for
simulation and visualisation are different. The techniques,
described here, fuljil the requirements of scientific
information visualisation.

Loadcase 1

Loadcase 2

Loadcase 3

Loadcase 4

Loadcase 5

Laadcase 6

Loadcase 7

Loadcase 8

Loadcase 9

1. Introduction
Within the Austrian joint research initiative
“Numerical Simulation in Tunnelling” [ l , 21
a
visualisation project was established, to develop a
visualisation tool for the field of tunnelling. This
software, the “Tunnelling Visualisation System” [3]
(TVS) is being developed, to display information in a
way, that an engineer on a tunnel-site can understand.

Lax(redudi0n
Sholasle 1

Sholaae 2

@tyup&1: reopmpyf 00 a oE0vEVnah .tuVVEk-a6mxV
E a ~ kqo a 6 ~ a o eto OVE ~ c x a w a ~ t oO vT E ~ tv
, q
t

XE.

1

226
0-7695-0743-3\00$10.00 0 2000 IEEE

~

TVS is currently being applied to the display of
geological structures and the display of results of
numerical simulations or measurements. Usually
numerical simulation is done, if an exact mathematical
formulation of the problem is impossible, too complicated
or the calculation would take too much time. In the field
of tunnelling an exact mathematical formulation of the
problem cannot be found, because it is not possible to
describe the geometrical and physical properties of the
rock with mathematical equations. Even the tunnel itself,
its geometrical properties and the way of advance (fig. 1)
are too irregular for this purpose, especially if there is an
intersection of two tunnels. That the major reason, why
calculations in the field of tunnelling are performed
numerically [4].
A high percentage of numerical simulation in
tunnelling is done using the finite element method (FEM),
so one of the major requirements to TVS is the ability, to
display the results of a three-dimensional finite element
simulation of the tunnel advance. The amount of data,
produced by such a calculation is a very large problem for
the visualisation of the results. These data can be divided
into two parts: The description of the geometry and the
simulation results.

which are connected by it. There are two strictly
difference types of elements. Using the first type two
points are connected by a straight line. For the second
group, this connection is a 2"dorder curve. Therefore an
additional point between the edges is necessary. A 3Dfinite element calculation is done, using threedimensional
elements. The most frequently used one is the brickelement (fig. 2).

2. Geometric data base for a
FEM-calculation

Others are the shell element (fig. 4) and the joint
element (fig. 3). The brick element is used, to describe the
threedimnesional space, with the help of a joint element,
e.g. the border between two materials is discretisised. For
modelling thin structures shell elements are used.

For a calculation, using the finite element method
[ 5 ] , the space has to be described with threedimensional
elements (fig. 2-4). Each part of the space, which
properties have influence to the simulation, have to be
discretisised. To simulate the tunnel advance, it is not
enough to describe only the tunnel, it is also necessary to
have information about the surrounding rock. To get
realistic results, this block needs to be very large,
sometimes, if the tunnel is not very deep, up to the
surface. In this area, each geometrical or physical
irregularity like zones of fault, or different materials, has
to be considered. For the modelling of the tunnel, not only
its geometry is important. It is also necessary to consider
the tunnel support, such as shotcrete [6], and the way of
tunnel-advance. The number of elements, which is
necessary for a realistic model, is determined by the size
of the modelled block and the amount of irregularities.
The result of the discretisation is the mesh. This
mesh consists of nodes, and their position in space, and
elements. Elements are determined as a list of nodes,

7
I

.-

2

/

*.

4

227

.

position f 1, the gauss-integration points have the
coordinates c I/&. The brick and the shell element has
eight gauss-points, the joint element four.
The different location of the results also causes a
different number of data-points. The number of
deformation results equals the number of nodes, but there
are more points with stress-results. The exact number
depends on the element-types used, but approximately it
can be said that it is eight times the number of elements.

4. Conversion of the geometry-data
For the visualisation of the geometry of a
threedimensional tunnel-simulation it is certainly possible
to draw all, threedimensional elements. With the help of a
good graphics-hardware, which includes a depth buffer,
only the outside surfaces would become visible.
There are two major reasons against this method.
The first is a waste of expensive graphics-performance.
Most of the elements, used for the simulation are never
part of a visible surface, so they never become visible.
The second reason is that having the threedimensional
space filled with brick-elements, makes it impossible, to
display simulation results in that area 171.
For an economic way of displaying the geometry it
is necessary to find out, which part of the mesh is needed.
The first step of doing this is reducing the element-order.
Threedimensional elements usually cannot be drawn as
they are, a surface is drawn, using twodimensional parts.
That's why a brick element has to be divided into its six
surfaces.

For each calculation, using the finite element
method, only one mesh is generated. If more than one
excavation stage is simulated, it is necessary to have the
information, which elements are active in each step.
Loadcase 0 is the initial one. At this time, the tunneladvance has not started, that means, the elements,
describing the material inside the tunnel to be excavated
have to be considered in the calculation, so they are
active. In each excavation-step material is removed, so
these elements are no longer of interest for the
calculation. During the advance of the tunnel, work is
done, to support the rock. One of the methods, used for
this, is putting shotcrete onto the tunnel-surface. The
properties of this material are also important for the
calculation, and the elements, describing this are part of
the mesh. But they are not active at the beginning.
To describe the tunnel-advance a list of active
elements for each loadcase is needed in addition to nodes
and elements.

3. Results of a FEM-calculation
The mesh is not only a necessary part of the input
data, it is also the geometrical base of the simulation
results. There, are two principally different types of
simulation results, deformations and different kinds of
stresses. The difference between these two types is the
location of the results. Deformations usually are
calculated at the nodes, stresses in the gauss-integration
points. These points are located in the element. Their
exact position depends on the used element-type. In a
local system of coordinates, where the edges have the

228

>
>
>
>
>

The result of this procedure is a very large number
of twodimensional elements. Up to now simplification or
reduction of the data happened. The first step optimisation
is to find out, if there are redundant elements.

different element types
different materials
not active for the actual loadcase
joint-elements are ignored
shell-elements are ignored

This search has to be redone for each loadcase.
Elements, which become visible during the excavation,
are usually part of the tunnel-surface. Such elements are
geometrically redundant, but they are not active at the
same time. These elements are important for the
visualisation, if only the tunnel is to be displayed.
Without any optimisation this search is very calculation
time expensive. It needs

n

* L c compare operations to find all duplicates.

n ....
LC ...

number of elemets
number of loadcases

Having a mesh with about 8000 elements and 45
loadcases, this process can take up to one hour (Intel
Pentium 11, 366 MHz). The first optimisation step is to
consider, that one element can only be identical once.
That reduces the number of necessary compare-operations
for one loadcase to (n - 1) (n - 2) ....1 or:

+

+

An element is redundant, if it describes the same
surface. To find such elements it easier to check, if two
elements are connect the same points. If one element
consists of the four points N1, N2, N3 and N4, there are
eight possibilities to define a regular element with the
same points. An element is regular, if there is no
intersection between two sides. Figure 7 shows the
possible combinations of points.

9

n2 n
(m - 1) ; simplifying this: 9 -3 .
L

m=n

L

The reduction of operations depends on n, but is always
higher than 50%.
q?3zitials
500000

/

400000

300000 -

200000

-

i

100000

200
400
600
800
1000
O'tppe 8: Zawe o@on;spaz~ovo6snev6~vy
ov TqE VVppEp 04 EAEpEVZO (v)

The next step of reducing the needed number of
operations is a pre-sorting of the elemettypes. This sorting
is done during the data is read from the disk, so no
additional effort is necessary. After this procedure, only

Four possibilities can be found by a cyclic exchange
of the node numbers, the other four ones by mirroring and
cyclic exchange. The following combinations of elements
are not redundant, even if they connect the same nodes.

229

operations up to about 75% (tested with 8000 Elements
and 45 loadcases).

compatible types of elements have to be compared to each
others.
Without pre-sorting:

n2 n
--_
2

5. Simulation data

2

or

The display of simulation data can be divided into
two parts: surface results and internal results.
To visualise surface results as contours usually it is
not necessary to reduce data. But FEM-data have special
properties, which have to be considered by the
visualisation tool. The problem of this lund of data is the
position of some simulation-results in the mesh. These
results are located in the gauss-integration points, and not
in the nodes, where they would be needed for the
visualisation. Extrapolating the values from the gaussintegration points produces not always a unique result for
each node. So if these values are used for visualisation,
there are discontinuities between two elements. The
results look incorrect. In [8] a method to solve this
problem by finding a unique value for each node is
described. This method is called global-smoothing.
The Tunnelling Visualisation System displays
internal results as fog [7]. The data-processing to generate
the fog and the global smoothing are based on the same
mathematical procedure. For the fogging technique it is
necessary, to know the values on regular distributed
points. The algorithm used for the global smoothing and
the fogging technique is a kind of weighted averaging.

n1,n2 ...number of elements type 1 and 2
With

n, ;to

n2 f o i t

and
2

can

be

said:

2

(n, + n J 2 > n , + n , ,
that means, there is a decrease of needed operations if the
mesh consists of more than one type of elements, which is
true for almost a1 meshes, used for a finite element
calculation.

t W i

%
0.2

0.4

0.6

0.8

1

i=l

w point
. =

n

1

*-

2

T-point

&

1

2-7
i=l q-point

aLyup&9: PEGuxnov 04 o.n&pazLovoply
np&-oopTLvy q&qrmo 04 &h&p&vzo
q-Node

Another possibility to save time is to prevent, that
2D-elements, with the same brick as source are compared
to each other.
If more loadcases are being displayed, the following
method can be used, to save searching time. For the initial
loadcase redundant elements are searched, independent of
their activity-status, The result are elements, which can be
redundant because of their geometry. These elements are
put into a list, which is the base for all other searching
operations. All other elements are excluded from the
search, because it is impossible, that one of them becomes
redundant. The number of necessary operations is no
longer a quadratic function of n, it becomes linear to the
number of elements in the list. Depending on the number
of loadcases this method can reduce the necessary

distance between the given
number i and the searched one
number of given values

"'

n ...

point

The value in one point Wpointcan be found as the
weighted average of all given results ( W ). In the case of
a finite element simulation these given values are located
in the gauss-integration points, if they are stresses.
Deformations are calculated for the nodes. The
calculation effort for one point depends on the number of
given values.
> n times
1
1 -

--

q-point

230

2

(xi - 'point

>" +

(Yi

P

- Ypoint + (zi

-'point?

(n divisions, 3 n squares = 3 n multiplications, 3 n
differences, 2 n additions)
9 n additions

9 n times

1

wi-

2.

stress tensors, flow patterns etc.). Applications can be
found in tunnelling, mining and reservoir engineering.
The use of such system is the enhanced perception of
results of numerical simulations.
The methods, presented in this paper, make it
possible to visualise the results of complicated 3D-finite
elements-calculations in realtime. A good and fast
visualisation is necessary to sell the technology of
numerical simulation. Up to now affordable hardware
does not have enough graphic-performance to display the
FEM-data as they are. The next generation of hardware
will have more power in this area, but the performance in
number-crunching also will increase, so the amount of
data, produced by a finite element simulation will not stop
at today's level. So for visualisation in realtime, the
reduction of data will also be important in the future.

(n multiplications)

<-point

9 n additions
9 one division
For one calculated value this results in
7 n additions
n+l divisions
4 n multiplications
The most calculation-time expensive part of this
algorithm is to find the distance between the location of
the searched point and the position of the given point.
This circumstance is a problem, if the algorithm should be
runtime-optimised. Because of the weighting-function the
influence of values, which are far away from the searched
point, is very small, so it is possible, to ignore these
values. The problem is, that finding such values takes
almost the same time, than to include this values.
A possibility to reduce calculation time is to define a
cube around the searched point, where only points in this
cube are taken for the calculation. The advantage of this,
compared with defining a maximum distance is the
smaller number of necessary operations. To find out, if
one value is inside the cube, only 3 subtractions, 3
compare-operations and 2 or-operations are necessary.
To get an effective optimisation without loosing
information, it is very important, to find out, how many
elements should be into the cube. Experience shows that
about 1000 elements have to be considered for the
calculation, to get correct results. The cube has to be
dimensioned, that approximately this number of elements
are inside. The base for this is the smallest element in the
mesh. The Tunnelling Visulalisation System needs the
size of this element for its fogging-technique [7], so this
causes no additional calculation-time.

7. ACKNOWLEDGEMNT
The work reported here was supported by the
Austrian Science Found (Project Nr.: FWF-S08001-TEC)

8. References
Beer G. et. al. ,,Austrian Research Initiative on
[I]
Numerical Simulation in Tunnelling" Proceedings of the World
Tunnel Congress 1999, A.A. BalkemdRotterdamlBrookfield
Beer G. et. al. ,,Joint Research Initiative on Numerical
[2]
Simulation in Tunnelling" Felsbau 1/99,Verlag Gluckauf
GmbH Essen
Opriessnig G . ,,Visualisation in Tunnelling - a Virtual
[3]
Reality Environment for Tunnelling Engineers"
Felsbau 1/99, Verlag Gluckauf GmbH Essen
Golser H. ,,Application of Numerical Simulation
[4]
Methods on Site" Felsbau 1/99,Verlag Gluckauf GmbH Essen
G . Beer, J. Watson ,,Introduction to Finite and
[5]
Boundary Element Methods for Engineers" John Wiley & Sons,
1992

6. Conclusions

Hellmich C. et. al. ,,Influence of the Dilatation of Soil
[6]
and Shotcrete on the Load Bearing Behaviour of NATMTunnells" Felsbau 1/99, Verlag Gluckauf GmbH Essen

The concept of virtual reality is a very powerful tool
for enhancing the human perception of complex threedimensional information. The field of geomechanics is
predestined for such an application since we are not only
dealing with complex 3-D information about excavation
geometries and geological features but also may be
interested in displaying results of numerical simulations
which may by themselves contain 3-D information (i.e.

Opriessnig G., Beer G. ,,Visualisation in Tunnelling"
[7]
Proceedings of 1998 IEEE Conference on Information
Visualisation IV'98
[SI
Opriessnig G., Beer G. ,,Visualisation in Tunnelling New Developments" Proceedings of 1999 IEEE Conference on
Information Visualisation IV'99

23 1

