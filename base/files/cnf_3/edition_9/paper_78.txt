An Immersive Path Editor for Keyframe Animation
using Hand Direct Manipulation and 3D Gearbox Widgets
Noritaka OSAWA and Kikuo ASAI

National Institute of Multimedia Education
The Graduate University for Advanced Studies
Email: {osawa, asai}@nime.ac.jp

Abstract
A prototype transition path editing tool for use in an
immersive environment has been developed, which can
be used for 3D keyframe animation authoring and
editing of 3D transition paths. Authoring tools using 2D
GUI is normally used to developed 3D animation.
However, it is more direct to create 3D contents in a 3D
space than in a 2D GUI. Therefore hand direct
manipulation is employed to utilize body motion in the
developed tool. Direct manipulation by hand is easy to
understand and easy to use for rough positioning but it
is not suitable for fine adjustments of virtual objects in
an immersive environment because it is difficult to hold
a hand at a fixed point without support in midair. A
gearbox widget has been newly implemented to enable
a user to adjust a value both roughly and minutely. In
the immersive path editing tool, the developed widget
and direct manipulation are combined to enhance
efficiency of the immersive 3D authoring of keyframe
animation.
Key words: immersive environment, path editing,
gearbox, direct manipulation.
1 Introduction
Authoring tools for creating two-dimensional content,
such as Web animation, have been used by many
people, both professionals and amateurs. Threedimensional content, however, is still mainly created by
professionals.
This is partly because 3D authoring is more difficult
than 2D authoring. People usually have to use 2D GUI
tools to create 3D content and it is difficult for novices
to manipulate 3D objects and to navigate freely in 3D
space using 2D GUIs. Therefore 3D manipulation with
conventional tools requires familiarity with 2D GUI
interfaces for 3D operations.
Normally, 2D GUI tools are used even when authoring
3D animation content for an immersive environment.
However, content creators using 2D GUI tools are
unable to exploit immersive 3D space for animation
authoring.

We think that the immersive virtual environment
offers 3D content creators a familiar, simpler, and more
efficient way to produce content since it demands less
technical skill and less specialized knowledge (e.g. of
2D GUI tools) on this part.
It is easy to change the position of virtual objects using
direct manipulation by hand in immersive space. Such
direct manipulation is similar to the manipulation of
objects in real life, with the result that less specialized
knowledge and skill is required of the content creator.
Thus, direct manipulation will put 3D authoring within
the reach of amateurs as well as professionals. When
manipulating by hand, however, it is difficult to make
fine adjustments without physically supporting the
hand.
Although it is possible to input numerical values for
fine-tuning, it is not easy to input them in an immersive
environment. Users can currently use devices such as
wearable keyboards to do so, but these are cumbersome
and awkward to use. It is also possible to input numbers
using up/down keys, but this is tedious when inputting
numbers in a large range. Furthermore, even if the
input device were not a problem, it would still be
difficult for novices to understand which numbers to
input.
A slider is often used in GUIs to control the
coordinates, but this is unsuitable for fine-tuning in an
immersive environment since it is difficult to move the
slider precisely with the unsupported hand. Other
physical input devices and gadgets, such as the cubic
mouse[13], may be used to control values. However, it
is not easy to use multiple devices to control multiple
control points or keyframes in a single work of a 3D
animation.
To enable fine adjustments to be made by hand, we
developed a virtual 3D gearbox widget [11]. A
combination of this widget and hand direct
manipulation enables a user to edit the position and
orientation of virtual objects efficiently and precisely.
By utilizing this combination technique, we have
developed a prototype transition path editing tool for
use in an immersive environment. This tool can be used

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

for authoring 3D keyframe animation and editing 3D
transition paths.

2 Related work
Commercial 3D content creation tools such as
Maya[17], Lightwave 3D[16], 3ds max[15] and
Softimage[14] are used mainly by professionals to
create 3D content for immersive virtual reality systems.
However, the user interfaces are based on 2D GUIs
which are almost impossible to use efficiently in an
immersive virtual environment. If content creators find
problems with content in immersive presentations, they
have to edit outside the immersive environment. This is
tedious and time-consuming.
Some research prototype tools or frameworks, such as
those described in [3][4][5][6][7][8][9][10], allow a
user to manipulate objects in a virtual environment.
They use 3D pointing devices or direct manipulation by
hand to manipulate the objects. However, it is difficult
for novices or casual users to use 3D pointing devices
because some familiarity with them is needed to use
them effectively. In contrast, direct manipulation by
hand is familiar to everyone and it allows users to
manipulate virtual objects easily. However, direct
manipulation by hand is not suitable for making fine
adjustments to virtual objects because it is difficult to
hold the hand still and release an object at a fixed point
without support in midair. One solution is to use
suitable combinations of virtual object manipulation
methods.
3 3D Gearbox Widget
We have developed a gearbox widget [11] for the
“it3d” class library[12], which is a Java class library for
3D applications. In this widget, multiple dials can be
interconnected. An example of one with four dials is
shown in Figure 1. A dial usually comprises two
concentric gears: a back gear (the larger gear) and a
front gear (the smaller one). The leftmost dial, however,
does not have a front gear.
Any two adjacent dials are interconnected with an
intermediate gear. The intermediate gear engages with
the back gear of the dial at the left of it and with the
front gear of the dial at the right of it. The intermediate
gear is used to maintain the rotational direction of the
dials for manipulation.
The leftmost dial is used for large value changes, and
the rightmost dial is used for small changes. The value
ratios of the dials in Figure 1 are 100:10:5:1 for one
revolution. The programmer can specify the value ratio
of a dial for one revolution, in other words, the gear
ratios of the dials. The appearance of the gears matches
the specified gear ratios. The general familiarity with

gears in the real world means that users can easily
understand how the gears change the value based on the
gear ratio.

Figure 1: A gearbox widget with four dials

By combining direct manipulation with our gearbox,
we developed a prototype tool that uses 3D hand
motion to author immersive content. This tool enables a
user to add, move, and delete path control points, and to
adjust control point parameters by hand in 3D space.
One of us and his collaborative researcher tested this
approach with a usability study[11]. The experiment
showed that combining direct manipulation with the
gearbox was the best of the four techniques tested in
terms of both performance data and subjective
preference. The four techniques are the individual use
of either the hand direct manipulation, or the gearbox,
or the slider, and the combination of hand direct
manipulation and the gearbox. The combined technique
uses 3D hand motion in the developed tool and enables
the user to adjust a value both approximately and
precisely.
4 Path Editing Tool
We designed a path editing tool so that the combined
techniques can be applied to real software applications.
The tool allows a user to make simple keyframe
animation using hand motions in an immersive
environment. Figure 2 shows a snapshot of the editing
of path control points for keyframe animation in an
immersive virtual environment.
Users can add control points by copying existing
control points. They can also position control points by
hand direct manipulation. The position and orientation
of the moving object can easily be seen and understood
in virtual 3D space. The user can also adjust the
parameters of control points using a property panel
which uses the gearbox widgets.

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

In the following, we describe the functions of the
system.

Continuity, and Bias (TCB) spline curve (KochanekBartels spline)[2].
Direct Manipulation
Control points are added by a cloning operation. Users
can copy a control point by pinching it between the
thumb and middle finger, and moving it (Figure 4). The
copied point is placed between its original point and its
neighboring next point. Obviously, if only one control
point exists in the space, or the copied point is at the
end of the path, the copied point is linked to the original
point. The user can rearrange a control point by
pinching it between thumb and forefinger and moving it.
The user can delete a control point by moving it and
putting it in the dustbin. After deleting a control point,
its neighboring points are connected.
A control point is selected by touching it with the
forefinger. After it is selected, the user can open the
property panel of the control point by clenching the fist.
These hand gestures are shown in Figure 5.

Figure 2: A snapshot of the editing of control points
for keyframe animation in an immersive virtual
environment

Figure 4: A screenshot of hand direct manipulation
of a control point.

Figure 3: An initial screenshot of the prototype path
editing tool used for keyframe animation

Display
In the prototype system, as shown in Figure 3, control
points are displayed as movable cones. The height of a
cone represents the speed of a virtual object passing
through the control point in animation. The interpolated
path between control points is drawn as a Tension,

(a) copy

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

(b) move

(a) touch

Figure 5: Examples of direct manipulation

Gearbox and Slider on the Property Panel
The property panel of a control point has controls for
TCB, timing, position and orientation parameters.
Figure 6 is a screenshot of the property panel.
Gearboxes control the timing, position and orientation.
In this example, sliders specify the TCB parameters.
These can be changed to gearbox widgets.
A line connected to a control point represents the
correspondence between the control point and its
property panel. This representation makes it possible to
use multiple property panels simultaneously. The
property panel can be moved by selecting its title bar
and moving it.
The position and orientation of the control point may
be adjusted not only by the gearbox widgets but also by
direct manipulation.
Figure 7: A screenshot of manipulation of a button
on the control bar panel .

Figure 6: A screenshot of a test task using a
property panel with gearboxes.

Animation Execution
A button on the control bar panel controls the execution
(playback) of the keyframe animation (Figure 7). A
virtual object moves along the specified path. In Figure
8, the moving virtual object is a star.
The user can manipulate the control points during the
execution, with the animation pausing during
manipulation. When the user releases the control point,
the animation starts again.

Figure 8: A screenshot of keyframe animation. A
star moves along the path.

Navigation
A user can navigate in 3D space using a horizontal
handle, which is a cylinder-shaped object in Figure 9.
By picking up and moving the handle, the user can
move the virtual space itself. This navigation does not
move the control bar panel or the dustbin: they are
attached to the frame of reference of the eye viewpoint.
The control bar panel and the dustbin can be moved by
hand direct manipulation, which adjusts their position
in the frame of reference of the eye viewpoint.

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

Figure 10: Hardware configuration of prototype
system
Figure 9: A screenshot of 3D navigation using a
handle

Save and Restore
A user can save the edited path into a file and also
restore it from the file using the control bar panel. Since
the file format is text-based, the saved file can be easily
converted to appropriate formats for applications such
as keyframe animation and 3D transition effects.
5 Implementation
5.1 Hardware
The prototype system works in a virtual reality
environment
called
TEELeX
(Tele-Existence
Environment for Learning eXploration)[1] at the
National Institute of Multimedia Education in Japan.
TEELeX is a kind of surrounding display system such
as CAVE. Each screen of TEELeX measures 3 meters
by 3 meters. The circular polarization method is used to
give a stereoscopic view; that is, TEELeX uses a
passive stereo system.
The hardware configuration of the prototype system is
given in Figure 10. The prototype system runs on a PC
workstation (Dell Precision 530 with dual 2-GHz
Pentium 4 Xeon processors and a 3DLabs Wildcat II
5110 graphics board supporting dual displays). A SixDoF position tracker (Polhemus Fastrak) and sensor
gloves (Virtual Technologies CyberGlove) are used to
detect the position and motion of the user’s body and
hands.

5.2 Software
The prototype system has been developed using the
Java programming language, the Java 3D class library,
and the it3d library[12]. It3d is an interactive toolkit
library for 3D applications utilizing artificial reality
(AR) technologies. It was implemented using the Java
language and the Java 3D class library to enhance
portability. It3d makes it easy to construct 3D
applications that are portable and adaptable.
6 Summary
We developed a prototype tool for path editing in an
immersive virtual environment. We also showed how
operations/functions work in the environment. Direct
manipulation by hand is easy to understand and to use
for approximate positioning. However, it is not suitable
for the fine adjustment of virtual objects in the virtual
environment because it is difficult to hold the hand in a
fixed point without support in midair. We proposed a
technique combining direct manipulation by hand and
our newly designed virtual 3D gearbox. The technique
helps users to edit transition paths efficiently and
precisely. We found that implementing it into a newly
developed prototype tool makes the tool an effective
one for editing 3D transition paths in keyframe
animation, or for authoring content in immersive virtual
environments.
It is easy to move a control point to the approximate
position of a specified target point by direct
manipulation. We detected a problem, however, in that
the position often slips slightly on release. Although we
provided gearbox interfaces for fine-tuning the position,
we need to study this issue further.

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

Acknowledgements
This research was partially supported by a Grant-inAid for Scientific Research (14380090) in Japan, and
by the Strategic Information and Communications R&D
Promotion Scheme of Japan’s Ministry of Public
Management,
Home
Affairs,
Posts
and
Telecommunications.
The toolkit library "it3d" was developed with funding
by the Support Program for Young Software
Researchers in 2000, which was implemented by the
Research Institute of Software Engineering (RISE)
commissioned
by
the
Information-technology
Promotion Agency (IPA) in Japan.
References
[1] Kikuo Asai, Noritaka Osawa, and Yuji Y.
Sugimoto, “Virtual Environment System on
Distance Education,” Proc. of EUROMEDIA '99,
pp. 242-246, 1999.
[2] Doris H. U. Kochanek and Richard H. Bartels.
Interpolating splines with local tension, continuity,
and bias control, Computer Graphics (Proceedings
of the 11th annual conference on Computer
graphics and interactive techniques - SIGGRAPH
'84), Vol.18, No. 3, pp.33-41, July 1984.
[3] Márcio S. Pinho, Doug A. Bowman, Carla M.D.S.
Cooperative object manipulation in immersive
virtual environments: framework and techniques,
Proceedings of the ACM symposium on Virtual
reality software and technology 2002 , pp.171-178,
Hong Kong, China.
[4] Y. Kitamura, S. Ogata, F. Kishino. A manipulation
environment of virtual and real objects using a
magnetic metaphor, Proceedings of the ACM
symposium on Virtual reality software and
technology 2002, pp. 201 - 207, Hong Kong,
China.
[5] Gun A. Lee Gerard Jounghyun Kim Chan-Mo Park:
Modeling virtual object behavior within virtual
environment, Proceedings of the ACM symposium
on Virtual reality software and technology 2002,
pp.41 – 48, Hong Kong, China

[6] D. Thalmann: Using Virtual Reality Techniques in
the Animation Process, Virtual Reality Systems
(Earnshaw R, Gigante M, Jones H eds), Academic
Press, pp.143-159.
[7] N. Magnenat Thalmann, D. Thalmann: 3-D Devices
and Virtual Reality in Human Animation, Proc.
2nd Eurographics Workshop on Animation and
Simulation, Wien, 1991.
[8] F. Faure, C. Faisstnauer, G. Hesina, A. Aubel, M.
Escher, F. Labrosse, J.-C. Nebel, J.-D. Gascuel.
Collaborative animation over the network,
Computer Animation 1999 , pp.107-116, May 26 28, 1999, Geneva, Switzerland.
[9] Craig Barnes: Visual Programming Agents for
Virtual Environments, 2000 AAAI Spring
Symposium, pp. 173-177.
[10] R. Holm, E. Stauder, R. Wagner, M. Priglinger,
and J. Volkert. A Combined Immersive and
Desktop Authoring Tool for Virtual Environments,
IEEE Virtual Reality Conference 2002, pp. 93-100,
March 24 - 28, 2002, Orlando, Florida.
[11] N. Osawa, and X. Ren. Gearbox Widget for Fine
Adjustments by Hand Motion (poster abstract.),
IPT/EGVE 2003, May 2003 (to appear).
[12] N. Osawa, K. Asai, and F. Saito. An Interactive
Toolkit Library for 3D Applications: it3d, Eighth
Eurographics Workshop on Virtual Environments
(EGVE2002), pp.149-157, May 2002.
[13] B. Fröhlich, and J. Plate. The cubic mouse: a new
device for three-dimensional input, Proceedings of
the CHI 2000 conference on Human factors in
computing systems, pp.526 – 531.
[14] Softimage <http://www.softimage.com/>
[15] 3ds max
<http://www.discreet.com/products/3dsmax/>
[16] Lightwave 3D <http://www.lightwave3d.com/>
[17] Maya
<http://www.aliaswavefront.com/en/products/maya
/index.shtml>

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

