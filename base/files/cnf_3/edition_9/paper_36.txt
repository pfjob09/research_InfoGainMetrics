Scaleable GIS Data Transmission and Visualisation
JiĜí Komzák
Knowledge Media Institute
The Open University
Milton Keynes, United Kingdom
j.komzak@open.ac.uk

Abstract
Distributed geographic information systems typically
handle large amounts of data; therefore the transmission
and visualisation techniques used need to be scaleable to
provide quick, interactive feedback. In this paper, we
introduce such techniques based on the data hierarchy
(levels of detail). Namely, we describe focus-and-context
visualisation and progressive transmission. The main aim
of this paper is to discuss the combination of these
techniques for different data types and for mixture of these
data types.

1. Introduction
GIS typically handle large amount of spatial as well as
attribute data. This data is stored in thematic layers and
can be divided into several categories. Spatial data can be
stored in raster or vector form. Attribute data is usually
stored in a database, and consist of single values, strings
or multidimensional arrays. Each data type has to satisfy
different requirements on precision, representation or
transmission, and requires appropriate handling.
Portable devices with low-bandwidth connection,
limited screen space and limited processing power are the
typical devices used to access GIS data. Scaleable data
transmission and visualisation is needed to provide an
interactive feedback and meaningful display when using
such a device. A way to solve this problem is to use
hierarchy-based progressive transmission together with a
fisheye visualisation.
A proprietary GIS developed at the UK’s Open
University, which supports visualisation of geographic
positions, off-line analysis, on-line presence and
messaging, can be taken as an example application [8].
Visualisation of a selected group of students (statistical
data) in an appropriate map is one of its important
functions. Since the client is integrated with a messaging
program, the display space is very limited.

Pavel Slavík
Dept. of Computer Science and Engineering
Czech Technical University
Prague, Czech Republic
slavik@cslab.felk.cvut.cz
In this paper we present methods implementing
fisheye views and context-based (fisheye view dependent)
progressive transmission of mixture of data types in a
distributed GIS environment. The method is especially
suitable for portable devices with small displays and low
bandwidth network connection.

1.1. Optimisation of display
When displaying information space (e.g. a map) in a
relatively small window, two conflicting goals emerge:
detail view and overview. A detail view of whole area
requires large amounts of data to be transmitted from the
server. The fisheye view solves this problem by
integrating detail presentation of the area of highest
interest (focus) and the surrounding area (context)
providing overview in one view. Displayed level of detail
(LoD) depends on the distance from the point of interest
(position of the focus). Thus, the focus and context sizes
adapt to the available display size and network bandwidth.
Furnas [3] proposes the basics of fisheye views for the
structured data. His context reduction was based on hiding
nodes according to (i) their distance from the focus and
(ii) their importance. The survey of non-linear
magnification methods is given in [6], [10], and [11]. The
reviewed
magnification
methods
use
different
magnification functions and computational complexity.
The non-linear methods [5], [6] provide smooth
concentric magnification but require high computational
power. The hyperbolic views [9] allow mapping an
infinite Euclidean space into a finite disk, so that the
highest LoD is in the centre. On the other hand, the linear
magnification uses the same distortion over large areas.
The Rubber Sheet [16] method uses ‘handles’ to hold and
stretch the strips in the image. The geometry of the
Rectangular FishEye View [14] uses rectangular regions.
It handles raster, 2D vector graphics, and text providing
several performance and quality modes.

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

1.2. Progressive transmission

3. Levels of detail

In the distributed GIS, the generation and transmission
of full-detail server response to the client takes some time.
Progressive transmission provides immediate feedback in
lower detail (preview) followed by further refinements
(transmitted automatically or on a user’s request).
Progressive transmission typically draws on the LoD
hierarchy of the underlying data.
The progressive transmission used in raster file
formats either refines the image resolution (GIF, PNG
[12]) or refines the image detail by sending further
coefficients obtained by its core transformation (e.g.
cosine transformation coefficients in JPEG). Waveletbased image compression for the Rectangular FishEye and
its progressive transmission is described in [15].
Progressive mesh transmission is usually based on the
hierarchical description of mesh geometry (e.g. [17]).
When using a distributed system handling several data
types (spatial data and attribute data), problems arise with
the synchronisation and multiplexing of the data during
the transmission. Multiplexing, synchronisation of several
streams, session control and client-server architecture used
by MPEG4 are described for example in [4] and [13]. In
this approach, several data channels and one control
channel are used. The transmission is controlled by a
scheduler on the server side, which plans the data
transmission according to its quality of service. Data with
equal quality of service can be multiplexed into one data
channel.

When displaying data, an appropriate LoD should be
used to avoid confusion of a user. Therefore, the data
representation in multiple LoDs is needed. LoDs are
usually stored in a hierarchical structure containing
general properties at the top layers and more detail in the
lower layers.
LoD of each data type is determined by the desired
view; however the LoDs can differ for different data
types. They depend on the definition of detail for a
particular data type and the representation required by
user, who can specify the priority for each data type. For
example, statistical data may be more interesting for the
user than the underlying raster maps.

3.1. LoD for statistical data
Statistical data in our application represents the
positions of the university students around the world
displayed with a given LoD (minimal cluster size) in a
map.
Statistical data are stored in a hierarchical clustering
tree. The tree is built step-by-step by grouping two nearest
clusters [8]. Figure 1 shows an example of a clustering
tree with five objects (the leaves).
When clustering, the number of objects, position and
other summary information for each cluster are stored to
enable fast display of the cluster. For any LoD the tree can
be cut, and the nodes (clusters), which are the leaves of
the sub-tree lying above the cut-off, displayed.

2. Desired Features
After considering the existing problems and studying
the current techniques, we concluded that the following
features are important for a scaleable data visualisation
and transmission in a distributed GIS:
x Multiple data types handling
x Fisheye technique for data visualisation
o Multiple focuses
o No distortion in focus area
o Smooth control of LoD for all areas
o Exact and easy specification of all areas
x Progressive transmission and detail-on-demand
needed for an interactive response
o Based on displayed LoD of areas
o Multiplexing of data types (with priorities)
x Modular architecture
We designed system, which provides all mentioned
features to a reasonable degree. Two data types were used
in our tests: raster data and statistical data. Raster data
represents maps used as an underlying layer for the
statistical data, and is stored in multiple semantic LoD.

Figure 1 Clustering tree (number of objects,
co-ordinates, cluster size and ordering of
couples during progressive transmission)
An example of different LoDs in different areas is
shown in Figure 2 (the smaller clusters are in the focus
area and the bigger ones in the context).

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

3.2. LoD for raster data
The LoD of raster data (maps) is determined on two
levels. The first one is simply the semantic LoD of the
used map; i.e. selection of a raster image. The second
level, which is used for progressive transmission, is given
by LoD in a given raster image (chosen map). For
example see Figure 2.

LoDs are combined using alpha blending to provide a
smooth transition between the maps and their features.
The main disadvantage of this method is the need to
transmit both maps.

4. Rectangular Fisheye View
As mentioned above, a relatively large area needs to be
visualised in our application inside a relatively small
window. Thus, the problem of displaying all the data and
providing detail in the region of interest has to be tackled.
Since the region of the user’s interest is known, and the
user’s interest in detail seems to fall away from the object
of attention in a systematic way, the display space might
be portioned to follow the user’s attention [3]. The fisheye
techniques display both, the region of interest (focus) in a
higher detail and the surrounding region (context)
providing an overview in a lower detail simultaneously in
one view. Several different magnification functions and
techniques for the selective reduction of the data are used
to create a fisheye view.

4.1. Geometry definition
Our approach is based on the Stretching Rubber Sheet
[16] and Rectangular FishEye [14] techniques, which
seem to be suitable due to their rectangular areas with
constant a magnification. Thus, they have small
computational cost (suitable for portable devices), and
they allow progressive transmission (due to the simple
boundary testing).

Figure 2 Difference between LoD in focus and
context area
The map is selected so that the scale appropriate to its
semantic LoD is as close as possible to the desired scale
(after the transmission is finished). For the progressive
transmission, sampling of selected map by 2n is used. This
method was used for its simplicity to test our approach. In
further work, a better method based on for example,
cosine or wavelet transformation also allowing
compression shall be deployed.
The semantic LoD changes in steps according to LoD
of the pre-stored maps. Other scales are obtained by
scaling of the maps in the closest semantic LoD.
In related project called The Satellite Like MAP with
Multiple LoD [1], the scaled maps in two closest semantic

Figure 3 Example of view with magnification
functions
Our approach supports multiple focuses, which may
have application for example, in exploring the
communication between two areas. Figure 2 shows an
example of the fisheye view used, where the difference

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

between LoD of the raster map and the statistical data in
focus and context can be seen.
Magnification function is defined separately for x and
y axes. When inserting new areas, new vertical and
horizontal strips are created. Horizontal scale for each
vertical strip is determined as the highest scale of all areas
in the strip, while the vertical scale remains unchanged. It
means that a higher scale is used, if two focus areas
overlap. Horizontal strips are handled similarly. Thus, the
areas lie in strips, where the vertical strips have the same
scale in the horizontal direction and vice-versa.
Figure 3 shows how the areas overlap and the strips
with an equal scale in one direction are created (FocusA
and FocusB are the selected regions of interest). The
figure also demonstrates the drawback of this method
when using multiple focuses. It creates undesired
additional magnified areas (labelled FocusC and FocusD).
The geometry computation is based on the
geographical co-ordinates in an orthogonal uniform
projection (or other system of orthogonal logical coordinates, when using a non-geographical space).

5. Progressive transmission
In an environment of a distributed GIS, the response to
the user’s request is transmitted from the server to the
client. The delay depends on the server response time, the
network bandwidth, and the response size. Progressive
transmission provides a quick feedback. User can decide
from a small amount of rough data quickly generated by
the server (after a short delay), whether to wait for the
refinement or not. Further details are obtained by the
transmission of differential (refinement) data.

5.2. Clusters
Progressive transmission of statistical data is based on
the data organisation in a hierarchical clustering tree
described in section 3.1. The transmission starts by
sending the root of the tree. When a child node of an
already transmitted node is received, also the position,
size and other information about the second child can be
determined. For each displayed area, the nodes lying in
the area, or having children with the desired LoD inside
the area, are progressively transmitted. Every time the
not-yet-sent node with the least LoD is selected for the
transmission. Each node has a unique identification based
on the path from the root of the tree.

5.3. Raster images
As mentioned in section 3.2, sampling by 2n, which
progressively refines, was used for the progressive
transmission of raster images. This sampling method is
simple and is sufficient for testing purposes. In a practical
application, a method based on cosine or wavelet
transformation allowing compression can be used.

5.4. Focus and context – focus first
LoD of progressive transmission is recalculated using
the magnification function of a particular fisheye view;
i.e. the equal LoD for the focus areas will be transmitted
sooner than for the context areas.

5.1. Based on hierarchy – levels of detail
Progressive transmission is based on the hierarchical
description of a particular data type. Hierarchy based on
LoD is suitable for this purpose, because the top layers
contain general properties, and the detail increases when
getting deeper in the hierarchy. For progressive
transmission, it is important to derive the layers with
higher detail using the previous layers, and the differential
data chunks of small sizes. First, data from the highest
layers are transmitted, and the user sees the general
properties. During the progressive refinement, the data
detail increases automatically, or the user may request the
higher detail manually (detail-on-demand).
The hierarchy is data-type-dependent. Raster images
can use a frequency-based hierarchy; e.g. cosine or
wavelet transformation. Other data types may use a
hierarchical clustering tree, lossy compression method
with differential correction data chunks (lossy RLE of
chain code [7]), progressive meshes, and similarly.

Figure 4 Sending order of areas (number,
(x-scale, y-scale))
Because of the higher importance to the user, the data
in the region of interest is transmitted before the context
data. The order of areas is given by their scale (value of
magnification function). Thus, the progressive
transmission depends on the selected region of interest
and the context area (context-based progressive
transmission). Figure 4 shows scales of the areas in both
directions, and the order in which they are sent.

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

5.5. Combined – must be multiplexed
Beside the progressive transmission of particular areas
in the different scales and their progressive refinement, a
combination of different data types is needed. LoD for
each data type can be equal, or it may change using the
user- or application-defined priority. Earlier and detailed
transmission of particular data types can be forced by
recalculating the appropriate LoD.

The server consists of the following modules: Session
Manager,
Scheduler,
Database,
Multiplexer,
Communicator (see Figure 6). The information about
currently used geometry and transmitted data is stored by
the Session Manager. Scheduler controls the response
transmission; it generates commands to send data from
particular areas and of a particular type and LoD. Data
retrieved from the Database are multiplexed and sent as a
stream over TCP/IP connection using a customized
protocol.

Figure 6 Modular server and client architecture

Figure 5 Example of progressive transmission
As the LoD is progressively increased, the data with an
appropriate detail is transmitted. The order of data with
equal LoDs is determined by (i) the importance of the area
(its scale), and (ii) the priority of the data type. Thus, the
data is multiplexed so that for every given LoD, all areas
are sent progressively according to their magnification
scale. In each area, the data of a particular type is
progressively sent according to its priority.

6. Implementation
6.1. System architecture
The described system is distributed. Both the client
and the server have a modular architecture.

The client application consists of Communicator,
De-multiplexer, structures for data storing (Cache),
Visualisation and Interaction modules (see Figure 6). The
Interaction module sends requests and the geometry
changes to the server using the same channel as used by
the data. The server response is de-multiplexed and sent to
the module appropriate to the data type. There, the
existing data is refined using the new chunk, stored in the
Cache and the Visualisation is refreshed.
As an additional module, a (De-)Compressor can be
added in (behind) in front of the (De-)Multiplexer.

6.2. Used data structures
The implemented system uses two types of
geographical data: raster maps and statistical data. Beside
structures for the data storage on a disk and in memory, it
also uses structures accelerating the visualisation, a cache
on the client side, and a register of transmitted data on the
server side.
Raster images (maps) are stored and transmitted in a
form of tiles with a fixed size (2n). On the client side, each
map is saved in a quad-tree. All displayed tiles are
rescaled and inserted into a list to speed up their

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

displaying. In [1], raster data is stored in a special quadtree, where each tree layer covers the whole map area.
Statistical data is stored in a text file, read into
memory, and clustered into a clustering tree during the
server start up. On the client side, the clustering tree is
built gradually during the progressive transmission.
Two different ways can be used to avoid the
unnecessary transmission of already known data. On the
server side, a register of sent data, valid only for a
particular session is currently used. It contains a list of tile
identifiers for bitmaps, and a tree of bit arrays (sent
clusters flags) for sub-trees of clustering tree of fixed size.
Thus, the memory can be saved for the unused sub-trees
due to the locality of explored data. On the client side, a
cache can be used (structures described above) to do the
similar job. In [1], a two level cache for raster data on the
client side was used.

6.3. Transmission control
Transmission of data required for displaying of the
desired view can be controlled either by a server, a client,
or by both of them. When the server controls the data
transmission, it sends data according to the geometry and
register of sent data (only data unknown on the client side
are sent). In this way the requests for individual data
chunks do not have to be sent by client. A disadvantage is
that the server must register all data sent.
When the transmission is controlled by the client, the
client sends the requests for every single data chunk.
Server does not need to register any data. On the other
hand, a disadvantage is a large amount of the requests.
Both ways can be combined by grouping of several
client requests into one; e.g. a request for an area in a
particular scale for either one or more data types.
Transmission of such area is then controlled by the server,
but the request for the next one must be sent again by the
client. In this case, the server does not have to register the
data sent and the client can decide according to the ratio of
already known data, whether to let the server control the
transmission (and transmit some data again) or to continue
sending requests.

7. Tests
In order to show the advantages of a combined
approach, we conducted a set of experiments. A sample
data contained geographical information of 1500+
university students. The subjects were distributed
throughout the United Kingdom. Typical size for the
region of interest was between 1/16 and 1/8 of the whole
UK area.
We measured the download time and the number of
records transmitted for several different methods as
detailed in Table 1. The download time is equivalent to

the time elapsed from the beginning of the transmission
until reaching a particular phase of the transmission. The
last two progressive stages (given by bitmap transmission)
are shown for progressive methods (the phase ‘final-2’
gives rough overview, and the phase ‘final-1’ almost all
important features in the map). The number of records
corresponds to a portion of statistical data (nodes from the
relevant clustering sub-tree) needed to be transmitted for
visualisation. As a benchmark case (100%) we assumed
no progressive transmission without any regions of
interest; i.e. all data clusters/maps in the highest detail.
Table 1 Comparison of time of transmission and
number of transmitted records

no fisheye + no progression
fisheye + progressive final-2
fisheye + progressive final-1
fisheye + progressive final
fisheye + no progression
no fisheye + progressive final-2
no fisheye + progressive final-1
no fisheye + progressive final

number of
records
100%
4%
6%
39%
39%
10%
28%
100%

time
100%
8%
10%
32%
26%
23%
40%
110%

As can be seen from Table 1 (the highlighted row), a
combination of fisheye view and progressive transmission
can lead to a significant reduction in the download time as
well as amount of data transmitted. In the best case, the
reduction amounted to more than 90% as compared to the
benchmark case. However, the drawback of method can
be seen as well, which is the bigger computational
complexity needed for the progressive methods.
Experiment showed that fisheye view combined with the
phase ‘final-1’ of progressive transmission can provide
sufficient information value at a fraction of cost of the
benchmark case.

Conclusions and Further Work
In this paper, we have presented a method for
scaleable transmission and visualisation of several
different data types during interactive exploration of large
spaces. The presented method reduces display space
requirements, and provides a fast, interactive feedback.
The features are achieved by using the focus-andcontext technique and the progressive transmission of
multiplexed data. The focus-and-context view reduces the
display space requirements as well as the amount of data
needed. The multiplexed data of different types is
progressively transmitted and provides fast interactive
feedback already with a small amount of data received.

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

Both, focus-and-context and progressive transmission, use
LoD based on the hierarchy of a particular data type.
Further research includes the data transmission,
visualisation and hierarchy definition. The transmission
delay can be reduced by a suitable data compression that
would support progressive transmission. Also, a better
method for progressive transmission of raster images
would be beneficial. A lot of work remains in the area of
cache implementation and the transmission control. The
adaptive response based on the user’s profile can save the
unnecessary
transmission.
Moreover,
another
magnification method in combination with a more realistic
map projection would increase the intuitiveness of
interaction but could also increase the computational
power needed. Finally, the suitability of the described
techniques for other data types needs to be explored.

References
[1] P. Bouchner, “The Satellite Like MAP with Multiple LoD
Supported by Dynamic Client-Server Model”, Technical report,
Czech Technical University, 2001.
[2] S.K. Card, J.D. Mackinlay, and B. Schneiderman, Readings
in Information Visualization: Using Vision to Think, Morgan
Kaufmann Publishers, 1999.
[3] G.W. Furnas, “Generalized fisheye views”, Human Factors
in Computing Systems, CHI ’86, Apr. 1986, pp. 16-23.
[4] H. Kalva et.al., “Implementing Multiplexing, Streaming,
and Server Interaction for MPEG-4”, IEEE Transactions on
Circuits and Systems for Video Technology, Vol. 9, No. 8,
December 1999, pp. 1299-1312.
[5] T.A. Keahey, “The nonlinear magnification homepage”,
http://www.cs.indiana.edu/hyplan/tkeahey/research/nlm/nlm.htm
l, Oct. 2000.
[6] T.A. Keahey and E.L. Robertson, “Techniques for nonlinear magnification transformations”, Proc. IEEE Symposium
on Information Visualization, IEEE Visualization, October 1996,
pp. 38-45.

[7] J. Komzak and P. Slavik, “Architecture of System for
Configurable GIS Data Compression”, WSCG 2002 Posters,
Pilsen, 2002, pp. 25-28.
[8] J. Komzak and M. Eisenstadt, “Visualisation of entity
distribution in very large scale spatial and geographic
information systems”, KMI-TR-116, KMi, The Open University,
Milton Keynes, UK, June 2001.
[9] J. Lamping, R. Rao, and P. Piroli, “A focus + context
technique based on hyperbolic geometry for visualizing large
hierarchies”, Proc. of the ACM SIGCHI Conference on Human
Factors in Computing Systems, ACM, 1995, pp. 401-408.
[10] Y. Leung and M. Apperley, “A review and taxonomy of
distortion-Oriented
Presentation
Techniques”,
ACM
Transactions on Computer-Human Interaction, 1(2), June 1994,
pp. 126-160.
[11] E.G. Noik, “A Space of Presentation Emphasis Techniques
for Visualizing Graphs”, Proc. of Graphics Interface '94,
Morgan-Kaufmann Publishers, 1994, pp. 225-234.
[12] PNG specification: http://www.wco.com/~png/,
http://www.w3c.org/TR/REC-png
[13] A. Puri and A. Eleftheriadis, “MPEG-4: an object-based
multimedia coding standard supporting mobile applications”,
Mob. Netw. Appl. 3, 1 (Jun. 1998), pp. 5-32.
[14] U. Rauschenbach, S. Jeschke, H. Schumann, “General
Rectangular FishEye Views for 2D Graphics”, Proc. of IMC
'2000 - Workshop on Intelligent Interactive Assistance and
Mobile Computing, November 2000.
[15] U. Rauschenbach and H. Schumann, “Flexible Embedded
Image Communication using Levels of Detail and Regions of
Interest”, Proc. of IMC '98 - Interactive Applications of Mobile
Computing, Rostock, Germany, 1998.
[16] M. Sarkar, S.S. Snibbe, O.Tversky, and S.P. Reiss,
“Stretching the rubber sheet: A metaphor for visualizing large
layouts on small screens”, Proc. of the ACM Symposium on User
Interface Software and Technology, ACM Press, 1993, pp.
81-91.
[17] D.S.P. To, R.W.H. Lau, and M. Green, “A method for
progressive and selective transmission of multi-resolution
models”, Proc. of the ACM symposium on Virtual reality
software and technology, December 1999, pp. 88-95.

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

