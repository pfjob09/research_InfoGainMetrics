Visual User Interface for PDAs
M.Jern, D.Ricknäs, F.Stam, R.Treloar
ITN - Campus Norrköping, Linköpings Universitet - S - 601 74, Norrköping Sweden
E-mail: mikje@itn.liu.se, Robert.Treloar@unilever.com

Abstract
The need for visualisation applications developed for
small handheld devices such as PDAs and intelligent
mobiles are growing. A visual user interface VUI model
based on zooming user interface techniques (ZUI), to
adapt two complete different visualisation application
areas; on-line brand shopping and flood warning system
for PDAs, is presented. The on-line brand shopping was
evaluated in a benchmark usability study comparing it to
traditional PC based eNet shopping. This paper is also a
blueprint to inform researchers and software engineers
about our experience in developing visualisation
applications for PDAs with existing development
platforms.
Keywords: visual and zooming user interface, PDA, online shopping, geovisualisation, Flash

1. INTRODUCTION
Experiments at Xerox Parc in the early 90s by the
Mark Weiser group were the first attempt of addressing
devices with limited screen space. PARC’s experiment
anticipated the new hand-held devices with pen and
gesture interfaces as well as always being connected to a
network. Today’s Personal Digital Assistants (PDAs) can
give us seamlessly computation and visualisation
everywhere we need it. However, while these devices can
be helpful for traditional office work such as reading
emails, using a calendar program or making short notes,
we believe that today’s standard Web interfaces make
them less useful for on-line shopping and
geovisualisation applications. This is not surprising since
these devices have limited screen space, forcing users to
jump around through multiple views, making it harder to
relate disparate pieces of information together. The major
challenges are:
x
x
x
x
x

Limited screen size
How to visualize an image that does not fit
Limited computational resource
Limited wireless communication bandwidth
User interaction

We are exploring Zooming User Interfaces (ZUIs)
where zooming is a fundamental part of the user's
interaction with the PDA. Our research project ideally

wants an answer and insights about the question: “Do
people find it easier to navigate about multimedia data
content when exposed to it via a ZUI as opposed to
a Web type interface, especially in situations where the
screen space is at a premium such as with a PDA". This
paper also describes our experience with various PDA
software tools when developing two application scenarios
“on-line brand shopping” and a “flood warning system”.
A user study comparing the ZUI with a more traditional
on-line shopping Web interface is presented.

2. RELATED WORK
The recognised “focus and context” information
visualisation method [1] continues to stimulate new
solutions and is liable to increase in importance with the
proliferation of PDAs and mobile devices, where display
area is at a premium. Lars Holmquist [2] demonstrated
already at CHI ’97 the “flip zoom” technique embodied
in a palmtop display to function as a Web browser. Users
navigate through a data set by flipping between the
individual pieces, as when flipping among pages in a
book. When an entry is to be examined in detail, it is
selected by clicking on the representation of the item,
then the image of the item is zoomed to a readable size
and the surrounding items are reduced in size and rearranged to accommodate the expanded focus image.
The ZUIs were first introduced in the seminal work of
Ken Perlin and David Fox in their development of Pad at
New York University. There are now toolkits available
for their development like Jazz and Pad++. The DateLens
is a calendar program [3] for PDAs based on a fisheye
distortion technique frequently used in information
visualisation. This “zooming interface” was developed by
Ben Bederson [4] at the Human-Computer Interaction
Laboratory, HCIL, at University of Maryland, together
with Mary P Czerwinski and George G. Robertson at
Microsoft Research. The fisheye views are appropriate
when users need to see details of some specific items in
the context of a large information space. The DateLens is
entirely implemented in C#.
One important aspect when DateLens was designed
was that it should require as little text-input as possible
since it is aimed for use on a pen-based PDA and
restricted to a pen-based user interface simply tapping the
screen. Another important aspect was that the views

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

should to be customisable in as many ways as possible.
Today’s PDA calendars often only support fixed views
but this was something that Bederson et al wanted to
make more dynamic. The DateLens is based on user
interaction called “semantic zooming”, which means that
all graphic objects are represented differently depending
on how much space is available. With this method the
views are not static, they rather adapt to the space that is
left to every graphic object. This is an interaction method
that will be used more when the graphics performance
becomes better on the PDAs since it makes the programs
much more adaptable to the users needs. The main feature
in the DateLens is its fisheye zooming interface. When
clicking on a day in the DateLens in the Tiny View
(Figure 1) this day is zoomed in and is shown in an
agenda view. If a closer look at the day is needed the
maximize button in the upper right corner is clicked. To
return to “Tiny View” from “Agenda View” the minimize
button next to the maximize button is clicked.

the developer direct access to the graphics buffer which
speeds up the application significantly.

3.2

Visual Studio with SDE [7] supports two different
languages, Visual Basic and C#. Unlike the eMbedded
Visual Tools, the SDE cannot work stand-alone but
requires Visual Studio .NET. SDE supports basic GDI
drawing elements, including bitmaps etc, which is a great
advantage compared to eVB where drawing capabilities
are limited. The GDI, however, does not access the
memory directly as the GAPI in eVC++, which means
that the response time is slower compared to GAPI.
3.3

3. CHOICE OF DEVELOPMENT TOOLS
This study focused on PDAs with the operating system
Pocket PC. There are several development platforms to
choose between when programming for the Pocket PC.
Our focus is the available graphics tools. The following
four main alternatives have been studied in this project:
x
x
x
x

3.1

eMbedded Visual Tools
Visual Studio .NET and Smart Device Extensions
(SDE)
Java – Piccolo
Macromedia Flash

eMbedded Visual Tools

The eMbedded Visual Tools consists of two different
development environments; eMbedded Visual C++ 3.0
(eVC++) and eMbedded Visual Basic 3.0 (eVB). The
eVB graphics possibilities are very limited and do not
support any graphics classes. eVC++ is a limited version
of C++ with better graphics possibilities than eVB. The
GAPI or Gaming API is a very common API that gives

Java – Jazz and Piccolo

To make zoomable user interfaces (ZUI) development
easier, professor Ben Bederson at the University of
Maryland has developed a Java toolkit “Piccolo” [6].
Piccolo is a zooming framework (in the Jazz ZUI
tradition) that has been used for their DateLens zooming
project. Its goal is to be smaller and easier to use than
Jazz, while still supporting Jazz's most important features.
Picollo is a general-purpose, platform independent toolkit
that supports zooming object-oriented 2D graphics based
on the Java2D API. Jazz is primarily a "scene graph" for
2D graphics that is analogous to Sun's Java3D and SGI's
OpenInventor in their support for 3D scene graphs.

3.4
Figure 1:DateLens is a calendar program for PDAs

Visual Studio .NET and Smart Device
Extensions

Macromedia Flash

Flash [5] was originally designed for developing Webinterfaces for the desktop platforms. In late 2002, Flash
has also been released for the Pocket PC. Flash is viewed
through a Web-browser with a Flash plug-in. The Flash
plug-in is available on almost all platforms, from SGI
Workstations to Pocket PC and is, according to
Macromedia, currently installed at about 98% of all
computers connected to the Internet. Flash can be done in
two ways: either by using the built in interface with dragand-drop, where no coding is needed, or by coding in a
language called ActionScript. ActionScript has improved
through the last years and is now almost a full-featured
programming language. The environment in Flash is
quite different from other programming environments.
Since it was originally designed for interface
development it is more similar to for example Adobe
InDesign than Visual Studio.
The graphics format in Flash is based on vectors,
which means that there is no loss in quality when
zooming in. This makes Flash particularly interesting for
ZUIs where a lot of zooming is performed. The
performance in Flash is not as good as in C++ but still
much better than, for example, eVB.

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

3.5

Our choice of a development platform

When choosing the platform for developing a ZUI, the
most important criteria are the quality of supported
graphics features. The lack of graphics classes in eVB
makes this an uninteresting environment. One might
consider eVC++ with its GAPI but since it soon will be
replaced by .NET with SDE this platform was not
suitable because of future compatibility. The .NET with
SDE has not been released in a final version yet, which
removed this option as well. The remaining potential
platforms are Java with Piccolo and Macromedia Flash.
Piccolo has a quite interesting environment and all the
built in zooming features made development quite easy.
The Java Virtual Machines on the Pocket PC did not,
however, meet all the requirements that Piccolo had and
this, together with the combination of lack of control in
the ZUI-development, made this alternative uninteresting.
The last alternative was Macromedia Flash and it turned
out to be a good choice. It has the vector-based graphics,
the very well designed environment and a player for the
Pocket PC that actually works flawlessly. The only
downside with it is the performance issue, but this can be
handled with good programming.

3.6

Perhaps surprisingly, VUI and ZUI techniques have been
rarely used for interfaces for PDAs and other devices
with small displays.

4.1

On-line brand shopping

On-line shopping with desktop computers is rather
different compared to shopping in a supermarket. In online shopping, the products are divided into categories
that are selected through menus and submenus with the
products and prices shown in list. In a supermarket,
however, products from the same brand are often placed
together to show the entire series from a brand. Many
manufacturers would prefer on-line brand shopping. If a
list contains only product names, the brand with its
logotype can be forgotten and the commercials and the
recognition of the brand is lost. On-line brand shopping
for a PDA is difficult to implement with traditional user
interfaces because of the limited screen size.

Visual User Interface (VUI)

The “Visual User Interface” (VUI) [8,9] plays a major
role in a dynamic user interface enabling the user to take
a more active role in the process of visualizing and
investigating data. The reader interacts directly with the
on-screen graphics and the data behind the graphics
without having to work with traditional GUI controls.
The sense of immediacy and speed-of-thought interaction
in both 2D and 3D space (and often also correlation
between these two) helps the user to gain insight. By
clicking on a graphics object you are able to drill-down to
more detailed information of that object. We are
interested in applying a similar interaction technique to
our PDA applications.

4. TWO CASE STUDIES
We shall present two completely different application
scenarios “on-line brand shopping” and “flood
forecasting” with different implementation of VUIs and
ZUIs. Our main goals and features can be summarized:
x
x
x
x
x

Maintain context
Provide information scaling at focus
Avoid distortion
Prevent occlusion
Allow panning and centering

Figure 2:Unilever ZUI-based brand shopping prototype

ZUIs possess many qualities that make them a feasible
paradigm for on-line brand shopping on small screen
interfaces. They have infinite workspaces that can display
an unlimited amount of product information. The user
just needs to move the information space around and look
for the brands he/she is seeking within the confines of the
display window. When finding it, the products can be
observed in detail by zooming in. A better perspective
can be gained by zooming out.

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

Our on-line brand
shopping ZUI is based on
a simple tree structure
(figures 2, 3 and 4). It
has a first page with main
categories, such as Hair
Care,
Deodorants,
Household Care etc. All
the
products
are
distributed under these
main categories. To
purchase an item simply
click on a main category.
This will “zoom in” on
that main category and
sub
categories
will
emerge next to the main
category. To move down
in the tree structure,
simply click on a sub
category of your choice
and the different brands
belonging
to
that
category will appear.
Figure 3: Tree structure
Choose the brand you are
of the ZUI-based brand
interested in by clicking
shopping prototype
on the logo. There will
now be another zooming effect and a list of brandoriented products will be shown below the logo. You
purchase a product by clicking on the button “buy”.

Figure 4: How to purchase a
Sun-product with ZUI:
1. Click on Household Care.
2. Click on Sun.
3. Choose product and click
on the “Buy” button.

To go back to the top of the tree, click on the logo of the
brand again, and you will “zoom out” from this image
and move up one level in the tree structure. Click on sub
categories to move up to the main categories. You can
also use the small “house button” in the lower left corner

of the screen. If you click on this button you will
automatically return to the main window with all the head
categories. Next to the house button there is a question
mark. This is a help button with instructions on how to
move around in the tree structure.

4.2

Flood forecasting

The “FloodViewer” is a PC desktop application based
on our visual user interface technology suitable for the
Web in both 2D and 3D (figure 5). The data is retrieved
from the ARNO River in Toscana, Italy, for the flood
period of November 2000, when a dramatic flooding took
place. Data to be explored includes GIS vector data
(River segments, Gauge stations, Sub-basins and Cross
section), DTED (digital terrain data), and raster-based
radar rain data. The VUI will enable the users to take a
more active role in the process of visualising and
investigating flood forecasting, allowing them to better
understand the data and uncertainty behind the
forecasting system. We also provides easy-to-use
collaborative
visualisation
tools
enabling
the
meteorologists, hydrologists, operations managers, and
the civil defence manager to view and discuss the
forecasting results in real time across the network before
finally interacting with the media, the police, other
officials, and the public.

Figure 5 – FloodViewer PC desktop visual user interface
design. The terrain data from Arno river region is showed in
three “coordinated views” 2D, 3D and cross section views.
The 3D view provides the 3D terrain overview of the area
“context” and the 2D view shows the selected area to be
investigated “content”. All views are correlated.

We are developing a server-based version of the
FloodViewer that can send requested images (bmp) of
terrain and rain data to the PDA through the mobile
network together with selected gauge station information
about hourly rain measurements. The FloodViewer VUI
supports zooming, panning, and drill down for individual
gauge stations. The PDA version allows the operation

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

staff to get the latest flood forecasting information being
in the field.

Figure 6: FloodViewer PDA version is based on transmitting
compressed images from a FV server to the PDA client with
a two-way data link for user interaction. Left PDA view
shows the entire region-of-interest and the right view is a
zoom-in at three key rain gauge stations.

Overall Flood Viewing (FV) PDA process:
1. The PDA user creates a mobile connection and starts
the FV-Client
2. FV Server launches FV on the PC desktop
3. The user gives viewing commands using command
buttons in the FV Client VUI
4. FV Server continuously grabs and encodes the image
on the local FloodViewer display and streams the
compressed image to FV Client (also gauge station
query information)
5. Steps 4-5 repeat until the PDA user closes FV Client

5. USER STUDY
We performed a benchmark usability study of our
ZUI-based brand shopping system compared to a more
traditional text-based, on-line shopping site. We
developed a text-based PDA version with hyperlink using
the same product categories as in the ZUI version to
perform a comparable study between the two systems.
The objectives of our study were to examine the initial
design ideas behind the ZUI-based brand shopping
system and find out if the user interface design could be
further improved, and to compare its overall usability
against text/hyperlink-based shopping on a PDA. We also
wanted to test the performance and user friendliness of
the Flash system as a tool for developing ZUI
applications for PDAs. The participants were asked to
purchase six different products using ZUI-based brand
shopping and then repeat the same procedure with the
text/hyperlink-based system.

5.1

User Background

Ten university students, 50% males and 50% females,
22 – 26 years old, were selected for the evaluation. Three
participants had previous experience with a PDA. All
participants had between average to high experience of
computers and some experience of on-line shopping.

5.2

Time measurements

During the test, the time needed to purchase each of
the six items was measured. Columns 1 (text/hyperlink)
and 2 (ZUI) in figure 8 show the average time needed to
purchase the six products during their first attempt to use
the interface. Columns 3 and 4 show the corresponding
time needed after purchasing the six items once in the
other interface.

250

seconds

200

150

Homepage
ZUI
100

50

Figure 7: FloodViewer with overlapped and transparent
radar rain data and a drill-down operation for a selected
rain gauge station (right view).

Information on flood forecast information is often needed
at operational sites in the mountain where no wired data
connections or even electricity exists. Mobile solution
would bring significant time and cost savings. Major
restriction is the limited bandwidth, ~10kbits/sec.

0

The first test

Overall

Figure 8: Average test-finishing time

The results demonstrate that the ZUI and the
traditional user interface give similar average shopping

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

time, although the participants have previous experience
with a text/hyperlink-based user interface while the ZUI
brand shopping is new to them. The left columns show
that the ZUI is actually faster for a first time shopper
compared to a traditional shopping site.

5.3

The inquiry form

After the test session the test user was told to fill out
an inquiry form about the two interface styles. We
received the following comments about the ZUI:
“The images make the shopping much more fun and
easier because you can recognise a brand so much
faster.” – Johanna
“It is much more fun and easier when you have
understood how to navigate. I want to see the different
brands of the products.” – Jonas
“Simple to use, even for a beginner.” – Linda
“A simple and more commercial interface for ordinary
people.” – Jennie

5.4

more popular. The user interfaces for commonly used PC
desktop applications must be adapted to smaller screens
based on new and innovative interaction methods like
ZUI and VUI.

7. ACKNOWLEDGEMENTS
The PDA project is collaboration between Linköping
University and Unilever. We like to thank Dr Rob Treloar
from Unilever Research for his contribution. Our Web
site
can
be
found
through:
http://servus.itn.liu.se/smartdoc/.

8. REFERENCES
[1]

Plaisant, C., & Shneiderman, B. (1992). Scheduling Home
Control Devices: Design Issues and Usability Evaluation
of Four Touch screen Interfaces. International Journal for
Man-Machine Studies, 36, pp. 375-393.

[2]

Holmquist, L. E., Redström, J., Bretan, I., Danielsson, R.,
Karlgren, J., & Franzén, K. (1999). WEST: A Web
Browser for Small Terminals. UIST 99, ACM Symposium
on User Interface Software and Technology, CHI
Letters,1(1),
pp.
187-196.
http://www.viktoria.se/fal/publications.html

[3]

Bederson, B.B., Czerwinski, M.P., Robertson, G.R. (April
2002) ”A Fisheye Calendar Interface for PDAs: Providing
Overviews for Small Displays”. To appear as an HCIL
Tech
Report
http://www.cs.umd.edu/hcil/datelens/fishcal.pdf

[4]

Bederson, B. B. (2000). Fisheye Menus. UIST 2000,ACM
Symposium on User Interface Software and Technology,
CHI Letters, 2(2), pp. 217-225. Professional. Behaviour &
Information Technology, 1(1), pp. 43-54.

[5]

Macromedia Flash
http://www.macromedia.com/software/flash/

[6]

Piccolo
http://www.cs.umd.edu/hcil/piccolo/

[7]

Visual Studio .NET SDE
http://msdn.microsoft.com/vstudio/device/smartdev.asp

[8]

Jern M (2000). Collaborative Visual Data Navigation on
the Web. Invited Keynote Lecture to INFVIZ 2000, IEEE
International Conference on Information Visualisation,
London, IEEE Computer Science Press

[9]

Jern M (2001) Visual Data Navigators “Collaboratories True Interactive Visualisation for the Web. Invited
Speaker, Mobile and Virtual Media International
Conference 2001

Conclusions from the user study

The participants were asked to rank the two different
user interface approaches. The questions were of the type:
“It was easy to get started”, ”It gradually became easier to
buy a product”, “The text was easy to read”, “The
interface was fast enough” etc. The last question, “What
was your overall reflection of the interface” resulted in
higher ranking for the ZUI but also the average ranking
for all questions was better for the ZUI. When taking into
consideration that the text/hyperlink interface is well
known to everybody available in most Web shopping
systems and that our test users had none or little
experience with a ZUI, one could predict the potential for
ZUI on PDAs. One interesting result was that some users
with high computer experience preferred performance
instead of quality, which has to be considered when
designing a PDA-based on-line shopping system.

6. CONCLUSION
The case study of the ZUI-based brand shopping
indicates that a zooming paradigm is feasible to use in the
design of small screen interfaces such as the PDA. Many
product categories can be viewed without any need for
scrollbars. There is a need to reveal more about the
similarities and differences between “desktop-sized”
screens and their small counterparts and to find out what
constraints small screens put on interaction design. A
particular issue is the effect of number of layers of zoom
on user orientation/disorientation - how complex can you
make the zooming environment before a user starts to feel
lost and out of control. There is no doubt that PDAs and
powerful mobiles with smaller screens will more and

[10] SMARTDOC web site servus.itn.liu.se/smartdoc/

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

