A Context-Based Adaptive Visualization Environment
Maria Golemati Constantin Halatsis Costas Vassilakis Akrivi Katifori Georgios Lepouras
Dept. of Infor- Dept. of Informatics Dept. of Computer Dept. of Infor- Dept. of Computer
matics & TeleScience &
matics & Tele& TelecommuScience &
communications
Technology,
communications,
nications,
Technology,
University of
University of
University of
University of
University of
Athens
Peloponnese
Athens
Athens
Peloponnese
vivi@di.uoa.gr
costas@uop.gr
margo@di.uoa.gr halatsis@di.uoa.gr
gl@uop.gr
Abstract
Digital libraries and historical archives are increasingly
employing visualization systems to facilitate the
information retrieval and knowledge extraction tasks of
their users. Typically, each organization employs a
single visualization system, which may not suit best the
needs of certain user groups, specific tasks, or
properties of document collections to be visualized. In
this paper we present a context-based adaptive
visualization environment, which embeds a set of
visualization methods into a visualization library, from
which the most appropriate one is selected for
presenting information to the user. Methods are selected
by examining parameters related to the user profile,
system configuration and the set of data to be visualized,
and employing a set of rules to assess the suitability of
each method. The presented environment additionally
monitors user behavior and preferences to adapt the
visualization method selection criteria.

1. Introduction
Information technology continues to generate
increasing amounts of data, and visualization systems
(VSs) have emerged as a promising approach for
assisting users in understanding, analyzing and
managing these high data volumes [1] and providing
information insight [2]. VSs have been extensively
employed in various domains, e.g. scientific, statistical,
stock-market trades, computer directories, or document
collections [3].
Insofar, an extensive number of visualization
methods have been proposed (e.g. [3], [4], [5], [6]),
significantly varying in a number of aspects, including
the target domain, the tasks supported and the type of
data that are visualized. This suggests that a particular
visualization method may be more effective when

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

applied for executing specific tasks on data having
specific properties, or, equivalently, that there is no
single visualization method that can be considered to be
“best” for all tasks and data sets. Furthermore, the
efficiency of a visualization method may depend on
factors pertaining to the available hardware (e.g. a
method may yield optimal results if 3D displays or data
gloves are available) and the profile of the current user
(e.g. computer skills, knowledge of the data space
structure, personal likings and aversions).
The present paper suggests a visualization
environment, in which a set of visualization
methods/tools are matched against the user, task, system
and document contexts. This visualization environment
is under development for the Historical Archive of the
University of Athens, to assist researchers and other
visitors in their information retrieval tasks.

2. Related work
In describing the role of user modeling in
Visualization Supporting Systems, [7] mentions that the
experience and capabilities of a user should cause the
VS to change and adapt to him/her. To this end, a VS
should (a) accommodate user models and (b) consult
them when visualization methods and/or their
operational parameters are selected
[8] suggests three kinds of user modeling: i) the
explicit modeling, where the user model is directly
extracted from the user through straightforward
questions. It usually refers to initial information on a
new user starting to interact with a VS. ii) the implicit
modeling, information extracted from the user’s
interaction with the system (keys and functions used,
choices etc) and iii) special tasks to solve, information
extracted from the user after having him/her involved in
solving special predefined tasks (i.e. implementing color
deficiency tests, a system can distinguish the color
recognition abilities of a user).

In [7], a user model has been suggested to constitute
the basis for an adaptive VS. They designed computer
tests and games to test user abilities such as color
perception, color memory, color ranking, mental
rotation and motor coordination.
[9] claims that successful visualization environments
do not depend on a single powerful visualization, rather
than on a whole set of visualizations, appropriate for
various tasks and data types. In accordance to this it
presents IVEE, a VS supporting multiple visualizations
and dynamic queries. Although user input is restricted
on his/her widget selections and the available
visualization layouts conceal important document
properties (hierarchical structure, hypertext structure
etc.), IVEE provides a variety of visualizations and
features to guide users in extracting information.
A number of 2D and 3D interface models have been
implemented in the Periscope system [10] such as a
holistic, an analytical, a hybrid as well as a specialized
model to give the user the opportunity to select a
specific presentation method to focus on certain
properties of the results obtained. The user can assign
search result attributes to visualization dimensions, and
therefore, modify the method of visualization to
highlight important features of the search result.
Furthermore, comparisons between results from two or
more different queries are allowed in a single 3D scene.
The work described below is based on the user
modeling and system adaptive concepts. The proposed
visualization
environment
combines
existing
visualization methods and user-context extraction
procedures, resulting in a novel user-sensitive
information space.

3. Context Modeling
3.1. User Context
Users who come to the Historical Archive to retrieve
any piece of information vary in multiple ways. For
example, they have different educational levels, ranging
from users who only attended elementary or secondary
school to users who possess degrees of expertise (MScs,
PhDs) in various scientific subjects. They also have
differences in their experience with using a computer,
ranging from those who are beginners to the ones who
are very experienced. But even those who are expert in
using the computer, they have different ways in foraging
the information they are interested in, and these
differences depend on individual preferences and
existing knowledge. Individual differences constitute a
major factor that influences the user profile. Besides
personal preferences and existing knowledge, cognitive
abilities, specific aims and tasks to be solved, the
gender, the age, the profession and the living

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

environment of the user constitute the property of
individuality, which defines a fundamental part of the
user profile. Moreover, the steps a user performs while
trying to reach the information needed, the -so calledhistory of the user, plays an important role in sketching
out his/her profile and deciding which VS suits him/her
best, so as to employ this system the next time s/he
returns to search for information. Important properties
related to the user profile are listed in table 1 (the list is
not exhaustive). The list is based on [11] and has been
adapted to fit the profile of the historical archive users.
Table 1. User context properties
Primary
Education
Elementary
Higher
Faculty members
University
Administrative personnel
relation/role
Student
/title
None of the above or no relation
Perfect
Information
Retrieval
Medium
Knowledge
Novice
Research
Aim
Publication
Personal Information
Age
General
Gender
Profession
Visual memory
Abilities
Arithmetic memory
Color recognition

3.2. System Context
In addition to the properties related to the
profile/model of the user, the effectiveness of a
visualization method may also depend on the available
hardware and the peripheral devices attached to the
computational system used for information foraging.
Computational systems vary as well as users do;
different input devices can be used, ranging from
traditional mouse and keyboard to joystick and even 3D
devices and sensors. The output devices also influence
the decision about which visualization to use.
Traditional 2D displays are not the only representation
means available, as recently 3D displays and VR
equipment are being used in more and more applications
[12]. Processor capacity, memory size and any other
computational equipment provide also important
information on how to better exploit existing hardware
in the service of the user’s information retrieval needs.

Important properties related to the system context are
listed in table 2 (the list is not exhaustive).
Table 2 System context properties
mouse
keyboard
Input
joystick
devices
Specialized input devices (3D mouse,
glove, etc.)
2D monitors
Output
3D monitors
devices
Head mounted displays
Processor
Other
hardware
Memory
equipment
Graphics

3.3. Document Collection Context
Finally, the characteristics of the data or document
collection should be modeled. Every document
collection has its particularities, which influence the
effectiveness of a VS. The Historical Archive of the
University of Athens contains documents issued since
the foundation of the University up to quite recently,
which are classified in categories. The number of
documents contained, the categorization criteria, the
existence of sub-categories and so forth, are important
factors implying diversions in multiple document
aspects (document creation time period, organizational
division of origin, type of content -e.g. regulation,
invitation, announcement etc).
The documents also vary in their format ranging
from text documents (mainly), but also pictures, audio
and video documents. Text documents in particular,
need to be further distinguished into:
Documents for which full text is available
Documents which have been scanned into
image format
Documents not available in digital format.
In the context of the Athens University Historical
Archive, the minutes from the various university
meetings (senate, faculty, department, etc), are also
considered as a special case, since firstly these are the
set of text documents mostly requested by the archive
users and secondly a minutes document usually contains
a number of different subjects (management, academic,
financial, etc), with each of these subjects probably
requiring a different visualization method.
Document metadata (author, title, related keywords,
document size and type) add an important component in
the process of selecting the most appropriate VS.
Finally, the origin of the document collection should
be considered: a static collection is the outcome of
selecting one or more branches of a categorization

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

scheme, typically in a drill-down browsing pattern,
while a dynamic collection is formulated by evaluating a
query against the full text or the metadata of the
available documents. Static collections usually have a
hierarchical structure which can be used as a
visualization aid (through trees or other methods),
whereas dynamic collections do not necessarily have
such structures, the query terms however can be
exploited in the resulting document set visualization.
Important properties related to the document
collection context are listed in table 3 (the list is not
exhaustive).
Table 3 Collection context properties
Criterion of categorization
Categories of
Number of elements
documents
Relation between categories
Full text
Image
Text documents
Manuscript only
Meetings’ minutes
Author
Title
Metadata
Type
Department of issue
Keywords
Static
Collection origin
Dynamic

4. Visualization methods and their selection
Having modeled the user, system and document
collection properties for the visualization task at hand,
the proposed system proceeds to select the most
appropriate visualization method. This decision is taken
by determining the visualization method properties
needed to efficiently support the current task and,
subsequently, matching the computed property list
against the feature profile of each available visualization
method. To this end, the visualization method properties
should be formally modeled and an automatic set of
rules for matching contexts (user, system and collection)
to visualization method properties should be developed.
The property model and the selection method are
described in the following paragraphs.

4.1. Visualization Method Properties
In designing a VS, several issues are taken into
account. The principle goal is to bridge the user with the
information source, in the best way possible. Building
such a bridge is not a simple task, as many parameters
have to be taken into account. Typically, the design of a
VS has a specific focus. Its designers use intelligent

procedures in achieving that focus. In this way, every
one of the systems has its own properties, which make it
unique in improving a specific aspect of the information
foraging.
For example, there are visualization methods which
try to display full text documents in the most effective
way, using thumbnails, highlights, document size and
type cues, color codings, showing relations between
terms, etc. Other methods, concentrate on improving
focus + context techniques, in order to give the user
alternative views to the document collection, using
zoom in and out functionalities, graph rotation,
hyperbolic spaces etc. A very common issue in large
document collections which are structured in
hierarchical way is how to visualize this hierarchy in an
effective and easy to explore way. Important solutions to
this issue have been proposed by introducing the third
dimension in the visualization design, using tree-like
layouts, real world metaphors, nested items,
transparency/solidity functionalities etc. One of the main
concerns, a Historical Archive has to deal with, is the
managing of temporal information, i.e. information that
vary with time. To facilitate the user in retrieving such
information, visualization methods employ time axes in
a variety of ways: bar charts, time lines, spirals etc.
Another important concern in designing a visualization
method is the representation of the relation between
documents. This issue is effectively addressed using
links between related documents, or clustering
techniques, which bring together the related documents,
color codings which reveal existing relations, etc. In a
similar way it is addressed the problem of the
representation of the relation between the query terms
and the displayed results.
Finally, since a data collection is not restricted in text
documents, many visualization methods focus on
designing novel techniques to facilitate the user to
retrieve and view picture, audio and/or video
documents.
A list of basic features of VSs is depicted in table 4
(the list is not exhaustive). The first column lists the
visualization method property, while within the second
column the possible values for this property are
presented. Each value is followed by an indicative list of
visualization methods for which the specific
property/value combination applies. Note that some
visualization methods may support multiple values for a
specific property (e.g. the PLAO visualization method
[13] may operate both in 2 and 3 dimensions), in which
case the method is repeated under all pertinent list
elements. Note also that in some cases, either a feature is
supported or not (e.g. color coding). In these cases, no
value list is provided in the second column; a dash is
used instead, followed by the list of methods supporting

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

the feature. References are not provided in this table due
to lack of space.
Table 4 – VS Properties and respective values
Number
of
dimensions

Metaphor

Interactive
browsing
supported for
documents of
type:
Supports
user-defined
grouping for
documents of
type:
Color coding
Term
frequency

2 (PLAO, IVEE, …)
2 ½ (Data Mountain, LookMark, …)
3 (PLAO, IVEE, Perspective Tunnel, …)
Landscape (Information City, Vineta, …)
Book and Library (WebBook, CAVEETD virtual library, …)
Perspective Planes and Panels (Data
Mountain, Lookmark, …)
3D Geometric Shapes (Information
Pyramids, VizNet, …)
Trees and Graphs (Starwalker, Visible
Threads, ….)
Article (UVA, SPIRE, Doc Cube, …)
Publication (Bead, Vineta, Cat-A-Cone,
UVA, …)
Hypertext (Data Mountain, LookMark,
WebBook…)
Photograph/Video (Viz-Net, Dynamic
Timelines, …)
Articles (-)
Books (WebBook, Web Forager, …)
Hypertext (WebBook, Web Forager, …)
Photographs/Video (-)
- (File System Navigator, Harmony
Information Landscape, …)
- (Tile bars, PRISE, Themescape, …)

4.2. Visualization Method Selection
The visualization method selection procedure
matches properties from the user, system and collection
contexts against the VS properties. To enable this
matching, a rule database has been constructed,
containing rules with the following format:
(context-property, vis-method-property, score)
where context-property is a property from the user,
system or collection context, vis-method-property is a
VS property and score is a numeric metric in the range
[-10, 10] expressing how appropriate visualization
methods having the specific vis-method-property are
considered for contexts where the particular contextproperty holds. For example, the rule
(sysctx-display-3D, vismeth-noDimensions-3, 6)
declares that visualization methods employing three
dimensions are considered quite appropriate for system
contexts with 3D displays, while the rule
(colctx-origin-dynamic,
vismeth-itemgroup-hierarchical, -4)
expresses the belief that a visualization method,
employing hierarchical item grouping, is inappropriate

for collections that have been formulated by means of
submitting queries. The rule database has been
developed by interviewing users and VS experts, who
were asked to match context properties against
visualization method properties. The interview results
along with published evaluation results of VSs (e.g.
[14], [15], [16], [17]) were used as input for the
population of the rule database.
When a collection needs to be visualized, the system
firstly compiles the full set of context properties, which
is denoted as CP. Subsequently, it traverses the list of
available visualization methods, extracting for each
method M the set of method properties PM, which is
used to compute a total score for method M. The total
score is given by adding the score field s of all rules R =
(cp, vp, s), for which cp CP and vp PM. Finally, the
visualization method with the highest total score is
selected to perform the visualization. Effectively, this
step examines whether the properties of the visualization
method are considered appropriate for the current
context parameters, as this is determined by the rule
base. Note that under this scheme the absence of any
rule correlating a context property cp with a
visualization method property vp has the effect that
property vp is considered “neutral” for contexts having
the property cp, removing thus the need to insert rules of
the form (cp, vp, 0) to explicitly state such property
orthogonalities.

4.3. Adaptive features in method selection
The visualization method selection process described
in section 4.2 does not take into account the dynamic
profile of the user, as this is exhibited by the user’s
preferences and dislikes while working with the system.
This dynamic portion of the user context is
accommodated by complementing the rule list described
in section 4.2 with a user-specific preferences database,
which hosts information regarding:
whether the user has considered a visualization
method suitable/not suitable for a specific
context.
whether the user likes/dislikes a specific
visualization method altogether.
This information is collected from the user, when the
visualization task is completed (the respective window
is closed) and when an alternate visualization method is
requested. More specifically, the “close window” user
interface widget unfolds a drop-down menu with the
options “The visualization was satisfactory”, “The
visualization was not helpful for this data collection”
and “The visualization was obscure/unusable”, from
which the user selects one. If the response to this dropdown is “The visualization was obscure/unusable”, then

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

the dynamic user profile is augmented with a record of
the form
(dislike, viz-meth)
stating that the user has a negative stance against the
specific visualization method in general. Note that this
does not inhibit the use of the visualization method in a
future case; such records are taken into account by the
visualization method selection procedure to reduce the
total score for the specific method (described below).
The method however could be selected if it is found to
score significantly higher than other methods a specific
context. If the user selects one of the two first replies,
then a record of the form
(eval, system-context, collection-context,
viz-meth, score)
is added to the dynamic user profile, where score is “1”
or “-1”, depending on which response was selected.
Note here that when the user chooses one of the first two
replies, the visualization method is considered
helpful/not helpful for the current context.
The rules within the dynamic user profile are taken
into account for selecting the most suitable visualization
method in system context SC and collection context CC
according to the following scheme:
if a (dislike, viz-meth) rule exists in the dynamic
user profile, then the total score for the specific
visualization method is decremented by 15.
for the second form of rules, when the total score
for a specific visualization method is computed,
the system retrieves all the rules Rdc = (eval, syscon, col-con, viz-meth, score) pertaining to this
method. Subsequently, a similarity metric
between (sys-con, col-con) and (SC, CC) is
computed, to determine which of the rules is
associated with a context best matching the
current context. The value of the similarity metric
falls in the range [-10, 10], where -10 is used for
“totally different” contexts and 10 is used for
“exactly matching” ones. The rule with the
highest positive similarity metric is finally
selected, the similarity metric is multiplied by the
“score” field of the rule (1 or -1, depending on
whether the visualization was considered helpful
or not in the specific context) and the result is
added to the total score for the visualization
method under consideration. If no rule has a
positive similarity metric, then the total score for
the visualization method is not altered.
The rationale behind the computations performed
using the second rule form is that if a visualization was
found to be helpful/not helpful in some context, then it
is “almost certain” this perception will hold for identical
contexts; if, however, two contexts differ in a number of
parameters, then the certainty level of this belief drops.
This certainty level is reflected in the context similarity

metric, while the multiplication by the “score” field
simply renders the outcome positive for “helpful”
visualizations and negative for “not helpful” ones.
Besides the “close window” widget, the user
interface hosts the “Switch visualization” button, which
provides the ability to visualize the same collection with
an alternate method. A user may reach this decision
because “An alternate view to the data is desired”, “The
visualization was not helpful for this data collection”
and “The visualization was obscure/unusable”, which
are the same options listed when the “Switch
visualization” button is clicked. In all cases, the dynamic
user profile is updated in the same way that was
described for the “close window” widget.

[4]

[5]

[6]

[7]

[8]

5. Conclusions and Future Work
In this paper we presented a context-based adaptive
visualization environment to support information
retrieval tasks in a Historical Archive. The proposed
environment uses a visualization library, where preselected visualization methods have been registered,
along with their properties. Visualization method
properties are matched against the task context, which
includes static and dynamic user profile, system
configuration and information regarding the data
collection, in order to select the most prominent
visualization method for the task at hand. Matching is
performed through a set of rules, accommodating both
generic properties (e.g. number of dimensions in the
visualization, color-coding) and method-specific
properties (e.g. radial graph layout).
Insofar, the design of the system has been completed
and a first prototype is being implemented. Besides the
completion of the prototype, future work will focus on a
thorough system evaluation, which will provide
feedback both on the overall system effectiveness and
for fine-tuning the rule database, and especially the
“score” field. Monitoring specific user activities and
behaviors (e.g. idle tile, use of “reset visualization”
functions, erroneous activities etc) for enhancing the
dynamic profile will also be considered.

[9]

[10]

[11]

[12]

[13]

[14]

[15]

References
[1]

[2]
[3]

H. Chen, J. Nunamaker Jr., R. Orwig and Olga Titkova.
Information Visualization for Collaborative Computing.
In IEEE Computer, Vol. 31, Issue 8, 75 – 82, August
1998.
R. Spence. Information Visualization, Addison-Wesley,
2001.
B. Shneiderman. The eyes have it: a task by data type
taxonomy for information visualization. Proceedings of
the IEEE Visual Languages (Boulder, CO, 1996). IEEE
Computer, 1996.

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

[16]

[17]

S. K. Card, J. D. Mackinlay and B. Shneiderman.
Information Visualization: Using Vision to Think.
Morgan-Kaufmann, San Francisco, California, 1999.
Ed H. Chi. A Taxonomy of Visualization Techniques
using the Data State Reference Model. Proceedings of
the IEEE Symposium on Information Visualization 2000
(InfoVis'00), 69-75, September 2000.
Chris North. Information Visualization. In Handbook of
Human Factors and Ergonomics, 3rd Edition, G.
Salvendy (editor), New York: John Wiley & Sons, 2005.
Gitta O. Domik and Bernd Gutkauf. User modeling for
adaptive visualization systems. In R. Daniel Bergeron
and Arie E. Kaufman, editors, Proceedings of the IEEE
Conference on Visualization 1994
Fischer G., Lemke A., Mastaglio T., and Morch A.. The
role of Critiquing in Coorporative Problem Solving.
ACM Transactions on Information Systems, 9, 123 –
151, 1991
Christopher Ahlberg, Erik Wistrand. IVEE: An
Information Visualization & Exploration Environment,
Proceedings of IEEE Viz, 1995
Wiza W., K. Walczak, W. Cellary. Periscope - A System
for Adaptive 3D Visualization of Search Results,
Web3D 2004 Symposium - the 9th International
Conference on 3D Web Technology, Monterey,
California (USA), ACM SIGGRAPH, pp. 29-39, April
2004
UM 97 Reader's Guide. User Modeling: Proceedings of
the Sixth International Conference, UM97. On-line
proceedings, 1997. Available from the World Wide
Web: http://www.um.org
Doug A. Bowman, Chris North, Jian Chen, Nicholas F.
Polys, Pardha S. Pyla, Umur Yilmaz. Information-rich
virtual environments: theory, tools, and research agenda.
Proceedings of the ACM symposium on Virtual reality
software and technology, pp. 81-90, 2003.
An Integrated Reading and Editing Environment for
Scholarly Research on Literary Works and their
Handwritten Sources, E. Lecolinet, L. LikformanSulem, L. Roberrt, F. Role, J-L, Lebrave, Proc. of ACM
Digital Libraries Conference, 1998
Shneiderman, B., Feldman, D., Rose, A., and Ferre
Grau, X. Visualizing Digital Library Search Results
with Categorical and Hierarchical Axes.Proc. 5th ACM
International Conference on Digital Libraries, San
Antonio, TX, ACM, New York, 57-66, June 2-7, 2000.
Robertson, G. G., Czerwinski, M., Larson K., Robbins
D., Thiel D. and Van Dantzich M. Data Mountain:
Using Spatial Memory for Document Management.
Proceedings of ACM UIST ’98 Symposium on User
Interface Software&Technology, San Fransisco, CA,
153-162, November 1998.
Robertson, G. G., Van Dantzich, M., Robbins, D.,
Czerwinski, M., Hinckley, K., Risden, K., Thiel, D.,
Gorokhovsky, V. The Task Gallery: A 3D Window
Manager. CHI Letters, volume 2, issue 1, 494-501,
2000.
D. Modjeska. View vs. Overview: Hierarchical Data
Visualization in Desktop Virtual Reality. Proceedings of
NordiCHI 2000. STIMDI, 2000.

