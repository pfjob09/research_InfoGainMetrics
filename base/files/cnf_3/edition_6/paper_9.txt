Excel Visualizer: One Click WYSIWYG Spreadsheet Visualization
Richard Brath, Michael Peters
Oculus Info, Inc.
richard.brath@oculusinfo.com, mike.peters@oculusinfo.com
Abstract
Oculus Excel Visualizer is a point and click data
visualization framework which leverages the inherent
data collection, organization and modeling capabilities
of spreadsheets and creates easy to use, easy to
comprehend 3D visualizations by re-using the layout and
formatting already present in the spreadsheet.

1. Introduction
Spreadsheet applications, such as Microsoft Excel,
have been widely adopted as simple and powerful tools
for free-form data manipulation. Spreadsheets have
evolved into sophisticated data repositories for
collecting, summarizing, analyzing and modeling
information [Lie99].
Information visualization has eluded the widespread
general-purpose
adoption.
Many
information
visualization techniques require data to be structured into
specific layouts prior to visualization. The typical data
structures used by information visualization include
tables (e.g. SQL database queries and CSV files); arrays
(e.g. cross-tabulations, pivot tables and OLAP queries)
and relational structures (e.g. networks and graphs). In
practice, though, the data in many spreadsheets are not
organized consistently with these layouts. Advanced
spreadsheet users may organize their data to take
advantage of information visualization but there are
many novice and casual spreadsheet users who have
neither the time nor inclination to re-organize their
spreadsheets to suit the desired visualization.
Spreadsheet users can make use of many different
types of chart and graph components built-in to
spreadsheets to provide some visual analysis capabilities.
In actual practice, charting functionality is not used
consistently. Some users are adept at manipulating many
different types of spreadsheet charts and are capable of
inventing novel workarounds to bypass current charting
limitations, while other users are unwilling to incur the
extra overhead of learning the unique charting features or
are reluctant to re-organize their data into a layout that

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

facilitates chart creation. Additionally, limits on existing
charting functionality, such as the maximum number of
data points presented at once, or the alignment and
readability of labels in a dense chart tend to restrict the
abilities of spreadsheet charts for detailed data analysis
of large spreadsheets.
We were motivated to create a visualization tool that
could directly visualize spreadsheets, without requiring
any content re-organization to enable ad hoc spreadsheet
visualization for visual data analysis. We wanted a
technique that could scale to large spreadsheets with tens
of thousands of values. We created a visualization called
Oculus Excel Visualizer following the WYSIWYG
(what-you-see-is-what-you-get) paradigm originally
coined during the evolution of early graphic user
interfaces. Our approach seeks to characterize
representations of text documents and spreadsheets as
closely as possible to their physical output, thereby
enabling the user to reduce the cognitive effort between
the two representations.

Figure 1. A spreadsheet from an annual report.
On the left is an income statement with a variety
of formatting and on the right is Excel Visualizer
viewing the same data with the same layout.
In applying the WYSIWYG approach to
spreadsheets we attempt to reduce the cognitive gap
between the largely numerical and text based spreadsheet
and its semantic, graphical representation. We have
applied WYSIWYG to spreadsheets as follows:
•

The visualization uses the same row and column
cell structure for organizing the scene.

•
•
•

Text data in the spreadsheet continues to be
represented as text within cells in the
visualization.
Numeric data is represented as graphical objects
(3-D bars by default) in the visualization.
Wherever possible all other spreadsheet
formatting (cell background color, cell borders)
are re-used within the visualization.

2. Related Work
Given the near universal appeal of spreadsheets,
there have been many previous spreadsheet
visualizations; ranging from visualizations of the
underlying computational network instantiated within a
spreadsheet; to cell grouping and screening; to
visualization of the data contents and interface.

2.1 Cell Screening, Semantic Grouping and
Dataflow Structure
Various visual techniques exist for the purposes of
auditing and debugging spreadsheets. Given the freeform nature of creating a spreadsheet, reviewing a
spreadsheet requires effort to decipher the structure and
validate the accuracy of contents.
Auditing tools, such as, Spreadsheet Detective
(Southern Cross Software) and OAK (Operis Group),
provide users the ability to screen a range of cells for
user-selected criteria (e.g. data type, format,
dependencies); which are then visually formatted based
on the criteria as an aid to identify inconsistencies.
Sajaniemi [Saj00] introduced techniques for grouping
cells based on formula similarity. Clermont [Cle03]
significantly extends the semantic content analysis to
construct an abstract model of the spreadsheet with
multiple visual representations, including formatting of
cells within the spreadsheet and a separate “set
relationship graph”.
The data flow model of a spreadsheet can be
explicitly visualized as a graph, making visualization an
effective tool for reviewing the calculation network.
Spreadsheets, such as Excel, have data flow auditing
tools built-in for visually depicting calculation
precedents for a particular cell.
[Iga98] introduces both incoming and outgoing data
flows for a focus cell in a “local view” as well as a
“global view” for the complete dataflow. In addition,
animation explanations, direct manipulation and other
techniques allow for greater understanding and
manipulation of the spreadsheet.
[Cha01] combines the cell screening and formatting
techniques with dataflow to create a hybrid
representation.

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

[Shi99] uses a 3D representation of a spreadsheet
projected onto a plane with arcs in the third dimension to
depict interrelationships.
Excel Visualizer does not explicitly provide
functionality for screening, grouping or data flow. A
novel feature of Excel Visualizer is the re-use of existing
user-created formatting in the spreadsheet (e.g. cellcolors), which may have been created to explicitly
identify semantic groups. Therefore, Excel Visualizer
may be useful for identification of an anomalous data
value based on its visual grouping (e.g. a tall bar within a
particular shaded region).

2.2 Spreadsheet Data
General visualization techniques, such as Magic
Lenses [Bie93], distortion techniques, such as fish eye
views and hyperbolic distortions [Fur86] and zooming
interfaces, such as Table Lens [Rao94] can be applied to
directly visualizing spreadsheet contents. Distortion
techniques, such as a fish-eye view, can preserve both
the spreadsheet data and formatting content but does not
facilitate visual comparison of numeric values by
graphically encoding those values with perceptual cues
of height or color. The Table Lens technique does
convert numeric values to graphical representations but
implementations of this technique require consistency of
data types across columns.
Similar to Magic Lens, distortions and Table Lens,
Excel Visualizer preserves the overall row and columns
structure. Similar to Table Lens, numerical values are
converted into graphical representations in Excel
Visualizer, although. Excel Visualizer is unique in
attempting to preserve formatting, in not requiring data
type consistency and in using a 3D representation.
Some software tools for visualizing spreadsheet data
require the data to be restructured in a pre-defined layout
prior to using visualization. In our experience, we have
utilized tools such as SeeIT and ScatterPlot (Visible
Decisions), Advizor and Advizor 2000 (Advizor
Solutions), Tableau (Tableau Software), and Spotfire
(Spotfire U.S.). While many of these software packages
provide the ability to import data from directly from a
spreadsheet, they all require a pre-determined data layout
within the spreadsheet – such as rows of tabular data; or
a pivot table. Furthermore, in all these tools, Excel is
simply a data source – additional user’s enhancements,
such as formatting and related data not in the same
structures, is not carried through into the visualization.
Unlike these other data visualization tools, Excel
Visualizer is unique in it’s one-click ability to view
spreadsheet data without any requirement for a specific
data layout.

Other visualization techniques use a spreadsheet as
the organizing model for creating and managing
visualizations, such as FINESSE [Var96] and [Chi97].
These techniques are very different from Excel
Visualizer.

formats is computationally slow, so some formats are not
checked by default (e.g. cell color). Additionally, Excel
is a very feature rich application and we have not been
able to replicate many of Excel’s formats in Excel
Visualizer (e.g. cell outlines).

3. Excel Visualizer Overview

4. Excel Visualizer strengths and limitations

Excel Visualizer is implemented as an Add-In to
Microsoft Excel. It is accessed through a button on
Excel’s toolbar, which instantiates the visualization in a
panel on the right side of Excel’s main window. Any
range of cells selected within Excel are immediately
visualized in Excel Visualizer, with numerical values
immediately represented as 3-D bars and text visually
represented as 3-D text.

The WYSIWYG paradigm can be a very powerful
tool for user cognition. In general, literal metaphors can
be powerful user-interface techniques because of the ease
of understanding. Both WYSIWYG and literal
metaphors suffer from limitations as well: they can be
difficult to extend beyond the core metaphor.

4.1 Strengths
Following the basic WYSIWYG paradigm provides
several benefits for the user of the visualization, such as
preservation of formatting and ease of data manipulation.

Figure 2. Simple example of Excel Visualizer.
The visualization is tightly coupled to the
spreadsheet. The user can point at a bar in the
visualization to see a tooltip that displays the numeric
value corresponding to that bar. Or, the user can click on
a bar to highlight the corresponding cell in the
spreadsheet. If the user modifies any value in the
spreadsheet or some other event causes the spreadsheet
to update (such as a stock market data feed), the
visualization will immediately update as well.
Excel Visualizer provides three regions (a floor and
two walls) that can display separate user-selected ranges
from the spreadsheet. This enables the user to view more
than one range or more than one worksheet at a time. In
each region, all numeric values are normalized across the
range of selected data. Bars within each region can be
visually compared to each other. Separate regions are
independently scaled.
The user can easily navigate to different viewpoints
(zoom, rotate, pan). The user can also adjust settings
through various dialog boxes such as the graphical
representation (e.g. bar, cylinder, surface) and associated
parameters (e.g. scale, orientation). By default, some
formatting is automatically preserved in Excel Visualizer
(e.g. date formats are checked and displayed as strings
rather than converting them into bars). Evaluating cell

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

One-Click WYSIWYG. One highly novel feature
of Excel Visualizer is the immediate visualization of any
selected range of spreadsheet data. The user does not
need to do any preparation of the spreadsheet and
receives results immediately. There is no need to step
through a series dialog boxes, each requiring additional
consideration that could confuse or frustrate a potential
new user. There are no possible errors (e.g. data type
mismatches, invalid values, etc). Additionally, the
visualization generated has a direct one-to-one visual
correlation to the spreadsheet representation, facilitating
comprehension of the results.
To use Excel Visualizer at this most basic level it is
very easy to learn. This immediacy, initial impression
and ease of use could be important to the adoption of
visualization by a broader community of users who may
not have the time nor interest in learning more complex
data requirements.
Bi-Directional Synchronization. Excel Visualizer
provides synchronization between the spreadsheet and
the visualization: if any cell in the spreadsheet is
changed, then the visualization immediately updates.
Clicking on a bar or cell in the visualization immediately
selects and highlights the corresponding cell in the
spreadsheet. The viewer can easily move back and forth
between the two representations.
In many visualization software packages, modifying
data may require editing the data in another application
(such as a spreadsheet) to perform operations such as
correcting the value of an erroneous data point, creating
a new derived data attribute (e.g. Profit equals Sales
minus Costs), or computing sums or other statistics.
Once the data has been modified, the steps to re-import
the data may need to be repeated. The process can be
tedious and error prone. With a WYSIWYG approach,

data can be edited directly in the spreadsheet with
immediate visual updates. Additionally, WYSIWYGbased visualization tightly coupled to the spreadsheet
provides the user with full access to the spreadsheet’s
powerful and familiar data manipulation tools (e.g. pivot
tables, sorting, filtering, programming, etc.); many of
which may not be available in a visualization software
package.
3D Navigation. The user can dynamically pan,
rotate and zoom in and out of the scene. This provides a
means to start with a high-level overview (does this data
seem right at a high level?) and then zoom in to inspect
finer details as required. Combined with the bidirectional synchronization with the source spreadsheet,
the user can investigate individual bars and see them
within the context of the overall data in the spreadsheet..

Figure 3. Excel Visualizer zoomed in on a region
of data. Pointing at a bar provides a tooltip with
the numeric value. Clicking the bar highlights
the corresponding cell in the spreadsheet.
Visual Scalability. Excel Visualizer utilizes a
powerful 3D rendering engine and can graphically
display large amounts of data. Excel Visualizer can
display in excess of 50,000 cells simultaneously in one
screen. This would represent more than 30 screens
worth of numeric data in a typical spreadsheet view.
Viewing large amounts of data at once can help the user
spot trends, patterns and outliers.

instruments over a three year time period.
Twists and dips are immediately visible.
Format Preservation. Spreadsheet users invest
significant time and effort adjusting the fonts, colors,
borders, and white space to enhance the readability and
usability of spreadsheets. Through these formatting
techniques, end-users leverage Gestalt principles such as
proximity, similarity, figure and ground separation to
organize the information. By maintaining the formatting,
these extra layers of semantic value are available to the
visualization user.

Figure 5. Cell shading, used to group objects
together, appears in the Visualizer as well.
Data Type Flexibility. Spreadsheet users typically
forma their data into specific data types, for example,
date formats, currency formats are already set. With
Excel Visualizer, there is no need for the user to adjust
data types or go through a wizard. Instead, the
application intelligently handles numeric, text and
missing data, allowing the user much more freedom for
ad hoc visual exploration.
Annotation. The annotation of interesting results
can be challenging in many visualization systems. Using
the spreadsheet, the user can add annotations in adjacent
cells, which then appear in the visualization.
Visual flexibility.
Different datasets lend
themselves to different visual representations. For
example, continuous time series data is better
represented as a surface rather than a matrix of disparate
bars.

4.2 Limitations

Figure 4. A view on 60 x 610 array of cells
showing the difference between two financial

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

Following a strong literal metaphor does present
some limitations. The most challenging limitations of the
WYSIWYG metaphor for spreadsheet visualization
include:

Occluding Sums. In a typical spreadsheet, totals are
positioned at the bottom and to right of a range of cells.
Since the values in a sum are often much larger than the
source values, when visualized, these large
representations of summary bars can occlude other parts
of the data.
Data Normalization. All numeric values in the
visualization are normalized across the entire range of
selected data. This can make it difficult to compare
different types of values, for examples, one set of cells in
units of millions of dollars and another set of cells in
units of cents. By default, Excel Visualizer normalizes
all numeric data uniformly. This could be overcome by
some degree by normalizing numeric data based on
common data formats – e.g. all cells formatted as
percentages are normalized separately from all cells
formatted as currency. This would also require a visual
cue to the user to indicate that there are two different
numeric types in the visual display, perhaps using
categorical signifier such as shape or color to indicate
different numeric types.
Fixed Cell Sizes. Excel Visualizer represents the
selected range of data in fixed column and row widths
and heights. This presents a problem when columns are
used for text strings that don’t fit it the standard cell
width.
Multi-functioning Visual Elements (Glyphs).
Information visualization can be very valuable for
analyzing multiple variables at once through the use of
multi-functioning data elements – for example the
location, size, orientation, color, shape, etc of various
markers can convey different data attributes within a
single marker. Within Excel Visualizer there is a single
marker per each cell in the spreadsheet, thereby limiting
the market to representing a single value. The benefit of
multi-functioning visual elements cannot be realized
because of the overall metaphor limitation.
Strict Linkage to Contiguous Ranges. Excel
Visualizer operates on a user-selected range. While this
works well with simple uses of a spreadsheet, more
complex sheets where variable rows and columns are
used, or when pivot tables (where columns and rows can
be added interactively by the user) are not handled.
Additionally, blank, hidden and zero-sized rows and
columns are simply treated as empty cells.

5. Excel Visualizer Example Use Case
Although Excel Visualizer is a framework upon
which to build and test other spreadsheet-based data
visualizations, some users have found practical field
applications for Excel Visualizer in its current state.

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

The following example is based on real users, but
the data used to represent the images has been modified
to protect confidential information.
Prior to using Excel Visualizer, the group collected
event data (e.g. accidents and crimes) in a spreadsheet
and organized it into pivot tables. Similar to many other
spreadsheet projects, the process was originally ad hoc.
This resulted in missing data and many different
evolving categories within each field. Because of the
evolving data collection and aggregation process,
rigorous hierarchies (as might be found in an OLAP
database), were not present. Instead, the categories were
extremely broad. The resulting pivot tables could contain
20-100 categories on each dimension resulting in large,
sparse tables where it was impossible to see meaningful
patterns without reading the individual values. Further,
larger pivot tables require the users to scroll to different
sections, and this requires additional cognitive effort to
recall the data values of interest. Pivot charts also proved
to be ineffective on these large tables. Analysis of these
pivot tables became an expanding work requirement,
eventually requiring half of a person’s time.
With Excel Visualizer, the users were able to see
many more cells at once. Patterns and outliers were
immediately visible and, in the context of surrounding
visuals, the user could compare and make decisions
regarding the importance of any outlier or trend. Clicking
on bars in the visualization selected the corresponding
cells in the spreadsheet, providing surrounding numeric
context and reference to row and column headings.
Double clicking on the selected cell within the
spreadsheet invoked the pivot table’s drill-through
functionality returning all the relevant records
corresponding to the bar in the visualization.

intuitive analysis of spreadsheet data. The initial oneclick launch and WYSIWYG representation are highly
novel, and potentially provide a new approach for
making visualization accessible to novice visualization
users.
There are a number of challenges yet to be
addressed to make this technique fully effective. The
primary challenge is how to extend the literal
WYSIWYG metaphor to address issues such as
occluding sums and how to utilize multi-functioning
graphical elements. These are not easy to resolve without
compromising the WYSIWYG metaphor and threatening
the ease of use.

Figure 6. A sample spreadsheet pivot table (36 x
170 cells), shown in a pivot table (top); pivot
chart (middle) and in Excel Visualizer. In Excel
Visualizer, various peaks, strips and cyclical
patterns are clearly visible.

In the future, the WYSIWYG visualization
technique could be generalized and extended to other
application types, such as reports and financial
documents.

References
As a result of using Excel Visualizer in conjunction
with large, flat pivot tables, the users were able to reduce
the analysis effort to less than one sixth of the previous
effort. As discussed with one user, a task that had
previously required three days of analyzing large pivot
tables in Excel was reduced to four hours. This
improvement was due to visual identification of patterns
of interest in large matrices, such as outliers and
repetitions, as shown in Figure 6.
Also, the users were able to use the visuals in
presentations, both as images and interactively within the
spreadsheet. This helped the users illustrate claims;
provide detailed evidence on the fly; and engage the
audience in collaborative ad hoc data exploration. This
significantly reduced the need to generate additional
analyses of data.
Unfortunately, the responses from the user
interviewed were highly subjective and the user did not
evaluate other visualizations. The user greatly
appreciated the initial ease of use (i.e. one-click launch
and WYSIWYG). Bidirectional synchronization and
scalability were important to the task. The user also
experienced some of the limitations discussed in section
4.2. In particular occluding sums and fixed cell sizes
were identified as issues.

Conclusions
WYSIWYG visualization of spreadsheets is a
powerful means to view and interact with large
spreadsheets. Coupling the abilities of visualization to
depict and navigate through large volumes of data
together with the spreadsheet’s data modeling
capabilities provides a potentially powerful platform for

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

[Bie93] Bier, E.A., Stone, M.C., Pier, K., Buxton, W., DeRose,
T.D., Toolglass and Magic Lenses: The see-through
interface, in Proceedings of SIGGRAPH’93, 1993.
[Cha01] Hock Chuan Chan, editor. Easy Steps to Design &
Check Your Excel spreadsheets. Federal Publications,
2001. http://www.comp.nus.edu.sg/~chanhc/spreadsheet
[Chi97] E. H. Chi, J. A. Konstan, P. Barry, and J. Riedl. A
spreadsheet approach to information visualization. In
ACM Symposium on User Interface Software and
Technology, 1997.
[Cle03] Markus Clermont. A Scalable Approach to Spreadsheet
Visualization.
Klagenfurt,
Germany,
Universit¨at
Klagenfurt. 2003.
https://143.205.180.128/Publications/pubfiles/pdffiles/20030175-MC.pdf
[Fur86] George W. Furnas. Generalized fisheye views. In CHI
'86. ACM Press, 1986.
[Iga99]
Takeo
Igarashi,
Jock
D.
Mackinlay,
Bay-Wei Chang. Fluid Visualization of Spreadsheet
Structures. In IEEE Symposium on Visual Languages.
IEEE, 1998.
http://www.mtl.t.u-tokyo.ac.jp/~takeo/papers/vl98.pdf
[Lie99] Stanley Liebowitz and Stephen Margolis. Winners,
Losers & Microsoft: Competition and Antitrust in High
Technology. Independent Institute 1999.
[Rao94] Rao, R., Card, S., The Table Lens: merging graphical
and symbolic representations in an interactive
focus+context visualization for tabular information, in
Proceedings of CHI'94, 1994.
[Saj00] Jorma Sajaniemi. Modeling spreadsheet audit: A
rigorous approach to automatic visualization in Journal of
Visual Languages and Computing, 49–82, 2000.
[Shi99] Hidekazu Shiozawa, Ken-ichi Okada and Yutaka
Matsushita. 3D Visualization for Inter-Cell Dependencies
of Spreadsheets. . In Proceedings of the IEEE Symposium
on Information Visualization. 1999.
[Var96] A. Varshney and A. Kaufman. FINESSE: A financial
information
spreadsheet.
In
IEEE
Information
Visualization Symposium. 1996.

