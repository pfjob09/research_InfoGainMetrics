2011 15th International Conference on Information Visualisation

Design considerations for drill down charts
Rafael Guimar˜aes1 , Anderson Marques1 , Nikolas Carneiro1 , Aruanda Meiguins2 , Bianchi Meiguins1
Universidade Federal do Par´a1 , Rede de Inform´atica Ltda.2
{rafaelveras, andmarques, bianchism}@ufpa.br, nikolas.carneiro@gmail.com
aruanda@redeinformatica.com.br
Abstract

intrinsic drill down and roll up operations. In the former
context, the scope is very limited, as the goal is mainly
presentation; and in the latter the solutions are very tied to
the OLAP technology [16, 10]. Additionally, in the design
of drill down interfaces the perceptual infovis principles
are often neglected, resulting in very limited tools, which
go little beyond the basic double-click over slice in the pie
chart. We believe that drill down charts might be further
improved if some guidelines are taken into consideration.
In this paper, we discuss these design elements in a general
way, independent of application domain or technology, using as reference a tool developed under the infovis principles.
We focus on representational issues, such as coloring,
information budget, navigational cues and layout, as well
as in the interaction model, where navigation path and visual queries are discussed. The validity of the considerations is evidenced by a usability study where our tool is
compared to a standard technique in the context of categorical data analysis.

Frequency-based statistical charts are the most
widespread visualizations and the preferred of Infovis
novices. They are important in depicting categorical data
and providing data abstraction on large datasets. The drill
down feature enables better visual scaling by allowing
navigation through aggregation hierarchies. In this paper
we discuss design considerations that impact on the usability in drill down charts. We develop a tool based on pie
chart in order to illustrate the discussion. Moreover, we
suggest visual representations and an interaction model.
Finally, we provide evidence on the benefit of using such
techniques for visual analysis of categorical data through
a short usability study.
Keywords— information visualization; drill down chart;
categorical data; multiscale; aggregation hierarchy.

1

Introduction

Visual scaling is a major problem in information visualization. Item-based visualizations tend to be overloaded
as the dataset size increases; hence, methods for data abstraction are commonly applied to data space and mapped
by visual representations, reducing the scale impact. A
simple approach is aggregating individual items into categories accordingly to a given attribute.
In addition, the combination of aggregates in hierarchical levels makes possible the classical incremental user experience described by the infovis mantra [13]. The class of
multiscale visualizations takes advantage of this hierarchical aggregation model. Its main features include drill-down
and roll-up interactions and visual aggregates.
In a study about how information visualization novices
construct visualizations, Grammel et al. [4] observed that
novices are strongly inclined to choose familiar types, especially pie and bar charts. Statistical charts are ubiquitous
because, and also in consequence, they are very simple representations for data aggregates.
The multiscale approach has been applied to statistical
charts in interactive business reports and visualization of
OLAP (Online analytical processing) data, in virtue of the
1550-6037/11 $26.00 © 2011 IEEE
DOI 10.1109/IV.2011.65

2

Related work

Parallel Sets [8] is a visualization method for categorical data. It depicts categories using a frequency-based
representation and applies the multidimensional layout of
parallel coordinates. The taken approach is to show the
distribution of categories simultaneously by several dimensions. Although this design favors the identification of relationships between dimensions, it becomes complex as the
number of axis increases, with excess of information displayed. In our design we adopt a step-by-step solution.
A comprehensive and general model for hierarchical visualization is provided by Elmqvist and Fekete [2]. Our
study is placed at a lower level of abstraction, as we implement many concepts described on it. The guidelines on
interaction and visual representations are particularly interesting for this work, whereas the advices about adapting
standard visualization techniques are useless, once we do
not deal with any of the techniques analyzed.
Mansmann and Scholl [10] apply a tree-based hierarchical representation in the OLAP aggregates domain. A
73

(a) Pie chart, grouping represented in a radial space-filling approach

(b) Bar chart, grouping represented by stacked bars

Figure 1: Representation of aggregates in statistical charts.
presentation model is defined in order to map data cubes
to visual hierarchies. While drawing upon a solid conceptual model, it lacks refined interaction and representation
design.
Our contribution does not consist in replacing any of
the above work with a new model for hierarchical visualization. In a sense, we complement the above cited efforts
by delivering good design guidelines for the subset of hierarchical charts inspired by the foundational studies of information visualization.

3

selected in each hierarchical level. A drill down is a single “movement” downwards in a aggregation hierarchy.
Drilling down on a group moves the analysis toward the
group’s children.

4

Representation

The choice of the chart type must be mainly driven by
the fitness of visual entity in the representation of aggregates, the inherent complexity, and the amount of information conveyed [2]. Despite the criticism and controversy
on using pie charts, familiarity [6] and simplicity are factors that can justify their employment. Pie charts use a
space-filling approach to depict categories, which avoids
the cluttering of the visualization space [7]. However, if
there is a large number of categories or a high variance of
frequencies, the perception over the smaller slices becomes
difficult. It is crucial that even the minor categories are
accessible, otherwise the drill down interaction becomes
impracticable. Though we can apply some techniques to
overcome this problem [15], in this case a bar chart may be
more adequate.
Direct representation of aggregates is fundamental to
provide a good level of abstraction. Visualizations like
scatterplot, dot chart, or line chart are not well suited, again
for the sake of drill down, which requires a reasonable area
for clicking and because grouped data is best represented
by areas than by individual points [8].
The visual aggregates can convey more information
than just frequency, such as mean, mode, extrema, median,
and percentiles [2]. As we are dealing with categorical
data, it is necessary to provide a user control for defining
which numerical attribute these measures refers to. Parallel
Sets also allows the visualization of standardized relative

Aggregation and drill down model

Before focusing on the design aspects, in this section we
briefly describe the underlying data and interaction model
assumed for our drill down charts.
Multidimensional datasets are comprised of a set of
attributes (or dimensions) and their values for each data
item. The nature of attributes might be either categorical
or quantitative, among some other classifications. Categorical attributes have discrete and reduced amount of distinct values (categories); and there is no implicit relationship among them, such as ordering or distance [8].
In simple aggregation, a set of items is grouped into one
or more aggregates, each one representing a category of a
particular categorical attribute. In an aggregation hierarchy, the groups are nested accordingly to an attribute hierarchy; therefore, a tree is built, whose root represents the
entire dataset, nodes represent categories, and leaves are
the individual items. As aggregation is best suited for categorical attributes, non-categorical ones can be converted in
categorical through several classification techniques.
A drill down path is a navigation path through an attribute hierarchy. In a simple way, it contains the groups
74

Figure 2: Workspace of drill down pie chart. On the left, full representation of the current level and the navigation bar. On
the right, the lateral accessory panel with a control for defining attribute hierarchies and tree representation.
rent section, we discuss aspects of navigation across chart
chains.

frequencies through embedded histograms [8]. In order to
limit the information budget, we recommend the display
of extra information in an indirect manner, via details on
demand.
Figure 1 shows these visual principles applied to the pie
and bar charts. Notice the two types of category composition presented in both examples. Isolation is intended to
reduce the effort spent on analyzing great number of categories. This composition visually segregates the less important categories by applying a different texture, resulting
in a chart with fewer visual items and a higher level of abstraction.
The second type, Grouping, is the union of two or more
categories under an alias name. The main purpose of such
composition is to allow drill down over multiple categories.
In pie chart, we used a radial space-filling technique to represent the grouping, while in the bar chart, grouped bars
were stacked vertically. This type of composition takes advantage of the user’s domain knowledge [8].

5

Users may be motivated to navigate discrete information spaces by several reasons. In our specific case, they
would like to find the importance of a particular category
in a restrict context, to establish direct comparisons between categories, or to enhance their mental model about
the structure of the dataset. In order to accomplish these
goals, users need to perform a number of ’movements’ in
the space. As Spence [14] pointed out, along this course,
many questions arise, e.g., “Where am I?”, “Where can I
go?”, “Where have I been?”. An effective tool must provide cues to facilitate navigation.
We start by supporting the definition of a custom attribute hierarchy. Figure 2 presents the user control for
this task. On the left there is a list with categorical attributes of the dataset. The user is allowed to build a hierarchy moving them to the list on the right . This user
centered approach, in contrast to schema-based ones [10],
gives the advantage of building a hierarchy that conforms
to the structures of questions the user formulates about the
data. The UI control, together with the explicit representation of the hierarchy (at the bottom of the panel), encodes
residue [14], which is the indication of a distant content.
In other words, it is necessary to make available the information about where the drill down will be taking the user.
This information is located in the lateral accessory panel.

Navigation

In the context of interaction design, an aggregation hierarchy may be classified as a discrete information space,
i.e., it comprises a collection of discrete entities. The design of navigation across those hierarchies calls for a deep
understanding of the stepped interaction fundamentals. In
the previous section, we presented considerations about the
visual representation of aggregates in charts. In the cur75

On the central panel, the initial chart presents the aggregates related to the first attribute of the hierarchy. A
double-click on an aggregate uncovers its children classified by the categories of the next attribute. This process
progress along the extent of the attribute hierarchy. This
design ensures abstraction at all steps of traversing the aggregation hierarchy, i.e., the individual items are never exhibited. An alternative approach could be to enrich the
experience by coordinating the chart view with an itembased visualization [17], or even to combine it in a hybrid
approach. In the latter case, the item-based visualization
would arise after the end of the drill down path. Then the
drill down phase would act as a filtering section before the
detailed visualization.
In order to track the users’ interactions, we designed a
navigation bar (Figure 2). We considered it should convey cues about the ’value’ of each performed drill down
(see information scent in [14]), the current localization in
the drill down path, and provide a manner to easily revisit
the previous levels. We adopted a design inspired by the
breadcrumb navigation, originally applied to the web [12];
however, instead of using just text, as in web pages, we
chose to use chart miniatures identical to those found along
the drill down path. This decision is aimed to favor the
cognitive process of recognition, instead of recall, which
requires more effort [9, 11]. Each miniature is connected
by a link representing a drill down, which shows the name
of the selected aggregate as well as its relative value. By
clicking over a miniature, the user jumps to the corresponding level, i.e., the full chart appears in the central panel.

6

tion and exploration time are not strictly separated, i.e., the
user is able to change the drill down path in the course of
navigation. It provides more flexibility, but increases the
implementation complexity. Below, we explain two critical interactions with the attribute hierarchy in the exploration time, and how the tool must behave in order to avoid
missing the previous navigation entirely.

6.1

Removing Intermediary Levels

The Figure 3 shows on the left an aggregation hierarchy.
Groups labeled as B1 and B2, for instance, refer to different
categories of an attribute B. A hypothetical drill down path
is highlighted in orange. If the user resolves to remove an
intermediary step, most of the navigation must ideally be
preserved. On the right, the figure shows the state immediately after the removal of the B attribute. The path between
A and C is reconstructed, so the user remains “deep” in the
hierarchy. In our tool, the correspondent visual feedback
is provided by reorganization of both the chart in the current level—groups have now a new distribution; and the
navigation bar.
A2

A1

A2

A1
C1

B2

B1
C1 C2

C1

C2

C2

Figure 3: Reorganization of the drill down path after removing an intermediary level

6.2

Redirecting drill down

Another situation where part of navigation path needs
to be automatically reconfigured is when the user wants
to change the direction of a drill down at an intermediary level. The Figure 4 shows on the left a drill down
path with four levels. On the right, is the result of
changing the drill down in the second level. Farther
navigation in the third level is maintained by just selecting the C1 category among the B1’s children. However, it causes inconsistency in the fourth level, as the
D2 category has no representative items in that context, prohibiting drilling down over it. Consequently,
the fourth drill down in the example should be discarded.

Flexibility

Besides the basic drill down and roll up functionalities,
it is necessary to take care of some details that determine
the flexibility level of the tool as a whole. Basically, the
flexibility issues are related to the freedom to modify the
attribute hierarchy at any time and the consequences of
nonlinear navigation. In this section we discuss the impact
of possible alternatives.
Within our design, we can opt between two types of interaction flow. In the linear flow, the interaction is divided
in two distinct, sequential phases. By this model, the configuration time—where the definition of the attribute hierarchy takes place—is completely isolated from the exploration time, where occurs the interaction with charts and
drilling down. It implies that once the user has started
to drilling down, it is not possible to reconfigure the path
without all interaction state get lost. While this alternative
is simpler to implement, it strongly limits the user’s possibilities, imposing effort to reconstruct the navigation every
time it is needed to make minimal changes in attribute hierarchy.
The other type is the non-linear flow, where configura-

A1

A1

A2

B1

B2

C1 C2
D1

D1

C1
D1

A2

B1

C2
D2 C2

B2

C1

C1 C2
D1

D1

D1

C2

D2 D2

Figure 4: Redirecting a drill down in an intermediary level
of drill down path
76

7

Guidelines

8.1

Fourteen individuals participated in the experiment.
They are mostly professionals recently graduated in computer science, five women and nine men. All of them have
experience using computers and four are familiar with information visualization.

After the argumentation in the previous sections, we are
able to derive some general guidelines to be applied in the
design of drill down charts:
Choose charts whose visual items represent well data aggregates. Aggregates are better represented by areas
than by dots or lines, for example. It will allow easy
click for drill down and direct perception of the aggregate’s value.

8.2

Procedure

The participants were divided in two groups. Those
who are familiar with visualization were distributed evenly
among the groups in order to balance them. One group
was associated with treemap while the other was associated
with drill down pie chart. The treemap group could use the
filtering capability of PRISMA, which consists in checkboxes located in a lateral panel; additionally, the treemap
featured in-depth navigation and direct node selection [1].
The pie chart group could only use drill down to filter. Each
participant of a group passed through a three phase trial using its tool. The first two phases were intended for training,
while in the last we collected the evaluation data. The test
was conducted by a supervisor, who instructed the users,
took observational notes, and measured the users’ performance (time and success).
Before starting a trial, each individual watched an explanation about how to use the tool, with duration from
five to ten minutes. Afterwards, the person was invited to
spend five minutes freely exploring a simple version of the
classic titanic dataset (2200 items and four categorical attributes). During this and the next phase the participant
could ask any questions about the tool.
Subsequently, we introduced the dataset used in the
evaluation phase. It is about the research grants distributed
to students by the Brazilian government through years
2007 and 2009. This dataset has 120.000 items and 10 categorical attributes. Each participant was allowed to explore
it during five minutes.
The evaluation phase consisted in finding the answers
for three questions about the dataset by exploring it. All
questions required to filter the visualized data by categorical values:

Provide localization cues. It is critical in order to avoid
waste of time and confusion in the course of navigation. In our prototype, we deliver both the breadcrumb navigation bar and the tree representation for
support localization.
Allow aggregation hierarchy definition at runtime. Instead of define a hard aggregation hierarchy before
loading data into the visualization, definition at runtime is more adequate to the iterative nature of the
visual exploration.
Dynamic and interactive aggregation. Allowing the creation of new aggregates in-place ease the incorporation of user domain knowledge in the analysis. Dynamic aggregation depends on direct representation
of aggregates and visual metaphor’s suitability. We
recommend using different visual patterns for usercreated items, such as the radial segmented slice for
grouped items in our pie chart prototype.
Non-linear interaction flow. The user must be capable of
defining the hierarchy and navigate it in a non-linear
fashion. In relation to changes on the aggregation
hierarchy, the interface must be fully adaptive, minimizing the impact over precedent navigation. As
a rule of thumb, the navigation path must only be
completely discarded when it becomes entirely inconsistent with the new hierarchy.

8

Participants

1. Which governmental level (provincial, state or federal) distributed more doctorate grants for the Par´a
state through the years 2008 and 2009?

Usability Test

We developed the tool as a component within the
PRISMA visualization platform [3]. PRISMA supports
several standard visualization techniques, such as parallel
coordinates, treemap and scatterplot. Along our experience
with this platform, we noticed that, naturally, treemap is
the preferred by users for analysing categorical data. This
section presents an experiment to evaluate the usability of
our design, based on a comparison with treemap visualization.

2. What about for S˜ao Paulo state?
3. In which year it was distributed more quantity of
doctorate grants by the federal level for the southeast region?
The maximum time for completion of the tasks
was respectively 180, 120 and 180 seconds.
The
measures collected for each questions were both
77

task time and correctness of the answer.
At the
end of the trials, the participants filled out the
NASA-TLX subjective workload assessment [5].

8.3

advices on navigation, a key point that strongly influence
the success of drill down. The Section 6 presented two interaction issues that impacts on the flexibility of drill down
charts.
In the usability study, we showed that even using limited charts it is possible to obtain good results. In a comparative experiment with treemap, our tool obtained better
results in task time and workload index. We attribute the
these results to some aspects of our design. Notice that the
questions’ structure requires incremental filtering to find
the answer, over each dimension at a time. The low information budget provided by the multiscale layout ease
that task as the categories of a dimension are only showed
after drilling-down over the previous step, in contrast to
Treemap, where all hierarchical levels are showed simultaneously.
Once the second question requires the partial reconstruction of the first visual query, we believe that our navigation bar was fundamental, allowing fast return to the step
to be changed. The users were also able to dynamically aggregate two categories directly in the visualization space,
for analysis of years 2008 and 2009 in the question 1. That
is much faster than taking the attention out of visualization
and handling checkboxes to filter by year (treemap does
not support dynamic aggregation).
The experiment suggest that the proposed design was
more effective for tasks that involved simple analysis of
multidimensional categorical data. It does not mean that
our tool is superior to treemap. In fact, there are many situations where drill down charts would be less powerful.

Hypothesis

In order to accomplish the tasks using the drill down
chart, the participants needed to build an hierarchy with
the attributes involved in the question (state, region, year,
type of grant, etc.) and navigate it until reaching the chart
showing the answer. In that case, each drill down is a filter.
The treemap provides visual access to the whole aggregation tree. Using it, participants needed to build similar
hierarchy; then identify the answer in the big picture, or
firstly, to limit the visual items through checkbox filtering
or navigation.
We hypothesized that task times would be slightly
shorter for the pie chart group, due to the high cost of
localizing lower level groups on treemap when dealing
with long hierarchies, as the visualization become cluttered. The time to interact with the checkboxes, which
are an external control, would also impose more effort. Pie
chart navigation would be also more effective than treemap
navigation because of the positive influence of our navigation bar. For all these reasons, we expected that treemap
would have the worst subjective workload.

8.4

Results

The average number of correctly solved tasks of
treemap group (2.14) was better than the pie chart group
(1.71). Only one participant using pie chart solved the first
question correctly, against 3 from the treemap group. We
noted that the common error of participants was forgetting
to apply one of the required filters; therefore, we credit this
behavior to the lack of attention. In the second task both
groups were more successful: 5 correct using treemap and
4 using pie chart. All participants completed the third task
correctly.
As expected, the average time of the pie chart group
was shorter than the treemap group. The geometric mean
for the 2nd task using pie chart was 21.7 against 35.8 seconds using treemap; and for the 3rd task was 73.1 against
90.6 seconds.
The results of TLX assessment also supported our claim
about the subjective workload. The average value using pie
chart was 40.3, against 46.4 using treemap.

References
[1] Renaud Blanch and Eric Lecolinet.
Browsing
zoomable treemaps: Structure-aware multi-scale navigation techniques. IEEE Transactions on Visualization and Computer Graphics, 13:1248–1253,
November 2007. ISSN 1077-2626.
[2] Niklas Elmqvist and Jean-Daniel Fekete. Hierarchical aggregation for information visualization:
Overview, techniques, and design guidelines. IEEE
Transactions on Visualization and Computer Graphics, 16:439–454, May 2010. ISSN 1077-2626.
[3] Paulo Godinho, Bianchi Meiguins, Aruanda Meiguins, Ricardo Casseb, Marcelo Garcia, Leandro
Almeida, and Rodrigo Lourenco. Prisma - a multidimensional information visualization tool using multiple coordinated views. In Proceedings of the 11th
International Conference Information Visualization,
pages 23–32, Washington, DC, USA, 2007. IEEE
Computer Society. ISBN 0-7695-2900-3.

Conclusions
In this paper, we approached the elements of designing drill down charts. Our contribution was to generate
insight and advice about how to construct effective tools.
Representation issues were discussed throughout the paper
in order to clarify what cues are important to provide and
what information can be depicted. The Section 5 provided

[4] Lars Grammel, Melanie Tory, and Margaret-Anne
78

Storey. How information visualization novices construct visualizations. IEEE Transactions on Visualization and Computer Graphics, 16:943–952, 2010.

[11] Jakob Nielsen and Robert L. Mack.
Usability
inspection methods, chapter Heuristic Evaluation,
pages 25–62. Wiley, 1 edition, apr 1994. ISBN
0471018775.

[5] S. G. Hart and L. E. Stavenland. Development of
NASA-TLX (Task Load Index): Results of empirical and theoretical research. In P. A. Hancock and
N. Meshkati, editors, Human Mental Workload, chapter 7, pages 139–183. Elsevier, 1988.

[12] Bonnie Lida Rogers and Barbara Chaparro. Breadcrumb navigation: further investigation of usage.
Technical report, Wichita State University, 2003.
[13] Ben Shneiderman. The eyes have it: A task by data
type taxonomy for information visualizations. In Proceedings of the 1996 IEEE Symposium on Visual Languages, pages 336–, Washington, DC, USA, 1996.
IEEE Computer Society. ISBN 0-8186-7508-X.

[6] Petra Isenberg, Anthony Tang, and Sheelagh Carpendale. An exploratory study of visual information
analysis. In Proceeding of the twenty-sixth annual
SIGCHI conference on Human factors in computing
systems, CHI ’08, pages 1217–1226, New York, NY,
USA, 2008. ACM. ISBN 978-1-60558-011-1.

[14] Robert Spence. Sensitivity, residue and scent.: Concepts to inform interaction design for the support of
information space navigation. Information Design
Journal, 12:163–180, 2004.

[7] Brian Johnson and Ben Shneiderman. Tree-maps: a
space-filling approach to the visualization of hierarchical information structures. In Proceedings of the
2nd conference on Visualization ’91, VIS ’91, pages
284–291, Los Alamitos, CA, USA, 1991. IEEE Computer Society Press. ISBN 0-8186-2245-8.

[15] John Stasko and Eugene Zhang. Focus+context display and navigation techniques for enhancing radial,
space-filling hierarchy visualizations. In Proceedings
of the IEEE Symposium on Information Vizualization
2000, INFOVIS ’00, pages 57–, Washington, DC,
USA, 2000. IEEE Computer Society. ISBN 0-76950804-9.

[8] Robert Kosara, Fabian Bendix, and Helwig Hauser.
Parallel sets: Interactive exploration and visual analysis of categorical data. IEEE Transactions on Visualization and Computer Graphics, 12:558–568, July
2006. ISSN 1077-2626.
[9] William Lidwell, Kritina Holden, and Jill Butler.
Universal Principles of Design, Revised and Updated: 125 Ways to Enhance Usability, Influence Perception, Increase Appeal, Make Better Design Decisions, and Teach through Design. Rockport Publishers, second edition, revised and updated edition, jan
2010. ISBN 1592535879.

[16] Kesaraporn Techapichetvanich and Amitava Datta.
Interactive visualization for olap. In Osvaldo Gervasi, Marina Gavrilova, Vipin Kumar, Antonio Lagan`a, Heow Lee, Youngsong Mun, David Taniar, and
Chih Tan, editors, Computational Science and Its Applications – ICCSA 2005, volume 3482 of Lecture
Notes in Computer Science, pages 293–304. Springer
Berlin / Heidelberg, 2005. 10.1007/114248572 3.

[10] Svetlana Mansmann and Marc H. Scholl. Exploring
olap aggregates with hierarchical visualization techniques. In Proceedings of the 2007 ACM symposium
on Applied computing, SAC ’07, pages 1067–1073,
New York, NY, USA, 2007. ACM. ISBN 1-59593480-4.

[17] Michelle Q. Wang Baldonado, Allison Woodruff, and
Allan Kuchinsky. Guidelines for using multiple views
in information visualization. In Proceedings of the
working conference on Advanced visual interfaces,
AVI ’00, pages 110–119, New York, NY, USA, 2000.
ACM. ISBN 1-58113-252-2.

79

