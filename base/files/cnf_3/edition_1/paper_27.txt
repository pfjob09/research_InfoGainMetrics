2011 15th International Conference on Information Visualisation

A Visualization Interface Applied in the Brazilian T-Commerce Scenario
Anderson Marques1, Nikolas Carneiro1, Rafael Veras1, Aruanda Meiguins2, Bianchi Meiguins1
Universidade Federal do Pará (UFPA)1, Rede de Informática Ltda.2
{anderson.gmarques@gmail.com, nikolas.carneiro@gmail.com, rafaelveras@ufpa.br,
aruanda@redeinformatica.com.br, bianchi.serique@terra.com.br}
The GINGA midlleware was specified by the
SBTVD with the goal of abstracting the hardware
platform for developers. The middleware defines the
interaction modes and two subsystems for development
of applications, Ginga-J (a Java based environment for
procedural applications) [11] and Ginga-NCL (for
declarative applications based in the Nested Context
Language - NCL) [12].
The major innovation is the possibility to gain a
wide range of new services through TV, such as the tcommerce. Other key point is that the middleware would
provide a better social/digital inclusion, since it specifies
internet access, is a specification free of royalties and
more than 95% of the Brazilian population has at least
one TV device [13].
In order to provide an application that enables the
viewer to perform a analysis and easy the choice among
products of the same type, this paper presents a prototype
tool for iDTV that uses the treemap visualization
technique to help the viewer to perform the analysis.
Section 2 presents issues faced by the development
of an IV interface for the iDTV environment. Section 3
enumerates some related works, both on IV development
for limited environments and works about the GINGA
middleware and its possibilities. Section 4 presents the
objectives of this work, the design process of the
interface and the results acquired in this early stage of
development. Section 5 present a scenario to exemplify
the use of the application and Section 6 bring some final
considerations.

Abstract
With the spread of sales in electronic commerce and
the popularization of interactive devices for digital
television, grows the demand for applications that
supports services over this platform, considering that
television devices are present in 95% of brazilian
households. In order to supply this demand, this work
proposes a visualization interface for visual analysis of
products in electronic commerce, through the Interactive
Digital TV, the t-commerce.
Keywords: Information Visualization, Interactive
Digital Television, t-commerce.

1. Introduction
The use of information visualization (InfoVis)
applications becomes more common every day, once it
favors the analysis of large amounts and different types
of data in an intuitive and interactive way, revealing the
relationships between data. There are several reasons for
this popularity, one of them is the evolution in the means
of data transmission and the dynamism in decision
making the globalized world imposes on society.
In this context, the popularization of the Interactive
Digital TV (iDTV) brings a new environment for
applications, in a similar way to what happened to the
internet, whose popularization led a natural tendency for
the port of applications [10]. However, the porting of
applications to the iDTV environment should consider
the inherent limitations of this platform. These
limitations are more noticeable about interaction devices
and processing power [10].
Actually, according to the Brazilian iDTV
middleware (GINGA) [11], the interaction device is
limited to the Integrated Receiver-Decoder (IRD)
controller. Along this work we use IRD to refer to the
any device that attends to the specification created by the
Brazilian Digital Television System (Sistema Brasileiro
de Televisão Digital, SBTVD) for interactivity, be it a
Set-top Box (STB) or a TV with embedded interactive
resources.
1550-6037/11 $26.00 © 2011 IEEE
DOI 10.1109/IV.2011.66

2. InfoVis issues in iDTV
Even, by definition, information visualization is a
computer independent human perception task, the
computer support has being an important factor for
improvements in this field [19]. It is due to the elevated
memory capability, high processing power, improved
video devices and interactivity resources availability,
which can be used to potentiate visual and cognitive
human systems [17].
When developing applications for a new
environment, it is necessary to deal with several issues,
besides the problem the application is supposed to solve.
188

As example, we can point the technologies to use (both
on development as on the production environment) and
the limitations imposed by the environment.
Issues largely discussed in the IV field become even
worst in the context of iDTV. An example is the
representation of large datasets, which in low
performance environments (such as iDTV), impose
severe scalability restrictions.
Another quite discussed point in InfoVis is
interaction. About this issue, the SBTVD specification
defines IRD controllers as input interface. The controller
functionalities-buttons are following: confirm, exit, back,
directional, contextual shortcuts (through the coloredbuttons: red, green, yellow and blue), information and
menu [18]. So, to assure compatibility among the
diversity of IRDs, we use just the minimum set of keys
to represent the listed above, assigning the “back”
functionality to the red button.
The iDTV environment faces a great challenge
about interactivity, due to the lack of devices that allow
better interaction capabilities. Unlike a personal
computer (PC), there is no mouse or other kind of
pointing device, which makes the specification of a bidimensional point a laborious activity [15] . This is a
serious lack for a visualization tool, since a set of
operations and functionalities are based on, or improved
by, pointing interactions (like clicking, drag and drop,
zooming, selection and navigation operations [21] .
Another strong concern is the data scalability.
Considering the hardware limitations, there are severe
constraints about what can be loaded into the IRD. The
amount of represented items also leads to navigation
questions. Since the interaction device is limited and
navigation can require much effort, it can result in an unmotivational characteristic for the viewer.

Our work presents an own implementation of
graphical components, instead of using LuaOnTV [4] ,
based on the considerations discussed by Pinheiro [3]
and taking into account the presentation model and the
content associativity model recommended by Ghisi [6]
We present a dynamic generated GUI, based on data
loaded in each run. This means that the prototype is
general purpose and adaptable to different dataset. This
is an important requirement in a comparison tool in sales
support as it allows using of the application for various
products types without requiring code changes.

4. Proposed work
We present a prototype of a general purpose iDTV
application for t-commerce support, which uses the
treemap visualization technique. When attending to a
service in the iDTV environment, this prototype also
contributes to the digital inclusion, and consequently to
social inclusion, among the Brazilian people [16] .
Some characteristics of the interface are listed
below:
x Dynamic generation of the user interface;
x Navigation through items and user controls, using the
remote control arrows;
x Selection of items and details on demand;
x Usage instructions at any time;
x Dynamic configuration of the visualization hierarchy;
x Dynamic configuration of items size and color;
Usually, data has a hierarchical structure or, at least,
can be hierarchically organized. This data organization
eases the analysis if the data are small, because it reduces
the complexity of the data [7].
Usually, data has a hierarchical structure or, at least,
can be hierarchically organized. This data organization
ease the analysis, because it reduces the complexity of
the data. In this context, among the different ways of
representing and presenting data, we choose the treemap
technique. According to Johnson [7] this technique
makes easy to the user view a large volume of data,
considering that human beings have the innate ability to
recognize the spatial configuration of elements in a
picture and understand the relationship between them.
Considering the two aspects of the brazilian
middleware, Ginga-NCL and Ginga-J, we choose GingaNCL, instead of Ginga-J, to develop the prototype, due
to the maturity of this option compared to the other one
[8], [14].
The NCL is only used as a layer to define the
positioning of the graphical user interface and to capture
the interaction events in to the prototype. The Lua layer
is responsible for most of the application functionality
and is divided into four groups: the visualization,
responsible for rendering the treemap in accordance with
the standard configuration, the configuration manager,
which records the user-configurable settings into a
configuration model, the data manager, responsible for
loading and organizing data, and the cart, that records
selected registries by the user and returns them to the
Broadcasting Service Provider (BSP).

3. Related works
Into the iDTV environment we found the LuaOnTV
[4], a framework that aims to optimize the build of iDTV
applications. The framework provides several GUI
components rendered directly in Lua, allowing the
development of dynamically generated interfaces.
Unfortunately, the projected presented some issues on
performance and its development is stopped for while.
Pinheiro et al. [3]
implemented multiple
coordinated techniques (Teemap and scatter plot over
maps), to display information on mobile devices. The
main feature of this work is the capability to soften the
impact on data analysis in limited devices.
Ghisi [6] defined models of t-Commerce based in
three features: presentation (Presentation Model), form
of payment (Form of Payment Model) and content
associativity (Content Associativity Model).
Hur [5] designed and implemented a system that
provides a personalized yellow page service for IPTV
end-users to create an interesting partnership in the
business directory market. This system shows the
commercial possibilities for a t-commerce application in
an IPTV system.

189

processed by the Service Server and extract a subset of
the products dataset. This reduced dataset is what is send
to BSP and anchored to that execution context (dataset +
tv commercial or content) (3).
Further, with the database updated, (4) the
application's life cycle begins when the BSP provide to
the viewers both the executable application and the
dataset to be used. So, the Ginga Set-Top-Box, interpret
and load the prototype, displaying it into the TV (5). The
Ginga Set-Top-Box uses some metadata from the TV to
properly render the application (6). After these steps, the
viewer receives the visual information through the TV.
In turn, the viewer has the first contact with the
visualization (8), and then start to interact to the interface
prototype, analyzing, comparing, and choosing their
products. After the viewer analyze and choose products,
(9) he can opt either by buying or not the selected
products.
Once started, the app will end only in two ways: the
user can exit the application without beginning the
purchase application, via the button “Exit”, or sending
the selected products to the BSP and waiting for the
purchase application to start, through button “Buy”. It is
important to say that the scope of this work does not
include the purchase application.

During the development of the prototype we choose
to use just two contextual shortcuts, because a smaller
number of interactions would be easier for the end user
to get used to the application usage.
The prototype was defined to be a tool in a step prior
to the buying process via TV, specifically, in the choice
of products. The Figure 1 shows the architecture of all
the life cycle of the prototype and what happen before
the viewer start to interact with the TV.
The architecture of the prototype is divided in four
environments: development area, BSP, Ginga Set-TopBox, and the viewer interaction environment.
In development area, basically, the designer defines
which available products will be in the database script.
The BSP is responsible for send to the clients’ STB the
database and the prototype, it also get the products
selected by the client and load the shop application with
them. The Ginga Set-Top-Box is responsible for receive
end run the prototype, processing the viewer interactions.
Finally, in the viewer interaction environment, the
viewer is able analyze and interact with the visualization,
being able to adapt the prototype for its needs.
First of all, (1) a Designer write a database script to
selecting just the items to be displayed in that execution
(i.e. the products that will be offered or are related to that
commercial), and then (2) the database script will be

Figure 1: Architecture prototype splited into association areas showing in details the four environments (development area,
BSP, the viewer’s Ginga Set-Top-Box, and the viewer's interaction environment).

4.1. Details of functionality and forms of
interaction of the prototype

First, when we loaded the database bigger than 100
items the treemap visualization in iDTV became
cluttered. The second issue we found is about
performance. The time averaged to plot all items in the
interface was equivalent to 18 seconds, which is not a
satisfactory result.

After examining the main issues discussed in
Section 2, we performed some tests with databases
bigger than 100 items, thus, we highlight three issues.

190

As the preparation of the visualization is up to an
expert, the problems above cited are unlikely to occur,
while they are easily solved by some preprocessing on
the database (e.g., filtering). On the other hand, if the
user is allowed to load any database, in other word, if the
application is in the viewer’s STB permanently there is a
possibility of the viewer load a database bigger than 100
items which became a cluttered visualization and
unsatisfactory performance.
And third, in order to overcome such difficulties, we
decided to link the application database with the TV
content, which according to Morris [9] is classified as
Service Bound application.
In the iDTV environment the main form of
interaction between the viewer and the application is the
remote control. However, it does not provide means for
reaching any bidimentional point in the TV. Considering
this constraint, we designed the navigation in order to
avoid unpleasant impacts on the ordinary functions of the
TV, such as channel choice. So we decided to use only
the directional arrows, the “ok” button, and the
contextual shortcuts of the remote control.
In order to avoid the constraint above, considering
the limitation of the interactivity device and the
hierarchical organization of the treemap technique, we
have designed a tree-based navigation for the prototype.
Basically, to go down in the navigation tree the end
user should click in the “ok” button. To navigate among
the treemap groups, treemap items, or among the GUI’s
buttons, the viwer should use the directional arrows. And
finally, to return a level in the navigation tree the viewer
use the “red” button. We opt to put all the graphical
components (e.q. buttons, labels, radiobuttons) in the
tree.
Starting the application, the prototype displays an
area for the visualization, one for the "instructions" and
one for configuring the visualization (Figure 2). The area
A is the visualization area, where the viewer can
navigate between treemap groups and items, the area B,
presents a set of "instructions" to help the viewer to
identify the possible interactions with the tool, and
finally, the area C contains the buttons responsible for
configuring the treemap: "Set Hierarchy", "Set Size",
"Set Color" and "Set Label", more two, the buttons
"Buy" and "Exit".

In the navigation structure, the visualization is
"sibling” of the control buttons, and the items and groups
of the treemap are children of the visualization. When
navigating between items or groups, viewers can see the
details of that item/group in the area A according to
Figure 3. We chose to plot the details on the items in a
reserved area instead of rendering them over the
visualization so, at no time, the user lose the visibility of
other treemap items. Details can be seen in Figure 3.

Figure 3: A - Details on demand of an item selected in
the prototype
Considering the limitations on the interactivity
device and the absence of any prior training of the
viewer to use the tool, we define an interaction pattern to
be used whenever possible. The configurations of
hierarchy, size and label, respectively activated by the
buttons "Set hierarchy", "Set Size" and "Set Labels"
follow this pattern. By selecting one of the buttons
mentioned, the area defined for the configuration (where
the buttons are rendered) is redrawn, giving space to a
group of radiobuttons that refers to the eligible attributes
in each configuration (Figure 4). Only a subset of the
attributes from the database is available for each type of
configuration, as follows: categorical attributes for
hierarchy configuration; continuous attributes for size
configuration, and all the attributes for label
configuration. To complete de configuration it is
necessary that the user navigate to the button for the
desired attribute and confirm this by pressing
"OK/ENTER" then the display area is updated following
the new configuration.
At the current stage of development of the
prototype, the possibility of setting the color is limited
just for categorical data. It is due to the lack of a user
control that offers a good interactivity to continuous
attributes, since the use of slider like controls are
laborious through remote control.
The Figure 4 shows the treemap colors configured
for the attribute GPU. The items with value “dedicated”
for the cited attribute are colored in green, while items
with value “shared” are colored in red. This
configuration is available via the "Set Color" button. It is
intended to preserve the pattern for setting the colors,
making easier the process of familiarizing with the tool
for the viewer.

Figure 2: A – Visualization area, B - Area for instruction
to the viewer. C – Configuration area

191

Figure 5: Notebook storage capacity of hard disk and
dedicated GPU found after analysis in TreeMap.

Figure 4: Reconfiguring the labels of the colorful items
in Treemap.

As a second scenario, we decided to find a notebook
database of who has the lowest price between the ones
with 4GB of RAM (Random Access Memory) and Mac
OSX operating system. To enable it to perform this
scenario, we reconfigured the size of the treemap items
according to the price attribute, then it was necessary to
redefine the hierarchy of items according to the amount
of RAM, so that was can see faster notebooks that had
equal to 4GB RAM. To be successful in the analysis was
necessary to change the labels of items in accordance
with its operating systems, in order to view the notebook
that had the Mac OSX operating system. After the end of
the configuration of the visualization, it was easy to
identify the notebook that followed the elements required
for analysis. Figure 6 show the scenario.

About the "Buy" button, it sends the BSP data from
products into the cart and ends the application. The way
that BSP handle this data and starts the buying
application is beyond the scope of this project.

5. Scenarios
This section describes an example of using the
prototype, in order to show the use of resources for the
extraction of information products in iDTV. The
database selected for the sample was constructed with
information from the local notebook market, it contains
10 columns being 6 categorical and numerical 4, with a
total of 18 records. The database contains information on
the model, brand, clock, operating system, storage
capacity of hard disk, main memory of the notebooks,
among others.
In the iDTV environment we face a severe limitation
of interaction devices and processing power of the STB
(Set-top Box). These limitations imply in a reduced
dataset to be rendered because as large is the number of
items, more difficult is to the viewer reach all of them
using the remote control.
As a test environment, we used a virtual machine
that simulates a STB with Brazilian middleware Ginga
[20]. In the first scenario we tried to analyze what would
be the notebook with the lowest price that has the
Windows 7 operation system and 2 GB RAM.
To find a laptop with these features, the first step
was reconfigure the treemap hierarchy to make it
possible to distinguish the notebooks that had Windows
7 operational system. Then we reconfigured the size to
the price of the laptops, so the smaller rectangle
represents the cheaper laptop in the goup. Finally, in
order to get the goal of the scenario, leave clearer view
and allow the viewer to make a conscious purchase, we
chose to reconfigure the labels of the treemap items
according to the RAM of the notebooks into the dataset.
Thus, it was possible to navigate between items on the
treemap and observe details about the cheaper laptop
with Windows 7 operational system. Figure 5 illustrates
the notebook and its details on demand.

Figure 6: Lowest price notebook with 4GB RAM and
Mac OSX system operational.

6. Final Remarks
This paper presented a prototype tool which allows
the viewer to perform a comparative analysis of products
of the same type, in order to ease his choice at buying
process. The prototype is being developed for the
brazilian iDTV middleware, Ginga, using the treemap
technique to the help the viewer analysis.
It is important to point that the dynamic generation
of interfaces is a factor of importance in a comparative
tool, since it allows the reuse of graphical user interface
for various datasets.
During the development phase of the prototype
some difficulties come up, such as:

192

x

For the development of dynamic interface was
necessary the development of the vast majority of
graphics
components
such
as
buttons,
radiobuttons, labels, etc.
x To make possible to navigate between items on the
treemap, it was necessary to develop a navigation
algorithm that use only arrows as input.
Because the development and test environment
adopted was only composed by a virtual machine
simulating a GINGA STB, it was not possible to estimate
the performance of the application in a real scenario.
As future work, it is possible to highlight the
following topics:
• Develop the color setting mechanism, for
continuous attributes;
• Develop the client using Lua, for the purchase
of products by a viewer;
• Create a real test scenario to the iDTV, i.e., test
the application into a commercial GINGA STB;
• Realize usability tests;

[12]

[13]

[14]

[15]

[16]

References

[17]

[1]

[18]

KLEIN, J. A.; KARAGEN, S. A.; SINCLAIR, K. A..
Digital TV For All: A report on usability and accessible
designer. Cambridge, UK: The Generics Group, 2003.
[2] HAMILTON, S.. 1997. E-commerce for the 21st century.
Computer. Vol. 30. pp. 44.
[3] PINHEIRO, S. C. V., MEIGUINS, B. S., MEIGUINS,
A. S. G., ALMEIDA, L. H., 2008. A tourism information
visualization analysis tool for mobile devices.
Proceedings. 12th International Conference Information
Visualization. pp. 264 - 269.
[4] LuaOnTV
(2011).
Available
at:
http://luaforge.net/projects/luaontv/. Last acceded in
January 5th, 2011.
[5] HUR, S. J., KANG, S. J., CHOI, W.. A Development of a
System Providing a Personalized Yellow Page Service
Based on an Interactive Video Application Service.
Proceeding of International Conference on New Trends
in Information and Service Science - NISS’09. pp. 11541157. 2009.
[6] GHISI, B. C.; LOPES, G. F.; SIQUEIRA, F.. Conceptual
Models for T-Commerce in Brazil. Proceeding of
Workshop on Interactive Digital TV in Emergent
Countries at EuroITV – Emergent iDTV. pp. 22-27.
2010.
[7] JOHNSON, B., SHNEIDERMAN, B.. Treemaps: a
space-filling approach to the visualization of
hierarchical information structures. Proceeding of the
2nd International IEEE Visualization Conference, pp.
284-291, October 1991.
[8] COSTA, A. L. V. da., MELO, M. de.. Desenvolvimento
de aplicativos para TV Digital: Comparativo entre
módulos do Ginga. 10ª Escola regional de computação
Bahia-Alagoas-Sergipe (ERBASE), 2010.
[9] MORRIS, S., SMITH-CHAIGNEAU, A.. Interactive TV
Standards. Focal Press, 2005.
[10] KLEIN, J. A.; KARAGEN, S. A.; SINCLAIR, K. A..
Digital TV For All: A report on usability and accessible
designer. Cambridge, UK: The Generics Group, 2003.
[11] SOUZA, G. L., LEITE, L. E. C., BATISTA, C. E. C. F.,
2007. Ginga-J: The procedural Middleware for the

[19]
[20]

[21]

193

Brazilian Digital TV System. Journal of the Brazilian
Computer Society. 2007, Vol. v12, pp.47-56.
SOARES, L. F. G., RODRIGUES, R. F., MORENO, M.
F.. 2007. Ginga-NCL: the Declarative Environment of
the Brazilian Digital TV System. Journal of the Brazilian
Computer Society. 2007, Vol. v12, pp. 37-46.
IBGE - Brazilian Institute of Geography and Statistics.
2009. National Survey by Household Sampling Summary of Indicators. 2009. Rio de Janeiro.
COSTA, A. L. V. da., MELO, M. de. 2010.
Desenvolvimento
de
aplicativos
para
TV
Digital:Comparativo entre módulos do Ginga. 10ª
Escola regional de computação Bahia-Alagoas-Sergipe
(ERBASE)
FERRETTI, S., ROCCETTI, M., 2006. MHP Meets the
Web: Bringing Web Contents to Digital TV for
Interactive Entertainment. Eighth IEEE International
Symposium on Multimedia, 2006.
ÁVILA, P. M. de., GATTO, E. C., ZORZO, S. D..
Recommender: Helping Viewers in their Choice for
Educational Programs in Digital TV Context. 40th
ASEE/IEEE Frontiers in Education Conference, 2010.
pp. S1E-1.
WARD, M., GRINSTEIN, G., KEIM, D. Interactive
Data Visualization. 2010.
ABNT NBR 15606-1, Associação Brasileira de Normas
e Técnicas, Digital terrestrial television – Data coding
and transmission specification for digital broadcasting,
Part 1: Data coding specification. 2ª ed. 2010.
SPENCE, R. Information Visualization: Design for
Interaction, 2007.
GingaNCL (2010) Ferramentas Ginga-NCL. Available at :
http://www.gingancl.org.br/ferramentas.html.
Last
acessed in: october 18th , 2010.
SHNEIDERMAN, Designing the User Interface:
Strategies for Effective Human-Computer Interaction,
1997. Addison-Wesley Longman Publishing Co.
ISBN:0201694972.

