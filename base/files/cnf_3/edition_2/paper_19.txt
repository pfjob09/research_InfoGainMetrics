2010 14th International
Information
Conference
Visualisation
Information Visualisation

Interaction with computers using mobile devices
Mariko Sasakura∗ , Shinsuke Fujioka∗ and Susumu Yamasaki∗
∗ Computer Science Department, Okayama University
Okayama, Japan
Email: sasakura@momo.cs.okayama-u.ac.jp

data displayed in the personal computer display and
the mobile device display. It may make new interaction
and visualization methods.
5) Users can store parts of public data in their mobile
devices. They can be the owner of the data. We call
it as pocketing data. They can browse, investigate or
modify the pocketed data freely, without any disturbance, because the pocketed data is stored in their
mobile devices locally.
We expect that our system may make psychological barrier
to use computers lower than now so that users can access
and modify all data around the world more easily.
In a way, pocketing data we mentioned in 5) is already
achieved by the World Wide Web. In the Web, users can
access data around the world by their mobile devices.
However, the Web is closed in electronic virtual world. We
think that it is possible for the users to interact both of the
virtual and real world by using mobile devices. Our idea
may contribute it.
In Section II, we set out our requirements and problems
clearly. In Section III, we explain how we have solved the
problems mentioned in Section II, and show an example
application which uses the interaction we propose. The
logical aspects of the proposed interaction are mentioned in
Section IV. Our discussion is in Section V and conclusions
in Section VI.

Abstract—We propose a new interaction way that uses
mobile devices to input and output devices of computers. The
idea is simple but powerful, because 1) mobile devices are
popular, 2) people can use them easily, 3) people carry them
at all times, 4) two displays one of which is a big display for
a computer and another is a small display of a mobile device
may make new interaction and visualization and 5) a user can
store parts of public data in physically independent device,
that is his/her mobile device. We expect that our idea may
make psychological barrier lower than now so that users can
access and modify all data around the world more easily. In
this paper, we show an example application based the idea we
propose and discuss its possibilities.
Keywords-Mobile devices, Focus + Context, Post-WIMP interface, Ubiquitous computing, Data personalization, Pocketing
data

I. I NTRODUCTION
Most people today have their own mobile phones. Current
mobile phones are actually small computers. They have
enough computing power to send e-mails, show web pages,
play games, and so on. Mobile phones are the most familiar
computers to us.
In contrast, personal computers are still considered difficult to use. Since there are many useful applications running
on personal computers, making really good ways to use
personal computers may be profitable. Strangely however,
many people are afraid to use personal computers even
though they fully utilize their mobile phones which have
almost the same ability as personal computers.
Our idea is to use a mobile device as the input and output
device of a personal computer. By making use of a familiar
device, that is, a mobile phone, people may find it much
easier to use a personal computer. In addition, we think
that mobile devices for input and output may provide a new
human computer path.
We expect that the advantages of our idea are:
1) Most people have their own mobile devices. There is
no need to buy a mobile device for a proposed system.
2) The proposed system is easy-to-use because users can
use their favorite mobile devices.
3) Since users carry around their mobile devices at any
time, they can use the proposed system everywhere.
4) To use two displays physically, which are a display for
a personal computer and a display of a mobile device,
may allow users easy to recognize the difference of
1550-6037/10 $26.00 © 2010 IEEE
DOI 10.1109/IV.2010.27

II. S YSTEM S PECIFICATION
A. Architecture
Our idea is to use mobile devices as input and output devices of personal computers. Figure 1 shows the architecture
which realizes our idea. There are several computers and mobile devices. Personal computers and mobile devices which
have sharable data can communicate with any computers or
mobile devices in a local network. Mobile devices which
do not have sharable data can communicate with computers
or mobile devices which have sharable data. Two personal
computers and one mobile device in Figure 1 have sharable
data.
In this architecture, data in a personal computer can be
shared. The computer sends data to mobile devices when
they request it. The computer receives data from the mobile
devices when they send it. All data flows are controlled
122

by the mobile devices. The computers are passive. This
architecture means that we use mobile devices as both the
input and the output devices of computers.
Each mobile device can request computers to send data,
modify the data and resend the data to the computers. We
assume that the mobile devices keep data temporarily, and
send back the data to the computer if necessary. We can
consider this ability of the mobile devices as a function
application.

B. Interaction
For intuitive interaction, we plan to use acceleration
sensors in mobile devices. We interpret movement of a
mobile device as input for personal computers. For example,
if we wave a mobile device back and forth or tip it, a
computer interprets the movement as some command.
In an example application reported in this paper, we plan
to implement the function which selects a machine to be
connected by the movement of a mobile device, but we
have not yet implemented it. A machine to be connected
is selected by a menu in the example application. What we
can do, however, is select which part of an image to get
from a personal computer to a mobile device by movement
of the mobile device. We can zoom the image up or down
by using a touch panel or buttons on the mobile device.

B. Technical Problems
To realize our idea shown in Figure 1, two problems must
be solved.
1) How do machines (personal computers and mobile
devices) communicate with each other?
In terms of convenience, the most important point is
that we can put mobile devices in the network of our
system without special operations. If someone goes to
a room in which our system is running, his/her mobile
device can join our network without any operation. We
have to find the way to achieve this environment.
2) How do we design interaction with mobile devices?
For example, how does a mobile device specify the
machine to connect to?
We would like to design intuitive interaction for our
system. Some mobile devices have acceleration sensors so that we can use them to achieve intuitive
interaction.
We describe our ideas for solving these problems in the
next section.

C. An example application
We have developed an example application which can
send one part of an image from a machine (a personal
computer or a mobile device) to another mobile device and
zoom it up and down in the mobile device. The example application consists of several personal computers and
several mobile devices. These machines must be supported
by Bonjour, and the mobile devices must have acceleration
sensors. Therefore, we use Mac PC as a personal computer
and iPod touch or iPhone as a mobile device.
We have developed an example application which can
send and receive images between a personal computer and
a mobile device, or between a mobile device and another
mobile device. The functions of personal computers and
mobile devices are as follows.
The functions of personal computers
• A personal computer can capture a current desktop
image and send part of it to mobile devices, if a mobile
device requests the image.
• A personal computer can receive an image from a
mobile device, and put it on the current desktop image,
if the mobile device sends the image to the computer.
The functions of mobile devices
• A mobile device can select the partner of the connection, that is, a personal computer or a mobile device.
In the current test system, the selection is done by
selecting a button with the machine’s name. In future,
we would like to design a more intuitive interaction
way.
• A mobile device can specify the part of the desktop
image of a personal computer by acceleration sensors,
and receive that part of the image.
• A mobile device can send or receive one part of the
original image to/from another mobile device.
• A mobile device can modify the received image. In
the current test system, we can only add a new line to
the image. In future, we would like to develop other

III. S YSTEM I MPLEMENTATION
A. Communication between machines
To solve problem 1 mentioned in Section II, we use
Bonjour as the communication protocol, which is a zeroconfiguration networking. Bonjour1 is developed by Apple
Inc. for Mac OS X and Windows. Therefore, only machines
which use Bonjour can use our system.
The salient characteristic of Bonjour is that there is no
server machine but all machines in a subnet broadcast their
services. Without any registration action, a machine in the
subnet searches the available service by itself. Therefore,
we can construct a system which satisfies the condition we
mentioned in Section II.
In our system, all personal computers and certain mobile
devices whose data we would like to share with other
mobile devices are registered to sharing the data machine
service. Certain operations are needed to register the service.
However, for most mobile devices which don’t share their
data with other devices, no operations for receiving and
sending data to/with other computers are needed.
1 http://developer.apple.com/mac/library/documentation/Cocoa/ Conceptual/NetServices/Introduction.html

123

sharable
data

sharable
data

Mobile Device

Mobile Device
Mobile Device

Mobile Device
sharable
data

Figure 1.

•

•
•

System Architecture

complex functions to change an image with a touch
panel on a mobile device.
A mobile device can zoom the received image up and
down. If a mobile device does not have the data on a
region which is needed in scaling the image down too
much, the region is displayed as blank.
A mobile device can send the image on it to a personal
computer.
A mobile device can send the image on it to another
mobile device if the mobile device requests it.

its display. You move the mobile device A up, down, right or
left, and decide the area which to be sent from the personal
computer to mobile device A. In Figure 2, the mobile device
A shows the picture sent from the personal computer. On the
mobile device, you can zoom the picture up or down.
In Figure 2, we also use mobile device B which shows
the zoomed up picture of mobile device A. In this example,
mobile device A sends the picture to mobile device B
because mobile device B have requested the picture. This
is the connection between mobile devices. In the case of
low-resolution images, the zoomed up image may be blurry.
We plan to use various resolution images for this system in
future.

Figure 2 shows an example application we developed.
In this figure, a personal computer, which is the bigger display in this figure, shows a wikipedia page which describes
“kimono”. When you want to look a picture of this page on
mobile device A, you send a request from mobile device A to
the personal computer. Then the personal computer captures

IV. L OGICAL BACKGROUND
The system we have proposed has a logical background
which is based on λ calculus.
124

Figure 2.

An example application

Index-added term (extended λ-terms, term, for short) is
defined:

conversion. Because we assume:
M ⇒∗ M1 ⇒∗ Mnormal
N ⇒∗ N1 ⇒∗ Nnormal

(i) If x is a variable, then x is a term.
(ii) If M, N are terms, then (M N ) is a term.
(iii) If x is a variable and M is a term, then (λx.M ) is a
term.
(iv) If i is an index and M is a term, then (i : M ) is a
term.

Then,
(1)
i : M ⇒∗ i : M1
j : N ⇒∗ j : N1
(i : M1 j : N1 )
i j
j : (M1 N1 )
j : (Mnormal Nnormal )

The term has three conversion rules of λ calculus which
are α, β and η conversions. In addition, there are two
conversion rules.

(2)
i : M ⇒∗ i : M1
λx.i : M1
i : λx.M1
i : λx.Mnormal
In the example application, index i denotes a personal
computer or mobile device. Relation i j holds when i can
send a image to j, that is, when i is registered as a sharing
data machine.
λx.i : M

j : N)
i j
j : (M N )
(γ2) λx.i : M
i : λx.M
where is a relation.
If the term M has a normal form, it is unique up to α
(γ1)

(i : M

125

V. D ISCUSSION

interaction. Now, we are developing other version which use
tilting a mobile device for interaction.
Applications we are planning to develop are:
1) Presentation system
In the system, a user who is a listener of a presentation
can see the slide by his/her mobile device, zoom up
an arbitrary part of the slide, and read supplemental
explanations prepared by the presenter at any time.
2) Computer supported co-operative work system
This system provides big physical electronic bulletin
board to which members can access. The members can
get data displayed on the bulletin board and modify
the data on their mobile device, and send the modified
data to the bulletin board. The data on the bulletin
board are updated when it receives the data from the
mobile devices.
3) 3D visualizer system
In this system, a user can see a surface appearance
of a 3D graphical object in a display of a personal
computer. If the user specifies a cross-section surface
by a mobile device, the image of the inside of the
object is displayed on the mobile device. If the user
uses several mobile devices, he/she can see several
cross-section surface and the surface appearance of
the object at the same time.
The next problems we have to solve are:
• To check that processing speed, amount of memories,
and transfer speed of mobile devices are enough or not
for our applications.
• To examine which movements can be recognized by
acceleration sensors of mobile devices and to design
interaction commands by using the movements.

The studies of interaction using mobile devices, especially
iPhone or iPod touch are among those of post-WIMP
(Window, Icon, Menu, Pointing device) interfaces [1], [4],
[10]. Our study is another one of them. The feature of our
study is that we propose a system which uses a combination
of personal computers and mobile devices.
From the point of view of information visualization, the
proposed system is an application of the focus+context
method [3], [5]. Most focus+context methods present an
overview impression and detailed information in the same
image, but some represent them in different windows on
the same display. Our proposed system can show them in
different displays, on a personal computer and on a mobile
device, or on different mobile devices. We can consider the
proposed system as a new method of focus + context. With
this method, we hope to decrease mental gaps of users who
deal with information at different levels of abstraction, but
we have not verified the effect yet. This is work for the
future.
As we mentioned in Section IV, the example application
we developed is an application of distributed lambda calculus which is a model of concurrent systems. π-calculus
is a popular model of concurrent process[8], [9]. There are
some studies on models of concurrent process based on λcalculus [2], [6], [7]. The λ-calculus is a model based on
functions. In our developed system, consists of distributed
environments which can apply functions to data, personal
computers and mobile devices. We can regard the system as
a realistic model of concurrent process.
VI. C ONCLUSIONS
We propose a new interaction method that uses mobile devices for input and output to/from computers. We present an
example application we developed and show the possibility
of our method. We expect to decrease mental gaps of users
who deal with information at different levels of abstraction
by using physically-separated devices.
We think the advantages of this system are:
• A user can access a personal computer by his/her
favorite mobile device instead of a keyboard and mouse.
• He/she can use a touch panel and/or acceleration sensors if the mobile device has them. The touch panel
and/or acceleration sensors may provide intuitive interaction.
• A user can get a distributed environment easily, since
the system sends data from a personal computer to
a mobile device if the mobile device requests them.
In the environment, the user can carry the data by
the mobile device, or divide data editing work among
several persons.
In the application we introduced in this paper, we can
use a touch panel and movements of a mobile device for

R EFERENCES
[1] Bednarz, T.P., Caris, C. and Dranga. O., Human-computer
interaction experiments in an immersive virtual reality environment for e-learning applications, 20th Australasian Association
for Engineering Education Conference, pp.834–839, 2009.
[2] Boudol, G. Toward a lambda-calculus for concurrent and
communicating systems, TAPSOFT ’89, Lecture Notes in Computer Science, 351, pp.149–161, 1989.
[3] Furnas, G.W. Generalized fisheye views, Proceedings of ACM
CHI’86, pp.16–23, 1986.
[4] Jacob, R.J.K., Girouard, A., Hirshfield, L.M., Horn, M.S.,
Shaer, O., Solovey, E.T. and Zigelbaum. J. Reality-based interaction: a framework for post-WIMP interfaces, Proceeding of
the twenty-sixth annual SIGCHI conference on Human factors
in computing systems, pp.201–210, 2008.
[5] Lamping, L., Rao, R. and Pirolli. P., A focus+context technique
based on hyperbolic geometry for visualizing large hierarchies,
Proceedings of the SIGCHI conference on Human factors in
computing systems, pp.401–408, 1995.

126

[6] Murphy, T., Crary, K., Harper, R. and Pfenning F., A symmetric
modal lambda calculus for distributed computing, Proceedings
of the 19th IEEE Symposium on Logic in Computer Science,
pp.286–295, 2004.
[7] Nielson, F. The typed lambda-calculus with first-class process, PARLE ’89 Parallel Architectures and languages Europe,
Lecture Notes in Computer Science, 366, pp.357–373, 1989.
[8] Sangiorgi, D. Asynchronous process calculi : the firstand higher-order paradigms, Theoretical Computer Science,
Vol.253, No.2, pp.311–350, 2001.
[9] Sangiorgi, D. and Walker, D. The π-calculus: a theory of
mobile process, Cambridge University Press, 2001.
[10] Van Dam, A., Post-WIMP user interfaces, Communication of
ACM Vol.40, No.2, pp.63–67, 1997.

127

