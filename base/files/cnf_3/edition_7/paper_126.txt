The effect of data-relatedness in interactive glyphs
Harri Siirtola
Tampere Unit for Computer-Human Interaction (TAUCHI)
Department of Computer Sciences
FIN-33014 University of Tampere
harri.siirtola@cs.uta.fi
Abstract
Interactive visualization of multidimensional data is an
important activity in many information acquisition tasks.
We introduce a new interaction method for glyphs, an
adoption of the ‘small multiples’ presentation method. It
has been used extensively in printed graphics and also in
scientific visualization, but its applications in information
visualization have been few. We propose a method for
interacting with small multiple displays that allows rapid
and easy experimentation with glyph property assignments.
In addition, we present findings on the relation between the
glyphs and the data. The results of our experiment with 18
subjects support the idea that a data-related glyph is more
favored by the users and about 13% more accurate than an
unrelated glyph in information acquisition tasks.
Additionally, the proposed visualization technique may
prove to be efficient enough for non-experts to explore
multi-dimensional data sets.

1. Introduction
Glyphs are an attractive information visualization tool
in their simplicity. With glyphs, it is possible to construct
displays of multiple images that “reveal repetition and
change, pattern and surprise – the defining elements in the
idea of information” [18, p. 105]. Displays constructed
with small multiples of glyphs have also the potential to
become useful interfaces into complex data for novices and
experts alike [8].
Another favorable aspect of glyphs is the fact that
people are accustomed to them, as they have been used in
the data graphics of newspapers and TV newscasts.
Visualization glyphs that are used in these contexts are
usually very simple, if we compare them to glyphs that are
used in the visualization of multivariate data.
Small multiple designs are constructions that facilitate
comparisons by representing a set of data with multiple
miniature pictures, or glyphs. It is interesting to note that
when Edward Tufte describes ‘small multiples’ [17, pp. 6780] and ‘multiples in space and time’ [18, pp. 105-120], he
does not use any specific word for the glyphs – they are just
images and pictures. In addition, when Robert Spence [16,
p. 58] writes about using Chernoff faces to display data, he

does not describe them as ‘small multiples’ displays. Still,
these concepts seem to be closely related.
There are a number of issues still unresolved in using
the glyphs for information visualization. It has been often
suggested that users should be able to define the binding of
data variables to the attributes of glyphs. So far, this has
been more common in scientific visualization, and there are
no results on how successful and satisfied users are with it.
Another issue is the nature of glyphs that are used. In
scientific visualization, it is common to use abstract glyphs,
such as star shapes. What if the glyph used for visualization
really represents something? Moreover, what if the glyph is
somehow related to the data being visualized?
This article focuses on the question of whether a glyph,
which is related to the data to be visualized, is more
efficient and more usable than a glyph that is unrelated to
the data. The results of our experiment support the
assumption that a data-related glyph performs better than an
unrelated one, it also indicates that users are capable of
creating effective small multiple displays on their own.

2. Related work
Herman Chernoff first proposed the idea of using
cartoon faces to represent multidimensional information
[5]. The original idea came to him when he was looking for
a visual approach to deal with the cluster analysis. At first,
his peers thought that the suggested idea was not a serious
one [Chernoff, personal communication], but the value of
his design was soon discovered.
The rationale for using faces as glyphs is that people
are very good in recognizing faces. Ware [21, p. 253] writes
that we may even have special neural hardware to deal with
faces. This was also supported by the experiments of
Sergent et al. [15] where they found that there is a certain
area in human brain for face processing, and that area has a
modular structure.
Chernoff and Rizvi [6] ran tests where the subjects
where asked to classify faces into groups, and permuted the
assignment of features. The permutation caused a 25% error
rate, which means that classifying faces as similar is clearly
influenced by the assignment of variables to specific
features.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Morris et al. [13] experimented with Chernoff faces
and found that the face recognition process is serial and not
pre-attentative, as was earlier believed. Pre-attentative
processing is something that happens without conscious
effort, and that is accomplished automatically and
simultaneously for the entire visual field. They also
established that the assignment of variables into such glyph
properties as of eye size and eyebrow slant produced the
most accurate results. In their conclusions, they suggested
that Chernoff faces might not provide significant advantage
over other multivariate iconic visualization methods.
Loizides and Slater [12] argue in their work that the
main problem in visualizing multivariate data is the
mapping between data variables and the visual structure.
They have developed an algorithm called the Empathic
Visualisation Algorithm (EVA) that strives for a naturalistic
mapping, one that produces an appropriate emotional
response for the observer. In the case of Chernoff faces this
means that a positive state in the visualized data should be
reflected as a smiling face and vice versa. The data
variables are thus bound to the facial expressions instead of
facial features. They have a prototype implementation of
the software that produces automatic mappings, but there is
no published information of how it actually performs.
In scientific visualization, many visualization systems
allow the user to bind data variables to the attributes of
glyphs. Small multiple displays can then be produced with
various glyph placement strategies [20]. Chuah and Eick [7]
developed three 3D glyphs to visualize software project
management data. They also combined their glyphs with
time series, histogram and rose diagrams to form
visualizations that are more effective. One of their glyphs,
the InfoBug, is also related to the data being visualized,
although the relation is abstract and even humorous (an
insect representing a software flaw, a ‘bug’). Other glyphbased systems for scientific visualization are, for example,
systems built on top of Iris Explorer [9], like GlyphMaker,
by Ribarsky et al. [14], its VRM descendant called Virtual
Data Visualizer [19], and a unnamed system developed at
BMW for in-house use [11].

reasonable number of glyphs in a display is determined by
the complexity of the glyph. A simple glyph can be
effective in higher number of multiples than a graphically
complex one.
It is an inherent feature of a glyph to not reveal actual
data values. Thus, a glyph can only be compared to other
glyphs. If we consider this limitation from the view of
Bertin’s graphic information processing theory [1,2], glyphs
are limited to answering questions on overall and
intermediate levels only. If we make it possible to “open”
the glyphs, for example, into a list view that reveals the
underlying data values, we can compensate for the missing
drill-down feature.
Two glyph designs were chosen for the experiment.
The first one is an implementation of Chernoff face and the
second design was a car glyph constructed specifically for
this experiment.

3.1. Chernoff Faces
The Chernoff face glyph (see Figure 1) utilizes the
human’s inherent face processing capability. Even from a
small cartoon face, it is easy to see if the facial expression
is happy or sad, angry or friendly. By mapping data
variables to these expressions, the data exploration task
turns into a search for a certain kind of facial expression.
The Java implementation of Chernoff face that was used in
our experiment is by Steve Champeon [4], who based his
implementation on Dave Johnson’s work [10].

HEAD ECCENTRICITY

PUPIL SIZE

EYE ECCENTRICITY

EYEBROW SLOPE

3. Information visualization with glyphs
The term glyph originates from a Greek word for
“carving”. The icon is a closely related concept with one
fundamental difference; icons are generally static
pictograms whereas glyphs can change their shape. In
addition, icons represent classes of different objects, like
“folders”, “text documents”, or “directories”, whereas a set
of glyphs represents a division into subsets.
A glyph in visualization is either a symbol that
represents a set of multi-valued data items or a symbol that
represents one multi-valued observation of data. The choice
depends on the data we are visualizing. If there are too
many observations or data items to construct a display of
small multiples, we must classify our data and iconify the
classes instead of individual observations. In addition, the

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

NOSE SIZE

MOUTH VERTICAL OFFSET

EYE SPACING

EYE SIZE

MOUTH WIDTH

MOUTH OPENNESS

Figure 1 The properties of the Chernoff Face.

• Creating a table of small multiples

3.2. Car Glyph
The goal in designing the car glyph (see Figure 2) for
the experiment was to have a general glyph to visualize any
car-related data, not just the data used in this experiment.
There is no direct match between the data variables and the
glyph properties.
The characteristics of the car glyph were drawn quite
directly from Bertin’s visual variables [1, p. 187]: x and y
position, size, value, texture, color, orientation, and shape.
The x and y position – or mark, as Bertin calls it – is here
determined by the automatic classification of the small
multiple display. The variable size is divided into two parts,
HEIGHT and WIDTH. Value is quite straightforward, and
texture and color are not used. Orientation is again a direct
map for the variable ANGLE. The implementation of shape
variable is the most structured: HOOD and TRUNK variables
control the shape of the car’s front and rear parts, variables
WHEEL SIZE and WHEEL PROPORTION control the
appearance of the wheels, and the variable SLANT
determines the skewness of the car.

4. The Glyph Explorer program
For the experiment, we constructed a prototype
program called Glyph Explorer. The program supports two
variable types: categorical and numerical.
The following four operations are available in the
program:
• Experimenting how the glyph properties behave
• Binding of data variables into glyph properties

SLANT

WIDTH

HEIGHT

ANGLE

HOOD

TRUNK

• Precise comparison of small multiple cell values
To provide these facilities, the user interface has two
windows, the Glyph Editor window shown in Figure 3 and
the Glyph Visualizer window shown in Figure 4.
The Glyph Editor window has a picture of the glyph
and a list of the glyph properties. Each property name has a
drop-down menu, a checkbox and a slider associated with
it. The drop down menu contains the names of the data
variables, and by selecting a data variable from the menu, it
is associated with the corresponding glyph property. The
slider is provided for experimenting how the glyph property
appears and behaves. The actual data values are initially
mapped to the sliders so that the left end of the slider is
always a small data value, and the right end is always a
large data value. This mapping between the slider value and
the glyph property can be reversed with the checkbox.
In the Glyph Visualizer window, we can create small
multiples displays with a simple data-driven glyph
placement strategy by cross-tabulating the data variables.
When we select a row variable and a column variable, the
program will initially display a table with one column and
one row. The size of the table can then be adjusted with
buttons that increase and decrease the number of rows or
columns. The number of data items in a cell is indicated
with a gray bar on the left side of the cell.
The classification of variables is always on a fixed
scale. If the variable is defined on a categorical scale, the
program allows only as many classes as there are distinct
values of that variable in the data set. Variables that have
continuous values can be divided into arbitrarily many
classes, if it would not lead into completely empty rows or
columns in the table. As a consequence, individual empty
cells are allowed.

Figure 3 The Glyph Editor window.

ROOF

VALUE

WHEEL SIZE

WHEEL PROPORTION

Figure 2 The properties of the car glyph.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Figure 4 The Glyph Visualizer window.

The two windows are connected by the glyph.
Mappings that are created in the Glyph Editor window are
instantly reflected in the Glyph Visualizer window. This
allows for rapid experimentation with different bindings. In
addition, selecting a single glyph from the Glyph Visualizer
window will display the glyph figure and data slider values
in the Glyph Editor window. This feature makes it easier to
compare small glyphs to one another.

4.1. Changes for the Experiment
The program was modified to log events of interest
with time stamps into a text file. In addition, a menu and a
window for test tasks were added to the program. The
variable names and the names of glyph properties were
translated into Finnish to prevent language related problems
in the experiment.

5. Experiment
The working hypothesis for the experiment was that a
glyph that is related to the data we are visualizing is more
effective than a glyph that has no conceptual connection to
the data. Effective means here that it produces answers that
are more accurate, results in shorter task completion times,
and is favored over the unrelated glyph by the users.

5.1. Subjects
The 18 volunteer test subjects were screened with a
pre-test questionnaire and only experienced computer users
were chosen. The average age of participants was 27.3
years, ranging from 22 to 42 years. Accordingly, the 7
women and 11 men chosen reported that they have been
using computers for a mean of 12.5 years (range from 4 to
22 years) and that they have been using computers daily for
6.9 years, on the average (range from 2 to 20 years). All
subjects were students or employees at the University of
Tampere and were given no compensation for their
participation in the experiment.
The subjects were also asked about their technical
knowledge on cars since the test tasks require at least a
basic understanding. All test subjects announced that they
had a Finnish driver’s license, and 10 out of 18 subjects told
that they have a car at their disposal. Acquiring a Finnish
driver’s license includes classes about the basic
mechanisms of a car.

5.2. Tasks in the Experiment
The test tasks were queries for a cars data set [3],
ranging from simple lookups to queries that are more openended. There are 406 observations in the cars data set on the
following nine variables: CAR (the make and model of the
car), MPG (miles per gallon), CYL (number of cylinders),
DISPL (engine displacement, cu. inches), HP
(horsepower), WEIGHT (vehicle weight, in lbs.), ACCEL
(time to accelerate from O to 60 mph, sec.), YEAR (model

year), and ORIGIN (origin of car). Variables CAR and
ORIGIN are of categorical type, YEAR and CYL are
ordinal, and the rest are numerical. The actual test tasks in
the experiment can be found in the results section.

5.3. Procedure
Subjects were first familiarized with the data set and its
variables. Then, the user interface was described and
demonstrated.
Two of the ten test tasks were used as training tasks
and the test supervisor assisted in solving them. From the
remaining eight tasks four were solved using the Chernoff
face interface and the other four using the car glyph. The
tutorial section was always done using the first glyph to be
used in the actual test. Glyph assignment was random with
nine subjects taking the Chernoff face interface first and the
other nine subjects taking the car glyph interface first. The
test schedule was arranged so that the order of glyphs was
interleaved. The current test task was displayed on a
separate window and remained visible until the next task
was requested.
There was no time limit for solving a task. The subjects
were instructed to prioritize the correctness of the answer
over the use of time.

6. Results and discussion
The task result correctness was significantly better with
a data-related glyph, but there was no statistically
significant difference in the task completion times between
the two interfaces. In addition, the subjects found it easier
to attach the data variables to a glyph that was related to the
data.
The detailed description of the results is based on four
information sources: questionnaires before and after the
test, observations during the test, and the data collected
with the program. The individual tasks are described in
Sections 6.2 and 6.3.

6.1. Performance
As Figure 5 shows, the average time to perform a task
was approximately the same for both glyphs. On average,
the car glyph was 6% faster. The grand mean of task
execution time for the face glyph was 423 seconds and 406
seconds for the car glyph. However, the analysis shows that
the difference is not statistically significant.
The correctness of the solution is the number of points
the result was given on a scale from 0 to 100. Some of the
tasks could only have 0 or 100 points (correct or incorrect),
but the more demanding tasks had a more fine-grained
scale. Only the final answers were scored and the scoring
method was independent of the glyph.
In Figure 6, we have the average scores for each test
task. The grand mean for the face glyph was 64, and 77 for
the car glyph, so the car glyph results were 13% more
accurate on the average. The difference is also statistically

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

subjects who failed to classify the variable YEAR down to
the one-year-per-class level.
Task 4: Are there other common factors between the
cars that are the heaviest, the most powerful, and have
the best acceleration?

Figure 5 The average time to solve a task.
significant (F1, 17 = 5.586, p < 0.05). The scores for tasks 3
and 6, which can be answered from the cross-tabulated
view without binding any data variables to the glyph, have
identical mean scores. The most open-ended tasks, numbers
4 and 9, have the largest difference. This suggests that the
data-relatedness of a glyph becomes more important when
the task is more demanding.
A number of other performance related variables were
analyzed for significant differences, but none were found.
These included the number of query operations, the number
of small multiple views generated, the number of variables
bound to glyph properties, the number of view switches
between the visualization views, and the ratio of time spent
in each visualization view.

6.2. Binding Data Variables to Glyph Properties
The data variable bindings are presented task by task
with comparisons of the bindings between glyphs. A
summary of the assignments is presented at the end of the
section.
Task 3: Does the data set contain years without 6cylinder or 8-cylinder cars? If so, which years?
To solve this task it is sufficient to cross-tabulate data
variables YEAR and CYL, and to classify them so that
individual years and cylinder counts appear in their own
classes. This task was solved successfully by all but two

Figure 6 The average score from a task.

This was an open-ended exploration task where the
problem was to locate the cars with high values in WEIGHT
and HP variables, and a low value in the ACCEL variable,
and then look for other common factors.
Figure 7 presents the mappings in task 4 between the
glyph properties and the data variables as Bertin’s
reorderable matrix [1,2]. The matrix has been arranged so
that similar columns appear next to each other, and so that
the number of mappings decreases downwards.
In case of the car glyph, the most popular assignment
in this task was to bind WIDTH into one of the suspected
common factors. Likewise, the VALUE property was
popular. The only unused car glyph property was WHEEL
PROPORTION. The EYEBROW SLOPE, PUPIL SIZE,
and MOUTH VERTICAL OFFSET glyph properties were the
most popular properties of the Chernoff face glyph. Again,
one of the properties, MOUTH WIDTH, was unused. Overall,
by comparing the two matrices, it is evident that more
experimentation with the bindings took place with the
Chernoff face interface than with the car glyph interface (52
assignments versus 37). This suggests that it is more
difficult to find the set of satisfactory bindings with the
Chernoff face.
Task 5: Check whether higher engine displacement
always implies a reduced economy?
To solve this task, it is sufficient to search for a
counter-example and answer “yes” if an example is not
found and “no” if even one example is found. The correct
cross- tabulation to search from is {DISPL, MPG}.
Although it was possible to deduce the solution without
binding any data variables to the glyph properties, 13 out of
18 subjects chose to amplify their visualization with such
assignments.

Figure 7 The mappings in task 4 using car
glyph on the left and using Chernoff face on the
right.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Task 6: What is the origin and year of the slowest
accelerating cars in the data set?
To find a solution, three variables (ORIGIN, YEAR,
ACCEL) need to be displayed by using two of them in a
cross tabulation and by visualizing the third with a glyph
property. The most common solution was the cross
tabulation of the ORIGIN and YEAR variables, and then the
attachment of ACCEL variable into one of the glyph
properties. The only type of error encountered in this task
was the accidental mental inversion of the mapping. In
other words, the error was to give the ORIGIN and YEAR
of the fastest-accelerating cars in the data set as an answer.
Task 7: Which cylinder count has the best economy?
Again, this is a simple task that can be accomplished
with a cross tabulation of MPG and CYL variables. Only one
of the subjects chose another cross-tabulation and bound the
missing variable to the glyph properties. Overall, the only
type of error encountered was the too sparse classification
of variables that did not reveal the correct answer.
Task 8: Between the years 1970 and 1982, there were
two oil crises. Create a view that reveals them. During
which years did the oil crises happen?
Task 8 is not as obvious as it at first appears. It is
challenging to find a combination of variables that brings
up the consequences of the two oil crises. Some of the
variable combinations also tend to point out three turning
points in car evolution instead of just two.
The mappings used in task 8 can be seen in Figure 8. In
both groups, the subjects hypothesized that MPG is the best
indicator for the oil crises. The secondary meters included
WEIGHT, CYL, ACCEL and DISPL. The most popular
mappings in car glyph were WIDTH, HOOD, and VALUE.
Again, the only unused glyph property was WHEEL
PROPORTION. With the Chernoff face, the most popular
property was MOUTH VERTICAL OFFSET and all the
glyph properties were used by at least one of the subjects.
Cross-tabulations for the glyphs were quite similar, having
a {YEAR, MPG} tabulation, or YEAR and one of the

Figure 9 Exposing the two oil crisis: 73 and 79.
variables CYL, DISPL, HP or ORIGIN as another variable.
Figure 9 shows one successful solution to the task 8. The
cross-tabulation is {ORIGIN, YEAR}, and the variables
WEIGHT, MPG, ACCEL, and HP are attached to the
properties WIDTH, ANGLE, HOOD, VALUE, and WHEEL
SIZE (with redundancy). It is quite easy to spot the two
most dramatic changes in 1973 and 1979 from this view.
Task 9: How does the mileage of the cars that have the
same engine displacement but a different number of
cylinders relate to each other?
The most proficient approach to this task is to crosstabulate variables CYL and DISPL in such a way that the
DISPL classes overlap. The smallest readable classification
is a 4 by 4 table, but only one of the subjects chose to use
this size for deductions. All subjects divided the CYL
variable into four classes, which is the maximum, but the
number of classes for the DISPL variable varied between 6
and 16. When the number of classes is greater, the cars in
different classes are closer to each other in terms of engine
displacement. This will lead to observations that are more
accurate.
Task 10: How has the ratio of acceleration and
horsepower changed over time?
In task 10, you formulate a hypothesis and accept or
reject it by making queries. The most common hypothesis
was that newer cars need less horsepower to produce the
same performance. The most common triplet to visualize
was HP, YEAR and ACCEL. From these variables the most
common cross-tabulation pair was {HP, YEAR}, leaving
ACCEL to be bound in some of the glyph properties.
Summary of the assignments

Figure 8 The mappings in task 8 using car
glyph on the left and using Chernoff face on the
right.

A summary of the assignments of variables to glyph
properties over the entire set of test tasks seems to be in line
with the previous results. In the case of the Chernoff face
interface, the subjects favored EYEBROW SLOPE, PUPIL
SIZE, and MOUTH VERTICAL OFFSET properties, in that
order. So, the data was assigned to the eyes of the glyph or
to the degree of the smile. The usage of the car glyph was
also as anticipated: the most popular property was VALUE,
followed by WIDTH, HEIGHT, and SLANT with almost

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

similar usage. The overall number of variable assignments
to glyph properties was one third higher with the Chernoff
face than with the car glyph. This shows that an unrelated
glyph requires more experimenting with assignments to
find a satisfactory set for the task and the data variables.

P-04: “It is more difficult to decide variable bindings with
the Chernoff face than with the car glyph.”
Disagree

Agree

6.3. Subjective Satisfaction
After the test session subjects were requested to
comment on 17 propositions by giving a number on Likert
scale from 1 to 6, 1 being “I disagree completely” and 6
being “I agree completely”. The distributions of the given
answers are represented as box-and-whiskers plots, where
the box indicates first and third quartiles and the median,
and the whiskers extend at most to 1.5 times the interquartile range (the length of the “box”). In the following
discussion, some of the propositions have been turned
around for easier assessment. The following propositions
measured what the subjects thought about the Glyph
Explorer application in general.

Disagree

Disagree

P-02:“I believe I could find interesting facts from a data set
with this technique.”

Disagree

Agree

Agree

Agree

P-08: “The equal-length classification is too restricting.”
Disagree

Agree

P-11:“The cross-tabulation function is easy to use.”
Disagree

The subjects seem quite confident that they could
determine out facts about a data set with the technique,
since the median for both judgments is “I agree” with only
small variation.
The attitude towards the glyph visualizations and the
two glyphs was measured with several statements:

Agree

The general difficulty of the task of binding data
variables to glyph properties (P-10) was characterized by a
median of “I agree somewhat”, with a range from “I
disagree” to “I agree completely”. The response is slightly
on the agreement side, although the variation is large.
The difference between glyphs on the ease of binding
variables to glyph properties seems quite clear. The
outcome of the direct questions (P-14 and P-16) is apparent
and suggests that subjects found the data-related glyph
easier to bind variables to than the unrelated glyph.
The attitude towards the controlling of small multiple
displays was tested with the following two propositions:

P-09:“The application provides a good overview of the
data set.”
Disagree

Agree

P-16: “It is easy to bind variables to the Chernoff face.”

Agree

The reaction for the ease of use is spread out to the
whole scale, the median value being between “I agree” and
“I agree somewhat”. In addition, the outcome of proposition
7 clearly indicates that the user interface needs refinement,
but the result is within expectations for a prototype level
implementation.
The reaction to the general usefulness of the
application was measured with the following propositions:

Disagree

Agree

P-10: “It is difficult to decide how to bind data variables to
the glyph properties.”

Agree

P-07: “The application always functioned as expected.”
Disagree

Disagree

P-14: “It is easy to bind variables to the Car glyph.”

P-01: “The application is easy to use.”
Disagree

P-06: “The Chernoff face is more difficult to use than the
car glyph.”

Agree

The outcome of the classification questions reveals that
some of the subjects found the classification control too
unsophisticated for their needs, although the current
implementation is easy to use. The remaining propositions
that were not mentioned above were control propositions.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Conclusions
Our experiment with the Glyph Explorer prototype
shows that a data-related glyph is slightly better – about
13% – in terms of accuracy of results, although the task
execution time remains about the same. In addition, it is
clearly easier for the users to bind data variables to a glyph
that is related to the data.
The performance difference between unrelated and
related glyphs may be larger in an actual use situation. Our
experiment was a first-use situation where the learning of a
new interface will cause additional variation, although the
participants were experienced computer users. It was
observed that the classification control method for small
multiples caused confusion for several participants even if
they found it easy to use. The classification control should
be improved so that the sensitivity is made visible, meaning
that the user should always be aware of whether the
classification could be extended or not.
The results suggest that glyph visualization tool should
consider providing a library of different data-related glyphs
to match diverse data sets. The match between the data and
the glyph does not need to be perfect – a selection of
common objects like people, vehicles, buildings, etc. would
probably cover many of the needs.
As a visualization technique, the proposed interaction
method for glyphs looks promising: it is relatively userfriendly even in its current prototype form and it could
evolve into a visualization tool ‘for the rest of us’. The
cartoon-like appearance, which has always been the
attractive feature of Chernoff faces, could make the
technique easier to adopt for non-experts than many of the
current visualization techniques of multidimensional data,
such as parallel coordinates, pixel-based techniques or even
Bertin’s reorderable matrix.

Acknowledgements
The author wishes to thank Kari-Jouko Räihä, Natalie
Jhaveri, Mika Käki, Tomi Heimonen and Veikko Surakka
for useful and inspiring comments and discussions. I am
also grateful for the comments from the anonymous
reviewers of the paper. This work was supported by the
Academy of Finland (project #178099) and by the TISE
graduate school.

References
[1] Bertin, J. Graphics and Graphic Information Processing,
Walter de Gruyter & Co. (La graphique et le traitemente
graphique de l'information, 1967, translated in English by
William J. Berg and Paul Scott), 1981.
[2] Bertin, J. Semiology of Graphics – Diagrams Networks
Maps, The University of Wisconsin Press. (Sémiologue
graphique, 1967, translated in English by William J. Berg),
1983.

[3] Cars data set from the 1983 ASA Data Exposition
http://stat.cmu.edu/datasets/
(Checked 14.3.2005)
[4] Champeon, S. Java implementation of Chernoff Face.
http://www.hesketh.com/schampeo/Faces/
(Checked 14.3.2005)
[5] Chernoff, H. The Use of Faces to Represent Points in kDimensional space Graphically, Journal of American
Statistical Association, 68, 342, 1973, pp. 361-368.
[6] Chernoff, H., & Rizvi, M. H. (1975). Effect on classification
error or random permutations of features in representing
multivariate data by faces. Journal of American Statistical
Association, 70, 548-554.
[7] Chuah, C.M., and Eick, S.G. Information Rich Glyphs for
Software Management Data, IEEE Computer Graphics and
Applications 18, 2, pp. 24-29, 1998.
[8] Colet, E. and Aaronson, D. Visualization of multivariate data:
Human-factors considerations. Behavior Research Methods,
Instruments & Computers, 27, 2, 257–263, 1995.
[9] IRIS Explorer. http://www.nag.com/
(Checked 14.3.2005)
[10] Johnson, D. A Familiar (Inter)face, The veteran neophyte
column, d e v e l o p, 6, Apple Computer, 1991.
http://www.mactech.com/articles/develop/
issue_06/
(Checked 14.3.2005)
[11] Kraus, M. and Ertl, T. Interactive Data Exploration with
Customized Glyphs (poster), in proceedings of The 9th
International Conference in Central Europe on Computer
Graphics, Visualization and Computer Vision WSCG’01,
February 2001.
[12] Loizides, A. and Slater, M. The Emphatic Visualisation
Algorithm (EVA) – An Automatic Mapping from Abstract
Data to Naturalistic Visual Structure. Proceedings of the Sixth
International Conference on Information Visualisation
(IV’02), IEEE Computer Society, July 2002.
[13] Morris, C.J., Ebert D.S. and Rheingans, P. An Experimental
Analysis of the Effectiveness of Features in Chernoff Faces,
Applied Imagery Pattern Recognition '99: 3D Visualization
for Data Exploration and Decision Making, October 1999.
[14] Ribarsky, W., Ayers, E., Eble, J. and Mukherjea, S.
Glyphmaker: Creating Customized Visualizations of
Complex Data, IEEE Computer, pp. 57-64, July, 1994
[15] Sergent, J., Ohta, S., MacDonald, B., and Zuck, E.
Segregated processing of facial identity and emotion in the
human brain: A PET study. Visual Cognition, 1, 349-369,
1994.
[16] Spence, R. Information Visualization, Addison-Wesley,
2001.
[17] Tufte, E. R. Envisioning Information, Graphic Press, 1990.
[18] Tufte, E. R. Visual Explanations, Graphic Press, 1997.
[19] van Teylingen, R., Ribarsky, W., and van der Mast, C.
Virtual Data Visualizer, IEEE Transactions on Visualization
and Computer Graphics 3, 1, 1997.
[20] Ward, M.O. A Taxonomy of Glyph Placement Strategies for
Multidimensional
Data
Visualization,
Information
Visualization Journal, 1, 3/4, pp. 194–210, 2002.
[21] Ware, C. Information Visualization: Perception for Design,
Morgan Kaufmann Publishers, 2000.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

