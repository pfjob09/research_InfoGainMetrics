Quadric Modeling in a Grassmann-Cayley Algebra Setting
Frédéric Jourdan
École des Mines de Nantes
La Chantrerie, 4 rue Alfred Kastler B.P. 20722 F-44307 NANTES Cedex 3
fjourdan@emn.fr

Abstract
We expose a few geometric techniques for determining
intersections between lines and conic curves in a plane,
and between planes and quadric surfaces in 3D projective
space. We hope these techniques to be useful as elements for
handling conics and quadrics in a Grassmann-Cayley algebra framework. In order to comply with this objective, we
mostly derive our algorithms from ruler-only constructions,
which possess an immediate translation in GrassmannCayley’s formalism. At the basis of these constructions we
use reference points which determine the conic or quadric.
Besides intersections, we also address the determination of
poles and polars, and we mention a possible application to
the parameterization of portions of quadrics.

1. Introduction
Grassmann-Cayley algebra (GCA) provides an efﬁcient
formulation of projectice geometry, allowing work at a low
computational cost with points, lines, and planes of the
three-dimensional projective space [9].
This paper deals with the representation of conic curves
and quadric surfaces in a Grassmann-Cayley algebra framework. Mathematical deﬁnitions for these objects in the language of GCA are well known [5]. However, elementary
geometrical operations involving conics and quadrics are
not naturally expressed in GCA’s formalism. We aim at exposing some techniques that perform such geometrical operations, and that integrate well in a GCA setting.
For representing conics and quadrics, we selected
Rotgé’s projective determination [14], where a quadric is
uniquely determined in a descriptive way by a ﬁxed number
of points. From these reference points, ruler-only constructions can be conducted. The easiness of transcription from
any ruler-only construction to a Grassmann-Cayley algebra
expression accounts for the satisfaction of our adequation
requirement with GCA. Indeed this allows us to use mainly
GCA operators in preference to other algebraic tools.

1.1. Related work
Tthe projective representation of quadrics as a tool
for computer geometric modeling has been introduced in
Rotgé’s thesis [14]. Some of the ruler-only constructions
used in this paper also appear in the same source. Application of GCA to the projective representation has already
been used to obtain tessellations of quadric surfaces [6].
Applications of Grassmann-Cayley algebra – or the
closely related geometric algebra – to projective geometry
have been investigated more than once, putting the stress on
coordinate-free symbolic calculus [4, 10, 15] or on effective
calculations [9]. Mann and Dorst [10] advocate for using
geometric algebra in computer graphics applications, mentioning the possibility of ﬁnding new geometric algorithms
in this framework. Implementations of geometric algebra
are available [3, 12]. Coordinate-free oriented applications
to conics or quadrics can also be found [5, 8, 13].

1.2. Overview
After a concise introduction to Grassmann-Cayley algebra and some hints on implementing it, we describe the projective representation of conics and quadrics. Comparisons
with other representations are made at this stage.
We then proceed to the exposition of several constructions involving conics and quadrics, and their transcription
in GCA’s formalism. Among these constructions are computations of intersections with lines and planes, and determinations of poles and polars. We ﬁnally explain how these
elementary operations can be applied to the parameterization of a portion of a quadric surface limited by a plane.
In the following we assume familiarity with projective
geometry, including the theory of conics and quadrics, and
polarity. It is a classical topic covered in many reference
books, e.g. [2], or more recently [1].

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

2. Grassmann-Cayley algebra

2.2. GCA and projective geometry

This section contains a very condensed introduction.
Macé [9] gives a more detailed introduction from a practical point of view, whereas comprehensive treatment of
the subject is to be found in Rota and Stein’s original paper [13]. Grassmann-Cayley algebra is also closely related
to geometric algebra (GA) [3], a mathematical tool which
has been used in the modeling of a vast diversity of physical phenomena. Indeed both GCA and GA frameworks are
equivalent for our purposes, and anyone familiar with GA
should have no other difﬁculty with GCA than overcoming
obvious differences of notation.

The key feature allowing applications of GCA to geometry is the ability of blades to represent subspaces of E. More
precisely, we can associate to any blade a1 ∨ · · · ∨ ap the
subspace spanned by the ai ’s. Thus there is a correspondance between p-blades and p-dimensional subspaces of E,
two blades associated with the same subspace differing only
by a nonzero scalar factor [7].
In the projective space P(E), p-dimensional subspaces
of E become (p − 1)-dimensional projective subspaces, so
in the ﬁeld of projective geometry vectors represent points,
2-blades represent lines, and 3-blades represent planes. By
abuse of language, we will refer to blades as projective subspaces, so that we may speak of the 2-blade a ∨ b as the line
through the points a and b.
GCA’s main operators each carry their own geometrical interpretation. The join operator can be understood as
a union operator, whereas the meet is an intersection operator. Thus any ruler-only construction has an immediate
transcription in GCA’s formalism. Incidence relations are
expressed by algebraic constraints. For instance a∨b∨c = 0
is equivalent to the colinearity of the points a, b, and c.
Grassmann-Cayley algebra is not limited to projective
geometry. By means of the hyperplane at inﬁnity, represented with a (n − 1)-blade, it is possible to deal with afﬁne
properties such as parallelism. Moreover, a geometrical interpretation of the duality operator as an orthogonality operator allows the expression of orthogonality constraints in
GCA’s formalism [15]. By using GCA, we can then go beyond the bounds of our projective setting, but keeping in
mind a clear distinction between the different geometries.

2.1. Basic deﬁnitions
In this section E is a vector space of ﬁnite dimension n
on the ﬁeld R of real numbers. We note E∗ its dual space,
i.e. the space of linear forms on E.
The exterior algebra Λ(E), a standard tool of multilinear
algebra [7], is the algebra of antisymmetric tensors with exterior product ∨, or join. As a vector space, its structure is
Λ(E) = R ⊕ E ⊕ Λ2 (E) ⊕ · · · ⊕ Λn (E)
where Λp (E) is a np -dimensional vector space spanned by
elements of the form
a1 ∨ · · · ∨ ap ,

ai ∈ E

which are called p-blades. It is a property of the join that
a1 ∨ · · · ∨ ap = 0 if and only if the vectors a1 , . . . , ap
are linearly dependant, so nonzero p-blades are related to
families of linearly independant vectors.
From now on we choose a unit element e in the onedimensional space Λn (E). We can deﬁne linear mappings
Λp (E)

A → A∗ ∈ Λn−p (E)∗

p

from Λ (E) to the dual space of Λ
∀B ∈ Λn−p (E),

n−p

(E), characterized by

A ∨ B = A∗ , B e

where , denotes the duality bracket. Since Λp (E)∗ is
naturally isomorphic to Λp (E∗ ), we get a duality operator
A → A∗ from Λ(E) to the exterior algebra Λ(E∗ ) of the
dual space of E.
The Grassmann-Cayley algebra GC(E) of E is the exterior algebra of E, endowed with an additional product ∧, or
meet, which is deﬁned by the relation
(A ∧ B)∗ = A∗ ∨ B∗ .
Another possibility for deﬁning the meet operator is to
follow the approach of Rota et al. [13], who give a combinatoric formulation of the meet not requiring the use of
duality.

2.3. Our implementation of GCA
Grassmann-Cayley expressions are a compact way to
make geometric statements. Another feature of GCA is
the possibility to perform algebraic computations without
losing geometric intuition. The coordinate-free nature of
GCA’s formalism makes it suitable for symbolic computations [8, 15], but effective computations in homogeneous
coordinates are easy to perform as well.
We have developed a small software kernel for geometric
computation in the three-dimensional real projective space
P3 . Following the tensor approach we adopted in section 2.1, we store geometrical objects as matrices. We represent points as 4D vectors, and lines, or 2-blades, as square
matrices of order 4. Planes are represented through their
dual, which is another vector. This way we manipulate only
scalars, vectors and matrices. The products join and meet
are computed through simple matrix multiplications, which
are fast and easy to perform. Explicit formulae with examples can be found in Macé’s introductory paper [9].

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Some calculations are made more effective by an appropriate use of the alternative laws [13], which are symbolic
expansions of products into bracket expressions. We deﬁne
the bracket or determinant of n vectors a1 , . . . , an by
|a1 · · · an | = (a1 ∨ · · · ∨ an )∗ .

(1)

In what follows we make use of the alternative law
(a ∨ b) ∧ (c ∨ d) = |acd|b − |bcd|a

(2)

3.1. Conic representation by a reference triangle
In this section we work in a ﬁxed plane. Given any triangle ABS and an extra point P not incident to the line AB, it
is known [2] that there exists a unique conic section C such
that A, B, and P are points of C, and that the lines AS and
BS are tangent to C (see Figure 1). The triangle ABS is
called the reference triangle of C.

3

in GC(R ) for the computation of the intersection of two
lines in a projective plane.
Although our general setting is three-dimensional, so our
kernel implements GC(R4 ), we want the ability to work in
any arbitrary plane Π. There is however no natural inclusion
GC(Π) ⊂ GC(R4 ), in spite of Π being a subset of R4 .
We overcome this difﬁculty by choosing when needed an
arbitrary bracket on the plane.
The same technique of choosing a bracket applied to an
arbitrary line makes it possible to easily compute cross ratios and harmonic conjugates, according to the following
formulae: the cross ratio of 4 colinear points A, B, C, D is
cr(A, B, C, D) =

|AC||BD|
|AD||BC|

B

P
A

Figure 1. Reference triangle of a conic.
It is clear that C is degenerate if and only if the point P
is incident to any of the lines AS or BS. This condition can
be expressed by the Grassmann-Cayley algebra identity

(3)

and the harmonic conjugate of the point C with respect to
A and B is
hc(C; A, B) = |BC| A + |AC| B.

S

(4)

3. The projective representation of quadrics
There are two widely used approaches for representing
conic curves and quadric sufaces [11]. In the algebraic approach, they are represented by an algebraic equation of degree 2, while in the geometric approach they are described
by their type, plus a type-dependant collection of geometrical data such as directions, center, or radius. Due to the
euclidean nature of some of these data, we will call the latter approach euclidean. In this paper we use Rotgé’s approach [14], where a quadric is represented by a reference
tetrahedron and a conic by a reference triangle. By comparison to the euclidean approach, we will designate this
representation as the projective representation.
Like the euclidean representation, the projective representation conveys some geometric intuition about the shape
of the represented quadric. It can for this reason be used
in an interactive modeling system [14], a feature that could
motivate its use in preference to the algebraic approach. Although not as immediately intuitive as the euclidean representation, the type-independant projective approach suits
better to our projective framework. Besides, the ruleronly constructions that can be performed upon the reference
points are directly usable in GCA’s formalism. In the following we make a large use of this last feature.

|ASP||BSP| = 0.

(5)

In that case, the degenerate conic section consists in both
lines AS et BS.

3.2. Quadric representation by a tetrahedron
In the projective representation, a quadric is determined
by two non-coplanar reference triangles ABS1 and ABS2 ,
which together with their respective passing points P1 and
P2 deﬁne, as seen in the preceding section, two conics C1
and C2 . A result attributed to Monge [14] states that there is
a unique quadric Q such that C1 and C2 are plane sections
of Q, and that S1 and S2 are conjugate, i.e. orthogonal, with
respect to Q. The points A, B, S1 , and S2 are the vertices of
the reference tetrahedron of Q. We call C1 and C2 the base
conics of Q (see Figure 2).
Since S1 and S2 are conjugate, they are the poles of the
base planes ABS1 and ABS2 . Using this property it is possible to prove that the quadric Q is degenerate if and only if
one of its base conic is degenerate. This result allows a convenient handling of degenerate quadrics, i.e. cylinders and
cones, within the projective representation.

4. Geometric algorithms
In this section we expose several techniques for performing elementary geometrical operations involving conics or
quadrics modelized with the projective representation. Every computation is written in GCA’s formalism. For the

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

S2

B

Thus we get the number of intersection points and their possible parameters.

P2

4.1.2 The case where a ﬁrst intersection point is known
S1

P1

δ

Y

A

Z

B
X

Figure 2. A reference tetrahedron ABS1 S2 and
the two base conics of a quadric.

S

C
P

D

A

Figure 3. Construction of D.
sake of readability, we will sometimes omit the join symbol
∨, so that we will write AB instead of A ∨ B. We have
grouped in two distinct sections the operations on conics
and the operations on quadrics, which are mainly generalizations to the 3D case of the conic operations.

1. Note X the intersection point of the lines δ and AB.

4.1. Some operations involving conics
We work in a projective plane Π, with a given conic C
represented by the reference triangle ABS and the extra
point P.
4.1.1 Intersection with a line
Given an arbitrary line δ in Π, we want to determine the
resulting intersection between the line δ and the conic C.
For algebraic reasons, the intersection points cannot be expressed from the data δ, A, B, S, P as a combination of join
and meet operators. In other words there is no ruler-only
construction to compute the intersection we look for. We
then choose to use a parameterization of the conic C.
Such a parameterization is already known [6]. It is obtained from the classical ruler-only construction of a point
M on C
M = B(AP ∧ MS) ∧ A(BP ∧ MS)

2. Let Y be the harmonic conjugate of X with respect to
A and B, which we note Y = hc(X; A, B).
3. Note Z the intersection point of the lines δ and SY.
4. Then D = hc(C; X, Z).
This construction is justiﬁed by the fact that SY is the polar
line of the point X.
In Grassmann-Cayley algebra’s formalism, the preceding construction can be expressed with the following equalities:
X = δ ∧ AB,

Y = |BX| A + |AX| B

Z = CX ∧ YS = |CYS| X − |XYS| C
D = 2|CYS| X − |XYS| C.

(9)
(10)
(11)

(6)

from a point M incident to the line AB. With this construction a parameterization of the line AB can be turned into a
parameterization of C, such as
M(λ) = λ2 |ASP| B + λ|BAP| S + |SBP| A,

If a point C incident to the conic C and the line δ is given,
it is possible to determine the second intersection point D
without solving any algebraic equation. Indeed, the point D
can be constructed as follows (see Figure 3):

(7)

4.1.3 Polarity
In this paragraph we will compute the polar line Q⊥ of an
arbitrary point Q. If Q is on the conic C, then the polar
line of Q is the tangent line to C at the point Q. It can
be determined by the following construction expressed in
GCA’s formalism (Figure 4).

where −∞ ≤ λ ≤ +∞.
Now the point M(λ) is incident to the line δ if and only
if M(λ) ∨ δ = 0. Since the duality mapping on GC(Π) is
1-1, the problem is equivalent to solving the second degree
polynomial equation

If Q is not on the conic C, we can use the classical construction

λ2 |ASP||Bδ| + λ|BAP||Sδ| + |SBP||Aδ| = 0.

Q⊥ = (AB ∧ A B ) ∨ (AB ∧ A B)

Q⊥ =

(8)

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

(AQ ∧ BS) ∨ (BQ ∧ AS) ∧ AB ∨Q.

(12)

(13)

S

achieved by following the construction illustrated on Figure 6, whose descpription follows.
First, let X2 = S2 P2 ∧ AB. Then note δ the polar line in
Π1 of X2 with respect to C1 . It is a line of Π1 containing the
point S1 . Let S1 = δ ∧ Π, intersection point of the line δ
and the plane Π. The polar line of S1 with respect to C1 is a
line of Π1 containing X2 . Let A and B be the intersection
points between this polar line and C1 . Then A B S1 S2 , with
the extra points P1 and P2 , is a reference tetrahedron for the
quadric Q.

B

P
Q

A

P2

Figure 4. The tangent line to C at Q.
where A and B are computed using the method exposed
in the preceding paragraph as intersection points between C
and respectively the lines QA and QB (see Figure 5).

δ

B

B

P2
S1

Q
X2
A
A

A
S

S1

P
B
Figure 6. A new reference tetrahedron is constructed by relocating S1 to the position of S1 .

B
A
Figure 5. The polar line of the point Q.

4.2. Some operations involving quadrics
The projective representation of quadrics is a generalization of the projective representation of conics. It is then natural to attempt to generalize to quadrics the constructions
involving conics.
In this section we are given a quadric Q of P3 , determined by its reference tetrahedron ABS1 S2 and the points
P1 and P2 . We note C1 and C2 its base conics, Π1 et Π2 its
base planes (planes of the base conics).

If we perform this relocation one more time, exchanging
the roles of the base planes, we get another reference tetrahedron A B S1 S2 with both summits S1 and S2 lying on
the plane Π.
4.2.2 Polarity
The repositioning technique of the reference tetrahedron
can be used to determine the pole with respect to Q of an arbitrary plane Π. We can indeed assume by means of a repositioning that the summits S1 and S2 belong to the plane Π.
So the line S1 S2 is the polar line of the line AB. The pole of
Π is then the harmonic conjugate of the point Π ∧ AB with
respect to the points A and B.

4.2.1 Repositioning of the tetrahedron
This elementary operation is useful for simplifying some
situations, as will be illustrated in the following sections.
Given an arbitrary plane Π, the operations consists in ﬁnding another reference tetrahedron for Q whose summit S1
is incident to Π. This relocation of the summit S1 can be

4.2.3 Intersection with a plane
We want to determine the intersection between the quadric
Q and an arbitrary plane Π. That means determining if this
intersection actually exists, and computing the intersections
points.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Without loss of generality, we can assume that S1 belongs to the plane Π. Then the intersection Π ∩ Q is empty
if and only if the intersection between C2 and Π ∧ Π2 is
empty. In the nonempty case, we compute this conic-line
intersection, which gives us two points AΠ and BΠ in Π∩Q.
Moreover, since S1 belongs to Π, the triangle AΠ BΠ S1 is a
reference triangle for the conic Π ∩ Q. To be complete,
the determination of Π ∩ Q needs one extra point, that we
compute as intersection in Π1 between C1 and Π ∧ Π1 .
4.2.4 Parameterizing portions of quadrics
Combining the two preceding techniques, it is possible to
construct a new reference tetrahedron for Q having an arbitrary plane Π as base plane (at the condition that Π actually
meets Q). Indeed, if Π is a ﬁxed plane, we compute reference points AΠ , BΠ , S1 , P1 for the conic Π ∩ Q. Naming S2
the pole of the plane Π with respect to Q, we get a reference
tetrahedron AΠ BΠ S1 S2 .
This new reference tetrahedron makes it easy to adapt
the quadric parameterization and tessellation method used
by Jourdan et al. [6] to the case of portions of quadric suface
belonging to one half-space limited by Π. Figure 7 shows
an example of what we wean.

Figure 7. Portion of a quadric. The reference
tetrahedron and base conics can be seen.

5. Conclusion
We have attempted to illustrate by examples how conics and quadrics modelized through Rotgé’s projective representation could be handled at an elementary geometrical
level. The techniques we have presented are speciﬁc to this

representation: they are based only on the reference points,
not on the algebraic equation of the quadric or conic.
Due to their projective nature the elementary operations
we perform are easily written in Grassmann-Cayley algebra’s formalism. This complies with our requirement that
our geometric techniques should be well adapted to a GCA
framework. In our opinion this kind of techniques could be
useful as elements for a CAD system based on GrassmannCayley algebra. We are aware that such an objective is not
within our close reach: we for instance didn’t try to address
the difﬁcult problem of quadric-quadric intersections. We
hope nethertheless to have contributed to the exploration of
this interesting direction.

References
[1] M. Audin. Geometry. Springer Verlag, 2002.
[2] M. Berger. Géométrie. Nathan, 1992.
[3] L. Dorst, S. Mann, and T. Bouma.
Gable:
A
matlab
tutorial
for
geometric
algebra.
http://carol.wins.uva.nl/ leo/GABLE/tutorial.ps.gz.
[4] O. Faugeras and B. Mourrain. On the geometry and algebra
of the point and line correspondences between n images. In
Proceedings of the Fifth International Conference on Computer Vision, page 951. IEEE Computer Society, 1995.
[5] D. Hestenes and R. Ziegler. Projective geometry with clifford algebra. Acta Applicandae Mathematicae, 23:25–63,
1991.
[6] F. Jourdan, G. Hégron, and P. Macé. Automatic tessellation of quadric surfaces using grassmann-cayley algebra. In
Proceedings of ICCVG 2004, Warsaw, september 2004.
[7] A. I. Kostrikin and Y. I. Manin. linear algebra and geometry.
Gordon and Breach Science Publishers, 1989.
[8] H. Li and Y. Wu. Automated short proof generation for
projective geometric theorems with cayley and bracket algebras: II. conic geometry. J. Symb. Comput., 36(5):763–809,
2003.
[9] P. Macé. Tensorial calculus of line and plane in homogeneous coordinates. Computer Networks and ISDN Systems,
29, 1997.
[10] S. Mann and L. Dorst. Geometric algebra: A computational
framework for geometrical applications (part 2). IEEE Comput. Graph. Appl., 22(4):58–67, 2002.
[11] J. R. Miller. Analysis of quadric-surface based solid models. IEEE Computer Graphics and Applications, 8(1):28–42,
Jan. 1988.
[12] C. Perwass. The CLU project. http://www.perwass.de/
cbup/clu.html.
[13] G.-C. Rota and J. Stein. Applications of cayley algebras. In
Colloquio Internazionale sulle Teorie Combinatorie, Roma,
1976.
[14] J.-F. Rotgé. L’Arithmétique des Formes : une introduction à
la logique de l’espace. PhD thesis, Université de Montréal,
Faculté de l’Aménagement, 1997.
[15] A. Sosnov, P. Macé, and G. Hégron. Semi-metric formal 3D
reconstruction from perspective sketches. Lecture Notes in
Computer Science, 2330, 2002.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

