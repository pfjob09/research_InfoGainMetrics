A Physically-based Algorithm for Motion Mapping
Zhihua Chen1, Lizhuang Ma1, Yan Gao1, Xiaomao Wu1, Zhong Li1
1
Department of Computer Science and Engineering, Shanghai Jiao Tong Universityˈ200030,
Shanghai, China
{zhihua@sjtu.edu.cn, ma-lz@cs.sjtu.edu.cn, gaoyan@sjtu.edu.cn,wuxiaomao@sjtu.edu.cn }

Abstract
A new approach is proposed to motion editing
based on motion capture data, i.e., motion mapping.
The key to our framework is the spacetime
optimization method based on physical model. For
reducing the complexity of optimization problem, we
map the captured motion to a new character by using
a simplified model. This model is a transformation tool
and determined automatically by using the motion
analysis technique. The motion mapping process
includes three sub problems of motion retargeting. In
order to further speed up the procedure for finding the
numerical solutions, we describe an efficient method to
find an appropriate initial solution for the optimization
process. Results show that physically realistic
animation can be created with our mapping algorithm.

1. Introduction
We present a new motion editing algorithm for
mapping the motion capture data to a different
character. Our algorithm is based on the spacetime
optimization method. The method considers the entire
motion simultaneously, and therefore, it is easy to
adjust and modify overall physical properties of the
resulting motions. But it is not practical for creating
and editing physically realistic motions of the complex
human model. The high nonlinearity of dynamics
constraints and high degrees of freedom (DOFs) make
it difficult for the optimizer to converge to the optimal
solution.
To address the above problem, we take a
simplified model as a transformation tool, and use it to
implement motion mapping. In contrast to existing
simplification techniques that require manual
intervention or specific motion database [1,2], a
motion analysis technique is designed to automatically

determine a simplified model that is suitable for the
captured motion.
When this model is chosen, the subsequent motion
mapping functions as motion retargeting, which adapts
the original data to different characters. Unlike
ordinary motion retargeting, however, it is a
combination of three optimization steps. Furthermore,
it carries out motion mapping between different
character models with different DOFs. Most
importantly, for creating physically realistic motions,
we introduce physical constraints into the traditional
method of spacetime optimization [3-6] that could only
deal with geometrical constraints. In order to improve
the convergence performance, we describe a new
method to find a proper initial estimation for our
optimizer. Experiments show that our method can
generate target motions that not only meet the userspecified requirements, but also preserve essential
dynamic properties of the original motion.
The rest of the paper is organized as follows.
Section 2 describes a review of the related work. We
give an overview of our framework in Section 3 and
propose our method of automatic model simplification
in Section 4. In Section 5, we discuss how to map and
edit motion between characters that have different
DOFs. Then we present a way to search a good starting
point for our algorithm in Section 6. Finally, results
and conclusions are given in Section 7 and Section 8,
respectively.

2. Related work
In recent years, a variety of physically based
techniques for motion editing have been presented.
Although there is a great deal of research progress, it
has a long way to go for producing natural-looking
character motion, mainly because the high complexity
of physical character model prevents the motion
editing algorithm from converging within an
acceptable amount of time, or even makes it diverge.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

One way to address this problem is to reduce the
numbers of DOFs of the original character. Popoviü
and Witkin propose a physically valid algorithm for
editing motion capture data [2]. Their algorithm first
requires the animator to interactively specify character
simplification model, fits the original data to the model,
and then edits it on the model according to the given
requirements. Finally the resulting motion is mapped
back onto the full model. The main shortcoming of this
method is that it requires much manual interaction.
Pollard introduces a fast and simple technique to scale
motion data in a physically plausible way [7]. He
constructs the task model for human run sequence by
using a simple combination of a point mass and two
springs. With the basic inverse kinematics technique,
the motion is retargeted in real time. In spite of its
advantage, his method still needs improvements for the
better quality of the resulting motion. Sofonova and his
colleagues show that many dynamics human motion
can be adequately represented with several DOFs
because of a high degree of coordination between
movements of human joints [1]. Then they utilize the
technique of principal component analysis (PCA) to
process the motion capture database and construct a
low-dimensional motion subspace. At last, they solve a
simplified optimization problem for synthesizing a
physically realistic motion.
Another way to deal with the problem of high
complexity is to make the representation of motion
constraints simpler. Instead of reducing the DOFs of
character model, Liu and Popoviü simplify the
dynamics constraints [8]. They exert a small set of
linear and angular momentum constraints directly on
the full character model so as to achieve physical
realism of resultant motions.
Similar to the above algorithms, our method also
tries to reduce the complexity of the motion editing
problem. We employ simplified model, however, our
simplification method relies on neither the animator’s
interaction nor the motion database. We reduce the
DOFs automatically by using a motion analysis
technique.
Fang and Pollard worked at reducing the time
complexity for calculating physical constraints [9].
They propose an efficient method for computing first
derivatives of physics constraints in linear time while
traditional approaches require quadratic time.
Other researchers maintain the physical features of
the original motion with filtering methods. Tak et al
believe that balancing is one important ingredient of
physical properties and they devote themselves to
motion balancing technique [10]. They correct an
unbalanced motion to a balanced one by a motion filter
which can control the ZMP (Zero Moment Point)

trajectory. But his method can only deal with balance
problem, which is one of the dynamics constraints. Tak
and Ko develop a motion editing algorithm based on
Kalman filter which can process not only balance
constraints, but also other types of constraints, such as
torque limit and momentum constraints [11].

3. Overview
Our framework is a motion capture-driven system.
The motion capture data here represent motion of
human skeleton model (Fig.1). The system includes
two main parts: automatic model simplification and
motion mapping (Fig2). The first part aims at
automatically choosing a simplified model suitable for
the captured motion. It breaks into three steps:
constraints detection, motion identification and
automatic model determination. By using this model as
an intermediate agent, we carry out motion mapping
based on the spacetime optimization in the second part.
This part also consists of three steps: forward mapping,
motion scaling and inverse mapping.

4. Automatic model simplification
Pullen and Bregler show that the movements of
human joints are highly correlated [12]. That is to say,
there are many ‘redundant’ DOFs in human joints.
Once these DOFs are removed, the non-linearity and
complexity of the motion retargeting is greatly reduced.
We develop a motion analysis technique to
automatically find the simplified model suitable for the
captured motion. The core of the technique contains
constraints detection principles and motion
identification principles .
CDP focuses on detecting foot-ground contact
constraints (Cc). It can be formulated as:

­o o
°d  n d T 1
®o o
°¯ v  n d T 2

(1)

o

where d is the vector of distance from the character
o

foot to the ground. n is the unit vector whose
o

direction is upwards. v is the vector of velocity of the
character foot. Applying CDP to the captured motion,
we obtain the foot-plant constraint frame sets Sl and Sr.
Sl is the set of frames when the left foot of the
character touches the ground, while Sr is the set of
frames when the right foot touches the ground.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

automatic model simplification

motion
identification

original
constraints







constraint
detection









simplified
motion 



Figure1. Human skeleton model

^t 1 d t d n`
i

i

scaled
motion





inverse
mapping

resulting
motion







Figure2. The system framework

MIP is designed to classify some typical motions
including walk, run, jump and skate, in terms of foot
plant constraints. Let qc(t) be a vector-valued function
which represents the configuration of the character at
time t. Then qc(t) denotes the captured motion. Let T
be the set of all motion frames and can be represented
as:

T


motion
scaling



motion mapping

simplified
model




forward
mapping

captured 
motion



automatic
determination

motion
type

(2)

where n is the total number of motion frames. Then
MIP can be formulated as:
­type WALK , ifS l z Sr , andS l  Sr z )
°
°type RUN , ifS l z Sr , andS l  Sr z )
(3)
®
°type JUMP, ifS l Sr , andS l z 7
°¯type SKATE , ifS l Sr , andS l 7

The steps of the model simplification are as
follows:
1. Use the approach of kinematic character
simplification [2] and set up simplified models
in advance for typical motions;
2. Detect the position constraints of the captured
motion qc(t) in terms of CDP and then get Sl
and Sr;
3. Identify the type of qc(t) in terms of MIP;
4. Determine the simplified model suitable for
qc(t) .

5. Motion mapping
After the simplified model is determined, the
captured motion is then edited and mapped in the
motion mapping process. The process includes three
steps: forward mapping, motion editing and inverse

steps: forward mapping, motion editing and inverse
motion mapping process. The process includes three
steps: forward mapping, motion editing and inverse
mapping (Fig3). All the steps are based on the
physically based optimization approach.
In the forward mapping step, the captured motion data
is adapted to the simplified character model. This step
aims at reducing the dimensionality of the motion data.
In the motion scaling step, the motion data is scaled
and modified in order to fit new character. In the
inverse mapping step, the edited motion data from the
previous step is then retargeted from the simplified
character model back to the full one.
Given a captured motion, the forward mapping step
is only calculated one time. Then by repeatedly
running the motion scaling step and inverse mapping
step while modifying character parameters, we can
obtain resulting motions for different characters.

5.1. Forward mapping
In this step, we use spacetime constraints
optimization method to retarget the captured data from
the origin character to the simplified character that has
been chosen automatically. In order to ensure that the
motions of the two character models are dynamically
similar to each other, we define a set of physical
measurements M. The definition of M varies with the
types of motions and aims to capture the basic
properties of motions. For example, we define M for
human run as:

M

{Mcom, Mangle, Mfeet}

(4)
where the first component of M includes the centers of
mass(COM) of the upper body and COM of the lower

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

body, the second component contains the angle
measurements of the hip joint , and the third one
represents the trajectories of the feet .
M of the motion is a function of qc(t) and can be
denoted as:

M

M (qc (t ))

(5)

Then the objective function is:


w1 * ³ ( M (q c (t )  M (q f (t )) dt  w2 * ³ q f (t ) dt
(6)
where qf(t) represents the motion of the simplified



(8)
where qi(t) represents the retargeting motion of the full


character, q c (t ) represents the motion which is
obtained by simply scaling the captured motion qc(t)
according to relative length measurements.
Then we define a constraint on measurements
C m (q i (t )) as:

M ( q c (t ))  M ( q s (t ))  M ( q f (t ))

B

B

min E (q f (t )) subject to

­Ck (q f (t ))
°
®Cc (q f (t ))
°
¯Cb(q f (t ))

0
0
0

(7)

5.2. Motion scaling
Since the target character has different parameters,
such as lengths and mass of limbs, from the original
character, we scale the simplified motion to the
simplified model of the target character according to
relative length measurements and relative mass
measurements. Then we can get the scaled motion qs(t)
by calculating a constrained optimization problem like
(7).

(9)

At last, this step is formulated as follows:

­Ck (qi (t )) 0
°Cc (q (t )) 0
°
i
®
°Cb(qi (t )) 0
min E (qi (t )) subject to °¯Cm(qi (t )) 0

..

q (t )
is the second derivative of qf(t), and
character, f
w1 and w2 are weights.
The constraint functions break down into three
types
of constraints, namely, kinematics constraints (Ck),
comfort constraints (Cc) and balance constraints (Cb ).
Ck defines the end-effectors to be located at the desired
position, such as the foot ground contact. We use Cc to
ensure that the torque, which is exerted at each joint ,
does not exceed the specific limit. Cb is used to achieve
dynamic balance of motions. We calculate Cb
according to Tak’s method[14] that adjusts the ZMP
trajectory of the character so that it falls inside the
supporting area.
To summarize, the forward mapping algorithm is
reduced to a physically based optimization problem:

..

E(qi (t)) w1 * ³ qi (t)  qc (t) dt  w2 * ³ qi (t) dt

(10)

6. The calculation of the initial solution
Our motion mapping approach is based on the
constrained optimization technique, so it is critical to
find a proper initial solution q0(t), i.e., the initial
estimation of the optimization solution q(t).
Gleicher described a motion transformation
method to solve this problem [4]. This method works
well in the retargeting algorithm that only considers
geometric constraints, however, it is not fit for our
algorithm that involves dynamics constraints.
We solve a hierarchy of physical optimization
problems to get a dynamically feasible guess. The
steps are as follows:
1. Use Gleicher’s method [4] to calculate a
geometrically feasible solution qg(t);
2. Divide T into k sub sets Ti :
3. Emerge the previous solutions each other as the
starting solution of the current iteration, calculate
small spacetime optimization problems within the
range of Ti and obtain the solutions qi,
respectively:

5.3. Inverse motion mapping
This step is an inverse process of the forward
mapping step. We define the objective function as:

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

k
­
T
Ti
¦
°
i 1
°
°
n
n
½
­
®Ti ®t i | (i  1)  d t i d i  ,1 d i d k ¾
k
k
¿
¯
°
°1 d k d n
°
¯
(11)

4.

k / 2 , return step 2;
Stop the iteration if k 1 .
Let

k

7. Results
In our experiments, the physical data of characters
including the body dimensions and mass distribution is
obtained from relative literature [13,14]. We use SQP
(Sequential Quadratic Programming) method to solve
the constrained optimization problem.
Results show that motions are automatically
identified by means of the motion analysis technique.
The algorithm can converge to the optimal solutions
when it is applied to editing all motion sequences. And
we observe that an appropriate initial solution
improves the speed of the algorithm considerably,
especially when it comes to the forward retargeting
optimization. As to our examples, the optimization
time is reduced by a factor 3 to 5 with our method of
searching the starting points. Times that our algorithm
takes range from 10 to 60 minutes, depending on the
duration of the captured motion sequences. The
algorithm runs on a 1.4GHz Pentium 4 computer with
256M of RAM.
Another example of human walk sequence is shown
(Fig.3). For this motion sequence, the dimension of the
original motion is reduced from 54DOFs to 20DOFs
(Table 1).

8. Conclusions and future works
In this paper, we propose a new motion mapping
algorithm based on a physical spacetime optimization
method. In contrast to the previous simplification
methods which were dependent on either human
intervention or motion database, our algorithm uses a
motion analysis technique to automatically determine
the simplified model. That is to say, our algorithm is
easier to use and requires no database.
The traditional method of spacetime optimization
can only deal with geometrical constraints, however,
our optimization algorithm can also solve physical
constraints. In addition, we improve Gleicher’s motion
transformation method and propose an effective
method to find a proper initial solution.
One of our future works is to apply our algorithm
to the target characters with different skeletal structure,
such as retargeting human motion to animals. Monzani
et al used an intermediate skeleton to cope with this
problem [15]. Since our simplified model can also
serve as an intermediate skeleton relating

hierarchically different characters, we hope to extend
our method so that it can fit for retargeting to any
characters. Furthermore, we wish to conduct more
experiments on other highly dynamic motions like
boxing.

10. References
[1]

[2]
[3]
[4]

[5]

[6]

[7]

[8]

[9]

[10]

[11]
[12]

[13]

[14]

[15]

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

A. Safonova, J. Hodgins, N. Pollard. Synthesizing
physically realistic human motion in low-dimensional,
behavior-specific spaces. Proceedings of Siggraph
2004.
Z. Popoviü, A. Witkin. Physically based motion
transformation. Proceedings of Siggraph 1999.
A.Bruderlin, L.Williams. Motion signal processing.
Proceeding of siggraph’95. 97-104, 1995.
M..Gleiche. Retargetting motion to new characters.
Computer Graphics Proceedings, Annual Conference
Series, ACM SIGGRA PH, Orlando, Florida, 1998.
33--42.
M.Gleicher, P.Litwinowicz. Constraint-based motion
adaptation. The Journal of Visualization and Computer
Animation, 9 (2): 65-94, 1998.
J. Lee, S. Shin. A hierarchical approach to interactive
motion editing for human-like figures. Proc. of
SIGGRAPH 99, 39–48,1999.
N.Pollard. Simple machines for scaling human motion.
Eurographics workshop on Animation and Simulation,
1999.
C. Liu, C. Popvic. Synthesis of complex dynamic
character motion from simple animations. ACM Trans.
On Graphics 21, 2002,vol 3, 408–416.
A. Fang, N. Pollard. Efficient synthesis of physically
valid human motion. ACM Trans. on Graphics 22,
2003, vol3, 417–426.
S. Tak, O-y. Song, H-s Ko. Motion balance filtering.
Proceedings of the 21th European Conference on
Computer Graphics (Eurographics-2000), 2000, vol.
19, 3 of Computer Graphics Forum, 437–446.
S.Tak, H.Ko. A physically-based motion retargeting
filter. Proceeding of SIGGRAPH, 2003.
K.Pullen, C.Bregler. Motion capture assisted
animation: Texturing and synthesis. Proceedings of
SIGGRAPH 2002.
M.Grosso, R.Quac, et al. Anthropometry for computer
graphics human figures. Technical Report MS-CIS-8771, University of Pennsylvania, Dept. of Computer and
Information Science, Philadelphia, PA, 1987.
P. Leva. Adjustments to Zatsiorsky-Seluyanov’s
segment inertia parameters. Journal of Biomechanics,
29(9):1223–1230, 1996.
J.Monzani, P. Baerlocher, P. Boulic, D. Thalmann.
Using an Intermediate skeleton and inverse kinematics
for motion retargeting. Eurographics 2000, vol. 19,
No3, 2000.

Figure.3. Motion mapping of human walk. (Top row) Motion capture data.

(Second row) The motion is simplified during the forward mapping step. (Third
row) In the motion scaling step, the simplified motion is scaled to the new
character which has short arms. (Fourth row) The scaled motion is retargeted to
the complex character model in the inverse mapping step.

Table 1. The DOFs of the simplified models

Motion
types

Human
run
sequence

Human
walk
sequence

Name of
joints
Shoulder
s
Pelvis
Hips
Knees
Total
Shoulder
s
Pelvis
Hips
Knees
Total

Number of DOFs
2 (1 for z Euler angle of each shoulder )
6 (3 for Euler angles and 3 for spatial position )
6 (3 for Euler angles of each hip )
2 (1 for z Euler angle of each knee)
16
6(3 for Euler angles of each shoulder )
6 (3 for Euler angles and 3 for spatial position )
6 (3 for Euler angles of each hip )
2 (1 for z Euler angle of each knee)
20

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

