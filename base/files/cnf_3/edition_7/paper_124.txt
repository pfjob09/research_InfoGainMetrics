Heterogeneous Objects Modelling and Rendering Using Implicit Complexes
E. KartashevaĮ, V. Adzhievȕ, P. Comninosȕ, A. PaskoȖ, B. Schmittį
Institute for Mathematical Modeling, Russian Academy of Science, Moscow, Russia,
ekart@imamod.ru
ȕ
The National Centre for Computer Animation, Bournemouth University, Poole, UK,
{vadzhiev,peterc}@bournemouth.ac.uk
Ȗ
Faculty of Computer and Information Sciences, Hosei University, Tokyo, Japan,
pasko@k.hosei.ac.jp
į
Computer Graphics Research Institute, Hosei University (Digital Media Professionals), Tokyo,
Japan, schmitt_benjamin@yahoo.fr
Į

Abstract
This paper describes a technology for modelling and
rendering heterogeneous objects containing entities of
various dimensionalities within a cellular-functional
framework based on the implicit complex notion. Implicit
complexes make it possible to combine a cellular
representation
and
a
constructive
function
representation. We describe a formal framework for such
a hybrid representation and propose a general structure
for implicit complexes. Then, we consider how an
implicit complex can be described geometrically and
topologically along with its associated attributes.
Rendering algorithms for implicit complexes using raytracing are also discussed. Finally, we present a case
study illustrating the proposed methods and algorithms.
Keywords--- Function representation, cellular
representation, implicit complex, polygonization, raytracing.

1. Introduction
Modelling and rendering heterogeneous objects have
become important research topics in different application
areas such as CAD and rapid prototyping, volume
modelling and rendering, representing results of physical
simulations, geological and medical modelling (see [2],
for example). Such objects are heterogeneous in their
internal structure and dimensionality. A dimensionally
heterogeneous object in 3D space can include elements
of different dimensions (points, curves, surfaces and
solids) combined into a single entity from the geometric
point of view (i.e. a point set) and the topological point
of view (i.e. a cellular complex). Varying materials and
other attributes of an arbitrary nature constitute a
heterogeneous internal structure.

A model of objects with fixed dimensionality and
heterogeneous internal structure (multidimensional point
sets with multiple attributes or so-called constructive
hypervolumes) was proposed in [10]. This model uses
real functions of point coordinates (scalar fields) to
represent both the object geometry and its attributes. The
hybrid cellular-functional model [1] allows for
representing a heterogeneous object as a cellular
complex with both explicit and implicit cells (cellular
domains) of different dimension. Such an object is called
an implicit complex, which is defined as the union of
properly joined cellular domains. Explicit cells can be
represented as parametric surfaces, parametric curves,
and point lists. Implicit cells can be implicit surfaces and
their patches, intersection curves of implicit surfaces, or
functionally represented (FRep) solids [9].
An important, yet largely unexplored, problem is
concerned with the conformity between the object’s
geometry and its attributes representing its nongeometric properties. If there are some singularities in
the distribution of some non-geometric properties (e.g.
material and medium boundaries or load application
points), then there is a need for consideration of some
real or imaginary geometric elements, perhaps with
different dimensionality, which only serve to describe
those non-geometric properties. Note that introducing
such subsidiary elements can change the topology of the
model. For instance, when we deal with a heterogeneous
model such as a pot with water containing a heating
element immersed in it, we may need to consider a
dynamic interaction between different surfaces (3D pot,
water, heater – can be in the form of 2D spiral, boiling
2D bubbles growing on the spiral, floating to the water
surface and once there bursting). Such a model assumes
dealing with a complex and dynamically reconfigurable
scene consisting of many structurally different
components but unified into a single model.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

In this paper, we describe a technology for
modelling and rendering of heterogeneous objects in the
form of implicit complexes. First, we introduce a general
structure of implicit complexes. Then we consider in
detail how they are constructed. Rendering algorithms
for implicit complexes using ray-tracing are also
described. Finally, we present a case study illustrating
the proposed methods and algorithms.

2. Related works
Let us briefly discuss approaches for modelling
dimensionally heterogeneous objects using various
cellular representations and related works on modelling
objects with varying distribution of material and other
attributes.
A typical technique for describing heterogeneous
objects is to represent them as collections of
homogeneous components. To describe complex
topology, different spatial subdivisions, topological
stratifications [6], and complexes [7, 8] are used.
Topological complexes and their construction
methods are discussed in a number of publications on
shape modelling and solid modelling. Multidimensional
simplicial complexes are used in [8] for dimensionindependent
geometric
modelling
for
various
applications. A Selective Geometric Complex (SGC)
[11] is a non-regularised non-homogeneous point set,
represented through enumeration as the union of
mutually disjoint connected open subsets of the real
algebraic variety. A procedure for designing cellular
models based on CW-complexes with the emphasis on
the topological validity of the resulting shapes is
considered in [3, 7].
Another approach to modelling heterogeneous
objects is based on using real functions of point
coordinates. For example, the constructive hypervolume
model [10] supports uniform constructive modelling of
point set geometry and attributes using such functions.
Then, a theoretical framework combining a cellular
representation and a constructive function representation
was proposed in [1]. An independent cellular and
functional representation of the same object is useful, but
not sufficient in certain applications. Without additional
information one cannot separate individual functions for
the components from the single function describing the
entire object. This additional information about object’s
components, their dimensions, and attachments to each
other are used in applications such as finite element mesh
generation, animation, and rendering. The above was the
motivation for introducing in [1] a hybrid cellular
functional model based on the notion of an implicit
complex, which allows for the flexible combination of
cellular and functional object geometry models and
attribute models. In the current paper, we examine in
more detail the construction and rendering of implicit
complexes.

3. Modelling using implicit complexes
Here we provide a brief description of a theoretical
framework for the representation of implicit complexes.
A more formal and detailed consideration can be found
elsewhere [1]. In this paper we present novel material
concerned with theoretical and practical matters of the
description and construction of ICs.

3.1 Hybrid representation of geometry
The hybrid geometrical model of heterogeneous
objects presented in [1] combines a cellular
representation and a constructive representation using
real-valued
functions.
Formally,
the
hybrid
representation for a geometric object D ⊆ Ω is defined
as follows:
M H : D = { X | X ∈ Ω, Ω ⊆ E n , X ∈ | K p |}

where Ω ⊆ E n is a modelling space and K p is an
implicit p-dimensional complex. The definition of an
implicit complex is based on the concepts of cellular
spaces and CW-complexes [5]. A CW-complex provides
a general representation for different topological
complexes including polyhedral and cellular complexes.
D is defined as a closed cellular space (domain) and
can be represented as a carrier of a CW-complex K, such
that D=|K|. The hybrid representation scheme can be
defined in the form of the pair < D, K > represented
N

through a union operation as < D, K >= * < Di , Ki > . We
i =1

can use different representation schemes for various
< Di , K i > pairs. Suppose that for some subdomains we
use the cellular representation. Such subdomains and
their subdivisions are called explicit and are denoted by
DEi and KEi . Then for the other domains, denoted
by DI j , we use an FRep; so their cellular representation
denoted by KI j is not necessarily known but can, in
principle, be built using some known method. We call
such domains as well as their subcomplexes implicit
ones. Then the point set D is represented as the union
N

M

i =1

j =1

D = (* DEi ) * ( * DI j ) .

The

complex

K

is

also

represented as the union of the corresponding explicit
subcomplexes KEi and the implicit subcomplexes KI j .
N

M

i =1

j =1

Thus, K = (* KEi ) * ( * KI j ) .
Note that if the intersection of two cells of an IC is
not empty, then it consists of a collection of cells of this
complex. The same is true concerning the boundaries of
cells. It is necessary to impose constraints on the domain
boundaries similar to those for subdomains. If these
conditions are satisfied, subdomains can overlap each
other and some subdomains can be located inside the
others. Fig. 1 shows examples of such subdivisions.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

m

l

a

g

k

k d
e

d

a
g

k

e

f

e

f
c

b

g

a

Rb ps if g sj belongs to the boundary of g ip . The relation

a

c

b

b

b

c

Figure 1
Examples of subdivisions: (a) 2D
subdomains (rectangles abcd, lefm, gefk), 1D
subdomains (polyline gefk, segment gk) and 0D
subdomains (points g, k). (b) 2D subdomain
(rectangle abcd ), 1D subdomains (segments ke, eg )
and 0D subdomains (points e, g, k). (c) 2D
subdomains (rectangles abcd, gkfe) and 1D
subdomain (contour gkfe)

3.2 Definition of implicit complexes
In the general case, a p-dimensional implicit
complex
Kp
is
expressed
as
p
q q = 0 ,.., p
,..., p
q
,
where
e
are
cells
of
all
K = {{ei }i =1,..., nq ,{t sj }sj==01,...,
}
i
mj
the explicit subcomplexes of K p and t sj are implicit
cells (such that each t sj is the point set coinciding with
the carrier of an implicit subcomplex of K p ). Thus, for
any DI j there exist t sj ∈ K p such that t sj = DI j .
Explicit cells eiq are defined with respect to the
definition of the CW-complex. The shape of each
explicit cell eiq is defined by a characteristic mapping,
and its boundary is mapped onto a subcomplex
M r ⊂ K p with dimensionality r < q .
Each implicit cell t sj is a closed point set defined by
an FRep. The boundary of the implicit cell t sj is not
necessarily mapped onto any subcomplex of K p and can
contain both explicit and implicit cells. Explicit cells are
indivisible elements of a subdomain subdivision
containing no other cells. Some cells of an implicit
complex can lie inside implicit cells of the complex.
Note that an r-dimensional K r implicit complex can be
reduced to a cellular one. We assume that each implicit
cell tis ∈ K r (where 0 < s ≤ r ) can be discretized.

3.3 Implicit complex description
IC topology is described by relations between its
elements. By definition, a 3D IC consists of 0D, 1D, 2D
and 3D cells. Let G p be a set of p -dimensional cells
gip . Such a set contains both explicit and implicit cells.
There are two main types of relations that establish
connections between cells of different dimensionalities:
the boundary relation and the “to contain” relation.
We denote by Rb ps the boundary relation between
p-dimensional
and
s-dimensional
cells,

Rb ps ⊂ G p × G s ,

s < p . The pair ( g ip , g sj ) belongs to

d

“to contain” is denoted by Rc ps , Rc ps ⊂ G p × G s , s ≤ p .
The pair ( g ip , g sj ) belongs to Rc ps if g sj ∈ g ip and

c

g sj ∩ ∂g ip ≠ g sj . The entire structure of 3D IC is defined

by six different boundary relations and nine different “to
contain” relations. Other relations are the co-boundary,
the “to be contained”, the incidence and the adjacency
relations. These can be derived from the boundary and
the "to contain" ones using various operations on
relations.
The geometry of ICs is described as follows. An
explicit cell ei0 is described by its coordinates. An
implicit cell t oj is defined in FRep with an inequality of
the form F ( X ) ≥ 0 . In E 3 space, the function F ( X ) for
0D cells (points) can be described using functions
representing the intersection of three surfaces, the
intersection of a curve and a surface, or directly as the
formulation F ( X ) = − d ( X − X 0 ) , where d is the distance
from the given point X0. An implicit cell t oj can also be
described as an image of a point functionally defined in
2D space.
An explicit 1D cell e1j is defined by a characteristic
mapping χ 1j : X = ϕ1j (u ) , which maps the segment [u0 , u1 ]
in the space of the real parameter into a curvilinear and
perhaps a closed segment in the E 3 space. An implicit
cell t1j can be described in two ways. It can be defined as
an FRep object in E 3 by an inequality of the form
F ( X ) ≥ 0 . In such a case, the 1D cell takes the form of an
arbitrary curve defined as the intersection of two surfaces
in E 3 . Alternatively, the cell t1j can be represented as an
image of an FRep curve described in 2D space by an
inequality of the form f j1 ( x) ≥ 0 , where x ∈ E 2 . This
mapping is given by a function of the form h1j : E 2 − > E 3 .
Explicit 2D cells are represented as images of
triangles and quadrilaterals resulting from characteristic
mapping. For each cell ei2 , we define the characteristic
mapping χi2 : X = ϕi2 (u , v) , which takes the rectangle
u0 ≤ u ≤ u1, v0 ≤ v ≤ v1 in the parameter space and maps it
onto a surface patch in E 3 . An implicit 2D cell t 2j can
also be described in two ways. It can be defined with
FRep in E 3 by an inequality of the form F ( X ) ≥ 0 .
Alternatively, one can use a functional description of the
form f j2 ( x) ≥ 0 in E 2 with the subsequent mapping of
the form h2j : E 2 − > E 3 .
To represent an explicit 3D cell, a variety of maps of
the form χ i3 : X = ϕi3 (u , v, w) can be used to describe the
shape of curvilinear polyhedrons. Maps of this kind have
been extensively used in describing finite element sets.
Such maps can be used to describe the cells and attach
them to the boundary cells of the complex by obeying

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

certain boundary conditions. Once again, an FRep of the
form F ( X ) ≥ 0 is used to describe the implicit cell t 3j .
And finally, to describe the non-geometric
properties of a heterogeneous object, represented by an
IC, we use the cellular-function model of the attributes
introduced in [1]. Each attribute Ai is defined by a
function of the form S i : E 3 → N imi , where N imi is a set
of attribute values (which can be a vector or tensor
space). N imi is embedded into a real-valued space of a
proper dimension mi. Thus, N imi ⊆ ℜ mi . Attributes
assigned to an implicit complex K are described by
functions Si
in a piece-wise manner, i.e.
S i = {( S i ) sj | ( S i ) sj : g sj → N imi , g sj ∈ K } .

3.4 Implicit complex construction
To create an IC, it is necessary to describe the
shapes of all its elements and, to specify the entire
boundary and the “to contain” relations between its
elements. The attachment operation is introduced
allowing the creation of the IC in a component-wise
manner, in order of increasing dimensionality of its
components. This process is constructive and iterative.
We start with an empty complex K o = ∅ , and then
at each construction step i we attach a new component
Li to the already formed subcomplex Ki −1 , thus creating
a new complex Ki = K i −1 ∪ Li which is a subcomplex of
the target complex K . We introduce two types of the
attachment operation based on the one defined for CW
complexes [3, 7].
The cell attachment operation assumes that at each
step i of the process another cell gir is attached to the
complex Ki −1 . First we define the shape of this cell using
one of the methods described above. Then, we have to
modify the relations. So for all implicit and explicit cells
g sj ∈ Ki −1 lying on the boundary of gir we add the pairs

attachment map ψ that relates the equivalent cells of the
initial complexes. Then, we obtain the sets Gip of the
complex Ki as quotient sets of the union of the
corresponding sets of the initial complexes by the
quotient
map
ψ
as
follows: G p ( K i ) = G p ( K i −1 ) ∪ G p ( L) / ~ψ , ( 0 ≤ p ≤ r ).
Finally, we define the boundary and the “to contain”
relations of the complex K i .

4. Model case study and discussion
In this section we give an example of an implicit
complex with nested cells. Then, we discuss the
difference between the proposed approach and the
known heterogeneous object models.

4.1 The pot filled with water model
Let us consider a 2D heterogeneous object shown in
Fig 2. This object can be represented as a carrier of the
implicit complex K 2 which includes the following cells:
K 2 = {t02 , t12 , t22 , t32 , t01 , t11 , t12 , t31 , e10 , e11, t00 , t10 , e00 , e10 , e20} . All the
implicit cells tis are described within the FRep
framework by the functions f i s : E 2 → ℜ . All the 0D
explicit cells are defined by their coordinates and all the
1D explicit cells are represented as segments of
parametric curves.

(a)

(b)

( g ir , g sj ) to the boundary relations Rb rs (where s < r ).

Then, for each implicit cell g lp ∈ K i −1 (where p ≥ r ) that
contains gir , we have to add the pair ( glp , g ir ) to the “to
contain” relation Rc pr (where p ≥ r ). Finally, and only if
gir is an implicit cell, for all implicit and explicit cells
g mq ∈ Ki −1 (where 0 ≤ q ≤ r ) lying inside g ir we add the
q
pairs ( g ir , g m
) to the “to contain” relation Rc rq (where
q ≤ r ).
The complex attachment operation deals with the
procedure of attaching the complex L to the complex

Figure 2 (a) The pot filled with water model with
nested cells and (b) The 2D cells extracted

Let us consider in detail the description of the
implicit cells. The extracted implicit cells are shown in
Fig. 2b and Fig 3. We assume that the cell t12 is defined
as the intersection of the cell t02 with some 2D solid
represented
by
the
inequality
φ ( x) ≥ 0
2
2
so f1 ( x) = f 0 ( x) ∧ 0 φ ( x) .
In this case the function f 32 ( x) takes the form
f 32 ( x)

Ki −1 . Assume that L is properly joined to the complex
Ki −1 that is L ∩ Ki −1 = C (where C is a subcomplex of

both L and Ki −1 ). Thus we have to create a complex

= f 22 ( x) ∧ 0 φ ( x) . Then the functions defining the

0D and 1D implicit cells are defined on the basis of the
description of the 2D cells as follows:

p≤r

Ki = K i −1 ∪ L ,

Ki =

*G

i

p

. First, we define an

p =0

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

f 01 ( x) = −(φ ( x))2 ∧ 0 f 02 ( x) ∧ 0 (− f 22 ( x))

f11 ( x) = −(φ ( x))2 ∧ 0 f 02 ( x) ∧ 0 f 22 ( x)
f 21 ( x)

= −(

f 31 ( x)

= −( f 22 ( x ))2 ∧ 0 (− f12 ( x) )

f 22 ( x))2

∧ 0 f12 ( x)

f 00 ( x ) = −(φ ( x))2 ∧ 0 (−( f 02 ( x))2 )
f10 ( x ) = −(φ ( x))2 ∧ 0 (−( f 22 ( x))2 )

Note that each of the cells t10 , t00 and t10 consists of
two disconnected components. This does not contradict
the implicit complex definition and is useful in some
applications (e.g., rendering). However, if it is necessary
to provide simple connectedness, then one can introduce
additional subdividing objects. The attributes here are
defined though their RGB colour components

Also note that, as the above example demonstrates,
nested cells are valid within our framework. This means
that cells can intersect each other or lie inside other cells.
For instance, in that example one part of the disc is
inside the water and another is outside. To deal with such
a model, we may either break the disk into two parts by
removing the whole disk from the complex or
subdividing the disk into two parts without deleting the
whole disk. The latter case allows us to deal
simultaneously both with the disk as a whole and with its
parts and it is perfectly valid within the implicit
complexes framework. Moreover, this allows for a
flexible reconfiguration of the components of the model
that promises interesting animation applications.

5. Rendering implicit complexes

e 20
e1

1

e 10
e01
e00

t00
t1

0

t10

t 00

t 01

t 31
t11

t01

t21

Figure 3 The pot filled with water: the 0D and 1D cells
extracted

4.2 Discussion
Note the important distinctions between the
proposed approach and the previously known
frameworks for describing heterogeneous models. The
models described in [11] also make use of subcomplexes
derived from the basic cellular subdivision of the
heterogeneous object. However, they first require the
explicit building of the cellular subdivision of the
modelling space and then use this to describe the
subcomplexes representing the components of the object.
In our framework the internal structure is described only
for those components which really require such a
detailed cellular representation. Other components are
described using only the FRep of the corresponding point
sets.
The models described in [6] make use of the
topological stratification. Our framework does not need
to exploit stratification-based structures since no strong
topological restrictions on the subdomains that can be
dimensionally
heterogeneous
non-manifolds
are
imposed. The main criterion for the choice of the
subdomains is based on the specifics of their
mathematical description. However, the proposed
framework can be used to describe the topological
stratification structures provided that the subdomains
forming the object subdivision are manifolds with the
topological homogeneity.

Using the known rendering techniques such as
polygonization and ray tracing, one can render any
individual explicit or implicit cell. Below, we assume
that the implicit complex contains cells with different
opacity values. In the case of fully opaque cells, they can
be rendered individually and combined together with the
standard use of an appropriate Z-buffer. The example
shown in Fig. 4 has been rendered with a conventional
ray tracing algorithm extended to support trimmed
implicit surfaces as 2D cells [12] and a Z-buffer. In the
case of cells with different opacity values, a single Zbuffer is not enough, and direct visualization techniques
(polygons and graphic hardware) can not be used.
Indeed, not only a z-value has to be stored, but rather z
intervals, in order to properly accumulate the opacity for
a correct blending operation. Note that the order for
rendering cells depends on their dimension. Therefore, to
render implicit complexes, volume rendering techniques
are also required, in addition to surface rendering
techniques.
Explicit or implicit 1D and 2D cells are rendered
first using traditional surface rendering techniques, as
well as 3D explicit cells. Given a ray, all the z
intersections have to be stored for each cell (a cell can
intersect the ray several times). In the case of explicit 3D
cells, z intervals are stored. It is sufficient to store only
the set of z intervals for a 3D explicit cell, as inside such
a cell opacity is constant by definition. At this stage of
the rendering process, for the given ray several z values
and z intervals along with the information that indicates
the correspondence of the z value with its cell are stored.
Then, 3D implicit cells are rendered, depending on
the stored values, with a volume rendering technique
based on ray tracing. See for instance [4] for more details
on general volume rendering. Using the previously
stored information, z testing along the ray, one can
determine if the current opacity and colour is
accumulated depending only on the 3D implicit cell or
whether the colour and opacity of another cell has to be
used for the given point.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

complexes including opaque and semi-transparent cells
of arbitrary dimensions was proposed and illustrated.
Future work directions include the development of
specific operations applicable to entire implicit
complexes, an extension of the model to time-dependent
implicit complexes, and further development of the
multidimensional version of the model and its
applications, and implementation of a specialized
modelling language.

7. References
[1] V. Adzhiev, E. Kartasheva, T. Kunii, A. Pasko, B. Schmitt.
Hybrid cellular-functional modeling of heterogeneous objects.
Journal of Computing and Information Science in Engineering,
Transactions of the ASME, vol. 2, No. 4, 2002, pp. 312-322.

Figure 4 Rendering an implicit complex composed of
cells of different dimension and semi-opaque cells.

In the case of cells of a dimension lower or equal to
2, their colour and opacity are accumulated directly
instead of the attribute values of the 3D implicit cell. In
the case of 3D explicit cells, their attributes are
accumulated along the stored z-interval. The z test along
the ray and therefore the accumulation is performed until
the traditional termination conditions have been met.
Figure 4 shows an example of rendering of an
implicit complex that contains cells of various
dimensions and of various opacities. It also illustrates the
theoretical example proposed in section 4, extended to
3D cells. The implicit 3D cells correspond to the grey
cylinder and the pot-shape object. The colour of the
object is based on Perlin’s noise function. The opacity
varies along the vertical axis. Note that inside the pot
there is a blue area (representing the water). This area, on
the base of the constructive hypervolume model, is
defined as a half-ellipsoid combined with a noise
function. The 2D implicit cell is defined as a trimmed
surface, namely an Escher’s spiral defined as a sphere
surface trimmed by four swept solids. There are also 1D
explicit cells shown in red that connect the 2D implicit
cell and the 3D implicit cells (i.e., the cylinder). Note
that the trimmed implicit surface intersects the 3D cell
representing water as it is allowed in our model.

[2] Computer-Aided Design. Special issue on Heterogeneous
Object Models and their Applications, vol. 37, No. 3, March
2005, pp. 285-353.
[3] T. Kunii. Valid computational shape modeling: design and
implementation. International Journal of Shape Modeling, vol.
5, No. 2, 1999, pp. 123-133.
[4] B. Lichtenbelt, R. Crane and S. Naqvi. Introduction to
Volume Rendering. Prentice Hall PRT publisher, HewlettPackard Company, 1998.
[5] W. S. Massey. Algebraic topology: An introduction.
Harcourt, Brace&World, 1967.
[6] A. Middleditch , C. Reade, A. Gomes. Point-sets and cell
structures relevant to computer aided design. Int. Journal of
Shape Modeling, vol. 6, No. 2, 2000, pp. 175-205.
[7] K. Ohmori, T. Kunii. Shape modeling using homotopy. In
Proc. Int. Conf. on Shape Modeling and Applications, IEEE
Computer Society, 2001, pp. 126-133.
[8] A. Paoluzzi, F. Bernardini, C. Cattani, V. Ferrucci.
Dimension-independent modeling with simplicial complexes.
ACM TOG, vol. 12, No. 1, 1993, pp. 56-102.
[9] A. Pasko, V. Adzhiev, A. Sourin, V. Savchenko. Function
representation
in
geometric
modeling:
concepts,
implementation and applications. The Visual Computer, vol.
11, No. 8, 429-446, 1995.
[10] A. Pasko, V. Adzhiev, B. Schmitt, C. Schlick.
Constructive hypervolume modeling. Graphical Models, vol.
63, No. 6 413-442, 2001.

6. Conclusions
Implicit complexes make it possible to combine a
cellular representation and a constructive function
representation into a uniform model. In this paper, we
have described the theoretical framework and the
practical techniques of construction and rendering such
models. The general structure of an implicit complex and
attachment operations were presented and illustrated.
The general algorithm for rendering of implicit

[11] J. Rossignac, M. O’Connor. SGC: A dimension
independent model for pointsets with internal structures and
incomplete boundaries. In Geometric modeling for product
engineering, ed. by M. Wozny, J. Turner, K. Preiss, 1989, pp.
145-180.
[12] B. Schmitt, A. Pasko, G. Pasko, T. Kunii. Rendering
trimmed implicit surfaces and curves. In Proc. Afrigraph 2004,
South Africa, ACM SIGGRAPH publication, 2004, pp. 7-13.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

