Tessellation and Contour Extraction Algorithms for Rapid Prototyping Replication
of 3D-pCT Reconstructions of Cancellous Bone
G Sisias’, R Phillips’, CA Dobson2, MJ Fagan2, PS Ganneg and CM Langton3
Department of Computer Science, University of Hull, UK
2
School of Engineering, University of Hull, UK
3
Centref o r Metabolic Bone Disease and Royal Hull Hospitals NHS Trust, UK
G.Sisias@dcs.htdl.ac.uk, R.Phillips@dcs.hull.ac.uk, C.A.Dobson@eng.huII.ac.uk,
M.J. Faganaeng.hull.ac.uk, paul.ganney@dial.pipex.com, C.M.Langton@medschool.hull.ac.uk
parameters have to be elucidated by destructive means,
typically in the form of slice histomorphometry. In addition,
the human in vitro samples most readily available tend to be
from an elderly population and therefore may be of limited
structural variation compared to the full population age range.
The development of a physical model of cancellous bone
whose structure could be controlled would provide significant
advantages over the study of in vitro samples and would also
enable the relationship between the mechanical integrity and
hence fracture risk of cancellous bone and its structural
properties to be more exactly defined. Further complementary
applications include validation of stochastic simulations of
cancellous bone [ 1 I ] and validation of ultrasound
measurement parameters of velocity and broadband
attenuation for the assessment of osteoporosis [I 31.

Abstract
A set of algorithms has been developed and evaluated for
3 0 and 2%D rapid protoryping replication of 3 0
reconstructions of cancellous bone samples. The algorithms
replicate a voxel map without m y loss of fidelity, so as to
increase the validity of the comparison of mechanical tests on
the 3 0 reconstructed models with those predicted by finite
element analyses. The evaluation is both in terms of
afgorithmic complexity and the resultant data set size. f i e
former determines the feasibilit), of the conversion process,
whereas the latter the potential :iuccess of the manufacturing
process.

1. Introduction

1.1.

Bone tissue consists of cakium hydroxyapatite mineral
absorbed onto a collagen matrix. Throughout life there is a
process of remodelling, where old bone is removed by
osteoclast cells and new collagen fibres are laid down by
osteoblast cells. This is under the control of physical activity
and several hormones. There art: two types of bone structure,
cortical and cancellous. Cortical bone is predominantly solid
and makes up the shafts of the long bones in the skeleton.
Cancellous bone has a porous structure made up of an array of
trabecular bone fibres interspersed with bone marrow, and is
found near the joint surfaces of ihe long bones and within the
individual vertebrae making up the spinal column. Bone
grows under body forces and the trabecular fibres follow the
principal lines of stress, as can be clearly seen, for example, in
a cross-section of the hip.
In order to further our understanding of osteoporosis and
its dependence upon the material and structural properties of
cancellous bone, many experimental studies continue to be
undertaken on natural tissue samples obtained from human
subjects and animals. A significant difficulty however in
analysing in vitro bone samples is that the structural

449
0-7695-1195-3/01 $10.00 0 2001 IEEE

Background

Stereolithography (SL) is a form of rapid prototyping that
allows complex solid objects to be manufactured directly from
3D computer models in the form of successive layers of lightcured resin. There are essentially two stages to SL, design and
manufacture. During the design stage the required object is
initially created using standard 3D solid modelling techniques
and then converted into the SL format consisting of a series of
thin slices. The SL manufacturing system consists of a vat of
light-sensitive resin with an elevator and computer-controlled
scanning laser. At the start of the process, the elevator is
positioned just below the surface (typically 01 mm) of the
liquid SL resin. The laser scanner ‘prints” the bottom layer
onto the resin surface, which solidifies upon exposure to the
laser beam. The elevator then moves down by an incremental
distance and the SL resin isrespread over the surface of the
vat prior to the next scan. As successive solid layers are
formed, they bond to produce a single solid object. When the
model is completed the elevator is raised and the unused resin
allowed to drain.
The laser cures the SL resin to
approximately 60%, the curing process is completed in an

ultra-violet oven. The resolution of the SL process is
governed by the laser spot size and the vertical movement of
the elevator. Typically, the laser spot diameter will be better
than 0.3 mm and the elevator movement resolution will be
about 2.5 pm. The recommended minimum layer thickness is
0.1-0.15 mm.

1.2.

The use of stereolithography in the study of
cancellous bone

The value of stereolithography to the study of cancellous
bone has already been described for the validation of
ultrasound assessment [ 10,7,12] and the development of
phantoms for magnetic resonance imaging [8].
The
techniques of serial sectioning [ 151 and micro-computed
tomography (pCT) [9] reconstruction offers the ability to
obtain 3D reconstructions of in vitro samples of natural
cancellous bone tissue [16]. There is a compromise between
reconstruction resolution and sample size, f o r , typical
cancellous bone samples of 10 mm dimension, resolutions of
the order of 20 pm may be achieved. However,
representations of such 3D reconstructions are extremely
memory demanding, typically requiring approximately 9001500 MB per sample.
For stereolithography replication of the natural tissue
samples, it is necessary to convert 3D reconstruction data into
a file format suitable for rapid prototyping production.
Unfortunately, the size of the resultant file is normally beyond
the memory capacity of rapid prototyping systems. To
understand the cause of this limitation, it is necessary to
explain the basis of the conversion process.

1.3.

Stereolithography data structures

There are two types of files that can be used to transfer the
geometry of a structure to the stereolithography (SL)
manufacturing equipment. By far the most widely used is the
STL format, while the other one is the SLC format which is
better suited for pCT (computed tomography) data sets. The
STL format is a list of triangles that define the outer shell
(surface) of a structure [I]. The information required per
triangle is its surface normal and the three vertices of the
triangle itself. A requirement of the specification is that all x,
y and z co-ordinates of each vertex of each triangle should be
positive (not zero), Cartesian, and floating-point. There are
two issues to consider when tessellating the surface of a solid.
The first is the Vertex-to-vertex violation: the second is the
presence of isolated (bone) islands in the voxel map. The
vertexito-vertex violation restriction applies to the trianglebased representation of a solid (STL), and states that a vertex
of one triangle must not lie on the edge of another. The SLC
format is a 2%D description of objects, using contours [2].
The files are mainly composed of a list of sets of contours for
every z layer of the object being described. Each set of

450

contours on the same z level describes the interior and exterior
of the object, based on the orientation ef every contour.

2. Tessellation algorithms - STL
A very fast non-optimal way to tessellate the surface of a
voxel map without violating the vertex-to-vertex rule is to
generate two triangles for every visible face of every voxel.
The advantages of this non-optimal tessellation algorithm are
that it is very fast and simple to implement. However, it
generates an unnecessarily large number of triangles, thus
impacting the feasibility of the manufacturing process. The
aim of the optimal tessellation algorithm is to generate the
minimum number of triangles needed to represent the surface
of the voxel map, whilst still producing STL compatible
triangle configurations. This algorithm is split into five
stages, as outlined in Figure 1. These stages are repeated for
every vertex plane in all 6 orthogonal scanning directions (i.e.
increasing and decreasing x, y, and z).
The algorithm is based on the fact that the least number of
triangles are generated from contours that have been defined
with the minimum necessary number of vertices. In the first
stage the algorithm determines which vertices describing the
voxel map are necessary and considers only those. In the
second stage the contours that pass from the vertices from the
first stage are traced, so that closed shapes are produced. In
the third stage, the algorithm determines which contours are
enclosed by others, hence forming a hierarchy that indicates
areas that belong to the object and therefore should be
tessellated, and exclusion areas that should not be tessellated.
In the fourth stage the contours are reorientated in clockwise
or counter-clockwise order and merged accordingly so as to
form a single contour for the last stage of the tessellation
process. In the final stage the single contour from the
previous stage is tessellated.

kd
I
I
1. Determine vertices

'
I
I
2. Trace contours

3. Define contour enclosure

I 4.Reorientate + Merge contours 1
5. Tessellate contours
Figure 1. The stages of the optimal tessellation algorithm.

2.1.

Central vertex generation in a 23 voxel
configuration

In order not to violate the vertex-to-vertex rule when
deciding whether to generate or skip a certain vertex, it is
important to consider all six possible orthogonal planes into
which that specific vertex belongs to (increasing and
decreasing x, y and z). There are 2' = 256 different
combinations in a 2' voxel configuration illustrated in Figure
2, depending on the position of the bone voxels. All 256
combinations can be represented by their unique value in a
table, along with an indication whether that specific
configuration would require the central vertex to be generated.

tessellation (e.g. increasing z) are left blank, whereas the
remaining are correctly tessellated. Such exclusion areas are a
result of two neighbouring voxel planes where one of them is
smaller than another and hence their common vertex plane
contains areas that are not visible. The enclosure detection
algorithm works by firing horizontal rays that span the full
width of the vertex plane and calculating intersections with the
contours as the rays travel from left to right. When a contour
is hit once, a mark is kept that indicates we are not travelling
inside the newly intersected contour. If the mark is odd when
another contour is met, then the second contour is a sibling of
the first. If the mark is even, then the contours are outside of
the current contour. This odd-even rule is iteratively applied
to all horizontal rays, and at the end of the process the parentsibling relationship of all contours in a given vertex plane is
defined.

2.4.

Figure 2. Central vertex 'A'maJyor may not be generated
depending on which of the 8 surrounding voxelsare bone.

All the potential configurations on both the front and back
voxel planes, along with the indication whether the
corresponding configuration should generate a vertex, are
summarised in Table A-I.

2.2.

Vertex tracing for cointour definition

After the vertices defining the contours in a vertex plane
between two voxel planes are specified, they must be grouped
together appropriately so as to form the contours. This
process starts by selecting the top-left most vertex and
following around the contour to which it belongs, until the
starting vertex is met again. The direction to follow from each
vertex to the next one is selected ;according to Table A-2. The
starting vertex configuration is always of type 2, which
corresponds to a single element at the bottom-right corner of
any 2x2 elemental configuration. According to Table A-2 and
by the assumption the contours are to be traced in a clockwise
fashion, the next vertex to move should be on the right
(combination of "vertex type" 2 'or D and "heading towards"
direction ofNorth).

2.3.

Contour enclosure detection

To tessellate a set of contours on the same plane properly,
it is important to determine their enclosure relationship. That
way, areas that should not be tessellated in the direction of

Contour merging before tessellation

It is possible that the tessellation algorithm (2.5) may be
faced with the configurations where the area between two
contours must be tessellated. To tessellate only such areas
(avoiding exclusion areas), such contours must be joined
together to form a single contour. The combined tessellated
contour will then give the correct triangle configuration that
will avoid the exclusion areas. It is also possible to have
contours that enclose others, those further enclosing others,
and so on, in an infinite recursive fashion. It is only necessary
to merge contours from two consecutive levels.
Consequently, this merging process can be summarised in the
following: Top level (without parents) contours are
successively merged with their immediate siblings only. The
siblings of siblings are then set to be parent contours (i.e. not
enclosed by others), and this process is repeated until no more
merges can be performed. In situations where parent contours
have more than one sibling, the merging takes place with the
first one only to form a combined one, and then the combined
is merged with the next sibling, until all immediate siblings
have been merged together.
The selection of vertices where two contours must be
merged is important. Any two vertices cannot be selected,
because wrong triangle configurations may result. As a rule, a
parent contour can be merged with a sibling contour only at a
point of minimum distance. As a result, there cannot be
another immediate sibling closer to the parent, as that would
be the closest in the first place.

2.5.

Contour tessellation

The final stage of the process receives the contours from
the merging stage and creates the triangles that cover their
entire surface. The actual tessellation algorithm accepts a
contour and scans its vertices sequentially in a cyclic fashion,
trying to derive triangles from every triad of vertices found.
Based on the determinant of every triad of vertices, the

451

algorithm is able to determine if that triangle is inside or
outside the contour of reference. Additionally, the algorithm
makes certain that potential triangles do not enclose any other
vertices. Consequently, a triangle is valid when it is inside the
contour and is not enclosing other vertices. Whenever a
triangle can be created, from the three points defining it, the
middle one is removed from the contour. The algorithm will
not fail if co-linear vertices are found, and will stop as soon as
there are less than 3 vertices left. However, a limitation is that
a contour must not be self-intersecting. Such configurations
are conveniently avoided by the vertex-tracing algorithm of
Stage 2. Although this greedy algorithm is well suited for fast
operation, it can be replaced by others that generate better
triangle configurations [4,5].
Two versions of the algorithm may be considered. The
first one is biased on creating fan-type triangular topologies
when possible. After the middle vertex of a valid triangle is
removed, the starting vertex is kept the same, the third one
becomes the second, and the next (fourth after the first)
becomes the third. Hence, the same starting vertex is kept for
as long as valid triangles can be generated. Although this
version of the algorithm is fasterthan the second (fewer cycles
around a contour), it has a greater tendency to generate long
and thin triangles. The second algorithm operates mainly on
the perimeter of contours, avoiding long and thin triangles.
After the decimation of the middle vertex of a valid triangle,
the algorithm uses the last vertex of the valid triangle as the
starting one, and brings in another two vertices from the
remaining contour. Hence the algorithm now no longer keeps
the same starting vertex, decreasing the probability of
immediately finding another valid triangle. As a drawback,
more cycles are needed around a contour, making this-version
of the algorithm slower. It must be noted that it is perfectly
possible for both versions to give exactly the same triangle
configurations with the same number of attempts, depending
on the starting vertex and topology of vertices. The second
variation of the tessellation algorithm is similar to one
described in [6], differing only in the determination of
criterion of triangle validity.

3.

described again. Finally, the contours are orientated so that
the outer most (non-enclosed) are counter-clockwise (CCW),
and the intemal ones are with interchanging orientation,
depending on their enclosure depth.
As with Stage 1 for the STL tessellation algorithm, the
vertices that correspond to a voxel plane may or may not be
generated based on a look-up table (Table A-3) with 16
entries.
The
software
controlling
the
stereolithography
manufacturing equipment can distinguish parts that have to be
solidified from the orientation of the contours of every layer.
The outer-most are always CCW, the immediately inner ones
clockwise (CW), the next ones CCW, etc.

4.

Results

The software was tested on a PC with 2 Intel Pentium I1 @
300 MHz processors, 512 MB SDRAM under Microsoft
Windows 2000 Professional, using the Borland C++ Builder
5.0 Professional compiler. Execution timings were recorded
12 times, and the highest and lowest timings were discarded
before the average of the remaining 10 was calculated. The
software was forced to run on one processor with real-time
priority. The testing criteria also involved the resultant data
file sizes apart from the execution times.
Table 1 shows the results of the near real-time tessellation
(NRT) algorithm on the human samples after all islands had
been removed. Table 2 shows the corresponding results from
the optimal tessellation algorithm (OPT). Table 3 shows the
results of the contour extraction algorithm.

I
I

Iliac Crest
qLhLumbar
Vertebra

I
I

I
I

2.38 M
1.56M

I

I

I

43.20 1
41.28 1

I

1

I
113.66
74.36

Vertebra
Calcaneus I
639K I
1.65 1
40.48
Table 1. The results of the near real-time tessellation
(NRT) algorithm.

Contour extraction algorithms - SLC

The algorithm that extracts the contours of every z layer of
a voxel map to compose the equivalent SLC compatible
structure is similar to the STL algorithm. To describe a simple
cube in STL, 12 triangles are needed. The data set for the
SLC file for the same structure needs only the 4 vertices at the
bottom of the cube. Consequently, there is no need to
consider the voxel plane below the one being processed, as the
interactions between any two voxel planes do not matter. For
every layer only the necessary vertices must be generated,
which are then grouped together to form contours. This stage
is similar to the vertex generation stage of the STL algorithm,
although much simpler. The contour enclosure is defined in
exactly the same way as in the STL algorithm, and hence not

Head
Iliac Crest
4Ih Lumbar
Vertebra
Znd Lumbar
Vertebra
Calcaneus

452

1.19 M
707 K

2962.96
2031.77

56.64
33.70

1.04 M

2552.69

49.51

325 K

2 14.29

15.51

I

Head
Iliac
I
Crest
4'h
Lumbar
Vertebra I

I

264 I

3.249 I 425.082 I

282

3,839

I
90.17

I

3.30

329,774

I

I

l-Eii-LM*l

Table 3. The results of the contour extraction algorithm.

Tables 4 and 5 offer a comparison of the above results, in
data set size and execution time. In Table 4 the data set sizes
are normalised to the contour based data (the smallest) and in
Table 5 the execution times are normalised to the NRT
algorithm (the fastest).

Figure 4. Close-up of the 4'" lumbar vertebra solid.

5.

Discussion

The purpose of this work was to define the algorithms that
would precisely replicate vdxel-based bone tissue data in CAD
compatible representations. Since the resultant solids are
intended for mechanical testing, it was essential to replicate
the voxel maps into triangle and contour based data without
compromising quality. As a consequence, algorithms such as
marching cubes [14,3] for the 3D data and line generalisation
or curve fitting for 2%D data were avoided. The reasoning
behind the dual support of STL and SLC type data is based
exclusively on the available software and hardware
capabilities of the stereolithography manufacturers. The STL
format is far more widely used than the SLC, although the
latter is better suited for CT type structures. STL files are far
larger than their SLC equivalents, as the results show. It was
experimentally determined that a PC equipped with 256 MB
of main memory and with excessive disk swapping could only
handle STL files containing up to approximately 2 million
triangles, or about 100 MB of data. Although the human
samples were optimised to fall below that limit, larger bone
samples of say 500' voxels, even if optimised, still produce
vastly bigger files, exceeding 600 MB (up to 1500 MB for the
non-optimised versions). Despite the SLC files being an order
of magnitude more compact, they are not widely supported
and consequently not always be an option. The SLC files are
roughly 13-1 7 times smaller than their equivalent optimised
STL counterparts, and 28-33 times smaller than the nonoptimised STL versions. When full SLC support is available
from the rapid prototyping manufacturers, this is by far the
best option; not only due to the low execution time
requirements or inversely limited computer requirements, but
also due to the small file sizes. Most importantly, though, it is

I
Vertebra
2"dLumbar I
30.13
I
Vertebra
Calcaneus I
33.49
Table 4. Comparison of the data-set size of the three
algorithms, normadised to SLC.

Iliac Crest
49.22
Vertebra

1 .oo
37.77
Vertebra
Calcaneus
28.01
Table 5. Comparison of the execution time of the three
algorithms, normalised to NRT-STL.

Figure 3 shows all five solids together, and figure 4 a close-up
of the 4Ih lumbar vertebra.

Figure 3. All five solids.

453

possible to build more than one solid at a time, significantly
reducing the cost of manufacture.
At present the algorithms presented replicate a voxel map
in geometry data very accurately. There is potential for
improvement when accuracy is not an issue. STL data can be
reduced by the marching-cubes algorithm or a variant of it.
SLC data can be postprocessed with a line generalisation
algorithm [ 171 or an adaptation of marching cubes in 2D, that
will smoothen the contours, reducing storage requirements.

6.

4.
5.

6.
7.

Conclusions

For the purpose of manufacturing solid models based upon
human tissue data, a set of algorithms has been developed that
replicate voxel based data in CAD formats suitable for rapid
prototyping equipment.
The conversion algorithms can represent the source data in
a triangle-based description of a solid’s surface with the option
of either fast processing or minimising processing. The first
variation of the triangle based algorithm provides the resultant
data in near real-time, whilst the second guarantees the
minimum data set without any reduction in quality. However,
the optimal algorithm is not well suited if further data
reduction is required. A third algorithm was developed that
processes the source data in layers and produces a set of
contours, to offer an additional option of compatibility.
A performance and data set size analysis was performed
that evaluated the algorithms. Despite the popularity of the
triangle-based representations, employing the less popular
contour representation can be the only option when the data
set is especially large.

8.

9.

10.

1I.

12.

Acknowledgements
13.
The authors gratefully acknowledge the financial support
of the EPSRC, charity OSPREY, Action Research, and the
Hull and East Yorkshire Hospitals NHS Trust. The authors
would also like to thank Bert van Rietbergen (Eindhoven, The
Netherlands) for providing the data for the human bone
samples, along with Chris Manners (3D Systems Inc, USA),
Colin Blain (3D Systems, UK), and Kris Wouters
(Materialise, Belgium) for their technical support. Thanks
also go to Richard Bibb (National Centre for Product Design
& Development Research, University of Wales Institute, UK)
for building the solids.

14.
15.

16.

17.

References
I.

2.
3.

3D Systems Inc. “Stereolithography Interface Specification”,
3D Systems, CA, USA, 1989.
3D Systems Inc. “SLC File Specification”, 3D Systems, CA,
USA, 1994.
Cline, H.E., Lorensen, W.E., Ludke, S., Crawford, C.R., and
Teeter, B.C., “Two algorithms for the three-dimensional

reconstruction of tomograms”, Medical Physics, Vol 15 No 3,
1988, pp. 320-327.
De Berg, M., Van Kreveld, M., Overmars, M., and
Schwankopf, O., Computational Geometry: Algorithms and
Applications, Springer-Verlag, Germany, 1997.
Guibas, L., and Stolfi, J., “Primitives for the manipulation of
general subdivisions and the computation . of Voronoi
diagrams”, ACM Transactionson Graphics, Vol 4 No 2, 1985,
pp. 74-123.
Hinker, P., and Hansen, C., “Geometric optimization”,
Proceedings of Visualization93, 1993, pp. 189-195.
Hodgskinson, R., Njeh, C.F., Whitehead, M.A., and Langton,
C.M., “The non-linear relationship between BUA and porosity
in cancellous bone”, Physics in Medicine and Biology, Vol 41,
1996,pp. 2411-2420.
Issa, B., Gibbs, P., Hodgskinson, R., Langton, C.M., and
Tumbull, L.W., “Assessment of the pore geometry of
stereolithography models by high resolution MRI’’, Magnetic
Resonance Imaging, Vol 16 Nos. 5-6, 1998, pp. 651-653.
Kinney, J.H., Lane, N.E., and Haupt, D., “Three dimensional in
vivo microscopy of sequential changes in trabecular
architecture following estrogen depletion in female rats”,
Journal ofBone and Mineral Research, Vol 10, 1995, pp. 264270.
Langton, C.M., Whitehead, M.A., Langton, D.K., and Langley,
G., “Development of a cancellous bone structural model by
stereolithography for ultrasound characterisation of the
calcaneus”, Medical Engineering and Physics, Vol 19 No 7,
1997, pp. 599-604.
Langton, C.M., Haire, T.J., Ganney, P.S., Dobson, C.A., and
Fagan, M.J., “Dynamic stochastic simulation of cancellous
bone resorption”, Bone, Vol 22 No 4, 1998,pp. 375-380.
Langton, C.M., Whitehead, M.A., Haire, T.J., and
Hodgskinson, R., “Fractal dimension predicts broadband
ultrasound attenuation in stereolithography models of
cancellous bone”, Physics in Medicine and Biology, Vol 43,
1998, pp. 467-47 1.
Langton, C.M., and Njeh, C.F., “Acoustic and ultrasonic tissue
characterisation - assessment of osteoporosis”, Journal of
Engineering in Medicine, Vol 213H, 1999, pp. 261-269.
Lorensen, W.E., and Cline, H.E., “Marching cubes: a high
resolution 3D surface reconstruction algorithm”, Computer
Graphics, Vol21 No4, 1987, pp. 163-169.
Odgaard, A., Andersen, K., Melsen, F., and Gundersen, H.J.G.,
“A direct method for fast three-dimensional serial
reconstruction’; Journal of Microscopy, Vol 159 No 3, 1990,
pp. 335-342.
Ruegsegger, P., Koller, B., and Muller, R., “A
microtomographic system for the non-destructive evaluation of
bone architecture”, Calcifien Tissue International, Vol 58,
1996,pp. 24-29.
Visvalingam, M., and Whyatt, J.D., “Line generalisation by
repeated elimination of points”, Cartographic Journal, Vol 30
NO 1, 1993,pp. 46-51.

Contact:
George Sisias, Department of Computer Science, University
of Hull, Cottingham Road, Hull, HU6 7RX, UK. E-mail:
G.Sisias@dcs.hull.ac.uk, Tel: 0044 (0) 1482 466075, Fax:
0044 (0) 1482 466666.

454

Appendix
T
combination of near and far plane configurations
indicates the generation of vertex 'A'

.

I

FNl

+

Heading towards Change
direction to

...

S

N

W

1

E

Ta
x

x

I

voxel configuration- are shown, along with the indication
of whether the corresponding central vertex is generated.
L

455

