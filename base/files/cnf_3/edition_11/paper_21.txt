Finding and Characterising Candidate Binding Sites
Gareth Hannaford", Carsten Maplet and Jonathan Mullins*
Departments of Biology( *) and Computing and Information Systems( f), University of Luton, Luton,
Bedfordshire, LUl 3JU.
co-ordinates (x, y, z values in space), the atoms that
comprise the protein, connection data between the
atoms and source information (how the data was
determined).
The 3D atomic co-ordinates that are given are the
centres of the atoms that comprise the protein.
A variety of computer programs can be used to
display and manipulate these files. Some of the
principle protein viewers are RASMOL, developed by
Sayle & Milner-White in 1995 [ l I], Swiss-Prot PDB
Viewer by Guex & Peitsch in 1997 [2], and STING
by Neshich et al. in 1998 [9]. There has also been
software developed such as the plugin for Web
browsers, CHIME (MDL Information Systems, Inc.)
in 1996. In 1992, Levitt and Banaszak developed the
POCKET computer program [4], and the algorithm
used by POCKET forms a basis for some of the work
presented here.
The proteins represented by PDB files are mostly
soluble proteins with perhaps a few membrane
proteins, the latter being very hard to obtain 3D coordinate information about, owing to the difficulty in
isolating them from the membrane and due to artefacts
created by X-ray crystallography and NMR (nuclear
magnetic resonance).
Homology modelling can also be carried out as an
alternative to compare with information determined by
such computer programs. This involves several stages,
beginning with comparisons between the raw
biological code for the proteins, the amino acid
sequence. Sequences are compared between proteins,
which have similar roles (for example binding one
specific substrate molecule) or are the same but from
different species. By looking for identical amino acids
at certain positions or others with similar chemical
characteristics between the sequences, it is possible to
determine whether some parts of the structure are
specific to function. These features are normally
proximal to a binding site or contribute to its structure
and thus function.

Abstract
In this paper we presen~'a method for identifying
and representing indentations, cavities and holes in a
known protein structure. The identification procedure
is performed initially. Once a pocket in the protein
has been found, we use a boundary representation
technique to represent it. troth the identification and
the representation procedures rely upon modifications
to the Marching Cubes algorithm of Lorensen and
Cline [SI, which can be used to give a piecewise
planar representation of a three-dimensional object.
The identification of a pocket essentially involves
finding a point, (xh yh zo) say. The point should be
such that a sphere of radius r can be centred there,
without touching the centre ofany atom in the protein,
but there exists R > r such that a sphere of radius R
centred at ( x a yo, zo) does touch the centre of an atom.

If such a point is found, thcx it is deemed to be in a
pocket.
The boundary representation technique
involves storing information about a boundary in the
structure of a graph. The graph structure of a pocket,
potential docking site, can then be compared to the
graph structure of a candidate binding substrate using
standard graph comparison algorithms. The required
input for the algorithm is in ]heform of a Protein Data
Bank (PDB)file.

1. Introduction
Biological systems can be represented and studied
using mathematical and computational techniques.
This area, increasingly known as bioinformatics, can
be used to glean valuable information about tertiary
structure features
that are impossible to gain in the laboratory.
The standard protein structure file format is the
PDB file. This is a standardised file created by the
Brookhaven Protein Database, that contains 3D atomic

157
0-7695-1195-3/01
$10.00 0 2001 IISEE

T o do this, the surface normal to each triangle is found
(a simple procedure). The volume is then found to be

2. Identifying Pockets
In this section we describe the method used to
identify the pockets in a known protein. This work
was published in 1992 by Levitt and Banaszak [4], and
is not presented as novel. W e do, however, modify
the algorithm slightly, as will be explained in Section
4.
The POCKET software takes PDB files as a data
source, and identifies and displays pockets in the 3D
structures. Multiple proteins can be inputted to allow
studies on pockets formed by several proteins
interacting. The viewer can select a pocket and view
it in greater detail. The idea is that once a pocket has
been found, other graphics programs can be used to
position substrates in the pocket.

where S is the surface, x is the x component of the
vector from the origin to the surface element, and n is
the normal to the surface element. Since the surface
consists of a finite set of triangles, the integral is found
by summing the scalar products.

3. The Boundary Representation
Technique
Having identified an indentation or open pocket we
now attempt to store a representation of this. The
representation we use should uniquely identify the
piecewise planar approximation and should be such
that the storage space is minimal. The boundary
representation technique given in [6] is the basis for
this part of the method.
The representation technique also involves a
modification of the marching cubes algorithm.
However, whereas the basic marching cubes algorithm
gives a representation of every cube formed by the
regular mesh, the boundary technique only represents
those cubes through which the surface of the object, in
this case the protein, passes. The crux of the method
relies upon recognising the way in which the
approximation to the surface passes through a
particular cube. Using this information, we can
establish every direction that the surface can take. We
give each of the six faces an index from 1 to 6 and
name the faces through which the surface intersects
the cube, exit faces. Using the exit faces, we only
have to find a single cube on the boundary of the
object. Each time we encounter a cube for which all
the exit faces have not yet been considered, we find
the cube situated through the face of lowest index.
Once every exit face has been considered, the
algorithm terminates and the boundary representation
is complete.
Using this method on the section of the protein that
has been found using the identification procedure, we
can precisely represent the approximation to the
pocket. The representation of the pocket is in the form
of a directed, labelled graph; it is a sub-graph of the
graph used to represent the entire protein. An example
of a section of the surface of a protein is given below:
In Figure 1, any mesh point with a heavy black
circle is assigned a value of 1, all others value of 0.

2.1 The Marching Cubes Representation
Having taken an input of a PDB file, a new
representation of the data is used. That representation
is based upon a modification of the Marching Cubes
algorithm. The entire space that is occupied by the
protein, or proteins, is considered to be divided by a
regular mesh. This mesh forms a series of cubes over
the space. Each mesh point is considered in turn to
see if it lies inside or on the boundary of any sphere of
radius 3A centred at any of the atomic centres in the
PDB file. Any such mesh point is assigned a value of
I ; all other mesh points are assigned a value of 0.
Using these mesh points 8 points, four from each of
two successive layers, can be used to define the
vertices of a cube. For a given cube, we assign each
vertex of the cube a unique weighting from 2', 2', 22,
. . ., 2'. Using this weighting, we can uniquely identify
the way in which the approximation to the surface
passes through that cube by multiplying the density at
each vertex by the appropriate weighting, and
summing the subsequent values for each of the 8
vertices. For each cube value there is a piecewise
planar approximation to the surface of the object,
consisting of triangular plane segments.

2.2 The Pocket Volume
The POCKET procedure also returns the value of
the volume of any particular pocket selected. The
method used for this is the Divergence Theorem that
transforms a surface integral into a volume integral.

158

modified to remove such pockets from the list of
potential docking sites.
Another problem with the POCKET algorithm
arises when using the divergence theorem. The
problem with using the divergence theorem is that it
only works on closed surfaces. As we have mentioned
already, we eliminate any such pockets from
consideration. Thus the usefulness of this technique is
at best very limited, unless “artificial” closures are
considered, in order to approximate the volume of an
open pocket. A further limitation for use of the
program is that it only runs on Silicon Graphics
systems.
Once we have identified those pockets that we
deem suitable for docking, we need to consider
representing them.
The boundary representation
technique can be useful here but has limitations. The
way in which the boundary representation can be used
is by noticing that if we have the representation of a
pocket, then the complement of that pocket will fit
precisely into the pocket. By the complement of a
pocket, we mean that representation in which each
cube value is exactly 255 minus cube value in the
original representation.
We can compare the
representation of the complement to a boundary
representation of a potential binding substrate.
However, there are considerations that need to be
understood. Due to the fact that we are actually
dealing with the physical docking of a substrate into a
docking site, we must ensure that there is not a spacesharing violation. By this we mean that while a
substrate may be able to dock locally into a pocket,
globally there may not physically be space for the
docking; the substrate and protein may both occupy a
single region in three dimentional spacespace. This
problem was analysed in the case of two dimensions
in [ 7 ] . The solution in three-dimensions follows a
similar argument.
Effectively the substrate and protein are
reconstructed using a common centre of universe.
Cases in which both occupy the same region of space
can then be seen easily.

Figure 1. An example of the data given over the
mesh
A sub-graph of the corresponding
representation is shown in Figure 2.

graphical

4. The Proposed Algorithm
The first algorithm that we present is a method that
utilises the ideas in both papers [4] and [6]. However,
the algorithms as they stand presently do not meet our
requirements and so must be: modified.
There are a number of problems with the approach
used in [4] and these must be addressed before we can
continue. The first is that there is only so much
information about the pocket that can be ascertained
by the human eye. A much more satisfactory
approach would be to ha\re an exact mathematical
representation of the first order approximation to the
pocket. This is a far more rigorous approach to the
analysis of the pocket.
The second problem is that POCKET identifies
pockets that may be fully bound by the protein.
That is, it is effectively completely isolated from
the exterior of the protein. While it is possible to use
graphical programs to simulate the placement of
substrates into such pockets, there is no physical way
that a substrate could actually break into this isolated
region. For this reason, the POCKET algorithm is

159

........

...............

4

14
1‘

6

.............

3

...............

6

79

...............
1

Figure 2. The graph represents of a section of the boundary of an object. In the graph, edges connect
adjacent cubes through which the surface of the object passes. The node numbers are the cube values
that define how the surface passes through that cube. The numbers at the end of the edges represent
the faces through which the surface of the object passes.

A further issue that requires consideration also arises
from the fact that this is actually a real, physical
problem. The issue is that of the “neck” of a pocket.
While the algorithm presented so far will identify and
represent potential binding sites, there is a further class
of pocket that we need to eliminate from consideration.
T o describe the class of pocket we consider an analogy.
If we consider a standard wine bottle and a piece of ice
of the shape that would be created if we froze water in
the bottle, then evidently the two would fit together
perfectly. However, if the ice were initially outside the

wine bottle, there is no way the two could be placed to
give a perfect fit without changing the physical nature of
the piece of ice. The problem is because the neck is not
wide enough to allow the ice to pass through. The same
problem can arise if we try to place a substrate into a
pocket with a narrow neck; physical properties prevent
the join. This has also been considered in twodimensions in [ 7 ] . Again a similar idea can be used in
three-dimensions.
We now have the blueprint for a method that
identifies a pocket, and then gives a spatial

160

representation of a first-order approximation to that
pocket, that is efficient in storage. We also have the
means to deal with the problems of space-sharing and
necks.
However, there are other fiictors that have physical
importance when attempting binding, and we outline
them here. Factors that need to be considered as well as
volume and physical fitting of a molecule in a pocket are
charge and hydrophobicity. These determine the finer
details as to which parts of each surface (pocket and
molecule) are most likely to interact. An atom can be in
three possible states, positively charged, negatively
charged and uncharged (neutral). These interactions,
called electrostatic interactions, can be simplified to
predict that a positively charged atom will be attracted to
a negatively charged one, positively charged ones will
repel like positively charged ones, and the same will
occur with negatively charged ones. Neutral atoms can
be in proximity with other aioms without significant
repulsion or attraction.
Another important type of iinteraction is the dipoledipole interaction involving ch1:mical groups of a polar
nature. These are in effect smaller charges, distributed
along the length of a bond. It is possible for a group to
possess either a positive dipole tor a negative dipole.
Hydrophobicity is a measure of the relative attraction
of a group or compound in either a water (low
hydrophobicity), or lipid (high hydrophobicity)
environment. Hydrophobic interactions rely on small
hydrophobic (or oily) patches on the surface of proteins,
which when given the right conditions will bind to the
hydrophobic groups of the binding substrate.
We can use a modification of the boundary
representation technique, that not only stores a value for
the shape of the boundary through a cube, but also
details of the charge, polarity and hydrophobicity for the
cube. We then check for a substrate to bind with a
pocket in terms of shape primarily, then charge, polarity
and hydrophobicity.

chemical characteristics (charges, polarity
and
hydrophobicity) and predict binding events. Using all
these characteristics, prediction of whether a molecule
would fit the pocket in question can be based on volume,
shape, and appropriate chemical properties. The final
algorithm is to be converted into a piece of software
written in Delphi.

6. References
Donafee, A., Maple, C., (2000), Rotating Squares,
preprint.
Guex, N., Peitsch, M.C., (1997) SWISS-MODELand the
Swiss-PdbViewer:An environment for Cooperative
Protein Modelling, Electrophoresis, 18, 27 14-2723.
Heiden, W., Goetze, T., Brickman, J., (1993) Fast
generation of Molecular-Surfaces from 3D Data Fields
with an Enhanced Marching Cube Algorithm, Journal of
Computational Chemistry, 14,2,246-250.
Levitt, D.G., Banaszak, L.J., (1992) Pocket - A
Computer-Graphicsmethod for Identifying And
Displaying Protein Cavities and their Surrounding
Amino-acids, Journal of Molecular Graphics, 10,4, 229234.
Lorensen,W.E., Cline, H.E., (1987) Marching Cubes: A
High Resolution 3D surface Construction Algorithm,
Computer Graphics, 21,4, 163-169.
Maple, C., (2000), A Boundary Representation Technique
for Three-Dimensional Objects, preprint.
Maple, C., (2000), CO-planar Shape-FittingUsing the
Rotating Squares Algorithm , Proceedings of InfVis2000,
343-348.
Nagae, T., Agui, T., Nagahshi, H., (1993) Interpolation of
CT Slices for Laser Stereolithography,IEIEC
Transactions on Information Systems, 76,8,905-91 I .
Neshich, G.,Togawa, R., Vilella, W., Honig, B., (1998)
Sequence To and WithIN Graphics PDB viewer (STING
-PDB viewer), PDB Quarterly Newsletter, July 1998, 7
(electroniced.).
[ 101 Rosin, P.L., (1997) Techniques for Assessing Polygonal
Approximation to Curves, IEEE Transactions on Pattern
Analysis and Machine Intelligence, 19, 6,659-666.
[ I I ] Sayle, R.A., Milner-White, E.J., (1995) Rasmol:
Biomolecular Graphics For All, Trends in Biochemical
Science, 20,9, 374.
[12] Zhou, C., Shu, R.B., Kankanhalli, M.S., (1994) Handling
SmallFeatures in Isosurface Generation Using Marching
Cubes, Computers & Graphics, 18,6, 845-855.
[ 131 Zhou, Y.,Chen, W.H., Tang, Z.S., ( 1 995) An Elaborate
Ambiguity Detection Method For Constructing
Isosurfaces Within Tetrahedral Meshes, Computers &
Graphics, 19,3, 355-365.
[I41 Zhou, C.,Shu, R.B., Kankanhalli, M.S., (1995) Adaptive
marching Cubes, Visual Computer, 11,4, 202-217.

5. Summary
The proposed algorithm is based on the marching cubes
algorithm used by POCKET but takes the whole process
much further in terms of biologically relevant outputs.
The new program, working on i i PDB of a protein, will
search in slices through the 31) structure, looking for
characteristics that not only suggest a pocket, but will
also allow the entry and binding of a specific molecule.
In addition to identifying pockets, the new program will
represent cavities as a string, which describes the 3D
shape of the pocket, and which rnay be used to represent

161

