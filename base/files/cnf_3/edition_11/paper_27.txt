Representation of Moving Surfaces
Catalina Ibaiiez
Departmento de Ingenieria Elktrica
Divisih de Ciencias Bzisicas e Ingenieria
Universidad Aut6noma Metropolitana
Mkxico, D. F.09340

2. Rotations

Abstract
Our goal is to deal with a non rigid surface, for example lubricant around a ball interfaces between two
fluids and so on. W e then first describe how to approximate a movement and then how to interpolate such
approximating functions. Finally we present two alternatiues, global or local interpolation of the movements

A rotation around a point in an euclidean n dimensional space is given by a matrix n x n, an infinitesimal
rotation around such point is given by a skewsymmetric matrix also n x n . Beiing them respectively A and
M their relation is:

1. Introduction

knowing that:

As the subject of the quaternions is not very used
here are some generalities about them:
Remembering complex numbers z = z + i y where
22 - -1 we define quaternions analogously as:

Q = 40 + iqi + j q 2 + kq3

(1)

3. Exemple 2D

i 2 = j2= k 2 = i j k = -1

(2)

We consider an infinitesimal rotation in the euclidean plane:
It is given by a matrix type M of 2 x 2:

where

A unit quaternion is:

+ + q; + q; = 1

qg q;
It is represented as:

(4

4o = cos ( e / 2 )

the matrix [I]has the property that: [I]' = -[E21
where [ E k ] is the identity matrix for the dimension k
Evaluating the matrix exponential we have:

q1 = s1 sin (8/2)
q2 = s2 sin (8/2)

q3 = s3 sin (8/2)

The quaternion represents a rotation of angle 0
around the axis S I , s2, s3
The point x = z l i z2j x3k becomes
x =zli zzj
z3k
doing the transformation:

+

+

+

+

[A] = e'['] = cosOIEz] sin8[1] =

+

x = qxq

-sine
cos0

1

(9)
which is the well known rotation matrix in 2D
It is also the matrix representation of the Euler formula:

(4)

,a@

where ?j= 50 - zli - z z j - x 3 k is the conjugate of q

192

0-7695-1195-3/01
$10.000 2001 IEEE

cos0
sine

- cosetisin0

Now we consider a skewsymmetric matrix 4 x 4 , we
name it lMdl

1) An infinitesimal rotation in 3D is composed by
two infinitesimal rotations in 4D
2) A quaternion represents really a 4D rotation and
not a 3D rotation as thought before.
A rotation at the 4D space consists in two independent plane rotations in two mutually orthogonals. We
have t o note that by orthogonal planes in 4D we understand those such that every line in one is orthogonal
t o every other a t the other, that is not possible in 3D.
An infinitesimal rotation in 4D is given by:

where:

and
s:

+ s; + s;

:= 1

Beeing [SI a skewsymmetric m a t h of 3 x 3 it represents
an infinitesimal rotation in 3D and the same is [M4].
In this way the rotation matices
and
represent a finite rotation in E3 around the axis s =
(SI,s 2 , s3) with rotation angle -9
Ge shown in 1994 that :

, [ M ~ I= ,(e/2)[s+ie(e/2)[s-1

= ,~:e/2)[s-le(e/2)[s+1

it can be shown that:

here [T-]is the same as [S-] just changing s by t
We have now that the matrices:

(12)

where:

[HI =

[GI = ,5@[s+1

are matricial representations of quaternions similar t o
the ones above.
A 4D rotation of a point x to a point x is given by:

(13)
-s2
-s1

s1

0

s3

-5-2

-s3

0
x=

-s2

s1

0

SI

s2

s3

-s3

GXH

(19)

A quaternion pair G and H is called a D o u b l e
Quaternion
Note that:

(I4)

0

Ge also shown in 1994 (out of this context De Casteljau arrived t o the same conclusion in 1990) that:

A u n i t q u a t e r n i o n represents t w o plane rotat i o n s i n 4D space
T h i s r o t a t i o n s are of e q u a l a n g l e 6/2
The p r o d u c t of two r o t a t i o n s of equal d o u b l e
a n g l e [GI and [E] cancels the r o t a t i o n s i n one
of the planes and d o u b l e s the r o t a t i o n s in the
other so i t becomes a r o t a t i o n i n 3D w i t h angle

e

In Geography, small traslations on Earth's surface
are considered as 2D when they are really 3D rotations.
So, how big must be the sphere in 4D to be 3D for
all purposes?
For a specified level of error 5 and an upper bound
L the radius of the sphere in 4D, R is:

this matrix is associated with the quaternion:
G = cos

(i)+ (i)
sin

and e(e/z)[s-l
quaternion:
G = cos

(sli

+ s 2 j + s3k)

(16)

is associated with the conjugate

R=-

(i) (;)
- sin

L

61/2

(sli

+ s g j + s3k)

(20)

A traslation in 3D , be d to be represented in 4D
should be approximated by a rotation of angle Q such
that the limit sin@ -+ @ beeing @ = d / R .

(17)

Here we have two important conclusions:

193

As q5 is the angle of the rotation represented by the
quaternion this represents a variable rotation around a
fixed (z,y, z ) axis.
4 can be of course, a wavelet, in this case q5 E L2(IR).
Now think that we have a rotating object from which
we have the angular velocity at several instants we can
reconstruct its movement using wavelets as described
above. Of course in a case like this we are going t o use
the wavelet as a spline following Chui:

The double quaternion that represents such rotation
is:

D = cos (Q/2)

+ sin (S/2)u

(211

where U is the unit vector in the direction of the
traslation
The displacement may be represented by the double
quaternion (D,
The rotation may be represented by the double
quaternion (Q, Q) and as we have the associative and
distributive property a combined movement of rotation
and traslation in 3D is given by a double quaternion
G* formed by two unit quaternions G and H such that:

n)

(24)
where since Qm is the product of two polynomial
symbols the sequence { q n } is the convolution of these
two polynomial coefficient sequences:

4. Interpolation
Reconstructions of movements given by several positions of a rigid body had been done by Juttler and others using dual quaternions and quaternionic B spline.
Following that idea we show that more complex things
may be represented (as moving surfaces) using instead
of splines or quaternionic polynomials, quaternionic
wavelets.
Consider for example the case of a sphere and a surface moving over it:
Let S be a surface over the unit sphere and let
P = ( p 1 , p 2...pn} be a set of given perturbations
each one with an also given trajectory, let its set be
t = { t l , t 2 ,...., t n } each of this perturbations has its
own law depending on time. 1 = { 1 1 , 1 2 , ...., I n } the surface S must interpolate 1 at any time.
We are going t o express the set t by a set of unit
quaternions and the perturbations also by another set
of quaternions, multiplying them we have now the expression of a moving perturbation. MP, = qt * q l where
* stands for the quaternionic multiplication.
What we want to know is the state of perturbation,
first of a static point, different from the above at any
time as well as the same state of perturbation of the
point moving in a given trajectory
The first idea that comes t o the mind is to charge
the perturbation to the scalar or to the vectorial part.
The scalar
Let U = { u O , ~ 1 , 2 1 2 U, S } be a quaternionic function
as the quaternion is represented by

. .

(25)
The vectorial
The same may be done with the coefficients ( x ,y, z )
of the vectorial part that will represent changes on the
direction of the axis or also dilations of the axis.
Movement is obtained in this case by the variation
of each source or sink (at the data points) and interpolation between them may be done using quaternionic
polynomial b-spline or cardinal quaternionic wavelet
splines.
To understand the following, we must first introduce
the Teodorescu transform:

where
e(.)

=

1

E ( X )

--

Crn (x(n-1

(27)

J,

w(z) = 1x1

(28)

3

x = x- = C x a e a

(29)

a=1

We will define, following Guerlebeck[S], a H-regular
quaternionic spline as

{cos 4, z sin 4, y sin 4, z sin 4}
Note that such splines are monogenic functions,
monogenic functions are the generalization of harmonic
functions so s p are monogenic polynomials.

where q5 = f ( t ) and f ( t ) is a function of a real variable t (not necesarily the time).

194

Let now % be the space of monogenic polynomials on IH this will be our counterpart t o the usual
trivariate polynomials used on harmonic functions.
The equivalent to the characteristic of homogeneicity
(p(Xz,Ay, Az)OAdp(s, y, z ) will be following Delanghe[8]
the total analycity of our quaternionic polynomials.
A quaternionic regular polynomial has the form:

Q(u7U) = [1 -

U] Q1

*

[Qoo

Qoi]

Qio

Qii

[;"'I

However, we must go deeply in some interesting
properties:
We can represent the surface as one generated by
an envolvent plane and then apply a transformation
represented by another quaternion t o its grid:
m

Q ( u , v )=

where:

c
n

Qi

* Rlc,iBkm(~)Bln(v)

k=O I=O

where Q1 is the transformation quaternion, it can
be modified into

where {eO,e1,ez,e3} is a basis of IH and z =
x,e, and e: = eo and eze3 ie3ez = -26,,
Movement is obtained in this case by the variation
of each source or sink (at the data points) and interpolation between them may be done using quaternionic
polynomial b-spline or cardinal quaternionic wavelet
splines.
Properties of the moving surface may be represented
in a Finite Elements environment

m

k=O 1=0

in order t o represent a different transformation applied to every control point.
Now suppose we have again our set of perturbations
each one represented by a quaternionic function. This
set will induce a motion in the space that will represent
a moving surface. The movement of the surface will
depend on the variation of the quaternionic functions
of control.

5. Other point of view
We can take from CAGD B-Spline surfaces, defining
it by bilinear quaternion interpolation and then move
the control points using double quaternions as follows:
We have a bilinear De Castel.lau quaternionic algorithm defined by:

Q ( u , w ) = [l - U U ] [ Q o o
Qio

n

6. Algorithm
1) Convert the rotation matrix 3 x 3 into its quaternionic representation Q and consider the traslation as
the vector d = ( d l , dz, d 3 ) . We do this at each coordinate system.
2) Select an upper limit L of the dimensions of the
workspace and a limit b of error tolerance for the position. We take the sphere radius in 4D as:

Qoi] [ l ; ~ ]
Qii

Where all Q are quaternions, the ones with subscripts are the "control" ones.
We can either introduce four quaternions, one for
each of the control net, or do it in pairs or multiply
them all by only one and obtain a rigid movement of
the surface.

3) Approximate the traslation in 3D, d by the rotation in 4D:

D = cos (*/2)
Q*(u,

W) =

[I - U U ]

*Qi
[z::*Q3

Qoi*Q2
Qii*Q4]

1-v

[ ]

4) Calculate the double quaternion G*
5)We calculate the distance between two sucesive
movements i and i 1 as the ones between the respective components of the double quaternions:

+

or

Q(u,w)

=

[l - U U ]

Qoo*Qi

Qoi*Qz

[QIo*QI

Qii*Qz]

+ sin (Q/2)u

1-v

=

[ ]

(G,, Gi+i) p,

=

COS-^ (H,, H,+i)

Such angles define the sequence of nodes needed for
any scheme of interpolation.

or

195

6) We use double quaternion wavelets (with B
splines as scaling function) t o interpolate the unit
quaternions of each movement.
7) Once we have the G and H interpolated we recover Q and d by:

Q = (G + H ) / ( ~ C O S ~ )

where: y = (1/2) cosp1 (G . H )
8) To obtain the homogeneous transform the quaternion Q is converted in the rotation matrix of 3 x 3 and
it is multiplied with the traslation vector d

7 References
[l], Delanghe R Brackx F Sommen F, ”Clifford
Analysis” , Pitman advanced publishing program, 1982
[2], Ge QJ, Varsheny A, Menon JP,Chang, Ch F ,
” Double Quaternions for motion interpolation” , Proceedings of the 1998 ASME Design Engineering technical conference, January, 1998
[3], Juttler B , ” Visualization of moving objects
using dual quaternion curves” , Comput and graphics, January, Numb 3, 1994, volume ”18”, pages ”315326” ,
[4], Sirchia M, Kang D, Ge QJ, ” Kinematically generated dual tensor product surfaces”, Proceedings of
the 1998 ASME Design Engineering technical conference, 1998,
[5], Guerlebeck Klaus and Sprossig Wolfang , ”
Quaternion and Clifford Calculus for Phycisists and
Engineers”, J Wiley, NY, 1998

196

