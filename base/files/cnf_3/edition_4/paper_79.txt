12th International Conference Information Visualisation

Building the Mega-Collaboration Interface:
Behavioral, Cultural, and Cognitive Factors in Visualization Support
Christine M. Newlon, Anthony Faiola, Karl F. MacDorman
Indiana University School of Informatics
{cnewlon, afaiola, kmacdorm}@iupui.edu
process the tool is designed to support. Section 4 offers a
detailed discussion of tool design considerations.

Abstract

Technology has enabled mega-collaboration on an
unprecedented scale. A tool is needed to coordinate these
activities and link them to government response efforts.
However, in defining and responding to problems,
teammates need to be able to visualize each other’s
mental models. The tool must encourage the team to
advance promptly through team “forming, norming,
storming, and performing.” Finally, it must help
individual teams visualize efficiently the “big picture,”
using agents to enhance the process. The usability of a
prototype mega-collaboration interface has been tested,
the second generation interface is being implemented,
and a novel agent-based interface is being planned.

2. The Mega-Collaboration Model Emerges
Recent years have seen the growth of two divergent
empowerment models for confronting disasters and other
societal challenges. The first is a top-down, single-chainof-command model, exemplified in the United States by
the National Incident Management System (NIMS.) The
second is a bottom-up, community-based collaboration
model, empowered by information and communication
technology—the mega-collaboration model. [18]
While Congress mandated NIMS use for disaster
response in 2002 [20], mega-collaboration has grown
rapidly. Hastily formed networks (HFNs) coordinating
immense humanitarian responses were in evidence
following the World Trade Center attack, the Indian
Ocean tsunami, the Pakistani earthquake, and Hurricane
Katrina. [5] The months after Katrina’s landfall saw a
massive flow of information through hundreds of
thousands of blogs, listbots, and bulletin boards,
soliciting resources from donors and channeling them to
victims. [17]
Unfortunately, these two models have not worked
well together. Divergent empowerment models result in
divergent organizational cultures, methods, and
outcomes. During Hurricane Katrina, the megacollaboration model succeeded where the NIMS model
had failed. [17] NIMS functioned poorly in situations
with many victims or volunteers. [20] Neither model is
necessarily sufficient to provide complete disaster
recovery, but with no easy way to pull together the topdown and the bottom-up activities, their combination
may add to the chaos instead of reducing it.

Keywords— Computer-mediated communication,
data grid, disaster recovery, human-computer
interaction, mental models, treemap

1. Introduction
Mega-collaboration denotes the emergence of vast
numbers of ordinary citizens, empowered by information
and communications technology (ICT), coming together
to tackle tough, complex problems. Although this kind of
collaborative project forms to confront any large-scale
problem, the phenomenon is most dramatically manifest
in disaster response. A specification of a tool to support
mega-collaboration was outlined in 2006. [17] A major
goal was to enable the coordination of citizen-generated
information with that of the formal response effort. [20]
The main idea behind the design is that a response
effort can be divided among dynamically formed subteams with the aid of web-based software agents. Each
sub-team can develop its own model to define its part of
the problem. Sub-team representatives can then
consolidate these models in agent-facilitated comparemerge sessions, thus enabling large teams to agree on a
problem definition and coordinate effective action. The
information developed by this method can be
dynamically organized into a shared knowledge base to
link the public’s mega-collaboration to the government’s
command-and-control structures.
HCI visualization techniques must support frontend
processes, while agents support backend processes. This
paper examines prototype interfaces and the role of
agents. The next section discusses the emergence of
mega-collaboration and why a support tool is needed.
Section 3 examines the functional dynamics of the

1550-6037/08 $25.00 © 2008 IEEE
DOI 10.1109/IV.2008.41

3. Dynamics of Mega-Collaboration
A support tool could help to coordinate these two
approaches. To develop, however, a device that can
visualize these activities through of a user interface, we
must first understand the dynamics of megacollaboration and the cognitive processes involved in it.

3.1. Emergent Goals
In a top-down organizational structure, the head
decides on a goal and initiates a “chain of command”
that can be many layers deep. [14] The mega-

509

collaboration model, however, empowers people through
a bottom-up process. The power to act is spontaneously
generated by groups of people working together. Both
top-down and bottom-up methods are based on shared
goals. However, for top-down methods, the goal is
elaborated from the vision of the head; for bottom-up
models, it emerges from the visions of many people. To
understand how to support the bottom-up process, we
need a clear picture of how bottom-up organization
happens, viewed from individual and group perspectives.

this, detailing levels of interaction similar to Tuckman’s
classic observations on team development. [28]
When encountering a dangerous situation, an
individual’s course of action is usually motivated by
survival and a desire to help others. [10][15] This causes
the individual to reach out to others to obtain or give
information, thus arriving at the first level of interaction,
which Rauterberg [22] calls informing. As the
individuals exchange information, they must make a
trade-off between entering into competition or
collaboration. [22] Although competition may be a
common choice in a MMORPG, in a real emergency,
collaboration is typical, though competition does occur
during mass panics. [10][15] Once individuals choose to
collaborate, they achieve the next level of interaction,
coalition, in which they agree to support each other. This
stage is the “forming phase” of the team. [28]
As the teammates get acquainted and begin to work
out their relationship, they reach the next level of
interaction, coordination, in which they share resources,
but still lack common goals. At this stage the purpose of
the team is relatively undefined, [1][22] and cultural
differences can be an issue. If teammates have different
expectations, they will have to negotiate common ground
or the team will disintegrate. [2] A support tool,
however, can help at this stage. For example, Ess and
Sudweeks [8] and Hewling [11] describe how online
teammates from different cultures engage in an ongoing
process of negotiation to generate a new “third” culture
constructed from the participants’ online encounters.
Based upon the forming of this “third” culture, the
team’s agreement on both its purpose and common set of
goals leads to the next level of interaction, called
collaborating. At this level, the participants have
collectively attained the same goals, but have different
roles, which are individually assessed. [22] The team
passes through two stages of development, because
collaboration may be adversarial or cooperative,
depending on whether the participants are attempting to
maximize individual or group outcomes. [13]
The first is an often turbulent “storming phase”
identified by Tuckman [28], in which the team members
are in adversarial mode as they argue their way through
defining team rules and roles. [1] However, to achieve
efficiency, the individuals must develop skill at
harnessing each other’s expertise to accomplish the task
at hand. [13] To do this, individuals need awareness
[7]—an understanding of the activities of others, which
provides a context for one’s own activity. Continually
updated awareness lets teammates move easily between
close to loose collaboration as the situation demands. [7]
A shared team plan is also required, translating the goals,
roles, and awareness into a set of behavioral norms that
governs the moment-by-moment operations of the team.
[13] As the team works out its issues, it enters the
second, “norming phase” [28], in which competition
turns into cooperation, as rules, roles, and responsibilities
are understood, and the team’s decision-making process
is agreed on. [1]

3.2. Mental Modeling
Although mega-collaboration implies a massive set
of players in the conversation space, the interface must
support each player individually; it must support
problem-solving at the individual level by facilitating
mental modeling.
An individual encountering a problem attempts to
understand it by forming a mental model of its salient
aspects. The individual: 1) builds a system of
analogies—a description of subjective entities and the
relations among them and 2) uses the model to imagine
alternative courses of action, to assess the imagined
outcomes of each, and to select the best one. [4] Expert
modelers break large problems into smaller pieces,
developing models of each. This allows them to move
between the levels of the decomposed problem,
developing each model based on experience with other
parts of the problem.
Expert modelers increase their cognitive capacity by
breaking information into chunks, which reduces its load
on working memory. They anchor aspects of their mental
models as external visualizations, since comparing
mental images and external figures lets them determine
whether items are missing or have been mistakenly
included. [4] To support mega-collaboration, the tool
should first support the visualization of this mental
modeling process.

3.3. Teaming
Even though mega-collaboration refers to a massive
set of players, decision-making teams must be much
smaller to bring discussions to a close. Unfortunately, as
the Katrina response revealed, it is one thing to be a
group of individuals and another to be a team. The
process of spontaneously forming bottom-up teams
becomes increasingly difficult as the conversation space
widens. Cultural barriers can make it especially hard.
[11][21] Denning [5] predicts they will be a persistent
problem for the HFNs tackling a disaster. Therefore, the
tool must support group problem-solving by facilitating
the spontaneous formation of small teams and the
negotiation of team activities. This is a process with
particular visualization needs.
The bottom-up emergence of teamwork across the
Internet can be illustrated by the way people form
spontaneous teams in massively multiplayer online role
playing games (MMORPG). Rauterberg [22] studied

510

Once the team becomes proficient at its roles and
processes, it moves to the next level of interaction,
cooperating, in which participants subordinate their
individual interests and goals, and work together to reach
a common goal, with decisions carried out together.
Here, at what Tuckman calls the “performing stage”
[28], the members are a fully functioning team, with the
ability to constructively criticize each other and work
through conflicts. [1] One sign of this is the members’
willingness to switch roles.

The class structure of the tasks, including relations
between subtasks, must be represented. These are
decomposition level, sequence, selection, and iteration. It
is necessary to follow the process flow of work objects
as they pass through the domain from role to role, and
from task to task. [20] Types of variables that might need
to be recorded
include function,
structure,
dimensionality, degree of certainty, temporal reference,
degree of generality, degree of closure, and degree of
quantification. [5] Most coordination requires cross
comparison, so the support of matrix views will be
important. A longer-term goal will be giving the team the
ability to define its own data input and data output
widgets.
The interface of our prototype currently addresses
the requirements of mental model building with an
expanding entry form (Fig. 1) to help the modeler
maintain a visualization of the hierarchical sub-models.
The entry form lets the modeler give each entity a name
and a text description. It also permits the addition of
unstructured lists of attributes to each entity, and ensures

3.4. Scaling Up
To move to the next level of functionality, virtual
teams forming separately have to be able to find each
other in cyberspace. Crisis situations make this harder.
People may lack the time needed to search the Web for
other forming teams. However, the tool could perform
this function by using autonomous software agents to
monitor the emerging conversation space on the Web for
similarities. Each human team could spawn an agent that
detected the formation of other human teams, analyzed
their developing models, and formed agent teams with
the agents of teams that had similar models. [23] Agents
could then monitor for synergistic or detrimental
interactions between sub-teams and alert their members
of the need to coordinate.

List the first role that must be filled in order to
complete this task.
Name and brief description.

Event1 Goal1 Task1 Role1
Name driver
Description

4. Implications for the Interface

bring materials

We have developed a mega-collaboration prototype,
written in AJAX, PHP, and MySQL [16] with which to
examine the implications of collaboration dynamics.

Update role

4.1. The Mental Modeling Interface

Delete role

Figure 1 Expanding Form – Currently in Use

The information in a developing mental model must
be viewed in a number of different contexts, each a type
of hierarchy. Together, these individual hierarchies form
a complex network. The object-oriented paradigm [3]
offers a couple of clear advantages as a method to
support visualization of this network. First, the paradigm
was designed with exactly this problem in mind.
Second, it will be easier to interface the resulting mental
models with other software tools if the underlying
paradigm of both is the same.
Therefore, we can assume that the model
visualization interface will need to describe: 1) the parts
of a decomposed entity (its class structure), 2) specific
instances of the entity’s general categories (its object
structure), 3) the relations among the physical
components of the entity (its module structure), and 4)
the relations among the dynamic components of the
entity (its process structure).
More specifically, the items of information that need
to be defined are: 1) the domain in which an entity exists,
2) the goals of the entity, 3) the tasks necessary to
achieve the goals, 4) roles and their task assignments,
and 5) the team players who will fill those roles.

the modeler defines the relations among the entities.
However, the current entry form is simplistic compared
to the specifications listed above. Not surprisingly, when
we conducted usability testing, the test participants
struggled with it.
The prototype also provides a treemap (Fig. 2) to
visualize the model by showing the entities at each level,
and enabling the modeler to click up and down the
hierarchy. However, the prototype’s treemap does not
perform chunking by visually representing both the
divisions and the recursive subdivisions of each
category. [12][27] As a result, it is more memory
intensive for our test participants than we had hoped.
We have conducted testing on 23 participants to
date, and our conclusion is that data tree and data grid
methods of entry will solve both problems. In particular,
a data tree (Fig. 3) will allow more flexibility in
describing the hierarchy, because icons can be used to
denote different types of entities. The example illustrates
the model of a test participant, showing how much easier
it is to see discrepancies.

511

Drill Down
Robinson

Smith
House

Gather
Materials
For Job

Jones House

Deliver
Materials

Start Construction Work

Figure 2 Tree Map – Not Well Received

Add Class

Add Object Add Process Add Module Add Attribute

Event
New
Action
New
Matrix
Event Class
Event1 (Wind Storm Damage)
Event1a (Robinson: Patch roof damage)
Goal Class
Goal1 (Transport: Move materials to the site)
Task Class
Task1 (Gather Supplies)
List1 (Supplies)
Task2 (Move Materials to Site: Drive truck to site)
Role Class
Role1 (Driver: Someone at the wheel)
List1 (Driver)
Event1b (Jones House: Repair kitchen and siding)
Goal Class
Goal1a (Gather Materials for Job)
List1 (Materials)
Goal1b (Deliver Materials: Get the stuff there)
Goal1c (Start Construction Work: Get the people together and assign a leader)
Event1c (Smith House: Repair damaged roof)
Goal Class
Goal1a (Gather Materials for Job)
List1 (Materials)
Goal1b (Deliver Materials: Truck it there)

Figure 3 Data Tree – Under Development
The current prototype interface supports the
negotiation process with script windows, a chat window,
and a timed negotiation protocol. The script encourages
each teammate to develop an individual model of the
problem, to compare this model with those of other
teammates, and to negotiate consolidation of the models
into a team model. The team then develops an action
plan based on this consolidated model. Although our
usability tests have identified a few shortcomings in this
protocol, in particular, in meeting the user’s need to

4.1. The Teaming Interface
A small amount of scripted guidance in the team’s
forming stage can jump-start team-building. [9] The
interface should provide such a script, encouraging the
teammates to create explicit mental models of the team’s
developing culture, and should also provide a structured
environment in which cultural negotiation can take place
and common ground can be established.

512

repeat segments and adjust time intervals, the interface
still shows promise in moving teammates from coalition
through coordination and collaboration to full
cooperation. Each test team succeeded in creating a
group model with the participation of each its members.
Another issue is how best to support team formation.
One model already available that addresses this type of
problem is the spontaneous teaming protocol of
MMORPGs. [22] Typically, someone will propose a
quest and issue a recruiting call in the game’s general
chat room. Those who want to participate will answer.
The nascent team will then establish its own private
conversation, and the quest will begin. Other recruiting
methods are the use of friends’ lists (e.g., from the major
social networking sites), and letting participants scan the
topics and teams already established and join a team
according to their preference. The interface should also
allow formation of restricted participation teams, with
assigned participants, via a chain-of-command structure.
The initial experimental interface will use the
MMORPG model, providing a general chat room where
prospective teammates can meet and create team chat
rooms. A name and description of each active team will
be shown in a data tree in the general chat room, serving
as a link to the team chat room for latecomers. In this
way, the experimental interface can support formation of
the initial coalition in addition to the later team phases.

As the collaboration progresses, the agent teams can
use preprogrammed rules to determine the conditions
under which the continually dividing and merging
streams of activity will be synchronized, allowing
humans on the meta-teams to renegotiate common views
of the data. [6] The agent network can also mediate the
division of teams that have grown too large.
Another function of the agent network can be
managing communications. The communication function
must deliver needed information and filter out the rest. In
a chaotic situation, such as a disaster response, the
amount and accuracy of the “pre-filtering” that
teammates do for each other can have a dramatic impact
on the efficiency of the team. [25]
Ideally, each individual should be able to calculate
the trade-off between the expected cost and value of
sending information. Scerri and Xu [25] demonstrated
that knowledge of four parameters can significantly
improve the ability to judge this trade-off. These are: 1)
who has recently asked for that type of information, 2)
who has recently sent information related to that type of
information, 3) who has paid a big reward for that type
of information, and 4) who has already sent the team
member that particular piece of information. The first
three parameters increase the expected value of sending
information, while the last parameter reduces it. The
agent network can monitor these parameters and use
them to direct the information flow.
Although the autonomous agents will work in the
background, communicating through messages, their
improvement on people’s ability to visualize the big
picture is expected to be dramatic. By managing the
synchronization and efficient communication of
information, the agents will expand people’s ability to
visualize by telling them where to look.

4.1. The Scaling Interface
The next step is for autonomous agents to assist
small teams to coalesce into mega-teams. Agents
spawned by the formation of each team can continually
scan the developing team models as they are added to the
shared database. The agents can then form teams of their
own with the agents of other human teams that have
similar team models, and coordinate the human teams.
Although similar agent technologies are already
available, their use has been limited because of an
inability to interface with real human organizations. [18]
We hope to address this gap with our mega-collaboration
support tool. We plan to extend prior research by Paul
Scerri on Carnegie Mellon University’s small-world
networking architecture. This has already been used
successfully to test the goal coordination of large agent
teams facing an emergency response scenario, and to
allocate roles and tasks to these teams [24][25][26].
However, by adding human teams that essentially serve
as methods of the agent teams, we believe that
significant functionality can be achieved.
The agent network will facilitate the mega-teambuilding process. The relationship of independently
forming teams to each other is similar to the relationship
of individuals to each other. In fact, if each team is
represented by an individual, it will actually be the
relationship of individuals to each other. Therefore, the
entire process, from coalition to cooperation, which we
have just examined, can happen whenever multiple
teams work together. A meta-team can be formed
through the facilitation of an agent-managed interface.

4.2. User-Centered Development Process
This project has moved through its inception stage
following a user-centered development regimen. We
completed the first stage of a usability study using paper
prototypes of the system, and followed it with a second
stage using an interactive prototype of the team
negotiation interface. Currently, we are completing an
experimental Web site that will feature another
generation of the interactive prototype, which we will
elaborate with an agent-driven mega-collaboration
interface. This fully functioning system will undergo a
range of user-centered heuristic inspections, task studies,
and questionnaires to further examine its usability.

Conclusion
Mega-collaboration is an emerging phenomenon,
driven by the growth of information and communication
technology. A new type of interface is called for to
efficiently coordinate these activities, linking them to
those managed in the traditional chain-of-command
manner. This interface must provide support by enabling
individuals to visualize their own mental models, and by

513

enabling them to visualize their teammates’ mental
models. It must support the developing team as it moves
from its first tentative coalition through coordination and
collaboration to its final achievement of full cooperation,
allowing the team’s developing internal culture to
become part of its negotiated team model. Finally, it
must enable individual teams to visualize efficiently the
big picture by providing agents to optimize the time and
attention given to the view.

[12] Johnson, B. and Schneiderman, B: 1991, Treemaps: a spacefilling approach to the visualization of hierarchic
information structures. Proceedings of the 2nd Conference
on Visualization '91, pages 284 – 291.
[13] Johnson, H. and Hyde, J: 2003, Towards modeling
individual and collaborative construction of jigsaws using
task knowledge structures (TKS). ACM Transactions on
Computer-Human Interaction (TOCHI), 10:4, 339 – 387.
[14] Lupia, A. 2001. "Delegation of Power: Agency Theory."
Published in Neil J. Smelser and Paul B. Baltes (eds.)
International Encyclopedia of the Social and Behavioral
Sciences 5: 3375 - 3377. Oxford, UK: Elsevier Science
Limited
[15] Mawson, A. (2005) Understanding mass panic. Psychiatry
68(2) 95-113.
[16] Newlon C. Developing a Tool for Mega-Collaboration.
(2007)
http://archive.nmc.org/events/2007summerconf/materials/M
ega-Collaboration.pdf.
[17] Newlon C, Faiola A. Support for mega-team collaboration
with cultural tools: Providing a framework for the dynamic
development of team culture. In Proc Cultural Attitudes
towards Communication and Technology (2006) 235-254.
[18] Newlon, C, MacDorman, K, and Scerri, P. (2007) A New
Model for Mega-Collaboration. Submitted for publication in
Proceedings of First International Workshop on HCI for
Emergencies, CHI 2008
[19] O’Neill, E. and Johnson, P: 2004, Participatory task
modelling: Users and developers modelling users’ tasks and
domains. ACM International Conference Proceeding Series,
Vol. 86 Proceedings of the 3rd Annual Conference on Task
Models and Diagrams, 67 – 74.
[20] Palen, L. & Liu, S., Citizen Communications in Crisis:
Anticipating a Future of ICT-Supported Public Participation.
In Proc CHI '07 (2007) 727-736.
[21] Raybourn, E: 1997, Computer game design: New directions
for intercultural simulation game designers. Developments
in Business Simulation and Experiential Exercises, 24.
http://www.cs.unm.edu/~raybourn/games.html.
[22] Rauterberg, M: 2003, Determinantes for collaboration in
networked multi-user games. Ryohei Nakatsu & Junichi
Hoshino (2003; eds.) Entertainment Computing-Technologies and Applications. IFIP Kluwer Academic
Publishers, 313-321.
[23] Scerri, P. (2007) Personal communication
[24] Scerri, P., Farinelli, A., Okamoto, S. and Tambe, M: 2004,
Allocating roles in extreme teams. Proceedings of the Third
International Joint Conference on Autonomous Agents and
Multiagent Systems - Volume 3, 1502 – 1503.
[25] Scerri, P., Xu, Y., Liao, E., Lai, J. and Sycara, K: 2004,
Scaling teamwork to very large teams. Proceedings of the
Third International Joint Conference on Autonomous
Agents and Multiagent Systems - Volume 2, 888 – 895.
[26] Scerri, P., Farinelli, A., Okamoto, S. and Tambe, M: 2005,
Allocating tasks in extreme teams. Proceedings of the fourth
international joint conference on Autonomous agents and
multiagent systems, 727 – 734.
[27] Schneiderman, B. Tree visualization with treemaps: 2-d
space-filling approach. ACM Transactions on Graphics,
Vol. 11, No. 1, January 1992, Pages 92-99.
[28] Tuckman, B. W: 1965, Developmental sequence in small
groups, Psychology Bulletin, 63, 384-399.

Acknowledgements
We would like to thank Paul Scerri, Shelly Farnham,
Jong-Hyeon Lee, Tim Murphy, Himalaya Patel, Dwi
Pramono, and Eon Song for their support.

References
[1]

Barnum, C.: 2000, Building a team for user-centered design.
Proceedings of IEEE Professional Communication Society
International Professional Communication Conference and
Proceedings of the 18th Annual ACM International
Conference on Computer Documentation, 325-332.
[2] Beers, P., Kirschner, P., Gijselaers, W., Boshuizen, H.
(2005) Coercing knowledge construction in collaborative
learning environments. Computer Support for Collaborative
Learning Proceedings of the 2005 conference on Computer
support for collaborative learning: learning 2005: the next 10
years! Taipei, Taiwan Pages: 8 - 17
[3] Booch, G., Maksimchuk, R., Engle, M., Young,
B.,Conallen, J., and Houston, K. (2007) Object-Oriented
Analysis and Design with Applications (3rd ed.). Boston:
Pearson Education, Inc.
[4] Crapo, A., Waisel, L., Wallace, W., Willemain, T. (2000)
Visualization and the Process of Modeling: A Cognitivetheoretic View. In Proc KDD '00 (2000) 218-226.
[5] Denning P. Hastily formed networks. Communications of
the ACM, 49, 4 (2006) 15-20.
[6] Dourish, P. 1995. “The parting of the ways: divergence, data
management and collaborative work.” Proceedings of the
Fourth European Conference on Computer-Supported
Cooperative Work. 215 – 230.
[7] Dourish, P. and Bellotti, V. 1992. “Awareness and
coordination in shared workspaces.” Proceedings of the
1992 ACM Conference on Computer-Supported
Cooperative Work. Pages: 107 – 114.
[8] Ess, C., and Sudweeks, F: 2005, Culture and computermediated communication: Toward new understandings.
Journal of Computer-Mediated Communication, 11(1),
article 9. http://jcmc.indiana.edu/vol11/issue1/ess.html.
[9] Farnham, S., Chesley, H., McGhee, D., Kawal, R. and
Landau, J: 2000, Structured online interactions: Improving
the decision-making of small discussion groups,
Proceedings of the 2000 ACM Conference on Computer
Supported Cooperative Work, 299-308.
[10] Fritz, C & Williams, H. (1957) The human being in
disasters: a research perspective. Annals of the American
Academy of Political and Social Science, (vol. 309, pp. 4251).
[11] Hewling, A: 2005, Culture in the online class: Using
message analysis to look beyond nationality-based frames of
reference. Journal of Computer-Mediated Communication,
11(1), http://jcmc.indiana.edu/vol11/issue1/hewling.html.

514

