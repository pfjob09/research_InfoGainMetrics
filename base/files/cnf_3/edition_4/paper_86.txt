12th International Conference Information Visualisation

A Practical Way for Projects to Visualize Design Rationale
Ian Alexander
Scenario Plus
{iany@scenarioplus.org.uk}
Abstract

representation in a database tool is a simple text field in a
column beside a requirement. In a document, rationale is
often relegated to italicised comments, or even to
undifferentiated introductory text, where it is hard to find
– so it is rarely traced to. In consequence, the reasons for
major project decisions – which requirements to include,
what design approaches to take, which risks to accept –
are documented in random ways, or in none.
Why is rationale such a Cinderella compared to
requirements and use cases?
• Firstly, rationale is clearly secondary to the thing
being justified or explained (requirements or design).
• Secondly, use cases and the requirements
components related to them – goals and scenarios –
have some explanatory power [3]. A scenario / use
case describes what people do, and each step has the
justification both that it enables the next step to take
place, and that it leads to achieving a goal (the title
of the use case). Unfortunately, these useful data
structures only cover part of the territory of
explaining and justifying. In particular, they do not
cover any kind of reasoning about the context of a
project, namely the environment.
Do projects need to document and visualize
rationale? The reasons for including a requirement in a
specification, or for taking a design decision, define the
purpose of that element, or sometimes of the entire
project. Those reasons encapsulate the project’s
knowledge of
• the risks they knew they were taking, and crucially
• the conditions under which the decisions they made
would hold, and when they would be wrong.
These are central to the success of any project.
Indeed, much of the work in starting a new project
consists in re-identifying these basic foundations: for
often, the required knowledge already exists somewhere,
but cannot be reused because it is too poorly
documented.
This paper therefore suggests a simple way of
describing and visualizing project rationale. Its main
purposes are to justify requirements and design
decisions, and to reduce the risk and cost associated with
unexplained decisions. It may also assist in requirement
and design reuse.
The rest of this paper is structured as follows.
Section 2 describes the proposed approach to
rationale modelling.
Section 3 presents some examples of rationale
model diagrams from a Transportation project.

Design rationale remains poorly explained and
rarely modelled on projects in industry. However, the
reasons for design decisions are important when a
specification has to be re-examined, eg for reuse, for
safety, for validation, or to satisfy stakeholders that a
project is justified. A practical notation must be
extremely simple but expressive, given industry’s
reluctance. This paper illustrates how a minimal boxand-arrow notation is sufficient for modelling Toulmin
argumentation, and helpful on transportation projects.
These critically depend on properly documented
rationale as they are subject to public inquiry. The use of
Dewar signposts to connect such rationale models to
changing events in the world is illustrated.
Keywords--- Rationale, Assumption, Argument,
Visualization, Toulmin Argumentation, Dewar
Signpost, Goal, Warrant, Rebuttal, Requirement,
Transportation

1. Introduction
As understood by people on industrial projects,
‘Requirements’ have gradually evolved in meaning from
a basic list of ‘The system shall’ statements, to a mix of
goals, scenarios, interface definitions and other
constraints. One cause of this was the introduction of use
cases [1]. This coincided with the start of research in
‘requirements engineering’ in the early 1990s, though
dissemination of research findings to industry still seems
slow.
A requirements specification is therefore starting to
be understood in industry as a network of inter-related
items, in other words as a data structure rather than a
document. This understanding has been encouraged by a
third development, the introduction of commercial
‘requirements management’ database tools. The market
leader, DOORS [2], for example, was launched in about
1993. A typical database contains a mix of requirements,
definitions, and scenarios, connected by all-important
traces (database links). Larger projects may build
elaborate databases including all the above, and also
goals, issues, risks, tests, and various analysis diagrams
such as flowcharts, class models and (design) structure
charts, connected by a rich pattern of traceability.
Rationale seems to be rather a poor relation to these
other requirements components. The most common

1550-6037/08 $25.00 © 2008 IEEE
DOI 10.1109/IV.2008.76

553

Section 4 makes some observations on the effect of
rationale modelling, based on the case study.
Section 5 compares the proposed approach with
other ways of handling rationale.

Proposal 2: Since Toulmin has shown that
arguments can with benefit be represented as diagrams
using arrows for chains of reasoning, let us draw
arguments as chains of text boxes (for Assumptions)
linked by labelled arrows (Warrant supporting optionally
labelled +; Rebuttal weakening labelled –).
Assumptions can be wrong (ie mistaken), or can
break (when the world changes). The intention here is to
describe arguments, both for and against a proposed
course of action, as objectively as possible. Different
stakeholders [6] may well hold some combinations of the
documented assumptions as subjective beliefs, but those
are essentially inaccessible to the project.
Dewar [5] proposes the use of Signposts to trigger
re-planning when important assumptions break. A
Signpost can be seen as a corrective to the basic
weakness of “substantial” argumentation compared to
classical reasoning: it can be or become wrong. By
monitoring conditions in the world that could cause
assumptions to break, Signposts reconnect rationale to
reality. The combination does not guarantee correctness,
but in the absence of mathematical certainty, it is the
next best thing.

2. Proposed Approach
This section describes the proposed approach and
defines the main terms used.

2.1. Approach
Classical reasoning is based on “certain” facts or
truths. But certainty is rare in industry. So, we can assert
that classical reasoning is rarely useful for reasoning in
industry.
Toulmin [4] was aware of this problem, and
proposed a structure of “substantial” argumentation for
practical use (Figure 1). A conclusion is broadly
supported (but not logically entailed) by Facts and a
Warrant, an argument that the conclusion holds given the
Facts. The Warrant in turn is broadly supported by a
Backing, which in turn may be a conclusion supported in
the same way as the first one. A conclusion may be
wrong; an argument tending to contradict it may be
provided as a Rebuttal, which in its turn may be a
conclusion with its own facts and warrants.

2.2. Definitions
Based on the treatment of rationale just described,
we can define a set of suitable terms with the following
meanings. Entries in Boldface are defined terms. Entries
in italics are (also) relationships.
Term
Assumption

Goal
Fact

Figure 1 Toulmin Argumentation
However persuasive this is, it is quite complicated –
it looks as if Toulmin argumentation demands 5 separate
types of item.
But all the individual items of reasoning (whether
they are initially labelled conclusion, fact, warrant,
backing, or rebuttal) are
1) uncertain (not logical tautologies)
2) can play different roles in relation to other items
of reasoning. For example, warrant w for
conclusion c could itself be the conclusion c2 of
another chain of reasoning, with warrant w2: ie,
w and c2 are alternative labels for the same
item. The same goes for backings, rebuttals, and
arguably also for facts.
Therefore, Toulmin arguments can be modelled with
just one type of item, “uncertain piece of
argumentation”. See the Case Study (section 3
below) for illustrations of how this works in
practice.
Proposal 1: Let us call Toulmin argumentation items
“Assumptions”.

Conclusion
Design
Decision
Signpost

Backing
Warrant
Rebuttal
Substantial

554

Definition
A piece of “substantial” argumentation
that people could take to be true: valid
in the sense that it has some persuasive
force
Something that somebody wants
An Assumption we believe to be very
certainly true (such as that somebody
has a specific Goal)
An Assumption that is supported by
other Assumptions in a model
A choice affecting the design of a
product that is supported by other
Assumptions in a model
An indicator that a project or business
needs to monitor the world for the
stated signs that an Assumption may
be about to break
An Assumption that supports another
Assumption (a Warrant or a Rebuttal)
by providing evidence for it
An Assumption that supports another
Assumption by arguing in its favour
An Assumption that weakens another
Assumption by arguing against it
(in Toulmin’s sense), relating honestly
but possibly mistakenly to things in the
world (as opposed to a logical platitude
which is certainly true)

supports

weakens
conflicts with

the search for trade-offs to resolve such conflicts as well
as possible (technically called ‘satisficing’ after Simon
[9], but known as optioneering in industry) is one of the
dominant requirement engineering activities on transport
projects, as Alexander [10] explains.

(relationship) indicating that the source
Assumption increases belief in the
target Assumption; can be written → +
(the + sign is optional)
(relationship) indicating that the source
Assumption decreases belief in the
target Assumption; can be written → –
(relationship) a bidirectional weakens
relationship between two Assumptions;
can be written ↔ –

The key point is that a Toulmin rationale can be
constructed using only Assumptions and relationships.
This can be supplemented with Signposts to tie a
project’s rationale to the state of the outside world.
It may also be helpful in some cases to show
stakeholders’ Goals directly (rather than somewhat
artificially translating these into Assumptions that the
goals hold), thus tying the rationale into other
requirements engineering models used on a project, such
as Stakeholder analyses [6] and Goal models.

A typical conflict is illustrated in Figure 2. Here, the
client has two principal goals for a new transit route, to
be operated with either articulated buses or trams. The
route is to be a modern Rapid Transit, to connect other
parts of the city’s transport network, and probably also (a
political goal) to show the city in a good light. The
transit is however also to be cost-effective; indeed, the
UK’s rules for appraising competing route options
demand that costs and benefits be assessed [8].

3. Case Study: Rationale for a
Transportation Project
This section relates to a project in a major transport
agency which is planning a Rapid Transit route to help
regenerate a depressed area of a city.
The major challenge is not design but the selection
of a workable route. Design is well covered in standards
and manuals, eg [7], but almost anywhere that a route
might run, there are difficulties. Opposition from
powerful stakeholders [6] and legal obstacles can be
expected if a route runs through the grounds of a school,
a historic building or attractive townscape, a protected
area of public open space, a nature reserve, a street
already crowded with traffic, or the parking spaces on
which retail businesses depend. Stakeholders including
householders, businesses and local governments may be
in favour if they feel they will benefit, or opposed if not.
Further difficulties arise from conflicts with other
services, if water and gas pipes and pumping stations, or
electrical cables, pylons or switchgear need to be moved.
Transportation has to compete for space in a crowded
city.
In addition, there is a strict regulatory framework
that demands fair evaluation of transport options on a
range of criteria including the environment, value for
money, safety, and effectiveness [8]. Proposals are
subject to lengthy and costly scrutiny in a process that
can easily lead to the failure of worthwhile schemes.
Under these conditions, it is essential that transport
schemes are not merely right but seen to be so.
Unworkable route options, for example, must not simply
be rejected: the reasons for dropping them must be
explained carefully and convincingly. The rationale for
each decision must be recorded and if need be defended.
A transport project thus forms an effective testbed
for rationale modelling. Goal conflicts are frequent, and

Figure 2 Analysis of a Requirements Conflict
(Whether a Transit Route Should be Fast or Not)

Figure 3 Analysis of a Method
(Optioneering for Cost-Effectiveness)
Figure 3 illustrates the use of a rationale model to
describe a process that may involve re-planning. It
defines the conventional “optioneering” method of
finding the best route for a transport scheme, with one
addition. Given the rules demanding cost-effectiveness, a
careful study is carried out with the purpose of finding
the route with the highest Benefit/Cost ratio. This
involves identifying all feasible routes – if a practicable
route is not considered, a challenge might be mounted at
public inquiry; each route is analysed for its costs and
benefits, and a winner is selected accordingly. We may
note in passing that not all impacts can be quantified or
put into financial terms [10].

555

What the conventional optioneering process does not
state is that the process itself is subject to the vagaries of
events in the world outside, notably economics and
politics. Figure 3 shows a Dewar-style ‘signpost’ which
indicates an event in the world that the project must
monitor. If the event occurs, it has a strong negative
impact on the project. The appropriate response is to reevaluate whether the proposed transport scheme remains
viable under the changed conditions. The signpost adds
resilience to the conventional process.

Hence, attempting to create a rationale modelling
approach that treats items as having fixed types, drawn
as different shapes and symbols, etc, according to their
roles in argumentation, is misguided. Treating all items
as assumptions (with varying degrees of certainty)
resolves the problem. A diagram can, as illustrated here,
provide multiple labels where this is helpful. A tool
could provide a switch to show or hide labels.

Signposting
Figure 3 shows how a signpost can be used to
monitor events in the world. A signpost always forces a
rethink, ie it explores a possible weakening of an
assumption. It seems natural to diagram this with a
negative arrow.
A signpost is a warning that a project needs to ‘come
up a level’ from the details of its own procedures and
timetable to observe the outside world. It can be seen as
a meta-level symbol, showing that it is not safe to treat a
business process such as optioneering as an isolated
activity: the roof may fall in; the world may intrude.

Figure 4 Resolving a Conflict
(Reasons for Choosing a Hybrid Route)

Overlap with Goal Modelling
The two input ‘facts’ on the left-hand side of Figures
2 and 4 both represent goals, so an overlap exists
between goal and rationale modelling. If we define a fact
as a soundly-based assumption (unlikely to change), then
a goal can be treated as a fact of the form “Stakeholder S
has the Goal G”. If we didn’t know exactly who owned
a goal, we’d be left with the naked fact “Goal G exists”.
Assumptions of this kind belong primarily in the goal
modelling domain, and should ideally be used only as
inputs in a rationale model, with a cross-reference to
their source “See Goals in section X”.
Other assumptions, such as the conclusions in Figure
2, are more or less disputable. There is perhaps a
spectrum of certainty in assumptions, running from quite
dependable facts through to quite tentative warrants and
conclusions.
While, therefore, a goal modeller can claim “oh, I
could put all that into a goal model”, he’s missing the
point. We exactly do not know if making the transit route
as direct as possible should be a project goal: that is an
assumption we need to challenge and clarify. In the case
of the transit project, the rationale needs to be
documented and agreed on, before we can safely say
“this is an agreed goal of this project”.
Conversely, when goals, design decisions etc are not
in dispute, there may be no need for a rationale model:
except that goals may be founded on unstated
assumptions, which may be mistaken or which may
break, undermining the project. The tacit assumption
“there must be a single route from A to B” is an example
of a possibly unnecessary constraint on a project.

Figure 4 illustrates a possible resolution to the
conflict described in Figure 2. Rather than assuming
(tacitly) that a single route must be chosen, the transit is
envisaged as a fast main route (direct from A to B), fed
with additional passengers by new links which may run
through new housing developments, commercial centres
and industrial estates. In this way the scheme can be both
fast and cost-effective, though the business case’s
benefit/cost analysis now has to combine the costs and
benefits of both main and feeder routes.
However, that approach will not work (“rebuttal”) if
stakeholders will only understand and accept a single
clear route. In practice, therefore, the route will probably
have to achieve a satisfactory compromise between
directness and serving as many people as possible by
running partly on main roads and partly through
residential and industrial/commercial areas.

4. Observations
Multiple Roles Per Item
Figure 2 illustrates how individual items in a
rationale model can play multiple roles (labelled in
italics). An item can be the conclusion of one line of
reasoning, the warrant for another, and the rebuttal for a
third. For instance, the box “Route should be as direct as
possible” is
• a conclusion with respect to the incoming goal/fact
that supports it;
• a warrant with respect to the conclusion/design
approach that derives from it;
• a rebuttal with respect to the conclusion that it is in
conflict with.

556

industrial perspective of the current paper may form a
small counterweight to that unbalanced contribution.
Perhaps the limited spread of rationale modelling
from the safety domain is because of the perceived cost
and complexity of learning and using the notations, and
the tools that support them. That complexity is
undesirable in general industrial use, where few
notations beyond the flowchart and the project plan are
really well accepted.

Grounds for Building a Rationale Model
There are several practical grounds for building a
rationale model:
1. when goals or other decisions conflict, and need to
be resolved by optioneering;
2. when stakeholders dispute the need for a scheme, or
object to details of it;
3. when unstated assumptions need to be explored.
Since this is hard to predict, this may mean “on
every project”, in some degree;
4. when a proposed solution must be justified by a
contractor to his client;
5. when decisions must be justified to a regulator, as
with
o a business case, as with a transport scheme (to
the public inquiry inspector, and ultimately to a
government minister)
o a safety case, as in aerospace, railway, or
nuclear power (to the aviation authorities, the
safety inspectorate, etc)
6. when requirements and design will be revisited, as
with reuse of features in a product line.

Toulmin

Alexander

Conclusion
Warrant,
Rebuttal,
Backing

Assumption

Fact
–

Signpost

CAE

GSN

Claim

Goal

Argument

Goal,
Argument

Evidence

Solution,
Context

–

–

Table 1: The Mapping Between Different
Rationale Modelling Constructs
This is not the place for an academic analysis of the
merits and structure of alternative rationale modelling
notations. However Table 1 shows the mapping of
constructs between the four notations mentioned here. It
is apparent that:
• there is no agreement on names for any of the
constructs, nor on how many are needed. The
notation presented here is intentionally minimal; it is
recognised that “Assumptions” can have varying
degrees of certainty attached, though even a “racing
certainty” does not have a truth-value of 1.
• CAE has the same problem as Toulmin, on which it
is ultimately based: claims, arguments and evidence
are not really fixed: what is a claim in one place is
an argument in another.
• GSN is less vulnerable to the multi-role problem,
since “goal” can play different roles; but despite that
useful simplification, GSN not CAE is the more
complex graphical notation.

Perhaps this wealth of possible grounds suggests
that many more projects should be capturing design
rationale than currently are doing so.

Resolving Goal Conflicts
Figure 4 shows how simply and naturally a rationale
model can display a proposed resolution to a goal
conflict. The two goals that led to the conflict are shown
to be able to support a hybrid route. A resolution of this
kind is a technological fix, ie the conflict was assumed to
exist because of the limited technologies perceived to be
available. Progress or increased awareness can then
resolve the conflict. This is another take on Toulmin’s
“substantial” reasoning: conclusions (“we have a
conflict”) are revisable in the light of fresh evidence.
True logical conflicts are not revisable, but they are
perhaps not as common as people think.

Comparison with Textual Rationale

5. Comparisons

Rationale is most often expressed as text. For
comparison, here is the argumentation of Figure 4,
written in the style of a typical transportation industry
optioneering report.
“On journey time reduction, it can be seen that
the Main Route (A) achieves a greater JTR (11
minutes) than either the Estates Route (B, 4 minutes)
or the Hybrid Route (C, 7 minutes). Therefore on
this criterion, route A has a significant advantage.
On patronage, in contrast, routes B and C have
an advantage over route A, due to their visiting
more residential areas as well as more workplaces
and commercial centres. It is difficult to quantify
this benefit, as without the route in place there are
relatively low flows today between these areas.
Conversely, route A may attract new flows from

Rationale modelling, along with related aspects of
project engineering like prioritisation and justification of
requirements and design decisions, has long been
somewhat neglected in general project practice, even if it
has received some academic attention, eg by Kirschner,
Buckingham Shum, Dutoit and others [11, 12, 16].

Comparison with Safety Case Rationale
Argumentation is routinely deployed in constructing
safety cases in the aerospace, railway and nuclear
industries, eg using Claims-Arguments-Evidence (CAE)
[13] and Goal Structuring Notation (GSN) [14].
However, it has hardly spread outside that realm, so it is
disappointing that [11] overlooks the safety domain. The

557

outside the study area by offering a rapid link from
north to south.
Route C would therefore seem to be favoured
over both A and B, on balance between these two
criteria. However, project opinion, confirmed by
consultation, is that the offering to stakeholders
must be a single route, excluding route C from
consideration.”
The textual account is discursive; it is quite
informal, and not hard to follow once the industry jargon
(eg JTR, flow) has been acquired. Without the visual
structure of Figure 4, the reader must pay quite close
attention to the text to build an understanding of the
underlying argument.
Steven Pinker [15] argues that the brain models
reasoning by simulating it with “naïve physics”: force A
(the warrant) overcomes resistance B (rebuttal). Toulmin
argumentation is evidently close enough to naïve physics
to feel like a natural way to express reasoning. A
Toulmin-based graphical notation provides a sharper
view of rationale than a text does, by showing directly
the parts of an argument and their connections.

•

especially in making them more resilient.
Explaining the reasons for requirement and design
decisions helps to determine relative priorities,
especially when these cannot readily be quantified
or costed.

Limits to Rationale Modelling
Rationale models are not needed everywhere. Even
on projects where some decisions deserve the full
treatment, other decisions may not. Rationale is worth
visualizing when a decision could be contested or
otherwise revisited, and the reasons for it could easily be
forgotten. Industry is a practical place; it values models
only for the service they can offer, not for their
cleverness.

Acknowledgements

6. Conclusions

I would like to thank my colleagues at work for their
patience, and my academic friends including Ljerka
Beus-Dukic and Olly Gotel for their encouragement for
writing down and explaining some of my ideas and
practices.

Merits of a Simple Notation

References

Academic attention has focussed either on pure
argumentation, eg [4, 11, 16], or on pure safety case
construction, eg [13, 14]. But there is a gap between
these for ordinary development project decision-making.
This paper suggests that there is a place for a far
simpler graphical notation than say GSN, that compactly
expresses the rationale for a project decision. It presents
a robust way of representing rationale for industry, based
on the thinking of Toulmin and Dewar. The notation
consists essentially of just two symbols – a box and an
arrow, optionally labelled with types, and optionally
supplemented with Dewar signposts. The resulting
diagrams are clear and uncluttered – indeed, they could
hardly be plainer.
In practice, transport projects have made widely
varying uses of rationale models. For example, one
project diagrammed traceability between its assessment
criteria and its objectives, showing support and possible
conflict. Another project used rationale diagrams
informally when assessing alternative design options.

[1]
[2]
[3]
[4]
[5]
[6]
[7]
[8]
[9]
[10]

Uses of Rationale Models

[11]

Rationale Models (RM) of the type described here
may be useful for several purposes:
• Figures 2 and 4 suggest that RM may be helpful in
clarifying and resolving requirements and design
conflicts. A rationale model would form the core
representation of a conflict, and would be worked on
and reasoned from in conflict resolution process,
involving fact-finding, workshops and negotiation.
• Figure 3 suggests that RM may also be helpful in
defining and justifying business processes, and

[12]
[13]
[14]

[15]
[16]

558

I. Jacobson, C. Magnus, J. Patrik, G. Övergaard. ObjectOriented Software Engineering: A Use Case Driven
Approach. Addison-Wesley. 1992.
DOORS url: http://www.telelogic.com
I.F. Alexander and N. Maiden. Scenarios, Stories, Use
Cases: Through the Systems Development Life Cycle.
Wiley, 2004.
S. Toulmin. The Uses of Argument. Cambridge. 1958.
J.A. Dewar. Assumption-Based Planning: a Tool for
Reducing Avoidable Surprises. Cambridge. 2002.
I.F. Alexander. A Taxonomy of Stakeholders: Human
Roles in System Development. Int’l J. of Technology and
Human Interaction, Vol 1, 1, 2005, pp 23-59.
Design Manual for Roads and Bridges url:
http://www.standardsforhighways.co.uk/dmrb/index.htm
Transport Analysis Guidance. February 2004.
Url: http://www.webtag .org.uk
H. Simon. The Sciences of the Artificial. MIT Press,
1969.
I.F. Alexander. Choosing a Tram Route: An Experience
in Trading-Off Constraints. Proceedings 15th IEEE
International Requirements Engineering Conference,
New Delhi, October 15-19, 2007, pp 350-355.
P.A. Kirschner, S.J. Buckingham Shum, C.S. Carr.
Visualizing Argumentation. Springer. 2003.
Compendium url: http://compendium.open.ac.uk/
Claims Arguments Evidence url: http://www.adelard.
com/web/hnav/ASCE/index.html
Goal Structuring Notation url: http://www.aitcnet.org/
AssuranceCases/Kelly%20and%20Weaver%20%20The%20Goal%20Structuring%20Notation%20%20A%20Safety%20Argument%20Notation.pdf
S. Pinker. The Stuff of Thought. Allen Lane. 2007.
A.H. Dutoit, R. McCall, I. Mistrik, B. Paech. Rationale
Management in Software Engineering. Springer. 2006.

