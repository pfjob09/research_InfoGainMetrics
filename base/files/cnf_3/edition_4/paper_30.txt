12th International Conference Information Visualisation

Visual Analytics presentation tools applied in HTML Documents
Mikael Jern, Jakob Rogstadius, Tobias Åström, Anders Ynnerman
VITA – Visualization Technology and Applications, Linkoping University, Sweden
mikael.jern, jakob.rogstadius, tobias.astrom, anders.ynneman@itn.liu.se

presentation tools that are natural complements to and
extend the EDA process beyond the deployment of
standard visualization techniques. Tools that integrate
analysis with presentation can streamline the process of
developing reports and improve the overall credibility of
the results and thereby save valuable time for the analyst
as well as the recipient of the analysts reports have thus
become urgent research topics.
In this paper we extend our previous research
[1,2,3,4,5] in this domain by introducing paradigms that
integrate educational text and interactive analysis-guided
Web-based visualization presentations in HTML
documents. The result is dynamic reports that can help
team members to share their understanding of unfolding
events and follow an author’s analytical reasoning
process via efficient collaboration of sharable interactive
visualization presentations. The foundation for the
reports are the EDA applications that can be developed
and customized using our existing and previously [6,7]
described
GeoAnalytics
Visualization
“GAV”
framework [6,7] and the included class library based on
the principles behind the Visual Analytics (VA). GAV
provides a comprehensive collection of highperformance interactive visualization components
based on state-of-the-art results from the InfoVis,
GeoVis and SciVis research domain. Furthermore,
GAV supports the storage of interactive events in the
analytical reasoning process through “memorized
interactive views” or snapshots. Events, such as
dynamic visual inquiries or highlighted outliers but also
coordinated linked views, can be saved at any time
during the interactive visualization process. The
snapshot task integrates tools for creating a single or a
continuous series of visualization captures which
together form a story that unfolds to the reader of the
report.
The goal of the herein presented research is to bring
the entire EDA scenario through the snapshot
mechanism into Web-enabled report formats (figure 2).
The normal contents of a static report, text and still
images, are extended with interactive visualization
(chapter 3), target data, snapshots or even a continuous
story of snapshots and integrated into an HTML
document structure (chapter 4).

Abstract
In this paper we present novel means to communicate
and present gained knowledge using semi-guided
interactive visualizations embedded in standard HTML
documents. The goal of the work is to let the analyst
(author) explore data and simultaneously save
important discoveries and thus enable collaboration and
sharing of gained insights over the Internet. The readers
of the document will benefit from receiving an integrated
and interactive document that can “coach” them in the
understanding and testing of hypotheses leading to
faster understanding and a higher confidence level in
the presented visual information. The approach is based
on the Visual Analytics (VA) toolkit (GAV), which also
provides a mechanism that supports the storage of
interactive events in an analytical reasoning process
through “memorized interactive visualization views” or
snapshots that can be saved at any time during an
explorative data analysis process. In a typical scenario
an application, comprised of GAV VA components, is
embedded in the HTML document together with target
data and the snapshots of discoveries. Any standard
HTML event, such as the user clicking a textual link or
an image can be used to instantiate a snapshot, creating
a link between a descriptive text and an interactive
visualization presentation. As the GAV application and
corresponding data are integrated with the HTML code,
residing on the client machine, hardware accelerated
graphics can be used to provide interactive performance
of demanding visualizations. We demonstrate the
potential of the developed methods in the context of
GeoAnalytics and molecular visualization scenarios.

1. Introduction
Developing new and improving existing methods for
explorative data analysis (EDA) has been the focus of
many research efforts in visualization over the past
decade. Less attention has, however, been given to the
integration of the EDA process with the production of
analysis results. The more recent research trends as
delineated in reports such as “Illuminating the Path” [8]
call for the development of communication and

1550-6037/08 $25.00 © 2008 IEEE
DOI 10.1109/IV.2008.22

200

Figure 1: The proposed method complies with the sense-making loop described in the VA “science of analytical reasoning” [8]
with seamless integrated tools supporting EDA, presentation and communication that all take place in a cohesive environment. An
analyst search, analyse and filter a database for information. Relevant data are extracted into an evidence file. The evidence thus laid out
may be cast into hypotheses or methods of structured analytical reasoning through descriptive text, hyperlinks to snapshots, storytelling,
and an embedded GAV application with attached target data - transformed into a presentation (knowledge, report).

We demonstrate the potential of our approach in the
context of a molecule map viewer application in which
the user visually specifies a known molecule and
through a 2D and 3D landscape analyzes the frequency
of adjacent molecules with the intent of investigating if
these possess the same properties as the initial target
molecule. This interactive visualization scenario
embedded in an HTML document demonstrates how an
analyst (author) can share knowledge with colleagues
(readers) about the potential molecules to be further
investigated. In this application it is shown that the
combination of a descriptive text with an interactive and
guided discovery process could dramatically improve
the educational aspect but also the credibility of the
presented results. The main contributions of the paper
are:
x

x

x

producing interactive electronic documents communicating and collaborating analytical
assessments to team members and public;

In an EDA story authoring process, the analyst can
explore data and simultaneously save important
snapshots of discoveries or even create a continuous
story of snapshots;
Snapshots record the status (attributes) of an EDA
experience (tasks, events, conditioning, views,
highlights, colour, etc) including queries, filter or
cluster operations which aids the visual
communication of gained insight and constructed
knowledge;
VA Framework for authors and developers

Figure 2: A dynamic HTML report with two embedded
applications: Scatter Matrix and Parallel Coordinates.

201

performance and seamless integration. Software
licensing also limited the web-based distribution of the
integrated applications.

2. Related work
The science of VA largely builds upon and extends
the successful development in several connected
disciplines and integrates the results into functioning
tools tailored to suit the application demands and the
analyst’s workflow. Despite the vast research efforts in
these underpinning disciplines comparatively little
research has been focused on the integration of
presentation and dissemination methods with the
analytical process. The VA research agenda
“Illuminating the Path” [8] addresses the need to
conduct research that enables the capture of the EDA
process into information packages that allow the
analysts to communicate their discovery and decision
recommendations. One example is the Oculus’ Sandbox
system [11] based on “nSpace” where the analysts see
and interact with information. Sandbox provides an
environment for the complete analysis workflow as well
as a platform for team collaboration. Another example is
the POLESTAR software developed by BAE Systems
[12]. They explored the potential for integrating their
knowledge discovery analytic tools with Microsoft
Word, inspired by an EC research project [3]
coordinated by the author of this paper. QuadriSpace
Corporation distributes a patented commercial product
“Component 3D” [13] targeted at the 3D CAD domain
allowing 3D drawings to be embedded in PDF
documents. Another PDF approach is a VRML and
VTK integration developed by PDF3D® [14], which is
based on a C++ integration class and allows these tools
to export 3D scenes to the 3D PDF document format.
Wohlfart and Hauser [15] describe a story telling
approach
combined
with
interactive
volume
visualization and an annotated animation. The approach
described in this paper is inspired by previous ideas and
results from our involvements in three EC funded
research projects NOVICE, CONTENTS and SmartDoc
[1,2,3,4,5]. These projects focused on medical imaging
(eHealth) and used MS Office and its COM architecture
to embed components. The visualization components
were, however, based on commercial visualization
software, which limited our possibility to improve

3. GeoAnalytics Visualization Framework
The GAV framework and class library [6,7], is the
foundation for our VA research agenda. GAV is
designed with the intention to significantly shorten the
time and effort needed to develop state-of-the-art VA
and GeoAnalytics applications. Through a layered
component architecture containing several hundred C#
classes GAV, as shown in figure 3, offers a wide range
of visual representations (from the simple scatter plot to
volume visualization) suitable for many forms of data
[9]. It also incorporates versatile interaction methods
drawn from many data visualization research areas, and
integrates mechanisms for data transformation through
both analytical and discrete analysis components. In
previous work we have shown that the GAV open
architecture can be used by researchers and developers
to create high-level user components and produce
improved versions of existing components. This means
that ideas can rapidly be tried out in a fully functional
environment and customized tailor-made and taskoriented VA and GeoAnalytics applications can quickly be
prototyped.

3.1 Snapshots
GAV provides a means of saving and packaging the
history and results of an EDA process in a series of
“snapshots”. We believe that these snapshots can help
the analyst to highlight data views of particular interest
and subsequently guide other analysts to important
discoveries. The snapshot tool creates a single or a
continuous series (story) of visualization captures during
the EDA process. In a typical scenario the analyst has
selected relevant attributes, area-of-interest, colour
legend, visual inquiries, filter conditions with the slide
rangers focusing on the data-of-interest and finally
highlights the “discovery” from a certain angle (viewing
properties).

Figure 3: Examples of some GAV components

202

A visualization story is thus created by the author
through a set of linked snapshots. When the button
“Capture” (figure 1) in the Snapshot Manager (SM) is
pressed, the state of each GAV components in the
application is saved together with user-defined
annotations. Before closing the application, the SM
exports the snapshots into a XML formatted file. The
reader can through descriptive text, textual annotations
hyperlinked through a snapshot mechanism, and
integrated with interactive visualization follow the
analyst’s way of logical reasoning by loading selected
snapshots. At any time the reader, if authorized by the
author, can enter into the EDA process with access to all
interactive GAV functionalities and attached target data
(figure 2).

3.2 Snapshots and Component development
Developers of Web-based GAV solutions can customize
applications from available classes or extend an existing
component with new appropriate methods and attached
properties (viewpoint, scale, colour legend, etc) targeted
in particular to visualization communication and
presentation. Newly defined component properties are
then readily available to the snapshot mechanism. The
developer just has to select which properties that should
be snapshot enabled. When the component is embedded
in an application and the analyst requests a snapshot of
an important event, the selected properties will be
picked up and saved automatically. The power of an
integrated snapshot mechanism together with a
developer’s control of properties is a main advantage for
the development of Web-based visual presentation.

4. Implementation solution for embedding
Applications in HTML documents
The GAV components have previously only been
used in stand-alone programs, distributed to users as
executable files together with their resources (e.g. data
and predefined snapshots). We propose a technique that
integrates the EDA with the communication process as
well as refines and edits already existing visualization
presentations. Our GAV Applications can now also be
distributed across the Internet embedded in HTML
reports, which offers novel possibilities to collaborate
and communicate gained knowledge from the EDA
process. This chapter gives a brief technical overview of
how these Applications (managed controls written in
.NET) using the components in the GAV Framework
can be embedded in HTML documents and displayed in
a web browser (currently only Internet Explorer is
supported). References [16] are provided to more
detailed documentation that describes how to create
interactive web documents.

Figure 4: When the Author request a snapshot, the Save
function in the snapshot class scans through all its connected
GAV components for properties marked by the developer.
Each of these properties will be parsed into XML and written
to a file that also contains details on which data was used and a
unique name for each component. This guarantees that the
wrong data cannot be loaded. When a Reader activates a
snapshot through a hyperlink in the HTML document, the
saved state of the Snapshot class will be read from the XML
file and parse its nodes back into component properties again.
The previously marked properties will then be applied and set
the state of the application.

Table 1: The overall GAV HTML solution

203

has a size of 500 kB, while the embedded VA
Applications have a small footprint of 5-60kB.
The GAV Application can also be customized to
differentiate between an author mode and a reader mode,
providing different targeted user interfaces to different
audiences.

4.1 Embedding a GAV Application in an HTML
document
During the EDA (author) process, the analyst first
explores a large dataset using the GAV Application in
standalone mode, creates snapshots and gains
knowledge through analytical reasoning. To publish the
discoveries, the author places the files containing the
target data, the snapshots and the Application on a web
server along with the HTML-formatted textual
document. To be accessible in a low-trust environment
such as a web server, the target data set must first be
converted into an XML format. Tools for automatically
converting to this format from Microsoft Excel
documents are available for download from our website.
The author then adds an object tag to the document
which embeds the GAV Player ActiveX control at the
desired location. Properties are set on the player control
(through param tags or a script language) to select which
application should be rendered, what data to present,
which snapshot to display and whether the application
should be run in author mode or not. This can look like:

1.
2.

The browser requests the HTML document from the server.
The HTML document is returned to the browser, which begins
parsing the code.
3. During parsing, the browser encounters an object tag with the
GavPlayerControl clsid and an instance of this class is created.
4. The browser encounters a param tag which sets the
ApplicationPath property of the newly created object to the path
of the application that should be displayed by the Player control.
5. The Player receives the ApplicationPath from the HTML
document. If the assembly containing the application has not
been used before on this computer, it is requested from the web
server by the player control.
6. Once the GAV Application assembly has been downloaded, it is
opened by the Player and the class is instantiated and displayed
in the Player.
Should the procedure stop here, the end user would see the rendered
HTML-document with a seemingly empty Application in it.
7. The DataPath property of the Player is set in some way. This
could be done either with a second param tag, or by a script
executed on the web page.
8. The Player passes the value it got on to the DataPath property of
the Application. The Application then attempts to load the data.
If the path points to a remote web server…
9. …it downloads the data before loading it.

<object id="myGavObject"
classid="clsid:000b644f-1f1e-2057-4753544144495553">
<param name="ApplicationPath"
value="http://www.liu.se/gavapps/application.ga
v" />
<param name="DataPath" value="data.xml" />
<param name="AuthorMode" value="true" />
</object>

Table 2: The GAV HTML request procedure and downloads

To enable Applications that use components from
the GAV Framework to be embedded in HTML
documents, a special program GAV Player is needed.
This embeddable tool (an ActiveX control) displays
GAV Applications and provides means to communicate
with them through for instance popular script languages
such as JavaScript. The GAV Applications can be
developed by anyone using tools such as C# or
Microsoft Visual Studio. At the developer’s disposal are
not only the classes in the Framework, but also the entire
.NET Framework, offering a wide range of possibilities.
The GAV Framework and Player are “freeware”
allowing exchange of interactive HTML documents in a
similar way to how Adobe© Flash movies are
distributed. The Framework manages all of the
visualization inside the views including giving the end
user computer full advantage of the high-performance
DirectX graphics layer. This architecture will allow
lightweight VA applications to be deployed across the
Internet. The Framework that is downloaded only once

The “object” tag tells the browser to insert a GAV
Application in the document at the location of the tag.
The “id” property in the object tag is used to identify the
object when interacting with it through script languages
(e.g. JavaScript). The “classid” property refers to a value
stored in the Windows registry which identifies the
embeddable GAV Player ActiveX control that in turn
displays the selected GAV Application. The first
“param” tag sets the ApplicationPath property of the
GAV Player ActiveX control to the path of the desired
GAV Application. Without this path, all that will be
rendered is an empty GAV Player. The second “param”
tag tells the GAV Player which data to display in the
used GAV Application.
Any standard HTML event, such as the user clicking
a textual link or an image can be used to load a different

204

the GAV Framework can be accessed from [16].

snapshot. The link itself can for example point to a small
function within a script on the page.

5. Case study – Molecule Mapper

<a onclick="loadsnapshot('Snapshot1.xml'); return
false" href="#">Load Snapshot</a>

A familiar problem in InfoVis is to view similarities
in large data sets in a manner which can easily be
comprehended by the viewer. One such idea is to place
the items of the data in a 2D coordinate grid, creating a
likeness of a geographical map e.g. 3D visual landscape.
Several different algorithms exist for this problem, the
best known being the Self Organizing Map [?]. SOM
works in its initial form only for scalar vector data, so
variations has been proposed for other types of data. INSPIRE™ ThemeView™ [?] scans large collections of
text documents and maps them according to keywords
so that closely related documents cluster together while
unrelated documents are further apart. The goal of this
case study was to investigate and implement a similar
method, but instead of documents, find the similarity
between molecules. The approach we have chosen is:

This function then calls the GAV Application with the
appropriate snapshot name which triggers events inside
the application and thus loads the snapshot.
<script type="text/javascript">
function loadsnapshot(path)
{
GavApplicationControl.SnapshotPath = path;
}
</script>
When a reader browses to the web page, the Application
will automatically be downloaded from the server to the
client machine after a test was made that Framework and
Player exists on this machine. The Application run in a
safe but severely restricted “sandbox” mode, which
means that access to sensitive system resources (such as
hardware-accelerated graphics) on the user’s computer is
prohibited. However, this does not pose a problem. By
requiring the Framework to be installed on the end user
computer, the user has accepted to trust the contents of
the Framework, but not any third party applications. The
Framework exposes classes that use protected resources,
without ever exposing the resources themselves. Once
downloaded, there is no significant computational
overhead introduced from running the Application in a
web browser – the hardware accelerated visualisations
will run as fast as they would if they were part of an
installed application.

x

x
x
x
x

Describe molecules using all their fragments given
by strings that are the SMILES codes for the
fragment that comprise the molecule and treat these
SMILES [?] codes as words that the document
landscape method uses;
Calculate the similarity between two molecules
using the Multi Dimensional Scaling (MDS) [17]
algorithm;
Followed by a structural clustering based on
position in the map;
Creates a tree structure with all clusters and
molecules and permits a fast and adaptive viewing;
Interactive multiple linked-view visualization
application based on 2D and 3D GAV contour
components that show the landscape and inner
structure of individual molecules (figure 6)

The user can explore their molecular datasets in a
graphical way to find clusters of similar molecules. For
example, a molecule has the id number 135 and its
corresponding structure is Nc1ncnc(Nc2ccccc2)n1. The
fingerprint is a space separated list of strings that are the
SMILES codes for the fragments that comprise the
molecule. These SMILES codes are treated in our
application similar to document landscape software.
The views represent a landscape based on the
position of molecules in a 2D grid. Peaks in the map
represent high densities of molecules. Dots represent
either individual molecules or cluster of molecules
depending on their size and color. The closer these
molecules (red dots) are together the more similar they
are to each other. These clusters of molecules are shown
when the user is too far away to view individual

Figure 5: The Reader has entered into the second GAV
Application (see figure 2) to search for a suitable car model.
Filtering and condition are applied inside the HTML document
for attributes MPG and Cylinders. The result of this visual

inquiry is highlighted and a popup is displayed.
Sample applications, template documents, tutorials
on how to develop your own GAV Applications and a
more detailed explanation of the security management in

205

Hyperlinked text strings results in instantiated snapshots
that interactively show this novel analytical visual
capability for exploring similarity of molecular data. The
right side is reserved for the embedded MoleculeMap
GAV application. The HTML document can be
downloaded from [16]. The details for how the
positioning and clustering works can be quite difficult to
understand and to explain. Our Web-based method
including the snapshots creates a powerful tool to
explain the underlying algorithms of the application as it
allows the user to read the educational text, interact with
the application and follow the snapshots to further
understand the idea of the author.

molecules. But as the user zooms in they split up into
either more clusters or single molecules depending on
how high the density at the focus point is. The
placement of the molecules depends on the MDS
algorithm followed by a structural clustering based on
position in the map. This creates a tree structure
containing all the clusters and molecules of that data and
allows for fast and adaptive viewing.
The Molecule Mapper application is embedded in a
split HTML document (figure 7) where the left side is
used to describe the method using educational text and
static images describing the applied mathematics.

Figure 6: Molecule Mapper developed and customized with GAV components. High peaks (green) represent high density of
molecules. Red glyphs represent a cluster of molecules that evolve when the user zoom in - the closer the molecules are the more
similarity they represent. Left: Overview 3D landscape map with rectangular requested focus view; Middle: Focus 2D view with
marked cluster – the names and SMILES of molecules that belong to this cluster is given; Right: Single molecule 135 is marked and its
atomic representation is displayed in 3D view.
Figure 7: A split HTML document
with embedded Molecule Map
application (right side) and descriptive
educational text and static images with
explanation drawings and blue textual
annotations hyperlinked to embedded
an snapshot that helps the user to
understand the overall complex
concept.

206

6. Conclusion

x

An integration of EDA tools and visualization
reporting tools would improve the communication
process and enable more interactive analytical
collaboration. In this paper, we have introduced a
new method for the communication and
presentation of a visual analytics effort, which was
inspired by an earlier research effort [4]. This new
approach enables the analysts to communicate what
they know through the use of a proposed visual
metaphor based on:
x a comprehensive VA component toolkit;
x a mechanism for the storage of interactive
events in the analytical reasoning process
through snapshots;
x implementation in the HTML Web document
standard;
A visualization story is thus created by the author
through HTML text and a set of hyperlinked linked
snapshots that describes the analytical reasoning
process. At any time, the reader can enter into the
EDA process with access to all interactive GAV
functionalities and attached target data. Our
proposed method complies with the VA sensemaking loop and its mantra: Gather Information,
Re-represent, Develop Insight, Produce Results [8].
The GAV framework and class library
integrates the EDA process with presentation and
communication, thus streamlines the reporting
process and enables the analysts to focus more time
on the analysis and allowing hypotheses and
conclusions to become sharable visualization tasks
of the communication of results. Snapshots
effortless means of recording results of analysis in a
format that can be used for presentation and
communication.
The enhanced possibilities compared to
traditional presentations, however, raise the
responsibility of the author to ensure the
comprehensibility of all formulated and through
interactive reading derivable statements as well as
the risk of rather increasing the quantity of
information than the quality.
The VA research agenda [8] provides a
summary of recommendations that are necessary to
capture the EDA process into information packages
and allow the analysts to communicate their
discovery and decision recommendations. Results
achieved in this project are:
x Seamless integrated tools supporting VA
reasoning,
EDA,
presentation
and
dissemination that all take place in a cohesive
environment.
x Enable analysts to communicate valuable
information they have discovered through
appropriate visual metaphors and share
information gathered during the course of an

entire EDA process and thus ease the process
of knowledge crystallization.
Integrated tasks: visualization embedded in
document, Snapshots and hyperlinks to coach
the interactive presentation – a framework to
author, edit and interact with visualization
messages and stories.

GAV is publicly available for research and
education at [9,18].

References
[1] Jern M.: 3D Data Visualization on the Web,
Proceedings of the 1998 Conference on MultiMedia
Modelling, International Conference, EPFL,
Lausanne, Switzerland, IEEE Computer Science
Press, October, 1998.
[2] Jern M.: Smart Documents with ActiveX 3D Data
Visualization Components, “Digital Media: The
Future”, Vince J. A., R. A. Earnshaw (Eds), Springer
Verlag,2000.
[3] Jern, Peri, Favaro, Treloar, Conlin, Talamonti. 2001.
CONTENTS – Component Technology Exercised on
NT systems. ESPRIT EC project EP26342.
[4]Jern M.: Smart Documents for Web-Enabled
Collaboration, 140-162, Published in “Digital
Content Creation”, Vince J. A. and R. A. Earnshaw
(Eds) Springer Verlag, June 2001. [5] Jern, Peri,
Jackson, Treloar, Cozzy. 2004. “Visual Data
Navigation in Electronic Web Documents
“SMARTDOC”. IST EC project 2000-28137.
[6] Jern, Johansson, Johansson, Franzén: The GAV
Toolkit for Multiple Linked Views, CMV07, Zurich,
July 2007, IEEE Computer Society.
[7] Jern M., Franzén J.: “Integrating GeoVis and InfoVis
components”, IV07, Zurich, July 2007, published by
IEEE Computer Society.
[8] Thomas, J & Cook, K. 2005. “Illuminating the Path:
The Research and Development Agenda for Visual
Analytics”.
[9] GAV Framework: http://vita.itn.liu.se/GAV
[10]Tufte ER. 2003. The Cognitive Style of PowerPoint.
Graphics Press, Cheshire, Connecticut.
[11]Wright, WD, D Schroh, P Proulx, B Cort, and D
Jonker. 2005. “Advances in nSpace-The Sandbox for
Analysis.” Poster at Conference on Intelligence
Analysis.
[12]Brant A. Cheikes. 2005. “Explanation-based decision
making”. MITRE Sponsored research
[13] http://www.document3d.com/company/index.htm
[14] http://www.pdf3d.co.uk/
[15] Wohlfart M,Hauser H.:Story Telling for
Presentation in Volume Visualization, EuroVis2007.
[16] http://vitagate.itn.liu.se/smartdoc/html/
[17] An elementary introduction to multi-dimensional
scaling, http://www.mathpsyc.unibonn.de/doc/delbeke/delbeke.htm
[18] http://vitagate.itn.liu.se/projects/GAV/framework/
[19]http://www.daylight.com/dayhtml/doc/theory/theory.
smiles.html

207

