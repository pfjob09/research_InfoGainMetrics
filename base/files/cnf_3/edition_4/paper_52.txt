12th International Conference Information Visualisation

biTemporal Session Reconstruction for Visited Sessions Retrieval
Ilias Petrounias PhD
School of Informatics,
the University of Manchester
PO Box 88,
Manchester M60 1QD, UK
ilias.petrounias@manchester.ac.uk

Ahmed Aburodes Assaid Elkilany PhD
Department of Computer Science
Sebha University
PO Box 823
Sebha Libya
assaid@sebhau.edu.ly

similarity measures between sequences; and the
application of models and representations to the
actual mining problems. Other authors have used a
different approach to classify data mining problems
and algorithms. In [3] authors have used three
dimensions: data type, mining operations and type of
timing information. Although both approaches are
equally valid, we preferred to use temporal data type
and temporal mining algorithm in order to discover
temporal sequential patterns which well be justified
later in coming sections.
Depending on the nature of the event sequence,
the approaches for solving the problem may be quite
different. A sequence composed of a series of
nominal symbols from a particular alphabet is usually
called a temporal sequence and a sequence of
continuous, real-valued elements, is known as a time
series. Time series or, more generally, temporal
sequences, appear naturally in a variety of different
domains, starting from engineering to scientific
research, finance and medicine. In engineering
matters, they usually arise with either sensor-based
monitoring, such as telecommunications control
[4],[5] or log-based systems monitoring [1],[6]. In
scientific research they appear, for example, in spatial
missions [7],[8] or in the genetics domain [5]. In
finance, applications on the analysis of product sales
or inventory consumptions are of a great importance
to business planning [9]. Another very common
application in finance is the prediction of the
evolution of financial data [10],[11],[12],[13].

Abstract
Web mining is an intensive task which may yield
significant insights that may revolutionise business
and marketing by using effective information
distribution, entertainment and communication
techniques. For instance, corporations can optimise
their eCommerce websites to maximize impact and
personalise the online content of their websites.
Corporations can use web mining techniques for
better understanding about their customers and thus
will gain competitive edge by delivering the right
information and services.
This paper concentrates on Reconstruction of
visited Session which was recorded in a web log
server. Existing approaches for Reconstruction of
users’ session deal only with the time when a user
accesses every page, whereas, in this paper, each
visited page is incorporated with a pair of ordered
time points, which we call biTemporal. Re-produced
sessions can be used latter in different ways such as
personalization, sequential pattern discovery, etc.
Keywords : Information retrieval, web mining, web
usage mining, biTemporal Sessions Retrieval

1. Introduction
Sequences of events are a common form of data
that can contain significant knowledge [1]. There are
important application areas where the data to be
analyzed consist of a sequence of events. Sequence
mining can be applied to a host of various domains.
We can use it for re-routing data in advance of
congestion in telecommunication networks, analysing
market-based data and discovering access patterns in
WWW logs. Gene sequences, stock market changes,
weather forecasting, occurrences of recurrent
illnesses and even crimes committed by a person are
also potential application areas of sequential mining
research. It should be noted that some of these
applications are real-time environments, such as
stock markets, where the data are subject to change
rapidly, introducing some further considerations.
The ultimate goal of temporal data mining is to
discover hidden relations, between sequences and
sub-sequences of events. The discovery of relations
between sequences of events involves mainly three
steps [2]: the representation and modelling of the data
sequence in a suitable form; the definition of

1550-6037/08 $25.00 © 2008 IEEE
DOI 10.1109/IV.2008.99

2 Clickstream Analysis
Click stream analysis plays an important role in
the decision-making process of an e-commerce site.
The knowledge obtained from such analysis can be
deployed in restructuring the web site, personalizing
the homepages and approaching the customer in a
very better way, i.e. enhanced Customers relationship
management. Every time a user accesses a web site,
the server keeps track of all the actions accomplished
in the log file. What is captured is the "click flow"
(click-stream) of the mouse and the keys used by the
user during the navigation inside the site [14].
Moreover, the succession of the pages shown by a
single user during his/her navigation inside the Web
identifies the user session. Typically, the analysis
concentrates only on the part of each user session
concerning the access to a specific site. The set of the
pages seen, inside a user session, coming from a

341

determinate site is known with the term server
session or, it is more commonly said that they
identify a visit [15].
From the literature, a Click-stream can be defined
as a user surfing path through the web site. It contains
the sequence of actions entered as mouse clicks,
keystrokes, and server responses as the user navigates
a website via a web browser. In other words, we can
define a click-stream as the sequence of the requested
pages. However, in order to understand the users’
behaviour or the effectiveness’ of marketing and
merchandising, that can be achieved by applying data
mining techniques on top of click-stream data
In the supermarket, a point-of-sale system creates
a record for each item scanned. These records are
typically rolled up into market baskets, before data
mining is performed. The market baskets must be
linked somehow to with identified shoppers so that
patterns and preferences can be detected over time.
However, a similar situation exits in World Wide
Web [16].

errors because there is no guarantee that all users
have the same time-limited behaviours. In the
reference-based approach, a new session is created
when a page is not referred by the pages in the
previous session. The main problem of this approach
is that the referral page is not always available. If a
user typed the Web address instead of clicking a link,
the referral page could not be obtained. The h-ref
approach usually cuts a session into several short
sessions.

3.1 Session Reconstruction Methodology
Session reconstruction can be defined as the
process of reconstructing users’ sessions using web
server log data. In previous studies [23],[26],[27] on
session reconstruction there were no mentioned about
detecting an accurate end for a visited session; where
most of them are concentrating on user defined
duration. Authors of [26] stated that, it is difficult to
tell when a user has left a Web site because there is
no record of users leaving therefore, detecting the end
of a "session" is hard. Most previous work assumed
that the duration of visits is between (15 to 30)
minutes [28]. Apart from lack of information, some
problems may occur, such as, an IP sharing because
several users may enter a site through the same host
or proxy.
Commonly, a user ID (vID) comes from IP
address when there is no proxy severs between a
client and a web server and the information about
users’ is available. If a proxy server is installed,
there are some techniques to detect vID such as
cookies files, ASP session ID, users’ registration etc.
Figure 4.4 shows how a client connects to a web
server. However, in our approach we concentrate on
temporal-side to identify a user session. In addition,
we assume that each user has a user ID (vID).
We assume that, each temporal event contains a
pair of ordered time points ts and te where ts ≤ te and
both are positive integers. They are the start time and
end time which together specify the valid time of the
stored information. We assume that E is set of events
type.

3 Reconstruction related works
Web usage mining is broadly used for web-based
personalized service [17],[18],[19], users group
clustering [20],[21], and purchase predication
[17],[21],[22]. Based on literature, data preparation is
the prerequisite step for almost all web usage mining
techniques, whereas the successful reconstruction of
a web user session is the main concern of the data
preparation step[23].
World Wide Web (W3C) has defined a session (or
a visit) as the group of activities preformed by a user
from the moment she/he enters the website until
she/he leaves it. These activities are monitored and
recorded by a web server log. [23] Stated that a
session is the sequence of activities performed by a
user during a visit at the website.
Reconstructing website users and user sessions is
a complicated task in the data preprocessing phase of
Web usage mining [24],[25]. Several approaches
have been applied to session reconstruction. The
naive but commonly used approach is simply to
generate sessions from a log by dividing this log into
equal-length or equal-duration sub-sequences. Three
heuristics for session reconstruction are described in
[26]:
•h1 : The duration of a session must not exceed a
given threshold.
•h2 : The time spent on a page must not exceed a
given threshold.
•h-ref: A requested web page that is not reachable
from previously visited page(s) should be
assigned to a different session.

Definition 1: An Event e is an event, associated with
occurrence time of e, and it is specified by a
triple (e, ts, te) where e œ E is an event type
and ts , te are the start time and the end time,
respectively.
Let us consider an example of a web log database.
We suppose that an event represents a page view
time. We are given a temporal database D; each
record in the database contains a user ID (vID), web

Heuristic methods are expected to do the following:
1. Group all activities performed by the same user.
2. Group all activities that belong to the same visit.
h1 and h2 are based on the assumption that the time a
user spends on a session or a page correlates to
whether the session ends. h1 and h2 roughly cut the
request sequence into sessions by a predetermined
timeout threshold. Both h1 and h2 may cause many

342

page name p and timestamp. A web page viewing
time can be represented as {vID, p, t1, t2, t3, t4}
where t1 stands for client-side time of request p, t2
stands for server-side response time, t3 stands for
client-side time of the next request and t4 stands for
server-side response time to the next request. Since t3
and t4 deal with the next request, they also signify
end times for request web page p. However, our
research is concentrated on server-side web log data;
from this point; t2 is assigned as ts which represents
start time of viewing p and t4 is assigned as te which
represents end time of viewing p. According to
definition 1, a web page viewing time can be denoted
as {vID, p, ts, te}.
In the general setting, we assume that the database
is a set of sessions; each session consists of a set of
events for a particular person. Each event is
associated with one vID.

timeout function. In our contribution we use a logout
and a timeout to detect when a user has left the
website, by this approach we can detect more precise
end for a user surfing time.

Definition 2 A Sequence of Events S is defined as a
list of events where each event is associated
with a vID in the same sequence j, where Sj
Œ D, j=1,…,m , and m is number of
sequence in Database D.
For example, if vIDj has visited this sequence of pages
(P1, P2, P3, P4), the sequence will be: vIDj = (p1,
ts1,te1), (p2, ts2,te2), (p3, ts3,te3), (p4, ts4,te4)
From the example, all visited pages (events) are
ordered by the start times, t si ≤ t si +1 , for all i = 1,..,n
where n is the number of visited pages, ts : “time
start” when viewing a page has started and te :” time
end” when the viewing of a page has ended.
n

S = ∪ (ei , t si , tei ) , where n number of

i =1
eq(5.1)
events per sequence S and tei = t si +1
As we mentioned before, each page is associated with
vID. This means that each session is associated with
vID. In other words, a user may visit a site several
times.
m

vID = ∪ S j ,

eq(5.2)
j =1
where m number of
Sequence has visited by vID
This definition is similar to that of customersequence proposed in [9],[29], where all sequences
associated with the same person can be grouped
together ,whereas the event has just one timestamp.

4 Reconstruction Frameworks
We have reviewed several websites such as
commercial websites, webmail websites, libraries
websites and electronic online banking websites that
revealed most of these websites keep a record of their
users; in other words, their customer should be
registered, which leads to, a user should login at the
beginning of his surfing to the website as shown in
figure 1 and figure 2. As shown in figure 1 and
figure2, there is logout button to end his surfing.
However, if a user did not logout, the website will
end his session after a period of time, which we it

As we illustrated early, each page has (ts, te)
where ts is the time when a user start surfing the page
and te is the time when a user left the page. But the
main challenge is how we could identify the end time

343

of last page, in other word, when a user has ended his
surfing.

Figure 6: Session end by click on logout button

Figure 7:y logout session reconstruction

To formalise the fact which was discovered early in
this section, we have to extend sequence event
equation eq(1) in definition 2 to handle our approach
for biTemporal session reconstruction.
n −1

Definition 3 let

S = ∪ ( Pg i , t si , t si +1 ) be a
i =1

sequence of web pages session visited by vID, where
t si and t si +1 refer to start and end viewing time of the

Figure 8 Session end by timeout function

page Pg i respectively. We assume that the last page
Pgn is defined as Pgn= { P, R } where L|L is logout
and T|T is timeout. If Pgn =P or Pgn =R, then Pgni
i +1
, and the last page in a session will
1. t e = Pgn+1. t s
be Pgn-1 .

Figure 9: timeout session reconstruction
Figure 8 shows vID1002 viewing web pages and shows
how a website has ended his session after a period of
time, where R is the timeout of that page or “url“.
Figure 9 shows a reconstructed session for
vID1002i = { (A,13,14),(B,14,24) }

4.1 Session Identification Assumptions
Let us consider table 1 as an example of a web log
database. However, we will apply definition 3 to
validate our contribution for session reconstruction:
Assumption (1): a website has a logout buttons
“functions”. Then, the server will record a time as
soon as a vID has clicked on logout button, we will
use this time as time end for last page was visited by
i
the vID. As stated in definition 3, each event has t s
i
i +1
i
, t e and Pg te = Pgi+1. t s for instance, from table
1 to reconstruct a session of user 1001 who has
visited {(A, 10), (B, 12), (E, 20), (P, 27)} when a
web server recorded just a time start, as soon as a
user start viewing a page that means vID 1001 has
started viewing page A at 10, B at 12, E at 20 and P
at 27, where 10,12,20,27 are time units and P is a
logout page ”url”. Figure 6 shows how vID 1001 is
viewing web pages and figure 7 shows a
reconstructed
vID100= {(A,10,12),(B,13,20),(C,20,27)}

Assumption (3): Whenever a website does not have
a logout button, or even though a website sometimes
has logout buttons as shown in Figures 5.5, 5.6, a
user leaves a website without clicking logout button.
We are assume to add minimum view time vMIN to ts
of the last visited by vID te= ts +vMIN. As we
mentioned in section 3, several studies have followed
this approach.
Figure 10 shows vID 1002 viewing a website and
shows how vID 1002 stops surfing the website without
proper exit for unknown circumstances. Figure 7
shows a reconstructed session for
vID1002 = {(A,30,31),(B,31,34),(E,34,36),(F,36,36+vMIN)}.

Assumption (2): if a website has Timeout function
which ends a user session to reduce the chance of
someone else having access to a customer details, and
if a customer leaves his desk for example while that
customer is using online digital banking. However
we could use it as a time end for a user session.

Figure 10: a user leaves a session without proper exit

Figure 11: ending session without proper exit
reconstruction

344

Moreover, as it is obvious in assumption (2) and
assumption (2) the same user may visit a website
several times as described in definition 2, eq(2). In
other words, a vID could be associated with one or
several sessions.

STAGE(2): Detecting a End of Session ( logout or
timeout ), STAGE(3): Session ended without ( logout
or timeout ) by adding (vMIN to ts) and STAGE(4) :
Appending a sessionREC to sFile.

4.2 Temporal Sessions Reconstruction framework
The block diagram illustrated in Figure 12
represents
the
functional
architecture
of
reconstructing a user session in terms of models and
sources described earlier. The itemDETECTING
Model processes read items and their attributes from
CleanedLog and pass them to ReCONSTRUCT
session Model. After that, the ReCONSTRUCT
session Model will detect the te for each item and
accumulate it to the ItemsList if the item belong to
the same vID and then itemDETECTING model will
start again to read another item. Nonetheless, if an
item is not belong to the same vID that means the
current session was ended then, ReCONSTRUCT
session model
will pass the ItemsList to
seDETECTING session model to detect a session te
according to the assumption which have been
discussed earlier, after that, the session will be saved
in Reconstructed Session file. Afterwards, the
itemDETECTING model will take the lead again until
end of CleanedLog file

Table 2 shows a sample of Reconstructed Session
which is gathered by applying TSR algorithm on web
server log data cleanedLog.

The reconstructed biTemporal Session can be
passed to biTemporal Sequential pattern Algorithm,
such tSPADE which was presented in [30].
However, in new research which we will be
published soon, we have studied the impact of
invoking biTemporal aspects, and single temporal
features on patterns discovery.

Figure13 presents the Data structure used by
biTemporal Session Reconstruction TSR Algorithm
which will be used to reconstruct a temporal session.
Figure 14 shows the Temporal Session
Reconstruction TSR Algorithms. The TSR is designed
according to the assumptions which we have
illustrated in section 5.3.1. However, the processes of
TSR are categorized into four stages as stated on the
algorithms, theses stages are STAGE(1): Read a new
item and adding the item to ( ItemsList ),

5 Conclusions
In this paper, we present a new approach to
retrieve and reconstruct a website visited sessions
where each visited page is treated as an event has
been stamped with full temporal features (event, ts,
te). After, a session reconstructed with full temporal
feature. Then, reconstructed sessions can be passed to

345

[14] E. Blanc and P. Giudici, eds. Sequence Rules for Web
Clickstream Analysis. Advances in Data Mining:
Applications in E-Commerce, Medicine, and Knowledge
Management, ed. P. Perner. Vol. 2394 / 2002. 2002,
Springer-Verlag Heidelberg.

sequential pattern algorithms in order to discover
sequential patterns, or any other ways, such as web
personalization. As stated earlier, there are several
approaches for reconstructing a website visited
sessions. On other hand, most of previous studied
they did not follow biTemporal scenario to
reconstruct visited sessions, because as they
mentioned it is difficult to identify when a user has
lift his session of surfing Whereas, we have
approached the problem with more affective
approach.
Moreover, the past approaches were developed to
a specific problem in the researchers’ hands. Thus,
they are limited to a certain type of data and lack of
generality required for the case of diverse sequential
data.

[15] J. Srivastava, et al., Web usage mining: Discovery and
applications of usage patterns from web data. SIGKDD
Explorations, 2000. 1(2): p. 12-23.
[16] G. Linoff and M. Berry, Mining the Web:
Transforming Customer Data into Customer Value. 2002:
Wiley.
[17] H. Dai and B. Mobasher. A road map to more effective
web personalization: Integrating domain knowledge with
web usage mining. in Proceedings of the International
Conference on Internet Computing 2003 (IC’03). 2003. Las
Vegas NV, USA.
[18] B. Mobasher, R. Cooley, and J. Srivastava, Automatic
personalization based on web usage mining.
Communication of ACM, 2000. 43(8): p. 142–151.

6 References

[19] B. Mobasher, et al. Discovery of aggregate usage
profiles for web personalization. in Proceedings of the Web
Mining for E-Commerce Workshop (WEBKDD’2000),
Sixth ACM SIGKDD International Conference on
Knowledge Discovery and Data Mining. 2000. Boston.

[1] H. Mannila and H. Toivonen., Discovering generalized
episodes using minimal occurrences. Proceedings of the
Second Int’ l Conference on Knowledge Discovery and
Data Mining, 1996. (KDD’ 96): p. 146-151, Portland,
Oregon.

[20] G. Paliouras, et al. Large-scale mining of usage data
on web sites. in In AAAI 2000: Spring Symposium on
Adaptive User Interfaces. 2000. Stanford, CA, USA.

[2] W. Lin, M.A. Orgun, and G.J. Williams. An Overview
of Temporal Data Mining. in Proceedings of the 1st
Australian Data Mining Workshop (ADM02). 2002.
Canberra, Australia: University of Technology, Sydney.

[21] B. Mobasher, R. Cooley, and J. Srivastava. Creating
adaptive web sites through usagebased clustering of URLs.
in Proceedings of the 1999 IEEE Knowledge and Data
Engineering Exchange Workshop (KDEX’99). 1999.

[3] J.F. Roddick and M. Spiliopoulou, A Survey of
Temporal Knowledge Discovery Paradigms and Methods.
IEEE Transactions of Knowledge and Data Engineering,
2002. 14(4): p. 750-767.

[22] W. Lin, S.A. Alvarez, and C. Ruiz. Collaborative
recommendation via adaptive association rule mining. in In
Workshop on Web Mining for E-Commerce, Challenges
and Opportunities (WEBKDD2000). 2000. Boston, MA,
USA.

[4] G. Das, D. Gunopulos, and H. Mannila. Finding Similar
Time Series. in Proceedings 1997 1st European Symposium
on Principles of Data Mining and Knowledge Discovery
(PKDD’97). 1997. Trondheim, Norway.

[23] M. Nadjarbashi-noghani and A. Ghorbani. Improving
The Referrer-Based Web Log Session Reconstruction. in
Proceedings of the 2nd Annual Conference on
Communication Networks and Services Research
(CNSR'04). 2004. Fredericton, N.B., Canada: IEEE
Computer Society.

[5] G. Das, et al., Rule discovery from time series.
Proceedings of the 2nd European Symposium on Principles
of Data Mining and Knowledge Discovery, 1998: p. 16-22.

[24] J. Pitkow, In search of reliable usage data on the
WWW. Computer Networks and ISDN Systems, 1997: p.
1343–1355.

[6] H. Mannila and C. Meek, Global Partial Orders from
Sequential Data. KDD 2000, 2000: p. 61-168.
[7] E. Keogh and P. Smyth, A probabilistic Approach to
Fast Pattern Matching in Time Series Databases. KDD
1997, 1997: p. 24-30.

[25] R. Cooley, B. Mobasher, and J. Srivastava, Data
Preparation for Mining World Wide Web Browsing
Patterns. Journal of Knowledge and Information Systems,
1999. 1(1): p. 5-32.

[8] t. Oates, Identifying Distinctive Subsequences in
Multivariate Time Series by Clustering. KDD 1999, 1999:
p. 322-326.

[26] M. Spiliopoulou, et al., A framework for the evaluation
of session reconstruction heuristics in web usage analysis.
INFORMS Journal of Computing, Special Issue on Mining
Web-Based Data for EBusiness Applications, 2003. 15(2).

[9] R. Agrawal and R. Srikant.
Mining Sequential Patterns.
in Proceedings of the 11th Int'l Conference on Data
Engineering (ICDE'95). 1995. Taipei, Taiwan: IEEE
Computer Society.

[27] J. Zhang and A. Ghorbani. The Reconstruction of User
Sessions from a Server Log Using Improved Time-oriented
Heuristics. in Proceedings of the 2nd annual Conference
on Communication Networks and Services Research
(CNSR'04). 2004. Fredericton, N.B., Canada.

[10] R. Agrawal, et al. Fast similarity search in the
presence of noise, scaling and translation in time-series
databases. in Proceedings of the 21st International
Conference on Very Large Databases. 1995.
[11] C. Faloutsos, M. Ranganathan, and Y. Manolopoulos,
Fast Subsequence Matching in Time-Series Databases.
ACM SIGMOD Int. Conf. on Management of Data (1994),
1994: p. 419-429.

[28] K. Ali and S.P. Ketchpel. Golden Path Analyzer: using
divide-and-conquer to cluster Web clickstreams. in
KDD2003 Proceedings of the ninth ACM SIGKDD
international conference on Knowledge discovery and data
mining. 2003. New York, NY, USA: ACM Press.

[12] K. Chan and W. Fu. Efficient Time Series Matching by
Wavelets. in Proceedings of the 15th Int'l Conference on
Data Engineering (ICDE'99). 1999. Washington, DC,
USA: IEEE Computer Society.

[29] P.-s. KAM, Discovering Temporal Patterns for
Interval Based Event, in Computer Science and
Engineering. 2000, The Chinese University of Hong Kong:
Hong Kong.

[13] D. Berndt and J. Clifford, Finding Patterns in Time
Series: a Dynamic Programming Approach., in Advances
in Knowledge Discovery and Data Mining, U. Fayyad,
Shapiro, G., Smyth, P., Uthurusamy, R., Editor. 1996,
AAAI Press. p. 229-248.

[30] I. Petrounias and A. Assaid. Temporal web log mining
using OLAP Techniques. in Proceedings of the
international conference on Computational methods in
sciences and engineering. 2003. Kastoria Greece: World
Scientific Publishing Co., Inc. River Edge, NJ, USA.

346

