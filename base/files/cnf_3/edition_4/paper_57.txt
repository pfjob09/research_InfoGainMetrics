12th International Conference Information Visualisation

Task-Driven Color Coding
Christian Tominski Georg Fuchs Heidrun Schumann
Institute for Computer Science
University of Rostock
{firstname.lastname}@informatik.uni-rostock.de
Abstract

However, the ColorBrewer was specifically designed for
segmented maps; continuous data is not supported. Continuous color scales are considered in the PRAVDAColor
tool from Bergman et al. [2]. Additionally, the tool offers
a rule-based mechanism to support users in choosing appropriate color scales. The mechanism is based on data
characteristics (data type: ratio / interval data; spatial frequency: low / high) and visualization tasks (isomorphism,
representation, segmentation, or highlighting). In SchulzeWollgast et al. [12], the influence of data characteristics
(e.g., the distribution of data values) on color coding is investigated in more detail. Based on the extraction of statistical meta-data like average, median, and extreme values as well as skewness and quartiles, the color mapping
function is adapted to be consistent with the characteristics
of the data range. Schulze-Wollgast et al. further enrich
the color-coded visualization by an expressive color legend, including a Box-Whisker plot to communicate data
features. Furthermore, the problem of color coding for
the purpose of visual comparison is discussed. While the
color mapping function f usually employs linear interpolation, Hyun has experimented with nonlinear functions to
improve interactive data exploration [9].
More general overviews on the color coding problem
are given in [14] and [15], including aspects of basic vision
and psychophysics, color reproduction, and color design.
In this paper, we will discuss color coding with regard
to the task at hand. Previous publications, like [2] or [12],
address the design of color scales for specific tasks (e.g.,
isomorphic, segmentation, comparison), while others, like
[10] or [16], just point out that the goal of the user has to be
considered when using color coding. However, to the best
of our knowledge, a systematic approach for a task-driven
color coding still has not been published. We take on this
issue and propose a generic view on the problem. Our work
is based on the task description of Andrienko & Andrienko
[1], which served as a good starting point to think about
tasks and color-based visualization.
To lay a common ground, we review aspects that influence the design of color coding schemes in Section 2 and
briefly introduce the task model in Section 3, where we

Color coding is a widely used visualization method for
scalar data. To generate expressive and effective visual
representations, it is extremely important to carefully design the mapping from data to color. In this paper, we describe a color coding approach that accounts for the different tasks users might pursue when analyzing data. Our
task description is based on the task model of Andrienko
& Andrienko [1]. We apply different color scales and introduce strategies to adapt the color mapping function to
support tasks like comparison, localization, or identification of data values.
Keywords—Visualization, Color, Task.

1 Introduction and Motivation
Color coding is a fundamental visualization method for
representing scalar values, and is therefore widely used in
a large variety of application scenarios. Designing appropriate color scales is an intricate step that influences the
expressiveness and effectiveness of visual representations
significantly. Appropriate in this context means that the
color-coded visualization really supports analysts in deriving assured statements about the underlying data. Appropriateness can only be achieved if characteristics of the
data and the tasks of analysts are taken into account. Therefore, it is necessary to provide flexible color schemes that
can be adapted to the data and task at hand.
Generally, a color coding scheme can be characterized
by a color mapping function f : D → C that maps data
values D to colors from the color scale C. From literature we know several approaches that address adequate
definition of the color mapping function, or give guidelines for the use of color scales. In this context, Cynthia Brewer’s ColorBrewer has to be mentioned as a pioneer work [4, 5, 8]. Brewer describes binary, qualitative, sequential, and diverging color scales for visualization on cartographic maps. A major point of Brewer’s
work is that these scales are based on human perception,
and that they have been evaluated for different output devices like CRT screens, TFT displays, or LCD projectors.

1550-6037/08 $25.00 © 2008 IEEE
DOI 10.1109/IV.2008.24

373

also identify the main aspects of task-driven color coding.
In Section 4, we discuss the color coding problem in more
detail. We conclude with a short summary and an outlook
on future work in Section 5.

before presenting color-coded images [7]. For users suffering from color blindness, data values have to be mapped
redundantly to visual variables others than color. An example for variance in the professional background is the
placement of blue/violet colors in a spectrum scale [10].
In some fields these colors may be placed at the low end
of the color scale (in order of increasing wavelength), in
others at the high end (in order of increasing frequency).
Characteristics of the output device: Different output
devices use different systems to define and display colors.
Thus, a color coding scheme being appropriate for displaying data on a computer display might be inappropriate to
show the same data on printed materials. Therefore, the
color scales of the ColorBrewer were evaluated for different output devices (see [4, 5]).
The aforementioned criteria address four questions:
What is visualized (data), why and for whom is it visualized (task respectively user), and where is the output
displayed (device). The problem is that many visualizations that use color to not consider these four questions to
an adequate level. It is often the case that just basic color
coding schemes are used, most prominently the classic
rainbow color scale. However, such methods can lead to a
variety of problems [3, 13]. Our goal is to shed some light
on more advanced color coding schemes. In particular, we
investigate the why aspect in more detail and present our
preliminary findings.

2 Requirements for Color Coding
A fundamental requirement for effective color coding is
that the color mapping function f has to be invertible. This
means that every data value (or every well-defined group of
data values) is associated with exactly one color, and vice
versa, every color represents a fixed range of data values.
In other words, colors encoded from two different data values should be visually distinguishable. On the other hand,
visually similar colors imply that they represent data values that are close to each other. Moreover, if the data’s
value range is given by a linear function, the color mapping function has to be constructed in such a way that the
color coding is perceived as linear as well; just linearly
mapping the components of the color space in use is not
sufficient, particularly when using the RGB color space.
Otherwise, perceptual variations in the visual representation do not express the true magnitude of variation in the
underlying data.
Besides these basic requirements, further aspects decide
about effectiveness of color coding. Telea identifies the following factors to be relevant for color coding [16]:
Characteristics of the data: Statistical features, overall distribution of data values, as well as data variation
speeds and domain sampling frequencies are data characteristics that should be considered when designing color
coding schemes. For example, using a linear color mapping function on a skewed data set will result in the majority of data values being compressed to a narrow range of
colors. Depending on the task at hand, this can be disadvantageous (see [12]).
Characteristics of tasks and goals: Different tasks
and goals require different color coding schemes. A main
distinction here is whether the task requires the comparison of exact values (i.e., quantitative analysis) or the judgment of qualitative differences. Furthermore, certain goals
may lead to specific regions of interest in the data domain.
These regions should be accentuated, for instance by using
bright, warm, and fully saturated colors. The appropriate
selection of color scales according to four specific tasks is
discussed in [2]. In Section 4, we will introduce our approach to task-driven color coding.
Characteristics of the user: Although color coding is
a commonly applied method, the capabilities and the cultural as well as professional background of users are only
rarely considered to an adequate level. Individual color
perception varies from user to user, which makes it necessary to check the color perception capabilities of users

3

Specification of the Task at Hand

Task-driven color coding requires task descriptions as a
basis. Most early task descriptions are given as verbal lists
of visualization goals, including identification, correlation,
comparison, and others. These descriptions lack formal description, and hence, concrete understanding of the tasks
can vary. Recently, Andrienko & Andrienko proposed a
task model that is based on formal definitions [1]. This allows for a precise view on visualization tasks. We believe
that developing task-driven color coding based on a task
model with a formal background is a good initial choice.
The formalism behind the task model of Andrienko &
Andrienko uses two basic notions: references, the space
where data values have been collected, and characteristics,
the space of attributes that were collected. This distinction
is in line with the well-known distinction of independent
variables and dependent variables.
On its first level, the task model distinguishes two
classes of tasks: elementary and synoptic tasks. Elementary tasks address individual data elements. This may include groups of data, but the main point is that data values
are taken into account separately and are not considered
as a whole. Synoptic tasks, on the other hand, involve a
general view and consider sets of values in their entirety.

374

Visualization tasks

Elementary tasks

Synoptic tasks

(on values)

(on sets)

Lookup

Comparison

Direct

Inverse

Relation Seeking

Descriptive tasks

Lookup

Comparison

Direct

Inverse

Connectional tasks

Relation Seeking

Heterogeneous
behavior

Homogeneous
behavior

Figure 1: Task typology (adapted from [1]).
Elementary tasks are further divided into lookup, comparison, and relation seeking. The lookup task defines a
search for data characteristics. This includes both direct
and inverse lookup, depending on if references are given
and corresponding data values are sought (also referred to
as identification), or data values are given and associated
references are of interest (also called localization). Relation seeking tasks search for occurrences of relations specified between data characteristics or references. In a broader
sense, comparison can also be seen as relation seeking, but
the relations to be determined are not specified beforehand.
Direct comparison tasks relate characteristics, whereas inverse comparison tasks search for relations between references.
Synoptic tasks are divided into descriptive and connectional tasks. Descriptive tasks specify the properties of either a set of references or a set of characteristics. The first
case belongs to the group of identification tasks. Here, a
set of references is given, and the task is to find a pattern
that describes the behavior of the given reference points.
The second case belongs to the group of localization tasks.
Here, a concrete pattern is given, and the task is to search
for those reference points that exhibit the pattern. Besides
specifying the properties of a set of characteristics or references, the comparison of those sets is of high relevance.
As in the case of elementary tasks, we have to distinguish
between direct and inverse comparison tasks, depending
on whether a set of references or a set of characteristics
is compared. Moreover, the synoptic task relation seeking considers two sets of characteristics or references to
come up with relationships between these sets. In contrast
to descriptive tasks, connectional tasks establish connections between at least two sets taking into account the relational behavior of two or more variables. Depending on the

set of underlying references – either variables are considered over the same set or over different sets of references –
homogenous and heterogeneous behavior tasks are distinguished.
The aforementioned tasks are arranged in a task typology, summarized in Figure 1. To achieve task-driven color
coding, we have to identify color maps that are appropriate for the different tasks. The first-level categorization
of tasks draws a distinction between individual data values and sets of data values. This can be reflected by applying either continuous/discrete color scales, where each
data value is encoded by a separate color, or segmented
color scales, where each color stands for a set of data values. At the second level, the tasks lookup and comparison
are of particular interest with regard to the color coding
problem (see [12]). The lookup task requires color scales
that support accentuation of particular color values. In order to accomplish comparison tasks, all variables involved
in the comparison must be represented by a unified color
coding scheme; perceptual separation of colors for the individual variables is not the primary goal here. Usually,
the same holds true for relation seeking and connectional
tasks. The third level addresses identification and localization tasks. Both problems demand for different color
scales: identification (direct lookup or direct comparison)
requires recognizing characteristics as precisely as possible, whereas localization (inverse lookup or inverse comparison) requires easy recognition of those spatial references that exhibit certain characteristics of interest. In the
latter case, color coding schemes that support accentuation
and de-accentuation are suitable. The bottom line is that
we have to consider three alternatives to come up with an
initial approach to task-driven color coding:

375

Identification

Localization
Unsegmented

Segmented

Figure 2: Unsegmented and segmented color scales for identification and localization.
1. Individual values vs. sets of values,

such that the lower and upper bounds are intuitive to interpret, 2) adjustment of control points of the color mapping
function to improve the color coding for data-dependent
segmentation or highlighting, and 3) skewing of the color
mapping function (e.g., applying logarithmic or exponential mapping functions, rather than linear ones) to handle
data ranges with special value distributions. Here, we introduce two approaches to improve color coding for the
lookup task: histogram equalization and Box-Whisker plot
adaptation. Both methods address the problem that certain
value distributions can lead to situations where the majority of data values is represented by only a narrow range
of colors. This is unfavorable for lookup tasks. By histogram equalization and Box-Whisker plot adaptation, we
spread the colors according to the data’s value distribution
and achieve that more colors are distinguishable in dense
parts of the data.
Histogram equalization: Histogram equalization was
originally introduced to improve the contrast of gray-scale
images. The same concept can be used to adapt a given
color scale according to the value distribution of the data at
hand, and thus, to improve the perceptibility of the colorcoded visualization. The procedure can be described as
follows. First, the value range is subdivided into uniform
bins, and the number of data values falling into the bins is
computed. Second, the color scale is sampled according
to the same uniform subdivision. The corresponding sample points, which represent specific colors, are then shifted
based on the computed cumulative frequencies. Finally, a
linear color mapping function is applied to establish a continuous color scale. As a result, more colors are provided
for those segments that contain a higher number of data
values, making values in high density regions easier to distinguish.
Box-Whisker plot adaptation: An alternative procedure to adapt the color coding to the characteristics of the
value distribution is to utilize Box-Whisker plots. BoxWhisker-Plot adaptation subdivides the data range based
on quartiles and inter quartile range (IQR), which are commonly accepted features to describe value distribution.
Quartiles and IQR are more robust against outliers than
other statistical indicators. The Box-Whisker plot segmen-

2. Lookup vs. comparison, and
3. Identification vs. localization.
In the following section, we will discuss color coding
schemes for these alternatives in more detail.

4

Color Coding for Specific Tasks

Color coding individual data values requires unsegmented color scales, that is, every color c ∈ C represents
exactly one value in d ∈ D. Contrary to that, segmented
color scales should be used to encode groups of data values, that is, every color in c ∈ C represents a subset D ⊂
D. The specification of both of these types of color scales
is a well investigated problem [2, 8, 13]. Figure 2 shows
examples of unsegmented and segmented color scales for
the identification and the localization tasks. The segmented
color scale for identification represents five different value
sets. The color scales for localization are designed in such
a way that they support preattentive recognition of reference areas of interest. The segmented color scale for localization supports a binary decision: Areas drawn yellowish
match the selection criteria, other areas do not. The unsegmented color scale communicates a smooth selection
of reference areas comparable to smooth brushing [6].
Designing appropriate color coding for lookup and
comparison tasks requires additional effort. We will introduce two new concepts for this purpose next.

4.1

Color Scales for the Lookup Task

Lookup tasks are basically a search for concrete characteristics or references. This search can be facilitated
by applying appropriate color coding schemes. While the
inverse lookup task is relatively easy to handle, the design of adequate color scales for direct lookup is intricate.
Schulze-Wolgast et al. propose the extraction of statistical
meta data to adapt a given color scale accordingly [12].
The adaptation process includes three steps: 1) Expansion of the value range to be mapped onto the color scale

376

1,0

q5

0,75

0,5
q4
0,25

(a)

(b)

q3
q2

0,0

q1

Figure 3: Color scale adaptation. (a) Histogram equalization; (b) Box-Whisker plot adaptation; Complementary BoxWhisker plots visualize data distribution.

(a)

(b)

(c)

Figure 4: Visualization of quantitative data on a map. (a) Classic linear color coding; (b) histogram-equalized color coding;
(c) color coding adapted based on Box-Whisker plot.
tation reflects the underlying data distribution closely, and
hence, also leads to improved color coding.
Figure 3 compares the segmentation strategies of histogram equalization and Box-Whisker plot adaptation. Visualization examples generated without and with the proposed methods are given in Figure 4. It can be seen that
colors are hard to distinguish in dense parts of the data
(a). By applying our adaptation methods, more colors are
assigned to these dense parts, and hence, colors can be
discerned more easily (b) + (c). It is important to mention
that we deliberately relinquish linearity of the color scale
in favor of separability of colors in dense regions.

4.2

We handle this problem by merging overlapping value
ranges. The result of this process are fewer distinct value
ranges that do not share common intervals. Now, for each
distinct value range a separate color scale is designed.
Since the newly defined ranges do not overlap, it is possible
to assign a separate hue to each, while varying only brightness and saturation to define the color coding. These separately specified color scales are integrated into one global
scale (see Figure 5(a)). To avoid inconsistencies, it must be
guaranteed that the brightness and saturation values of the
boundary of one color scale correspond to the respective
values of the neighboring scale. In other words, for one
value range the hue is constant while brightness and saturation vary, whereas at the boundary from one value range
to the next the hue varies while brightness and saturation
are equal (see Figure 5(b)). This way, even small value intervals will be represented by their own brightness-varying
subrange of the global color scale and the differentiation of
data values is improved.

Color Scales for the Comparison Task

The comparison of two or more attributes requires a
global color coding scheme that guarantees that equal colors stand for equal values. This leads to problems, in particular, if the value ranges of the attributes to be compared
are quite different. In such cases, an attribute with a smaller
value range would be represented by only a very small region of the global color scale. The goal now is to improve
the differentiability of colors for these small value ranges.

Figure 6 shows how different color coding schemes influence the task of comparing three attributes of a data set.
Figure 6(a) uses individual color scales for each attribute.

377

Saturation

(a)
Hue
0

10

15

60

1000

1500

(b)

Brightness

Figure 5: Color scale for comparison tasks. The five value ranges [0,10], [20,50], [15,30], [40,60], and [1000,1500] were
merged resulting in the three distinct ranges [0,10], [15,60], and [1000,1500]. Each distinct ranges is assigned with a distinct
hue blue, green, and red, respectively. (a) Color scale for comparison; (b) its definition in the HSB color space.
Visual comparison is hardly possible because one and the
same color represents three different data values (one in
each value range). A global color scale as shown in Figure 6(b) allows for visual comparison, but data values of
the first and third attribute are no longer distinguishable
because their value ranges are rather small compared to
the one of the second attribute. Applying Box-Whisker
plot adaptation helps to improve perception, but the results
presented in Figure6(c) are not really convincing. The approach we introduced in the previous paragraph delivers
better results (see Figure 6(d)). Values of the first and second attribute are easier to identify and to compare. However, the third variable is still hard to perceive.
Figure 6 shows the potential, but also the limits of our
approach to support comparison tasks. The problem is that
we cannot yet guarantee that adequate color scales will be
generated in all cases. In particular, if the merging process
generates too many or too few distinct value ranges, the
problem becomes apparent. In the former case, it would
be difficult to assign distinguishable hues for each value
range. In the latter case, it could be possible that small
value ranges are merged into huge ranges nonetheless, and
thus are still represented by only a few colors.
We conclude that achieving appropriate color coding
for comparison tasks is a challenging problem and requires
further investigation. Our approach can be seen as a first
step towards a general solution.

4.3

1. Individual data values vs. sets of data values: unsegmented vs. segmented color scales.
2. Lookup vs. comparison: several separate color
scales vs. one global color scale.
3. Identification vs. localization: color scale that match
data characteristics vs. color scale that accentuates
ranges of interest.

5

Concluding Remarks

Color coding is a fundamental and widely used visualization method. Numerous studies on this subject identified key aspects of color scale design and provided guidelines for developers to make appropriate choices of color
scales for expressive and effective visualizations. However, even though it is commonly accepted that different
tasks require different visualizations, so far no systematic
approach to task-driven color coding had been developed.
For this reason, we presented here color coding concepts
that address different visualization tasks derived from a
formal task typology. Our concepts are to choose from different color scales and adapt color mapping functions according to tasks and data characteristics. Since color perception is always dependent on the user, all our methods
are subject to interactive refinement. Interactively adjusting the color coding is particularly useful when exploring
unknown data.
There are three aspects pertaining to color coding in
general that have not been discussed in this paper. First,
only two-dimensional visualizations have been considered.
Three-dimensional representations impose different constraints. For example, brightness variations resulting from
lighting and shading in 3D are likely to interfere with
brightness variations inherent to the color scale used for
the visual encoding of data (see [13]).
Second, in the course of the detailed discussion of our
approach in Section 4, we presumed dealing with quanti-

The Task-Color-Cube

As a summary of the previous discussions, Figure 7
shows the task-color-cube. The three task alternatives introduced at the end of Section 3 span a 3-dimensional space
with eight discrete points. Each of these points represents a
specific task and requires a specific color coding scheme to
achieve expressive visualization. We assigned color coding schemes to each corner of the task-color-cube based on
the following guidelines:

378

(a)

(b)

(c)

(d)

Figure 6: Visual comparison of three attributes. (a) Individual color scales; (b) one global color scale; (c) adapted color
scale based on Box-Whisker plot; (d) optimized color scale for comparison tasks (also see Figure 5).
tative values only. However, many application fields require support for qualitative data as well. Future work will
therefore concern the expansion of the proposed methods
to cope with categorical data.
Last but not least, we need evaluation of the methods
proposed here. We encourage perception and user study
experts to formally evaluate our concepts; we will gladly
provide our tools and support.

phy, pages 123–147, Tarrytown, NY, 1994. Elseview
Science.
[5] C. Brewer. Color Use Guidelines for Data Representation. In Proc. of the Section on Statistical Graphics,
pages 55–60, Alexandria, VA, 1999. American Statistical Association.
[6] H. Doleisch and H. Hauser. Smooth Brushing for Focus and Context Visualization of Simulation data in
3D. Journal of WSCG, Vol. 10:147–154, 2002.

Acknowledgements
We gratefully acknowledge the support of Raphael
Schmitz in implementing prototype software [11] to
demonstrate the concepts presented here.

[7] G. Domik and B. Gutkauf. User Modeling for Adaptive Visualization Systems. In Proc. of IEEE Visualization, pages 217–223, 1994.

References

[8] M. A. Harrower and C. A. Brewer. ColorBrewer.org:
An Online Tool for Selecting Color Schemes for
Maps. The Cartographic Journal, 40(1), 2003.

[1] N. Andrienko and G. Andrienko. Exploratory Analysis of Spatial and Temporal Data. Springer, Berlin,
Germany, 2006.

[9] Y. Hyun.
Nonlinear Color Scales for Interactive Exploration.
www.caida.org/∼youngh/color
scales/nonlinear.html, 2001. Accessed April 2008.

[2] L. Bergman, B. E. Rogowitz, and L. A. Treinish. A
Rule-based Tool for Assisting Colormap Selection. In
Proc. of IEEE Visualization, pages 118–125, 1995.

[10] P. Rheingans. Task-based Color Scale Design. In
Proc. of Applied Image and Pattern Recognition,
pages 35–43. SPIE, 1999.

[3] D. Borland and R. M. T. II. Rainbow Color Map
(Still) Considered Harmful. Computer Graphics &
Applications, 27(2), 2007.

[11] R. Schmitz. Ein Modell zur Beschreibung von Visualisierungszielen beim Einsatz von Farbkodierung
zur Darstellung multivariater Daten. Master thesis,
University of Rostock, 2006. (in German).

[4] C. Brewer. Color Use Guidelines for Mapping and
Visualization. In Visualization in Modern Cartogra-

379

Identification

Comparison

Localization

Lookup
Segmented

Unsegmented

Figure 7: The task-color-cube. The cube spans along the axes segmented vs. unsegmented, identification vs. localization,
and lookup vs. comparison. Each corner of the task-color-cube represents a specific task instance and is associated with a
particular color coding scheme.
[12] P. Schulze-Wollgast, C. Tominski, and H. Schumann.
Enhancing visual exploration by appropriate color
coding. In Proc. of International Conference in Central Europe on Computer Graphics, Visualization and
Computer Vision (WSCG), Plzen, Czech Republic,
Febr. 2005.

national Conference Information Visualisation (IV),
2007.
[14] M. C. Stone. A Field Guide to Digital Color. A.K.
Peters, 2003.
[15] M. C. Stone. Color in information display. In Tutorial, IEEE Visualization Conference, Sacramento,
USA, Oct. 2007.

[13] S. Silva, J. Madeira, and B. S. Santos. There is More
to Color Scales than Meets the Eye: A Review on
the Use of Color in Visualization. In Proc. of Inter-

[16] A. C. Telea. Data Visualization: Principles and Practice. A K Peters, Ltd., 2007.

380

