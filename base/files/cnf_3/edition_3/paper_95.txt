2009 13th International Conference Information Visualisation

Displaying a Framework in a Concept Map using Network Graph Techniques
Paul Stockwella , Andrew E. Smithb , Janet Wilesa
a School of Information Technology and Electrical Engineering, The University of Queensland,
St Lucia, QLD, 4072, Australia
b Institute for Social Science Research, The University of Queensland,
St Lucia, QLD, 4072, Australia
Email: stockwell@itee.uq.edu.au, a.smith7@uq.edu.au, j.wiles@itee.uq.edu.au

Abstract

However, some people have difficulty in interpreting
concept maps and how the layout establishes relationships
between concepts and entities. One application, MindSystems ThemeReader (http://www.mindsystems.com.au),
gives the user the ability to view their concept map as a
tree. A hierarchical tree structure, however, loses some
of the information available in a spatial layout. Leximancer [15] uses the size and brightness of the concept
dots on their concept maps to indicate co-occurrence and
occurrence frequency and groupings of concepts called
theme circles, that allow more or less detail. Clicking on a
concept dot shows all co-occurrence connections and their
relative strengths.
One way of overcoming the difficulty of reading a concept map is to provide a visual framework to help the user
grasp the structure inherent in the spatial layout without altering it. A framework needs to be able to highlight the key
features such as important concepts and how they bind the
concept map together. The full co-occurrence connections
could be shown, but most concept map networks generated
algorithmically from text are highly connected. The concept map would be very cluttered and show none of the finer
structure. Another option is using a network graph tool such
as a minimum spanning tree.
This paper presents a method for improving the readability of a concept map by including a structural framework in
the display using a minimum spanning tree based on the
co-occurrence frequency counts between concepts and their
locations in the two-dimensional layout. It is difficult to
quantitatively measure the effectiveness of these visualizations, however qualitatively they have been found to be of
benefit to the readability of the concept map.
The specific aim for this study is to enhance the visual information available in a concept map without losing any of the information that is inherent in its structure.
Leximancer was selected to provide the occurrence and
co-occurrence frequencies and two-dimensional layout, al-

Concepts maps are a useful method for visualizing how
concepts are associated within a domain. Automated tools
can extract the key concepts from a corpus and display their
relationships in a two-dimensional representation. However, it may be difficult to quickly perceive the overall structure of a concept map. The aim of this research is to provide
a framework on a concept map to identify primary concepts
and nearby, related concepts providing context for them using network graph techniques. Automated concept maps are
usually very highly connected, and full connectivity shows
none of the detail or fine structure. Minimum spanning
trees based on the strength of the co-occurrence frequency
between concepts and their relative distances on the twodimensional concept map show hierarchical structure, with
key concepts acting as hubs within the network structure.
The links within the minimum spanning tree can be used to
associate concepts that are not directly connected.

1. Introduction
As more information becomes readily available in electronic format, the need for tools that can aid in the analysis and visualization of large and complex text corpora becomes more important. There are several tools available
that can extract the key concepts from a text document or
corpus and display their relationships in a two-dimensional
concept map.
Concept maps are a method for visualizing how concepts are associated within a domain [13]. They can be created either manually or algorithmically. Algorithmic concept maps can be created using techniques such as correspondence analysis [3], or self-organizing concept maps [7].
There are also several software tools available, including
Terminoweb [2], Tetralogie [11] and Leximancer [15].

978-0-7695-3733-7/09 $25.00 Â© 2009 IEEE
DOI 10.1109/IV.2009.36

667
661

though other layouts such as correspondence analysis [3]
yielded similar results.
The methodology and the algorithms used to create the
minimum spanning tree as a framework for a concept map
are presented (see Section 3). A series of examples demonstrate the additional information included in the concept
map that give structure to the two-dimensional layout (see
Section 4). The paper concludes with a discussion of the
results (see Section 5) and the conclusions drawn from this
study (see Section 6).

shown that concepts maps are effective as a learning tool
and refining how ideas fit together [12], or for showing
how the local and global scope of a domain may be explored [17]. Concept maps generated algorithmically have
been evaluated using paired corpora [16]. The pairs of documents were shown to represent semantic groupings similarly in two equivalent documents in different languages
and in closely associated domains such as cricket and baseball. Recent studies have investigated scoring concept maps
automatically and comparing the results to those made by
human participants [18].
There are several tools and algorithms available to create the two-dimensional representation for algorithmically
derived concept maps once the co-occurrence matrix has
been extracted from a text corpus. Correspondence analysis
(CA) [3] has been used for a wide range of visualizations.
Self-organizing concept maps (SOCOMs) arrange terms in
a map using neural networks [7].
There are also tools that can start with a text document or document collection, extract the key concepts
and their relationships and then display them graphically. TerminoWeb [2] performs thematic searches of documents on the Internet using third party web search engines to build a corpus of documents measured on their
textual flow. Documents with a natural language-like
text structure are weighted favourably, and are clustered
by document similarity based on knowledge rich contexts [1]. CruxLux (http://www.cruxlux.com) also clusters documents graphically by similarity of content, and
performs web searches for text documents such as weblogs and web pages that match a given search criteria. Ttralogie [11] clusters documents by geographical
trends in scientific communities and from large document
collections. Graphical representations include networks,
histograms and geographical maps. Mindsystems ThemeReader (http://www.mindsystems.com.au) can represent
the key terms from a provided document in a hierarchical
tree or map layout, where terms are selected for significance based on occurrence frequencies. Leximancer [15]
uses automated content analysis to extract the concept cooccurrence matrix from a collection of documents and creates a two-dimensional layout based on a variant of a springforce model for the many-body problem [6]. Concepts are
then displayed on the concept map; relative locations of
concepts are based on the context in which they are used
within the original text. Relative co-occurrence relationships may be viewed in the concept map.
Network graph techniques are used widely as a tool to
aid in visualizing data, in particular in social networking
science. Minimum spanning trees have been used as a
method for creating a two-dimensional layout of a concept
map as well as other applications where there is a need for
dimensional reduction [10].

2. Background Literature
Methods for extracting the key information out of textual corpora have been in use for many years. Content
analysis is the tabulation of the most frequently occurring
terms in a corpus of text [4] and was historically practiced by trained human analysts attaching standardized concept codes to blocks of text. With the advent of inexpensive computers, processing was automated and became
faster and more accessible. Relational content analysis includes both the occurrence frequency and the number of cooccurrences of terms contained within the text corpus [19].
A co-occurrence matrix results that contains the number of
co-occurrences between the key concepts, and contains a
measure of the connectedness of concepts contained within
the corpus.
There are a number of related methods that have been
developed, including Hyperspace Analogue to Language
(HAL) [5], Latent Semantic Analysis (LSA) [9] and Leximancer [16]. HAL is close to the raw co-occurrence matrix, and the relationships found are symmetric so do not
take into account the relative frequency of terms. LSA is
based on single value decomposition. The co-occurrence
matrix is processed to extract its eigenvalues and eigenvectors, which is similar to factor analysis. The eigenvectors
with the most statistically reliable eigenvalues are chosen
and an approximation to the co-occurrence matrix is computed. The resulting approximation can show relationships
among terms where they may have not been apparent in
the raw co-occurrence matrix [9]. Leximancer is a content
analysis and concept mapping tool. It uses an asymmetric
method so takes frequency of occurrence into account and
is capable of extracting relationships for terms that are semantically related but rarely co-occur, such as synonyms.
The visualization of the key concepts and their relationships graphically can aid in understanding or learning a
large or complex textual corpus. Concept maps are one
method for visualizing these relationships spatially [13].
Concepts are drawn as text or points in a two dimensional
space and relationships between them are represented by
connecting lines. Concept maps can be drawn manually
or algorithmically from a text corpus. Case studies have

662
668

There are a wide variety of approaches employed for extracting and visualizing data from text corpora. Extraction
may be based on key terms or bibliometric collaboration
and their relationships analyzed. Visual representations of
a domain such as concept maps are useful to understand it,
whether created manually as a mind map or derived algorithmically using content analysis or natural language processing. Different paradigms for visually exploring a domain such as bibliometrically, geographically or by term
co-occurrence are frequently used to try to reach a greater
understanding of the domain being represented.

the list of available nodes. The next least cost edge that connects to either of the traversed nodes is selected, and so on
until all possible connections have been made.

3.2. Distance as part of the Cost Function
The cost function for calculating the minimum spanning
tree using only the co-occurrence frequency count between
nodes does not take into consideration the relative locations
of nodes that are close or more distant, which is a secondorder relationship. The cost function was then extended to
incorporate the Euclidean distance between nodes such that
nodes that were more closely positioned on the concept map
had a lower cost than those that were further apart, given the
same co-occurrence count, to modify Pij :

3. Method
With the aim of making a concept map easier to interpret, a framework was added to the two-dimensional layout
of a concept map that connected concept nodes as in a network. Leximancer [15] was selected to extract the key concepts, occurrence and co-occurrence frequencies and layout. Correspondence analysis [3] was also used to provide
the two-dimensional layout, and exhibited similar results.
A concept map can be considered as a weighted network
with each concept acting as a node and each co-occurrence
connection as an edge.
Networks based on concept maps are frequently highly
connected and have a scale free distribution. Displaying an
entire network makes reading the map more difficult and
would not produce further useful information, so a minimum spanning tree was selected as the visual framework.
A minimum spanning tree produces the globally most efficient method for traversing the network and ensures that
there are no loops. The relative strengths of co-occurrence
frequency connections between concepts was initially selected for the cost function, Pij , between any two nodes i
and j:
Pij =

1
cij

2

Pij =

2

(xi â xj ) + (yi â yj )

(2)

cij

Where cij is the co-occurrence frequency between nodes
i and j; xi , yi are the Euclidean co-ordinates on the concept
map for node i; and xj , yj are the Euclidean co-ordinates
on the concept map for node j.
Finally, a tuning variable n was added to allow adjusting
the relative weightings of the distal component and the cooccurrence frequency component of the cost function, such
that:
n
2

2

(xi â xj ) + (yi â yj )
Pij =

cij

(3)

Where cij , xi , yi , xj , yj are the same as defined above,
and n is a real number. For all of the examples, the node
with the highest total co-occurrence frequency was selected
as the starting point, however choosing a random starting
node nearly always resulted in the same minimum spanning
tree. Concept maps used as examples in this study were
created for an earlier paper using Leximancer 2.21 as the
content analysis and two-dimensional layout tool [17].

(1)

Where cij is the co-occurrence frequency between nodes
i and j.

4. Results

3.1. Minimum Spanning Trees: Kruskals vs
Prims Algorithm

A concept map layout was created using Leximancer
(see Figure 1a), and all the co-occurrence frequencies between concepts treated as weighted edges. The networks
were typically very highly connected (see Figure 1b). A
minimum spanning tree overlaid over the concept maps
showed a clear structure with the most frequently occurring
and co-occurring nodes acting as hubs on the network. Initially Equation 1 was used as the cost function with no distal component. There were some minor differences in the
structure of the minimum spanning tree for Kruskals and

Two algorithms for creating minimum spanning trees
were tested. Kruskals algorithm [8] looks for the single
lowest cost connection on the network, and adds an edge
between them. Both nodes are then removed from a list of
available nodes. The next lowest cost connection is then selected, and so on until all possible connections have been
made. Prims algorithm [14] begins by selecting a node as a
starting point, then searches for the least cost connection to
this node. The newly connected node is then removed from

663
669

Figure 1. Networks for Concept Navigation example with a) No edges shown; b) All edges shown; c)
Kruskals algorithm with non-distal cost function; d) Prims algorithm with non-distal cost function;
e) Kruskals algorithm with unweighted distal cost function; f) Prims algorithm with unweighted cost
function; g) Kruskals algorithm with distal cost function and weight n = 2; and h) Prims algorithm
with distal cost function and weight n = 2.

664
670

Prims algorithms. The Concept Navigation example was
indicative of these variations (see Figure 1c and 1d).
Next, the cost function was changed to use Equation 2,
including a distal component. The minimum spanning trees
showed a more distributed structure with smaller hubs (see
Figure 1e and 1f). Using Kruskals algorithm produced a
more centrally connected network than that of Prims algorithm.
Lastly, the cost function included the tuning variable to
adjust the level of contribution between distance and cooccurrence (see Equation 3). The structure of the minimum
spanning tree showed a further reduction of large hubs to
produce more regular distribution of the network connectivity.
The map produced using Kruskals algorithm created
many crossed edges in the network, while there were no
crossed edges using Prims algorithm (see Figure 1g and
1h). Increasing the value of n for Kruskals algorithm further increased the number of crossed edges in the minimum
spanning tree, where an increase in the value of n for Prims
algorithm did not alter the structure of the network in nearly
all examples.

a more uniform structure to the tree than is present using
Kruskals. The differences in tree structure is most likely to
be due to Kruskals monotonically increasing cost function
value as the tree is generated. Using Prims algorithm, it is
possible for the cost function value to have higher spikes as
the tree develops. The local significance priority of Prims
provides more detail as all local low cost connections are
exhausted before examining the rest of the possible connections.
Large, central hubs are useful for providing a higher
level, global view of the domain, while smaller, more evenly
distributed hubs are more effective in promoting local detail. The smaller hubs present in Prims minimum spanning
tree begin to act as local phrase structures, an effect that
is further enhanced by the addition of the distal component
to the cost function. However, the use of distal relationships to create the tree in conjunction with co-occurrence
frequency also prevents the tree from becoming completely
fragmented. The tuning constant was introduced to allow
the relationship between the two components of the cost
function to be adjusted. Empirically, a value of n = 2 gives
the most efficient balance between connection strength and
Euclidean distance on the two-dimensional layout.

5. Discussion and Conclusions
5.2. General Discussion and Conclusions
5.1. Discussion of Results
The inclusion on a concept map of a minimum spanning
tree provides a visual framework to allow the user to easily
identify the primary concepts and their related context. A
minimum spanning tree using a distal cost function allows
the user to readily identify the primary concepts as hubs
on the network and gives a non-ambiguous path to all concepts. A two-dimensional concept map greatly reduces the
complexity and dimensionality of a domain so that it may be
viewed more easily. Collapsing the possible links between
nodes may reduce the cognitive complexity of the concept
map. Incorporating the minimum spanning tree addresses
the aim of adding back some of the complexity without reducing its readability.
The distance between concept nodes can be considered
to support semantic memory, while the links between them
to support episodic memory. Taricani et al. (2004) suggested in their study using concept maps based on the heart
and circulatory system that the geometric distances between
terms related more to the broader processes and functions
of the heart and circulatory system, while the links drawn
to connect terms related more to verbatim knowledge from
the lesson text covering facts, terminology, and definitions
(p. 69). Earlier work has shown how concept maps are
useful for viewing both the high level global scope of a domain and greater detail for drilling down [17]. Using a cost
function for the minimum spanning tree that incorporates
the distal relationships between concepts and their relative

A minimum spanning tree provides an unambiguous
path to every node within the network where no loops or alternate paths exist. More than one minimum spanning tree
may exist for a given network with the same network and
layout, however for all examples the trees were stable over
multiple generations. A minimum spanning tree gives a
globally efficient network that does not necessarily include
all shortest paths.
Adding a minimum spanning tree to the layout of a concept map acts as a framework by which the relationships
within the concept map may be more easily understood. Because concept maps are usually very highly connected, the
number of ways that any two concepts can be joined is very
large. The minimum spanning tree constrains the number of
choices available to the user and makes the more important
links more readily grasped.
Concepts that are closely co-located on the map do not
necessarily become connected in the minimum spanning
tree. These concepts are generally used in similar contexts
but do not frequently appear together in the original text,
and although they may be semantically synonymous, it is
necessary to traverse the local network to gain context.
A minimum spanning tree with no distal component to
the cost function shows the major concepts from the corpus clearly, however it is not as useful for describing local
detail. The more distributed hubs in Prims algorithm give

665
671

link strengths provides a framework for general semantic
memory with specific episodic memory.
The technique has been applied to many examples from
various domains including fiction, scientific domains and
web pages such as weblogs, and the inclusion of the minimum spanning tree as a framework has highlighted the most
important aspects of the domain represented in the concept
map. Examples have also been tested on a different clustering algorithm correspondence analysis and yields similar
results to those found using Leximancers layout clustering
algorithm.
There have been many different approaches to visualizing conceptual domains with various paradigms and visual
tools. Document clustering algorithms based on geographical, bibliographic or semantic similarity may not provide
an in-depth overview of the domain, rather how particular
documents are similar based on the selected criteria. Formatting concepts into a hierarchical tree structure can show
key concepts, however the parent-child relationships may
be arbitrary given that a concept may be equally placed under multiple parents. By applying a framework to a concept map rather than altering the structure, concepts that are
semantically similar will still be co-located closely on the
two-dimensional layout.
Concept maps are a useful visual device for aiding in
learning or understanding a domain. Automated tools for
the creation of concept maps from a corpus of text can allow a user to gain insight into the primary ideas it contains
without reading it in detail. Large concept maps, however,
may be difficult to interpret, so the inclusion of a framework based on a minimum spanning tree can make it easier to identify important or interesting connections between
concepts.

[3]
[4]
[5]

[6]

[7]

[8]

[9]
[10]

[11]

[12]

[13]
[14]
[15]

6. Acknowledgements
This research is funded in part by the Thinking Systems grant 0669699 from the Australian Research Council
to Janet Wiles and Andrew Smith, and an Australian Postgraduate Award to Paul Stockwell. The work presented in
this paper forms the basis of Australian Provisional Patent
2007906891. Methods for Determining a Path. Stockwell,
P., Smith, A. E. and Wiles, J.
We would like to thank Daniel Angus and Ruth Schulz
for comments on earlier drafts.

[16]

[17]

[18]

References

[19]

[1] C. Barri`ere. Knowledge-Rich Contexts Discovery, volume
3060, pages 187â201. Springer-Verlag, 2004.
[2] C. Barri`ere and A. Agbago. Terminoweb: A software environment for term study in rich contexts. In W. Zheng,

666
672

editor, Proceedings of the International Conference on Terminology, Standardisation and Technology Transfer, pages
103â113. NRC, 2006.
J. P. Benzecri. Correspondence Analysis Handbook. CRC,
1992.
B. Berelson. Content Analysis in Communication Research.
Free Press, 1951.
C. Burgess and K. Lund. Modelling parsing constraints with
high-dimensional context space. Language and Cognitive
Processes, 12(2/3):177â210, 1997.
M. Chalmers and P. Chitson. Bead: Explorations in information visualisation. In N. J. Belkin, P. Ingwersen, and A. M.
Pejtersen, editors, Proceedings of the 15th Annual ACM SIGIR Conference on Research and Development in Information Retrieval, pages 330â337. ACM Press, 1992.
M. Hagiwara. Self-organizing concept maps. In IEEE International Conference on Intelligent Systems for the 21st
Century, volume 1, pages 447â451, 1995.
J. B. Kruskal. On the shortest spanning subtree of a graph
and the traveling salesman problem. Proceedings of the
American Mathematical Society, 7(1):48â50, Feb, 1956.
T. Landauer, P. Foltz, and D. Laham. Introduction to latent
semantic analysis. Discourse Processes, 25:259â284, 1998.
R. Lee, J. Slagle, and H. Blum. A triangulation method for
the sequential mapping of points from n-space to two-space.
IEEE Transactions on Computers, C-26(3):288â292, 1977.
J. Mothe, C. Chrisment, T. Dkaki, B. Dousset, and
S. Karouach. Combining mining and visualization tools to
discover the geographic structure of a domain. Computer,
Environment and Urban systems, Special Issue Geographic
Information Retrieval V 30(4)(4):460â484, 2006.
J. D. Novak. Concept maps and vee diagrams: two metacognitive tools to facilitate meaningful learning. Instructional
Science, 19(1):29â52, 1990.
J. D. Novak and D. B. Gowan. Learning how to learn. Cambridge University Press, 1984.
R. C. Prim. Shortest connection matrix network and some
generalizations. Bell System Tech. J., 36:1389â1401, 1957.
A. E. Smith. Machine mapping of document collections:
The leximancer system. In A.-M. Vercoustre and D. Hawking, editors, Proceedings of the Fifth Australasian Document
Computing Symposium, pages 39â43. DSTC, 2000.
A. E. Smith and M. S. Humphreys. Evaluation of unsupervised semantic mapping of natural language with leximancer
concept mapping. Behavior Research Methods, 38(2):262â
279, 2006.
P. Stockwell, R. M. Colomb, A. E. Smith, and J. Wiles. Use
of an automatic content analysis tool: a technique for seeing
both local and global scope. International Journal of Human
Computer Studies, 67(5):424â436, 2009.
E. M. Taricani and R. B. Clariana. A technique for automatically scoring open-ended concept maps. Educational
Technology Research and Development, 54(1):65â82, 2006.
R. P. Weber. Basic Content Analysis. Sage Publications Ltd,
2nd edition, 1990.

