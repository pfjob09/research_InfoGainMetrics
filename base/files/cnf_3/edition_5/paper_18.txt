Everyday Life Discoveries:
Mining and Visualizing Activity Patterns in Social Science Diary Data
Katerina Vrotsou
Norrk¨oping Visualization and Interaction Studio
Link¨oping University, Sweden
katerina.vrotsou@itn.liu.se

Kajsa Elleg˚ard
TEMA-Technology and Social Change
Link¨oping University, Sweden
kajel@tema.liu.se

Matthew Cooper
Norrk¨oping Visualization and Interaction Studio
Link¨oping University, Sweden
matt.cooper@itn.liu.se

Abstract
The ability to identify and examine patterns of activities is a key tool for social and behavioural science. In
the past this has been done by statistical or purely visual
methods but automated sequential pattern analysis through
sophisticated data mining and visualization tools for pattern location and evaluation can open up new possibilities
for interactive exploration of the data. This paper describes
the addition of a sequential pattern identification method to
the visual activity-analysis tool, VISUAL-TimePAcTS, and
its effectiveness in the process of pattern analysis in social
science diary data. The results have shown that the method
correctly identifies patterns and conveys them effectively to
the social scientist in a manner that allows them quick and
easy understanding of the significance of the patterns.

1. Introduction
Exploring and understanding the complexity of the everyday life of individuals, groups and whole populations is
a key component in many social science research efforts.
One common way to carry out such studies is to use diary
data collected by test subjects who log the activities they
engage in over a period of time. This collection yields large
databases containing complex, interrelated time-use data.
The further development of studies based on diary data relies on development of new methods that enable extraction
and visualization of increasingly complex patterns. There
is thus an urgent need for improved visual data exploration
techniques tailored for the handling of diary data in the social sciences.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

The time-use data consists of a series of activities performed by each of the individuals. These activities can be
analysed and activity patterns can be identified. A pattern in
this context is a sequence of performed activities which are
related to each other in order to complete specific projects.
An example of an interesting pattern is travel followed by
dropping off or picking up children. By studying this pattern, and how it is distributed through the lives of the collection of subjects, one could, for example, analyse the implications of public service and work time schedules on the
division of labour between the sexes or between different
age groups.
The standard approach to the detection of such activity
patterns is to look for occurrences of a manually predetermined pattern in the collected diary data and study its distribution. Searching through the actual diaries, however, is
a time consuming and non-intuitive task. An effective visual representation of the data can be highly advantageous
in the identification of activity patterns in the data but still
the human-centred search is likely to overlook unexpected
patterns, which may be of highest research interest. Automating the pattern definition process will be extremely
valuable since it can bring new insight to the study of the
daily activities of individuals as well as optimize the workload of social scientists by allowing them to concentrate on
the analysis of the resulting patterns.
The work described in this paper combines sequential
data mining, visualization and interaction to enable the user
to study the everyday lives of populations and to analyse
their activity patterns. We have developed a visual activity
analysis tool containing both an automatic pattern extraction feature and an efficient visualization of the extracted
patterns [7,18]. The activity pattern extraction is performed

Figure 1. The original time geographical
representation of human space-time behaviour [10]. The, so called, ‘space-time
path’is a vertical trajectory representing the
movement of an individual in space and time.

by adapting the AprioriAll sequential pattern mining algorithm [2] to the social science diary data and introducing
user interaction to its computation. The visual representation used to visualize the extracted activity patterns has its
roots in time geographical concepts and is effective since
it allows the study of the patterns in the context of the individuals’ everyday lives. Finally the user is permitted to
freely interact with the identified results which allows in
depth study of these extracted patterns.
The remainder of this paper is arranged as follows. An
overview of the time geographical representation and its
role in this work is given in section 2. In section 3 an
overview of previous and related work is given. Section 4
introduces the algorithm and its stages. Section 5 describes
the results of the implementation and in section 6 conclusions are presented and some planned future work is discussed.

describe an individual’s total movement over time.
The original concept of time geography accounts only
for movement in space over time but does not provide
any information about the actual actions performed at each
place. This conceptual framework was therefore extended
in [5] to also apply to a conceptual space, instead of solely
a geographical one, as an attempt to study the everyday life
of individuals. Everyday life is made up of the activities
people perform which have a start time and a duration and
occur one after the other. One activity has to finish before
the next one can begin and so, just like the space-time path
in the original representation, a single continuous vertical
trajectory, the ‘activity path’, can be used to represent the
‘movement’ between activities performed by an individual
over a period of time (figure 3(a), 3(b)). The use of this time
geographical activity path in time-use studies of everyday
life is valuable since it allows the simultaneous observation
of entire groups while it preserves the individuality of the
group members.
Traditionally, time-use studies of everyday life use statistical representations such as bar- and pie-charts, which account for the accumulated time used for daily activities, and
also curves showing generalized trends of human behaviour.
These representations, a common example of which is the
added time-use representation (figure 2 left), hide informa-

2. Time Geographical Representation
An early attempt to visually conceptualize human spacetime behaviour is the time geographical framework described by Torsten H¨agerstrand [10]. In this conceptual
framework an individual’s spatial behaviour is defined by
the time constraints and trade-offs present in their life as
well as any existing socioeconomic restrictions. A vertical trajectory, the so called ‘space-time path’ (figure 1), is
used to represent the movement of an individual in space
and time. An individual cannot be in two places at the same
time, therefore a single continuous trajectory can be used to

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

Figure 2. Traditionally time-use studies use
representations that account for the accumulated time used for activities during the day.
This ‘added time-use’ representation, seen in
the left, hides information that may be important to a social scientist, for example when
during the day an activity occurs, how many
times per day and for how long. The ‘real
time-use’ representation, seen in the right,
clearly reveals this information.

(a) Front View Visualization

(b) Rotated View Visualization

(c) Front View Visualization

Figure 3. Visualizations in the Visual-TimePAcTS framework. (a) shows the activity paths of a couple
viewed from the front. This view is the ‘real time-use’ representation showing the switch between
activities performed during a work day. (b) shows a slightly rotated view of the activity paths where
the ‘movement’ between the activities and hence the similarity to the original ‘space time path’ becomes clear. (c) shows the front view visualization, which is the ‘real time-use’ representations, of
a population subset in the visualization framework. Time is shown in the y-axis and the individuals
are ordered along the x-axis by age and gender. Colours represent the 7 activity categories.

tion about the context in which the activities appear and
consequently the patterns that they form. The lost information includes such features as when during a day an activity
occurs, how many times per day and for how long. The real
time-use representation (figure 2 right) clearly shows this information. It is also in this representation that the strength
of the activity path lies which, seen from the front, forms a
real time-use representation of the activities performed during the course of the day, figure 3(a), 3(c).

3. Previous and Related Work
The time geographical principles and representations described above have, in previous work, been combined with
computer graphics, a database and interactive visualization
methods to develop an efficient visual activity-analysis tool
for interactively exploring everyday life [4, 6, 7].
The dataset that is currently used in this system is detailed diary data of individuals’ activities and has been collected by the national statistics bureau of sweden, Statistics Sweden (SCB) 1 , in a pilot time-use study performed on
1 http://www.scb.se

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

179 households consisting of 463 individuals. These collected activities are logged at 5 minute resolution and are
translated into a predefined hierarchical set of some 600
numerical codes, with 5 levels of detail, grouped under 7
main headings: care for oneself, care for others, household
care, reflection/recreation, transportation, procure and prepare food, and work/school.
Complex queries are applied to the activity diary
database through a graphical user interface in order to extract subsets of the data. Activity paths are then drawn of the
individuals that match the query criteria. The activity paths
are drawn in a coordinate system where the x-axis holds the
individuals, the y-axis is the time and the z-axis holds the
activities. Figure 3(c) shows an example of the front view
visualization of a subset of the total population. The activities are coloured by category and the activity paths are
ordered according to user preference, the default is by age
and sex. The real time-use representation seen in this figure already reveals some general trends about when during
the day activities occur. Interaction with the visualization
is available as well as picking for drilling down into the information about the individuals. Finally, a single activity or
one or more ranges of activities can be selected and colour-

mapped to highlight them and study their occurrence and
distribution amongst the other activities. This visual inspection method constituted our first attempt at studying activity
patterns in our application and has subsequenlty led to the
current work presented in this paper. But before continuing
we consider related work on methods for pattern detection.
There are several examples of visualization frameworks
for analysing temporal patterns. LifeLines [16] is one of the
early ones which uses horizontal lines to visualize personal
histories over time, such as medical or court records, and
provides access to details on demand. Trends and anomalies can be spotted in the data with the help of the visualization. Hochheiser et al introduced and extended timeboxes
as visual query operators for finding patterns in time series
data [3, 11, 12] in their application, TimeSearcher. PatternFinder [8] is another framework for visualization and pattern discovery in temporal data, primarily medical records,
which allows the user to search for patterns of interest by
making visual queries. These methods use visualization as
the main pattern detection tool. Recently automated extraction of activity patterns has become a topic of interest and
a number of useful methods have been developed. These
methods vary depending on field and questions of interest.
The most frequently seen pattern detection method in social sciences is optimal matching [1,13], originally designed
for similarity analysis of protein sequences. This method is
typically most effective in analysing how one or more specific activities are accommodated in each subject’s daily life
rather than in finding meaningful and unexpected patterns in
the data which is the goal here. ClustalG [19] is an example
of automated pattern detection that uses optimal matching
to detect related or similar patterns and visualizes them as
rows of colour-coded letters, each representing an activity.
Sequential pattern mining is widely used in other disciplines for finding frequently occurring sequences of events
in large databases and many alternative algorithms exist.
One popular algorithm, termed ‘AprioriAll’, for mining sequential patterns was initially described in [2], and refined
in [17], where the discovery of frequent sequential patterns in customer purchases was addressed using an extension of the well-known Apriori algorithm. This algorithm
searches for items which occur frequently in sequences in
the database and then constructs possible higher order itemsets ensuring that only those which are likely to exist are
ever tested. Further development has been carried out on
this algorithm to improve and optimize the search [9, 14]
and refine the constraints which can be applied [15, 20].
As this section has described, most existing systems for
pattern detection in this area either concentrate on visualization as the detection method or use solely algorithmic
computation to discover frequent patterns. The challenge
and contribution in this paper has been to, instead, combine
these features and create an integrated environment which

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

Figure 4. Visualization of an individual’s activity path showing examples of two pattern types.
In the pattern <‘walk’;‘buy
food’;‘walk’> the pattern activities occur immediately after each other in the activity path
of the individual giving a zero gap (gap =
0). The activities of the pattern <‘walk the
dog’;‘play with the dog’>, however, are separated in the activity path by two other activities which are not a part of the pattern, resulting in a gap of two (gap = 2).

makes it possible to automate the pattern identification process, select patterns of interest from the complete set discovered and interactively explore the nature of these patterns and how they are woven into people’s lives.

4. Pattern Extraction
In this paper sequential pattern mining is adapted to social science diary data in order to extract interesting activity patterns within populations and enable extensive analysis of eveyday human behaviour. An activity pattern is defined as a sequence of two or more activities related to each
other which, together, form some larger activity or project.
This sequence of n activities will also be referred to as an
n − tuple. The activities of the n − tuple can occur directly after each other leaving no gap between the pattern
activities (gap = 0), as in <‘walk’;‘buy food’;‘walk’> in
figure 4, or could be interrupted in the activity path by other
activities leaving a gap between the adjacent pattern activities. An example is the n − tuple <‘walk the dog’;‘play
with the dog’> in figure 4, which is interrupted by two activities which are not part of the pattern (gap = 2).
The AprioriAll algorithm [2] has been used as a starting point and adapted to match the needs of the data and
to increase the user’s control of the process. The pattern
identification algorithm loops over three steps:

✎

1. candidate activity patterns are generated

✍

2. the dataset is scanned and valid patterns are located
3. the identified patterns are filtered according to userspecified constraints.
When the algorithm has run to completion the identified patterns become available for visualization.
The pattern identification process can be controlled by
user-specified constraints that define the attributes that an
identified pattern should have in order to be valid. Such
constraints are:
• minimum/maximum duration of a pattern
• minimum/maximum gap between adjacent activities of
a pattern

☞

Constraints

✌

❄
Create
Tuples
.

Create
Doubles

✎
Constraints

✍

✛

PP ✏
✏✏
q✮
☞ P
✲ Identify
✌ Patterns
❄
Threshold
Patterns

❄
Occurrence
Graph

✲

✓

✏

✒

✑

Set
Constraints

Figure 5. Overview of the pattern identification algorithm. The algorithm is an adapted
AprioriAll algorithm.

• minimum/maximum number of pattern occurrences
• minimum/maximum number of people, or percentage
of the population, that should include the pattern.

activities, then the possible ways to join two 3 − tuples to
create potential 4 − tuples are:
(a, b, c)

4.1. Candidate Pattern Generation
This is the first step of each iteration of the algorithm
where the candidate n − tuples are created. In the first iteration all the single activities in the individuals’ activity data
are joined, denoted by ( ), to form pairs of activities. In the
next iteration these 2−tuples are joined to form 3−tuples,
then the 3 − tuples to form 4 − tuples etc. The fact that we
do not search purely on the basis of frequency of occurrence
makes the single activities, T1 , uninteresting as candidates
so we begin with the candidate 2 − tuples, T2 , which are
created using a brute-force search of each individual’s activity path to find all the pairs which are present. The simpler constraints (time limits, minimum/maximum gaps) are
taken into account during this initial search in order to optimize the procedure by avoiding the inclusion of candidates
which will immediately be rejected in the pattern location
step. The set of candidate 2 − tuples, T2 , will form the basis for the remainder of the search. All subsequent sets of
potential (n + 1) − tuples, Tn+1 , are constructed by joining
the elements of Tn , to create all possible potential tuples,
and then testing their validity.

Tn

Tn → Tn+1

Due to the sequential nature of the patterns we are seeking,
in order to join two n − tuples n − 1 elements in each of
them have to be identical and in the same order. So there
are only 4 ways for each pair of n − tuples to match and
they produce at most 2 results. If a, b, c, d denote different

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

(a, b, c)
(a, b, c)
(a, b, c)

(a, b, d) → (a, b, c, d)
→ (a, b, d, c)
(b, c, d) → (a, b, c, d)
(d, a, b) → (d, a, b, c)
(d, b, c) → (a, d, b, c)
→ (d, a, b, c)

An (n+1)−tuple in Tn+1 is potentially valid if and only
if all its subtuples of order n exist in Tn and so many of the
potential tuples generated can immediately be eliminated,
reducing the required searching.
Next, the generated candidate patterns are sent to the pattern location step.

4.2. Pattern Location
The diary data is searched, one individual (one activity
path) at a time, for occurrences of the current candidate patterns. This ensures efficient re-use of cached activity paths.
When the first activity of the candidate pattern is located in
the data a recursive search is initiated to match the following elements of the pattern in the remaining elements of the
activity path. When a valid pattern is located the occurrence
count of the pattern is incremented and a record is kept of
the person performing the pattern and of the pattern’s location in the dataset. During the dataset search the various
user-specified constraints on the patterns are taken into account and non-conforming patterns are rejected.
A data structure is used to keep track of the information
produced by each iteration of the algorithm. The data structure holds the order and number of the n − tuples produced

4.4. Pattern Visualization

Figure 6. Results of the pattern identification
algorithm as seen in the graphical user interface of the VISUAL-TimePAcTS application.
In the figure the 278 identified pattern triples
(3 − tuples) are selected and listed. From the
pattern list the pattern <‘prepare food’; ‘eat
dinner’; ‘wash up after dinner’> (<690; 6;
700>) is selected which occurs 82 times in
the selected population subset and is visualized in 7(a).

in the current iteration as well as the set of n − tuples themselves, Tn . For each n − tuple, an array of the individuals
that include the tuple in their activity path and an array of
locations where it occurs are also recorded. These last elements are used to make the subsequent visualization stage
more efficient.

4.3. Pattern Filtering

The data structure that stores the pattern information
contains the n − tuples that are valid according to the userdefined criteria. A graph of the distribution of occurrences
of the identified patterns is then drawn to aid the user in deciding the constraints for the next iteration of the algorithm.
A user can, for example, see that there are many patterns
occurring very few times and set a higher minimum occurrence frequency so that they will be excluded from the next
iteration. After setting the new constraints the algorithm
proceeds to the generation of Tn+1 .
If none of the Tn candidates survive the various filtering stages, or if the user chooses to end the pattern location
process at this point, then the algorithm terminates here and
proceeds to the visualization stage. Otherwise it returns to
the generation of the next higher order tuples.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

The resulting activity patterns, n − tuples, are listed by
order n in the graphical user interface of the visualization
framework, figure 6. The user can then select one or more
patterns to be displayed in the visualization window, in the
context of the activity paths of the currently selected population, figure 7. An important principle of the time geographical framework is that individuals should not be studied in isolation but in the context within which they are
found. Therefore the identified patterns are studied in the
visualization framework by bringing them into focus within
the activity path that contains them. The patterns are highlighted by being drawn in colour while the rest of the activities of the activity path are drawn in grey. In this way
the patterns can be studied in the context of the visualized
individuals’ day without the distraction of the surrounding
activities.
The activities of the identified patterns are, by default,
drawn in the colour assigned to the activity category to
which they belong. The user can, at any time, switch between the pattern highlighting mode and the default visualization to explore how the identified patterns fit into the
bigger picture. The user can also easily shift levels in the
tuple space. If they are examining one or more n − tuples
then they can explore the pattern space by examining the
sub-tuples which it comprises or the super-tuples to which
it contributes.
Further filtering can also be applied during the visualization phase. One or more activities that should be present in
the patterns can be specified in order to further reduce the
set of patterns. This is of value when a user is exploring
and studying patterns related to a certain activity category.
The distribution of the patterns over the day, the repetitiveness of the patterns as well as the duration of the activities within the pattern are all interesting attributes that are
maintained in the visualization and which can be used in
the post-generation filtering process to enhance the utility
of the pattern exploration system.
Detailed information about the patterns as well as their
surrounding activities can be retrieved on demand by mouse
selection of the activities in the visualization. The user can
also snapshot the display and save the current visualization
parameters to permit easy comparison of one pattern and its
distribution across a population with that of another.

5. Results
The pattern identification algorithm has been added to
the existing visualization framework and has resulted in a
very useful and easily managed feature.
The initial constraints are set in the graphical user interface and the generation of the candidate patterns is initiated.

(a) ‘Prepare Food; Eat Dinner; Washup’

(b) ‘Eat Dinner; Washup’

(c) ‘Eat Dinner’

Figure 7. An example of patterns identified by the algorithm. The triple pattern <prepare food; eat
dinner; wash up after dinner>, 7(a), shows that this pattern is performed mostly by women. It’s subpattern <eat dinner; wash up after dinner>, 7(b), shows that more men are engaged in this pattern
but the majority is still women. Finally at the single occurrence of the activity <eat dinner>, 7(c),
shows that it is equally distributed between both sexes. This example shows the uneven division
of labour within the household which becomes obvious through the visualization of the everyday
patterns of the sample population.

As each iteration completes a graph showing the distribution of the frequency of occurrence of the identified patterns
is drawn. The user can then set the constraints for the next
iteration,. The process continues until the algorithm has run
to completion, which is when no more new valid candidates
are created or no candidate patterns are located in the data.
The resulting patterns then become available to the user for
further filtering and visualization. An example of the resulting patterns identified by the algorithm is given below
to show the validity as well as the value of the algorithm.
The algorithm was run for individuals between age 26
and 46 with activity level of detail 2 (1 being the most detailed), resulting in a set of 190 individuals including 7303
activities. A constraint of maximum pattern duration of 4
hours was set, requiring that in order to be valid each pattern
should commence and end within a 4 hour time window.
The constraint that no gaps should be present in the activity path between the adjacent pattern activities was also set.
Finally, each pattern must be present in the activity paths
of a minimum of 20 individuals. An example of an identified activity pattern which was common for a large proportion of the population is the triple pattern <‘prepare food’;
‘eat dinner’; ‘wash up after dinner’>, figure 7(a). The figure shows that this activity pattern is performed mostly by
women. Looking at its sub-pattern <‘eat dinner’; ‘wash up
after dinner’>, figure 7(b), shows that while more men are
engaged in this pattern the majority are still women. Finally, looking at the occurrence of the single activity <‘eat
dinner’>, figure 7(c), shows that it is equally distributed
between both sexes. This could be seen as an example of

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

the uneven division of labour within the household that becomes obvious through the visualization of the everyday
patterns of the sample population. However, how the identified patterns can be interpreted depends on the user performing the study.
The algorithm and visualization framework are implemented using C++, OpenGL and wxWidgets for the user
interface. Table 1 shows some results of running the algorithm on a standard desktop PC with a 3GHz P4 CPU
and 1GB RAM, for the dataset described above (190 individuals, comprising 7303 activities) applying different constraints on the pattern search. These results show that patterns can be extracted in interactive times for large subsets
of the population, as long as some constraints are set on the
pattern search.
The computational complexity of the search algorithm
is, at most, O(n2 ) in the number of activities present in the
data being analysed. Applying constraints on the activity
pattern detection further lowers the complexity. How the
constraints on the pattern detection will affect the computation time is, however, unpredictable since these constraints,
combined with the specific data being analysed, affect both
the number of patterns rejected/retained at each stage and
also the time required to locate each pattern in the activity data. This effect is apparent in the results shown in table 1 where the final test run, using comparatively loose
constraints (particularly with respect to the permitted gap)
on the patterns, results in very long run times. The majority
of this time is not spent in the candidate pattern generation but in the pattern location which is carried out exhaus-

Example
1
2

3

4

TupleOrder
2
3
2
3
4
2
3
4
5
6
2
3
4
5
6
7
8
9

Constraints
MIN
MAX
People Time
2
20
4

LOD

MAX
Gap
0

2

20

4

3

2

10

8

3

2

4

6

-

Pattern
Activities
22
15
33
22
12
59
42
26
17
5
143
122
100
76
55
38
29
13

Results
# Tuple
Occurences
31
581737
8
57060
128
2102972
73
661930
8
51909
390
2289035
400
1942036
198
759932
35
121200
3
8028
2824
6362023
11959
24278461
17380
36737026
10581
20209221
3493
4898064
722
827870
90
90305
4
5010

# Tuples

TIME (sec)
1.3
0.7
2.3
0.8
0.6
2.2
1.7
1.0
0.7
0.6
4.5
560
1820
1410
260
14
1.2
0.5

Table 1. Table of results from running the algorithm for individuals aged 26 to 46 and testing various constraints. The dataset includes 190 individuals, 7303 activities. The algorithm was run on a
standard desktop PC with a 3GHz P4 CPU and 1GB RAM.

tively to enable rapid visualization of the patterns found.
By accepting a less interactive visualization procedure this
exhaustive search can be omitted and the computation time
significantly reduced, but the users typically search using
fairly strict constraints so this has so far proven unnecessary.

6. Conclusions and Future Work
This paper has presented a method for discovering unexpected and potentially interesting patterns in social science diary data through a combination of an automatic
pattern mining algorithm and an appropriate visualization
method. The pattern identification is performed by an
adapted sequential pattern mining algorithm which automatically identifies all patterns in the data that comply with
a number of constraints that are specified by the user. The
extracted patterns are then visualized in a time geographical manner and are made available to the user for study and
analysis.
The combination of the automated pattern identification
algorithm, the flexible filtering criteria which the user can
apply during the generation phase, and the time geographical visualization framework makes this a very powerful tool
for the identification of interesting new patterns in social

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

science data. The initial feedback received from the social
science community has been very positive. They consider
it to be a very useful visual exploration tool allowing the
study of the activity patterns of a population as a group of
individuals instead of as an anonymous mass, a common
problem with the statistical methods often used in the social
sciences. This permits users to gain insight into the subject’s behaviour in the context of their daily lives.

Many optimizations to improve the performance are possible, in particular a more efficient data structure for saving
the candidate patterns would enhance both the search process and the performance of the visualization itself, allowing larger data sets to be more easily considered. The performance of alternative search mechanisms on the data will
also be explored as will the addition of alternative filtering
criteria both at the search and visualization stages. The latter would give the user more control of the search process
and allow more complex measures of interestingness to be
applied to the patterns recovered. Finally, searching the data
for the absence of activities in a sequence, or for abnormal,
unusual means to achieve a complex task is an interesting
aspect of human behaviour and a challenging problem to
solve.

References
[1] A. Abbott and A. Tsay. Sequence analysis and optimal
matching methods in sociology: Review and prospect. Sociological Methods Research, 29(1):3–33, 2000.
[2] R. Agrawal and R. Srikant. Mining sequential patterns. In
P. S. Yu and A. S. P. Chen, editors, Eleventh International
Conference on Data Engineering, pages 3–14, Taipei, Taiwan, 1995. IEEE Computer Society Press.
[3] P. Buono, A. Aris, C. Plaisant, A. Khella, and B. Shneiderman. Interactive pattern search in time series. In Proceedings of Conference on Visualization and Data Analysis (VDA
2005), pages 175–186, 2005.
[4] K. Elleg˚ard and M. Cooper. Complexity in daily life 3D-visualization showing activity patterns in their contexts.
electronic International Journal of Time Use Research (eIJTUR), 1:37–59, 2004.
[5] K. Elleg˚ard, T. H¨agerstrand, and B. Lenntorp. Activity organization and the genration of daily travel: two future alternatives. Economic geography, 53(2):126–152, 1977.
[6] K. Elleg˚ard, J. T¨orne, H. Joanson, A. Ynnerman, and
M. Cooper. The time-geography project - using computer
graphics to visualize problems in social science. In Sketches
and Applications - SIGGRAPH2002, San Antonio, Texas,
USA, 2002.
[7] K. Elleg˚ard and K. Vrotsou. Capturing patterns of everyday life - presentation of the visualization method VISUALTimePAcTS. In IATUR - XXVIII Annual Conference,
Copenhagen, Denmark, August 16-18 2006.
[8] J. Fails, A. Karlson, L. Shahamat, and B. Shneiderman. A
visual interface for multivariate temporal data: Finding patterns of events across multiple histories. In Proceedings of
IEEE Symposium on Visual Analytics Science and Technology (VAST), October 31 - November 2 2006.
[9] M. N. Garofalakis, R. Rastogi, and K. Shim. SPIRIT: Sequential pattern mining with regular expression constraints.
In The VLDB Journal, pages 223–234, 1999.
[10] T. H¨agerstrand. What about people in regional science. Regional Science Association Papers, 14:7–21, 1970.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

[11] H. Hochheiser and B. Shneiderman. Dynamic query tools
for time series data sets: timebox widgets for interactive exploration. Information Visualization, 3(1):1–18, 2004.
[12] E. J. Keogh, H. Hochheiser, and B. Shneiderman. An augmented visual query mechanism for finding patterns in time
series data. In FQAS ’02: Proceedings of the 5th International Conference on Flexible Query Answering Systems,
pages 240–250, London, UK, 2002. Springer-Verlag.
[13] L. Lesnard. Optimal matching and social sciences. Working paper, CREST (Centre for Research into Elections and
Social Trends), January 2006.
[14] F. Masseglia, P. Poncelet, and M. Teisseire. Pre-processing
time constraints for efficiently mining generalized sequential patterns. In TIME ’04: Proceedings of the 11th International Symposium on Temporal Representation and Reasoning (TIME’04), pages 87–95, Washington, DC, USA, 2004.
IEEE Computer Society.
[15] J. Pei, J. Han, and W. Wang. Mining sequential patterns with
constraints in large databases. In CIKM ’02: Proceedings
of the eleventh international conference on Information and
knowledge management, pages 18–25, New York, NY, USA,
2002. ACM Press.
[16] C. Plaisant, B. Milash, A. Rose, S. Widoff, and B. Shneiderman. Lifelines: visualizing personal histories. In CHI ’96:
Proceedings of the SIGCHI conference on Human factors in
computing systems, New York, NY, USA, 1996. ACM Press.
[17] R. Srikant and R. Agrawal. Mining sequential patterns: Generalizations and performance improvements. In P. M. G.
Apers, M. Bouzeghoub, and G. Gardarin, editors, Proc. 5th
Int. Conf. Extending Database Technology, EDBT, volume
1057, pages 3–17. Springer-Verlag, 1996.
[18] K. Vrotsou and M. Cooper. Interactive visual exploration of
time-use data. Poster in 10th International Conference on
Information Visualisation, July 5-7 2006.
[19] C. Wilson. Activity patterns of canadian women: Application of ClustalG sequence alignment software. Transportation Research Record, (1777):55–67, 2001.
[20] Y. Xiong and Y. Zhu. A multi-supports-based sequential pattern mining algorithm. In CIT, pages 170–174. IEEE Computer Society, 2005.

