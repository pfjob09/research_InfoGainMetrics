A Framework for Adaptive e-Learning Systems in Higher Education with
Information Visualization
Mariko Sasakura, Susumu Yamasaki
Department of Computer Science,
Graduate School of Natural Science and Technology, Okayama University, Japan
sasakura@momo.it.okayama-u.ac.jp

Abstract
E-learning systems have become important in higher education, especially in universities. An adaptive e-learning
system, which dynamically generates suitable courses for
each student, is one of the most remarkable research ﬁelds.
In this paper, we propose a general framework for adaptive e-learning systems, and discuss the role of information
visualization in adaptive e-learning systems.

1. Introduction
E-learning systems have become important in higher education, especially in universities. Many commercial products and open source systems, such as Blackboard 1 , WebCT 2 , and Moodle 3 , have been developed. E-learning systems are widely used in remote education, as assistance for
communication between a teacher and students with e-mails
or bulletin board systems. In this paper, we discuss selflearning systems in which students read materials and take
examinations by themselves whenever they want. Teachers provide materials and exercises in advance, and check
results of students at intervals.
The problems of self-learning systems are
• keeping motivation for learning of a student
and
• difﬁculties in constructing course materials by teachers.
One of the answers for the ﬁrst problem is an adaptive
e-learning system [1, 2, 4, 9]. An adaptive e-learning system generates an educational course in accordance with understanding of a student. Since a student can review materials which he/she does not master at an appropriate time,
1 http://www.blakboard.com
2 http://www.webct.com
3 http://moodle.org

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

the decrease of his/her motivation is considered to be prevented. The problem in adaptive e-learning systems is the
way how to build a course that suits to each student. Knolmayer used a decision making method to build a course [7].
Marshall and Metchell proposed to use the Capability Maturity Model and SPICE that were results of software engineering [8]. Conlan et al. proposed a qualitative model
for adaptive e-learning [6]. Conejo et al. made a tool to
generate exercises automatically [5]. Brusilovsky and Maybury proposed to use the web system to build a adaptive
system [3].
For the second problem of self-learning systems, authoring systems which assist making materials and constructing
educational course may be considered to be useful. Especially in adaptive e-learning systems, teachers must make
and construct not only “standard” course materials but also
those for reviews. The work of teachers in adaptive elearning systems may be harder than in non-adaptive elearning systems. There are some works of a supportive
system for authors to write materials [10, 13] .
In this paper, we report two research topics. The ﬁrst
one is that we try to show a general mathematical model
for course generation of adaptive e-learning systems, because models of existent adaptive e-learning systems are
not obvious from the view point of mathematics. The second is that we investigate authoring supports for adaptive
e-learning systems from the point of view of information
visualization. Authors may be bored with relation among
materials which may make complicated graph. We expect
information visualization may assist them.
We have studied the calculus that leads sequential information from rules that represented by situations and charts
or actions [12, 16]. We have also applied the calculus to
the part production problem in factories [15]. In this paper,
We propose a new application of the calculus that can be
adapted to e-learning systems. It is based on the model that
contains characteristics of e-learning systems.
In section 2, we describe a general model for an adaptive
e-learning system. In section 3, we mention implementation

issues when we implement the model. We show a prototype
system we developed based on the model in section 4, and
discuss an authoring support from information visualization
in section 4.2.

2. The Basic Model
In this section, at ﬁrst, we discuss the characteristics
of e-learning systems and show a model of an adaptive elearning system for a student. Then we extend it to a system
for more than one student.

2.1. The characteristics of e-learning systems
E-learning systems are suitable applications to use our
calculus that leads sequential information from rules represented by charts and situations. Situations which represent student’s inner model and charts are educational materials. If a student studies a material, then the inner model
of the student is changed to ready to study other materials. The student learns an educational course by repetition
of this procedure. Our calculus [16] may generate an educational course by representing materials as charts and student’s model as situations.
However, in an e-learning system, some students do not
master a material even if they study a materials. The situation after studying a material is different for different people. Some student may master a material by studying it
once, other students may not understand a material at all.
The inner models of students after studying a material may
be different even if the inner models are same before studying it. Therefore we will build an examination mechanism
into our model, which leads to other situations by results of
an examination that checks whether a student does master a
material or not.

2.2. The Model for a student
The model of a self-learning system for a student in
higher education is

(vi) Situation : U × σ → P S is a function.
A unit is a minimal set of course materials which a student reads or interacts with. A unit consists of materials
and an examination which is a list of exercises. S means
the start set whose element can be the start unit from which
a student starts a course.
A state s ∈ σ means the progress of learning of a student,
in other word, an inner model of a student. In concretely, it
is a set of learning results of units.
P rocess has at least one rule which is represented as the
following form:
A B or
A ⊥,
where A, B ∈ U . A B means that the unit B should
be learned after the unit A. A ⊥ means that there is no
unit speciﬁed after learning the unit A. P rocess speciﬁes a
“standard course” which a student traces it if he/she never
fails its examination.
A passing status is “Success”,“F alse” or “N one”. It is
a return value of Situation.
Situation is a function which shows the learning result
of the speciﬁed unit. Its input is a pair of a unit and state of
the student, and output is P S that is “Success”, “F ail” or
“N one”. “Success” means that the student has passed the
unit in the state. “F ail” means that the student has failed
to pass the unit. “N one” means that the student has not
learned the unit in the state.
The predicate N extU nit(p, s, q), for p, q ∈ P, s ∈ σ
shows that the unit q which should be learned after the unit
p in the state σ. The predicate behaves by the rules in Figure
1. According to the rules,
1. A course starts from the unit which is an element of S.
2. If a student passes the examination of a unit, the next
unit is speciﬁed by P rocess.
3. If a student fails to pass the examination of a unit, the
next unit is a unit which the student has tried but never
passed.
The basic procedure to decide the next unit is shown in
Figure 2.

= (U, σ, S, P rocess, P S, Situation)
where :
(i) U is a set of units.
(ii) σ is a set of states.
(iii) S is a subset of U .
(iv) P rocess is a set of rules.
(v) P S = {“Success”|“F ail”|“N one”} is a set of passing status which represents the result of learning a unit.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

2.3. The Model for more than one student
The e-learning system E which can be used by more than
one student is modelled as
E = (U, Σ, S, CourseT able, P S, Situation),
where U is a set of units. Σ is a set of σ of the model ,
a set of situations of all students who use this system. S is
a set of start units. CourseT able is a table which designs
educational courses, which is a set of P rocess in the model

(1)
(2)

(3)

N extU nit(null, s, q) ← q ∈ S, s ∈ σ, Situation(q, s) = “Success”
N extU nit(p, s, q) ← p ∈ U, q ∈ U, s ∈ σi ,
p q ∈ P rocess, Situation(p, s) = “Success”,
Situation(q, s) = “Success”
N extU nit(p, σ, q) ← p ∈ U, q ∈ U, s ∈ σ,
Situation(p, s) = “F ail”, Situation(q, s) = “F ail”
Figure 1. The rules of the predicate N extU nit.

. P S is the same in the model . Situation : U × Σ →
P S is a similar function of Situation in the model , but
for plural students.
In the system, U , S and CourseT able is common in all
students. Each student has different situation.

3. Implementation Issues
We have developed a prototype system based on the
model mentioned in section 2. In this section, we discuss
implementation issues of the system.

3.1. System design
The prototype system we have developed is constructed
based on the model for a student. We arrange the model for
adaptive e-learning systems as following.
Input: the unit of current which is currently performed
Output: the unit next which will be performed next of
the current
function getNextUnit(current);
begin
Show the lecture part of current;
Perform the examination part of current;
Add the result of the examination to σ;
if ∀s ∈ σ, Situation(current, s) =“Success” then
begin
Find a rule R from P rocess of which right
side is current;
Return the left side of R
end
else
begin
Find a pair P = (u, ”F alse”) ∈ σ;
Return u
end
end
Figure 2. The function which decides next
unit.

• A course branches according to the result of examinations.
• For frequently wrong answers, the special course materials will be provided.
Students access the system via an web browser. It consists of an web interface and a database which contains materials, exercises and course information. The model is implemented as following.
• U : A unit consists of materials and an examination
which is a list of exercises. In the prototype system,
materials are implemented as a web page and exercises
for an examination are stored in the database. The
connections between materials and exercises are also
stored in the database.
• σ: It is stored in the database.
• S: It is a web page which a student starts at learning.
We assume the URL of the start page is announced,
therefore the system has no obvious information on the
start pages.
• P rocess: It speciﬁes an educational course. In the
system, a course branches according to the result of
examinations. P rocess is implemented as several tables in the database.
• Situation: The function of Situation is implemented
as accessing appropriate tables in the database.

3.2. Units
A unit is a minimal set of course materials and an examination. Materials are implemented as web pages.
The material page is prepared as an html ﬁle of which
URL is stored in the database. The examination page is generated dynamically by selecting relative exercises randomly
which are stored in the database.

3.3. Database
In the system, we use four tables.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

• The unit table
• The course table
• The exercise table
• The wrong answers table
The unit table lists the name of unit and speciﬁes a URL
which is a material of the unit. The table consists of a set of
pairs of a name of unit and relative URL.
The course table is an implementation of the P rocess
of the model. It consists of a set of pairs of names of units
which indicate the ﬁrst unit and the second unit. If a student
passes the ﬁrst unit, then he/she learns the second unit.
The exercise table is a set of exercises. An exercise is
represented as a name of unit, the text of the exercise, the
correct answer of it and the name of reviewing unit which
should be learned if a student makes a wrong answer for the
exercise.
The wrong answers table is a set of typical wrong answers against the exercises. This table should include teachers’ experiences, that is mistakes that are students tend to
make often, the reason why students make the mistake, what
students should study again to correct the mistake. The table
should be generated automatically in the future, by collecting logs of students’ exercises.

3.4. Examination
An examination page will be generated every time someone accesses the examination page. The system chooses exercises from the database and makes an examination page
dynamically. Because some one may fail to pass the examination more than once, the system generates different
examination pages each time.
The system grades the examination by comparing the
student’s answer to the correct answer in the database. If
the student’s answer is wrong, the system checks the relative unit in the student’s status as “Fail”. If the all answers
of the student are correct, the system checks the relative unit
as “Success”.

4. Overview of the prototype system
In this section, we mention the user interface of the prototype system.
The prototype system consists of two parts.
• Self-learning part: it is based on the model represented
in section 2. A student uses this part.
• Authoring part: it is for making materials and exercises. This part is used by teachers. It helps teachers
to store connections of materials.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

4.1. A self-learning part
Figure 3 and 4 show the user interface of the prototype
system. These are a part of a course of ML exercise which is
constructed base on the Ullman’s textbook [14]. In Figure
3, the deﬁnition of functions in ML is explained, and in
Figure 4 is an examination page about function deﬁnition. A
student reads Figure 3 at ﬁrst, then tries exercises in Figure
4.
When a student inputs his/her answers and puts “send
button”, the system grades the answers. Then according to
the result of the examination, the system decides the next
unit that will be learned.
The current system supports only ﬁll-in-the-blank exercises. To grade a whole program answered by a student is a
future work.

4.2. An authoring part
In the adaptive e-learning system, we must manage materials, exercises and relation between them. They should
are generated by teachers. Since relations among materials
may be complicated in adaptive e-learning systems, impositions of teachers should be increased.
We list up the relations among units used in the prototype
system we developed.
• Standard course. It lays out the order of units when a
student masters them successfully.
• Review course. It speciﬁes units that should be studied
when a student makes wrong answers for an examination.
• Special course. It speciﬁes units that should be studied
when a student makes popular mistakes in an examination.
Each unit has these three kinds of relations to other units.
Therefore, the relations among units are complicated. We
can help teachers to manage the relations by information
visualization.
In Figure 5, we show the relations of materials of the ML
course we developed in Okayama University. The course is
based on the Ullman’s textbook [14]. This ﬁgure is generated using Grappa 4 . The nodes ﬁlled black are materials for the standard course. The nodes ﬁlled gray indicate
sets of exercises. The white nodes are materials for reviewing. Some nodes appear in the standard course and review
course. For example, the node “FunctionDeﬁnitions” is in
the standard course and also in review course. We can ﬁnd
it by showing two arrows in the node.
4 http://www.research.att.com/∼john/Grappa/

The ﬁgure is complicated so that it is hard to maintain it
or modify it consistency without the assistance of visualization. It is useful to manage adaptive e-learning systems by
graph visualization. It may be also useful to modify graphs
directly by the interface like [11] which proposes a kind of
visual languages.

5. Conclusion
We propose a framework for adaptive e-learning systems
and show a prototype system based on the framework. The
system consists of two parts, the self-learning part and the
authoring part.
We point out two problems of self-learning systems, and
propose a solution for them. The model we have proposed is
simple and effective to represent a framework for adaptive
e-learning systems. The information visualization will be
useful to avoid difﬁculties in the authoring part.
Furthermore, we would like to develop a practical system
based on the proposed model and user interface.

References
Figure 3. An web page for explanation.

[1] Brusilovsky, P., Schwarz, E. and Weber, G. “ELMART: an intelligent tutoring system on World Wide
Web Intelligent Tutoring Systems”, Lecture Notes in
Computer Science, Vol.1086 (Proceedings of Third
International Conference on Intelligent Tutoring Systems, ITS-96), pp.261–269, 1996.
[2] Brusilovsky, P. and Nijhavan, H. “A framework for
adaptive e-learning based on distributed re-usable
learning activities”, Proceedings of World Conference
on E-learning, 2002, pp.154–161, 2002.
[3] Brusilovsky, P. and Maybury, M. T. “From adaptive
hypermedia to the adaptive web”, Communications of
the ACM, vol.45, no.5, pp.31-33, 2002.
[4] Brusilovsky, P. “KnowledgeTree: a distributed architecture for adaptive E-Learning”, Proceedings of
the 13th international World Wide Web conference,
pp.104–113, 2004.
[5] Conejo, R., Guzm´an, E., Mill´an, E., Trella, M., P´erezDe-La-Cruz, J. L. and R´ıos,A. “SIETTE: a web-based
tool for adaptive testing”, International Journal of Artiﬁcial Intelligence in Education, 14, pp.29–61, 2004.

Figure 4. An web page for examination.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

[6] Conlan, O., Wade, V., Bruen, C. and Gargan, W.,
“Multi-model, metadata driven approach to adaptive hypermedia services for personalized eLearning”,
Adaptive Hypermedia and Adaptive Web-Based Systems: Second International Conference, AH 2002,
pp.100–111, 2002.

Figure 5. A graph of a course.

[7] Knolmayer, G. F. “Decision support models for composing and navigating through e-learning objects”,
System Sciences, 2003. Proceedings of the 36th Annual Hawaii International Conference, 10pp., 2003.
[8] Marshall, S. and Mitchell, G. “Applying SPICE to eLearning: an e-Learning maturity model?”, Proceedings of the sixth conference on Australasian computing education, pp.185–191, 2004.
[9] Paramythis, A. and Loidl-Reisinger, S., “Adaptive learning environments and e-learning standards”,
Electronic Journal of eLearning, 2(1), March, 2004.
[10] Ritter, S., Anderson, J., Cytrynowicz, M. and
Medvedeva, O. “Authoring content in the PAT algebra tutor”, Journal of Interactive Media in Education,
98 (9), 24pages, 1998.
[11] Sasakura, M., Iwata, K. and Yamasaki, S., “Picture
script: visualizing graphical user interface commands
for recycling”, IPSI Trans. on Advanced Research,
Vol.2, No.1, pp.16-21, 2006.
[12] Sasakura, M., Iwata, K. and Yamasaki, S., “An interactive environment for generating sequential information”, Proceedings of Tenth International Conference on Information Visualization(IV06), pp.441-446,
2006.
[13] Sosnovsky, S., Brusilovsky, P., and Yudelson, M.,
“Supporting adaptive hypermedia authors with automated content indexing”, Proceedings of Second
International Workshop on Authoring of Adaptive
and Adaptable Educational Hypermedia at the Third
International Conference on Adaptive Hypermedia
and Adaptive Web-Based Systems (AH’2004), 10pp.
2004.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

[14] Ullman, J. D. “Element of ML programming”, Prentice Hall International, Inc, 1994.
[15] Yamasaki, S., Iwata, K. and Sasakura, M., “Reasoning
procedure and implementation for logic programs as
managing schemes to extract demand”, IPSI Trans. on
Advanced Research, Vol.1, No.1, pp.83-90, 2005.
[16] Yamasaki, S. and Sasakura, M., “A calculus effectively performing event formation with visualization”,
Proc. of ISHPC 2005 (CD-ROM), 2005.

