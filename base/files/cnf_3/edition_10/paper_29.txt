A Visualization System of Relationships among Papers Based on the Graph
Drawing Problem
Sho TANABE, Kayoko OYOBE, Norifumi SUNAOKA, Setsuo YOKOYAMA and Youzou MIYADERA
Tokyo Gakugei University
4-1-1 Nukuikita-machi, Koganei-shi, Tokyo 184-8501, Japan
tanabe@cs.u-gakugei.ac.jp, miyadera@u-gakugei.ac.jp

Abstract
This study developed a support system that can retrieve
papers by using the paper-relationship diagrams (PRDs)
that express the relationships among papers. The system
has the following functions: (1) users can see various relationships among papers by visualizing of PRDs and (2) the
visualization patterns can be changed dynamically by users
own point of view. To implement the dynamic and safe visualization of the PRDs, the authors formalized user requirements for visualization as a set of constraints on the graph
drawing problem, and developed an algorithm that visualizes the PRDs based on the graph drawing problem. By the
implementation of the dynamic and safe visualization of the
PRDs, users can see various relationships among papers by
changing their own point of view.

1. Introduction
There are many ways of searching for scientific papers,
for example, by checking published sources (including journals, conference proceedings, etc.), reviewing lists of references in the target paper, or by using various search engines
including those available on the Web. However, all these
methods have a number of problems. First, all are timeconsuming. Second, the relationship between the paper you
are looking for and other papers is not always clear. Third,
it is impossible to find papers that do not include any keywords the user has specified. To solve these problems, some
system must support users to search with the exact purpose,
to understand the relationship among papers, and to obtain
information about similar and relatively similar papers.
In this study, we focused on the development of a support
system that can search for and retrieve papers from various
sources. The system can automatically extract the relationship among papers and visualized it.
We focused on the IR (information retrieval) and IV (in-

formation visualization) areas as the related study. There
are online search systems such as digital libraries or online
journals that are based on the use of keywords for IR [1,2].
The focus in IR has been on how to improve the precision
of ranking the documents and how to automatically classify
them. However, another problem is that the user cannot see
the relationship among papers while searching. In the area
of IV [3,4,5,15], visualizing tools have been developed [6,7]
that arrange papers in a 2- or 3-dimensional space based
on the similarity between them, the refer/referred relationship, and bibliographies. To arrange papers, the tools use
self-organization maps [8], multi-dimensional indexing [9],
spring models [7], concept networks [10], and other techniques. With these tools, the user can freely move arranged
objects. However, because the view patterns are fixed, the
user can see the relationship among objects for only specific
purpose. The user therefore cannot see the relationship from
the user’s own point of view. Moreover, there are risks that
the drawing algorithms that arrange papers on the various
view patterns have the time complexity of NP-Complete,
and a huge amount of space for displaying is required [11].
As this, the dynamic and safe visualization have to be guaranteed.
We therefore approached based on ”Graph drawing problems [12]” to solve above problems. First, we treat user requirements as constraints for graph drawing. If the user puts
together several constraints, he/she can dynamically construct various view patterns for the relationship among papers based on his/her own point of view. Next, we develop
an efficient algorithm that draws the relationships among
papers. By treating visualization of the relationships, as
a graph drawing problem, the safe visualization (for time
complexity and space) can be guaranteed [11]. Final, we
develop a visualization system of the relationships, based
on the theoretical results, which can support users to provide the relationships among papers and to efficiently search
papers.
The system that supports users to understand the relationships among papers in the research field, like our devel-

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

oped system, does not exist now. In this point, our system
can insist on originality and the latest. Moreover, the point
that the result of theoretical computer science applies to the
development of the system can differentiate to other systems.
In this paper, we describe the visualization system and
show how it supports search activities. Section 2 describes
the theoretical side of safe visualization. Section 3 describes
an outline of the system. Section 4 shows how the system
can support the searching for papers. Section 5 provides our
conclusions and outlines our future work.

by using the most efficient path, taking the strength of the
relationship between papers into account.
Here, we proposed only three visualization patterns;
however, other visualization patterns can also be used. The
user can construct various kinds of visualization patterns
(for example, arranging papers in the transverse direction in
the order of strength of the relationship, arranging papers in
a chronological order, and so on), and the user can see the
relationships among papers from his/her own point of view.
Thus, requirement 4 can be satisfied.

2. Visualization of the relationship among papers
The goal of our study is to develop a system capable of
supporting efficient search activities. We therefore propose
user requirements for search activities and a method of visualization that satisfies these requirements.

2.1. User models for search activities
First, we describe the user requirements for search activities and propose visualization patterns that satisfy the requirements. The requirements are the following four items:

Figure 1. Visualization pattern (1)

1. Find the relationship among papers related by keywords.
2. Find the relationships among research fields of the target paper and other papers.
3. Find papers that the target paper affects or is affected
by.
4. Find the relationship among papers from a new point
of view that the user has not discovered.
To satisfy these requirements, we propose the following
visualization patterns.
First, an expression method to determine the relationship
between papers with distance is proposed (Figure 1). This
satisfies requirements 1, 2, and 3. In this figure, the target
paper is in the center, and the reference papers are arranged
in the shape of a concentric circle around the target paper
in the order of strength of the relationship. This visualization pattern enables the user to understand the strength of
the relationship between the target paper and the reference
papers.
Requirements 2 and 3 can also be satisfied by arranging
papers related to the target paper hierarchically (Figures 2
and 3). These visualization patterns clarify the hierarchical relationship among papers. Moreover, they ensure that
the user follows the reference chain from the target paper

Figure 2. Visualization pattern (2)
In the following, we describe the model and the implementation method of the system.

2.2. Visualization model for the relationships among
papers
In order to construct visualization patterns that satisfy
the user requirements described in Section 2.1, we propose
a visualization model for the relationship among papers.
Figures 1, 2, and 3 show examples of visualization patterns.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

of most popular method for normalize, to express the degree of similarity among papers. We normalize similarity
by using the following expression so that we could use real
numbers from 1.0 to 10.0.
mx my

a · dix djy
i=1 j=1

rel(x, y) = cos(dx , dy ) =

mx

m

d2ix

i=1

if
if

Here, the rectangle shows a paper, and the edge expresses
the refer/referred relationship and shows the degree of similarity between papers as an attribute of edges.
In this study, we arrange a network structure of relationships among papers on a 2-dimensional plane. To enable
visualization, it is necessary to find the degree of similarity
between papers. To do that, we characterize each paper and
quantify the degree of similarity between the papers. In the
following, we define the terms used in visualization models
and describe the method of quantification.
Paper characterization. We characterize papers by using
index words appearing in the papers and the weight of each
index word. It is defined as follows.
def

(1)

j
express index words (nouns) in
Here, w1j , w2j , · · · , wm
j
j
paper Dj , and d1 , d2 , · · · , djm express the weight of each
index word.
The weight of an index word is defined as follows.

fij · log
dij =

n
nji

mj

d2jy
j=1

then a = 1
then a = 0

We transform the similarity among papers into distance
with the expression (3). The stronger the similarity between
the papers is, the distance between them shortens.

Figure 3. Visualization pattern (3)

j
j, djm j)
char(Dj ) ≡ (w1j , dj1 ), (w2j , dj2 ), · · · , (wm

(wix = wjy )
(wix = wjy )

(3)
y

(2)

(fij gi )2
i=1

Here, fij expresses frequency of index word wi in ,
Dj , m expresses total number of index word in Dj , n expresses total number of documents and nji expresses total
number of documents that include index word wij .
Quantification of similarity. We use the cosine scale, one

Global degree of relationship (Grel). The strength of the
relationship among papers takes into account the degree of
similarity among them and their refer/referred relationship.
To quantify the strength of the relationship between the target paper and the other papers, we define as follows.
Grel(root, p) =

min

(α · (Level(p) − 1)

path(root,p)

+β ·

rel(i, j))

(4)

root∼p

Level expresses the level of the refer/referred relationship and rel(i, j) expresses the degree of similarity between
paper Di and paper Dj . Each weight of Level and rel can
be changed by using the parameters α and β . Expediently,
we assume α = β = 1.0 .
The equation expresses the strength from one paper
(root) to another paper (p) that takes the degree of similarity between the papers and the depth of their refer/referred
relationship into account. Grel is defined as the sum of
values of the degree of similarity of a paper to another paper and the value of the level of the refer/referred relationship. The stronger the relationship, the smaller the value of
Grel is. Calculating Grel also means selecting the most
suitable path from the target paper to other papers. In this
way, by calculating Grel for all other papers, the relationship among papers as a network structure is changed as tree
structure. We call this tree a ’minimum spanning tree’ in
this study.

2.3. Dynamic visualization with the user requirements
To enable dynamic visualization, we represent visualization patterns as a combination of drawing constraints. For

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

example, various types of arranging papers, including arranging papers in the transverse direction in the order from
the largest value of Grel and, arranging papers in a chronological order are assumed to be ”constraints”. Dynamic visualization with the user requirements is implemented by
combining these constraints. To enable safe visualization
described in Section 1, we formulate the relationship among
papers mathematically. In this study, we treat the visualization of the relationship among papers as a graph.
Formulation of PRDs and drawing conditions. We represent the relationship among papers in the form of paperrelationship diagrams in which a paper is represented as a
node and the refer/referred relationship is represented as an
edge. Each node has detailed information (bibliographies)
about the paper’s title, its publication year, the authors, and
so on specified as its attributes. An edge has the degree
of similarity and index words between papers specified as
its attributes. Paper-relationship diagrams are formulated as
follows.

Constraint
No
1
1a
1b
1c

Definition Paper-Relation Diagram(PRD).
P RD = (G, π, ω, r, width, height)
G = (V, E)
V :node(paper),E :edge(refer/referred relation)
π:drawing function for node of graph G V →
R×R
ω:function that find coordinates of both ends of
edge
r:root cell r ∈ V
width:width function V → R
height:height function V → R
//

In this way, we formulate the relationship among papers
as a graph and define the functions for providing coordinates of the nodes and both ends of an edge. We define
the root node representing the target paper. The weight
and height of the node are determined based on the widthfunction and height-function.
Next, we propose the drawing conditions to draw paperrelationship diagrams in a 2-dimensional plane, and we formulate these conditions. The drawing conditions are formulated based on the user requirements for the visualization of
the relationship among papers.
Drawing conditions. We propose drawing constraints,
which are formulated from the user requirements, as shown
in Table 1.
We propose drawing conditions by combining various
drawing constraints.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

2
3
4
4a
4b
5
5a
5b
6
7
7a
7b
8
8a
8b
8c

9
9a
10
10a
10b
10c

Table 1. Constraints
content
Constraints about the position of cells
Child cells being placed below Parent cells
Child cells being placed above Parent cells
The cell is drawn in the concentric circular
centering on the root
Not drawing Child cell nearer to the root
than Parent cell
The root is arranged in the origin
Refer or Referred
Refer
Referred
Narrowing by age of related paper
The paper more than a years or more which
relates is targeted in drawing
The paper less than a years or less which
relates is targeted in drawing
The paper with global degree of association
of c or more is targeted in drawing
Constraint concerning y-coordinates
y-coordinates of the cell are decided by
Level
y-coordinates of the cell are decided by
year
Constraint concerning x-coordinates
The parent draws at child’s center
1st child draw under of the parent
Cell that has the same Global degree of
association is drawn in the same
x-coordinates
Constraint concerning both x-coordinates
and y-coordinates
Distance of coordinates from root
Constraint for jointing edges
Joint all edge
Joint only edges that specified by Minimum
Spanning Tree
Joint edges that similarity is under h

NotationDrawing Conditions
Drawing Condition 1
≡ 1c ∧ 2 ∧ 3 ∧ 4a ∧ 5a ∧ 6 ∧ 9 ∧ 10c
Drawing Condition 2
≡ 1a ∧ 2 ∧ 3 ∧ 4a ∧ 5a ∧ 6 ∧ 7a ∧ 8a ∧ 10c
Drawing Condition 3
≡ 1b ∧ 2 ∧ 3 ∧ 4b ∧ 5b ∧ 6 ∧ 7a ∧ 8a ∧ 10c

Guarantee for safe visualization. To implement PRDs that
is represented by a network structure, we treat it as a tree
structure when coordinates of its nodes are provided. By
doing so, we can apply the result of the drawing problems
of trees of Reference [11] to the arrangement of PRD of this
research.
The relationships among drawing conditions, the drawing algorithm, the time complexity of the algorithm, and the
drawing space are known as follows [13].

<Algorithm>Draw E1
Function Draw Ela(MST(D),p)
INPUT MST(D) given to D of PRD
p of MST(D)
OUTPUT Arange π of D that satisfy Ela
Global variables
ω:natural number a in Constrait 5a
c:natural number c in Constraint 6
space:a variable that value of space between cells
an initial value space = 0
{
if (p has child cell(s))){
f or(qi ∈ Child(p), i = 1, · · · , n){
if (year(p) > year(qi )&&
year(qi ) ≥ a&&Grel(qi ) ≥ c){
Draw Ela(M ST (D), qi );
}
}
πx (p) = (q1 − width(q1 )/2 − Intx (q1 ))
+width(qn ) + Intx (qn ))/2;
πy (p) = w ∗ Level(p);
}
else{
πx (p) = space + width(p)/2 + Intx (p);
πy (p) = w ∗ Level(p);
space = πx (p) + width(p)/2 + Intx (p) + 1;
}
if (p is root){
set a root r(0, 0, 0, 0) and
determinean arrangement of p ∈ V
}
return(M ST (D));
}
∗PRD:P aper Relationship Diagrams
∗MST:M inimum Spanning T ree

Theorem There are a number of drawing algorithms that provide the minim drawing space
of trees by combining various drawing constraints. These algorithms have a time complexity
of O(n)−O(n2 ) , where is the number of nodes.//

Figure 4. Example of drawing algorithm
We can also propose the other conditions by combining
constraints. Drawing conditions 1, 2 and 3 correspond to
Figure 1, 2 and 3 respectively.
Figure 4 shows part of the drawing algorithm that satisfies the drawing condition 1, 2 and 3.

The complexity of the drawing algorithm shown in Figure 4 is . This means that temporally and spatially safe visualization is possible. Moreover it can also be said that it
is impossible to draw PRD if the combination of conditions
includes a counter-condition.

3. Development of the visualization system
We developed a visualization system for PRDs that is
discussed with theoretical point of view described in section
2. In the following, we describe the development of the
system in detail.

3.1. Outline of the system
Our system was developed by using Java/Swing for visualization and by using Perl and MySQL for database construction. The user can use our visualization system by using a web browser connected to a network. The system
stores databases and all modules in the server, which means
that we can easily manage/update them at the server.
The system consists of two subsystems, a visualization database construction subsystem and a paper retrieval/paper-relationship visualization subsystem, as
shown in Figure 5. In the following subsections, we describe each subsystem in detail.

3.2. Visualization database construction subsystem
Paper Characterization. This subsystem performs morphological analysis of collected papers in the PDF format
by using Chasen [14] and extracts all nouns except ”stop
words” (Table 6) from these papers. A ”stop word” is
a word that is not clearly suitable as an index word or a
word that is typical for a particular context such as ’introduction’, ’references’, ’conclusions’, ’abstract’, and others.
The nouns extracted in this way become index words. For

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

Table 3. Common index word table
Field
data type Explain
word
Link F*
Link T
Rel

Field
Link F*
Link T
Rel
FLAG
key 1
key 2
key 3

Figure 5. System flow

all papers, the subsystem finds all index words and their
weight (strength of the relation between the paper and the
index word), and stores them into the database in Table 2.
Calculation of similarity. The subsystem calculates the
degree of similarity between papers by using the expression
(3), normalizes it, and stores the normalized values into the
database in Table 4. If there is a refer/referred relationship
between the papers, it shows a flags field, ’FLAG’, in Table
4, and the two papers are connected by an edge. In order
to extract index words that are common to both papers, it
multiplies the weight of each common index word in the
two papers and stores the value in Table 3. In the order of
weight of common index words between the two papers, the
indexing words are stored in Table4.
Database Construction. The database consists of five tables: characteristic table, common index word table, similarity table, bibliographies list and stop list.

Table 2. Characteristic table
Field data type Explain
word*
bib*
tf
weight

char
char
double
double

wij
File name of a paper
fij
dji

Here, ’ ∗ ’ means that the field has an index file.

char
char
double
double

common index word wij
paper Di name
paper name Dj
dik · djk

Table 4. Similarity table
data type Explain
char
paper name
char
paper name
double
formula 6
boolean
refer/referred
char
common index word
char
common index word
char
common index word

3.3. Paper retrieval/paper-relationship visualization subsystem
System Interface. Figure 6 shows the user interface. The
interface is divided into the drawing part and the operating
part. The operating part consists of a keyword input part,
a text window for displaying information, a drawing constraints selection part, and a scaling slider.
By inputting words in the word input part, the user can
retrieve papers that have the input word. In the drawing
constraints selection part, (the drawing constraints shown
in Table 1 are listed) the user can choose those by using
buttons. The slider enables expansion and contraction of
diagram coordinates making it easy for the user to understand the relationship between papers. Text panel displays
detailed information about the paper. By clicking on the
drawn node, the user can obtain the title of the paper, the
year of its publication, the authors, its keywords and index
words that are common between papers. By placing the cursor on the paper node, the user can obtain five index words
that characterize the target paper. After the user’s adjusting
of the slider, the drawing conditions, and the others in the
operation part, the relationship among papers can be visualized under the changed conditions by pushing the re-draw
button. The target paper can be changed by double-clicking
on the other nodes.
Implementation of the paper retrieval function. Paper
retrieval is performed by inputting keywords. This is a supplementary function for choosing the target paper. Papers
containing an input keyword are taken out from Table 2,
and they are listed in descending order of weight. The user

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

Table 5. Bibliographies list
Field data type explain
bib*
char
paper name
title
char
paper title
author char
paper authors
year
int
paper year

Table 6. Stop list
Field data type explain
word* char
stop word

chooses the target paper by double-clicking on one of the
papers from the list.
Implementation of Visualization.
(1) Generating a minimum spanning tree This phase extracts papers having the refer/referred relationship from Table 4 and calculates the values of Grel for all the papers that
have the refer/referred relationship with the target paper. To
calculate the values of Grel, the names of the two ”flagged”
papers and the value of rel in Table 5 are used. We applied the Dijkstra algorithm to the processing of this phase.
Thereby we can obtain the tree structure that is changed
from the network as PRD. This tree structure called ”a minimum spanning tree.” It is know that the Dijkstra algorithm
runs in O(n2 )-time, where n is the number of nodes.
(2) Drawing Label objects created by using JLable of the
component of Swing are treated a paper nodes. Paper objects are arranged on JPanel, based on the coordinates of
the papers determined by the drawing algorithm (Figure 4).
Then, an edge connecting the papers is drawn in JPanel. By
installing the event listeners, which perform a user’s event,
to a paper object, referring to paper information can be enabled with mouse click.
(3) Re-drawing Visualized patterns can be changed by
pressing the re-draw button. If the draw button is pressed after changing the drawing conditions and adjusting the slider,
the target paper will not be changed but steps of the implementation of visualization (2) and (3) will be performed
again. Users can change the target paper by using the retrieval function or by double-clicking on a new target paper.
After that, the steps of the implementation of visualization
performed from the beginning.
As mentioned above, the drawing of a PRD with the limited
number of nodes runs in O(n2 )-time, where n is the number
of nodes, and dynamic visualization can be implemented.

Figure 6. Interface

4. Search activities by using the developed system
We describe a search performed by using the visualization system we developed. Figures 7(a), 8(a) and 9 show the
models of Figures 1-3 implemented by using the system.
Drawing pattern 1. Figure 7 is a pattern with the target paper in the center and reference papers arranged in the shape
of a concentric circle around the target paper in the order of
strength of the relationship. In the pattern, the user can find
reference papers that the target paper was affected by, and
determine the strength of the relationship between the target
paper and the other papers.
The user can search for papers by looking at common
index words between papers, which are available by clicking on the paper node, and by viewing five index words that
describe the papers.
For example, if the user wants to find papers in the IV
field, he/she can follow the refer/referred relationship from
’00Dobashi’ to ’99Sumi’ to ’96Koike’ to ’94Misue’ with
the index word ’visualization’.
Figure 7(b) is constructed excepting for condition 4a obtained from the drawing conditions combination in Figure
7(a), and the user can see the relationship between all papers in no affect of the refer/referred relationship. From
these patterns, even if there is no direct refer/referred relationship between the papers, an unexpected relationship can
be discovered by being arranged closely the target paper and
others.
Moreover, by using papers whose research fields are
close, the user can find research fields that the target paper is related to.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

(a)

(a)

(b)
Figure 7. Drawing pattern 1
(b)
Drawing pattern 2. Figure 8 express the refer/referred relationship between papers hierarchically with the target paper in the center. By changing drawing condition 7a to 7b,
Figure 8(b) can be obtained. In Figure 8(b), the papers are
arranged according to the year of publication, and the user
can find the year when most of the papers were written. The
user can also see ’91Misue’ and ’91Sugiyama’ located at
the bottom as the origin of the research field constructed
from the reference papers that set ’00Dobashi’ a root. The
user can see that ’99Sumi’ is concentrating the link, and find
out the importance of each paper in the reference papers.
Drawing pattern 3. Figure 9 shows the target paper and
referenced papers arranged hierarchically, which enables
the user to understand in what way the target paper contributes to the other papers. By following the reference
chain, the user can see what field the target paper comes
from.

Figure 8. Drawing pattern 2

Discussions. Thus, the relationship between various papers
can be visualized by using a combination of drawing constraints. By using the visualization system, users can see
various relationships among papers by changing their own
point of view, and can be supported their efficient search
activities. Currently, there is no system for supporting research activities like our developed system. Therefore, our
system can be expected to widely use in the research field.

5. Conclusions
To implement the dynamic and safe visualization of the
relationship among papers, we formalized user require-

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

[6] Anne Bruggemann-Klein, Rolf Klein: BibRelEx: Exploring Bibliographic Database by Visualization of
Annotated Content-Based Relations, Proc. IEEE Int.
Conf. IV2000, pp.19-24, 2000.
[7] Junichi TATEMURA: Graphical Relevance Feedback:
Visual Exploration in the Document Space, Proc.
IEEE Int. Conf. VL2000, pp.39-46, 2000.
[8] Minoru NAKAYAMA, Hokuto SANEMATSU, Yasutaka SHIMIZU: A Document Indexing and Retrieval
Method Based on Teaching Guideline for Keyword
Searching Educational Information, Trans. IEICE,
Vol.J83-D-I, No.1, pp.225-233, 2000. (in Japanese)
Figure 9. Drawing pattern 3

[9] Emiko ORIMO, Hideki KOIKE: ZASH: A Browsing
System for Multi-Dimensional Data, Proc. IEEE Int.
Conf. VL99, pp.288-295, 1999.

ments for visualization as a set of conditions on the graph
drawing problem, and developed a system that visualizes
the relationship among papers by combining various formalized constraints.
In the future, we will improve the user interface and add
a function to automatically convert user requirements for
visualization into a combination of constraints.

[10] Konomu DOBASHI: Interactive Visualization of
Problem Structure Integrated with WWW and Text
Mining, Technical Report of IEICE, AI 99-64, pp.5158, 1999. (in Japanese)

References

[12] Kenneth J, Supowit, Edward M, Reingold: The Complexity of Drawing Trees Nicely, Acta Informatica 18,
pp.377-392, 1983.

[1] IEEE-DL, http://www.ieee.org/web/search/
[2] ACM-DL, http://www.acm.org/search/
[3] Ben Shneiderman: Dynamic Queries for Visual Information Seeking, IEEE Software, Nov. 1994, pp.70-77,
1994.
[4] Stuart K. Card: Visualizing Retrieved Information: A
Survey, IEEE Computer Graphics and Applications,
Mar. 1996, pp.63-67, 1996.

[11] Youzou MIYADERA: O(n) Time Drawing Algorithm of Trees and Their Applications, Trans. IEICE,
Vol.J81-D-I, No.6, pp.579-592, 1998. (in Japanese)

[13] Miyadera, Y.,Taji, A. and Yaku, T., Methods of visualizing Paper-Relation Diagrams Based on the viewpoints of Users, Proc. Int. Conf. Human-Computer Interaction (HCI2001), pp.775-779, 2001.
[14] ChaSen, http://cl.aist-nara.ac.jp/lab/nlt/chasen.html
(in Japanese)
[15] http://www.cs.orst.edu/ burnett/vpl.html

[5] Ben Shneiderman: Designing the User Interface Third Edition, Addison Wesley Longman, 1998.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

