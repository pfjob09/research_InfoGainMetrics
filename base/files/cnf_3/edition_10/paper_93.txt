Virtual Sculpting and Deformable Volume Modelling
K C Hui, H C Leung
Department of Automation and Computer-Aided Engineering,
The Chinese University of Hong Kong,
Shatin, Hong Kong.
e-mail: kchui@acae.cuhk.edu.hk
Abstract
Volume modeling techniques are capable of
modeling objects with possible change in topology
and is widely used in virtual sculpting. A common
practice is to provide shape-editing tools for adding
or removing material from a volume model.
However, sculpting may also involve the constant
volume deformation of a model (e.g. the
deformation of a clay model). This usually requires
the use of physically based deformation of objects.
An approach for deforming volume models is to
use a spring mass approximation of the object, or
the finite element modelling (FEM) technique. The
spring-mass approximation gives a coarse
estimation of the responses of the object, whereas
the FEM approach requires generating solid meshes
from the volume data. Generating a solid mesh
from a volume model is a time consuming process.
A modification in the volume data will require a
solid mesh to be regenerated for the deformation
process. In this paper, the boundary element
(BEM) approach is adopted. Since the deformation
is computed based on the iso-surface of the volume
data, this eliminates the need for generating solid
mesh from the volume data. By converting the
deformed mesh to volume data, a deformed volume
model can be further manipulated with existing
volume modelling techniques.
Keywords:
Volume modelling, deformation,
boundary element, virtual sculpting

1. Introduction
Volume modeling is known to be a powerful
technique for visualizing volumetric data [1-4].
Techniques for deforming volume model extended
the applications of volume modelling for
applications such as the virtual sculpting, and the
estimation of tissue responds in medical
applications. Galyan and Hughes [5] proposed to
use sculpting tools such as toothpaste tube, heat
gun, and sandpaper for modifying the shape of a
volume model. Wang and Kaufman [6] extended
the method for voxels with attributes such as color
and texture. Other works based on the same

approach have been reported [7,8].
Early work in the modeling of elastic object
[9,10] assumed the objects are represented as
superquadrics so that a grid generated on the
surface of the object can be mapped to a volume in
the corresponding parametric space of the
superquadrics. The grid can thus be used for the
computation of deformation. This approach can be
applied for objects represented as volumes in a
parametric space, but may not be applied for
objects in other representations. Gibson [11]
simulated the deformation of a volume model by
assuming adjacent voxels to be connected with
springs. This produces good visual simulation of
an elastic object but may not be applicable when
material properties of the object are to be
considered. Recent works in this area employed the
finite element analysis technique for evaluating the
deformation of tissue for medical applications
[12,13,14] as well as the animation of synthetic
human [15], and product design [16,17]. A
characteristic of finite element technique is the
requirement of a mesh that may have to be
regenerated if there is a change in object shape. A
good survey of various techniques in the
deformation of objects can be found in [18]. In this
paper, the boundary element technique is adopted.
This eliminates the need for regenerating the solid
mesh of an object whenever the object is modified.
By converting the mesh of a deformed object to a
volume model, further volume operations (e.g.
engraving, gluing, etc) can be performed on the
deformed object. This gives a virtual sculpting
system that allows physics based deformation of
objects.

2. Physics Based Volume Modeling
A volume model is a representation of a closed
3

object X defined with a function f : R o R . A
point p is in the interior of the object if f(p) > k,
where k is a threshold value. A point p is on X if
f(p) = k, and out of X if f(p) < k. A volume model is
a three dimensional grid of points or voxels
enclosing the object X. Values of the voxels are the
function values f(p) so that the voxels completely
defines the object X. The boundary of the object are
the locations at which f(p) = k, i.e. the iso-surface at

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

f(p) = k.
Adjusting the function values of the voxels can
deform a volume model. This allows operations
such as cutting and gluing of material. However, an
elastic deformation of the object requires a physical
model of the object satisfying the boundary
conditions on the iso-surface of the volume model.
This corresponds to the forces or displacements on
the iso-surface of the object. Denoting u as the
displacement of a point p = (x, y, z) of the object,
then the equilibrium condition of the object is given
by the Navier equation
F
1
(  u) 
0
(1)
1  2Q
P
E
where P
, E and v are the Young’s
2(1  Q )
modulus and Poisson’s ratio of the material used,
and F is the body forces at p.
Various approaches have been developed for
solving the Navier equation. The most popular one
is the finite element method [19]. The finite
element approach evaluates the displacement and
forces at the vertices of a mesh of solid elements
approximating the object. Given a volume model,
this requires generating the mesh of solid elements
from the volume data. An alternative is to adopt the
boundary element (BE) approach [20] in which the
displacement and forces are evaluated directly on a
mesh of polygons approximating the surface of the
object. Since a triangular mesh of a volume model
can be easily obtained using the Marching Cube
method [21], the boundary element approach can be
directly applied to the iso-surface of a volume
model.
 2u 

³

C ij u ref j  Tij u j dS
S

³

u ref j  Tij u j dS
S

³ U t dS
S

ij

j

(2)

where S is the surface of the object, Tij, Uij is a
fundamental solution of Equation 1, and uref is the
deformation at the reference point pref. Uij, Tij are
the deformation and traction respectively at p
obtained with a unit load applied to an interior point
pref of an infinite domain. Using a point on the
boundary S as a reference point, Equation 2 is
rewritten as

S

ij

(3)

j

where Cij is a function of the reference point.
By approximating S with a set of node points,
and applying each of the node points as reference
point in Equation 3, a set of linear equations
relating u and t can be obtained. Denoting (uix uiy
uiz), (tix tiy tiz) as the deformation and traction at the
ith node point, then
AU = BT

(4)

where U = [u0x u0y u0z u1x u1y u1z ..........unx uny unz]T
T = [t0x t0y t0z t1x t1y t1z ..........tnx tny tnz]T
A is a function of Cij and Tij.
B is a function of Uij.

4. Deforming the Object
Deformation is applied to a set of node points
on S, while constraints are applied to selected node
points on S. Denoting UK as the displacements of
the nodes where the deformation is applied, UU as
the displacement of nodes to be determined, TK as
the tractions at the free nodes, and TU is the traction
to be determined, Equation 1 can be expressed as
ª A 00
«A
¬ 10

A 01 º ª U U º
A 11 »¼ «¬U K »¼

ªB 00
«B
¬ 10

B 01 º ªTU º
B 11 »¼ «¬TK »¼

Since the traction at all free nodes are zero, i.e. TK
= 0, hence,

3. The Boundary Element Approach
The boundary element approach expresses the
displacement of a surface point p of an object in
terms of the fundament solution to Equation 1.
Using tensor notations, and assuming there is no
body forces, t = (tx, ty, tz) is the traction (or force) at
p, the boundary integral equation can be expressed
as

³ U t dS

A 00 U U  A 01 U K

B 00 TU

A 10 U U  A 11 U K

B 10 TU

Eliminating TU gives
UU

1

1

1

1

[B 00 A 00  B 10 A 10 ] 1 [B10 A 11  B 00 A 01 ]U K
(5)

Given the constraints and deformations at
certain nodes of the object, the displacement of the
other free nodes can be computed with Equation 5.
5.

Converting Mesh data to Volume Model

In order to allow volume operations on the
deformed model, a surface model has to be
converted into a volume model before operations
such as gluing, and removal of voxels can be
applied. There are various approaches for
converting object models to a volume model [2224]. In this paper, a simple approach is adopted.
Each voxel q is classified with respect to the
deformed object. The value of the voxel is 1 if q is

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

in the object, otherwise the voxel is 0. This gives a
rough volume model of the object because of the
discrete voxel values. The iso-surface generated
from these voxel values may consist of sharp jaggy
corners. To obtain a smooth iso-surface, a
convolution process may be applied to the volume
model.
A box and a Gaussian filter are adopted for the
smoothing operation. These filters are associated
with a sculpting tool. By adjusting the size of the
sculpting tool, the convolution process can be
applied to the whole or part of the volume model.

(a)

6. Addition and Removal of Material
Altering the voxel values in the workspace can
perform addition and removal of material. The
same approach as stated in [5] is adopted A
sculpting tool specifies the region of the workspace
where material is to be attached or removed.
Consider a sculpting tool defined with a function
g(x, y, z) < 0. In an operation for the addition of
material, all voxel locations satisfying g(x, y, z) < 0
are changed to 1. In a material removal operation,
voxel locations in the intersection of the sculpting
tool and the object are changed to 0.

(b)

(c)

7. Implementations and Results
A virtual sculpting system was implemented on
a personal computer. Starting with a primitive
shape such as a sphere, cylinder, etc., a volume
model is generated. User is allowed to remove
voxels from the model using a spherical tool of
which sizes can be adjusted. Figure 1a shows a
volume model of a block. Figure 1b shows the tool
position for a material removal operation. The
result of the material removal operation is shown in
Figure 1c. Similarly, voxels can be glued to the
model by pointing to a location interactively
(Figure 2). Figure 3 and 4 illustrate two engravings
which are the results of using the removal and
addition tools. Figure 5 shows the process of
deforming a plate into a flower like object. The
center point at the bottom of the plate (Figure 5b) is
fixed or constrained in location. Deformations are
applied to the corners of the plate. The flower
(Figure 5d) is obtained in three consecutive
deformations.

Figure 1 Removing material from volume model
(a) A volume model of a block (b) Positioning the
removal tool (c) Result of the removal operation

(a)

(b)

Figure 2 Adding material to a volume model
(a) Positioning the sculpting tool (b) Result of the
addition

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

(a)

Force
direction

(b)

Figure 3 An engraving created with the removal
tool

(c)

(d)

Figure 4 An engraving created with the addition
tool

(e)
Figure 5 Deformation of a volume model
(a) The undeformed plate (b) First deformation
(c) Second deformation (d) Result after
deformation
(e) Result after the smoothing
operation

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

8. Conclusions
Existing volume sculpting techniques usually
allows materials to be added to or removed from a
volume model. However, a physics based
deformation operation is essential for providing
clay like deformation effect in a sculpting
operation. In the proposed virtual sculpting system,
the boundary element technique is adopted for
deforming a volume model. The boundary element
technique only requires the surface mesh of an
object for evaluating the deformation of an object.
Since the boundary mesh of a volume model is
readily available, boundary element analysis can be
directly applied to a volume model. In order to
allow further volume operations on the deformed
volume model, the deformed surface mesh has to be
converted into a volume model. Although the time
required for evaluating deformation increases with
the mesh sizes, experiments showed that a practical
approach is to use a coarse model (model with
fewer triangles) for the deformation. The deformed
object can then be smoothed to obtain the final
object at the required resolution.

8.

9.

10.

11.

12.

13.

Acknowledgement
This work is partially supported by a Direct Grant
(ID 2050210) of the Chinese University of Hong
Kong.

14.

References
1.

2.

3.

4.

5.

6.

7.

A Kaufman, Volume Visualization, IEEE
Computer Society Press, Los Almitos, CA
1991.
A Kaufman, D Cohen, R Yagel, “Volume
graphics, IEEE Computer, Vol. 26, No. 7, pp.
51-64, July 1993.
B Collins, “Data Visualization”, Directions in
Geometric Computing, Edited by R Martin,
Information Geometers, 1993, pp.31-80..
G M Nielson, P Brunet, M Gross, H Hagen, S
V Klimenko, “Research Issues in Data
Modeling for Scientific Visualization”, IEEE
Computer Graphics and Applications, March,
1994, pp. 70-73.
T A Galyean, J F Hughes, “Sculpting: An
Interactive Volumetric Modeling Technique”,
Computer Graphics, Vol. 25, No. 25, 1991, pp.
267-274.
S Wang, A Kaufman, “Volume sculpting”,
Proc. Symposium on Interactive 3D Graphics,
ACM SIGGRAPH, 1995, pp.151-156.
I Fujishiro, Y Maeda, H Sato, Y Takeshima,
“Interval Volume: A Solid Fitting Technique
for Volumetric Data Display and Analysis”,

15.

16.

17.

18.

19.
20.

21.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

Proceedings of Visualization ‘95, Oct-Nov.
1995, pp. 151-158.
E Ferley, MP Cani, JD Gascuel, “Practical
volumetric sculpting”, The Visual Computer,
Vol. 16, 2000, pp. 469-480.
D Terzopoulos, K Fleischer, “Deformable
models”, The Visual Computer, Vol. 4, 1988,
pp. 306-331.
I Essa, S Sclaroff, A Pentland, “Physically
Based Modelling for Graphics and Vision”,
Directions in Geometric Computing, Edited by
R Martin, Information Geometers, 1993, pp.
161-196.
S F F Gibson, “Beyond volume rendering:
visualization, haptic exploration, physical
modeling
of
voxel-based
objects”,
Visualization in Scientific Computing ’95,
Proceedings of the Eurographics Workshop in
Chia, Italy, May 3-5, 1995, pp. 10-24.
T Kunii, “Research Issues in Modeling
Complex Object Shapes”, IEEE Computer
Graphics and Applications, March, 1994, pp.
80-83.
M Bro-Nielsen, S Cotin, “Real-time
Volumetric Deformable Models for Surgery
Simulation using Finite Elements and
Condensation”, Computer Graphics Forum,
Vol. 15, No. 3, (Eurographics ’96), 1996, pp.
C57 - C461.
M Bro-Nielsen, “Modelling elasticity in solids
using Active Cubes - Application to simulated
operations”, Proc. Computer Vision, Virtual
Reality
and
Robotics
in
Medicine
(CVRMed’95), 1995, pp. 535-541.
J P Gourret, N M Thalmann, D Thalmann,
“Simulation of object and human skin
deformations in a grasping task”, Proc.
SIGGRAPH’89, 1989, pp. 21-30.
H K Kang, A Kak, “Deforming virtual objects
interactively in accordance with an elastic
model”, Computer Aided Design, Vol. 28, No.
4, 1995, pp. 251-262.
K C Hui, N N Wong, “Hands on a Virtually
Elastic Object”, To appear in The Visual
Computer.
S F Gibson, B Mirtich, “A survey of
deformable models in computer graphics”,
Technical Report TR-97-19, Mitsubishi
Electric Research Laboratories, Cambridge,
MA, November 1997.
K J Bathe, Finite Element Procedures, Prentice
Hall, 1996.
A A Becker, The Boundary Element Method in
Engineering – A complete course, McGrawHill, 1992.
W E Lorensen, H E Cline, “Marching Cubes:
A High Resolution 3D Surface Construction

Algorithm”, Computer Graphics, Vol. 21, No.
4, 1987, pp. 163-169.
22. M W Jones, “The production of volume data
from triangular meshes using voxelisation”,
Computer Graphics Forum, Vol. 15, No. 5,
1996, pp. 311-318.
23. J Huang, R. Yagel, V Filippov, Y Kurzion,
“An accurate method for voxelizing polygon
meshes”, Proc. 1998 Volume Visualization
Symposium, IEEE, Oct 1998, pp. 119-126.
24. F Dachille IX, A Kaufman, “Incremental
Triangle Voxelization”, Proc. Graphics
Interface 2000, May 2000, pp. 205-212.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

