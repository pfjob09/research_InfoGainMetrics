Constraint-Based Visualization of Spatial Interpolation Data*
Peter Revesz

Lixin Li

Computer Science and Engineering Department
University of Nebraska-Lincoln
Lincoln, NE 68588, U.S.A.
{revesz, lli}@cse.unLedu

t

Abstract

24

We propose using a constraint relational representa­
tion for spatial data derived using an inverse distance
weighting interpolation method. The advantage of OUT
approach is that many queries that could not be done
in traditional GIS systems can now be easily expressed
and evaluated in constraint database systems. The data
visualization can also be based on constraint techniques.

2
.

3
.

16

4

1

�--�----�61 �--�2L4--�l�2--�Y

Figure

1. Introduction

1.

The sample points in Incoming_

y
To

visualize and query a set of spatial data in GIS
(Geographic Information Systems) applications, we of­
ten need spatial interpolation, that is, to estimate the
unknown values at unsampled locations with a satis­
fying level of accuracy. For example, suppose we have
the following two sets of sensory data in our database:

16

•....o!l'--...I.____
L.=.
..
'--__---'-'."-.4"--_ :x

o

1. Incoming{y,t,u) records the amount of incoming
ultraviolet radiation u for each pair of latitude de­
gree y and time t, where time is measured in days.
2.

13

3

33

4

29

Table

1.

T

U

1

60
20
70
40

22

18

0

Incoming.

ID
1
2
3

4

X

2
2
25
25

1

R
0.9
0.5
0.3
0.8

Table 2. Filter.

'This research was supported in part by

0091530

Y
1
14
14

NSF

grant

EIA-

and by a Gallup Research Professorship.

0-7695-1656-4/02 $17.00 © 2002 IEEE

24

Figures 1 and 2 illustrate the locations of the (y,t)
and (x, y) pairs where the measurements for u and r
are recorded. Tables 1 and 2 show the corresponding
instances of these two relations.
Since Incoming(y,t,u) and Filter(x,y,r) only record
incoming ultraviolet u and filter ratio r at a few sam­
pled locations, they cannot be displayed directly. Some
spatial interpolation is needed to estimate u and r for
all the locations in the domain. The spatial interpola­
tion is usually used to calculate the interpolation values
at each pixel to be displayed. This will result pixel­
based data.
Pixel-based data are of great use for GIS applica­
tions, where the basic idea is to map each data value to

ation that is usually filtered out by the atmosphere
above location (x,y) before reaching the earth.
Y
0

16

Figure 2. The sample points in Filter_

Filter(x,y, r) records the ratio r of ultraviolet radi­

ID
1
2

•2

563

[1]

represent the interpolation by sets of

a pixel in display. Many algorithms developed for pixel­

al.

based data stem from the graphics and image process­

rectangles,

ing areas, such as the algorithms for planar transfor­

interpolation by a

mation, shape filling, and clipping

[5].

An overview of

the pixel-based visualization techniques is given in

duced by Forlizzi et al.

However,

In some ap­

splines

number of available pixels. In this case, the pixel file

relations that represent the interpolations of
and

Filter(x,y,r),

respectively.

Incom­

=

u(l - r )

[ 13]:
[9],

[12J.

We also look at visualization,

which is generally ignored in the earlier papers.
The rest of this paper is organized as follows. Sec­
2 discusses how to represent IDW interpolation in

tion

Section 3 describes

example in this section.

Section

4

ization results. Finally, in Section

gives some visual­

5,

we present some

ideas for future work.

I NCOMI NG(y, t, u ) ,
i

Kriging

and Fourier series

the application of IDW in constraint databases to the

Then the

2. Representation of IDW in constraint
databases

(1)

FILTER(x,y,r),

[18]'

polynomial constraint databases.

be the

above query can be expressed in Datalog as follows:

GROU ND(x, y, t, i)

trend surfaces

interpolations

[4),

which is non-linear, relatively easy, and gives good re�

Query 1.1 Find the amount of ultraviolet radi ation
for eac h ground loc ation (x, y) at tim e t.

ing(y,t,u)

[7],

suIts in practice

FILTER(x,y,r)

spatial

on the inverse distance weighting (IDW) interpolation

consider the following query:

and

practical

require non-linear constraints. In this paper, we focus

Therefore, it is

difficult to use to answer many queries. For example,

INCOMING(y,t,u)

many

such as inverse distance weighting

plications, the number of data values may exceed the

Let

Both parametric rectangles

constraint relations.

lation has some potential problems. For example, the

will not have complete information.

[6].

and sliced representations can be translated into linear

[ 11].

However, the resulting pixel-based data file of interpo­
number of pixels in display is limited.

parametric
& Gliting [17J represent the
sliced repres entation that was intro­

and Tossebro

.

The rationale for IDW is consistent with most nat­
ural properties of spatial data, in particular, that their
values vary continuously and tend to be similar at

The above query could be also expressed in SQL
style or relational algebra. Whatever language is used,

closer than at further locations.

it is clear that the evaluation of the above query re­

INCOMING and FILTER relations.
Unfortunately, join operations are difficult to perform

cation will have more influence on the predicted value
(unknown value) than those farther away. More specif­

on pixel-based files and are not supported by most GIS

ically, IDW assumes that each measured point has a

systems, including the Ardnfo/ ArcView systems.

local influence that diminishes with distance.

Several authors noted that interpolation constraints
can be stored in

constraint relations,

whereas points at a far distance are given small weights.

ily joined together, making the evaluation of queries

[15]

According to reference

discusses

models.) Also, in contrast to the pixel data represen­

w(x, y)

arbitrary precision.
and Revesz et al.

[16]

consid­

ered piecewise linear interpolation of time series data.
Grumbach et al.

[8]

[3)

known point value

used

Wi

distances between each

a similar linear interpolation for landscape elevation,

at location

(Xi, Yi)

and

(Xi, y;),

d; are the

(x, y), and p is the

exponent, which influences the weighting of

aspect, slope, and related data. All of these interpola­
tions are represented in linear constraint databases.
Cai et al.

(2)

W is the predicted value forlo­
(x, y), N is the number of nearest known points
surrounding (x,y), Ai are the weights assigned to each

tween snapshots of moving points and the interpolation
Revesz

:�:::>iWi ,
i=1

cation

of a landscape surface based on TIN (triangular irreg­

&

=

As shown in Figure 3,

considered linear interpolation be­

ular network) elevation data. Chen

the general formula of

N

tation, the constraint representation is capable of an

[2]

[ 10],

IDW interpolation is the following:

the relationship of constraint databases and GIS data

Chen et al.

Thus,

points in the near neighborhood are given high weights,

which can be eas­

like Query 1.1 feasible. (The textbook

In IDW, the mea­

sured values (known values) closer to a prediction lo­

quires ajoin of the

Wi

on

w.

The optimal value of the exponent is dependent on the

[1], and Tossebro & Gliting [ 17] considered

statistical characteristics of the data set. Please note

the interpolation of snapshots of moving regions. Cai et

that in Equation 2,

564

L::1 Ai

=

1.

W1

we borrow the idea of higher-order Voronoi diagrams
(or k-th order Voronoi diagrams) from computational
geometry. Higher-order Voronoi diagrams generalize
ordinary Voronoi diagrams by dealing with k closest
points. The ordinary Voronoi diagram of a finite set S
of points in the plane is a partition of the plane so that
each region of the partition is the locus of points which
are closer to one member of S than to any other mem­
ber [14]. The higher-order Voronoi diagram of a finite
set S of points in the plane is a partition of the plane
into regions such that points in each region have the
same closest members of S. As in an ordinary Voronoi
diagram, each Voronoi region is still convex in a higher­
order Voronoi diagram.
From the definition of higher-order Voronoi dia­
grams, it is obvious to see that the problem of finding
the k closest neighbors for a given point in the whole
domain, which is closely related to the IDW interpola­
tion method with N k, is equivalent to constructing
k-th order Voronoi diagrams.
Although higher-order Voronoi diagrams are very
difficult to create by imperative languages, such as
C, C+ +, and Java, they can be easily constructed by
declarative languages, such as Datalog. For example,
we can express a second-order Voronoi region for points
(x\, yd, (X2' Y2) in Datalog as follows.
At first, let P(x, y) be a relation that stores
all the points in the whole domain.
Also let
Dist(x, y, Xl, Yl> d1) be a Euclidean distance relation
where dl is the distance between (x, y) and (Xl,yd. It
can be expressed in Datalog as:

W2

W4

W3

Figure

3.

lOW Interpolation.

Example 2.1 Suppose (XI, YI) = (0,0), (X2' Y2)
(10,0), and (X3,Y3) = (10,5) are the three closest sam­
pled locations to the location (x, y)
(8,2), as shown
3 be the
in Figure 4. Let WI
1, W2 2, and W3
values of the three sampled locations. We can inter­
polate the unknown value W at location (x, y) by IDW
with N 3 and p 2 as
=

=

=

=

=

=

=

=

3
2:>'iW;

W

;=1

2
11 )
(
WI +
(it)2 + (2)2 + U.)2
(f, )2
+
+ (2)2 + U.)2
)2
(it
(d; )2
W3
(i)2 + (iF + (;1;F
W2

0.07 x 1 + 0.35 x 2 + 0.58 x

3

2.51
where d;

=

Dist(x,y,Xl,Yl. dJ)

Vex; X)2 + (Yi y)2.
-

-

Note that any point (x,y) in the plane does not
belong to the 2nd order Voronoi region of the sample
points (x\, YI) and (X2' Y2) if there exists another
sample point (X3,Y3) such that (x, y) is closer to
(X3,Y3) than to either (XI,Y!) or (X2,Y2). Using this
idea, the complement can be expressed as follows:

W3

(x3.y3)
d3

NoL2Vor(x,y,Xl,YI,X2,Y2)
10

:-

P(xa,Y3),
Dist(x,y,Xl,YI, dl),
Dist(x,y,X3,Y3, d3),
dl > d3•
P(X3,ya) ,
Dist(x,Y,X2,Y2, d2),
Dist(x, y,X3,Y3, d3),
d2 > d3•

Figure 4. lOW example with three neighbors.
2.1. Higher-order Voronoi diagrams

Finally, we take the negation of the above to get
the 2nd order Voronoi region as follows:

To represent the IDW interpolation, we need first to
find the nearest neighbors for a given point. Therefore,
565

2Vor(x, y, Xl, YI, X2, Y2) : -not Not..2Vor(X, y,Xl, Ylo X2 , Y2).

The second-order Voronoi diagram will be the union
of all the nonempty second-order Voronoi regions. Sim­
ilarly, to the 2nd order, we can also construct any kth­
order Voronoi diagram.

grams for the sample points in Incoming(y,t,u) and Fil­
ter(x,y,r), respectively. Please note that some second_
order Voronoi regions are empty. For example, there is
no (1, 3) region in Figure 5, and there are no (1,3) and
(2, 4) regions in Figure 6.

2.2. IDW in constraint databases
•

After finding the closest neighbors for each point
by constructing higher-order Voronoi diagrams, we can
represent IDW interpolation in constraint databases.
In this section, we describe how to represent the IDW
interpolation with N
2 and p
2. The repre­
sentation of other IDW interpolations in constraint
databases is straightforward to get. The representation
is obtained by constructing the appropriate Nth-order
Voronoi diagram (where N ;::: 2) and using Equation 2
with the proper p.
Based on the previous section, assume that the
second-order Voronoi region for points (Xl, YI), (X2' Y2)
is stored by the relation Vor_2nd(x, y, Xl, Yt. X2, Y2),
which is a conjunction C of some linear inequalities cor­
responding to the edges of the Voronoi region. Then,
the value w of any point (x, y) inside the Voronoi re­
gion can be expressed by the cubic constraint tuple as
follows:
=

CUI
·3

0.,21
G.41
l'

=

0.,4)

·4

Figure 5. The 2nd order Voronoi diagram for
I ncoming.

2

«X - X2)2 + (y - Y2)2 +
( x - XI)2 + (y - yt}2) w

R(x,y,w)

2

•

• 3

(3)
«X - X2)2 + (y - Y2)2)WI +
«x - Xt}2 + (y - YI)2)W2 ,
Vor ..2nd(x,y,XI, Yl,X2, Y 2).

or equivalently

•

as,

R(x,y,w)

Figure
Filter.

«x - X2)2 + (y - Y2? +
(x - xil + (y - YI)2) W

(4)

C.

The 2nd order Voronoi diagram for

constraint databases as shown in Table 3 and 4. Note
that the five tuples in Table 3 represent the five second­
order Voronoi regions in Figure 5. These five regions
are (1,2), (1,4), (3, 4), (2,3) and (2,4). Similarly, the
four tuples in Table 4 represent the four second-order
Voronoi regions in Figure 6. These four regions are
(1, 2), (1, 4), (3,4) and (2, 3).
The final result of the Datalog query, GROUND(x,
y, t, i), can be represent by Table 5. Since there
are five tuples in INCOMING(y,t,u) and four tuples
in FILTER (x,y,r), there should be twenty tuples in

In the above polynomial constraint relation, there are
three variables x, y, and w. The highest order terms in
the relation are 2x2w and 2y2w, which are both cubic.
Therefore, this is a cubic constraint tuple.
3. Application
Let

6.

Based on Equation 4, INCOMING(y,t,u) and FIL­
TER(x,y,r), which are the IDW interpolation for In­
coming(y,t,u) and Filter(x,y,r), can be represented in

«X - X2)2 + (y - Y2)2 )Wl +
« x - XI)2 + (y - YI)2)W2 ,

Figures

4

us return now to the example in Section 1.
5 and 6 show the second-order Voronoi dia-

566

Y

T

t

y

U

u

l3y + 7t - 286 :5 0,
2y -3t - 12 :::; 0,
y:5 15,
«V -13)2 + (t -22)2)60+ (V2 + (t -1)2)20
«y 13)2 + (t -22)2 + y2 + (t - 1)2)u
.2y 3t 12;::: 0,
2V + 5t - 60 :::; 0,
2y + t - 44:::; 0,
«y 29)2 + t2)60+ (V2 + (t - 1)2)4 0
1)2)u
«y 29)2 + t2 + y2 + (t
2y + t -44;::: 0,
7y - t - 136 ;::: 0,
8y - lIt - 47 ;::: 0,
«V - 29)2 + t2)70+ «V - 33)2 + (t - 18)2)40
«V -29)2 + t2 + (y - 33)2 + (t - 18)2)u
8y - llt -47 :::; 0,
V + 3t - 54;::: 0,
13y + 7t - 286 ;::: 0,
«V -33)2 + (t - 18)2)20 + «y - 13)2 + (t - 22)2)70
«y -33)2 + (t -18)2 + (y - 13)2 + (t -22)2)u
y;::: 15,
V + 3t -54:::; 0,
7y - t -136 :::; 0,
2y + 5t -60 ;::: 0,
«y -29)2 + t2)20+ «y - 13)2 + (t -22)2)40
«y - 29)2 + t2 + (y - 13)2 + (t -22)2)u

t

u

_

=

t

y

u

_

_

2x - y -20 :5 0, 12x + 7y - 216 :::; 0,
«x - 2)2 + (V - 14)2)0.9+
«x -2)2 + (v - 1)2)0.5 '"
(2(x - 2)2 + (y - 14)2 + (y - 1)2)r
2x y -20 ;::: 0, 12x + 7y -216 :5 0,
«x - 25)2 + (v - 1)2)0.9+
«x -2)2 + (y - 1)2)0.8'"
(2(y - 1)2 + (x - 25)2 + (x -2)2)r
2x - y -20 ;::: 0, 12x + 7y -216 2 0,
«x - 25)2 + (y - 14)2)0.8+
«x -25)2 + (v -1)2)03'"
(2( x -25)2 + (y - 14)2 + (v - 1)2)r
2x -y -20 :::; 0, 12x + 7y -216 � 0,
«x - 25)2 + (y - 14)2)0.5+
«x -2)2 + (y - 14)2)0.3
(2(y - 14)2 + (x - 25)2 + (x -2)2)r

r

x

y

x

y

x

y

r

x

y

r

_

=

y

xlylR

r

'"

=

y

t

u

Table

4.

FILTER (x,y,r).

=

y

t

u

=

Table 3. INCOMING (y,t,u).

•

yellow and green,

•

green and turquoise,

•

turquoise and blue,

•

blue and purple.

This color rendering yields a smooth change of colors
in the visualization, hence it avoids sharp color transi­
tions.
In Figures 7 and 8, the graphical interface for the
presentation of IDW interpolation data is illustrated.
Specifically, these two figures illustrate IDW interpo­
lation with n
3 and p = 2 on randomly selected
DEM (Digital Elevation Model) data over the same
area. Figure 7 visualizes the interpolation data based
on 255 input points, while Figure 8 visualizes the in­
terpolation data based on 1271 input points.

GROUND(x, y, t, i). Note that the constraint rela­
tions can be easily joined by taking the conjunction of
the constraints from each pair tuples of the two input
relations. Finally, in a constraint database system the
constraint in each tuple are automatically simplified by
eliminating the unnecessary variables u and T. We do
not show the result of the simplification step.

=

4. Visualization

In Section 2, we have described how to represent
IDW interpolation in constraint databases. In Sec­
tion 1, we have seen it is very easy to express queries
(such as join operation) in constraint database on in­
terpolation data. In this section, we will discuss how
to visualize interpolation data and give some analysis
on the quality of IDW interpolation.
For visualization, six basic colors are chosen: red,
yellow, green, turquoise, blue, and purple. The 24 bits
RGB values for these colors are the following: red
(255,0,0), yellow = (255, 255, 0), green (0, 255,0),
turquoise = (0,255,255), blue (0,0, 255), purple =
(255,0, 255). 400 smoothly changing colors have been
used for the color plot. These 400 colors are created
by a linear interpolation scheme which is used between
each of the following pair of the basic colors:

'"101

,au

lO.

=

=

...

=

•

red and yellow,

567

Figure 7. lOW (n

=

3, p

=

2) on 255 points.

Experiments have been conducted to analyze the
quality of IDW interpolation according to Mean Ab­
solute Error (MAE) and Root Mean Square Error

x

x

x

x

Y

y

y

y

T

t

t

t

i

i

2x - y - 20 :s 0,
12x+ 7y- 216:$ 0,
13y +7t - 286 :s 0,
2y - 3t- 12 :s 0,
y:S 15,
«(x- 2)2 + (y - 14)2)0.9+
( - 1)2)0.5 =
«x - 2)2 + y
(2(x- 2)2 + (y - 14) 2 + (y _ 1)2)r,
«y - 13)2 + (t - 22)2)60 + (y2 + (t - 1)2)20
= «y - 13)2 + (t - 22)2 + y2 + (t - 1)2)tt,
i = tt(l - r)
2x - y - 20;:: 0,
12x +7y - 216 :s 0,
13y +7t - 286:$ 0,
2y - 3t - 12 :s 0,
y:$ 15,
«x - 25) 2 + (y - 1)2)0.9+
«x- 2)2 + (y - 1)2)0.8 =
(2(y - 1)2 + (x- 25)2 + (x- 2)2)r,
«y - 1 3)2 + (t - 22)2)60 + (y2 + (t - 1)2)20
= «y - 13)2 + (t - 22)2 + y2 + (t _ 1)2)1.1,
i = 1.1(1 - r)

.

'DO

'"
...
...
."
'"
'DO

Figure 8. lOW ( n

=

3, P

=

2) on

1271

points.

--+-- MAE(n�3.p"1)
- MAE(n�3.p= 2)
--+- MAE(n�4,p"2)

28

i

26

x

y

t

i

2x - y - 20 :s 0,
12x+7y - 216;:: 0,
y � 15,
Y + 3t- 54:$ 0,
7y - t - 136 :s 0,
2y + 5t - 60 ;:: 0,
«x - 25)2 + ( y - 14)2)0.5+
«x - 2)2 + (y - 14)2)0.3 =
(2(y- 14)2 + (x- 25)2 + (x - 2)2)r,
«y - 29)2 + t2)20 + «y - 13)2 + (t- 22)2)40
= «y - 29)2 + t2 + (y - 13)2 + (t- 22)2)1.1,
i = 1.1(1- r)

w
..:
�24
22
20
18
16,L...- �- �- �- �- ��--' � :-::-"" '-::=-� -: 00:-:-':.J00
� "---900
1 3
l OOO 11 OO 1 2
6 00
700
500
3 00
8 OO
400

Number of Sample Points

Figure 9.

Table 5. GROUND (x, y, t, i).

MAE

result.

value. This is a very good result, considering that in
this case the size of input points is condensed over 1200
times, that is from 1525991 to 1271.
Although we only discuss the visualization of in­
terpolation data in this section, the same visualiza­
tion technique can apply to animating, that is, visu­
alizing for each time instance, a query result, such as
GROU N D(x, y, t, i) in the Oatalog query in Formula 1.

(RMSE). A set of sample points have been selected
from a OEM surface in the northern part of San Fran­
cisco, which has 1525991 original points. The num­
ber of randomly selected points are 255, 509, 763 and
1271. For each dataset, three kinds of lOW interpo­
lation methods with different n (the number of neigh­
bors) and p (exponent) have been experimented: (i)
n = 3, P
1; (ii) n = 3, p = 2; (iii) n = 4 , P = 2.
The number of pixels in display is between 214775 to
215380.
Figures 9 and 10 illustrate the quality analysis of
IDW interpolation based on different sets of randomly
selected points from the original OEM data. We can see
that under the condition of randomly selecting points,
both MAE and RMSE almost decrease to half when the
number of sample points increases from 255 to 1271. In
particular, when n 4 and p = 2 and the dataset con­
tains 1271 points, the MAE is 16.34, which is approx­
imately 17.3% of 94.55, the original average elevation
=

5. Conclusion and future work

This paper discusses the representation, querying
and visualization of lOW interpolation in polynomial
constraint databases. In constraint databases, the de­
tails of the interpolation are at a lower level, which is
transparent for the users. This property makes query­
ing and visualization easy in constraint databases.
Kriging [13] is similar to lOW but the weights are
derived using error statistics of the data. Beside lOW,

=

568

Conference on Geogmphic Information Science, pages
240-242, Savannah, Georgia, USA, 2000.
(4) M. N. Demers. FUndamentals of Geogmphic Informa­
tion Systems. John Wiley & Sons, New York, 2nd
edition, 2000.
(5) J. D. Foley, A. V. Dam, S. K. Feiner, and J. F. Hughes.

65

60

Computer Gmphics : Principles and Pmctice, Second

w
(/)

Addison-Wesley, 1996.
R. H. Giiting, E. Nardelli, and M. Schnei­
der. A data model and data structure for moving ob­
ject databases. In Proc. ACM SIGMOD International
Conference on Management of Data, pages 319-30,
2000.
[7J J. E. Goodman and J. O'Rourke, editors. Handbook
of Discrete and Computational Geometry. CRC Press,
Boca Raton, New York, 1997.
[B) S. Grumbach, P. Rigaux, and L. Segoufin. Manipulat­
ing interpolated data is easier than you thought. In

�55

(6)

50
45
40L--L

���

__
__�__�__�__� __�__�__��

300

500

400

600 700 800 900 1000 1100 1200 1300
Number 01 Semple Points

Figure 10. RMSE result.

Edition in C.

L. Forlizzi,

Proc. IEEE International Conference on Very Large
Databases, pages 156-65, 2000.
(9) J. W. Harbaugh and F. W. Preston. Fourier Analysis
in Geology, pages 21B-23B. Prentice-Hall, Englewood
Cliffs, 1968.
(10) K. Johnston, J. M. V. Hoef, K. Krivoruchko, and
N. Lucas. Using ArcGIS Geostatistical Analyst. ESRI
Press, 2ool.
(11) D. A. Keirn. Pixel-oriented database visualizations.

it is easy to see that Kriging is also representable in
constraint databases if the variogram, or the statisti­
cally derived function of weight and distance, is repre­
sentable using constraints. If we take some (distance,
weight) samples from the variogram, then we get a time
series like data, which can be interpolated and trans­
lated into a linear constraint relation using the algo­
rithm in Revesz et al. [16J.
We are currently working on extending our work to
animation. In animation we would use a 3D spatial
interpolation that is the combination of a 2D spatial
interpolation and a function of time. That is, at each
sample point we would no longer have a constant value
measured, but we would have a time series of the mea­
surements. If the time series is itself interpolated, then
we get a function of time that can be combined with
the spatial interpolation to get a 3D spatia-temporal
interpolation that is also representable in constraint
relations.

SIGMOD Record (ACM Special Interest Group on
Management of Data), 25(4):35-39, 1996.
[12) N. S. Lam. Spatial interpolation methods: A review.
The American Cartographer, 10(2):129-149, 1983.
[13] M. A. Oliver and R. Webster. Kriging: A method of in­
terpolation for geographical information systems. In­
ternational Journal of Geographical Information Sys­
tems, 4(3):313-332, 1990.
[14J F. P. Preparata and M. 1. Shamos. Computational
Geometry: An Introduction. Springer-Verlag, 1985.
[15] P. Revesz.
Introduction to Constmint Databases.
Springer-Verlag, 2002.
[16J P. Z. Revesz, R. Chen, and M. Ouyang. Approximate
query evaluation using linear constraint databases.
In Proc. Symposium on Tempoml Representation and
Reasoning, pages 170-175, Cividale del Friuli, Italy,
2001.
[17J E. Tossebro and R. H. Giiting. Creating represen­
tation for continuously moving regions from observa­
tions. In Proc. 7th International Symposium on Spa­
tial and Tempoml Databases, pages 321-344, Redondo
Beach, CA, 200l.
[lB] E. G. Zurfiueh. Applications of two-dimensional linear
wavelength filtering. GeophYSiCS, 32:1015-1035, 1967.

References
[1] M. Cai, D. Keshwani, and P. Revesz. Parametric
rectangles: A model for querying and animating spa­
tiotemporal databases. In Proc. 7th International
Conference on Extending Database Technology, vol­
ume 1777 of Lecture Notes in Computer Science, pages
430-44. Springer· Verlag, 2000.
[2] R. Chen, M. Ouyang, and P. Revesz. Approximating
data in constraint databases. In Proc. Symposium .on
Abstmction, Reformulation and Approximation, vol­
ume 1864 of Lecture Notes in Computer Science, pages
124-143. Springer-Verlag, 2000.
[3J R. Chen and P. Revesz. Geo-temporal data transfor­
mation and visualization. In The First International

569

