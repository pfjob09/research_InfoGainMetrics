An Incremental Algorithm to Support Geometric Constraint Satisfaction in
Engineering Design
Arquimedes Lopes da Silva
Federal Technology Center of Goias â€“ CEFETGO
Salgado Oliveira University â€“ GoiÃ¢nia
e-mail: als@cefetgo.br
Edgard Lamounier Jr.
Federal University of UberlÃ¢ndia â€“ UFU
Faculty of Electrical Engineering â€“ Computer Graphics Laboratory
e-mail: lamounier@ufu.br
ABSTRACT
This paper presents a set of algorithms to efficiently
support geometric constraint satisfaction during
engineering design. Based upon an incremental graph
construction approach, these algorithms satisfy each new
inserted constraint by exploiting the degrees of freedom of
the involved geometric entities. The objective is to avoid
satisfying the entire constraint set from scratch due to a
new constraint insertion. A prototype system has been
developed and is presented to demonstrate the flexibility
gained by the proposed incremental algorithms.

poorly contributes to the man-machine interactivity
demanded by CAD systems.
This work presents an algorithm to support interactive
constraint-based design. Based on an incremental
approach, the algorithm is designed to speed up the
constraint satisfaction process during engineering design.
A prototype system has been implemented to evaluate the
feasibility of the proposed techniques.

2. Related work

KEY WORDS: CAD, engineering design, geometric
constraints, incremental graph-based algorithms.

1. Introduction
During the life cycle of an engineering product,
several design alternatives are tested before beginning its
manufacturing process. Therefore, it is of fundamental
importance to provide engineers with computational tools
which allow them to test different design alternatives, with
decisive information, at the appropriate time.
Traditional CAD tools allow the modeling of a product
to be made in terms of its dimensions and absolute
coordinates. Hence, the determination of a product model
values is done through numeric manipulations, which
must be sequentially managed by engineers. It has been
noted that such process hinders the necessary flexibility
for creativity required by early design stages [10].
Recently, it has been noted that CAD projects, based on
the constraint paradigm [9], provides engineers with the
required training of thought for exploiting different design
solutions. This approach allows engineers to create an
engineering design in terms of geometric constrains
imposed on geometric entities. Thus, the geometry of a
project can be modified in a more natural and efficient
way [22].
However, some constraint-based systems re-satisfy the
entire set of design constraints, when a new constraint is
inserted [5,18]. This process is time-consuming and

)LJXUH  $SSURDFKHV IRU &RQVWUDLQW 'HVLJQ EDVHG

In the last years, it has been noticed an increasing
number of constraints-based algorithms to support
engineering design [4, 5, 18, 20]. The purpose of this
section is to present a classification of the current
approaches of these algorithms and to discuss their main
characteristics.
As shown in Figure 1, the current approaches based
on constraints can be divided in two main categories:
those based on equations and those based on geometric
construction.

2.1 Equation-based Approach
The equation approach treats a group of geometric and
engineering (performance, cost, weight etc) constraints as
equations. For this reason, researchers argue that this
approach provides a better platform mathematics to
support the preliminary phases of engineering projects like
functions such tolerance analysis and sensibility analysis.

Proceedings of the Sixth International Conference on Information Visualisation (IVâ€™02)
1093-9547/02 $17.00 Â© 2002 IEEE

Usually, the equation set is solved by a numeric solver [1,
7, 15, 17, 21]. The symbolic approach [2, 8, 14, 18] is
more robust than the numeric one. However, this approach
is still computationally expensive when dealing with large
constraints sets [5, 8, 11]. The approach graph-based
provides a better performance [24, 25], but it becomes still
expensive for a great group of constraints, because there is
the re-satisfaction of all of them due to a new constraint
insertion. Algorithms based on local propagation [13, 23,
27, 28] provide a better performance for systems based on
equations. However, most of these algorithms do not
support non-linear equations and constraint cycles
(simultaneous equations).

)LJXUH   D $ FRQVWUDLQW SUREOHP DQG LWV E *UDSK UHSUHVHQWDWLRQ

2.2 Geometric constructive approach
In this approach, the constraints are not represented by
equations. A set of geometric construction steps is used, to
position a geometric element in relation to other, through
rigid body transformations. This is achieved by
consuming the degrees of freedom (dofs) of the involved
geometric entities. The techniques developed in this
approach are divided in two main categories: techniques
based on rules and in graphs.
Rule-based constructive solvers apply rewrite rules to
discover and execute the construction steps [6, 26].
Although this approach is faster than pure numeric or
symbolic approaches, excessive time is still required to
find a constraint satisfaction sequence, through the
searching and matching of rules.
In the global approach [3, 4, 7, 12, 18, 19], the
geometric constraints are fist represented in an undirected
graph. This undirected graph is then analyzed and a plan
of construction steps is derived. Each construction step is
then executed by satisfying the constrains algebraically.
The best performance has been demonstrated by the
approach based on graphs by local propagation [17, 20,
22]. This approach satisfies the constraints as they are
inserted, in agreement with the userâ€™s design sequence.
Every geometric constraint inserted is locally
accommodated into the current solution graph. Constraints
are always specified from the known to the unknown
geometry and are solved incrementally. The approach for
geometric construction provides a fast process for
satisfying the constraints compared to other approaches.

3. Geometric constraints - Representation
and satisfaction
A graph structure is used to represent the constraint set
imposed on geometric entities. In this graph, nodes
represent geometric entities and arcs represent geometric
constraints. Figure 2(a) shows a constraint problem. The
line segment SR and the circumference C are positioned in
the sketch plan and are free to move. The graph
representation is shown in Figure 2(b). Figure 3(a) and
3(b) show the final geometry configuration and the graph
representation, after a tangency constraint is imposed on
them.

)LJXUH   D 7KH QHZ JHRPHWU\ DIWHU WKH LQVHUWHG FRQVWUDLQW DQG E WKH FRUUHVSRQGLQJ
JUDSK

The arc direction given in the graph (C â†’ SR) is
established to support constraint propagation and direct
manipulations. This means when the user selects and
move the circumference, the line segment performs the
same operational transformations. The opposite is also
true, since the system can detect the user intention and
change the arc direction. However, the constraint
direction is usually defined from the object with smaller
number of dofs to the object with larger dofs. This allows
the user to better explore rigid body transformations when
satisfying new constraints.
Another application of the proposed techniques is in
schematic drawings of electric circuits. Consider the
electric circuit in Figure 4. In this circuit, resistors R1 and
R2 are represented by arcs N1N2 and N3N4, respectively,
where Ni represents a electric circuit node. The constraint
imposed on these nodes is the resistance of each resistor,
where a given electric current is supposed to flow. Two
resistors are connected by theirs end points (N2 â†’ N3), as
shown by the dashed lines in Figure 4. This is represented
as a connect constraint in the graph. When a connect
constraint is established, the voltage drop between the
connected nodes is set as null.

Proceedings of the Sixth International Conference on Information Visualisation (IVâ€™02)
1093-9547/02 $17.00 Â© 2002 IEEE

)LJXUH  Â² &RQQHFW FRQVWUDLQW GDVKHG OLQH EHWZHHQ WZR HOHFWULF FRPSRQHQWV DQG WKH FLUFXLW
JUDSK UHSUHVHQWDWLRQ

)LJXUH   D &LUFXLW ZLWK WZR FRQQHFWHG UHVLVWRUV WKURXJK D WKUHDG E WKH JUDSK HYLGHQFLQJ
WKH EUDQFK 5 DV D GHSHQGHQW EUDQFK RI WKH EUDQFK 5 DQG F WKH FRPSRQHQW 5 LQ D QHZ

A designed electric circuit is composed by these
constraints (connections), imposed by the user on
components connectors of the circuit itself. The models of
electric components (such as resistors, sources, inductors
etc) are inserted in the graph by their nodules and the
electric characteristic of the component (resistance,
tension, inductance etc) â€“ considered as constraints â€“ are
represented as arcs, in the graph, connecting these
nodules.
The connection constraint does not consume dofs.
Instead, it just indicates that geometrically parts of the
circuit are linked and they should remain as such. It also
represents electrically a connection among components of
the circuit. In spite of the connection constraint not
consume dofs, the system considers, for effect of graph
orientation, the consumption of translation dofs. The
graph is configured according to the geometry explained
in the previous section. The main difference is that the
system considers in the case of electric circuits all the
objects with three dofs. As it will be explained, an object
submitted to a geometric transformation, will propagate
such operational transformation to its dependents in the
graph, following arc direction. This means that the system
will always preserve the existing connection constraints,
even when a component is translated or rotated. The
connection will only be disregarded if it is removed by the
user. Figure 5 shows an example of considered dofs.

SRVLWLRQ

As mentioned before, when the user manipulates a
geometric entity directly in the screen, the system
propagates the transformations to the other entities
according to the graph direction. The propagation is
undertaken in such way to maintain existing constraints.
Consider Figure 7(a). Suppose that the user chooses the
line segment r to rotate. The line segment rotates about the
coincidence point, according to a given angle. Soon after
this geometric transformation is propagated to the children
of r. Thus, segments s and t also rotate about the same
point. This shows that the system can effectively supports
direct manipulation of under-constrained geometry.

)LJXUH   D 'LUHFW PDQLSXODWLRQ RI DQ HQWLW\ E SURSDJDWLRQ RI WKH WUDQVIRUPDWLRQ DQG F
WKH JUDSK UHSUHVHQWDWLRQ

If the user chooses segment s to rotate, it will rotate
and propagate this rotation to t. If he/she chooses segment
t to rotate, there is no operation propagation and t rotates
by itself.

4. Geometric Constraint Cycles
One of the main contributions of this work is the
handling of constraint cycles. This is illustrated by the
four-bar mechanism [9, 25] in Figure 8.
)LJXUH  Â² 5HSUHVHQWDWLRQ LQ D JUDSK RI WKH FRQQHFWLRQ FRQVWUDLQW VKRZLQJ WKH GRIV

The connection constraint has the following law: "the
components connected by its ends, should continue
connected even if these components change position ".
Observe that the connection constraint is automatically
updated to the new position of the connected components
(Figure 6).

Proceedings of the Sixth International Conference on Information Visualisation (IVâ€™02)
1093-9547/02 $17.00 Â© 2002 IEEE

)LJXUH   7KH IRXUEDU PHFKDQLVP

Note that after satisfying all geometric constraints to
simulate the mechanism, a constraint graph is detected as
illustrated in Figure 9. The whole mechanism has one dof
(under-constrained geometry) which must be simulated
when the user tries to move bars 2, 3 or 4.

)LJXUH   /RFDO $QDO\VLV WR VDWLVI\ WKH UHVWULFWLRQ EHWZHHQ EDUV  DQG 

5. Case study and results
The system has been developed in Visual Basic 6.0
demonstrating the incremental nature of the proposed
algorithm and its ability to handle direct manipulations of
under-constrained geometry. Two engineering case
studies have been taken into account to show the system
feasibility. The first one, applied in the area of Mechanical
Engineering, is the mechanism of the 4 bars. The second
one, applied in the area of Electric Engineering, deals with
the analysis of electric circuits in permanent mode and it
aims to facilitate the manipulation of circuit elements
during its design construction.

5.1 Incremental nature constraint of the
algorithm
)LJXUH  Â² *UDSK F\FOH RI WKH EDUV PHFKDQLVP

The user can not manipulate bar 1 since it is grounded.
Consider, then, the direct manipulation of bar 2. The
allowable motion for this bar is rotation about its
coincidence point with bar 1. In turn, this transformation
must be propagated to bar 3 and bar 4, according to graph
direction. However, bar 4 can not simply rotate since its
has an imposed constraint by bar 1. Thus, in order to
support such mechanism simulation, the proposed system
locally destroys the constraint between bar 3 and bar 4 and
again, locally, re-satisfies this constraint in the new
position of bar 3 (that generated by rotation and
propagation of bar 2). This local constraint satisfaction
method is known as Locus Analysis [18-20] (Figure 10).
Note that only part of the graph is affected during the
satisfaction of the constraints.

The purpose of this section is to show how the
constraint graph allows the accommodation of a new
constraint without re-satisfying the entire constraint set.
The system has been implemented to highlight those
geometric entities that are affected either by a new
inserted constraint or by constraints that are locally resatisfied to support direct manipulations. Figure 11 shows
the system satisfying a coincidence constraint between bar
3 and bar 4 when designing the 4-bar mechanism. Note
that these bar are highlighted (red color) during constraint
satisfaction. Those bar colored blue represented the
constraint set and geometric entities that are not disturbed
by the new inserted constraint.

)LJXUH   /RFXV $QDO\VLV ZKHQ VDWLVI\LQJ D FRLQFLGHQFH FRQVWUDLQW EHWZHHQ EDU  DQG EDU 
KLJKOLJKWHG

Proceedings of the Sixth International Conference on Information Visualisation (IVâ€™02)
1093-9547/02 $17.00 Â© 2002 IEEE

Figure 12 displays when the 4-bar mechanism is
complete by imposing coincidence constraint between bar
3 and bar 4 (in red). These are the only geometric entities
involved in this constraint satisfaction process and
therefore, constraint re-satisfaction does not take place.

5.2 Ability to handle direct manipulation
As explained in the previous section, the system has
the ability to support direct manipulations of underconstrained geometry. This is shown in Figure 12, where
bar 2, bar 3 and bar 4 are also highlighted, when the user
manipulates bar 2 to simulates the mechanism. The figure
shows only one frame of the computer animation carried
out by the mechanism simulation. Again, note that only
the constraints involved in the constraint propagation and
local constraint satisfaction, due to the mechanism, are
highlighted.

6. Conclusion and future works
The main contribution of this work it is the study of
incremental algorithms to speed up the constraint
satisfaction process. It also presents a comparative study
of several approaches and techniques for satisfying a set
of given constraints. The incremental nature of the
algorithm and its ability to handle under-constrained
geometry has been demonstrated through the prototype
system. It is important to conclude that the system allows
constraints to be satisfied incrementally, through the
exploration of the degrees of freedoms of the design
geometric entities. This allows the user to have the
freedom of exploring several alternatives of designs as
well as to simulate and to analyze mechanisms through the
support of direct manipulations. Furthermore, the system
locally detects and solves constraint cycles. It is believed
that saving time is an important issue during engineering
design and therefore, the proposed techniques can help in
supporting such belief.
As future work, collision detection algorithms will be
taken into account to allow the user to impose geometric
constraints in a more natural way. Also, the handling of
engineering constraints will be considered in order to
support preliminary conceptual phases of a design.

References
[1]
[2]

)LJXUH  Â² )UDPH VKRZLQJ WKH VLPXODWLRQ RI WKH EDU PHFKDQLVP DQG WKH FRQVWUDLQW VHW
DIIHFWHG E\ VXFK VLPXODWLRQ

Finally, Figure 13 shows those constraints which are
satisfied when an electric circuit is designed. In the
electric diagram of Figure 13 the direct manipulation of
the resistor affects the positioning of its connections with
the sources.

[3]

[4]
[5]
[6]

[7]

[8]
[9]

)LJXUH   +LJKOLJKWV RI WKH FRPSRQHQWV LQYROYHG GXULQJ WKH GLUHFW PDQLSXODWLRQ RI WKH

[10]

UHVLVWRU

Proceedings of the Sixth International Conference on Information Visualisation (IVâ€™02)
1093-9547/02 $17.00 Â© 2002 IEEE

BAJPAI, A. C. et al, D., MatemÃ¡tica para Engenheiros,
John Wiley & Sons, Ltd, 1979.
BECHER, T. and WEISPFENNING, V., GrÃ¶bner Bases
â€“ A Computational Approach to Commutative Algebra,
Graduate Texts in Mathematics, Springer â€“ Verlag, New
York, 1993, ISBN 0-387-9791-9.
BHANSALI, S., KRAMER, G. A. and HOAR, T. J., A
Principled Approach Towards Symbolic Geometric
Constraint Satisfaction, Journal of Artificial Intelligence
Research, Vol. 4, pp. 419-443, 1996.
BHANSALI, S. and HOAR, T. J., Automated Software
Synthesis: An Application in Mechanical CAD, IEEE
Transactions on Software Engineering, October 1998.
BOUMA, W et all., Geometric Constraint Solver,
Computer-Aided Design, Vol. 27, No. 6, pp. 487-501,
June 1995.
BRÃœDERLIN, B., Constructing Three-Dimensional
Geometric Objects Defined by Constraints, In
Proceedings of the 1986 Workshop on Interactive 3D
Graphics, Crow, F. and Pizer, S. (Eds). ACM Press, pp.
111-129, October 23-24 1986
BRUNKHART, M. K., Interactive Geometric Constraint
Systems, Masterâ€™s thesis, Computer Science
Division/University of California, Berkeley, 1994 ,
ftp://tr-ftp.cs.berkeley.edu/pub/tech-reports/csd/csd-94808
BUCHBERGER, B., A Theoretical Basis for the
Reduction of Polynomials to Canonical Forms, ACM
SIGSAM Bull., Vol. 39, pp. 19-29, 1976.
CHEN, X. and HOFFMANN, C. M., Design Compilation
of Feature-Based and Constraint-Based CAD,
ACM/SIGGRAPH Third Symposium on Solid Modeling
and Applications, pp. 13-19, Salt Lake Cyty, Utah, May
1995.
CHUNG, J. and SCHUSSEL, M., Compararison of

[11]

[12]

[13]

[14]

[15]

[16]
[17]

[18]
[19]

Variational and Parametric Design, In Proceedings of
Autofactâ€™89, pp. 5/27-5/44,1989.
FA, M., FERNANDO, T. and DEW, P. M., Interactive
Constraint-based Solid Modelling using Allowable
Motion, ACM/ SIGGRAPH Symposium on Solid
Modeling Foundations and CAD/CAM Applications,
1993.
FERNANDO, T., WIMARALARATNE, P., and TAN,
K., Interactive Product Simulation Environment for
Assessing Assembly and Maintainability Tasks,
University of Salford, URL:
FREEMAN-BENSON, B., MALONEY, J. and
BORNING, A., An Incremental Constraint Solver,
Communications of the ACM, Vol. 33, No. 1, pp. 54-63,
January 1990.
GAO, X. and CHOU, S., Solving Geometric Constraint
Systems. II. A symbolic approach and decision of
Reconstructibility, Computer-Aided Design, Vol. 30, No.
2, pp. 115-122, February 1998
GE, J., CHOU, S. and GAO, X., Geometric Constraint
Satisfaction using Optimization Methods, ComputerAided Design, Vol. 31, No. 14, pp. 867-879, December
1999.
HARPER, D., WOOFF, C. and HODGKINSON, D., A
Guide to Computer Algebra Systems, John Woley &
Sons, 1991, ISBN 0-471-92910-7.
HILLYARD, R. C. and BRAID, I. C., Analysis of
Dimension and Tolerances in ComputerAided Mechanical Design, Computer-Aided Design, Vol.
10, No. 6, pp. 161-166, June 1978.
KRAMER, G. A., A geometric constraint engine,
Artificial Intelligence, Vol. 58, pp. 327-360, December
1992.
KRAMER, G. A., Solving Geometric Constraint
Systems: A Case Study in Kinematics, MIT Press,

[20]

[21]
[22]
[23]

[24]

[25]

[26]

[27]
[28]

Proceedings of the Sixth International Conference on Information Visualisation (IVâ€™02)
1093-9547/02 $17.00 Â© 2002 IEEE

Cambridge, Massachusetts, 1992.
LAMOUNIER Junior, E., An Incremental Constraintbased Approach to Support Engineering Desing, PhD
Thesis, School of Computer Studies, Leeds University,
1996
NELSON, Donald and COHEN, Elaine, OptimizationBased Virtual Surface Contact Manipulation at Force
Control Rates, IEEE VR2000, 2000.
ROSSIGNAC, J. R., Through the Cracks of the Solid
Modeling Milestone, Eurographicsâ€™91 State of the Art
Report on Solid Modeling, 1991.
SANNELLA, M., The SkyBlue Constraint Solver and Its
Applications, First Principles and Practice of Constraint
Programming Workshop (PPCPâ€™93), Newport, RI, 1993,
ftp://wilma.cs.brown.edu/pub/ppcp93
SERRANO, D. and GOSSARD, D., Tools and
Techniques for Conceptual Design, In Artificial
Intelligence in Engineering Design, Vol. I, C. Tong and
D. Sriram (Eds), pp. 71-116, 1992.
SERRANO, D., Constraint Mangement in Conceptual
Design, PhD Thesis, Massachusetts Institute of
Technology, Department of Mechanical Engineering,
October 1987.
SOHRT, W. and BRÃœDERLIN, B., Interaction with
Constraints in 3D Modeling, In Procedings Symposium
on Solid Modeling Foudations and CAD/CAM
Applications, Rossignac, J. and Turner, J. (Eds), ACM
Press, pp. 387-396, 1991.
YU, LICHAO and KUMAR, ASKOV, Sequential
constraint imposition for dimension-driven solid models,
Computer Aided Design, Vol. 33, 2001, pp.475-486.
VANDER ZANDEN, B. T., A Domain-Independent
Algorithm for Incrementally Satisfying Multi-Way
Constraints, Technical report CS-92-160, University of
Tennessee, Computer Science Department, 1992.

