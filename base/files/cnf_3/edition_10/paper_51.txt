Visualizing and Exploring Large Networked Information Spaces with Matrix
Browser
Jürgen Ziegler (Fraunhofer Institute for Industrial Engineering IAO)
Christoph Kunz (Fraunhofer Institute for Industrial Engineering IAO)
Veit Botsch (Fraunhofer Institute for Industrial Engineering IAO)
Josef Schneeberger (Schema GmbH)

Abstract
This paper presents a new approach for visualizing
and exploring large networked information structures
which may represent, for instance, linked information
resources or metadata structures such as ontologies. An
interactive matrix display is used for showing relations
between concepts and concept hierarchies displayed along
the two axes of a matrix. The new approach also focuses
on the engineering process to create these information
networks. Initial user testing shows performance
advantages as well as reduced visual search in comparison
to conventional graph representations.

1: Introduction
Networked information structures are becoming
increasingly important for exploring and navigating
complex information spaces, such as Internet sites,
knowledge repositories or engineering data. Information
networks are also becoming important as metadata or
ontologies for information indexing in the context of the
Semantic Web[1]. Complex ontological information can, for
instance, be expressed in formalisms such as Topic Maps[1]
or DAML+OIL[3]. Visualizing and exploring such network
structures, however, still constitutes a major problem for
user interface design, in terms of minimizing visual search,
supporting user’s understanding and providing efficient
interaction for exploring the network.
Data
Raw Data

has several disadvantages. Overview and search in large
networks is difficult, especially if there is a complex link
structure. Visual search is impeded by arbitrary, nonaligned positioning of nodes. Associated nodes can often
only be placed at a large distance from their neighbor due
to space limitations. While searching the immediate
neighborhood of a node may be easy in many cases,
finding larger patterns of relations or following longer
paths in the structure visually is often difficult and errorprone.
Against this background, the work reported here aims
at improving the clarity of complex network
representations, for supporting visual searches for
concepts and relations. It also focuses on providing
intuitive interaction possibilities for exploring on different
levels of detail according to the principle of the
progressive disclosure.

2: Related Work
A standard net-like view, is used within the OntoViz
(Figure 2) plug-in of the ontology authoring tool Protegee2000[5]. It is based on the OpenViz[6] toolkit for graph
visualization developed by AT&T. This type of visual
representation holds the disadvantage, that only a small
cutout of the whole graph can be depicted without losing
overview and visual quality.

Visual Form

Data Tables

Data
Transformation

Visual
Structure

Visual
Mapping

Views

View
Transformation

Human Interaction

Figure 1: Information visualization reference
model (from [4])
In information visualization, the underlying
information structure can be mapped to different visual
structures [4]. The mapping most frequently used is to
show network structures as visually presented nets of
nodes and arcs. While the approach is straightforward, it

Figure 2: OntoViz – Visualization of Ontologies
A new visual mapping and interaction technique was,
for instance, used in the Hyperbolic browser[7] to provide

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

a continuous, direct-manipulative type of interaction.
However, it is mainly suited for hierarchical information.
Due to its visual deformity, only relations between the
node in the display focus and spatial neighbored nodes are
completely recognizable. Yet in some cases it was used
for the visualization of topic maps and ontologies where it
is only suitable to some degree, since the non-hierarchical
network structure causes some nodes to appear more than
one time in the visual representation. A well-known
example for this case is OntoBroker[8], an ontology-based
query and answering service for the semantic web.
A 3-dimensional visualization technique [9] of XML
Topic Maps (Figure 3) was developed at the Laboratoire
d’Informatique de Paris 6. The underlying cone trees [10]
were enhanced of interactive capabilities like reducing the
number of shown nodes by the use of filtering and
classifying algorithms. By the means of two visual
transformations, the represented topic map can be
explored. On the one hand n-ary relationships can be
visualized as nodes and on the other hand binary relations
can be depicted as arcs between nodes. In this view n-ary
relationships have to be decomposed in binary relations.

Figure 3: Topic Map visualization with relations as
nodes or arcs
Alternatively, static net representations including
matrix displays of networks were already proposed by
Bertin [11], but his work did not make use of interactive
features. Also Becker et al. [12] used matrix-like displays
for network traffic visualization.
However, none of the introduced approaches
supports the visualization of arbitrary networked data with
regard to different user tasks like the search for specific
nodes or arcs, the discovery of relationships between
nodes or all relationships of particular nodes. Furthermore
they lack of substantial interactive exploration features
such as a systematic drill-down or condensation of
fragment structures. For these reasons, non of the existing
approaches is particularly suited to visualizing and
interacting with large networks of abstract data.

3: Matrix Browser – Design Principles
The central idea of the Matrix Browser approach and
prototype is to map the underlying graph structure to a
highly interactive adjacency matrix (Figure 4). Adjacency
matrices are a well understood alternative graph representation where the nodes of the network are shown along the

Figure 4: Prototype of the Matrix Browser
horizontal and vertical axes of a matrix. Both the direction
of an association (for directed graphs) as well as different
types of associations can be visualized by using arrows
and graphical symbols shown inside the cells. This can be
done in conjunction with other techniques such as tool tip
descriptions of different association types. Displaying all
nodes on both axis of the matrix is the simplest possibility
the matrix browser provides to represent a network. A first
extension of this standard matrix model is the capability to
flexibly filter the node sets shown on each axis of the
matrix. This filtering can be done either based on arbitrary
attributes of the nodes or on properties of the relations
displayed in the cells.
The second main design feature is that Matrix
Browser provides mechanisms for presenting hierarchical
information structures directly as interactive tree widgets.
This “Windows Explorer”-like technique is widely known
and intuitive to use. Information networks typically
contain hierarchical substructures which may either based
on merely syntactic properties of the graph or on the
semantic types of the relations. In Matrix Browser, the
user can flexibly place such hierarchical substructures
along both axes and explore them with the familiar
expand/collapse procedure. In this way, the information
shown in the matrix can be better structured and the
amount of visually displayed material reduced.
As a result of using tree widgets as axes of the
matrix, not all concepts and relations are visible all the
time. Matrix Browser allows to use expand/collapse
functions not only for the trees but also for the cells. If the
explicit relations in the net are not visible because their
superordinate concepts are in a collapsed state, an
interactive symbol is shown, that can be clicked for
expanding/collapsing the associated trees. With these
techniques, the user can flexibly drill-down into the
network or condense parts of it.
A net-like interactive visualization in the upper left
corner of the matrix shows all of the neighbors in the net
of a node, which is selected in one of the two hierarchies.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

So not only the context of a node within the hierarchies
but also in the net can be seen easily.

4: Interactive Behavior
4.1:

Axes

The subsets of nodes displayed on the axes of the
matrix can either be the results of queries or those parts of
a network that represent hierarchical substructures.
Hierarchies placed along the axes can be explored directly
by expanding and collapsing their interactive trees. This
familiar and effective kind of exploration works both on
the horizontal and the vertical axis. The flexible methods
to show user defined subsets of the information source on
the axes enables the user to reduce, increase and navigate
on the displayed part of the networked data.
4.2:

Matrix

The relations shown in the cells of the matrix for two
currently selected sets of nodes should then always be
consistent with the current interactive state of the axes. In
order to achieve this consistency in the visualization, a
number of issues need to be solved. The first issue
concerns the visibility of relations for nodes that are
currently not displayed in the tree because their
superordinate nodes are in a collapsed state. A second
issue arises for transitive relations where the relations
between two nodes can be propagated up or down in the
hierarchy this node is part of. For example, in a scenario
representing the organizational structure of a company
linked to the different locations of the units, a unit located
in a particular city is also located in the country and the
continent that city lies in. Whether or not such inferences
are made, depends on the type of the relations in the
hierarchy, that is to say if they are transitive or not. The
transitivity of a relation can be derived rules in the
underlying ontology and the use of suitable inference
mechanisms. The visualization engine, however, should
be able to deal with all the different cases. For this
purpose, Matrix Browser provides different interactive
types of relations in the cells of the matrix. If a cell of the
matrix is marked, it can represent one of the following
cases:
• An explicit relation represents a link explicitly
specified between two nodes in the underlying
graph. This link may also be semantically typed.
• A hidden relation is an indicator that an explicit
relation is located somewhere lower in the
hierarchy of the nodes, but is currently not visible
because a superordinate node has been collapsed.
• An implicit relation is a relation that has been
derived from the underlying graph by some
inference mechanism. Implicit relations can be

either of an inheritance type, where a relation is
propagated downward in a hierarchy, or of a
generalization type where the propagation works
upward. In the latter case, a cell marked with this
type indicates that by expanding the axial node
hierarchies, the explicit relation that was the source
of the inference can be found somewhere lower in
the hierarchy.
These different types of relations are indicated
through different symbols shown in the cells. Both hidden
and implicit relations (generalizations) can be expanded
just like nodes in a tree widget by clicking on them (both
are marked with a ‘+’ sign). Through a tight coupling
between cells and hierarchies shown on the axes,
expanding a relation also expands the nodes that belong to
that relation. In this way, the user can flexibly explore the
information structure both by selecting and filtering those
parts of the complete graph to be shown in the matrix and
by interactively drilling down from high-level concepts to
lower-level nodes and relations.
4.3:

Net-like Visualization

The net-like visualization in the left upper corner of
the matrix browser enables the user to explore the
neighbourhood of the selected node. In this part of the
visualization all nodes directly linked with the selected
node in a hierarchy are shown. Selecting an adjoining
node moves this node in the centre of the net-like
visualization and shows all neighbouring nodes in a circle
around the node itself. If the adjoining node doesn’t
belong to the subsets or hierarchies on the axes, the
hierarchy which the selected node is not part of is
exchanged by the hierarchy the adjoining node is member,
or if there exist none, just by the node itself. With this
mechanism, the whole net can be interactively explored.
4.4:

Editing Mode

Concerning the needs of engineering networked
information resources, especially Topic Maps or
Ontologies, in a user friendly way, Matrix Browser also
provides editing facilities. The user has not only the
possibility to add, remove and edit the nodes and
properties of the trees, but also to add, delete and modify
the relations and their properties in the matrix. For each
node a set of resource can be defined and linked to it.
Sometimes it can be useful to define resources also for a
relation, so Matrix Browser treats relations as user defined
classes. In this easy way Matrix Browser serves as a full
featured network editor.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

5: Extraction of Hierarchies

6: Applying Matrix Browser for Hypertext

In order to exploit the full interactive capabilities of
Matrix Browser, the underlying network must be analyzed
in a manner that structures with hierarchical or transitive
properties can be automatically recognized and extracted.
This can be done by just considering the syntactical
structure of the whole graph. That means that only these
subgraphs are displayed on the axes, which are directed
and acyclic. With just this easy way the resulting trees do
not necessarily have to provide semantics to the user. For
further analysis the semantics e.g. the type of the various
kinds of relations must be known. Most of the formal
ontological representations like XML Topic Maps, RDFS
and DAML+OIL have at least one explicitly typed
relation, the subclass relation, which has a transitive type.
This subclass relation can be used without sophisticated
inference mechanisms to mine hierarchies in the
underlying network. Supplementary types of relations
must be identified by some deductive inference
mechanisms or the semantics must be explicitly defined
by the user, maybe in an interactive way.
We plan to make use of a method, which is to map
the network into a knowledge representation, where the
relation semantics are defined and the relevant
substructures can be extracted by existing inference
engines. By means of that, complex queries can be
computed to create implicit relations. Formal
representations of ontologies are transformed into f-logic
[13], which includes axioms for relations to define
semantics and to enable the deductive inference. These
axioms are only deposited in the representation in cases
like DAML+OIL, the XTM Topic Map standard does not
have such modeling possibilities and must be annotated in
a suitable manner. Figure 5 shows the information flow
from ontology to Matrix Browser.

Beside ontological metadata, an obvious application
domain for Matrix Browser is visualizing large networked
hypertext. Here it is used to visualize and manipulate the
organizational structure in a content management system.
Figure 6 shows contents nodes and links of a typical
WWW site. With 10,000 or more nodes, the network
visualization becomes incomprehensive in particular for
occasional users.

Figure 6: Network visualization of a e-Journal
site by a CMS (SchemaText)
After a careful examination, it turns out that most
content bodies resp. WWW sites consist of multiple
hierarchical organization structures. Almost always, there
is a single master hierarchy which includes every piece of
contents. Additional hierarchies are for example: the
product organization, the service area, an FAQ, news and
special offers which refer to products or services. All
these contents nodes are connected by various types of
cross references: “see also” links, used- in links (for parts
of products), index references, or special offers. The
hierarchies and cross references can be visualized by the
matrix browser in a self-explanatory way. Nevertheless,
the overall link structure represents an arbitrary network.

7: Preliminary Evaluation

Matrix Browser

Query /
Extraction of
Hierachies
F-Logic
(XSB / Flora 2)

Topic Maps,
DAML+OIL, etc..
(Explicit Knowledge)

Axioms
(Implicit Knowledge)

Transformation

Figure 5 : Mining hierachical structures

Ontologie

For evaluation of the Matrix Browser concept, a
iterative and experimental procedure was applied. Hereby,
two studies were carried out, analyzing performance time
and search strategies both with Matrix Browser and
conventional network representations. The underlying
application scenario was made up with different fields of
knowledge associated with units respectively their persons
of an organization (e.g. “Person A is an expert in field
B”). In the first step a conventional network visualization
without any higher visual structure was compared with the
corresponding matrix display. While five subjects had to
solve a set of search tasks, their performance times, errors
and eye-tracking data were recorded. With a net consisting

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

of 27 nodes, the average search time in the net
visualization was 2,5 times higher than the matrix display
and the number of visual fixations was 2,3 times higher.
The visual search path of a subject in the Matrix Browser
can be seen in Figure 7.

Figure 7: Visual search path with Matrix
Browser
As an unstructured network display becomes not
manageable even with a small number of nodes or arcs, a
highly structured graph with spatially pooled nodes was
compared in a second step of the evaluation to the matrix
visualization. In this constellation Matrix Browser showed
a small, but not a significant advantage against the
network display (Network: search time 21 sec, 23
fixations, Matrix Browser: search time 19 sec, 20
fixations, see figure 8). But it has to be considered, that
the interactive capabilities of Matrix Browser were not
used in order to ensure the comparability of the search
tasks in both visualizations. Currently further evaluations
are in preparation to test the efficiency of Matrix Browser
also in the interactive mode. Altogether, the previous
results show that the approach with the matrix display due
to its regular layout structure is able to beat conventional
net visualizations. Well founded reasons exist to set up the
thesis, that especially in the case of large networked
structures Matrix Browser will show even more clear
advantages against “net as net” representations. Getting an
answer on these questions will anyway be issues of further
research.

8: Conclusions
We have presented a new concept and a first
prototype implementation of Matrix Browser, a tool for
visually exploring and engineering large networked
information structures. At the present stage of work, the
Browser is working with pre-defined concept hierarchies
and relations. An architecture for a mechanism to flexibly
extract hierarchies and infer implicit relations from an
underlying ontology is being developed. In addition to
these functional enhancements the graphical user interface
is being optimized to improve the readability of the
concept hierarchies, especially the horizontal ones and to
form the representations of various and different types of
relations more effective. Also the possibilities to make use
of a 3rd dimension in a matrix display are being examined
and will be realized.
We also plan to implement and examine tools that
allow to use Matrix Browser in information search, by
marking search results in the meta-data structure shown in
the browser and by exploring these results with a smart
lens technique.

9: Literature
1.

Berners-Lee, T., Hendler, J., Lassila, O. (2001): The
Semantic Web, Scientifc American, Vol. 284, p 34-43
2. Biezunski, M., Bryan, M., Newcomb, S. R. (1999):
ISO/IEC 13250 Topic Maps: Information Technology -Document
Description
and
Markup
Language.
http://www.ornl.gov/sgml/sc34/document/0058.htm.
3. Hendler, J.(2001): DAML: The DARPA Agent Markup
Language Homepage. http://www.daml.org.
4. Card, S.K.; Mackinley J. D.; Shneiderman, B. (1999):
Readings in Information Visualization : Using Vision to
Think. San Francisco: Morgan Kaufmann.
5. Lamping, J.; Rao, R. (1994): Laying Out and Visualizing
Large Trees Using a Hyperbolic Space. In: Proceedings of
the ACM Symposium on User Interface Software and
Technology, p. 13 – 14.
6. Fensel, D., Decker, S., Erdmann, M., Studer, R. (1998):
Ontobroker: The Very High Idea, In: Proceedings of the
11th International Flairs Conference, Florida.
7. Noy, N. F., Sintek, M., Decker, S., Crubezy, M., Fergerson,
R.W., Musen. M. A. (2001): Creating Semantic Web
Contents with Protege-2000. In: IEEE Intelligent Systems,
Vol. 16, No. 2. p. 60 - 71.
8. Gansner, E.R., North, S.C. (1999): An open graph
visualization system and its applications to software
engineering. In: Software-Practice and Experience, Vol. 0,
p. 1 – 5.
9. Le Grand, B., Soto, M., (2000): Information Management –
Topic Maps Visualization. In: XML Europe’2000,
Frankreich.
10. Robertson, G.., Mackinlay, J., and Card, S. (1991): Cone
trees: Animated 3D visualizations of hierarchical

Figure 8: Visual search path with a structured
graph

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

information. In Proceedings of the ACM SIGCHI
Conference on Human Factors in Computing Systems, p.
189-194.
11. Bertin, J. (1981): Graphics and Graphic InformationProcessing. Berlin: Walter de Gruyter Co.

12. Becker, R. A.; Eick, S. G.; Wilks, A. R. (1995): Visualizing
Network Data. In: IEEE Transactions on Visualization and
Computer Graphics, Vol. 1, No. 1, p. 16 - 28.
13. Kifer, M., Lausen, G., Wu, J. (1995): Logical Foundations
of Object-Oriented and Frame-Based Languages, In:
Journal of the ACM, Vol. 42, No. 4, p. 741-843.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

