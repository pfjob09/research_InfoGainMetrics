DARE: A Multidimensional Environment For Visualizing Large Set of Medical
Data
Giuseppe Santucci and Tiziana Catarci
Dipartimento di Informatica e Sistemistica
Universit`a di Roma “La Sapienza”
Via Salaria, 113 - Roma, Italy
[santucci/catarci]@dis.uniroma1.it

Abstract
We deal with the problem of automatic visualizing large set
of medical data and propose a framework that addresses
the involved issues. Our approach does not depend on the
particular data under analysis and its aim is to produce
a highly effective visual representation. Such objective is
made possible by the consistency of a set of logic rules
contained in a knowledge base. These rules express facts
and relationships about the visual domain, the data domain,
the mapping between both domains, and the perceptual domain. Our approach has been tested against a challenging
set of data, i.e., the biomedical data coming from the Nefrology Center of the Civil hospital of Vigevano.

1 Introduction
When interacting with a medical database, it is mandatory to design a friendly interface, which allows the end
user to easily access the data of interest. Very often, such
an interface exploits the power of visualization and direct
manipulation mechanisms [5]. However, the choice of the
visualization is not trivial [6], [11], [12], [13], [4] and it is
not sufficient to associate “any” visual representation to a
database but the visual representation should be carefully
chosen to effectively convey all and only the database information content. Moreover, even advanced 3D visualizations
are not enough when the data complexity arises; in such a
case it is mandatory to exploit all the possible available visual coordinates, like dimension, color, etc.
We are currently working on a general theory (see [7])
for establishing the adequacy of a visual representation,
once specified the database characteristics, and we are developing a system, called DARE: Drawing Adequate REpresentations, which implements such a theory. The DARE
system is based on a knowledge base containing different

kinds of rules, namely: Visual rules, that characterize the
different kinds of visual symbols; Data rules, that specify
the characteristics of the data model, the database schema,
and the database instances; Mapping rules, that specify the
link between data and visual elements; Perceptual rules,
that tell us how the user perceives a visual symbol (e.g., a
line), relationships between symbols (e.g., the mutual placements of two figures), and which is the perceptual effect of
relevant visual attributes such as color, texture, etc. In this
paper we focus on the perceptual rules, showing a first prototype used within a National Research project, to deal with
data coming from hemodialyses. The paper is structured as
follows. Section 2 recalls the main concepts of the Dare
system (the interested reader can find more details in [7]),
Section 3 describes the implemented prototype, and Section
4 shows a practical application of the system. Finally, future
work and conclusions are discussed in Section 5.

2 Foundations of the DARE System
In this section we recall foundations of the DARE system, whose core is a knowledge base containing different
kinds of rules:
1. Visual rules. Visual rules characterize the different
kinds of visual symbols (e.g., they list the visual attributes, which are associated with the different kinds
of visual symbols);
2. Data rules. Data rules specify the characteristics of
the data model, the database schema, and the database
instances;
3. Mapping rules. Mapping rules specify the link between data and visual elements;
4. Perceptual rules. Perceptual rules tell us how the user
perceives a visual symbol (i.e., a line, a geometric figure, an icon, etc.).

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

2.1 Visual Rules
Visual rules define the types of fundamental visual
symbols and their associated visual attributes. In order to
discuss visual rules, it is necessary to recall a subset of the
predicate symbols used inside such rules, with the associated intended meaning.

¯

×Ë ÝÑ Ì ÝÔ ´Üµ means that Ü is a visual type. We
consider four predefined types of visual symbols only,
i.e. point (a triple Ü Ý Þ in the space), line (a continuous sequence of points),plane (a surface passing
through line) and 3D figure (the portion of space enclosed by a set of planes).

Î

¯

Î

¯

Î

´Üµ

×Ë ÝÑ

means that Ü is a visual symbol.

¯

¯

ØØÖ ´Üµ

means that Ü is a visual attribute. Visual
attributes characterize the external properties of visual
symbols, i.e., size, color, texture, orientation, shape,
coordinates in the space [3].
×

Á ×Ç

Ì ÝÔ

´Ü

Ýµ

means that

Ü

is a visual symbol of

Ø´Ü Ý µ

Á ×Ç

means that Ü is an instance of a visual

´Ü

ØØÖ ´Ü Ý µ

means that Ý is a visual attribute of Ü.
Note that if Ü is a visual symbol type (or a visual category), then Ý is a visual attribute. Whereas, if Ü is a
visual symbol, then Ý is a value of a visual attribute.
À

×

Î ÐÙ ´Ü Ý µ means that Ü is a value of the domain
of the visual attribute Ý .

Á×

Data rules define the characteristics of the data model
used, of the data schema and the data instances. In the following we list the basic predicates used in the data rules,
with the associated intended meaning.

¯

Ø Ì ÝÔ ´Üµ means that Ü is a data type, e.g., entity,
relationship, class, etc.
Á ×Ç

Ì ÝÔ

type Ý .

´Ü

Ýµ

means that

Ü

is a data category of

× Ö ´Ü Òµ means that the data category Ü has Ò
arguments. Generally speaking, Ò is equal to 1 for
classes and greater than 1 for relationships.

means that

Ü

is an instance of the data

category Ý .

¯
¯
¯

ÓÑÔ´Ü Ý Þ µ means that Þ is the Ý -component of the
relationship instance Ü.

´Ü Ý µ, where Ü and Ý are data categories, means
that the instances of Ü are also instances of Ý .

ÁË

Ø
ØØÖ ´Üµ means that Ü is a data attribute, such as
age, name, SSN, address, etc.. Data attributes characterize the properties of data elements.

¯

À

¯

Á×

× ØØÖ ´Ü Ý µ means that Ý is a data attribute of Ü.
Note that if Ü is a data category, then Ý is a data attribute. Whereas, if Ü is an instance, then Ý is a value
of a data attribute.

Î ÐÙ ´Ü Ý µ means that Ü is a value of the domain
of the data attribute Ý .

2.3 Mapping Rules
The basic predicate is Ê Ô´Ü Ý µ, meaning that Ü is the
visual representation of Ý , where Ü is an element of the visual realm, and Ý is an element of the data realm. For example, the following rule
Ê Ô´

Ýµ

, where Ü and Ý are visual categories, means
that the visual symbols that are instances of Ü are also
instances of Ý .

ÁË

2.2 Data Rules

¯

Á ×Á Ò×Ø´Ü Ý µ

´Üµ

Ø

category Ý .

¯

¯

means that Ü is a visual category. A visual category is a specialization of a visual type, characterized by fixing the value of some visual attributes.
×

type Ý .

¯

À

Î

¯

¯

¯

ÓÓÖ

Ò Ø

ÐÓÓ

 

ÔÖ ××ÙÖ

µ

states that blood pressure is associated with the Z axis.

2.4 Perceptual Rules
In this work, we are not interested in defining specific perceptual rules (there is a branch of psychology that
studies the visual impact that the objects have on the human psyche, see, e.g., [9], [2]). Instead, we aim at defining a general framework in which generic perceptual rules
could be formalized. To do that, we define a basic predicate, ÓÓ Î ×´Ü Ý µ, which means that Ü is a good visual
representation for Ý . Note that ÓÓ Î × is a polymorphic
predicate, i.e. Ü is a generic element of the visual realm, as
well as Ý is a generic element of the data realm.
As a matter of fact, human beings have a better perception of some objects rather than others, the form of such objects and the distance among them influence the perceptual
capabilities of the human brain. The psychology of gestalt
studies the perceptual capability of the human beings.
In our experiments we used some feedback coming
from the end users to set the perceptual rules we need in
the biomedical context.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

3 The DARE prototype
We decided to start designing and implementing a first
prototype focusing on a precise and critical subproblem
very common in the biomedical context: to allow the user to
dynamically interact with a large amount of data, a situation
in which usual browsing techniques are totally useless.
Several attempts have been made to deal with such a
problem, most of them focusing on the idea of visually restrict the data set, allowing the user to change the value of
the attributes involved in his/her query through suitable widgets (see, e.g.,[1], [14]), in order to restrict the final result.
The case study we discuss in the following aims to
solve the problem in a very general way: given a generic
huge query result, how is it possible to automatically generate a visual representation that allows the user to dynamically and effectively rephrase her/his query in order to reduce the size of the outcoming data? Moreover, it is very
common to look at large medical data sets to get some statistical information and not for selecting single data values.
To deal with this problem we use only a portion of the
overall framework described so far, namely the visualization of the database instances. Moreover we assume that
the user is interacting with a single relational table and that
the number of involved attributes is little (e.g., 5).
It is worth noting that the above restrictions are not so
severe: it is a well known fact that select-project queries
represent the majority of the queries asked by users [8] and
it is very seldom that the number of the attributes involved
in the selection is greater than five.
The problem can be defined more precisely as follows:
having a relational table representing the result of a selection involving few attributes through range conditions,
which are the most suitable visual symbols and visual variables able to effectively convey to the user the distribution
of the tuples across the selection attribute domains?
In the following we detail the choices and the strategies
devised to cope with such a problem.
Concerning the visual symbols, it is quite evident that
the point is the best candidate to represent hundreds or thousands of tuples on the same screen. The visual attributes
available for the point are the three coordinates, the color
hue, and the color lightness, resulting in five different visual attributes.
Before deepening the technical aspects, we provide
an example. Assume that the user query is the following:
“Give me all patients taller than 1,60 meters, having weight
between 60 and 95 kilos”. The answer is presented to the
user through a cloud of points on the screen, where visual
attributes are suitably associated with data attributes. Looking at such a representation the user can easily understand
the distribution of the result across the domains of the attributes involved in the query.

Moreover, interacting with the widgets the user can reduce the range of one or more attributes having automatically updated the display. During such an interaction, if the
number of tuples represented on the screen decreases under
a threshold value, we can use not only the point to represent
a tuple but also other visual symbols, having at disposal a
greater number of visual attributes.
The implemented system relies on a suitable set of
rules, covering a subset of the overall framework described
in the previous section. In the following we give more details about the rules we use in the case study. Again, even
if in the above example we mentioned the user interaction,
we do not formally consider dynamic aspects of the visual
representation.

¯ Visual rules - We assume that the set of visual rules
includes a characterization of both point and a subset
of 3D figures (e.g., little cubes) to be used instead of
points when the number of tuples to be represented on
the screen is not so big. The visual rules contain the
description of the available visual attributes as well.
¯ Data rules - Concerning data rules we need just the
subset of data rules able to specify the characteristics
of the relational model, so handling the simple concepts of relation, tuple, attribute, and domain. Here we
report, as an example, the basic set of data rule chosen
for capturing the relational model constructs and the
relation used in the above example.
Ø Ì ÝÔ

´Ö

Ø Ì ÝÔ

´

Ø ÓÒµ

Ð

Òµ

ÓÑ

Á ×Ç

Ì ÝÔ

´Ü

Á ×Ç

Ì ÝÔ

´Ü

Ö Ð Ø ÓÒµ

Á ×Ç

Ì ÝÔ

´Ô

Á ×Ç

Ì ÝÔ

´ØÓØ

Ð

Á ×Ç

Ì ÝÔ

´×ØÖ

Ò

Ì ÝÔ

´Ö

Á ×Ç
ÁË

´Ö

ÁË

´×ØÖ

Ø

À

Ð

 

ØÓØ Ð

Ø

ØØÖ ´Ò Ñ

Ø

ØØÖ ´Û

Ø

ØØÖ ´

ÓÖ

µ

ÓÖ

 

ÒØ Ò Ñ

ØØÖ ´Ô Ø

ÒØ Û

À

×

ØØÖ ´Ô Ø

ÒØ

´Û

Á ×Ç

Ì ÝÔ

´

Ò

ÓÑ

Òµ

Ö

ÓÑ

 

Òµ

ÓÑ

Òµ

Øµ

ØØÖ ´Ô Ø

´Ò

ÓÑ

Øµ

×

Ì ÝÔ

 

ÓÖ

×

Ì ÝÔ

´Ü ½µ

Òµ

Ö

À

Á ×Ç

´Ü ½µ

Ö
Ö

Òµ

ÓÑ

À

Á ×Ç

 

Ö

ÓÑ

 

×
×

Ø ÓÒµ

ÒØ Ö Ð

Ð ØÓØ Ð
Ò

À

Òµ

ÓÑ

Ñ

µ
Øµ
Øµ

×ØÖ Ò
Ø Ö
Ø Ö

µ

Ðµ
Ðµ

Note that, as stated by the ISA rules, being the available domains implemented on a computer, it is always
possible to define a total order on them.

¯ Mapping Rules Here, being tuples represented by
points or little 3D figures, the emphasis is on attribute

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

domain representations. The available set of rules
specify the association among the relational attributes
and the available set of visual attributes. As an example, we show the basic associations between the domains defined for the relation Ô Ø ÒØ.

Note that even if the problem is, in general, computationally intractable, because of the assumption on the number
of attributes involved in the query it is possible to explore
the whole space of solution, getting an exact result.

4. A working example
Ê Ô´ ÓÐÓÖ Û

Øµ

Ê Ô´

ÓÓÖ

Ò Ø

Ê Ô´

ÓÓÖ

Ò Ø

Øµ
Øµ

Û

¯ Perceptual Rules The general, challenging objective
of perceptual rules, as described above is here tailored
to give us the information about the best representation
of relational attributes. Being all attribute domains of
the type total-order-domain, it is possible to associate
any attribute with any of the 3D coordinates or with the
size. Moreover, stating a suitable order on non ordered
visual attribute domains (e.g., from low frequency to
high frequency for colors), it is possible to associate
any relational attribute with any visual attribute. However, it is quite evident that the heigh of a person is better represented by the Y coordinates than by color. The
goal of the perceptual rules is to provide us with such
an information. To do that, we slightly modify the rule
ÓÓ Î ×´Ü Ý µ, adding a third numeric field, giving a
measure of the goodness of the representation. As an
example, considering a patient height, we can state the
following rules:

PAZIENTE
DIALISI
FLUSSO_PRESCRITTO
T_INIZIO
T_FINE
T_PRESCRITTO
P_INIZIO
P_FINE
P_PRESCRITTO
NI CHAR(20)

Patient ID
hemodialysis #
Prescribed flux
Dialisys starting time
hemodialysis ending time
Prescribed hemodialysis
duration
Initial patient weight
Final patient weight
Prescribed weight loss
Manual parameter
adjustment

The second one collects detailed measures taken during hemodialyses (e.g., arterial and venous blood pressures):

ÓÓ Î

×´

Ø

ÓÐÓÖ

ÓÓ Î

×´

Ø

ÓÓ

¼ ¾µ

ÓÓ Î

×´

Ø

ÓÓÖ

Ò Ø

¼ µ

ÓÓ Î

×´

Ø

ÓÓÖ

Ò Ø

¼ µ

ÓÓ Î

×´

Ø × Þ

Ò Ø

The prototype has been evaluated against the data coming from the Nefrology Center of the Civil hospital of
Vigevano. Data have been collected in order to evaluate
the center efficiency, in terms of successful hemodialyses.
In particular, the data have been arranged in three relational
tables described below. The first one collects concise data
about hemodialyses:

¼ ¿µ

¼ µ

Through such rules we state that even if in principle
color, size, and one of the 3D coordinates are suitable
to visually represent the height of a person, size and
Ycoordinate are the best candidates to do that. Note
that, once a visual representation has been selected, it
associates to each data attribute a different visual attribute, according to the general rule structure.
Using the above rules the system, given a user query
and the related result, can automatically choose the best visual representation. First of all, through the result cardinality, it discovers the suitable visual elements to adopt to
represent tuples (points and/or little cubes). In the above
example, because of the large number of tuples in the result, the only possible choice is the point. After that, the
system try to associate the relational attributes appearing
in the selection part of the query (i.e., weight and height)
with the available visual attributes (i.e., color and 3D coordinates) maximizing the goodness of the representation.

PAZIENTE
DIALISI
SEGNALE
TEMPO
VALORE

Patient ID
hemodialysis #
Signal code
Time
Value

The last one contains an overall hemodialyses evaluation and it is computed comparing the prescribed values
against the actual ones:
PAZIENTE
DIALISI
NI
NIR
QB
QBR
T
TR
WL
WLR
PA
PV
PAR
PVR
SUCCESSO
QTOT

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

Patient ID
hemodialysis #
Manual parameter adjustment
Boolean manual parameter adjustment
Blood flux
Boolean blood flux
hemodialysis duration
Boolean hemodialysis duration
Weight loss
Boolean weight loss
Arterial pressure
Venous pressure
Boolean arterial pressure
Boolean venous pressure
Overall success
Hemodialysis quality

Figure 1. Concise data about hemodialyses

Figure 2. Overall hemodialyses evaluation

In particular six parameters are used to evaluate an
hemodialysis: manual parameter adjustment, blood flux,
hemodialysis duration, weight loss, arterial and venous
pressures. Such values are stored in the table together with
a boolean indication (1=success, 0=failure). An hemodialysis can be globally successful without manual parameter
adjustments (0), successful with manual adjustments (1),
or unsuccessful (2). Moreover, a global value is computed
(QTOT) to rank the hemodialyses quality.
In the following we show some possible interaction
with the system (note that the actual data are not totally
validated, so in the following examples there is some data
”noise”: e.g., data about patient 4 are not complete). The
typical user of the system is a doctor interested in having
an overall vision of the efficiency of the Nefrology Center
and/or deepening the data about a little set of hemodialyses
to understand failure or success reasons.
Browsing the first table automatically produce the visualization shown in Figure 1, where each cube represents a
single hemodialysis. We have five patients (associated with
the X axis), each of them subject to several hemodialyses
(associated with the Y axis), a prescribed blood flux (associated with the Z axis), a prescribed weight loss (associated
with the cube size), and the presence or absence of manual parameter adjustments (associated with the cube color).
It is quite easy to see that (1) the prescribed blood flux for
patient five has been reduced after the first set of hemodialyses and (2) that the prescribed weight loss for patient two
presents some quick variations in the more recent hemodialyses. Moreover, exploiting colors (red and blue) it is clear
that only patient five performed all hemodialyses without
manual parameter adjustments.
Browsing the second table produce the visualization
shown in Figure 2, where each cube represents a single

hemodialysis, and the user focuses her attention on patients (X axis), hemodialyses (Y axis), the overall success
(Z axis), the local success about blood flux (color), and the
global hemodialysis quality (size).
The user can easily grasp that (1) most of hemodialysis are successful but with manual parameter adjustments
and (2) that patient five presents an initial sequence of unsuccessful hemodialysis in which there is a failure in the
blood flux (blue cubes) followed by a successful sequence
(red cubes). Comparing Figure 1 with Figure 2 it easy to
see that the unsuccessful sequence has been broken not performing a better hemodialysis but reducing the prescribed
blood flux!
Still considering the last table, the user has partitioned
the set of hemodialysis of each patient in intervals, where
the histograms dimension represents the average weight
loss and the color represents the average hemodialysis quality (see Figure 3).
It is clear that (1) patient one presents a low average weight loss in the first 18 hemodialyses and that (2)
hemodialysis between 55 and 73 present a very high quality.
The doctor inspecting such data could zoom (using
data coming from the second table) within the first 18
hemodialyses of patient one, detailing the blood flux of each
hemodialysis (see Figure 4). The X axis corresponds to the
hemodialysis #, the Y axis to the blood flux value, and the
Z axis to the time. It is possible to figure out that some
hemodialyses (i.e., 5, 15, 16, and 17) present strong irregularities in the blood flux (that is below the standard flux
of 300 ml/minute). The doctor can inspect in similar way
other parameters, trying to find out some other possible reasons for the bad performance of the first 18 hemodialyses.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

Figure 3. Statistics about weight loss

Figure 4. Blood flux of patient one in his/her first 18
hemodialyses

5. Future Work and Conclusions
Associating an effective visual representation to medical databases, and, in general, to large data sets, is crucial
for allowing different kinds of non-technical users to easily grasp the database information content. In this paper we
describe an application of the DARE system to biomedical
data coming from hemodialysis, a domain in which ”natural” data representations are hard to find. The proposed
approach extends the usual 3D visualizations introducing
more visual dimensions (e.g., color, size, etc.)
We also show how the system would work on a realistic case study, in which simple data analysis and statistical
data analysis are presented. We are collecting more feedback from doctors involved in the experiment and the next
step will be the implementation of a complete prototype of
the system, equipped with a graphical interface, in order to
enable the end user to add her/his own rules and equipped
with an enhanced knowledge base including the rules defining the users’s tasks as well.

[2]
[3]
[4]
[5]

[6]

[7]

[8]

Acknowledgements

[9]
[10]

This paper has been quite influenced by discussions the authors had with many people they met during the development
of the National Project ”ANALYSIS, INFORMATION VISUALIZATION, AND VISUAL QUERY IN DATABASES FOR CLINICAL MONITORING”, founded by Italian Minister MIUR.

[11]

References

[12]
[13]
[14]

[1] C. Ahlberg and B. Shneiderman. Visual Information Seeking: Tight Coupling of Dynamic Query Filters with Starfield

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

Displays. In Proc. International ACM Conference on Human Factors in Computing Systems (CHI-94), 1994.
R. Arnheim. Art and Visual Perception: a Psychology of the
Creative Eye. The University of California Press, 1954.
J. Bertin. Semiology of Graphics. The University of Wisconsin Press, 1983.
S. Card, J. Mackinlay, and B. Shneiderman. Readings in
Information Visualization. Morgan Kaufmann, 1999.
T. Catarci, M. Costabile, S. Levialdi, and C. Batini. Visual
Query Systems for Databases: A Survey. Journal of Visual
Languages and Computing, 8(2):215–260, 1997.
T. Catarci, M. Costabile, and M. Matera. Visual Metaphors
for Interacting with Databases. ACM SIGCHI Bulletin,
27(2), 1995.
T. Catarci, M. Costabile, and G. Santucci. Foundations of
the dare sstem for drawing adequate representations. Int.
Symposium on Database Applications in Non-Traditional
Environments (DANTE 99), 1999.
A. Chandra and P. Merlin. Optimal Implementation of Conjunctive Queries in Relational Data Bases. In Proc. of 9th
ACM Symp. on Theory of Computing, 1977.
T. Cornsweet. Visual Perception. Academic Press, 1970.
FADIVA-ESPRIT Working Group.
Foundations of Advanced 3D Information Visualization.
http://www-cui.cs.darmstadt.gmd.de:80/
visit/activities/IEEE/Fadiva.
D. Harel. On Visual Formalism. Communications of the
ACM, 31(5):514–530, 1988.
E. R. Tufte. The Visual Display of Quantitative Information.
Graphics Press, 1983.
E. R. Tufte. Envisioning Information. Graphics Press, 1990.
C. Williamson and B. Shneiderman. The Dynamic HomeFinder: Evaluating Dynamic Queries in a Real-estate Information Exploration System. In Proc. of ACM SIGIR’92,
1992.

