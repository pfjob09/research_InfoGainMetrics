A Java-based Visual Mining Infrastructure and Applications
Ming C. Hao, Umesh Dayal, Meichun Hsu, Jim Baker, Robert D’Eletto
Hewlett Packard Research Laboratories
(mhao, dayal, mhsu)@hpl.hp.com
Abstract

business trends. The challenge is to find methods for
presenting valuable information from large volumes of
data so as to enable a user to quickly identify exceptions
and to distinguish interesting patterns visually. There are
some issues in today’s visual mining of massive volumes
of data: (1) cluttered display; (2) disjoint displays; and (3)
limited access and lack of expandability.

Mmy real-world KDD (Knowledge Discovery & Data
Mining) applications involve the navigation of large
volumes of infortnntion on the web, such as, Internet
resources, hot topics, and telecorn phone switches. Quite
often users feel lost, cor!fused, and ovemjhelmed rvith
displqts that corltuin too much information. This paper
discusses a
new content-driven
visual nlitiing
infrastructure called Vi&line, that uses several innovative
techniques: (1) hidden visual structure and relationships
.for uricluttering displaces; (2) simultaneous v i s u a l
presentations for high-dimensional knowledge discovey;
und (3) a new visuul interface to plug in existing graphic
toolkits f(>r expanding its use in u wide varie5 of visual
upplications. We have applied this infrastructure to three
data mining visualization upplicutions - topic hierarchy
for document rlavigation, web-bused trouble shooting, and
telecom switch mining.

Information visualization based on a single complex view
often causes display clutter and visual confusion. Besides,
single view visualization does not allow users to visualize
the inter-relationships among different sets of highdimensional data. A common solution to provide multiple
views is to use many displays. But users have to click
through display after display to find the information. For
example, in a telecom switch mining application, suppose
a user wants to selectively monitor overloaded telephone
links in the United States. Starting with a display of a
United States map, the user would need to click though
each display of progressively greater detail (at the state
level, at the city level, etc) until the user finds the
overloaded links. With multiple views, the user can see
presentations at different levels of detail simultaneously to
identify the problem real time.

1. Introduction
Recently, the fast growth of information and the Internet
have led to the availability of large volumes of data.
Recent research efforts have focused on visual mining in
many different areas, such as telecom switch data, World
Wide Web traffic, organization charts, and file systems
[I ,2,6,7]. In industry, IBM’s Intelligent Miner organizes
data so as to make maximum use of significant pattern
recognition. SGI’s MineSet uses 3D animation to represent
knowledge extracted from large data sets. AT&T Bell
Laboratory’s SeeNet uses 3D layout and direct user
graphic interfaces to visualize telecom network activities.
MindMan [4] helps individuals organize, generate and
learn ideas and information with multiple displays.

Most recent graphic toolkits are designed for visualization
of certain types of knowledge. Inxight’s hyperbolic tree
toolkit [5] is designed for representing hierarchical
relationship knowledge, not for unstructured data, such as
geographical telecom switch visualization. To meet
different requirements, we need a new visual interface to
plug-in multiple graphic toolkits.

2. Our Approach
At HP Laboratories, we have devised some visualization
solutions to solve the above difficulties. The first idea is to
hide visual relationships and structure to reduce display
cluttering and visual confusion. This idea of hidden links
in dense graph layouts is different from the previous
hyperbolic graph/tree [2, 51. This method hides all nonprimary relationships; it only shows objects when the user
focuses on them. All other structures and relationships are
hidden in the property of each object.

Current information visualization systems are designed to
handle moderate amounts of structured data. New
information visualization systems will be built around the
navigation of, and interaction with, massive volumes of
unstructured information. Many major issues need to be
addressed, especially, those involving new techniques for
mining knowledge from large data warehouses. For
example, a telephone company needs to analyze millions
of call records to decide whether it needs to add another
tandem switch. A customer service center needs to distill a
solution to a customer’s problem. Companies need to
access data by market segment in order to forecast

For Color Plate, See Page 153.
124
O-7695-0431-0/99

$10.00 0 1999 IEEE

Figure: VisMine Component Architecture
Multi-Views

Client
Content-driven (Java/web based)
navigate large datasets
layered drill-down

authoring (cut, paste.. .)
synchronized multi-views

2. simultaneous

4-lb

multi- interactions

/11/

1 sensors
-I

I
Server

1.

I

hidden visual structure & relationship

+
Knowledge/Information
EYtmrtinn

Knowledge

Mining Engine

I

The second idea is to directly interact with the user and
mining engines to slice and dice large complex knowledge
into multiple simultaneous presentations. This method
allows a user to easily discover knowledge relationships
and exceptions. The third idea is to define new visual
interfaces to plug into existing graphic toolkits, such as
TGS’ 3DMSJava [3] and Inxight’s Hyperbolic Tree
Toolkits, thus expanding the use of our visualization
infrastructure to a wide variety of visual applications.
These solutions are driven by information content. The
technology to encompass all these ideas is referred to as
VisMine (Visual Mining).

application, VisMine hides sub-region traffic distribution
in the region property instead of displaying detailed
structures. For rapid discovery of patterns, VisMine is able
to monitor multiple simultaneous views of telecom traffic.
The user does not need to click through display after
display to find the information needed. Also, VisMine
plugs together various existing toolkits to meet different
needs. VisMine uses Inxight’s hyperbolic tree toolkits for
navigating a topic hierarchy and for web-based trouble
shooting. VisMine uses TGS 3DMSJava for monitoring
telecom switch traffic.

We have applied this infrastructure (VisMine) to three data
mining visualization applications - topic hierarchy for
document navigation, web-based trouble shooting, and
telecom switch mining. For example, a topic hierarchy
consists of a tree structure representing the primary topicsubtopic relationship plus many cross links representing
other secondary relationships among topics. VisMine
hides the structures and relationships that are not currently
in focus. VisMine applies the same method of information
hiding to help a user troubleshoot a highly interconnected
problem on the web. In the telecom switch mining

3. Component Architecture
VisMine is built a Java-based client-server model. Java
allows the creation of visual component applets that can be
automatically down loaded and executed on the local
client. To achieve rapid display, VisMine separates the
visualization from the data mining computation engine.
The data mining computation executes on the server. The
visualization construction and rendering are done locally
in the client sites. As a result, VisMine is able to provide
fast response needed for real-time visual mining. VisMine
architecture [8] contains three basic components:

125

1. hidden visual structure and relationships
2. simultaneous multiple presentations
3. plug-in capability (visual interfaces)

unexpected event happened in the middle of mining
telecom switch traffic data. VisMine employs a group of
sensors to automatically handle these incoming events and
executes certain functions, such as setting up an alarm or
activating a spotlight.

The above figure illustrates the VisMine overall
architecture. Each of the above components is described
further in the following sections. To make large highdimensional knowledge easy to mine and interpret,
VisMine emphasizes the following capabilities:
.
.
.
.

For visual consistency, a change in one presentation will
be propagated in real-time to the other presentations.
VisMine employs a synchronizer to ensure that all changes
occur simultaneously. Figure 2 illustrates animated
telephone traffic data in the United States. The six views
are synchronously presented at the same time. Any change
in one view will be automatically made in the other five
views simultaneously. The Texas and California
histograms are presented simultaneously to describe the
24-hour telephone traffic. This capability enables a user to
visually detect the traffic patterns between Texas and
California and their relationships with the rest of the
country.

navigate and author large knowledge bases
layered drill-down
synchronized multi-representations
multi-dimensional presentations with 2D/3D color,
zoom, and rotate.

3.1. Hidden Visual Structure & Relationships
A common method for visualizing an application, such as
fault diagnosis, document topic hierarchy navigation, or
market segment analysis is to layout all the structure and
relationships on the screen, such as a spatial layout with
nodes and links, or a matrix layout with cells. However,
for large complex information, these static techniques do
not work. There are too many lines, nodes, and cells to
draw. As a result, the display becomes cluttered and
causes visual confusion.

3.3. Plug-in Capability
Different types of application require different visual
representations. Sometimes, even within the same
application, there is a need to use different graphic
techniques for different visual representations. VisMine
defines a visual interface to plug in various existing
toolkits. For example, VisMine interfaces with Inxight’s
hyperbolic tree toolkits to represent the service
classification hierarchy, and it interfaces with TGS’s
toolkits to construct 3D-network visualizations for
displaying maps and histograms of traffic service data.

VisMine employs a visual hierarchy tree to map the
knowledge for automatic adjustment of complexity.
VisMine organizes the visual hierarchy tree into different
levels of group and display sequences according to each
application categorical feature and user input parameters.
This technique hides all the non-primary structure and
paths in each object’s property at the time the visual space
are initialized. They become accessible and interactive
only at the time of focus. The user can easily navigate
through all possible paths without tracing many lines and
intersections. For example, in an organization chart, a user
may have a primary manager and several temporary
mangers. When a user clicks on an object that has a hidden
link to his or her temporary manager in addition to a
visible link to his or her primary manager, this technique
automatically maps the path to the temporary manager
structure to facilitate navigation. At the conclusion of
navigation, VisMine removes the path to the temporary
manager. Figure 1 illustrates the difficulties of visualizing
a graph with multiple paths (non-primary, cross-link) with
and without using this hidden structure method.

To interface to different existing toolkits, VisMine defines
a common visual interface, a class library, and a suite of
visual protocols, such as VisConnect, Vi&end, VisRecv,
and VisSync to connect to an existing toolkit, and to
send/receive the current visual data and message to/from
existing toolkits.

4. Web Data Mining Applications
VisMine uses a web browser with a Java activator to allow
real-time interactive visual mining on the web. The Web
interfaces are based on standard HTML and the use of
Java applets, which are u s e d to explore relationships and
to retrieve data within a region of interest. The server is
integrated with the data warehouse and mining engine.
The user at the client side visually mines the knowledge
results. It allows the user to dynamically access large
hierarchies with complex links through HTML pages in a
Web browser.

3.2. Simultaneous Multiple Presentations
There are two types of event interactions. One type of
event is directly coming from the Web user interface, such
as a button, a slider. The other type of event is coming
from the processing of mining engines. For example, an

There are many data mining applications with large
information structures that can employ the VisMine

126

added to balance the load. Figure 2 illustrate a 24-hour
period of animated switch service.

content-driven execution model. We have prototyped
several applications, which we will use to illustrate these
techniques.

6. Conclusion
Data mining applications face difficulties in the visual
mining of massive, highly connected data sets on the
Internet. To date, many practical applications have shown
the usefulness of hyperbolic space [2, 51 and telecom data
mining [ 1,7].

4.1. Topic Hierarchy for Document Navigation
The first example is to visualize a topic hierarchy for
document navigation. A hyperbolic space is constructed to
present a topic hierarchy for millions of documents linked
to the web. The topic hierarchy is constructed by mining
the content of the documents and session logs that record
accesses to these documents. Using the hidden structure
and relationships capabilities, we are able to navigate a
large, highly connected topic hierarchy in a simple,
uncluttered hyperbolic space on a web screen.

In this paper we describe a new visual mining
infrastructure called VisMine. In VisMine, we define a
new visual interface to enable the use of various existing
visual toolkits. VisMine employs a hidden structure and
relationship method to unclutter the display for massive
data visualization. In addition, VisMine allows users to
easily navigate through different links without being
overwhelmed by a large number of nodes and paths. These
techniques have been successfully prototyped at Hewlett
Packard Laboratories.

4.2. Web-Based Trouble Shooting
The second example is a Hewlett Packard internal webbased troubleshooting application called Interview [9].
We use a hyperbolic space to organize and view large
numbers of questions and answers in a hierarchical
structure. Questions are parent nodes, while answers are
arcs to child nodes. A question can have several answers.
An answer can lead to another set of questions and
answers. Using the hidden structure and relationship
capabilities, users are able to navigate through answers to
link to another question and answer set that does not
directly belong to the primary path of the hyperbolic
space. The hidden structures and relationships give the
hyperbolic space the ability to represent a general network,
and thus are not restricted to parent-child structured trees.
A user can easily follow the knowledge content to search
for recent patches, technical tips, and versions. In addition,
statistical data can be mapped to the hyperbolic space
using colored nodes or arcs.

Acknowledgements:
Thanks to Joe Sventek, Graham Pollock, and Craig M.
Wittenbrink from HP Research Labs for their advice and
suggestions. Also thanks to Patrick Barthelemy and
Patrick Vigneras from “Template Graphics Software”, Jeff
Holmbeck, Harold Shinsato from “Inxight Software, Inc.”

for their technical support and for allowing us to use their
toolkits in our experiments.

References:
[I] Stephen G. Erick and Graham J. Wills, “Navigating large
networks with hierarchies” IEEE Visualization ‘93
[2] Tamara Munzner, “Exploring Large Graphs in 3D Hyperbolic
Space” IEEE Computer Graphics. Vol. 18/98.

4.3. Telecom Switch Mining

[3] Template Graphics Software, San Diego, CA.

The third example is visual mining of telecom network
switch data. VisMine organizes the geographical location
of a phone switch and the monitoring policy into different
group levels, such as country, state, service units, and busy
hours for mining visually. V&Mine provides buttons,
sliders, color scalar, threshold, and other visual metaphors
to permit a user to dynamically choose the region of
interest. VisMine hides non-primary structures and
relationships and only displays objects when in focus. For
example, VisMine hides all the phone switches located in
San Francisco from the United States map. Upon a user’s
request, VisMine is able to show all phone activity with
service units above 2,000 call seconds in San Francisco.
Using 3D animation, VisMine is able to show changes of
calling behavior. By selecting a proper visual level, a user
can easily identify which switch links (Trunks) are being
overloaded indicating that a second switch may need to be

[4] MindMan is a visual tool to organize information. 1998.
[5] The Hyperbolic Tree Toolkit is a product from Inxight
Software for exploiting large amounts of information.
[6] J. Lamping and R. Rao, “Laying out and Visualizing Large
Trees Using a Hyperbolic Space”. ACM/UIST’94.
[7] D. A. Keim, A. Herrmann, “The Gridfit Algorithms: An
Efficient and Effective Approach to Visualizing Large Amounts
of Spatial Data”, IEEE Visualization’98
[8] M. C. Hao, M. Hsu, U. Dayal, A. Krug, “A Technique for
visualizing Large Web-based Hierarchical Hyperbolic Space
with Multi-Paths”, PADD99, April 1999.
[9] A. Krug: “Interview: Knowledge Content & Program
Architecture” Hewlett Packard SW Engineering, 1998.

127

