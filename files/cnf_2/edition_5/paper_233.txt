DOI: 10.1111/j.1467-8659.2011.02071.x

COMPUTER GRAPHICS

forum

Volume 30 (2011), number 8 pp. 2440–2451

A New QEM for Parametrization of Raster Images
Xuetao Yin1 , John Femiani2 , Peter Wonka1 and Anshuman Razdan2
1 School

of Computing, Informatics, and Decision System Engineering, Arizona State University, AZ, USA
2 Department of Engineering, Arizona State University, AZ, USA
{xuetao.yin, john.femiani, peter.wonka, razdan}@asu.edu

Abstract
We present an image processing method that converts a raster image to a simplical two-complex which has only
a small number of vertices (base mesh) plus a parametrization that maps each pixel in the original image to a
combination of the barycentric coordinates of the triangle it is finally mapped into. Such a conversion of a raster
image into a base mesh plus parametrization can be useful for many applications such as segmentation, image
retargeting, multi-resolution editing with arbitrary topologies, edge preserving smoothing, compression, etc. The
goal of the algorithm is to produce a base mesh such that it has a small colour distortion as well as high shape
fairness, and a parametrization that is globally continuous visually and numerically. Inspired by multi-resolution
adaptive parametrization of surfaces and quadric error metric, the algorithm converts pixels in the image to
a dense triangle mesh and performs error-bounded simplification jointly considering geometry and colour. The
eliminated vertices are projected to an existing face. The implementation is iterative and stops when it reaches a
prescribed error threshold. The algorithm is feature-sensitive, i.e. salient feature edges in the images are preserved
where possible and it takes colour into account thereby producing a better quality triangulation.
Keywords: image parametrization, image vectorization, decimation, quadric error metrics
ACM CCS: I.3.5 [Computer Graphics]: Computational Geometry and Object Modelling—Geometric algorithms,
languages, and systems; I.4.0 [Image Processing and Computer Vision]: General—Image processing software

1. Introduction
Geometry and image processing have had a mutual influence
resulting in many trends, terms and methodologies shared by
both communities. Parametrization is a term used by both,
however, it refers to completely different practices in the
two domains. Mesh parametrization [HPS08] maps a 3-D
geometry to a more manageable base domain, usually in
ˇ
a plane.Image parametrization [KS09]
mostly refers to the
extraction of feature parameters from images.
In this paper, we propose a method that does two things
simultaneously. It converts a raster image to a coarse triangle mesh, called a base mesh, that captures the structure of
the image content; it also maps each pixel in the original
image to a point on the base mesh resulting in a non-trivial
globally continuous parametrization, that is represented in
terms of the barycentric coordinates of base mesh faces. This

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics
Association and Blackwell Publishing Ltd. Published by
Blackwell Publishing, 9600 Garsington Road, Oxford OX4
2DQ, UK and 350 Main Street, Malden, MA 02148, USA.

parametrization is constructed through repeated conformal
remapping; it meets the C0 continuity condition numerically
at based mesh edges. The parametrization is of high visual
quality as shown in Figure 1 (fourth row; detailed discussion about the figure is in Section 3.4). Such a conversion of
a raster image into a base mesh plus parametrization can be
useful for many applications such as segmentation, image retargeting, multi-resolution editing with arbitrary topologies,
edge preserving smoothing, compression, etc. The goal of
the algorithm is to produce a base mesh with per-pixel association such that (1) the reconstruction colour error is small
and (2) the quality of the resulting triangulation is high.
The algorithm, combines non-planar mesh parametrization
[LSS∗ 98] and quadric error metrics (QEMs) [Hop99], converts all pixels in the image to a dense triangle mesh and
performs error-bound simplification jointly considering geometry and colour. The eliminated vertices are projected on

2440

X. Yin et al. / A New QEM for Parametrization of Raster Images

2441

an existing facet and forms a non-trivial globally continuous
parametrization. The implementation is iterative and stops
when it reaches a prescribed error threshold. The algorithm
is feature-sensitive, i.e. salient feature edges in the images
are preserved where possible and it takes colour into account
thereby producing a better quality triangulation compared
to existing methods. The parametrization associates a set of
pixels to a face in the base mesh; the boundaries of those
patches follow the curvilinear features in the image. Our
scheme is conducive to arbitrary topology (e.g. the input
can be cut-outs of irregular shape from images) and can be
extended to higher dimensional feature spaces.
1.1. Contributions
First, we propose a new QEM, a modified formula of [Hop99]
with geometry error computed using a special case of the
general form in [GZ05], for converting raster images into a
triangle mesh that takes shape and colour distortion into consideration. Second, we produce a non-trivial globally continuous parametrization for each pixel in the original image.
This parametrization enables us to perform segmentation and
image editing. The algorithm runs in O(Nlog N) time; N being the number of pixels in the image. The metric is flexible
and allows the user to tune the algorithm to be more (or less)
sensitive to colour features by independently changing the
weights for the geometry and colour parameters. Figure 1
shows an example of our algorithm and its comparison to
that of [Hop99].
2. Prior Art
2.1. Mesh parametrization

Figure 1: From top down: original images of Lena and
Mandrill. Second and third rows represent base meshes
using Hoppe’s and our method, respectively; base meshes
have 1300 (Lena) and 1960 (Mandrill) faces. The fourth
row shows the reconstruction by interpolating the colour using our parametrization. There is no visible discontinuity
across the base mesh faces. It qualitatively shows that our
parametrization is globally continuous and has small distortion in the feature space.

Mesh parametrization was introduced for triangle meshes for
mapping textures onto surfaces, normal mapping, morphing,
remeshing, mesh editing, compression, etc. See [HPS08] for
a survey. It is a mapping from a higher dimensional surface
(3-D surface for example) to a base parameter domain, which
can be planar, spherical or a simplicial complex [HPS08]. A
well-known global parametrization method on non-planar
parameter domain was proposed by Lee et al. [LSS∗ 98].
Their multi-resolution adaptive parametrization of surfaces
(MAPS) algorithm uses a simplicial complex as the domain.
MAPS produces globally smooth parametrization by iteratively collapsing vertices and performing conformal mapping. MAPS is useful for remeshing, texture mapping and
geometry morphing. However, MAPS cannot be applied to
images directly because its priority computation is not extensible to pixels with colour features. Lee [Lee00] replaces
the error metric in MAPS with QEM of geometric distortion
to fit subdivision surfaces to triangle meshes. The MAPS
parametrization is considered globally smooth for its continuity across the patches. Higher order of parametric continuity is achieved in Khodakovsky et al. [KLS03] through
relaxation using a set of transition functions. However, for
parametrization of higher dimensional data, like in our case,

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

2442

X. Yin et al. / A New QEM for Parametrization of Raster Images

Figure 3: Illustration of steps of our algorithm showing edge
collapse and vertex projection. See the text for details.
formula to any dimension and distance to any hyperplanes.
Hoppe [Hop99] distinguishes the feature components from
the geometric ones and uses the geometric correspondence
of the feature to compute the feature error. The feature error is computed with respect to the interpolated value at the
projection in the geometry domain.

Figure 2: Visit maps of images of natural scenes [MFTM01]
reveal the underlying structure in the images and visually
validate our metric. (a) Original and (b) visit map.
such smoothness is unnecessary and hard to achieve without
introducing large amount of distortion.
2.2. Mesh simplification
Mesh simplification was first proposed to produce levels of
detail by subsequently removing elements from a complex
object [Lue01]. Most early simplification algorithms focused
on the geometry aspect of the mesh and tried to minimize the
volume shrinkage. Many algorithms adapt quadrics [GH97]
to approximate the error. Cohen et al. [COM98] proposed
a method to preserve the appearance during simplification
by maintaining the texture coordinates of original vertices.
Garland and Heckbert [GH97] and Hoppe [Hop99] extended
the QEMs to incorporate vertex attributes such as colour and
texture coordinates. Garland and Heckbert [GH97] concatenate the feature components to the 3-D geometry to form
a high-dimensional space and consider distances to the tangent hyperplanes. Garland and Zhou [GZ05] generalize that

Existing QEMs are not ideal for images. QEMs are mostly
defined as a summation of a spatial quadric that measures
volume shrinkage and a colour quadric. Since the spatial
domain of a raster image is planar, the volume shrinkage
during simplifying an image mesh is zero everywhere except along the boundaries. These metrics [GH97, Hop99]
numerically reduce to colour quadrics when applied to images. They are overly sensitive to noise in images of natural
scenes and produce a suboptimal triangulation. To accommodate the specific demands, we adopt the methodology of
Hoppe’s and substitute its geometry error with one that penalizes moves in all directions, a special case of the general form
in [GZ05]. similar idea was used in isosurface simplification
[ACSE05].
2.3. Image triangulation and parametrization
Lai et al. [LHM09] convert raster images into vector images
of similar appearance called gradient meshes. A key step of
their algorithm can be considered as an analogue of remeshing in images. In their parametrization step, a set of pixels
is triangulated using constrained Delaunay triangulation.
The resulting mesh is mapped to a planar parameter domain
with slits [LHM09] using only the geometry information.
The parametrization is later adjusted to take into account the

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

X. Yin et al. / A New QEM for Parametrization of Raster Images

2443

Figure 4: Top row is original images of Zebra and Bell peppers. Middle row is the base mesh and bottom row is the base
mesh rendered with OpenGL shading resulting in images
close to the original. The base meshes for the two images
were created with an optimization for colour distortion to
preserve the features, black and white stripes in the Zebra
and pepper boundaries in the Bell peppers.
colour information. The mapping is explicitly established
for selected samples; it does not guarantee consistent and
smooth parameter values for all pixels, e.g. at the ends of
a slit. Unlike their scheme, our proposed scheme considers
both geometry and colour information simultaneously and
produces globally continuous parameter values for all pixels.
Many methods [XLY09, RFM05, LIL06, LL06, WTL∗ 06]
generate meshes from images. Xia et al. [XLY09] apply a local edge detector to find the curvilinear image feature which
is later used to establish separate triangle meshes of pixel and
subpixels for each colour channel, called channel meshes.
These meshes are simplified using a simple error metric that
measures the maximum error in each channel mesh. Ren et
al. [RFM05] complete the curvilinear features in the input
image by establishing a constrained Delaunay triangulation
on the set of contours found by a local edge detector. The
ARDECO method [LL06] fits a set of regions delimited by
cubic splines to a raster image. Each region is filled with a
constant colour or a gradient (linear or circular) to generate
a vectorized version of the raster input. Lee et al. [LIL06]
apply progressive meshes method proposed in [Hop96] to

Figure 5: Shell image. (a) Original cut-out. (b)–(d) show
base meshes at different resolutions. (e) and (f) are
parametrizations (patch view) of the same base mesh (d). The
patch shapes are noticeably different when different weights
are applied for projection. (e) Both the shell and the man
image place zero weight on the colour domain and produces
trivial parametrization that provides no more information
than the base mesh; (f) places a higher weight on the feature
domain hence its boundaries are aligned with colour features
in the original image, making its clustering useful.
images and build a hierarchy of simplified meshes. Wang
et al. [WTL∗ 06] construct the neighbourhood graph of pixels with only pixel chroma values, and form an appearance manifold. Unlike our proposed methods, many of these

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

2444

X. Yin et al. / A New QEM for Parametrization of Raster Images

Figure 6: RMS reconstruction error plots. Ours closely follows Hoppe’s. The green curves show the RMS error for
the image generated based on our parametrization and performs exceedingly well in maintaining the original image
information.

triangulation methods require the detection of curvilinear
features in the image as input and they do not keep track of
the relationship between the resulting mesh and image pixels;
hence they are not able to perform pixel-related operations
such as segmentation and editing. Because we introduce a
location-preserving term in our metric, our base mesh is better suited for a variety of applications such as finite element
analysis.

3. Multi-resolution Image Parametrization

We choose edge collapse as our basic operation in simplification. We prioritize the edges based on approximated error
introduced by collapsing them; the approximation scheme
is elaborated in the Subsection 3.2. The algorithm uses a
bidirectional priority queue to manage, query and update the
edges based on their associated error values. It picks the edge
with the minimal error value at the start of each iteration as
well as updates the error value of the edges affected by the
edge collapse operation. To collapse an edge, we merge the
two endpoints to one point, assign to it a new set of features
(position as well as colour) and remove appropriate faces and
edges during the process. One collapse removes one vertex,
at most two faces, and at most three edges. We coarsen the
initial mesh through a sequence of edge collapsing operations until a certain error threshold is reached. The resulting
mesh is called the base mesh.
3.2. Novel quadric error metric
Many cost metrics have been proposed to measure the error
caused by removing elements from a mesh. Most metrics
approximate volume shrinkage by computing the sum of a
set of squared distances. In [Hop96], these squared distances
are computed over a set of sample points on the original
mesh to the approximating mesh; in [LT98, GH97, Hop99]
the distances are computed from a target vertex to a set of
planes spanned by its neighbourhood. The latter metric can

Our algorithm performs simplification and parametrization
simultaneously. In this section, we describe the two procedures in detail and evaluate their performance.

3.1. Simplification
A raster image is converted to an initial dense triangular
mesh; each pixel is represented by a vertex and the quadgrids are triangulated using one of the two diagonals. The
diagonal chosen minimizes the colour differences between
two endpoints. Notations are adopted from [Hop99, LSS∗ 98].
We denote a triangular mesh as a pair (P, K), where P is a
set of N regular indices of vertices; while the topology is represented as an abstract simplicial complex K, set of singles
(vertices), couples (edges) and triples (facets) of indices in
P. Each index i ∈ P is realized as a five-dimensional point
i
N,
vi = (pi , si )T = (xi , yi , Li , ui , vi )T ∈ R 5 with 1
where p represents the geometry components, s represents
the attribute components and N is the number of vertices in
the mesh. We confine the attributes to colour in this paper.
We follow the discussion in [CM02] and choose L∗ u∗ v∗ for
its ability to approximate perceptual colour distances with
Euclidean distances. More on choosing colour spaces can
be found in [CM97]. Two vertices i and j are neighbours if
(i, j ) ∈ K. The one-ring neighbourhood of a vertex i, N (i)
is the set of vertices that are neighbours to i. For more discussion, see [Spa94].

Figure 7: Visual comparison of the triangulation quality of
Hoppe’s (top) and ours (bottom). Red boxes show exploded
view that both algorithms preserved edge information while
the green boxes show our algorithm generates better triangulation. The original image is shown in Figure 2.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

X. Yin et al. / A New QEM for Parametrization of Raster Images

2445

Figure 8: Triangulation quality histograms.

be compactly represented as a quadric [GH97, Hop99]. Beside geometric error, QEMs [GH97, Hop99] incorporate the
attribute errors. Vertex attributes can be of arbitrary dimension such as colour channels.
Neither [Hop99] nor [GH97] is ideal in the image mesh
scenario as we stated in the previous section. We choose to
follow Hoppe’s metric definition [Hop99] for its accuracy,
efficient memory usage, and explicit separation between the
geometry and the attributes domain. Based on this, we propose a novel flattened QEM to deal with five-dimensional
image meshes that have flat geometry domain. Instead of
volume distortion, we measure the amount of vertex movement because it better captures the shape distortion on a
planar mesh.
Each face f of the original mesh defines a quadric as the
sum [Hop99]:
m

Qf (v = (p, s)T ) = Qfp (v) +
j =1

Qfsj (v),

where Qfp (v) represents the geometric error while Qfsj (v)
represents the attribute error for any of the m attribute channels. We use the definition of attribute error in [Hop99],
however we define the geometry quadric to be the squared
distance from p to the geometric centroid t = (xt , yt )T ∈ R 2
of f . Hoppe’s definition measures the distance between a
3-D point and the plane defined by f . It is always zero for
meshes with planar geometry domain. At places where colour
varies subtly, such as noisy textures or the background, decimation driven by this error will happen in random order
and produce triangles of suboptimal quality (see Figure 7
in Section 3.4). By replacing Qfp with an isotropic spherical

Figure 9: Triangulation results (each row from left to right):
original image, a small portion of the simplified image using
Hoppe’s and our metric, respectively. All three highlight the
fact that our metric produces better triangulation.

quadric, we penalize sharp shape variation. Our geometric
quadric vT Av + bT v + c is as follows:
⎞
⎛
⎛
⎞
.. ..
.0 .⎟
−t
⎜
⎜ I
⎟
, t T t⎠ ,
Qfp = ⎝A, b, c) = (⎝
⎠,
0
.. .. .. ..
.0 . .0 .
where the line divisors mark the first two rows/columns.
Summing all quadrics together yields Qf = (A, b, c) =
⎞
⎞
⎛⎛
I + j gj gTj −g1. . .−gm ⎛−t + j dj gj⎞
⎟⎜
⎟
⎜⎜
⎟
⎟⎜
⎟
⎜⎜
⎟
⎟⎜
⎟
⎜⎜
T
⎟ T
2⎟
−d1
⎟,⎜
⎜⎜
−g1
⎟, t t + dj ⎟ ,
⎟⎜
⎜⎜
⎟
..
..
⎟⎝
⎟
⎜⎜
j
⎠
⎠
⎠
⎝⎝
.
I
.
T
−d
−gm
m
where dj (offsets) and gj , j ∈ 1...m (gradients) follow the
definitions in [Hop99]. Each vertex v of the original mesh is
assigned the sum of quadrics on its adjacent faces weighted
by face area [Hop99]: Qv (v) = v∈f area(f ) · Qf (v) Each
edge e is assigned a quadric that is the sum of vertex quadrics
of its two endpoints. The new vertex introduced by edge collapse (after two vertices are removed) is assigned the position
and attribute that minimizes the edge quadric (the minimizer).
The minimum value of the quadric is defined as the error for
edges. We use SVD to find the minimizer. In singular cases,
we choose the minimizer among the mid-point and the two

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

2446

X. Yin et al. / A New QEM for Parametrization of Raster Images

During the process of projection, 5-D neighbourhoods are
flattened to 2-D. We use the same conformal map, zα , as
in [LSS∗ 98]. The angles and distances are computed among
5-D vectors using inner products. The discrete conformal
mappings minimize angle distortion. Such angle-based flattening also preserves relative areas of the triangles within a
neighbourhood.

Figure 10: Hand. Our method deals with the background
better while at the same time manages to isolate the finger
nails. (a) Input, (b) [BVMP04], (c) EDISON [CM02] and (d)
ours.

endpoints. To validate the claim that our metric approximates
the distortion of the image similar to human perception, we
visualize the frequency of each pixel visited by the edge collapse operator (see Figure 2). A pixel is counted as being
visited once when its corresponding vertex either appears as
an endpoint of a collapsing edge or requires reprojection (described in Section 3.3) because it was previously projected
onto the neighbourhood of the collapsing edge. We expect
higher visit counts in areas of near constant colour and low
visit counts where colour changes rapidly. Figure 2 shows
grey-scale coded visit maps (the less visited the brighter)
for example images. This visually validates that our design
of the quadric is a good approximation of the shape and
colour distortion, and it reflects the local colour gradient in
the image.

3.3. Parametrization
One of our main contributions is that we construct a globally
continuous parametrization for image pixels. The input image is a 5-D two-manifold and we seek an almost isometric
parametrization. We construct the parametrization as a mapping from a pixel (vertex v in the initial mesh) to a point in a
base mesh face v = αvi + βvj + γ vk , where (i, j, k) is the
point’s resident face in the base mesh, and α, β, and γ are
its barycentric coordinates. This mapping is constructed and
maintained through projection along with the simplification
as shown in Figure 3.

There are two scenarios in the process of parametrization,
initial projection and reprojection. Initial projection happens
when collapsing an edge, e = (i, j ) ∈ K, and there is no point
previously projected into any of the adjacent facets of its endpoints. In this case, we establish a bijection between both its
endpoints, vi and vj , to points in some remaining faces after
collapsing. This is achieved by flattening the one-ring neighbourhood N (i) and N (j ) of each endpoint, retriangulating
the region in 2-D, and finding the resident face as well as the
barycentric coordinates. When flattening N (i), we substitute
the geometry and colour of vj with the minimizer of the edge
quadric; the reverse situation is treated analogously. The new
vertex created after collapsing by merging vi and vj is placed
at the minimizer.
In case there are vertices previously projected into these
neighbourhoods, we need to update their parametrization,
i.e. reproject their resident faces and barycentric coordinates (Figure 3). In the figure, the endpoints vi and vj are
blue; the minimizer, i.e. the new vertex after collapsing, is
red. The small dots represent the vertices that were previously projected. If there are projected vertices in faces in the
shared region, N (i) ∩ N (j ), we need to first reproject them
(Figure 3a). To do so, we flatten the shared region using
the minimizer as the pivot (Figure 3b). Figure 3b shows the
white region in the thumbnail figure over the incoming arrow
from a. It shows the region after been flattened in 2-D and
the dashed line originating from the pivot indicates one of
the local coordinate frame directions. We use the previous
parametrization to find the 2-D projections for all projected
vertices in this region. New parametrization is computed
based on the updated triangulation (Figure 3c). In the next
step, we split the shared region into two disjoint neighbourhoods (split Figure 3d into e and f along the red edges). We
again use conformal maps on both neighbourhoods and update the parametrization for the projected vertices in them
the same way as described earlier [Figures 3(e, g) and
(f, h)]. Figures 3(e) and (f) show the flattened neighbourhoods and the frame directions (dashed lines). When the procedure is complete, all previously projected vertices as well
as the endpoints have a new parametrization in the simplified
mesh. However, the new vertex is not directly associated with
any pixel, hence it is flagged and is not projected in the future.

3.4. Results and discussion
Our scheme works with the whole image (Figure 4) as well as
an image cut-out of arbitrary shape and topology (Figure 5).

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

2447

X. Yin et al. / A New QEM for Parametrization of Raster Images

Table 1: Performance statistics, all times are measured in seconds.

Collapsing
Resolution
32
64
128
256
512

Figure 11: Some more results of image segmentation (data
from [MFTM01]). (a) Input and (b) result.

Figures 5(b–d) show multi-resolution base meshes created
using different error thresholds.
There are many ways to visualize and evaluate the
parametrization. We interpolate the parameters in Figure 1
(bottom row) to qualitatively assess the smoothness of the
parametrization. We also consider pixels that are projected
to the same base mesh face as forming one patch/cluster. The
boundaries of these patches are shown in Figures 5(e) and (f).
During parametrization, different weights can be assigned to
spatial and feature domains. Figures 5(e) and (f) compare
the patch boundaries when different colour weights are used.
The difference is elaborated later in this section.

3.4.1. Running time
The proposed algorithm runs in amortized O(Nlog N) time,
where N is the number of pixels in the input image. The initial
mesh has a constant ratio between the number of edges and
vertices, so N can be considered as the number of edges in
asymptotic analysis. The process stops when a user-specified
error threshold is reached. For each edge, we query and update the priority queue using O(log N) time. The calculation
of the quadric minimizer takes constant time to solve a linear
system with fixed dimension. To update the parametrization,
we map all the vertices in the neighbourhood to new facets. If
the maximum cluster size, i.e. the number of pixels mapped

SVD

LU

Projection
time

0.198
0.915
4.71
18.8
102.6

0.105
0.631
2.32
10.78
42.38

0.098
0.753
3.43
14.7
70.3

to a face in the base mesh is specified by the user, this operation is also constant. Hence, the algorithm runs in O(Nlog N)
time. When the maximum cluster size is not fixed, we have
amortized O(Nlog N) time complexity as the time spent on
the priority queue decreases. We use CGAL library [cga] in
our implementation. Detailed run time statistics are presented
in Table 1.A set of square images are tested; the stopping error
is the same for all images in our experiment. The computer
used has the following configuration: Intel Xeon 3.33 GHz;
4 GB RAM; NVIDIA Quadro FX 3700; Win 7 64b. We use
SVD as our least-squares solver in our research implementation for its ability to cope with singularities; Time statistics
using LU decomposition is also presented in Table 1. During
the process, an edge collapse operation is retracted if it introduces degenerated elements in geometry and/or parameter
domain.

3.4.2. Reconstruction colour error
Recall that one of our aims is to produce a parametrized base
mesh with a low reconstruction error in the colour space.
Therefore, our analysis creates base meshes at varying resolutions and compares the reconstruction colour error and
the quality of triangulation against that of Hoppe’s. We measure the accuracy quantitatively by evaluating RMS error
in colour values between the original and the reconstructed
images. We compare our reconstruction error with the simplified meshes produced using our implementation of Hoppe’s
metric [Hop99] (we replaced its original RGB colour space
to L∗ u∗ v∗ ). We show images of Lena and the Mandrill and
the corresponding error plots in Figures 1 and 6, respectively,
comparing ours with the base mesh produced using Hoppe’s
metric [Hop99]. The topmost row in Figure 1 shows the
original images; the second row shows Hoppe’s base meshes
whereas the third row shows ours. Gouraud shading is used
in these images. The bottom row is generated as follows.
Our parametrization maps each pixel to a point on the base
mesh. Let us assume pixel (0, 0) is mapped to a base mesh
face (i, j, k) with barycentric coordinates (α, β, γ (1 − α −
β)). We then assign to pixel (0, 0) a new interpolated colour
of αci + βcj + γ ck . ci , cj and ck are the colours of the base
mesh vertices, respectively. This enables us to compute the

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

2448

X. Yin et al. / A New QEM for Parametrization of Raster Images

image editing [BPK*07]. For this purpose, round or isotropic
triangles are needed, e.g. the ratio of the radius of the circumcircle to the shortest edge should be as small as possible
as well as the aspect ratio should be close to one and average
vertex valence should be close to six.
We compare our base meshes with Hoppe’s in Figure 7 and
9. Our metric produces base mesh with better triangulation
at such regions due to the fact that drastic shape distortion
is penalized while Hoppe’s metric is affected only by colour
changes and produces suboptimal triangulation at regions
false features present. Unlike salient and pronounced curvilinear features, these subtle colour changes (false features)
are likely contribute to artefacts and random noise during image authoring. For the image shown in Figure 7, the average
valence of vertices in Hoppe’s output is 5.919 while ours is
5.923. For edge ratios, our average is 1.69 versus 1.97 for
Hoppe’s. Histograms of the aspect ratios and radius ratios
are plotted in Figure 8. Based on these metrics, it is clear that
our algorithm creates better quality triangulation.

3.4.4. Parametrization smoothness
The smoothness of our global parametrization comes through
in Figures 1 and 6. We note that there are no visible seams between neighbouring patches and the overall colour distortion
is very small for examples in Figure 1. Such parametrization proves useful in propagating edits in image warping
(Section 4.2).

Figure 12: Steering wheel: an example of multi-resolution
image warping using our base mesh and parametrization.
Changes made to the base meshes are circled in red. (a)
The original image and the mask used to cut out the target
content, (b) editing at a coarse level, (c) editing at a medium
level and (d) editing at a finer level.

RMS colour error for our parametrization. In the RMS error plots (Figure 6), the blue and the red belong to Hoppe’s
and ours,respectively (second and third row, respectively in
Figure 1). These are very close, with ours consistently better
at most resolutions. The plot in the green colour is the RMS
error of the images in the fourth row.

The parametrization is adjustable. As we pointed out, different weights can be placed on the colour component during projection to produce parametrizations for applications.
When colour component gets zero weight, the projection
degenerates to a trivial mapping using only the spatial information of the pixel (Figure 5e). Figure 5(e) shows that
the boundaries of the patches (defined at the beginning of
Section 3.4) follow the edges of the base mesh. This trivial parametrization is similar in concept with the texture
mapping in [COM98]. When a proper weight is used, the
boundaries of these patches are curved and follow the salient
feature edges in the images (Figure 5f). This is useful as
initial overpartition for segmentation (Section 4.1).

4. Applications
In this section, we demonstrate the use of our algorithm in a
couple of image processing and computer vision tasks.

4.1. Segmentation
3.4.3. Triangulation quality
Many applications need well-shaped, round triangles in order
to prevent them from running into numerical problems, e.g.
numerical simulations based on finite element methods and

Image segmentation divides the image into meaningful pixel
regions at object level [BVMP04, CM02]. We compute for
each patch, S, defined in Section 3.4, a weighted average
pixel colour c = k∈S min(α, β, γ ) · c(k), where c(k) is the

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

X. Yin et al. / A New QEM for Parametrization of Raster Images

2449

Figure 14: Spider shell: an example of editing. (a) Input,
(b) the ridge is lifted, (c) based on (b) the body highlight is
shifted left and (d) the ridge is wriggled using a finer control.

of-the-art oversegmentation algorithms, such as TurboPixels
[LSK*09], strive for roughly round-shaped patches of similar size with boundary pixels aligned with the salient feature
lines. These are desirable in applications such as bottom-up
segmentation and segment-based stereo matching and reconstruction. With a lower threshold, we produce oversegmentation results with our clusters of pixels (Figure 5f). The lack of
compactness in our method can be remedied by constraining
the maximal number of pixels in a patch in the simplification
process. However, an extensive investigation and evaluation
in both fields is out of the scope of this paper and is planned
as future work.
Figure 13: Monkey: an example of editing. (a) The original image and the editing base mesh, (b) sample shape and
colour modifications and (c) the control mesh for the shape
modification and a exploded view of the colour transition.

colour of vertex k, while the weight, min (α, β, γ ), indicates
the importance of a pixel within S. The inner most pixel has
the weight of one-third while the border pixels have zero
weight. The difference of weighted average colours is used
to measure the distance between two neighbouring clusters.
Pairs with distances smaller than a threshold are merged.
Figure 10 shows a comparison of our result with mean shift
[CM02] and Histogram multi-thresholding [BVMP04]. Our
method identifies the textured background pad as a whole
while isolates the ring. More results on natural scenes are
shown in Figure 11.
The vision community has seen recently an increasing interest in oversegmentation. Oversegmentation decomposes
an image into much smaller patches of pixels of similar
colour compared to the objects found by segmentation. State-

4.2. Multi-resolution image warping
The image editing and morphing problem has been tackled from multiple angles in graphics and animation. The
most popular approach is to construct a cage over the target shape and deform the image content according to userapplied rigid transformations on the handles of the cage
(its vertices and edges). Such algorithms include As-RigidAs-Possible Skeleton manipulation [IMH05], moving leastsquares-based image manipulation [SMW06] and bounded
biharmonic weights [JBPS11].
Our approach combines the processes of fitting multiresolution skeletons to the target content (through featurealigned simplification at various resolutions) and assigning smooth localized weights to pixels (using tracked
parametrization). At any given level, the user operates on
the skeleton and the edits are transferred to the pixels based
on the parametrization to produce smooth and localized
motions in the image. When a user places an edit on a
handle, the pixels that are projected in its neighbourhood
get affected in proportion to their corresponding barycentric

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

2450

X. Yin et al. / A New QEM for Parametrization of Raster Images

[BVMP04] BUSIN, L., VANDENBROUCKE, N., MACAIRE, L.,
POSTAIRE, J.: Color space selection for unsupervised color
image segmentation by histogram multithresholding. In
Proceedings of the IEEE International Conference on Image Processing (ICIP ’04) (Singapore, 2004).

coordinates. In Figure 12, we show an image of a steering
wheel that has been masked out (and therefore the resulting
base mesh has a genus > 0). The handle can be stretched
at the coarsest level (second row), however, deforming the
handles (third row) require a medium-level base mesh and
buffing up the spokes at the centre of the wheel requires an
even higher level of resolution (fourth row). Editions are circled in red. Seamless transition between different resolutions
allows a user to greatly minimize pre- and post-processing
and a cumbersome relationship modeling between multiple resolutions. Our method handles content of arbitrary
shapes and complex topologies with high genus. Our method
also copes well with raster texture details as shown in
Figures 13 and 14.

[cga] CGAL: Computational Geometry Algorithms Library
(1996). http://www.cgal.org (2010).

5. Conclusions and Future Work

[CM02] COMANICIU D., MEER P.: Mean shift: A robust approach toward feature space analysis. IEEE Transactions
on Pattern Analysis and Machine Intelligence 24, 5 (2002),
603–619.

We proposed a method to convert raster images of arbitrary
topology to a coarse triangle mesh representation that has
a low colour reconstruction error, produces good quality
triangulation along with a non-trivial globally continuous
parametrization for each pixel in the original image that is
useful in clustering, segmentation and editing. We do this
by developing a new QEM suitable for colour images that is
sensitive to both geometry and colour. It allows for different
weights to be assigned to geometry and colour, making it extremely flexible for a variety of applications. We also present
the concept of visit maps as a way to visually validate the
metric. The parametrization is useful in image segmentation
and editing.
For our future work, we plan to improve our segmentation
results by applying ultrametric contour maps [AMFM09]
based on our parametrization results and explore more applications that can benefit from our scheme, such as dynamic
interactive editing.
References
[ACSE05] ATTALI D., COHEN-STEINER D., EDELSBRUNNER H.:
Extraction and simplification of iso-surfaces in tandem. In
Proceedings of the Third Eurographics Symposium on Geometry Processing (Vienna, Austria, 2005), Eurographics
Association, pp. 139–148.
[AMFM09] ARBELA´ EZ P., MAIRE M., FOWLKES C., MALIK J.:
From contours to regions: An empirical evaluation. In Proceedings of the IEEE Conference on Computer Vision and
Pattern Recognition (CVPR) (Miami, FL, USA, 2009),
IEEE, pp. 2294–2301.
[BPK*07] BOTSCH M., PAULY M., KOBBELT L., ALLIEZ P.,
L´evy B., BISCHOFF S., R¨ossl C.: Geometric modeling based
on polygonal meshes. In ACM SIGGRAPH 2007 Courses
(2007), ACM, p. 1.

[CM97] COMANICIU D., MEER P.: Robust analysis of feature
spaces: Color image segmentation. In Proceedings of the
1997 Conference on Computer Vision and Pattern Recognition (CVPR ’97) (Washington, DC, USA, 1997), IEEE
Computer Society, p. 750.

[COM98] COHEN J., OLANO M., MANOCHA D.: Appearancepreserving simplification. In Proceedings of the 25th Annual Conference on Computer Graphics and Interactive Techniques (Orlando, FL, USA, 1998), ACM, pp.
115–122.
[GH97] GARLAND M., HECKBERT P.: Surface simplification
using quadric error metrics. In Proceedings of the 24th
Annual Conference on Computer Graphics and Interactive Techniques (Los Angeles, CA, USA, 1997), ACM
Press/Addison-Wesley Publishing Co., New York, pp.
209–216.
[GZ05] GARLAND M., ZHOU Y.: Quadric-based simplification in any dimension. ACM Transactions on Graphics 24
(2005), 209–239.
[Hop96] HOPPE H.: Progressive meshes. In Proceedings of
the 23rd Annual Conference on Computer Graphics and
Interactive Techniques (New Orleans, LA, USA, 1996),
ACM, pp. 99–108.
[Hop99] HOPPE, H.: New quadric metric for simplifying
meshes with appearance attributes. In Proceedings of the
IEEE Visualization Conference (San Francisco, CA, USA,
1999), 59–66.
[HPS08] HORMANN K., POLTHIER K., SHEFFER A.: Mesh parameterization: Theory and practice. In SIGGRAPH Asia
’08: ACM SIGGRAPH ASIA 2008 Courses (New York,
NY, USA, 2008), ACM, pp. 1–87.
[IMH05] IGARASHI T., MOSCOVICH T., HUGHES J.: As-rigidas-possible shape manipulation. ACM Transactions on
Graphics 24, 3 (2005), 1134–1141.
[JBPS11] JACOBSON, A., BARAN, I., POPOVIC´ , J., SORKINE, O.:
Bounded biharmonic weights for real-time deformation.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

X. Yin et al. / A New QEM for Parametrization of Raster Images

In ACM SIGGRAPH 2011 papers (New York, NY, USA,
2011), SIGGRAPH ’11, ACM, pp. 78:1–78:8.
[KLS03] KHODAKOVSKY A., LITKE N., SCHRODER P.: Globally smooth parameterizations with low distortion. ACM
Transactions on Graphics 22, 3 (2003), 350–357.
ˇ
[KS09]
KUKAR M., Sˇ AJN L.: Improving probabilistic interpretation of medical diagnoses with multi-resolution image parameterization: A case study. In Proceedings of the
12th Conference on Artificial Intelligence in Medicine:
Artificial Intelligence in Medicine (Verona, Italy, 2009),
Springer, New York, pp. 136–145.
[Lee00] LEE, A.: Building your own subdivision surfaces.
Game Developer’s Journal 35, 9 (2000), 1–3.
[LHM09] LAI Y.-K., HU S. -M., MARTIN R. R.: Automatic and topology-preserving gradient mesh generation
for image vectorization. In SIGGRAPH ’09: ACM SIGGRAPH 2009 papers (New York, NY, USA, 2009), ACM,
pp. 1–8.
[LIL06] LEE Y., IM J., LEE S.: Progressive images: applying
mesh processing to images. International Journal of Shape
Modeling 12, 2 (2006), 193–212.
[LL06] LECOT, G., L´evy, B.: ARDECO: Automatic region detection and conversion. In Proceedings of the
Eurographics Symposium on Rendering Techniques ’06
(Cyprus, 2006), 349.

2451

the 25th Annual Conference on Computer Graphics and
Interactive Techniques (New York, NY, USA, 1998),
ACM, pp. 95–104.
[LT98] LINDSTROM P., TURK G.: Fast and memory efficient
polygonal simplification. In Proceedings of the Conference on Visualization ’98 (Research Triangle Park, NC,
USA, 1998), IEEE Computer Society Press, p. 286.
[Lue01] LUEBKE D.: A developer’s survey of polygonal simplification algorithms. IEEE Computer Graphics and Applications 21, 3 (2001), 24–35.
[MFTM01] MARTIN D., FOWLKES C., TAL D., MALIK J.: A
database of human segmented natural images and its application to evaluating segmentation algorithms and measuring ecological statistics. In Proceedings of the Eighth
International Conference on Computer Vision (Vancouver, Canada, 2001), vol. 2, pp. 416–423.
[RFM05] REN X., FOWLKES C., MALIK J.: Scale-invariant
contour completion using conditional random fields. In
Proceedings of 10th IEEE International Conference on
Computer Vision (ICCV ’05) (Beijing, China, 2005), vol.
2, IEEE, pp. 1214–1221.
[SMW06] SCHAEFER S., MCPHAIL T., WARREN J.: Image deformation using moving least squares. ACM Transactions
on Graphics 25, 3 (2006), 533–540.
[Spa94] SPANIER E.: Algebraic Topology. Springer Verlag,
New York, 1994.

[LSK*09] LEVINSHTEIN A., STERE A., KUTULAKOS K., FLEET
D., DICKINSON S., SIDDIQI K.: Turbopixels: Fast superpixels using geometric flows. IEEE Transactions on Pattern Analysis and Machine Intelligence 31, 12 (2009),
2290–2297.

[WTL∗ 06] WANG J., TONG X., LIN S., PAN M., WANG C., BAO
H., GUO B., SHUM H.: Appearance manifolds for modeling
time-variant appearance of materials. ACM Transactions
on Graphics 25, 3 (2006), 754–761.

[LSS∗ 98] LEE A. W. F., SWELDENS W., SCHRO¨ DER P., COWSAR
L., DOBKIN D.: Maps: Multiresolution adaptive parameterization of surfaces. In SIGGRAPH ’98: Proceedings of

[XLY09] XIA T., LIAO B., YU Y.: Patch-based image vectorization with automatic curvilinear feature alignment.
ACM Transactions on Graphics 28, 5 (2009), 1–10.

c 2011 The Authors
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd.

