DOI: 10.1111/j.1467-8659.2011.02011.x
Eurographics Symposium on Geometry Processing 2011
Mario Botsch and Scott Schaefer
(Guest Editors)

Volume 30 (2011), Number 5

Functional webs for freeform architecture
B. Deng1 , H. Pottmann1,2 and J. Wallner1,3
1 Geometric
2 Geometric

Modeling and Industrial Geometry Group, TU Wien
Modeling and Scientific Visualization Center, KAUST
3 Institute of Geometry, TU Graz.

Abstract
Rationalization and construction-aware design dominate the issue of realizability of freeform architecture. The
former means the decomposition of an intended shape into parts which are sufficiently simple and efficient to manufacture; the latter refers to a design procedure which already incorporates rationalization. Recent contributions
to this topic have been concerned mostly with small-scale parts, for instance with planar faces of meshes. The
present paper deals with another important aspect, namely long-range parts and supporting structures. It turns
out that from the pure geometry viewpoint this means studying families of curves which cover surfaces in certain
well-defined ways. Depending on the application one has in mind, different combinatorial arrangements of curves
are required. We here restrict ourselves to so-called hexagonal webs which correspond to a triangular or tri-hex
decomposition of a surface. The individual curve may have certain special properties, like being planar, being a
geodesic, or being part of a circle. Each of these properties is motivated by manufacturability considerations and
imposes constraints on the shape of the surface. We investigate the available degrees of freedom, show numerical methods of optimization, and demonstrate the effectivity of our approach and the variability of construction
solutions derived from webs by means of actual architectural designs.
Categories and Subject Descriptors (according to ACM CCS): Computer Graphics [I.3.5]: Computational Geometry
and Object Modeling—

1. Introduction
The research area of architectural geometry appears to have
established itself as an intersection point of Geometry Processing, Optimization, Geometric Design, Architectural Design, and Engineering. This is illustrated by the diverse contributions collected by the proceedings volume [CHP∗ 10],
or the survey papers [Pot10, WP11]. Work in this area has
been mostly concerned with properties of small-scale elements, like the planarity of faces. The present paper presents
a computational solution of an Architectural Design problem of a different kind: Which regular patterns of longrange elements are available for the realization of freeform
shapes? Such elements include structural elements and supports, floor levels, medium-range curved panels, and last, but
not least, curves which are not physically realized by a single
element but nevertheless are highly visible in the design.
We would like to motivate our topic with work on timber constructions pioneered by [NBM02] and continued by
[PW06, WH10]. The experimental construction of Figure 2
c 2011 The Author(s)
Computer Graphics Forum c 2011 The Eurographics Association and Blackwell Publishing Ltd. Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ,
UK and 350 Main Street, Malden, MA 02148, USA.

Figure 1: A web of curved wooden panels whose shape is
achieved by bending. Geometrically this is a triangle mesh
with mesh polylines being geodesics on the mesh surface.

by C. Pirazzi and Y. Weinand employs a family of planar curves as support elements and two families of curved
beams. Both special properties of curves mentioned here –
planarity and the geodesic property – facilitate fabrication.
For planarity this is obvious. As to the geodesic property:
Any rectangular strip of paper, and any rectangular beam

1370

B. Deng & H. Pottmann & J. Wallner / Functional webs for freeform architecture

tions (see Figure 8) not all curves of a certain family do actually contribute to the realization of an architectural design.
This does not matter: in any case we work with a regular
triangle mesh and impose the desired properties either to all
polylines, or only to some of them, just as the application
demands. Our contributions are the following:

Figure 2: Assembling screw-laminated beams for a timber
rib shell prototype based on a 2-pattern of geodesics supported by a third family of vertical elements [PW06]. This is
no web. Image courtesy IBOIS (EPFL, Lausanne).

which bends only about its weak axis, follows a geodesic
curve if it is forced to lie on a surface. We particularly point
to [WH10] for timber constructions which rely on this fact.
If the shape of a beam or supporting element does not
enjoy any special property it is probably necessary to manufacture it by NC milling (e.g. the construction of Figure 14, left). This has also been pointed out by Pottmann et
al. [PHD∗ 10], who consider, among other patterns, webs of
curves on given surfaces which are as geodesic as possible.
Since true geodesic webs do not exist in general, the approximation of surfaces by geodesic webs is not always possible.
The present paper follows a different approach: We optimize
triangle meshes such that mesh polylines achieve certain desirable properties, but we solve an approximation problem
only if there are enough degrees of freedom available.
Contributions of the present paper. We consider the following properties of space curves which are relevant for
manufacturing, if that curve defines the shape of a beam or
supporting element in a freeform architectural construction:
— geodesic curves are the shape of panels which follow a
surface and whose unbent state was straight;
— planar curves are an easily manufacturable shape for the
simple reason that most factory floors are flat;
— circular curves, which are part of a circle, are even more
efficiently manufacturable;
— vertical curves (contained in planes parallel to a hypothetical z axis) are useful for support elements;
— horizontal curves are useful for design and for floor levels to follow.
The applications we have in mind call for three families of
curves arranged in a regular pattern (see Figure 1). This arrangement is discretized as a triangle mesh of regular combinatorics, and will be called a discrete hexagonal web (we do
not consider any other kind of web). This terminology comes
from [BB38]. The three kinds of canonical mesh polylines
correspond to the three family of curves. For some applica-

— we formulate web optimization as a global numerical optimization problem, with appropriate target functionals
expressing the single properties enumerated above;
— in cases where the required properties leave sufficiently
many degrees of freedom we show how to approximate
a given surface by a web with prescribed properties;
— if the required properties are too restrictive we employ
mesh optimization for form finding;
— in the case of planar webs we discuss in more detail the
construction and interactive modification of webs.
Previous work on web geometry. A regular triangle mesh
is a discrete version of a smooth hexagonal web which
means three families of curves combinatorially equivalent to
the families u = const., v = const., u + v = const. of straight
lines in the uv plane. For an overview we refer to the monograph [BB38] and the survey [Che82].
The discrete problem posed in the present paper is directly
analogous to the smooth problem of covering a given surface by a web whose curves enjoy certain properties. This
old topic of differential geometry contains many unsolved
problems. For instance it is not known exactly which surfaces can be covered by a web of geodesics: [Vol29] shows
that the coefficients of the 1st fundamental form must fulfill
a certain 3rd order PDE, whose general solution looks hopeless. Likewise it is unknown which webs of planar curves a
general surface can support (apart from the trivial cases of
projecting webs of straight lines in R2 onto a surface). The
very reduced problem of describing all webs of R2 formed
by three linear pencils of circles has been solved only recently [Laz88,She07]. We conclude that many smooth problems of differential geometry which directly correspond to
the problems studied by the present paper are unsolved, and
it is hard to obtain additional insight from the smooth case.
Related work in Geometry Processing. The present paper
boils down to studying architecture-relevant properties of the
edges of a triangle mesh. [SS10] has similar purposes, with
the faces as the object of interest.
There are several papers on curve networks which have
the same combinatorics as those considered in the present
paper. For instance, energy-minimizing networks have occurred in [WPH07]. Another example is the network of
parameter lines of a global hexagonal parametrization
[NPPZ10], where the optimization goal is near-ideal aspect
ratios of infinitesimal triangles. Neither contribution considers functional properties in the sense we do. This leads to
a completely different behaviour at combinatorial singularities, see Section 5.
c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

B. Deng & H. Pottmann & J. Wallner / Functional webs for freeform architecture

P1 (i0 )
P3 (k)

P2 ( j0 )
P1 (i1 )
P2 ( j1 )

2. Planar webs
By a planar web we mean a web all of whose curves are
planar. In case of regular combinatorics it is easy to give
a complete parametric description of general planar webs,
which is illustrated by Figure 3: Assume that the three families L1 , L2 , L3 of mesh polylines in a regular triangle mesh
L1 = {L1 (i)}i∈Z
L2 = {L2 ( j)} j∈Z
L3 = {L3 (k)}k∈Z

(horizontal family),
(vertical family),
(diagonal family),

are defined such that polylines L1 (i), L2 ( j) and L3 (k) intersect in a vertex “vi j ” if and only if i + j + k = c (for some
integer c). It is no restriction to let c = 0, but we rather have
the flexibility of choosing c arbitrarily. Another way of expressing this definition is to let
L1 (i) = {. . . , vi0 , vi1 , vi2 , . . . },
L2 ( j) = {. . . , v0 j , v1 j , v2 j , . . . },
L3 (k) = {. . . , v−k,c , v1−k,c−1 , v2−k,c−2 , . . . }.

(1)

Each polyline Lr (i) is supposed to be contained in a plane
Pr (i), . . . , so there are three families P1 (i), P2 ( j), P3 (k) of
planes where the parameters i, j, k run in the integers, and
vertices arise as the intersection
vi j = P1 (i) ∩ P2 ( j) ∩ P3 (k) where i + j + k = c.

(2)

So the general description of planar webs is as follows: Select three families of planes arbitrarily and define the vertices of a triangle mesh by (2). It is not clear how to match
this parametric description to a given surface, but a simple
example, where all three families are pencils of planes, is
shown by Figure 3.

1371

Figure 3: The vertices vi j of
a planar web are generated by
the families P1 , P2 , P3 of planes
via vi j = P1 (i) ∩ P2 ( j) ∩ P3 (c −
i − j). Here all three families of
planes are linear pencils.

It is no restriction, at least locally, to specify a 1-parameter
family of planes as the normal planes of a curve: We can find
such curves as orthogonal trajectories of the given planes by
solving an ODE. Therefore we have:
Prop. 2 A generic smooth planar web is defined by the families of normal planes P1 (u), P2 (v), P3 (w) of three parametric
curves c1 (u), c2 (v) and c3 (w) via Equation (3).
Trivial planar webs. It is well known that both the continuous and discrete webs contained in R2 whose web curves
are straight lines consist of tangents of a class 3 curve. Also
the converse is true: The tangents of such a curve constitute a continuous web, and an appropriate discrete sample of
tangents results in a discrete web (see [BB38]; this is also
discussed by [PHD∗ 10]). By projecting such a web from an
arbitrary center Z onto an arbitrary surface Φ we obtain a
planar web whose vertices lie in Φ. Figure 4 illustrates how
to check if a given planar web is of this ‘trivial’ kind.
Remark. The representation of a planar web via tangent
planes of developables (Prop. 1) and normal planes of curves
(Prop. 2) do not degenerate if the web is trivial: In the former
case the developables are cones with vertex Z, in the latter
case the curves lie in spheres with center Z.
Shape Properties. We are going to study and interactively
modify webs by means of the representation given in Prop. 2.
As a preparation consider a curvature-continuous curve c(t),

Continuous planar webs. Obviously this method can be
used to describe smooth planar webs, not only discrete ones:
Take three smooth families of planes P1 (u), P2 (v), P3 (w),
where u, v, w are real parameters, and define a surface by
x(u, v) = P1 (u) ∩ P2 (v) ∩ P3 (c − u − v).

(3)

Then the conditions u = const. or v = const. or w = const.
(where u + v + w = c) each define a planar curve on this surface. Note further that a 1-parameter family of planes generically is the family of tangent planes of a developable surface [PW01]. Thus we have shown:
Prop. 1 A generic smooth planar web is defined by 3 developable surfaces (each being interpreted as a parametrized
smooth family of its tangent planes) and vice versa. This description is unique up to a common reparametrization.
c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

Figure 4: A planar web is trivial if all planes spanned
by web curves (set “P” of planes) contain a common
point Z. We try to find Z = arg min ∑P∈P dist(x, P)2 (red)
and visualize orthogonal projection of Z onto all planes
(yellow). If Z exists this point cloud is concentrated in Z.
Here it is not =⇒ no trivial web.

1372

B. Deng & H. Pottmann & J. Wallner / Functional webs for freeform architecture

which is given in Bézier or B-spline form as follows:
(t ∈ [α, β], j ∈ {a, . . . , b}).

c(t) = ∑ j B j (t)p j

Figure 5: Continuous
planar web generated by
3 families of planes orthogonal to a curve (the
correspondence between
web curves and planes is
defined by colors).

(4)

We require that the derivatives of curves are expressible in
terms of differences of control points such that
dc
B j (t)σ j ∆p j , ∆p j = p j+1 − p j ,
=
dt ∑ j
B j (t) ≥ 0, ∑ j B j (t) = const. = 1, σ j > 0.

(5)
(6)

This is true for several classes of curves:
— c is a Bézier curve: Here B j , B j are Bernstein polynomials of degrees n and n − 1, resp. We take [α, β] = [0, 1],
indices range in j ∈ {0, . . . , n}, and σ j = n.
— c is a B-spline curve of degree n ≥ 3 over a knot vector
{ui }: Here B j are B-spline basis functions of degree n−1
over the same knot vector, and σ j = u j+n+1n−u j+1 .
The construction of a planar web surface x(u, v) from three
families of planes involves computing the intersection point
of planes: There is usually an entire curve of parameter values (u, v) where the intersection point is undefined (i.e., lies
at infinity). However, it is possible to use the shape properties of freeform curves expressed by (6) to derive a condition
which ensures that this does not happen, and the web surface
is a proper surface of Euclidean space:
Prop. 3 The continuous ‘planar’ web surface
x(u, v) = P1 (u) ∩ P2 (v) ∩ P3 (c − u − v)
defined by the three families of normal planes P1 (u), P2 (v),
P3 (w) of curves c1 (u), c2 (v), c3 (w) does not have points at
infinity if and only if the derivatives of curves obey
det(˙c1 (u), c˙ 2 (v), c˙ 3 (c − u − v)) = 0.

(7)

If c1 , c2 , c3 are Bézier or B-spline curves, with control points
(1)

(2)

(3)

{p j } j=a1 ,...,b1 , {p j } j=a2 ,...,b2 , {p j } j=a3 ,...,b3 ,
such that Equations (4), (5), (6) hold (for appropriate
choices of intervals [αi , βi ] and index ranges [ai , bi ]) , then
(7) is fulfilled in the domain u ∈ [α1 , β1 ], v ∈ [α2 , β2 ], c −
u − v ∈ [α3 , β3 ], if for all j, k, l,
(1)

(2)

(3)

det(∆p j , ∆pk , ∆pl ) > 0.

(8)

The same conclusion holds if all determinants are negative.
Proof The expression for the intersection point x(u, v) of
planes is rational. Its denominator is the determinant of normal vectors which occurs in (7). We avoid points at infinity
if (7) is nonzero. In the Bézier/spline case, (7) expands to

∑

(1) (2) (3)

(1)

(2)

(3)

f jkl (u, v, c − u − v)σ j σk σl det(∆p j ∆pk ∆pl ),

j,k,l
(1)

(2)

(3)

where f jkl (u, v, w) = B j (u)Bk (v)Bl (w). (6) implies that
the functions f jkl are nonnegative and their sum equals 1, so
the determinant under consideration is a convex combination
of positive values, if (8) holds.

Cor. 4 The conclusion of Prop. 3 remains true if condition
(8) is required only for such indices j, k, l were the plane u +
v + w = c intersects the support box of f jkl (u, v, w). A further
reduction of the sufficient conditions occurs if the parametric
domain of the web surface in the u, v-plane is reduced.
Proof Only such triples ( j, k, l) contribute to (7).
3. Global optimization of discrete webs
This section deals in detail with the different conditions imposed on webs, and how to formulate them in a way which is
useful in optimization. Section 4 below deals with the local
and interactive modification of planar webs, which is also
formulated as an optimization problem.
The combinatorial setup is rather simple: We consider triangle meshes (V, E, F) whose vertices have valence 6 except
for the boundary. We have already discussed their indexing
and how the edges form the three types of mesh polylines
L1 (i), L2 ( j), L3 (k) — see Equ. (1). Accordingly we have
three kinds of edges:
E = E1 ∪ E2 ∪ E3 ,
where the edges contained in set Ei are used to form the mesh
polylines “L” contained in family Li . We use the notation
L ∈ Li and v ∈ L. Any submesh of this mesh inherits the
three families of mesh polylines.
For optimization of a web, we use the vertex coordinates
as variables, together with additional variables depending on
the geometric properties we want to achieve (see the respective sections below). Basically we minimize a target functional of the form
f = ∑ λproperty, j fproperty j (L j ) + ∑ λfair, j ffair j (L j )
+ λprox fprox + λbdry fbdry .

(9)

Here fproperty j (L j ) refers to a functional which penalizes
deviation of family L j from a certain ‘property’. Similarly
ffair j (L j ) means a fairness/regularization functional which
applies to family L j . The symbols fprox , fbdry penalize deviation of the web from the target shape and its boundary,
respectively. The λ’s represent weights.
Remark. In our examples often not all polylines of family
Li are required to possess a certain geometric property, only
some of them are. In this case the target functional (9) remains formally unchanged, but we consider a smaller set Li .
c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1373

B. Deng & H. Pottmann & J. Wallner / Functional webs for freeform architecture

Fairing. For regularization we employ differences of consecutive vertices of polylines: ffair (L ) is one of
ffair,II (L ) =

∑
L∈L

ffair,III (L ) =

∑
L∈L

v0 − 2v1 + v2

∑

2

,

consecutive vertices
v0 ,v1 ,v2 in L

∑

v0 − 3v1 + 3v2 − v3

2

.

cons. vertices
v0 ,v1 ,v2 ,v3 in L

Each summand corresponds to a sequence of two or three
consecutive edges in a polyline. It turns out that 2nd order
differences penalize uneven spacing of vertices to a higher
degree than 3rd order differences, but otherwise minimizing
3rd order differences is to be preferred since it does not try
to make polylines straight. For more details see Figure 11.
Reference Shape. In order to penalize the deviation of a
web surface “Ψ” from a reference shape Φ we should use
2
x∈Φ dist(x, Ψ) , for f prox , which is not readily computable.
In the manner of the well known ICP algorithm we replace
dist(x, Ψ)2 by x−x 2 , where x is the closest-point projection of x onto the web surface (in each iteration step of our
optimization procedure, the points x are updated). Using the
squared tangent plane distance would be a better approximation of dist(x, Ψ)2 if x is close to Ψ, but it would lead to
shrinking during optimization. For computational purposes
the integral is computed via a dense sample of Φ. This term
is used for Figures 1, 7, 8, 10, 14. An alternative is to exchange the roles of web surface and reference surface, and
use ∑v∈V dist(v, Φ)2 for fprox instead. Here v is orthogonal
projection of v onto Φ.

Figure 6: Approximating a surface with a planar web. Its
quality is illustrated by the fact that when fitting exactly planar curves (light) to the mesh polylines (dark) the deviation
is very small in all places and consequently the dark curves
are hardly ever visible (design surface taken from the top of
Lilium Tower, Warszaw, by Zaha Hadid Architects).

R

Reference Boundary. If the web surface
Ψ is to be close
R
to a curve ∂Φ we derive fbdry from x∈∂Φ dist(x, Ψ)2 , with
dist(x, Ψ) replaced by distance to the closest-point projection, similar to fprox . An alternative functional (forcing
the boundary of the web to be close to ∂Φ) is fbdry =
∑ dist(v, Tv )2 where v means orthogonal projection onto
the boundary curve, and Tv is a tangent to that curve. It is
used for Figure 9.

Counting degrees of freedom. In order to gain an overview
on the available degrees of freedom, we count the number of
conditions imposed on a web if one family L is required to
be planar. We have 3 additional degrees of freedom for each
auxiliary plane and one condition of containment of a vertex
in a plane. So the effective number of conditions imposed is
Cplanar (L ) = #{Vertices of L } − 3 #{Planes of L },
provided #L > 3 for all L ∈ L .
I.e., we count only polylines which have at least 4 vertices.
Imposing planarity on all three families L1 , L2 , L3 yields
the degrees of freedom for the vertices:
d.o.f. = 3 #V − ∑ Cplanar (L j ) ≥ 3 ∑ #{Planes of L j }.
We conclude that in general we have sufficiently many remaining degrees of freedom to be able to satisfy additional
requirements such as proximity of a web to a reference
shape. We can therefore expect to be able to solve an approximation problem even beyond the ‘trivial’ planar webs
which exist on all surfaces (for an example, see Figure 6).
Of course this counting of degrees of freedom takes neither
fairness nor suitability for practical purposes into account.

3.1. The planar property
This section describes how to optimize a web such that one
or more families of polylines consist of planar curves. If each
polyline L of one selected family L is to be contained in
a plane, we consider the equation xT nL − uL = 0 of that
plane and introduce the unit normal vector nL and the coefficient uL as auxiliary variables. The geometry functional
corresponding to family L then reads
fplanar (L ) = ∑L∈L

T

∑v∈L (v

2

nL − uL ) ,

where nL 2 = 1. The auxiliary variables are initialized by
finding a best approximating plane for each polyline L (via
principal component analysis).
c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

An alternative local functional. Co-planarity of the vertices contained in a polyline L implies co-planarity of all possible choices of 4 successive vertices: With δ(v0 , v1 , v2 , v3 )
for the distance of straight lines v0 ∨ v1 and v2 ∨ v3 we may
define an alternative target functional by letting
fplanar (L ) =

∑
L∈L

∑

δ(v0 , v1 , v2 , v3 )2 .

consecutive vertices
v0 ,v1 ,v2 ,v3 in L

The function fplanar leads to faster computation than fplanar ,
but fplanar = 0 does not imply fplanar = 0 if 4 or more vertices
in a row lie on a straight line. Even if ffair → min tends to
evenly distribute deviation from straight lines and so this is

1374

B. Deng & H. Pottmann & J. Wallner / Functional webs for freeform architecture

1

10−1

10−2

10−3

Figure 7: A geodesic web through a given boundary curve (Ex. 5). Left: Optimization result before trimming. Other figures:
Color coded values of the geodesic curvature of each family of web polylines (bounding box size 1).

unlikely, we still should test for planarity after optimization
with fplanar . We did not use this functional in our examples.

reads

Special positions of planes. For applications it may be desirable that the polylines in one family are parallel to a
fixed plane which is considered ‘horizontal’. In this case the
target functional is much simplified, since the normal vector nL of such planes is a constant. Similarly we can require that planes are parallel to a fixed direction which is
considered ‘vertical’. Assuming the z axis is vertical, this
yields the simplification that normal vectors have the form
nL = (n1 , n2 , 0)T . Several examples in this paper make use
of such special positions of planes.

Accordingly we consider the target functional

ωi + ωi+1 + ωi+2 = ωi−1 + ωi−2 + ωi−3 .

1
e2

fgeod (Li ) =

(10)

∑v∈V ∑ j=1,2,3 ωi+ j (v) − ωi−1− j (v)

2

,

where e is an average edgelength, the index i ∈ {1, 2, 3} denotes the family, and the dependence of angles from the vertex v is indicated by the notation ωi (v). If we require all three
families to be geodesic, then it is not difficult to see that
(10) holds for all i ⇐⇒ ωi = ωi+3 for all i.
This simplified condition leads to the functional

3.2. The geodesic property

all

When dealing with geodesic mesh polylines we employ the
concept of straightest geodesics introduced by [PS98]. Consider a valence 6 vertex and number the six edges e1 , . . . , e6
emanating from this vertex cyclically such that
ei , ei+3 ∈ Ei

(i = 1, 2, 3).

With the angles ωi = (ei , ei+1 ) (indices
modulo 6) the condition that the edges
ei , ei+3 are part of a geodesic polyline then

ω3 ω2
ω4
ω1
ω5 ω6

fgeod =

1
e2

∑v∈V ∑i=1,2,3

2

ωi (v) − ωi+3 (v) .

all

Note that both fgeod (Li ), fgeod are local functionals.
Counting degrees of freedom. If the family L is required
to be geodesic, we impose one scalar condition on each interior vertex – for boundary vertices we cannot evaluate (10).
The effective number of conditions therefore equals
Cgeod (L ) = #{interior vertices of L }.

Figure 8: By deleting some polylines in the the geodesic web of Fig. 7 we obtain a tri-hex structure which serves as the basis of
an architectural design. The greater part of beams in this example is to be made from layers, each individually bent into shape
(which is possible because of the geodesic property). This is a significant advance over NC milling necessary otherwise.

c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

B. Deng & H. Pottmann & J. Wallner / Functional webs for freeform architecture

1

(a)

10−1

(b)

10−2

1375

10−3

(c)

Figure 9: A web where families L1 , L2 are geodesic, and every sixth polyline of the third family of polylines is lying in a
horizontal plane. (a) shows fitted ‘horizontal’ curves in red. (b) Geodesic curvatures of L1 are small (color coded values). The
same is true for L2 (not shown). (c) Architectural design based on this web. The diagonal families of curves are, for all practical
purposes, geodesics, so we introduce additional high frequency bending of small amplitude to obtain a ‘weaving’ design.

Requiring all three families L1 , L2 , L3 to be geodesic consequently leads to a d.o.f. count of
d.o.f. = 3 #V − ∑ Cgeod (Li ) = 3 #{bdry vertices},
i.e., as many degrees of freedom as there are coordinates of
boundary vertices. We can therefore expect that a geodesic
web is uniquely determined by its boundary. For practical
purposes, however, this uniqueness translates to insufficient
degrees of freedom, and one solves the boundary value problem in a different way (see Example 5 and Figure 7).
Example 5 In order to find a geodesic web through a given
boundary curve ∂Φ we initialize optimization by a triangle mesh which lies in a plane which best-approximates ∂Φ
(found by principal component analysis) and subsequently
employ a linear combination of functionals fgeod , ffair , and
fbdry . A result is shown by Figure 7. The architectural design
of Figure 8 is based on this web: Deleting selected polylines
yields a tri-hex structure which is manufacturable by pure
bending, if made from thin beams.
Example 6 We illustrate modified mesh combinatorics and
the combination of different properties by means of a mesh
with cylinder topology, where L1 consists of m closed polylines of n vertices each. We impose the geodesic condition
on L2 and L3 , which means 2n(m − 2) conditions. Further
we retain in L1 only every k-th polyline and require it to lie
in a horizontal plane. The number of imposed conditions is
n − 1 per ‘horizontal’ polyline, which adds up to (n − 1) mk .
Thus,
m
.
d.o.f. = n(m + 4) − (n − 1)
k
In the extremal case k = 1 this equals 4n + m, which is still
positive. Figure 9 shows an example where k = 6, and where
the geometric shape has been achieved by means of proximity to a reference surface. This web is basis of the architecc 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

tural ‘weaving’ design of Figure 9, right. We should remark
that requiring the same z coordinate for polylines of the 3rd
family led to an even distribution of ‘floor levels’, it was not
necessary to prescribe those z coordinates.

3.3. The Circular Property.
This section discusses how to optimize a web such that the
polylines of one family or possibly of more families are circular arcs. Conceptually this is very similar to the planar
property discussed in Section 2, by introducing the circles’
defining parameters as auxiliary variables. We want to treat
straight lines as special cases of circles which are in no way
degenerate, so we cannot use the radius as a variable. Instead
we employ a certain normalization of the circle’s equation
proposed by [Pra87]: Using coordinates ξ1 , ξ2 w.r.t. some

Figure 10: A web with 2 geodesic families, and one family
where every 4th polyline lies in a vertical plane and is circular. The circular property imposes 2(n − 3) conditions on n
points, so it is usually not possible to require it for all polylines of a family, if also other constraints are to be fulfilled.

1376
Fig
1
4, 6
7, 8
9
10
14

B. Deng & H. Pottmann & J. Wallner / Functional webs for freeform architecture
#V
7563
5155
10074
13187
12537
13396

T [sec]
100
66
214
176
210
1002

max κg
0.06

w
6·10−6

0.05
0.2
0.4

8·10−5
8·10−5
2·10−5

mplanar

w

0.009

9

0.01
0.003
0.01

2.3
2.3
9

mcircular

0.002

w

2.3

mfair,II
0.002

w
0.1

0.001
0.005
0.002

1
9
16

mfair,III

w

0.01

0.01

0.003
0.002
0.01

1
1
1

mbdry
1·10−4

w
1

0.001
0.004
0.006
0.009

1
2.3
0.4
1

mprox
2·10−4
0.002

w
1
1

0.04
0.005
0.009

1
0.4
1

Figure 11: Quality of optimization. We show the maximum geodesic curvature of polylines which are optimized to be geodesic;
as well as the maximum values mplanar , mcircular , etc., of expressions whose squares contribute to fplanar , fcircular , etc. If both
ffair,II and ffair,III are used, then the former applies to geodesic polylines. The weights given to these functionals in the optimization are derived from the value “w” associated to each column: w is the weight of the respective term occurring in (9),
multiplied with the number of summands which contribute to that term.

orthonormal coordinate frame e1 , e2 , it reads
fb (ξ1 , ξ2 ) = b0 (ξ21 + ξ22 ) + b1 ξ1 + b2 ξ2 + b3 = 0
where b = (b0 , . . . , b3 ), b21 + b22 − 4b0 b3 = 1.

(11)

We have ∇ fb = 1 whenever fb = 0, so the value
| fb (ξ1 , ξ2 )| is a good approximation of the distance of the
point (ξ1 , ξ2 ) from the circle [ fb = 0].
The location in space of such a circle is determined by a
Cartesian coordinate frame e1 , e2 , e3 attached to the origin
of R3 and by the information that the circle lies in the plane
ξ3 = u. Supposing the polylines of family L shall be circular, we introduce the collection
{(bL , e1,L , e2,L , e3,L , uL )}L∈L
of auxiliary variables, which determine a circle for each
polyline L ∈ L . These variables come with the constraints
that bL satisfies (11), and that (e1,L , e2,L , e3,L ) is an orthonormal frame. In order to diminish the number of side conditions we encode these frames as unit quaternions.
The contribution fcircular (L ) to the target functional
which penalizes deviation from the circular property accordingly is defined by
fcircular (L ) =

∑ ∑

fbL (eT1,L v, eT2,L v)2 + (eT3,L v − uL )2 .

L∈L v∈L

The auxiliary variables, which specify a circle associated
with a polyline L, are initialized by first fitting a plane to
L, projecting L onto it, and then using the metric of (11) to
fit a circle to the vertices obtained in this way [Che10].
Remark. The frame associated with a circle is not unique.
In fact there is no continuous assignment {circles} −→
{frames} because it would give rise to a continuous nonzero
vector field on the unit sphere (map unit axis vector of circles
of fixed radius to first basis vector of frame). This is forbidden by the hairy ball theorem. However, this non-uniqueness
does not hinder optimization.
Example 7 Figure 10 shows a ‘rationalization’ example. A
reference surface is approximated by a web where the families L1 , L2 are geodesic, and every 4th polyline of the third
family is circular, lying in a vertical plane.

Remark. We might require a polyline L to be congruent to
part of a master curve C. This is easily incorporated into
our optimization via a rotation R and a translation vector t
such that for all vertices v ∈ L, we have dist(Rv + t,C) ≈ 0.
However we cannot in general expect success: Imposing this
condition on a polyline of n vertices is equivalent to 2n conditions on the 3n + 6 unknowns R, t and the vertices of L.
3.4. Implementation
Our academic implementation loads a reference geometry
and an initial triangle mesh. The user specifies which family
is to enjoy which geometric property (and also if that property applies only to every k-th polyline). There is no universal rule for the choice of weights in (9); the user is expected
to set the weights and adjust them according to the quality
of the result which has been achieved.
We employ a Gauss-Newton method with LevenbergMarquardt regularization [MNT04]. All required 1st derivatives are computed analytically. The linear system solved in
each round of optimization is sparse, since each summand
of the target functional (9) involves only a few variables. We
therefore make use of C HOLMOD for sparse Cholesky factorization [CDHR08]. Figure 11 shows optimization quality
and details on the choice of weights.
4. Interactive Deformation of Planar Webs
We use the representation of continuous planar webs according to Prop. 2 for their interactive modification. There
are two issues to consider: Firstly, the condition of planarity
globally couples all three families of web polylines and so a
general planar web has no localized deformations. Secondly,
generating a surface x(u, v) by intersection of planes is rather
unstable numerically and is prone to zero denominators. We
must therefore obey the conditions given by Prop. 3.
Optimization Setup. We represent an initial planar web
surface x∗ (u, v) as stated by Prop. 3 and use the control
(1) (2) (3)
points p j , pk , pl of the three defining curves as the variables in optimization.
c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

1377

B. Deng & H. Pottmann & J. Wallner / Functional webs for freeform architecture

Fig.
ctrl.pts #var M + N fairing samples T [sec]
13 b1,c1
15
45 7 × 7 72 × 72 = 2401
6
21
63 6 × 6 62 × 82 = 2304
3
13 b2,c2

t1

t1

Figure 12: Data on the number of variables and samples
used in the optimization of a web deformation, as well as
computing time on a laptop with a 2.4GHz CPU.

For certain parameter values (ui , vi ) (i = 1, . . . , M) the
desired location ti of the surface point x(ui , vi ) is given.
We imagine the user has selected x∗ (ui , vi ) and dragged it
to its new location ti . To accommodate the condition of
proximity of the modified web to its initial state, we uniformly cover the web with N additional points x∗ (ui , vi ) (i =
M + 1, . . . , M + N) and set a desired location ti = x∗ (ui , vi ).
Optimization uses the target functional
M+N

f = λfair ffair + ∑i=1 wi x(ui , vi ) − ti

2

,

The symbol ffair in (12) means a regularization term: We
apply the previously defined 2nd order and 3rd order fairing
terms ffair,II and ffair,III to a discrete web generated by a fine
regular sample of the parameter domain.
Figure 13 shows results obtained for different choices
of weights. In all cases we have wi = ω(δi ), where ‘parametric’ weighting means δi = minM
j=1 (ui , vi ) − (u j , v j ) ,
and ‘Euclidean’ weighting means δi = minM
j=1 x(ui , vi ) −
x(u j , v j ) . With user-defined constants α, β (0 ≤ β
α≤
1), we used ω(δ) = (αδred + β(1 − δred ))2 , with δred =
δ−δmin
.
δ −δ
min

Implementation. For minimizing (12) under the side conditions (8) we employ sequential quadratic programming.
We use the NLopt library [Joh11], based on [Kra94]. Since
the number of unknowns is small, computation time depends
largely on the number M + N of target destinations and the
number of samples employed in fairing (see Figure 12).
5. Discussion
There are limitations to web optimization, especially to finding webs such that both a reference surface is approximated
and geometric properties are fulfilled. This is due to the
global and coupled nature of constraints. For example, Figure 14 shows a surface which is difficult to approximate by
a planar web in its entirety.
c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

(a2)

(b1)

(b2)

(c1)

(c2)

(12)

which is minimized under the side-conditions of Prop. 3, or
rather Cor. 4. Here weights w1 , . . . , wM of selected points are
set to 1, while the weights wM+1 , . . . , wM+N of the remaining targets are smaller — the closer the distance of such a
point to the selection set, the smaller the weight. In this way
the web will be optimized such that points which are distant
from the user’s selection remain where they are.

max

(a1)

Figure 13: Deformation of continuous planar webs defined
by the normal planes of curves (shown by Figs. (a1), (a2)).
One target point t1 is shown off the surface, and N auxiliary
target points can be seen resting in it. The resulting deformations are shown in figures (b1), (b2), using ‘Euclidean’
weights, and (c1), (c2) for ‘parametric’ weights.

Local Control. For the same reason, local control can be expected to be available only to a limited extent. For the case
of nontrivial planar webs this is demonstrated by Figure 13.
For geodesic webs covering a given surface Φ0 , a dimension
count in the smooth case shows that we cannot expect that
locally deformed surfaces Φt (0 ≤ t < ε) are still covered by
a geodesic web (By [Vol29], Φt must satisfy a certain 4th
order PDE. If the deformation is local, all Φt ’s share values and derivatives along a common boundary. This usually
implies that all Φt ’s are the same).
Singularities. A combinatorial limitation is the regularity of
meshes we use. It is of course possible to apply local funcall
tionals such as fgeod , fplanar , fprox , and fbdry to more general
meshes, but this does not make sense in most cases. For instance, requiring the geodesic property near a vertex of valence = 6 leads to a singularity of the surface geometry. This
implication “combinatorial singularity =⇒ geometric singularity” follows from the existence of geodesic mesh polylines which run side by side before encountering the singularity and which diverge immediately afterwards, implying a
concentration of Gaussian curvature (cf. [PHD∗ 10]). Other
work on regular triangular and hexagonal parametrizations
such as [NPPZ10] does not suffer from this problem.

1378

B. Deng & H. Pottmann & J. Wallner / Functional webs for freeform architecture
for optimal control calculations. ACM Trans. Math. Software 20,
3 (1994), 262 – 281.
[Laz88] L AZAREVA V. B.: Parallelizable three-webs formed by
pencils of circles. In Webs and quasigroups. Kalinin, 1988,
pp. 74–77. [Russian].
[MNT04] M ADSEN K., N IELSEN H. B., T INGLEFF O.: Methods
for non-linear least squares problems. Lecture Notes, 2004.

Figure 14: Web optimization tasks may be hard to solve.
Motivated by the roof structure of the Yeoju Golf Club by
Shigeru Ban (left) we cover the design surface at right by a
planar web. The result is not useful for aesthetic reasons.

Conclusion and Future Research. We have shown how
to approach the optimization of webs algorithmically
and we have demonstrated some of their applications in
construction-aware design of freeform architecture. It is important that the optimization of webs can be used as a design tool. We have in particular studied the planar webs in
this respect, but in fact every web optimization, where the
approximation constraint cannot be met, is an instance of
form finding. Another one, where we do not go into details,
is shown by Figure 15.

[NBM02] NATTERER J., B URGER N., M ÜLLER A.: The roof
structure “Expodach” at the world exhibition Hannover. In Proc.
5th Intl. Conf. Space Structures (2002), pp. 185–193.
[NPPZ10] N IESER M., PALACIOS J., P OLTHIER K., Z HANG E.:
Hexagonal global parameterization of arbitrary surfaces. In ACM
SIGGRAPH Asia Sketches (2010), pp. # 5,1–2.
[PHD∗ 10] P OTTMANN H., H UANG Q., D ENG B., S CHIFTNER
A., K ILIAN M., G UIBAS L., WALLNER J.: Geodesic patterns.
ACM Trans. Graphics 29, 4 (2010), #43,1–10.
[Pot10] P OTTMANN H.: Architectural geometry as design knowledge. Arch. Design 80, 4 (2010), 72–77.
[Pra87] P RATT V.: Direct least-squares fitting of algebraic surfaces. In Proc. SIGGRAPH, vol. 21. ACM, 1987, pp. 145–152.
[PS98] P OLTHIER K., S CHMIES M.: Straightest geodesics on
polyhedral surfaces. In Mathematical Visualization (1998), Hege
H.-C., Polthier K., (Eds.), Springer, pp. 391–409.
[PW01] P OTTMANN H., WALLNER J.: Computational Line Geometry. Springer, 2001.
[PW06] P IRAZZI C., W EINAND Y.: Geodesic lines on free-form
surfaces: optimized grids for timber rib shells. In Proc. World
Conference on Timber Engineering (2006). 7pp.

As to future research, we repeat that the mathematical theory of webs is in some places rather incomplete. In particular sufficient conditions on the existence of webs of certain
types which cover given surfaces are largely missing. We believe that this subject area is important for applications and
there will be demand for optimization solutions which are
more specific and which combine webs with other geometric aspects of architectural geometry.

[She07] S HELEKHOV A. M.: Classification of regular three-webs
formed by pencils of circles. J. Math. Sc. 143 (2007), 3607–
3629.

Acknowledgments This research has been supported by the
Austrian Science Fund (FWF) within the National Research
Network Industrial Geometry (grants S9206, S9209). The
authors are grateful to Martin Reis and Heinz Schmiedhofer
for their help with construction details and illustrations.

[WH10] W EINAND Y., H UDERT M.: Timberfabric: Applying
textile principles on a building scale. Arch. Design 80, 4 (2010),
102–107.

References

[SS10] S INGH M., S CHAEFER S.: Triangle surfaces with discrete
equivalence classes. ACM Trans. Graph. 29, 4, #46 (2010), 1–7.
[Vol29] VOLK O.: Über Flächen aus geodätischen Dreiecksnetzen. Sitzungsber. Heidelb. Akad. Wiss. Math.-Natur. Kl. 1929, # 1
(1929), 3–32.

[WP11] WALLNER J., P OTTMANN H.: Geometric computing for
freeform architecture. J. Math. Industry 1 (2011), #4,1–19.
[WPH07] WALLNER J., P OTTMANN H., H OFER M.: Fair webs.
The Visual Computer 23, 1 (2007), 83–94.

[BB38] B LASCHKE W., B OL G.: Geometrie der Gewebe. Springer, 1938.
C HEN Y., DAVIS T. A., H AGER W. W., R AJA S.: Algorithm 887: C HOLMOD, supernodal sparse
Cholesky factorization and update/downdate. ACM Trans. Math.
Softw. 35, 3 (2008), # 22,1–14.

[CDHR08]

MANICKAM

[Che82] C HERN S. S.: Web geometry. Bulletin Amer. Math. Soc.
6 (1982), 1–8.
[Che10] C HERNOV N.: Circular and Linear Regression: Fitting
Circles and Lines by Least Squares. CRC Press, 2010.
[CHP∗ 10] C ECCATO C., H ESSELGREN P., PAULY M., P OTTMANN H., WALLNER J. (Eds.): Advances in Architectural Geometry 2010. Springer, 2010.
[Joh11]

J OHNSON S. G.: http://ab-initio.mit.edu/nlopt, 2011.

[Kra94]

K RAFT D.: Algorithm 733: TOMP – Fortran modules

Figure 15: Evolution of a web
with cylinder topology from a
base curve and two guiding
curves. Here we have 1 family
of planar ‘horizontal’ curves,
and 2 families of geodesics.

c 2011 The Author(s)
c 2011 The Eurographics Association and Blackwell Publishing Ltd.

