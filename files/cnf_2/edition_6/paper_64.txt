DOI: 10.1111/j.1467-8659.2009.01637.x
EUROGRAPHICS 2010 / T. Akenine-Möller and M. Zwicker
(Guest Editors)

Volume 29 (2010), Number 2

Hybrid Simulation of Miscible Mixing with Viscous Fingering
Seung-Ho Shin† , Hyeong Ryeol Kam‡ , and Chang-Hun Kim§
Korea University

Abstract
By modeling mass transfer phenomena, we simulate solids and liquids dissolving or changing to other substances.
We also deal with the very small-scale phenomena that occur when a fluid spreads out at the interface of another
fluid. We model the pressure at the interfaces between fluids with Darcy’s Law and represent the viscous fingering
phenomenon in which a fluid interface spreads out with a fractal-like shape. We use hybrid grid-based simulation
and smoothed particle hydrodynamics (SPH) to simulate intermolecular diffusion and attraction using particles
at a computable scale. We have produced animations showing fluids mixing and objects dissolving.
Categories and Subject Descriptors (according to ACM CCS): I.3.5 [Computer Graphics]: Computational Geometry
and Object Modeling—Physically based modeling

1. Introduction

Stam [Sta99] demonstrated stable fluid simulation using a semi-Lagrangian advection method and a decomposed version of the Navier-Stokes equation. Following Foster and Fedkiw [FF01], many researchers have developed
multi-phase fluid simulation techniques that use a level-set
method. These techniques are used by the special-effects
industry and help to produce movies, advertisements, and
games. The technique we propose builds on these existing technologies, with the aim of achieving stability and
straightforward implementation. Other research on miscible
fluids [ZLLW06, MMTD07, PKW∗ 08] has used the lattice
Boltzmann method (LBM), the density-based weighted essentially non-oscillatory (WENO) method, or the phase field
method (PFM), but we employ none of these.

In computer graphics, many fluid simulation techniques
have been developed and used to create realistic animations. However most of those techniques focus on immiscible fluids such as water, air, and bubbles. Losasso et al.
[LSSF06] simulated fire and more than two liquids in the
same scene, but did not deal with miscible fluids. Recently,
Zhu et al. [ZLLW06], Mullen et al [MMTD07], and Park
et al. [PKW∗ 08] have presented miscible fluid simulations.
However, they excluded the physical and chemical phenomena in which fluids are mixed and react with each other.
When two different fluids meet, they spread out in a fractal
shape because of physical pressure differences and diffusion
laws. We can see this happen when ink is dropped into water.
Substances can also melt and be dissolved by mass transfer
caused by chemical reaction, and then change into other substances. Molecules of solute float about in the flowing fluid
and spread out in a complicated fashion. We propose methods of simulating complicated fluid phenomena like those
described above, and present animations of the interaction
of miscible fluids such as ink, water, bubbles, and melting
solids.

We track the interfaces of a large number of fluids using a
similar approach to multiple level-set techniques. We use a
separate level-set for each separate substance, and we name
the interface where the substances mix the mixing surface.
At the mixing surfaces defined by these multiple level-sets,
intricate mixing phenomena occur that create complicated
fractal shapes because of the differences in concentration,
viscosity, and pressure between the different substances. We
assume that these phenomena are sufficiently like the flow of
liquids through porous media, which follows Darcy’s Law,
and we model the viscous fingering exhibited by mixing fluids and simulate it using the ghost fluid method (GFM). Our
proposed viscous fingering model is simple and easy to im-

† winstorm@korea.ac.kr
‡ neary@korea.ac.kr
§ chkim@korea.ac.kr
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

675

676

Seung-Ho Shin et al. / Hybrid Simulation of Miscible Mixing with Viscous Fingering

plement since it is modelled with pressure jump. We also
model the mass transfer phenomena caused by chemical reactions using the equation of heat-dependent mass transfer proposed by Mihalef et al. [MUM∗ 06] and Son et al.
[SDR99]. These techniques allow us to animate substances
that change phase and melt to form other substances.
Hong et al. [HLYK08] and Losasso et al. [LTKF08] simulated detailed splashing and bubble motion by combining
a grid-based version of Euler’s method with a particle-based
Lagrangian approach. We simulate the motion of moleculelike particles that represent a concentration using this hybrid
method. These concentration particles experience forces that
include diffusion and quasi-intermolecular attraction and repulsion. We control and simulate these forces simply using
smoothed particle hydrodynamics (SPH).
2. Related Work
Numerical simulation of the Navier-Stokes equation has become a standard technique for the realistic animation of fluids. Foster and Metaxas [FM96] introduced a fully threedimensional Navier-Stokes solver into computer graphics,
and an effective and robust solution to the Navier-Stokes
equation that includes semi-Lagrangian advection was reported by Stam [Sta99]. Foster and Fedkiw [FF01] used a
conjugate gradient method to solve the Poisson equation and
an implicit level-set surface to represent the interface area
effectively. Their method smoothes the fluid interface, and
changes of topology are represented robustly. This method
has been extended to a particle level-set method by Enright
et al. [EMF02], with the addition of conservation of mass.
Losasso et al. [LGF04] used an adaptive octree data structure to show detailed fluid effects such as the crown phenomenon. Losasso et al. [LSSF06] then simulated various
immiscible fluids such as oil, water, or fire using multiple
level-sets. Hong and Kim [HK05] dealt with interface discontinuities using the GFM [FAMO99, KFL00]. They considered surface tension at the interface between two immiscible fluids at the projection step and introduced a discontinuous viscosity condition. Shin and Kim [SK07] modeled
the force that drives liquids to a target shape using a pressure jump within the GFM. We model the viscous fingering
phenomenon in a similar way.
There has been a spate of recent research in the computer
graphics community, on the animation of phase transitions.
Mihalef et al. [MUM∗ 06] animated air bubbles in boiling
water. They controlled the number and the volume of the
bubbles produced by applying the equation of mass transfer
by heat. Kim et al. [KLL∗ 07] conserved the volume of air
bubbles by revising the local value of divergence. Losasso et
al. [LIGF06] simulated phase transitions such as ice melting
and paper burning. Wojtan et al. [WCMT07] animated corrosion and erosion of soild. In our scenario, phase changes,
liquid to liquid as well, result from chemical reactions.
Desbrun and Cani [DC96] modified the SPH method to

Figure 1: Schematic outline of our simulation.

handle viscous fluids, and Müller et al. [MCG03] proposed
an interactive method in which SPH underpins the simulation of water; these authors also developed a multiphase
SPH method to describe fluids of different compositions
[MSKG05]. Cleary et al. [CPPK07] have improved the realism with which the collision of foam and bubbles on a
complicated surface can be modeled.
Recently, much of effort has been applied to improving
the efficiency of fluid simulations by modeling the details
of fluid behavior on an underlying subgrid, which can be
achieved by combining a Eulerian grid with Lagrangian particles. Kim et al. [KCC∗ 06] modeled splashing by combining the SPH method with escaped particles from a particle
level-set. Losasso et al. [LTKF08] developed a two-way coupling between a particle level-set and SPH to simulate diffuse regions such as splashing. Hong et al. [HLYK08] used
SPH to model lively air bubbles on a coarse grid while retaining small-scale features of the flow. Lee et al. [LHK08]
proposed a way of making particle and level-set representations more interchangeable. We use the techniques mentioned above to simulate floating particles representing concentration factors.
3. Modeling Miscible Fluids with Multiple Level-Sets
To simulate fluids mixing, it is necessary to simulate more
than two fluids and track the interfaces between them.
Losasso et al. [LSSF06] tracked numerous interfaces of immiscible fluids using multiple level-sets, and this is the approach that we use here. We use multiple level-sets in miscible fluids to trace mixing surfaces in which we make a presc 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

Seung-Ho Shin et al. / Hybrid Simulation of Miscible Mixing with Viscous Fingering

sure jump according to Darcy’s Law and simulate pressure
term. We then trace the new mixing surfaces that viscous fingering creates. Chemical mass transfer also occurs at mixing
surfaces.
We use fields containing the velocity of each substance for
each multilevel-set. When using a single velocity field, it is
difficult to represent the mixing surfaces’ characteristics described above, because the velocity field of each fluid is scattered by the effect of the diffusion and pressure terms. We
therefore must simulate scenarios that satisfy the divergencefree condition for each fluid while considering that fluid’s
changes of phase. We calculate the pressure term for each
fluid incorporating the effect of Darcy’s Law and mass transfer. Each velocity field is extrapolated and then advected by
the semi-Lagrangian advection method. We create a single
velocity field for the fluid by combining the calculated velocity fields. Then we calculate the pressure term for the velocity field of the entire fluid in an additional step. The velocity
field must be adjusted so that it fulfills the divergence-free
condition, and finally we calculate the diffusion term. We
perform this simulation repeatedly while dividing the velocity field to match the multiple multilevel-sets. This method
is expensive, but it is able to control the changes to the multiple level-sets that occur after reactions and interactions, so
it is necessary. Figure 1 shows a schematic outline of our
method.
In this paper, we create and use combined level-sets to describe the mixing surfaces of entire fluids, as shown in Figure 2. This method allows us to choose what data we assign
to the combined level-set of the entire fluid, and to the levelset of each fluid when calculating surface tensions. When
using numerous level-sets, it is possible for the direction of
the surface tension to be miscalculated at the intersection between level-sets, as shown in Figure 2 (right). We therefore
consider all the level-sets to represent a single fluid, and calculate the surface tension using the combined level-set data.
This allows us to determine the correct direction for the surface tension across the whole mixed fluid, as shown in Figure
2 (left).

677

4. Basic Fluids Simulation
The Navier-Stokes equation, which is the basis of our simulation, preserves mass and momentum:

ut = −(u · ∇)u +

∇ · τ ∇p
−
+ f,
ρ
ρ

∇ · u = 0,

(1)

(2)

where u is the velocity, τ is the viscous stress tensor, and
ρ is the density. The term f can be used to add external forces
such as gravity and buoyancy. The numerical simulation of
Eqs. (1) and (2) requires the value of u to be updated from un
to un+1 at the nth time step. We discretize Eq. (1) by splitting
it into two equations by introducing an intermediate velocity
u∗ :
∇·τ
u∗ − un
= −(un · ∇)un +
+ f,
∆t
ρ

(3)

un+1 − u∗
∇p
=−
.
∆t
ρ

(4)

The variable u∗ can be used to compute the advection
term using the semi-Lagrangian method of Stam [Sta99]. We
can write the divergence of Eq. (4) as a form of Poisson’s
equation:

∇2 p =

ρ
∇ · u∗ .
∆t

(5)

Once the pressure profile has been determined by solving
this equation, we can obtain the final velocity profile:

un+1 = u∗ −

∆t
∇p.
ρ

(6)

There is a discontinuous pressure profile at the interface
Γ between two different fluids. It is possible to take the
discontinuous pressure at the interface into account, using
GFM [HK05, KFL00]. The pressure at node i, which is pi ,
and the pressure at node i+1, which is pi+1 , are extrapolated
G
across Γ to determine the ghost values, pG
i+1 and pi :

Figure 2: When using a combined level-set, surface tension
(left) is more accurate than when using individual level-sets
(right).

c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

pG
i = pi + J,

(7)

pG
i+1 = pi+1 − J.

(8)

Using these equations, Eq. (5) can be expanded as follows
[HK05]:

678

Seung-Ho Shin et al. / Hybrid Simulation of Miscible Mixing with Viscous Fingering

∇PDarcy =

µˆ U
ˆ
+ ρg,
k

(11)

where µˆ is viscosity, U is velocity, k is permeability, ρˆ is
density, and g is gravity.
There is a discontinuity of density and viscosity at an interface between two fluids. To calculate the density at a fluid
interface exactly, we use an equation proposed by Losasso et
al. [LSSF06]:
βˆ = (β− β+ )/ θβ+ + (1 − θ)β− ,
Figure 3: In our model, if the curvature is high, the porosity
is high and the probability of infiltration is high.

pi+1 + pi−1 − 2pi
J
= D(xi ) + 2 ,
∆x2
∆x

(9)

J
pi+2 + pi − 2pi+1
= D(xi+1 ) − 2 ,
∆x2
∆x

(10)

where D represents the right-hand side of Eq. (5) in one
dimension. These equations can be solved using the linear
system that has been used to solve Poisson’s equation.
Generally, pressure jumps are modeled by surface tension,
but we model ∇PDarcy as the pressure jump J generated at
the interface of mixing fluids. This J causes viscous fingering, and will be explained in Section 5.
We use an octree in the same way as Losasso et al.
[LGF04] to focus on the fluid interface, and we can create a
smooth surface from a complicated liquid interface by means
of the particle level-set method [EMF02].
5. Viscous Fingering
When fluids mix, we can see them spread out irregularly as
their mixing surface makes a fractal-like shape. Viscous fingering refers to the onset and evolution of these instabilities
in the displacement of fluids. The unstable flow of a fluid in a
porous medium, or by analogy in a Hele-Shaw cell, has been
studied for 50 years [Hom87]. The results have applications
in areas such as enhanced oil recovery and micro-fluidics.
In our scenario, we model viscous fingering with Darcy’s
Law, which expresses the state of a fluid passing through a
porous medium. We assume that a mixing process is equivalent to a fluid infiltrating a fluid consisting of molecules.
At the mixing surface between two fluids, there is a pressure
jump that results from the properties of the fluid. According
to Darcy’s Law, the pressure gradient vector is:

(12)

where θ = |φ(xi )| /(|φ(xi )| + |φ(xi+1 )|), and the − and +
superscripts refer to values from different sides of the interface. The viscosity at the interface can be calculated in a
similar way. As mentioned in Section 3, each substance has
its own velocity field, and U is the velocity of the solute.
The porosity equation is formulated using the curvature of
the interface of the solute that is infiltrating into a fluid. As
shown in Figure 3, if the curvature is high, the fluid surface
is convex and the probability of infiltration is high, but if
this shape is flat or concave, the probability of infiltration is
low. Thus, we express porosity as k = ακlevelset , where α is
a constant that we set to 0.1, and κlevelset is the curvature of
the level-set, which can be expressed as follows: κlevelset =
∇φ
∇ · ( ∇φ
).
We define ∇PDarcy as the pressure jump J generated at
the interface of mixing fluids. The u, v, and w velocities and
pressure jump J are defined at the centers of each face of
a cell and referenced locally [FM96]. The pressure jump
is therefore calculated on the face of the cell that is defined as the interface in which the neighbor cell has opposite
sign. Therefore, U is used for the velocity of the cell face,
which is a scalar. For example, if there are interfaces on three
cell faces, individually calculated J value for each cell face
are stored. J consists of a scalar value for each dimension
(x, y, z):

J(x,y,z) =

µˆ U(x,y,z)
k

ˆ (z) .
+ ρg

(13)

This formulation allows us to demonstrate viscous fingering at a mixing surface, as shown in 2D in Figure 4. This
is a similar structure to that shown in a real photograph of
mixing fluids, due to Habermann [Hom87], also reproduced
in Figure 4.
6. Chemical Mass Transfer
When fluids mix, chemical reactions can occur. Then, the
volume of fluid may decrease or increase and some of the
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

Seung-Ho Shin et al. / Hybrid Simulation of Miscible Mixing with Viscous Fingering

679

Figure 4: Viscous fingering. Miscible fluids mixing (left),
and our simulation result (right).

fluid may change into another type of fluid. We model and
simulate this kind of mass transfer. Mihalef et al. [MUM∗ 06]
simulated the mass transfer that occurs when water boils.
The mass transfer because of chemical reaction is similar
to the phase transition that can be caused by heat. The rate
of mass transfer resulting from a chemical reaction can be
expressed as follows:

m˙ c = −

cfsolute · N − cfsolvent · N
,
H

7. Hybrid Method

The rate of mass transfer by chemical reaction depends on
the concentration of the substance. Depending on the rate of
mass transfer, the level-set of the fluid is updated as follows:
m˙ c
|∇φ| .
ρˆ

(15)

φ∗ is advected to φn+1 using level-set method after updated. Because the volume of the fluid changes, we must
revise the divergence value of the pressure term by using the
rate of mass transfer to control the volume of fluid, as follows:

∇ · un+1 =
∇2 p =

m˙ c
|N| ,
ρˆ

m˙ c
ρˆ
∇ · u∗ −
|N| .
∆t
∆t

shape is defined by an implicit surface using level-set data,
which makes it easy to implement this scenario.

(14)

where cf is the chemical flux defined by cf = −D∇Ccell ,
N is the outward facing normal from cfsolute to cfsolvent , H
is the heat of reaction, Ccell is the concentration of each cell,
and D is the coefficient of diffusivity for the concentration.

φ∗ = φn − ∆t

Figure 5: Pouring water on the teapot. The solid teapot
melts by chemical mass transfer. (grids:128 × 128 × 128;
particles: about 20,000).

(16)

(17)

This method is similar to those explained in [MUM∗ 06,
KLL∗ 07]. This allows us to simulate phenomena in which
the volume of the substance changes, such as the melting
of a solid because of a chemical reaction. Figure 5 shows a
solid teapot melting in a transparent liquid. Because of mass
transfer, the volume of the teapot decreases. The solid teapot
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

It is hard to model intermolecular forces using only gridbased advection of concentration. We therefore simulate the
effect of molecular diffusion and interaction on concentration using what we call concentration particles. The advection of concentration is simulated using both a grid-based
model of semi-Lagrangian advection and particle-based advection. We can assume that the concentration particles are
not completely absorbed in the solvent in which they dissolve, but float about like oversize molecules. Figure 6 shows
a 2D simulation of the mixing of two substances using this
hybrid method.
7.1. Concentration Particles and Absorption
Concentration particles are generated in the grid cells corresponding to a mixing surface. They are defined by position,
velocity, radius, and concentration. The number of particles
that are reseeded depends on the maximum that has been
set for each cell. That is, we simulate more particles with
reseeding to have max_p particles in a mixing surface cell
if the number of particles is less than max_p. max_p is the
maximum number of particles that a cell can have. In our experiment, we set max_p to four or eight. When a particle is
seeded, its concentration is initialized to Cequilibrium /max_p.
When one or more concentration particles exist in a cell,
absorption occurs from the particles to the grid. The reaction
rate is proportional to the concentration of the substance. In
general, the reaction rate of two substances is kreaction [A][B],
where [A] is the sum of the particle concentrations existing

680

Seung-Ho Shin et al. / Hybrid Simulation of Miscible Mixing with Viscous Fingering

a state of chemical equilibrium. This allows the computation
to be simplified without a significant effect on accuracy.
7.2. Concentration Particle Advection
Concentration particles are advected by their own velocity
according to a Lagrangian method. Each of their positions is
n
n
updated using the equation: pn+1
particle = p particle + u particle ·
∆t. The velocity of a particle u particle is calculated using the
n
equation: un+1
particle = u particle + fadvection · ∆t. The advection
of concentration particles depends on the intermolecular diffusion, infiltration, and coupling forces:

Figure 6: Hybrid simulation of particle and grid-based
method. The grid is 64 × 64(6-level octree). The blue and
yellow points are the level-sets and the red points are concentration particles. The dark blue points are particles modeling the concentration after the reaction.

np

in each cell (∑i Cnparticlei ), and [B] is the concentration of
solvent in the cell.
In our simulation, we limit the maximum number of cell
concentrations to Cequilibrium , and we assume that the concentration of solvent [B] is initialized to Cequilibrium . Because the concentration of substance [B] is proportionally reduced as reaction product is generated, we can model [B] as
(Cequilibrium −Ccell ). Thus, the cell concentration of reaction
n+1
product absorbed from a particle for the next time step, Ccell
is:
np

n+1
n
n
= Ccell
+ ∑ kreactionCnparticlei (Cequilibrium −Ccell
),
Ccell

fadvection = fdiffusion +fcapillary +fmolecular +fcoupling
(20)
Concentration particles spread out in the direction of the
concentration gradient. The diffusive flux follows Fick’s
Law:

fdiffusion = −D∇Ccell ,

(21)

where D is the diffusion coefficient. It is not easy to model
complicated diffusion scenarios in which irregular filaments
are produced and spread out, using only the above Eq. (21).
Thus, we use a capillary force and intermolecular forces.
The capillary force is modeled using the gradient of curvature of the concentration field. Because regions of high
curvature have a high porosity, it is easy for a fluid to infiltrate in that region. We therefore model the capillary force
as follows:

fcapillary = I |κconcentration | ∇κconcentration ,

(22)

i

(18)
where Ccell is the concentration of product in the cell,
C particlei is the ith particle’s concentration in the cell, np
is the number of particles in the cell, and kreaction is a coefficient that defines the rate of the chemical reaction. In
our experiment, we use a small number, typically 0.001, for
kreaction and set Cequilibrium to 1.0.
When a concentration particle is absorbed into the cell,
the particle concentration of the solute is reduced:
n
n
n
Cn+1
particle = C particle − kreactionC particle (Cequilibrium −Ccell ).
(19)

Depending on Eq. (19), if a particle’s concentration is less
than a fixed threshold, which is 0.01, the particle is deleted.
n
n
If Ccell
is larger than Cequilibrium
, the concentration of product decreases and the particle concentration of solute increases in the next step. The process is similar to maintaining

Figure 7: Dropping red ink. Two different liquids mix
(grids:256 × 256 × 128, particles: about 120,000).

c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

Seung-Ho Shin et al. / Hybrid Simulation of Miscible Mixing with Viscous Fingering

681

Figure 8: Dissolving a solid teapot. By mass transfer, the volume of the solid decreases (grids:128 × 128 × 128, particles: about
30,000).

Figure 9: Dissolving a liquid teapot. Viscous fingering occurs at the mixing surface (grids, particles: same as above).

where κconcentration is the curvature of the concentration field and I is the infiltration coefficient. The value
of κconcentration can be expressed as κconcentration = ∇ ·
(∇Ccell / ∇Ccell ).

tion of the particles is provided by the sum of the forces in
Eqs. (21),(22),(23) and (24).

We simulate intermolecular forces using the SPH method.
The intermolecular forces themselves are modeled by the interaction forces between concentration particles. The following equation, which is typically used to calculate pressure in
SPH-based fluid simulations, has been found experimentally
to be effective in modeling the attractive force between concentration particles:

Simulations were performed on an Intel PC with a 3.0 GHz
CPU. In general, simulation grids are economically implemented as octrees, but we must use a regular grid for scenarios where concentration must be modeled. In this case,
the value of the level-set is less than 0. In other words, we
can simulate concentrations where liquid is present without
ambient air. Therefore, if φ over the whole level-set is more
than 0, we could use an octree data structure instead of the
dense regular grid that we used where φ is less than 0.

fmolecular = A ∑ m j (
j

Pj
Pi
+
)∇W (x j −xi ),
C particlei 2 C particle j 2
(23)

where the pressure Pi = αC particlei , with the control parameter α, A is the attraction coefficient and m is the mass of
a particle. We assume that the mass of all the particles is the
same, with a value of 1.
When a concentration particle moves between different
fluids, a resistance force is provided by the fluid into which
the particle is moving. This force causes the coupling between the velocity of grid and particle. The magnitude of this
force is proportional to the relative velocity of the concentration particle and the receiving fluid, and can be expressed as:

fcoupling = −R(u particle − ucell ),

(24)

where R is the resistance coefficient. The overall advecc 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

8. Results

Because an octree data structure is being used, the computation cost increases in proportion to the volume of fluid that
is simulated. The simulation shown in figure 5 takes at least
15 seconds per frame and at most 120 seconds. For rendering, we used Mental-Ray in Maya. Simulation data are saved
as a mesh and a scalar field to be rendered in Maya.
Figure 7 shows that the Venus-shaped volume of fluid
dives into an open water surface and is mixed. The two different fluids intermingle and spread out just as ink mixes
with water. This experiment was performed using a 256 ×
256 × 128 grid. The simulations took approximately 9 minutes per frame, including running the fluid solver and the file
I/O.
Figure 8 shows how a solid teapot shape dissolves in a
liquid. As the volume of the solid is reduced by mass transfer, the solid teapot dissolves in water. Violet material from
the teapot that has been mixed in water floats on the surface
and interacts with air bubbles. Figure 9 shows a somewhat

682

Seung-Ho Shin et al. / Hybrid Simulation of Miscible Mixing with Viscous Fingering

Figure 10: Water meets three types of teapots: clear water, steel, and blue ink (grid:128 × 128 × 128, particles: about 25,000).

different scenario in which a liquid teapot mixes with the
water that surrounds it. In contrast to Figure 8, viscous fingering now takes place because of the difference in pressure
at the interface between the two fluids and a liquid core itself
flows. We intentionally inserted bubbles to show the comparison between the solid and the liquid when interacting with
bubbles. We can thus see the complicated phenomena of liquids mixing. The grid for the simulations shown in Figures 8
and 9 was 1283 . The average simulation time per frame was
120 seconds.
Figure 10 presents a dramatic scenario in which a liquid
teapot and a rigid teapot are dropped into water one by one.
First, we show how they react when they are of the same type
of substance, clear water. Then, the insoluble object drops,
and after it reaches the bottom of the water, we make that
teapot blue ink. It slowly dissolves and mixes with the water. The grid for this simulation was 1283 , and the average
simulation time per frame was 100 seconds.
9. Conclusions
We have described a technique for modeling the flow of miscible multi-phase fluids by improving the handling of interfacial properties and chemical reactions. In several experiments, we constructed naturalistic scenarios in which a solid
body melts or liquids are mixed. These combinations of viscous fingering, chemical-based mass transfer, and molecular
forces are relatively easy to model with techniques familiar
to the computer graphics community.
In the future, we aim to simulate smaller-scale features
such as the filaments that appear when ink spreads out in

water. We will simulate the liquid-solid reaction, based on
accurate chemical laws such as solution and solidification
with a state of chemical equilibrium.
Acknowledgements
This research was supported by Basic Science Research Program WCU(World Class University) program through the
National Research Foundation of Korea(NRF) funded by the
Ministry of Education, Science and Technology (No.20090083827, R31-2008-000-10008-0). This research was supported by Ministry of Culture, Sports and Tourism (MCST)
and Korea Creative Content Agency (KOCCA) in the Culture Technology (CT) Research & Development Program
2009.
References
[CPPK07] C LEARY P. W., P YO S. H., P RAKASH M., KOO
B. K.: Bubbling and frothing liquids. ACM Transactions on
Graphics, 26, 3 (2007), 97. 2
[DC96] D ESBRUN M., C ANI M.-P.: Smoothed particles: A new
paradigm for animating highly deformable bodies. In Computer
Animation and Simulation a´
˛r96 (1996), pp. 61–76. 2
[EMF02] E NRIGHT D., M ARSCHNER S., F EDKIW R.: Animation and rendering of complex water surfaces. ACM Transactions
on Graphics, 21, 3 (2002), 736–744. 2, 4
[FAMO99] F EDKIW R., A SLAM T., M ERRIMAN B., O SHER S.:
A non-oscillatory eulerian approach to interfaces in multimaterial flows (the ghost fluid method). Journal of Computational
Physics, 152, 2 (1999), 457–492. 2
[FF01] F OSTER N., F EDKIW R.: Practical animation of liquids.
In Proceedings of ACM SIGGRAPH 2001, ACM Press / ACM

c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

Seung-Ho Shin et al. / Hybrid Simulation of Miscible Mixing with Viscous Fingering
SIGGRAPH, New York, E. Fiume, Ed., Computer Graphics Proceedings, Annual Conference Series, ACM (2001), pp. 23–30. 1,
2
[FM96] F OSTER N., M ETAXAS D.: Realistic animation of liquids. Graphical Models and Image Processing 58, 5 (1996), 471–
483. 2, 4
[HK03] H ONG J.-M., K IM C.-H.: Animation of bubbles in liquid. Computer Graphics Forum, 22, 3 (2003), 253–262.
[HK05] H ONG J.-M., K IM C.-H.: Discontinuous fluids. ACM
Transactions on Graphics, 24, 3 (2005), 915–920. 2, 3, 4
[HLYK08] H ONG J.-M., L EE H.-Y., YOON J.-C., K IM C.-H.:
Bubbles alive. ACM Transactions on Graphics 27, 3 (2008),
48:1–48:4. 2
[Hom87] H OMSY G. M.: Viscous fingering in porous media. Annual Review of Fluid Mechanics, 19 (1987), 271–311. 4, 5
[KCC∗ 06] K IM J., C HA D., C HANG B., KOO B., I HM I.: Practical animation of turbulent splashing water. In Proceedings of the
2006 ACM SIGGRAPH/Eurographics Symposium on Computer
animation (2006), pp. 335–344. 2
[KFL00] K ANG M., F EDKIW R., L IU X.-D.: A boundary condition capturing method for multiphase incompressible flow. Journal of Scientific Computing, 15, 3 (2000), 323–360. 2, 3
[KLL∗ 07] K IM B., L IU Y., L LAMAS I., J IAO X., ROSSIGNAC
J.: Simulation of bubbles in foam with the volume control
method. ACM Transactions on Graphics, 26, 3 (2007), 98:1–
98:9. 2, 5
[LGF04] L OSASSO F., G IBOU F., F EDKIW R.: Simulating water
and smoke with an octree data structure. ACM Transactions on
Graphics, 23, 3 (2004), 457–462. 2, 4
[LHK08] L EE H.-Y., H ONG J.-M., K IM C.-H.: Interchangeable
sph and level set method in multiphase fluids. The Visual Computer 2009(to be appeared) (2008). 2
[LIGF06] L OSASSO F., I RVING G., G UENDELMAN E., F EDKIW
R.: Melting and burning solids into liquids and gases. IEEE
Transactions on Visualization and Computer Graphics, 12, 3
(2006), 343–352. 2
[LSSF06] L OSASSO F., S HINAR T., S ELLE A., F EDKIW R.:
Multiple interacting liquids. ACM Transactions on Graphics, 25,
3 (2006), 812–819. 1, 2, 4
[LTKF08] L OSASSO F., TALTON J., K WATRA N., F EDKIW R.:
Two-way coupled sph and particle level set fluid simulation.
IEEE Transactions on Visualization and Computer Graphics, 14,
4 (2008), 797–804. 2
[MCG03] M ÜLLER M., C HARYPAR D., G ROSS M.: Particlebased fluid simulation for interactive applications. In Proceedings of the 2003 ACM SIGGRAPH/Eurographics Symposium on
Computer Animation (2003), pp. 154–159. 2
[MMTD07] M ULLEN P., M C K ENZIE A., T ONG Y., D ESBRUN
M.: A variational approach to eulerian geometry processing.
ACM Transactions on Graphics, 26, 3 (2007), 66:1–66:10. 1
[MSKG05] M ÜLLER M., S OLENTHALER B., K EISER R.,
G ROSS M.: Particle-based fluid-fluid interaction. In Proceedings of the 2005 ACM SIGGRAPH/Eurographics Symposium on
Computer Animation (2005), pp. 237–244. 2
[MUM∗ 06] M IHALEF V., U NLUSU B., M ETAXAS D., S USS MAN M., H USSAINI M. Y.: Physics based boiling simulation. In
Proceedings of the 2006 ACM SIGGRAPH/Eurographics Symposium on Computer Animation (2006), pp. 317–324. 2, 5
[OF01] O SHER S., F EDKIW R.: Level set methods: An overview
and some recent results. Computational Physics. 169 (2001),
463–502.
c 2010 The Author(s)
Journal compilation c 2010 The Eurographics Association and Blackwell Publishing Ltd.

683

[PKW∗ 08] PARK J., K IM Y., W I D., K ANG N., S HIN S. Y.,
N OH J.: A unified handling of immiscible and miscible fluids.
Computer Animation and Virtual Worlds 19, 3-4 (2008), 455–
467. 1
[SDR99] S ON G., D HIR V. K., R AMANUJAPU N.: Dynamics
and heat transfer associated with a single bubble during nucleate
boiling on a horizontal surface. Journal of Heat Transfer, 121, 3
(1999), 623–631. 2
[SK07] S HIN S.-H., K IM C.-H.: Target-driven liquid animation
with interfacial discontinuities. Computer Animation and Virtual
Worlds 18, 4-5 (2007), 447–453. 2
[Sta99] S TAM J.: Stable fluids. In Proceedings of ACM SIGGRAPH 99, ACM Press / ACM SIGGRAPH, New York. E. Fiume, Ed., Computer Graphics Proceedings, Annual Conference
Series, ACM (1999), vol. 18, pp. 121–128. 1, 2, 3
[WCMT07] W OJTAN C., C ARLSON M., M UYCHA P. J., T URK
G.: Animating corrosion and erosion. Eurographics Workshop
on Natural Phnomena (2007), 15–22. 2
[ZLLW06] Z HU H., L IU X., L IU Y., W U E.: Simulation of miscible binary mixtures based on lattice boltzmann method: Research articles. Computer Animation and Virtual Worlds, 17, 3-4
(2006), 403–410. 1

