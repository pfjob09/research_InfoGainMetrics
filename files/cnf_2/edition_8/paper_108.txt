Eurographics/ IEEE-VGTC Symposium on Visualization 2008
A. Vilanova, A. Telea, G. Scheuermann, and T. Möller
(Guest Editors)

Volume 27 (2008), Number 3

Discrete Multi-Material Interface Reconstruction
for Volume Fraction Data
J. C. Anderson1 , C. Garth1 , M. A. Duchaineau2 , and K. I. Joy1
1 Institute

for Data Analysis and Visualization, Department of Computer Science, University of California, Davis
e-mail: {janderson, cgarth, kijoy}@ucdavis.edu
2 Center for Applied Scientific Computing, Lawrence Livermore National Laboratory
e-mail: duchaine@llnl.gov

Abstract
Material interface reconstruction (MIR) is the task of constructing boundary interfaces between regions of homogeneous material, while satisfying volume constraints, over a structured or unstructured spatial domain. In this
paper, we present a discrete approach to MIR based upon optimizing the labeling of fractional volume elements
within a discretization of the problem’s original domain. We detail how to construct and initially label a discretization, and introduce a volume conservative swap move for optimization. Furthermore, we discuss methods
for extracting and visualizing material interfaces from the discretization. Our technique has significant advantages over previous methods: we produce interfaces between multiple materials that are continuous across cell
boundaries for time-varying and static data in arbitrary dimension with bounded error.
Categories and Subject Descriptors (according to ACM CCS): I.3.6 [Computer Graphics]: Methodology and Techniques

1. Introduction
Surface extraction has long been an important topic in scientific visualization. The task has often been to generate segmenting surfaces through binary- or multi-labeled data on
structured and unstructured meshes [LC87, NF97, HSSZ97,
JLSW02, BL03].
In this work, we consider a different segmentation problem known as Material Interface Reconstruction (MIR).
Here, there is no a priori labeling of mesh elements. Instead,
in an n-material problem, each cell in the mesh has an associated n-tuple describing the fraction of each material within
that cell. The goal is to segment each cell into homogeneous
material regions such that the total volume of each material
within each cell matches the problem’s volume fractions.
One of the difficulties of MIR is that for any given volume
fraction there are limitless volume-preserving cell decompositions, with different topologies and embeddings. The
under-constrained nature of this problem permits different
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.
Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and
350 Main Street, Malden, MA 02148, USA.

MIR algorithms to produce different solutions. The simplest
measure of correctness for any reconstruction is its total
error. Almost as important for visualization applications is
material interface continuity across cell boundaries: disconnected surfaces are physically implausible and difficult to
analyze. Furthermore, metrics such as the number of primitives, connected components, surface curvature, and surface
area can be used to measure the quality of a reconstruction.
In this paper, we reinterpret MIR as a segmentation problem over a discretization of the problem’s original spatial domain. Our formulation eases the extraction and visualization
of material interfaces, and unlike previous work:
•
•
•
•

material volume is preserved with bounded error,
interfaces are continuous across cell boundaries,
interfaces have low surface area and curvature, and
reconstruction works for time-varying and static data of
arbitrary dimensionality.

Additionally, our technique scales well with respect to material interface complexity, and is easily parallelized.

1016

Anderson et al. / Discrete Multi-Material Interface Reconstruction for Volume Fraction Data

The basis of our approach is to discretize cells containing more than one material into small, fractional volume elements. Each of these “subcells” is then labeled as being
entirely one material or another based upon the problem’s
volume fractions. Producing a good labeling of the subcells
is a non-trivial problem, however an initial labeling can be
effectively optimized. In our work, each subcell is attributed
a simple, local energy equal to the number of its neighboring subcells with a different label. Known as the Potts-model
energy (see [Wu82]), this metric has been widely used in interface problems, from studying cellular structures [GG92]
to interpolating region boundaries between segmented images [DBTH07]. Optimizing the Potts-model energy over
the discretization leads to a labeling with low surface area
and curvature – desirable properties that translate to our final interface reconstruction.
Working in a discretized setting greatly simplifies the construction of material interfaces. In our method, material interfaces are surfaces that separate regions of the discretization with different material labels. Surface mesh representations of these interfaces can be easily extracted, even in cases
with complex topology such as multi-material junctions and
multiple intersections along a single mesh edge.
In the next section, we discuss applications and existing
algorithms for MIR. Section 3 details how we cast interface
reconstruction as an optimization problem over a discrete,
labeled grid. Techniques for extracting and visualizing material interfaces from the discretization are detailed in Section 4, followed by some notes on the implementation of our
method in Section 5. Finally, we present results of our work
over two- and three-dimensional fluid flow datasets in Section 6.

SLIC, however cells are partitioned by planes aligned to local material “gradients.” While PLIC is fast and preserves
volume fractions, its reconstruction is discontinuous across
cell boundaries and is ambiguous for three or more materials
due the ordering of its binary segmentations.
There have been a number of modifications to the basic PLIC algorithm. Pilliod and Pucket [JEPP04] describe
two algorithms, both of which use a least-squares approach
to minimize the error of approximately linear interfaces.
Garimella et al. [GDSS05] demonstrate how to fix certain
local topological inconsistencies in PLIC reconstructions.
Dyadechko and Shashkov [DS05, DS06] describe an interface reconstruction algorithm for volume fraction data augmented with material centroid information.
Attempts have also been made to develop methods for the
direct visualization of volume fraction data. A commonality of these approaches is that they produce interfaces that
are continuous across cell boundaries – crucial for comprehensible visualizations. However, existing methods do not
preserve volume and do not support an arbitrary number of
materials per cell.
One visualization approach is to ignore the volume fractions, and reinterpret MIR as a multi-material segmentation
problem. Mesh nodes are assigned a material label – induced by pure cell neighbors, or from the predominant material surrounding the node – and the goal becomes to generate separating surfaces between nodes with different labels. For rectilinear grids, methods such as dual contouring [JLSW02] and multiple material Marching Cube methods [HSSZ97, WJMS03, BL03] produce valid segmentations; Nielson and Franke [NF97] describe how to construct
segmenting surfaces for unstructured tetrahedral meshes.

2. Related Work
Research on MIR has been largely driven by its application in computational fluid dynamics. The Volume of Fluid
(VOF) method [HN81] is a simulation technique for Eulerian multi-fluid hydrodynamic flows [RK98]. In a VOF
simulation, fractional material volumes are maintained for
each cell. To advance the simulation, interface geometry is
reconstructed in order to calculate the flux of material between cells. Storing per-cell material volumes, rather than
explicit interface geometry, eases the simulation of complicated flows, however the reconstruction of material interfaces remains a crucial part of accurately advecting materials [JEPP04].
There are many MIR algorithms for VOF simulation.
The Simple Line Interface Calculation (SLIC) method described by Noh and Woodward [NW76] is one of the earliest and simplest MIR algorithm. Cells are partitioned with
axis-aligned planes, such that the total material volume in
each cell is correct. The Piecewise Linear Interface Calculation (PLIC) algorithm of Youngs [You82] is similar to

Isosurfacing of volume fractions is also common. Bonnell
et al. [BSD∗ 00,BDS∗ 03] perform isosurfacing over the dual
grid, calculating isosurface intersections using barycentric
interpolation in the space of the volume fractions. A problem with this approach is that interfaces no longer coincide
with the mesh from the original problem. Meredith [Mer04]
averages volume fractions to mesh nodes and performs isosurfacing upon the original mesh. Nevertheless, both methods miss small scale features entirely (e.g., thin shells), do
not preserve volume fractions, and break down with many
materials.
In our work, we subdivide cells containing material interfaces and optimize the labeling of small, fractional volume
elements. Material interfaces become segmenting surfaces
between regions of the discrete grid with different material
labels. In the next section we describe how to construct and
optimize the labeling of the discretization; the extraction and
visualization of continuous material interfaces in this discrete context is described in Section 4.
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Anderson et al. / Discrete Multi-Material Interface Reconstruction for Volume Fraction Data

(a) Problem

(b) Initial State

(c) Swap

1017

(d) Converged State

Figure 1: Algorithm overview focusing upon a single mixed cell with both pure and mixed neighbors (a). During optimization of the labeled
discretization (b) a volume conservative swap of two subcell labels (c) is performed probabilistically, based upon its effect on the Potts-model
energy. The converged material interface reconstruction produced by our method is shown in (d).
3. Method
Consider a spatial domain that has been decomposed into
a finite grid of cells C. In an n-material problem, each cell
c ∈ C has an associated tuple Vc = (v1 , . . . , vn ), where the
value vi is the fractional volume of material i within the cell.
Volume fractions are non-negative (vi ≥ 0), and account for
the entire volume of the cell (∑ni=1 vi = 1). Pure cells are
entirely one material, while mixed cells have multiple nonzero volume fractions. Figure 1(a) shows a hypothetical MIR
problem in which pure cells are shown in a solid color.
Our method begins with a discretization step. Each cell
is subdivided into S subcells of uniform fractional volume
dA = S1 to form the discretization D. We allow each subcell,
in turn, to be assigned a label corresponding to one of the n
materials.
In this discrete setting, we formulate material interfaces
as separating surfaces between regions of D with different
material labels. After discretization, therefore, the goal becomes to generate a simple labeling of the subcells such that
problem’s volume fractions are preserved as closely as possible. Our approach – described in the remainder of this section – is to first produce an initial, valid labeling and then
apply optimization.
We begin by randomly assigning material labels to subcells with the constraint that for each label i ∈ (1, . . . , n) there
vi
subcells with label i in cell c. Figare approximately dA
ure 1(b) illustrates the initial state of D after labels have been
assigned based upon the volume fractions shown in 1(a).
To improve the labeling we define a local measure of the
labeling quality. In this paper, we use a discrete estimate of
the labeling smoothness known as the Potts model [Wu82].
Consider a labeling f of D such that fx is the label of subcell x. The Potts-model energy at x is the number of subcells
neighboring x with a different label:
Ex ( f ) =

∑ Wx,y · δ( fx = fy ),

(1)

y∈N

where W is a weighting function for offsets within the local
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

neighborhood N (which may span original cell boundaries),
and δ = {true : 1; false : 0}.
Extending the Potts-model energy over the entire discretization
E( f ) =

∑ Ex ( f ),

(2)

x∈D

allows for optimization of the labeling through energy minimization. The end result of optimization will be a smoother,
simpler labeling and improved material interfaces.
We optimize the energy function in Equation 2 using simulated annealing [KGV83] in order to have explicit control
of how the labeling is changed. More recent techniques such
as graph cuts [BVZ01,KZ02] are not used because their optimization moves do not conserve volume, a firm requirement
in our application.
In simulated annealing, changing from one state to another – i.e., from a labeling f to a new labeling f ′ – is allowed probabilistically as a function of the annealing temperature T and the corresponding change in energy ∆E:
P=

1
e−∆E/T

∆E < 0
otherwise.

(3)

Changes that improve the labeling are always taken.
Changes that increase the total energy remain likely when
T is high, however as the temperature decreases, the system
converges because those changes become much less likely.
Per-cell volume can be maintained by restricting the labeling changes considered during optimization. In our approach, we only allow the volume conservative swap of two
labels. Here, the labels of two randomly chosen subcells – x
and y – within a cell c are exchanged to produce a new labeling, as shown in Figure 1(c). Consider the initial Potts-model
energy of the subcell pair (x, y) under the labeling f :
Ex,y ( f ) = Ex ( f ) + Ey ( f ).
Exchanging the labels of this pair would produce a new labeling f ′ with energy Ex,y ( f ′ ), in which the total per-cell,

Anderson et al. / Discrete Multi-Material Interface Reconstruction for Volume Fraction Data

1018

per-material volumes remain unchanged. The change in energy ∆E = Ex,y ( f ′ ) − Ex,y ( f ) produced by the swap can be
used to determine if the labeling f ′ is accepted during optimization (Equation 3).
Using volume conservative swaps guarantees that the labeling f accurately reflects the problem’s volume fractions
throughout the optimization process. Thus, an upper bound
on the per-cell error ε(c) of the discretization labeling is:
ε(c) ≤

(n − 1)dA
0

if c is mixed,
otherwise.

(4)

This error bound is driven by the subdivision rate S, and
the resulting quantization of the cell’s volume fractions into
multiples of size dA. Optimization may be performed for
an arbitrarily short or long period of time depending on the
quality of the labeling desired. Sections 5 and 6 provide insight into the convergence behavior of our approach.
4. Visualization
The labeling of fractional volume elements as entirely one
material or another – described in the previous section – explicitly encodes the characteristic function of our MIR solution. In this section, we discuss methods for visualizing material regions and constructing surface mesh representations
of material interfaces in this discrete context.
Material regions can be directly visualized in our approach. Generally speaking, we assign a unique color to each
material and render the discretization D colored by its current labeling f . In 2D this produces a color image, and in
three dimensions results in an image cube which can be visualized using volume rendering. Time-varying volume fraction data naturally leads to a sequence of multiple images.
Visualizing material regions is attractive in 2D since occlusion is not an issue; correspondingly, in this paper we
render material regions rather than interfaces for all twodimensional datasets.
Material interfaces are also simple to extract: interfaces in
our discrete formulation are surfaces that separate regions of
D with different material labels. A surface mesh representation of material interfaces can be constructed by extracting
co-incident faces between adjacent subcells with different
labels.
Surface meshes constructed in this way are able to capture simple and complex interface topologies, such as multimaterial junctions and multiple intersections along a single
mesh edge. They also exactly match the volume fractions
given by the labeling f , and the problem’s volume fractions with bounded error (Equation 4). Upon close inspection, however, boundaries constructed in this manner can be
unpleasant to visualize because they capture sharp boundaries at the sub-cell scale.
An alternate surface construction option is to apply

a multi-material segmentation algorithm over an approximate, smoothed version of the labeling field. For twomaterial problems interfaces can be extracted using Marching Cubes [LC87]. Interfaces in problems with three or
more materials can be extracted using one of various multilabel segmentation algorithms, such as multi-label Marching
Cubes methods [HSSZ97, WJMS03, BL03], Dual Contouring [JLSW02], or the method of Nielson and Franke [NF97]
on an implicit tetrahedrization of the rectilinear domain. We
have found that filtering f with a narrow Gaussian kernel improves material interfaces for visualization without introducing large error (see Section 7 for a discussion of the effects
of smoothing upon volume preservation).
5. Implementation
In this section, we provide some implementation details regarding topics such as performance, convergence, neighborhood size and weighting, and accuracy.
Performance There are two important areas of performance to consider: computation and memory consumption. In terms of computation, simulated annealing optimization of the labeling energy is not cheap. However, it
is straightforward to develop a highly parallel implementation over independent sets of cells using “checkerboarding” [WPS97]. Interactive visualization also hides the cost
of optimization.
The memory requirement per subcell without encoding is
a single byte for n < 256 materials. Furthermore, memory
usage is reduced by the sparseness of mixed material cells;
often the vast majority of cells in a volume fraction dataset
do not contain interfaces. It is efficient to only subdivide
mixed material cells, thus allowing our method to scale
with complexity of the material interfaces rather than the
size of the problem domain.
Convergence In some applications, the quality of simulated
annealing can be strongly influenced by the annealing
schedule – i.e., how the temperature T changes over time.
We have found, however, that the annealing schedule is
not a crucial factor in our method. This is because the
entire system starts very close to a local minimum before optimization: pure cells heavily influence neighboring mixed cells, but do not change themselves. Setting the
temperature to a low constant allows the system to consistently converge to a reasonable reconstruction without a
complicated annealing schedule. For all results presented
in this paper we have used T = 0.25.
Neighborhood The neighborhood N and weight function
W used in Equation 1 are also important. In this paper we
consider the neighbors of subcell x to be its directly incident subcells – i.e., 8 neighbors in two dimensions, and
26 neighbors in three dimensions, etc. For time-varying
data, the neighborhood can also be extended over time to
encourage temporal coherence. The weight between two
subcells is simply the inverse magnitude of the offset between the two subcells.
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Anderson et al. / Discrete Multi-Material Interface Reconstruction for Volume Fraction Data

1019

Figure 2: Evolution in time of the two-dimensional fluid flows considered in this paper; interfaces were reconstructed by our method. On the
top, a bubble of low density fluid rises through a denser fluid. On the bottom, five fluids pass two cylinders (six total materials).

Accuracy The accuracy of our reconstruction in terms of
volume conservation is determined by the level of subdivision used for discretization (Equation 4). Higher levels of subdivision lower the error bound, however convergence will take longer. For d-dimensional rectilinear grids
we can define the subdivision rate R, such that S = Rd .
In practice, we have found that subdivision rates between
R = 5 and R = 10 produce good results with fast convergence in two and three dimensions. The upper bound on
error for a 2 material problem in three-dimensions is 0.8%
with R = 5, and 0.1% with R = 10 (125 and 1000 subcells per cell, respectively). Note that these bounds apply
to non-smoothed interfaces; in Section 7 we discuss the
empirical error of smoothed surfaces.

6. Results
We have tested our method across multiple volume fraction
datasets resulting from CFD simulations in two- and threedimensions. Results in this section were obtained with a
multi-threaded software implementation on an Apple MacBook Pro notebook computer (2.33 GHz Intel Core 2 Duo
processor, 2 GB memory, and an ATI Radeon X1600 graphics card).
Our first dataset was generated from a two-dimensional
simulation of a low density fluid bubble rising through a
denser fluid. The computational domain was a 642 rectilinear grid. The top row of Figure 2 provides an overview of
this flow, reconstructed by our method, as it evolves over
200 timesteps. The top row of Figure 3 compares our interface reconstruction to PLIC over a 13x10 cell window; our
reconstruction produces simpler, smoother interfaces while
preserving volume from the original data to within 1% error.
Subdivision was set to 102 subcells per mixed cell, and simulated annealing was performed for 10 seconds per timestep
prior to visualizing the material interfaces.
The next dataset is from a two-dimensional simulation of
five fluids passing two cylinders. The computational domain
was 128x64. Our reconstructions of this flow use a 102 subcell per cell subdivision. The bottom row of Figure 2 provides an overview of this flow, reconstructed by our method,
as it evolves over 256 timesteps. Due to the method of simulation, the cylinders and “empty” space (in grey) are modeled as a sixth material. While we show geometry of the
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Figure 3: Close-ups of regions reconstructed by PLIC (left) and
our method (right). Images in the top row are from the twodimensional bubble dataset; the bottom row shows a “T-junction”
between three materials in the two cylinders dataset.

cylinders for clarity, the geometry is neither part of volume fraction dataset, nor known to our MIR algorithm. In
the bottom row of Figure 3 we show a close-up of a 3x3
cell window in which a “T-junction” between three materials is located; our method, while discretized, better captures
the behavior of the interfaces around the junction. We also
use this flow to illustrate the convergence of our method.
Figure 4 shows a single timestep of this flow with approximately 7% mixed cells. Simulated annealing was performed
on different parts of the discretization labeling for different lengths of time: the top third was left in the initial state
without optimization, the middle third was optimized for 1
second, and the bottom third was optimized for 10 seconds.
While in the most complex cases, the upper error bound remains 2% due to discretization regardless of optimization,
the interfaces become simpler and smoother with brief optimization. Simulated annealing for longer than 10 seconds
per timestep does not significantly improve the results.
Our final dataset is an extension of the bubble simulation
to three dimensions: again, a low density fluid bubble rises
through a denser fluid. The grid is now 643 , and the simula-

1020

Anderson et al. / Discrete Multi-Material Interface Reconstruction for Volume Fraction Data

Figure 4: Simulated annealing was performed on different parts of the discretization labeling for different lengths of time: the top third was
left in the initial state without optimization, the middle third was optimized for 1 second, and the bottom third was optimized for 10 seconds.

tion consists of 100 timesteps. Figure 5 provides a split view
of interfaces reconstructed from this dataset as the bubble
bursts: on the left interfaces were extracted by isosurfacing
the smoothed discretization labeling (as described in Section 4), and on the right “surfaces” were generated by PLIC.
Subdivision was set to 53 subcells per cell, and simulated annealing was performed for 10 seconds per timestep prior to
visualization of the material interfaces. As part of the supplemental material to this paper, we include a movie of both interface reconstructions in a split view over all 100 timesteps.
Section 5 noted that the sparseness of cells containing material interfaces leads to memory savings when subdivision
is only performed over mixed cells. Figure 6 plots the percentage of mixed cells over time for each fluid flow dataset
considered in this paper. For both bubble datasets, the percentage is very low – below 6% – over all timesteps. For
the five fluids passing two cylinders dataset, the percentage
of mixed cells increases over time because the material interfaces become more complex. However, even for the most
complex timestep, the storage cost of the discretization is reduced approximately 90% by only subdividing mixed cells.
7. Conclusion
In this paper we have presented a discrete approach to MIR
based upon optimizing the labeling of fractional volume elements over a subdivided spatial domain. We introduced a
volume conservative swap move for the optimization process, and discussed methods for extracting and visualizing
material interfaces from a labeled discretization. Our technique gives significantly better results than previous meth-

ods, producing interfaces between multiple materials that are
continuous across cell boundaries for time-varying and static
data in arbitrary dimension with bounded error.
There remains, however, future work to be performed on
the algorithmics of discrete multi-material interface reconstruction:
Unstructured Grids We have only considered volume
fraction data over rectilinear grids; a logical extension of
this work is to support unstructured meshes. A straightforward approach might be to discretize the space around
mixed, unstructured cells with a regular subdivision, assign subcells to the cell containing their centroid, and to
proceed with optimization and visualization as described
in this paper.
Thin Interfaces Our method, like most others, can have
difficulty reconstructing thin interfaces. Figure 7 is an example. In our approach, reasonable discretization resolutions can be insufficient to allow thin surfaces to connect across a cell. Additionally, optimization of the Pottsmodel energy can produce “blobs” rather than thin interfaces due to its surface area and curvature minimizing
properties.
Smoothing As mentioned in Section 4, smoothing the labeling field prior to segmentation avoids unwanted visual
artifacts at the sub-cell level caused by discretization. After smoothing, however, the error bound discussed in Section 3 is no longer valid. Empirically we have found that
the small size of subcells limits the volume changing effects of smoothing: for instance, the average volume error
for the three-dimensional bubble shown in Figure 5 was
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

Anderson et al. / Discrete Multi-Material Interface Reconstruction for Volume Fraction Data

1021

Figure 5: Interface reconstructions of the three-dimensional bubble dataset as the bubble bursts. On the left, we show the interface extracted
from our discretization labeling; on the right is the discontinuous 3D PLIC reconstruction which has only one polygon per cell.

Other domains, besides simulation, are likely to benefit
from robust, volume conservative interface reconstruction
techniques. A concrete example is spectral imagery from
the field of remote sensing (e.g. [VGC∗ 93]). The pixels
of spectral images are sampled functions of radiance versus wavelength, rather than typical tristimulus RGB pixels.
From these spectral functions it is possible to estimate the ratios of different materials present at each pixel [SD93]. We
look forward to applying our methods in this setting to reconstruct sub-pixel interfaces within spectral images, as well
as to other problem with volume fraction data.
c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

12

Bubble (2D)
Bubble (3D)
Cylinder (2D)

10
8
Percent

approximately 7.5% after Gaussian smoothing of the labeling field. Increasing the discretization resolution to 83
subcells per cell approximately halves this error.
While the volume changing effects of smoothing are relatively small and difficult to perceive during visualization, it would be best to have the advantages of smoothing
while maintaining a tight error bound. In future work, we
intend to apply volume-conservative surface fairing techniques, such as those of Desbrun et al. [DMSB99] or Xiao
et al. [XLPF06], to this problem.
Energy Metric The Potts-model energy is not the only possible metric for the energy of a labeled discretization. In
the presence of domain-specific knowledge, such as specific material properties, other energy metrics might produce better results than the Potts-model energy.

6
4
2
0
0

0.2

0.4

0.6

0.8

1

Time

Figure 6: Percentage of mixed cells over time. Low percentages
yield large memory savings, since subdivision is only performed
upon mixed cells.

Figure 7: Thin interfaces (left, 10x10 grid) are difficult to reconstruct for both PLIC (middle) and our method (right).

1022

Anderson et al. / Discrete Multi-Material Interface Reconstruction for Volume Fraction Data

Acknowledgments
This work was performed under the auspices of the U.S. Department of Energy by Lawrence Livermore National Laboratory (LLNL) under Contract DE-AC52-07NA27344, and supported
by the Lawrence Scholar Program at LLNL. This work was also
supported by the Office of Science, U.S. Department of Energy under Contract No. DE-AC02-05CH11231 through the Scientific Discovery through Advanced Computing (SciDAC) program’s Visualization and Analytics Center for Enabling Technologies (VACET).
Christoph Garth was partially supported by the DFG IRTG 1131
based at the University of Kaiserslautern. Datasets in this paper
were generated using the open-source fluid solver Gerris [Pop03],
available at http://gfs.sourceforge.net. We have also used
VisIt (http://www.llnl.gov/visit), a free interactive parallel
visualization and graphical analysis tool, to produce certain visualizations. Finally, we would like to thank colleagues in the Institute
for Data Analysis and Visualization (IDAV) at UC Davis for their
support during the course of this work, and our reviewers for helping to make this a better paper.

References
[ACMS98] A LLAMANDRI F., C IGNONI P., M ONTANI C.,
S COPIGNO R.: Adaptively adjusting Marching Cubes output to
fit a trilinear reconstruction filter. In Proc. of Eurographics Workshop on Visualization in Scientific Computing (1998).
[BDS∗ 03] B ONNELL K. S., D UCHAINEAU M. A., S CHIKORE
D. R., H AMANN B., J OY K. I.: Material interface reconstruction. IEEE Trans. on Visualization and Computer Graphics 9, 4
(2003), 500–511.
[BL03] BANKS D. C., L INTON S.: Counting cases in Marching
Cubes: Toward a generic algorithm for producing substitopes. In
Proc. of IEEE Visualization (Oct. 2003), pp. 51–58.
[BSD∗ 00] B ONNELL K. S., S CHIKORE D. A., D UCHAINEAU
M. A., H AMANN B., J OY K. I.: Constructing material interfaces from data sets with volume-fraction information. In Proc.
of IEEE Visualization (Oct. 2000), pp. 367–372.
[BVZ01] B OYKOV Y., V EKSLER O., Z ABIH R.: Fast approximate energy minimization via graph cuts. IEEE Trans. on Pattern
Analysis and Machine Intelligence 23, 11 (2001), 1222–1239.
[DBTH07] D ILLARD S., B INGERT J., T HOMA D., H AMANN
B.: Construction of simplified boundary surfaces from serialsectioned metal micrographs. Trans. on Visualization and Computer Graphics 13, 6 (2007), 1528–1535.
[DMSB99] D ESBRUN M., M EYER M., S CHRÖDER P., BARR
A. H.: Implicit fairing of irregular meshes using diffusion and
curvature flow. In Proc. of SIGGRAPH (1999), pp. 317–324.
[DS05] DYADECHKO V., S HASHKOV M.: Moment-of-fluid interface reconstruction. Tech. Rep. LA-UR-05-7571, Los Alamos
National Laboratory, Oct. 2005.
[DS06] DYADECHKO V., S HASHKOV M.: Multi-material Interface Reconstruction from the Moment Data. Tech. Rep. LA-UR06-5846, Los Alamos National Laboratory, Dec. 2006.
[GDSS05] G ARIMELLA R. V., DYADECHKO V., S WARTZ B. K.,
S HASHKOV M. J.: Interface reconstruction in multi-fluid, multiphase flow simulations. In Proc. of International Meshing
Roundtable (Sept. 2005), pp. 19–32.
[GG92] G RANER F. M . C ., G LAZIER J. A.: Simulation of biological cell sorting using a two-dimensional extended Potts model.
Physical Review Letters 69, 13 (Sept. 1992), 2013–2016.

[HN81] H IRT C., N ICHOLS B.: Volume of Fluid (VOF) method
for the dynamics of free boundaries. J. of Computational Physics
39 (1981), 201–225.
[HSSZ97] H EGE H.-C., S EEBASS M., S TALLING D., Z ÖCKLER
M.: A generalized Marching Cubes algorithm based on nonbinary classifications. ZIB Preprint SC-97-05, 1997.
[JEPP04] JAMES E DWARD P ILLIOD J., P UCKETT E. G.:
Second-order accurate volume-of-fluid algorithms for tracking
material interfaces. J. of Computational Physics 199, 2 (2004),
465–502.
[JLSW02] J U T., L OSASSO F., S CHAEFER S., WARREN J.: Dual
contouring of Hermite data. ACM Trans. on Graphics 21, 3
(2002), 339–346.
[KGV83] K IRKPATRICK S., G ELATT C. D., V ECCHI M. P.: Optimization by simulated annealing. Science 220, 4598, 4598
(May 1983), 671–680.
[KZ02] KOLMOGOROV V., Z ABIH R.: What energy functions
can be minimized via graph cuts? In Proc. European Conference
on Computer Vision–Part III (2002), pp. 65–81.
[LC87] L ORENSEN W. E., C LINE H. E.: Marching Cubes: A
high resolution 3D surface construction algorithm. In Proc. of
SIGGRAPH (1987), pp. 163–169.
[Mer04] M EREDITH J. S.: Material interface reconstruction in
VisIt. In NECDC (Oct. 2004).
[NF97] N IELSON G. M., F RANKE R.: Computing the separating
surface for segmented data. In Proc. of IEEE Visualization (Oct.
1997), pp. 229–233.
[NW76] N OH W. F., W OODWARD P.: SLIC (Simple Line Interface Calculation). In LNP Vol. 59: Some Methods of Resolution of
Free Surface Problems (1976), van de Vooren A. I., Zandbergen
P. J., (Eds.), pp. 330–340.
[Pop03] P OPINET S.: Gerris: A tree-based adaptive solver for
the incompressible Euler equations in complex geometries. J. of
Computational Physics 190, 2 (2003), 572–600.
[RK98] R IDER W. J., KOTHE D. B.: Reconstructing volume
tracking. J. of Computational Physics 141, 2 (1998), 112–152.
[SD93] S ETTLE J., D RAKE N.: Linear mixing and the estimation
of ground cover proportions. International J. of Remote Sensing
14, 6 (1993), 1159–1177.
[VGC∗ 93] VANE G., G REEN R., C HRIEN T., E NMARK H.,
H ANSEN E., P ORTER W.: The airborne visible infrared imaging
spectrometer. In Remote Sensing Environment (1993), vol. 44,
pp. 127–143.
[WJMS03] W U Z., J OHN M. S ULLIVAN J.: Mutliple material
Marching Cubes algorithm. International J. for Numerical Methods in Engineering 58, 2 (July 2003), 189–207.
[WPS97] W RIGHT S. A., P LIMPTON S. J., S WILER T. P.: Pottsmodel grain growth simulations: Parallel algorithms and applications. Tech. Rep. SAND–97-1925, Sandia National Laboratories, Aug. 1997.
[Wu82] W U F. Y.: The Potts model. Reviews of Modern Physics
54, 1 (Jan. 1982), 235–268.
[XLPF06] X IAO C., L IU S., P ENG Q., F ORREST A. R.: A
feature-preserving and volume-constrained flow for fairing irregular meshes. In Computer Graphics International (2006),
pp. 197–208.
[You82] YOUNGS D. L.: Numerical Methods for Fluid Dynamics. Academic Press, 1982, ch. Time-Dependent Multi-Material
Flow with Large Fluid Distortion, pp. 273–285.

c 2008 The Author(s)
Journal compilation c 2008 The Eurographics Association and Blackwell Publishing Ltd.

