Shortest Traversal Path of n Circles in Layered Manufacturing Applications
Chang-Chien Chou, Yu-Kumg Chen, Shuo-Yan Chou
Ph.D. Candidate, Department of Industrial Management, National Taiwan University of Science
and Technology, and Lecturer, Cardinal Tien College of Healthcare & Management, Taiwan, R.O.C.,
Associate Professor, Department of Electronic Engineering, Huafan University, Taiwan, R.O.C.,
Professor, Department of Industrial Management, National Taiwan University of Science and
Technology, Taiwan, R.O.C.
{ D9101502@mail.ntust.edu.tw, ykchen@huafan.hfu.edu.tw, sychou@im.ntust.edu.tw }
Abstract
Layered manufacturing in rapid prototyping is to
fabricate prototype by using a laser beam to trace the
cross-sectional contours of a product layer by layer.
Such cross-sections of geometrical objects differ by
layers and generally have more than one continuous
contour in each layer. In an attempt to facilitate an
efficient approach for path planning, the problem is
simplified by approximating each of the continuous
contours with its minimum circumscribed circle. The tool
path planning for traversing all the contours in the same
cross-section can then be simplified as the path planning
of circles. With combing the algorithm of traveling
salesman problem (TSP) and the shortest traversal path
function of three circles, an odd-even circle adjusting
algorithm is proposed in this paper for deriving the
shortest traversal path of n circles. When the traversing
order of the n circles is obtained by the preprocessing
TSP algorithm, the shortest traversal path of n circles
can be derived in linear time. It is superior to that of the
random selection method. Experiments are carried out
for arbitrary n circles to demonstrate the computational
advantage of the proposed method.
Keywords--- layered manufacturing,
traversal path, computational geometry

shortest

1. Introduction
In the field of Rapid Prototyping [1], the technique
of Layered Manufacturing (LM) [2-5] obtains the tool
path by using laser beam to trace out the contours of the
geometric objects layer by layer. Shorter tool path [3, 5]
results in faster fabrication time. There are two popular

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

technologies in LM, the laminated object manufacturing
(LOM) [6] and the stereo lithography apparatus (SLA)
[1]. LOM is one of the cheapest rapid prototyping
technologies and it is excellent for making large parts
with moderate geometrical complexity. Figure 1(a)
shows an adhesive coating paper-like material placed on
a platform. The adhesive side is put down on a platform.
A heated roller passes over the material and sticks the
material to the platform. A laser beam traces the contours
of one layer of the part according to its CAD file. The
material that does not form part of the cross-section is
crosshatched out. The platform is then lowered with a
thickness of one layer. The new material of another layer
is stuck onto the previous layer. LOM repeats this
procedure until all cross-sectional layers have been stuck
together. Figure 1(b) illustrates a schematic example of
SLA. SLA can be used to make parts with complex
geometry and with a surface finish comparable to many
conventionally machined components. In SLA, a vat of
polymer contains a platform on which the part is built.
The platform can rise and fall within the vat. Initially, the
platform moves until it is just below the surface of the
liquid polymer. SLA first slices the product prototype to
the stereo lithography format file. A laser beam traces
out one cross-sectional slice of the part. Where the laser
hits the polymer and makes it solidified. The platform
then moves down one slice thickness of the part, and the
laser draws the next slice on a fresh layer of liquid
polymer. This slice of the part solidifies on top of the
previous set of slices. When all the slices have been
traced by the laser, the platform is removed from the vat
and excess liquid polymer is cleaned off the completed
part. Figure 2 enlarges the machining plane of Figure 1
for illustrating the tool path in LOM and SLA.

(a)

(b)

Figure 1. Two types of LM: (a) schema of LOM and (b) schema of SLA.

Figure 2 Tool path of Figure 1
The tool path planning [7] for the machined contours
on each layer is a traversal problem in the two
dimensional plane [3]. The previous works of the tool
path planning in LM [8-10] are based on the contours of
the CAD files with tessellated format. When the contours
are very complex, it will take a lot of time for these
methods to find out a shorter tool path. In order to
minimize the time needed for completing the fabrication
of LM, minimization of the machining time for each
layer is thus essential. Tang and Pang 2003 [4] enclosed
the contours by circles to obtain a maximal linear
intersection method for further computing a shorter tool
path. With using circles to represent the machined
contours, the tool path planning problem in LM can be

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

simplified as the problem for finding the shortest
traversal path of circles.
Given n points, the problem to determine a shortest
path that passes all points and then returns back to the
start point is called the traveling salesman problem (TSP)
[11,12]. The Branch-and-Cut algorithms are often used
to solve small number of points TSP problems [13-15]. If
the start point does not coincide with the end point, the
TSP problem can be regarded as an open path TSP
problem [16] which is a subset of TSP problem. When
points in the open path TSP problem are replaced by
circles except the start and end points, it becomes the
studied problem of this paper for deriving the shortest
traversal path of n circles.

2. Shortest Traversal Path of Three Circles
In 2006 Chou [17] transformed the problem of
finding the shortest traversal path of three circles into the
problem of finding the shortest traversal path of two
points and one circle. The traversal path, denoted as path,
is starting from point A and arriving at point P of circle C,
traverses the circumference of C for one circuit, departs
from P of C and eventually stops at point B as shown in
Figure 3. Let the center of circle C be coincided with the
origin and the coordinates of point A, B and P be (xA, yA),
(xB, yB), and (rcosθ, rsinθ) respectively, the distance

equation of the path from A to P and then P to B be
represented as A(θ ) which can be written as
( x A − r cos θ ) + ( y A − rsinθ ) +

A(θ ) =

2

b8 =

( x B − r cos θ ) + ( y B − rsinθ )

2

2

2

θ

x

Figure 3 Traversal path of 2 points and 1 circle
Based on the phenomenon of light reflection in
physics [18], Chou [17] simplified the shortest path
equations and resolved the eight roots of θ,

4

5

6

7

8

1
−1 1
= − cos ( a1 − a2 −
4
12
−1 1
= cos ( a1 − a2 −
4
21
−1 1
= − cos ( a1 − a2 +
4
12
−1 1
= cos ( a1 − a2 +
4
21
−1 1
= − cos ( a1 + a2 −
4
12
−1 1
= cos ( a1 + a2 −
4
21
−1 1
= − cos ( a1 + a2 +
4
12
−1 1
= cos ( a1 + a2 +
4
2

a3 − a 4 )
a3 − a 4 )
a3 − a 4 )
a3 − a 4 )

(1)

a3 + a 4 )
a3 + a 4 )
a3 + a 4 )
a3 + a4 ).

Where
a1 =
a2 =

r (b1 xB + b2 x A )
b1b2
1

b10

2

2

a3 = b10 −
a4 =

b11
3

+

1 b7
( + b8 )
b9 b8

1 b7
( + b8 )
b9 b8
.

3

8b1 b2 a2

Where
b1 = x A + y A
2

2

b2 = xB + y B
2

2

b3 = r (2( x A xB + y A y B ) + x A + y A ) + ( xB + y B )(r − 4 y A ) − 4 x Ab2
2

2

2

2

2

2

2

b4 = 2 x A xB + xB y A ( y A − y B ) + x A (2 xB − y B ( y A − y B ))
2

2

b5 = xB (−r + y A ) − 2 x A xB (r − y A y B ) + x A (− r + y B )
2

2

2

2

2

2

2

b6 = 36r (6b5 (b1 xB + b2 x A ) + b3b4 (b1 xB + b2 x A ) + 6b1b2b4 )
2

2

b7 = b3 + 48b1b2b5 + 24r b4 (b1 xB + b2 x A )
2

2

3b1b2

r (b1 xB + b2 x A )
2

+

2

2

2

2b1 b2

2

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

3

2

2

3. Algorithms

C

θ

3

The length of the shortest traversal path, denotes as L, is
thus obtained by choosing the smallest value from the
eight angle roots, i.e.,
L = min{A(θ1 ), A(θ 2 ), A(θ 3 ), A(θ 4 ), A(θ 5 ), A(θ 6 ), A(θ 7 ), A(θ 8 )} + 2π r (2)

P ( r cos θ , r sin θ )

3

b3
2

B ( xB , y B )

2

(b3 − 144b1b2b3b5 + b6 ) − b7

3

b11 = r (r (b1 xB + b2 x A ) − b1b2b3 (b1 xB + b2 x A ) − 4b1 b2 b4 ).

A( x A , y A )

1

2 3 b3 − 88b1b2b3b5 + b6 +

b9 = 12b1b2

b10 = −

y

⎧θ
⎪
⎪θ
⎪
⎪θ
⎪⎪θ
=⎨
⎪θ
⎪θ
⎪
⎪θ
⎪θ
⎪⎩

6

2

2

Finding the shortest traversal path of one circle with
a start point and an end point is the base model of the
studied problem. With combing the algorithm of TSP
and the shortest traversal path function of the base model,
i.e. equation (2), an odd and even circle adjusting
algorithm is proposed for deriving the shortest traversal
path of n circles as follows. Based on the start point, end
point, and centers of n circles, a TSP algorithm is firstly
introduced to find the shortest TSP path among these
points. From the order of the centers in this shortest TSP
path, the n circles are numbered as C1, C2, ..., and Cn,
accordingly. Figure 4(a) shows an example with n=4. An
initial set of path and its length L0 are derived with
choosing arbitrary points on these n circles. Figure 4(b)
shows the initial path of Figure 4(a). After obtaining the
initial path and its length L0, with fixing the points on the
even number circles and using equation (2) of the based
model, the new points on the odd number circles can be
computed to construct a new path and its new length Lo1 ,
where the new length Lo1 is less than or equal to the
initial length L0. Similarly, with fixing the points on the
odd number circles and using equation (2), the new
points on the even number circles can also be computed
accordingly. This yields another new path and its new
length Le1 , where the new length Le1 is also less than or
equal to the previous length Lo1 . The superscripts o and e
of L denote the new points on the odd and even number
circles are adjusted, respectively. The subscript
represents the number of times processed in the proposed
algorithm. Figure 4(c) shows the points on C2 and C4 are
fixed, and the points on C1 and C3 are adjusted. The new
length Lo1 of the new path is shorter than the initial length
L0. Similarly, the points on C1 and C3 are then fixed, and
the points on C2 and C4 are adjusted. The new length Le1
of the new path is also shorter than the length Lo1 . After
the second time processing, we can obtain the new paths
and lengths Lo2 and Le2 . The length Lo2 is less than or equal
to the length Le1 , and the length Le2 is less than or equal to
the length Lo2 , too. This odd and even circle adjusting
process is repeating until L − L ≤ ε , where ε is the given
threshold, and to be summarized as Odd_Even algorithm:
o
j

e
j

3

Algorithm Odd_Even(G, L, path)
Input: a graph G consists of a start point, an end point, and n
disjoint circles.
Output: the shortest path and its length L.
Step 1. Based on the centers of n circles and using the TSP
algorithm, derive the traversal order of n circles, C1,
C2, ..., and Cn;
Step 2. Choose an arbitrary point on each circle as the initial
point. According to the traversal order, connect these
points to form an initial set of path and its length L0;
Step 3. Set j=0;
j=j+1;
Step 4.
With fixing the points on each even circle and
Step 5.
applying equation (2) to adjust the points on each
odd circle, derive the new path and its length L .

Table 1 Experimental data of n=9
Traversal
Order
Start Point
C1
C2
C3
C4
C5
C6
C7
C8
C9
End Point

o

j

Set
Step 6.

o

L = Lj

;

With fixing the points on each odd circle and
applying equation (2) to adjust the points on each
even circle, derive the new path and its length L .

j

j

e

L = Lj

;

Step 7. Repeat steps 4 to 6 until Loj − Lej ≤ ε ;
Step 8. Out put the shortest path and its length L;
Step 9. Stop.

Start

0
150
100
250
320
420
430
620
500
700
800

450
400
150
180
300
420
250
380
100
200
50

radius
-60
50
35
40
55
35
90
75
55
--

Loj

0
4506.627

1
4436.173

2
4412.808

3
4412.733

Lej

4506.627

4413.679

4412.736

4412.732

Start

C2

C2

C1

C4

C4
C1

End

C3

(a)

C3

End

(b)

Start

Start
C2

Figure 5 Final traversal path of the Odd_Even
algorithm of the n=9 sample
A random selection method is introduced to be
compared with the Odd_Even algorithm. Based on
centers of the n circles, the TSP algorithm is also applied
in the random selection method to get the traversal order
of each circle. It then selects a random point on each
circle to form a traversal path. If the length of the
random selection path is shorter than that of the previous,
this path will replace the previous shortest traversal path
and be recorded as the shortest traversal path. Repeat this
random selection process until the predetermined number
of iterations is reached. Table 3 shows the lengths
derived from the random selection method for the n=9
sample with the repeated times j equals to 103, 104, ...,
and 107, respectively. When the repeated times j equals
to 107, the length of the traversal path is 4437.187cm.
The length is still longer than that of the Odd_Even
algorithm. More and more times are needed to achieve
the same length resulting from the Odd_Even algorithm.
The times needed for the random selection method is
exponential.

C2
C4

C1

C1

C4

End

C3

C3
End
(c)
(d)
Figure 4 Paths adjusting in Odd_Even algorithm:
(a) after step 1, (b) after step 2, (c) after step 5, and
(d) after step 6

4. Experiments
Table 1 is the experimental data for n=9 circles. The
unit used in this table is centimeter. The 9 circles locate
on the layer with 800x600cm2. The computational
precision follows the IEEE 754 stanard for four bytes
floating point number [19]. It provides a seven digits
precision of decimal system. Since the length of the path
is between 4400cm and 4600cm, the smallest value is
used to be the threshold in computing, i.e., ε =0.001cm.
Table 2 lists the length varied during the processing of
the Odd_Even algorithm. Experimental results show that
the value of L − L is convergent to 0.001 when j=3. This
forces finishing the loop of odd and even circle adjusting
process and yields the final path as shown in Figure 5.
The length of the final traversal path is 4412.732cm.
o
3

y-coordinate

Table 2 Lengths of Loj and Lej for n=9 sample

e

Set

x-coordinate

e
3

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

Table 3 Lengths derived from the random method
j

103

104

105

106

107

L

4679.608

4525.601

4474.897

4458.39

4437.187

In order to verify the effectiveness of the Odd_Even
algorithm, the simulated data with different values of n
are used to test the Odd_Even algorithm. Figure 6(a)
shows the simulated data with n=100 in the same layer of
800x600cm2. Figure 6(b) depicts the final path of Figure
6(a). Table 4 lists the lengths varied from the processing
of the Odd_Even algorithm for the two different
simulated data. Both of the final paths are convergent
when j=3.

method is to choose the shortest path from the mn paths,
it is in this manner to be regarded as exponential time
complexity. The time to compute the length of a path in
the loop of the Odd_Even algorithm depends on the
number of circles, i.e., n. According to the experiments,
the convergent time j depends on the acquired
computational precision and is constant, say K under a
given computational threshold. The total time in the loop
of steps 4 through 7 is thus equal to KO(n) ∈ O(n). The
total time complexity of this Odd_Even algorithm is thus
depending on the preprocessing TSP time.
L

Random Selection
Odd_Even

(1, 5022.807)

5000
4900
4800

(a)

(1.748, 4748.737)

4700
(3.087, 4617.647)
(3.847, 4552.107)

4600

(4.902, 4486.567)
(5.932, 4460.347)
(8.138, 4434.127)

4500
4400

Figure 6 Simulated data with n=100: (a) input
circles (b) final traversal path
Table 4 Lengths varied in the Odd_Even
algorithm with different n
n

1

2

3

5

4

6

7

8

log10 j

Figure 7 Relationship of L and j for Odd_Even
and random selection method

(b)

j
0
1
2
3

( 0.903, 4412.732)
0

9

100

4506.627
4413.679
4412.736
4412.732

19846.86
16317.40
16293.98
16293.97

5. Analysis
Let the x-axis be the logarithm of the iteration time j
and the y-axis be the length L of the traversal path. By
excluding the preprocessing TSP time and using the n=9
sample, the relationship between L and log(j) for the
Odd_Even algorithm and random selection method can
be drawn as two polylines shown in Figure 7. The
experimental results in Figure 7 reveal that the
Odd_Even algorithm is significantly faster than that of
the random selection method.
Time consumed in the random selection method
depends on the predetermined number of iterations. If
there are n circles and randomly select m points on each
circle in a two dimensional plane, that will construct mn
permutations of the traversal path. The random selection

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

Randomly select arbitrary initial points on each circle
in step 2 of the Odd_Even algorithm does not affect the
convergent times j. To illustrate the correctness of this
property, three different initial points cases with respect
to the n=9 sample are addressed as Figures 8(a), 8(b),
and 8(c), which are named Case I, Case II, and Case III,
respectively. The initial lengths of the traversal path for
Case I, Case II, and Case III are 4506.627cm,
5740.933cm, and 5225.08cm, respectively. Table 5
shows the lengths varied during the processing of the
Odd_Even algorithm. The shortest traversal paths of
these three cases are all obtained when j equals to 3.
Meanwhile, the three convergent lengths are identical to
be 4412.732cm. The method of randomly select arbitrary
initial points is thus sufficient to be quoted in step 2.

(a)

[2]
[3]

[4]

(b)

[5]
[6]
[7]
[8]

(c)
Figure 8 Different initial points cases for n=9
sample:(a)Case I, (b)Case II, (c)Case III

[9]
[10]

Table 5 Lengths varied in different initial
points cases
j

Case I

0
1
2
3

4506.627
4413.679
4412.736
4412.732

Case II
5740.933
4416.973
4412.733
4412.732

Case III
5225.080
4417.350
4412.736
4412.732

6. Conclusions
With using the function of the base model and TSP
algorithm, an Odd_Even algorithm is proposed for
solving the shortest traversal path of n circles in this
paper. When the step of finding the traversal order of the
machined circles in the proposed algorithm is obtained,
the shortest traversal path of n circles can be derived in
linear time. Experimental results had demonstrated this
superior property and the proposed algorithm is thus
applicable in computer system to help the device
planning the shortest tool path for the LM-like real world
applications. However, when the machined contours are
not enclosed by circles, the problem becomes more
complex and is one of the future works. In addition, if
the base model of two points and one circle can be
expanded to two points and one sphere, the algorithm for
finding the shortest traversal path of n spheres will be
developed in the future, too, which is essential in 3D
computer graphics applications.

References
[1]

C.K. Chua, S.M. Chou, and T.S. Wong. A study of the
state-of-the-art rapid prototyping technologies. The

Computer Graphics, Imaging and Visualisation (CGIV 2007)
0-7695-2928-3/07 $25.00 © 2007

[11]
[12]
[13]
[14]

[15]
[16]

[17]

[18]
[19]

International Journal of Advanced Manufacturing
Technology. 14, 146-152. 1998.
K. Castelino, R. D’Souza, and P.K. Wright. Toolpath
Optimization for Minimizing Airtime During Machining.
Journal of Manufacturing Systems. 22(3), 173-180. 2003.
J. Majhi, R. Janardan, M. Smid, and P. Gupta. On Some
Geometric Optimization Problems in Layered
Manufacturing. Computational Geometry: Theory and
Applications. 12, 219-239. 1999.
K. Tang, A. Pang. Optimal connection of loops in
laminated object manufacturing. Computer-Aided
Design. 35, 1011-1022. 2003.
P.K. Wah, K.G. Murty, A. Joneja, and C.C. Leung. Tool
Path Optimization in Layered Manufacturing. IIE
Transactions. 34, 335-347. 2002.
J.P. Kruth. Material incress manufacturing by rapid
prototyping techniques. Annals of the CIRP. 40(2), 603614. 1991.
K.G. Murty. Operations Research Deterministic
Optimization Models. Prentice Hall. 1995.
P. Kulkarni and D. Dutta, An accurate slicing procedure
for layered manufacturing. Computer-Aided Design
28(9), 683-697. 1996.
R. Jamieson and H. Hacker. Direct slicing of CAD
models for rapid prototyping. Rapid Prototyping Journal
1(2), 4-12. 1995.
J.H. Bohn, Removing zero-volume parts from cad
models for layered manufacturing. IEEE Computer
Graphics and Applications. 15(6), 27-34. 1995.
E.L. Lawler, J.K. Lenstra, A.H.G. Rinnooy Kan, and D.B.
Shmoys, The Traveling Salesman Problem. Ch2, John
Wiley & Sons. 1985.
G. Gutin and A.P. Punnen. The Traveling Salesman
Problem and Its Variation. Ch1. Kluwer Academic
Publishers.Dordrecht. The Netherlands. 2002.
M. Fischetti, J.J. Salazar-González, and P. Toth. Solving
the Orienteering Problem through Branch-and-Cut.
INFORMS Journal on Computing. 10(2), 138-148. 1998.
H. Hernández-Pérez and J.J. Salazar-González. Branch
and Cut algorithm for a traveling salesman problem with
pickup and delivery. Discrete Applied Mathematics.
145(1), 126-139. 2004.
M. Jünger and S. Thienel. Introduction to ABACUS- A
Branch-and-Cut System. Oper. Res. Lett., 22, 83-95.
1998.
S. Cutini, A. Di Ferdinando, D. Basso, P. Bisiacchi, and
M. Zorzi. A Computational Model of Human Planning in
the Traveling Salesman Problem. In Proceeding the 27th
Annual Cognitive Science Conference. Stresa, Italy, 524529. 2005.
S.Y. Chou, C.C. Chou and Y.K. Chen. Deriving
Minimum Traversal Function of Three Circles. In
Proceeding IEEE International Conference on Systems,
Man, and Cybernetics. Taipei, Taiwan, 2825-2830.
October 2006.
J. Dijksterhuis. Once Snell Breaks Down, From
Geometrical to Physical Optics in the Seventeenth
Century. Annals of Science. 61, 165-185. 2004.
IEEE 754: Standard for Binary Floating-Point Arithmetic
Specification. url:http://grouper.ieee.org/groups/754/

