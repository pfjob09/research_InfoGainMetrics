2012 Ninth International Conference on Computer Graphics, Imaging and Visualization

An Approach to the Approximation of Rational B´ezier Curve
Chitsanuphong Thanutong, Natasha Dejdumrong
Department of Computer Engineering
King Mongkut’s University of Technology Thonburi
Bangkok,Thailand
Email:Chitsanuphong t@hotmail.com, natasha@cpe.kmutt.ac.th

Tanatep Techopittayakul
Department of Computer Science
King Mongkut’s University of Technology North Bangkok
Bangkok,Thailand
Email:tept44@gmail.com

perform calculation. Nevertheless, the implementation of the
algorithm causes a complexity of O(2n ) [4].
Two major problems have been found in previous literature works [2][3][4]. First, a curve rendering is very
time consuming due to the complexity of the curve equation. Second, the method was not suitable for using with
raster display devices because the algorithm works with real
numbers. Our work can solve these problems by using the
conversion to non-rational B´ezier curve [5] and the technique
based on scan conversion of B´ezier curve [6]. More details
are provided in the next section.

Abstract—Based on the works of scan conversion of B´ezier
curve, it has been proved that using degree elevation with
Bresenham’s line algorithm to construct a B´ezier curve is the
fastest way. In this paper this idea has been applied to construct
a rational B´ezier curve by converting rational B´ezier control
points into non-rational B´ezier control points. Then use the
degree elevation technique to construct the curve. This method
is proven to be faster than any existing methods for rendering
rational B´ezier curve e.g. rational Bernstein basis function.
Moreover, the scan conversion used in this method makes it
suitable for raster display devices.
Keywords-Scan Conversion; Rational B´ezier Curve; Degree
Elevation;

I. I NTRODUCTION

II. M ETHODOLOGY

Nowadays, geometric modelling is useful in many ﬁelds
such as computer graphics, computer aided geometric design
(CAGD), and civil engineering. One of the most important
tools in geometric modelling is a parametric curve such as a
B´ezier or B-spline [1]. Up till now, there are a few methods
that can construct a B´ezier curve such as a Bernstein basis
function and the de Casteljau’s algorithm.
A rational B´ezier curve has been commonly used in the
ﬁeld of CAGD and graphics. It is derived from a B´ezier
curve by adding adjustable weights to make the curve closer
to the arbitrary shape. The basis function of a rational B´ezier
curve is described as follows:

Based on the works of scan conversion of non-rational
B´ezier curves [6][7][8], it has been proved that using the
degree elevation technique to construct a B´ezier curve is the
fastest way. Moreover, there is a work which proved that
the degree elevation of rational B´ezier curves is valid [9].
Thus, a scan conversion of rational B´ezier curves can be
done by applying two previous methods. First, convert the
given rational B´ezier control points to non-rational B´ezier
control points [2]. Then use the new set of control points
for the scan conversion of a B´ezier curve [6].
Since a rational B´ezier curve has a set of weights, it cannot
be represented by the same curve as a non-rational B´ezier
with the same control points. Thus, we have to convert the
rational B´ezier control points and their weights into nonrational B´ezier control points. This method was invented
by Aphiruckmatakul [5]. A rational B´ezier curve of degree
m, denoted by {bi }m
i=0 with the predeﬁned weights given
by {wi }m
ezier
i=0 , can be transformed into a non-rational B´
curve of degree n with control points denoted by {pj }nj=0 .
The conversion matrix can be deﬁned as follows:

B(t) =

n
n
i
n−i
· bi · w i
i=0 i · t · (1 − t)
,
n
n
i
n−i
· wi
i=0 i · t · (1 − t)

(1)

where n is the degree of the curve, pi is a set of control
points, and wi is a set of weights.
However, using a basis function to calculate points on the
curve is time-consuming due to a complexity of mathematic
equations. Another way of constructing a rational B´ezier
curve is using the de Casteljau’s algorithm. This method
was invented by Paul de Casteljau, and its rational version
was provided by Gerald Farin [1]. The demonstration was
published in 1959 [2] and 1963 [3] by its inventor. The
advantage of this technique is that it can be done by using
recursive programming which is easy for implementation.
However, it essentially required large memory in order to
978-0-7695-4778-7/12 $26.00 © 2012 IEEE
DOI 10.1109/CGIV.2012.25

⎡
⎢
⎢
⎢
⎣

p0
p1
..
.
pn

⎤
⎥
−1
⎥
⎥ = (MwT · Mw ) · MwT · M
⎦

⎡
⎢
⎢
·⎢
⎣

w0 b0
w1 b1
..
.

⎤
⎥
⎥
⎥,
⎦

(2)

wm bm

where the (m + n + 1) × (n + 1) matrix Mw is deﬁned as
23

follows:

⎡

c0,0 w0
c0,1 w1
..
.

⎢
⎢
⎢
⎢
⎢
Mw = ⎢
⎢ c0,n wn
⎢
0
⎢
⎢
..
⎣
.
0

0
c1,0 w0
..
.

...
...
..
.

c1,n−1 wn−1
c1,n wn
..
.

...
...
..
.

0

...

⎥
⎥
⎥
⎥
⎥
cm,0 w0 ⎥
⎥.
cm,1 w1 ⎥
⎥
⎥
..
⎦
.
cm,n

And the (m + n + 1) × (m + 1) matrix M
follows:
⎡
c0,0
0
...
0
⎢ c0,1
c
.
.
.
0
1,0
⎢
⎢ ..
..
..
..
⎢ .
.
.
.
⎢
M =⎢
⎢ c0,n c1,n−1 . . . cm,0
⎢ 0
c1,n
. . . cm,1
⎢
⎢ .
.
..
..
..
⎣ ..
.
.
0
where
cij =

0
n
i

...

m
j
m+n
i+j

⎤

0
0
..
.

(3)

is deﬁned as
⎤
⎥
⎥
⎥
⎥
⎥
⎥,
⎥
⎥
⎥
⎥
⎦

Figure 1. The result from experiment to ﬁnd k value for 800 × 600
resolution.

(4)

3) Round off control points calculated from step (2) to
make integer values.
4) Eliminate all duplicated control points from step (3).

cm,n

.

END OF ALGORITHM
Note that the k value in this algorithm is the suitable
times of degree elevation that is enough to generate a
smooth curve for each resolution [6]. The process of
calculating k values is from the experiment that tried to
ﬁnd the maximum number of degree elevation times. It
makes the curve smooth where there is no gap on the
curve path. The appropriate k values from second degree
to twenty-ﬁfth degree for 800 × 600, 1024 × 768, and
1280 × 768 resolution are displayed in Figures 1 - 3.
Furthermore, the degree elevation technique used in the
mentioned scan conversion algorithm was applied to only
the 8/10 middle part of the curve since both ends of
the curve are the ﬁrst parts that satisfy the smoothness
during the degree elevation process [6]. This has been
done to reduce the time consuming by the algorithm where
both ends of the curve are rendered linearly using the
Bresenham’s line algorithm [10]. Therefore, the k values
over the twenty-ﬁfth degree still use the same value as in
the algorithm. Then make their both ends smooth by using
the Bresenham’s line algorithm.

(5)

It has been proved that this method can give accurate
results in the literature work [5]. Thus, we can use this
method to ﬁnd control points of the corresponding nonrational B´ezier curve. Then, use the method of scan conversion to construct a curve by the degree elevation technique
as follows:
ALGORITHM : Scan Conversion of a Rational B´ezier
Curve
Input: A given set of control points of a rational B´ezier
curve denoted by {b0 , b1 , b2 , ..., bm }, and a given a set of
weight denoted by {w0 , w1 , w2 , ..., wm }, where m is the
degree of a rational B´ezier curve.
Output: Coordinates of pixels along the curve path
BEGIN
1) Convert rational B´ezier control points into the corresponding non-rational B´ezier control points by using
a conversion matrix (2). The result is a set of B´ezier
control points denoted by {p0 , p1 , p2 , ..., pn }.
2) Generate a B´ezier curve corresponding to the new set
of control points. Then elevate the degree of the curve
k times.
IF (The resolution == 800 × 600)
THEN k = 3500
IF (The resolution = 1024 × 768)
THEN k = 4500
IF (The resolution = 1280 × 768)
THEN k = 6000

III. R ESULT
A. Comparisons between the purposed method and existing
methods
The purposed algorithm is considered the fastest way
to construct a B´ezier curve because the method of scan
conversion of non-rational B´ezier curve based on the degree
elevation technique had been proved fastest method to construct B´ezier curves [6][7][8]. Figure 4 presents the results
of the purposed algorithm which is better than a rational
basis function method.

24

O(n · ln(n)). Thus, the overall of the purposed algorithm is
faster than the basis function which has the time complexity
as O(n2 ). The following examples show rational B´ezier
curves rendering using the purposed algorithm compare with
the basis function method.
B. Examples of speed comparison
In this section, the examples of speed comparison between
using the purposed algorithm and basis function of rational
B´ezier curve are displayed. All algorithms are programmed
using the Eclipse IDE for Java Developers version Helios
3.6.1 running on CPU Core i7 2.0 GHz with 4 GB of RAM.
1) Example 1: crunodes: Given a rational B´ezier
curve with a set of control points {(300, 450), (500,
250), (200, 250), (500, 450)} and a set of weights {1,1,8,1}.
The result is shown in Figure 5.
2) Example 2: cusp: Given a rational B´ezier curve
with a set of control points {(70, 260), (180, 130), (80,
130), (250, 260)} and a set of weights {5, 8, 8, 5}. The result
is shown in Figure 6.
3) Example 3: symmetric curve: Given a rational
B´ezier curve with a set of control points {(0, 0), (50,
50), (100, 100), (150, 100), (200, 50), (250, 0)} and a set of
weights {8, 8, 8, 8, 8, 8}. The result is shown in Figure 7.

Figure 2. The result from experiment to ﬁnd k value for 1024 × 768
resolution.

IV. C ONCLUSIONS
Our method performs a scan conversion of rational B´ezier
curves based on the preliminary work of scan conversion of
non-rational B´ezier curves. The algorithm converts rational
B´ezier control points into non-rational B´ezier control points.
Then uses the preliminary scan conversion algorithm to
construct the curve. This is the fastest way to construct a
rational B´ezier curve compared to another methods as shown
in the result. Although the algorithm has to convert rational
B´ezier control points into non-rational control points, it still
has low complexity as O(n). This new method can be easily
applied to raster graphic display devices such as an LCD
screen since the output is in pixel format.

Figure 3. The result from experiment to ﬁnd k value for 1280 × 768
resolution.

Although the purposed algorithm has to convert rational
B´ezier control points into non-rational B´ezier control points,
it is still faster than using a basis function of rational B´ezier
curve. This happens because the conversion of control points
has low complexity in time as O(n). Moreover, the scan
conversion of non-rational B´ezier curve has complexity as

Figure 4.

Figure 5. A rational basis function constructs this curve in 267 milliseconds while the purposed algorithm uses only 96 milliseconds.

Computational time of two methods.

25

[7] C. Thanutong, N. Dejdumrong, Approximating B´ezier Curve
by Using Degree Elevation, The 7th International Conference
on Computing and Information Technology, pages 155-160,
2011.
[8] C. Thanutong, N. Dejdumrong, Scan Conversion for B´ezier
Curve Using Degree Elevation Technique, The 8th International Joint Conference on Computer Science and Software
Engineering, pages 214-219, 2011.
[9] H. Youdu, Su Huaming, Lin Hongwei, A Simple Method for
Approximating Rational B´ezier Curve Using B´ezier Curve,
Computer Aided Geometric Design, 2008.

Figure 6. A rational basis function constructs this curve in 227 milliseconds while the purposed algorithm uses only 74 milliseconds.

[10] J. E. Bresenham, Algorithm for Computer Control of a Digital
Plotter, IBM Systems Journal, 1965.

Figure 7. A rational basis function constructs this curve in 152 milliseconds while the purposed algorithm uses only 67 milliseconds.

ACKNOWLEDGMENT
This work was supported and partially funded by the
laboratory of CAGD, Animation and Games (CADLAB),
Department of Computer Engineering, KMUTT. Thanks for
all motivation and suggestion from our advisor, colleague,
and senior members.
R EFERENCES
[1] G. Farin, Curve and surface for CAGD, Morgan Kaufmann
publish, 2002
[2] P. de Casteljau, Outillages methods calcul. Technical report,
A. Citroen, Paris, 1959.
[3] P. de Casteljau, Courbes et Surfaces a Poles. Technical report,
A. Citroen, Paris, 1963.
[4] C. Aphirukmatakun, and N. Dejdumrong, An Approach
to Polynomial Curve Comparison in Geometric Object
Database, the 2nd International Journal of Computer Science,
pages 161-167, 2007.
[5] C. Aphirukmatakun, and N. Dejdumrong, An Approach to the
Feature-Based Comparisons for the Rational Curves, the 5th
International Conference Computer Graphics, Imaging and
Visualization, pages 115-120, 2008.
[6] C. Thanutong, N. Dejdumrong, A New Scan Conversion of
B´ezier Curve, The 6th South East Asian Technical University
Consortium, 2012.

26

