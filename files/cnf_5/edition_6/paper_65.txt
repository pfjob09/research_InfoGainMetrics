Dynamic adaptation of user interfaces to enhance information management of a
building construction project
Stephane Lasserre, Farid Ameziane
B+H Architects (Shanghai, China), Marseille School of Architecture (Marseille, France)
stephane.lasserre@bharchitects.com.cn, farid@ameziane.org
Abstract
Our proposed research project is to enable partners
of a construction project to share all the technical data
produced and handled, during the building production
process by building an information system through the
use of internet technology. Our project inherits from
PLM (Product Lifecycle Management) research in
building construction Industry. The system links
distributed databases and allows building partners to
remote access user-relevant information. This paper
covers this feature and we focus more widely on data
access through the help of adaptable interfaces. These
interfaces are built dynamically based on a user profile
and the current stage of the building's life cycle. It
consists of interactive 3D representations of building
entities available through web services, that link to
technical descriptions (E.g.: Walls, Slabs, and Windows).
Different rendering methods are chosen to highlight each
object’s state.

1. Introduction
Building industry involves many teams from
different fields that have a specific role along the
building life cycle [1]. These teams (architects,
engineers, projects managers, material sourcing, lawyers,
construction teams, etc.) contribute to one part of the
building completion. They are located in different
geographical parts which have local constraints like
specific regulations, work practices and contract
negotiations. In such a context, normalization and
standards are more difficult to develop than any other
industrial field, were subcontractors and suppliers are
often the same. In addition, partners’ contract will
generally end with the project. It means that they will not
necessarily work together anymore and that new rules for
cooperation must be set up for the next project.
The teams are using different tools and software that
are little or no interoperable. It means that unnecessary
data is generated during the construction process and the
information is always more fragmented by
heterogeneous systems. Moreover, only one part of this
information is relevant for each actor to support its
expertise.

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

Theses aspects are dramatically increased in China,
where time schedules for information delivery are
shortened and province regulations always specific .
For every project, huge amount of data must be
produced in a minimum time, since the construction
teams are working 24 hours a day. The time given to
deliver quality documents and accurate information is
too short. We believe that in a few years, China will face
problems in real estate management, when the properties
have to be maintained or the function has to be changed.
The documents that were produced all along its life cycle
are often lost or not given “as built” or incomplete.
Given such a working context, the goal of our
research program is to improve information sharing. Our
purpose is to share and extract data from the building
description, to keep track of all the design changes, and
ensure information continuity along the building life
cycle. In this perspective, we build an information
system framework that supports cooperative work. Our
information model takes advantages of emerging
standards such as IFC (Industry Foundation Classes) in
the construction field.
To access the data, we generate dynamically 3d
interfaces from the building morphology. They link to
exhausted descriptions such as materials and technical
data.

2. Data Exchange in Building Construction
Building production is a non-linear complex
activity. It is sequenced by distinct stages in which many
actors contribute to the project description with their own
point of view and skills. The teams involved are working
towards the same goal: the completion of the
construction project (figure 1). Building related
documentation consists of both graphical and textual
pieces of information that complements each other.
Graphic drawings (mostly 2D or 3D) are a common way
to represent a building and to support cooperative
exchanges between actors.
Most of the time, actors use specific systems to
assist them in their expertise (HVAC softwares, Wind
simulation, acoustic simulation, etc.). The problem is that
the semantic added is lost during file exchanges, since
there are no real standards in our field.

of the construction, it will assist the landlord for property
management.
To
improve
information
continuity
and
fragmentation along the building life cycle, this project
structure information within a conceptual schema of data
based on the knowledge fields of building construction.
This schema allows to instantiate a consistent group of
entities in a Data Base Management System, from which
collaborative work can be set up. Each partner can access
to a specific building representation that depends on his
requirement and the scope of his work. (Figure 2)
Multimedia content: 3D, 2D, texts,
images, etc.

Figure 1 the completion of technical drawings
using dedicated soft wares
Many file exchange formats were proposed to
support this problem of data exchange between
heterogeneous CAD systems: DXF, DWG, IGES, SET,
VDA, CALS, STEP and more recently Industry
Foundation Classes (IFC) from the IAI (International
Alliance for Interoperability) [3]. For strategic reasons or
implementations difficulties, CAD softwares are still
experiencing problems to inter-operate efficiently with
one another [2].
IAI is the most advance, because it involves main
CAD system firms, a large population of CAD users,
institutional partners and administrations like CORENET
in Singapore or CNRS in France. This international
program is based on a strong analogy between the
building construction field and the industrial field. It
inherits from the results of STEP standard.
The goal is to provide tools for supporting
concurrent engineering improve co-operation between
actors and ensure information continuity during the
building production processes. The various research
works adopts two major points of view to describe a
building (as part of a product/process approach):
• The focus on the technical data of constructions
works (Wall, Slabs, Doors, etc.)
• The focus on the process description that leads
the construction of these building entities.

3. The SYSBAT project
Our work originates from the results of the research
projects we introduced before and the project
“Communication and CAD Tools” developed in
GAMSAU, UMR CNRS 694, Marseille, France. It aims
at providing network architecture and services that brings
together, and promote co-operation between actors. This
information system for building construction is set up
during the engineering stage (the design of the building
is confirmed, working drawings need to be supplied to
teams on site) and support construction stage. At the end

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

project
Building information
information

Building aggregate views / profiling
/ dynamic access
Engineering views
(Architect, partners, …)
Construction schedules

Building database
Facility Management views
.

.

www

Views to support decisions

://
Http

Figure 2 Overview of the « Communication and
CAD Tools » project.
Our work was led by the following assumptions:
• the knowledge of the building construction field
is distributed, but it can be accessed to through
a network,
• a building can be described by a set of
construction works and the spaces it contains.
This is related to the construction economist's
point of view,
• the level of information is increasing step by
step, and every partner can access it,
• we assume that a 3D CAD model can be
elaborated when the global design is confirmed.
This 3D model consists of a set of building
entities. Their morphology and their description
would evolve later on.
To answer these assumptions, we produced a
conceptual data diagram which describes the building
through the construction works it is composed of (Wall,
Openings, Slabs, etc.) and the process attached to it. The
schema is Object Oriented [4] and consists of a set of
classes that inherit from a generic class "BuildingEntity".
These classes are organized in packages that represent a
specific domain.
To follow normative approaches and best practices
in our field, we integrate some classes of the IFC R2.xx

model, as well the French standard BATIBASE (a
building material classification).
We want to demonstrate that since there are still no
real standards in the construction field, it is necessary to
develop an open schema that can be enhanced according
to local needs and even projects.
A typical building entity class consists of:
• A description of its morphology (it is based on
IFC specifications; in our web-based
prototypes, it is dynamically converted into a
VRML97 / X3D stream)
• A set of attributes or associations that
references technical data, suppliers, material
properties, etc.
• A set of methods and interfaces that allow
accessing to the entity, manage security access,
define actor’s privileges, and implement
specific behaviors.
Then we provide views on the system that allows
users to access to a wide range of building
representations such as a single entity, a set of similar
entities (building structure) or a set of heterogeneous
entities (a space).
For example, a wall might belong both to a corridor
and a room. Class “Wall” has a “1..*” association with
class “Space”. User would call a method
getReverberationTime() declared in Class “Space”, that
return a time value after summing all the walls acoustic
properties surrounding the room.

compile documents into specific folders. These folders
are related to teams’ domain (electrical, thermal,
lighting, etc.).
By analogy, our concern is to organize information
according to different points of views, be able to extract
user-relevant data from the information system and
notify changes among the teams. In that perspective, we
assign to each actor a user profile that depends on his
professional field and his role in the project. Since the
role of an actor is changing according to the schedule, his
profile is dynamic and his privileges can be adjusted.
Basically, there are no reasons for an acoustician to
change the dimensions of a beam without requesting an
authorization. There are also no major reasons for an
engineer to change the thickness of a slab when the
structure was confirmed and the project is on site.
Since we do not precisely know each actor’s needs,
a profile can be customized in the limit of given
privileges. These privileges are set up by a higher
hierarchy.
PROFILE_PRIVILEGE
METHOD_VISIBILITY = R, X, RWX
AT T RIBUT E_VISIBILIT Y = R, X, RWX

1..*
ACTOR

exportPri vilege()
importPrivilege()
cl onePrvi lege()

BUILDING_STAGE_ENUM

+privileges

+export
1

+partner

profil ittin? ant :
gestion locale

File

1
ACTOR

1
<< Interf ace> >
CORBA_INT ERFACE

BUILDING_ENTITY
+object

1

profil ittin? ant :
acc? distant

PROFILE
METHOD_VISIBILITY = yes, no
ATTRIBUTE_VISIBILITY = yes, no

Figure 4 the Profile model
TASK_RESSOURCE
HUMAN_RESSOURCE
SPACE

EXPERTISE

CONSTRUCTION_WORKS
ROOT

CORBA_RESSOURCE

PRODUCT

REFERENCE

IFC_RESSOURCE

CSTB_RESSOURCE
ENUMUMERATION

Figure 3 the Information organization - Overview
of main packages of classes.

4. User Profiling
Depending on a building construction project, the
type of actors involved, the scope of their work, and their
needs may be adjusted [5]. Once the global design is
confirmed, the frequency of exchanges is critical and the
amount of data is increasing. In order to simplify
building representation, in traditional practices, we often

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

The Building Information Model (BIM) introduces a
new approach for representing the building. The
decomposition into basic entities not only reflects
practices in our field but also ease access to specific
information. Unfortunately, it increases the amount of
data, and specially the size of the 3d models.
To limit data transfers and get the most accurate
view of the building, users can select precisely the
information they need given a profile.
To do so, we consider 3 levels of information that
can be profiled:
- general (building context, quotation, location),
- entity (a class that represent a building element),
- and lexical (the properties and the methods of the
class).
This issue is very important in terms of security, but
also to optimize requests on the server.

4. Building Entities Life Cycle
To support cooperative work efficiently, we believe
that an accurate representation of the building is “nonstatic” and must be enhanced by entities life cycle
integration. We will focus on data changes (versioning)
and object status.
To keep track of design changes, we create a new
instance of the class that represent the building object
and indicate the latest version. Users are not allowed to
make changes directly on an instance, for security and
coherence purpose. Given an instance, we will call
“design contribution by an actor” the difference with its
previous version. By tracking the value added by each
actor, we can potentially find design problems, figure out
responsibilities and have a feedback on best practices
later on.
We also associate a class “StateEnum” to the generic
class “BuildingEntity” that specify the object “state”
(undefined, being designed, confirmed, need to be
confirmed, on site, defect, in use, maintained). Switching
from one state to another will be triggered by actor
activities (updates and approvals). This issue is important
to improve task monitoring and follow up on teams
work.
+Sender

DFILE
CONTENT : BLOB
MEDIATYPE : VARCHAR2
1 DATE_EMISSION : DATE

+Model3d

+Model2d

1..n

1..n
ACTOR
(from HUMAN_RESSOURCE)

+PerformerOnConstructionSite
1..*

ACTOR
(from HUMAN_RESSOURCE)

Web
Webbrowser
browser

TASK

1..*
+Process

CONSTRUCTION_WORKS

STARTDATE : DATE
ENDDATE : DATE

1..n

(from CONSTRUCTION_WORKS)

1

Actor own
database

+TexteReception

Company
Knowledge

+Status 1

CW_DESCRIPTION : VARCHAR2
DATE_APPROVAL : DATE
DATE_ACHEVEMENT : DATE
DATE_RECEPTION : DATE

+FinalApproval

External databases
Suppliers, Building Construction norms, etc.

+Status

STATE_ENUM
STATE : VARCHAR2

1

Figure 5 the Construction Works in the center of
the building construction activity
By using a BIM (Building Information Model) data
structure and a server approach, we can represent a
building dynamically and keep track of its design
changes by versioning objects.

6. Technology And Tools
We are implementing our conceptual schema into an
Oracle 9i object-relational database. For every building
construction project, a new database instance is created.
Successive version of construction works can be
archived, so we keep track of design changes.
As a demonstrator, we have developed an
application server prototype and a web-based client. We
used Java Server Pages Apache extension (JSP) and
Enterprise Java Beans technology (EJB) to build
components and web services.
The data can be accessed from Architecture
Engineering
and
Construction
CAD
system
(Architectural Desktop by Autodesk Inc. and Allplan by
Nemetschek A.G.). For those who can not handle such

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

CAD
CADSystems
Systems

SGBD
SGBDgateway
gateway
webgateway
gateway(JSP)
(JSP)
web

ACTOR
(from HUMAN_RESSOURCE)

tools, they can access the date directly from a browser.
This paper covers only this interface.
For concurrent access, we choose to lock the object
until a user has finished updating it (until the session
expires or the user log off). We agree that the time
required might slower the process, but we believe that
managing object copies and replication conflicts on
thousands instances in due time is definitely worst.
We designed beans that can handle specific tasks:
• Execute query into database and sort the results
through JDBC thin Driver (Data Retriever)
• Handle 3D representations of building (graphic
format conversion, anchor managements, etc.)
• Manage user’s profile
• Take care of entities life cycle
• Background agents to handle alerts and send
notifications to users.
The next figure shows the architecture of the system,
called "SYSBAT".

SGBD

Remote Interfaces

Project references
Building material
database
Building Projects
databases

Application Server

Figure 6 Sysbat – 3-tier System architecture
We have been using VRML and X3D to support
interactive 3D graphic representations, and Cortona
VRML plug-in. We found good opportunities in this
structured ASCII format to parse and transform nodes on
a server, from IFC description files. We have been using
CyberX3D for Java API [7] that we have extended with
new nodes such as Flash movie texture node (supported
by Cortona).
We map actually flash movies on building entities
3d faces, so we that handle mouse events (mouseOver,
mouseOut, Click). It will link to technical data of the
construction work. VRML Nodes are generated
dynamically on the server.

7. Internet Based Client
7.1 Display of Information
After identification on the web site, users can
browse building entities (technical data and embedded
documents) using two interfaces that complement each
other (figure 8):
• a tree list component
• a 3d clickable VRML Model directly. It can be the
entire project or one part of it, based on the filters set
in the profile.
The number of properties that describe a building
entity is important and many versions might be stored as
the projects goes on. In this context, since every single
actor’s contribution and needs are different, we allowed
them to personalize the information they want to display.
They can choose to show or hide group of entities
(e.g. Hide walls on 3rd floor, show Slabs) as well as they
can filter the properties of the class. Furthermore,
depending on their profile, some features might not be
accessible (e.g. Costs, windows frame, etc …).
Depending on the stage of the building life cycle, as
well as the object’s status, users might change rendering
methods and surface properties to highlight objects
(Wireframe, Solid, Diffuse color, Transparency).
We remind that our purpose is not to provide
detailed textures or complex shaders to support
cooperative work at this stage. We only want to ease
access to specific pieces of information.

7.2. Actor’s scope of work
Generally, one or a few partners are involved in a
design revision cycle that would link to the choice of a
technical solution. The tasks of a specific partner are
queued in a list “approval needed” (Figure 7). We
represent his duty both with graphics and with texts. The
3D window highlights the constructions works that need
to be checked. For example, in the engineering stage, the
architect wants to see what materials were confirmed and
which one were not.

Figure 7 Electronic representation of an actor’s
scope of work

7.3 Building Life Cycle Views
Since we are storing design changes (design history)
and managing building activities tasks, we provide
enhanced 3D views (vs "static views") according to the
stage of the project (Figure 9).
When the building is under construction, we make
the difference between what was built, what is under
construction, and what need to be built. This is very
helpful for the project manager who wants to anticipate
on potential delays or problems on site.
We also provide a representation of the actor's activity
on the system (the objects currently accessed by an other
user are locked and the color is turn to red).

Figure 8 specific views for the building life cycle
stages

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

8. Conclusion
Our work aim at supporting information
management of a building project during the construction
process and enhance cooperative work between actors.
It consists of a database that can handle all the
information produced during the building life cycle and
provide specific views of the building when required.
The data structure is based on a BIM and we used IFC
specifications for geometry description.
In our field, representing a building as a set of
objects not only brings new possibilities for data
handling [8], but also introduces important changes in
terms of teams’ cooperation. It easier to exchange one
part of the project (extracted from the global
description), provide personalized views, and manage
activities/processus associated to the entity.
By filtering content according to a user profile, we
can simplify building representations and also optimize
flows of data. This definitely opens new perspectives in
mobile applications by being able to access remotely to
very specific information of the building.
This is quite a challenge for tomorrow’s offices
which want to improve communication between the
building site and the document production site.
We also believe that our field needs time to integrate
these concepts in the building production process, since
it requires to train the whole chain of actors and changes
regulations (we would not exchange drawings anymore).

References
[1]

[2]
[3]
[4]
[5]

[6]

[7]
[8]

C. Midler, S. Jouini, - Ingénierie concourante dans le
bâtiment : synthèse des travaux du GREMAP (Groupe de
Réflexion sur le Management de Projet), 230 pages, Plan
Construction Architecture, Recherche, n° 75, Paris ,
1996.
A. Yunas, Product Data Interoperability : How Close Are
We ?, http://www.aiag.org/, Mars 2002
IAI international, http://www.iai-international.org/
P. Coad, E. Yourdon, Object-Oriented Analysis,
Prentice-Hall, Englewood Cliffs, N.J., 1992
Zarli, A., Katranuschkov, P., Turk, Z., Rezgui, Y. and
Samad, A., Harmonization of the IST research and
development for the European construction industry: The
ICCI project (33), ECPPM 2002
Ghodous P. & Vandorpe D., Advances in Concurrent
Engineering - Technomic Publishing Company., Inc.
Lancaster, Pennsylvania (USA), 2000.
Satoshi Konno, CyberVRML97 for Java API 1.4,
http://sourceforge.net
Kuhne, C. and Leistner C., Benefits of using product and
process model data in project management, ECPPM
2002

Proceedings of the Computer Graphics, Imaging and Vision: New Trends (CGIV’05)
0-7695-2392-7/05 $20.00 © 2005 IEEE

