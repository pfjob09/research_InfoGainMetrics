2011 Eighth International Conference Computer Graphics, Imaging and Visualization

Fast Conic Spline Data Fitting of Noise - Free Data Points

Hadi Mansourifar

Azam Bastanfard

Faculty of Electrical, Computer and IT, Islamic Azad
University, Qazvin Branch
Qazvin, Iran
ha_mansourifar@yahoo.com

IT Research Group, Computer Engineering Faculty,
Islamic Azad University, Karaj Branch, Moazen Blvd.
Karaj, Iran
bastanfard@kiau.ac.ir

Abstract— In this paper we address the problem of geometric data

maximum distance from connecting line between first and
last data point of each subset is detected as shoulder point
of that subset. After finding the shoulder point of each
subset, a piecewise rational quadratic Bézier is generated,
as fitting curve of that subset. Other parts of the paper
are organized as follow. Section II reviews some of the
previous works in the field of Arc and Conic Splines.
Section III presents some preliminary information on
conics. Section IV demonstrates the main steps of
proposed method. Section V presents required formulas
for smoothing the Conic Splines. Section VI describes
efficiency of the proposed method and finally section VII
concludes the paper.

fitting of ordered data points, considering the case where the system
is much less powerful than the modern personal computers, as in
real time systems. Our method achieves timing results around 70 mS
for 189 data points and requires very little effort from the system.
The proposed method can be summarized in the following three
steps: first, input data points are divided into a group of subsets,
with respect to a variation of the data points in x or y direction.
Then in step2, one data point of each subset is detected, as
a shoulder point through a linear search. Finally in step3, detected
shoulder point of each subset is utilized to generate quadratic
rational Bézier of that subset. The proposed method were
implemented and experimentally compared to the well-known
geometric fitting methods which have been reported to provide the
short execution time and best accuracy. The experiments discussed
in this paper show that: the proposed method is significantly faster
than timing results of previous methods, since the accuracy of fitting
results is reasonable.

II.

Keywords- Data Fitting;Conic Spline ; interactive design;
CAD ; modeling

I.

In order to improve the efficiency of controlling the
parameterization of a curve for high order continuity
purpose, Arc Splines [11, 23, 24] and Conic Splines [19]
have been studied in the research literature. First
considerable research to produce G1 arc Splines was done
by Hoschek[4]. However, the method needs an inference
manipulation which should be done, in order to satisfy the
G1 continuity of a closed arc Spline. For solving this
problem, biarcs are used which could solve approximate
representation of discrete data by obtaining tangents and
anchor points [2, 6, 9]. Kim et al. optimized the
interpolation of a piecewise G1 biarc curve through
solving the minimization model using Quasi-Newton
algorithm [14]. However, the main problem of these
methods is large number of joint points in the
approximated Arc Spline. Yang [20] proposed an optimal
algorithm for fitting smooth planar parametric curves by
G1 arc splines. After that, Yang, Chen et al. [18] proposed
an automatic G1 arc Spline interpolation for closed point
sets. Song et al. [17] utilized biarcs interpolation and
least-squares approximation for generating an initial
circular Spline. Challenging problem in curve

INTRODUCTION

With the rapid development of pocket PC industry, the
interactive design of free-form curves becomes more
convenient. In interactive design systems, many
techniques have been used which data fitting is a
fundamental one [3, 5, 7,15,16]. The most widely used
techniques in traditional data fitting systems are iterative
[21]. Therefore when the number of the given data points
is very large, fitting result cannot be computed in a
reasonable time. However, in real time systems, it is often
desirable to fit the data points by a curve which consisted
of minimum number of segments and fitting results
should be obtained within a strict deadline. In this paper
we present a non-iterative method based on shoulder point
detection, which can bring together fast execution time
and reasonable accuracy. Given a large set of data points
in the plane, Qi = 𝑥𝑖 , 𝑦𝑖 : 𝑖 = 1, … , 𝑁 , first, data points
are divided into the several subsets. Division process is
based on detecting the data points which x or y direction
of input trajectory is turned. Then a data point which have
978-0-7695-4484-7/11 $26.00 © 2011 Crown Copyright
DOI 10.1109/CGIV.2011.33

RELATED WORKS

59

approximation by Arc spline is to solve the continuity
conditions between arc segments which make it
unsuitable for modeling of complex shapes. Arc Splines
are special kind of Conic Splines. Therefore, Conic
splines have extra properties for shape modeling, curve
approximation [1, 8] and smoothing scattered data [10].
Schaback [12] used piecewise conics for planar curve
interpolation. Also Yang [21] used conic arc scaling for
curve fitting and fairing. Yang et al. [22] proposed an
efficient fitting algorithm for fat Conic Cpline fitting with
controllable tolerances. Hur et al. [13] found the conic
approximation to the convolution curve with the
minimum error. Unfortunately problems of these methods
arise when the input data points are in a large number. In
the recent years, Clothoid Splines become more popular
due to their intrinsically pleasing curvature [26]. Baran et
al. [25] proposed a state of the art technique for
generating fair curves which are organized from Clothoid
curves, lines and Arc Splines. Despite the power of this
method for producing fair and accurate results, its high
fitting times are not reasonable for real time systems with
restricted resources. To the best of our knowledge, no
previous work bring together accuracy and real-time
execution, while our method can significantly decrease
the timing results and achieve reasonable fitting curves.
III.

Figure1. Rational quadratic Bézier.

Setting variable values of 𝜔 , different types of conic
sections can be produced as follows
Result
line segment
elliptic curve segments
parabolic curve segment
hyperbolic curve segment

𝝎
𝜔=0
0<𝜔<1
𝜔=1
𝜔>1

BASIC DEFINITIONS

The curvatures of P (t) at t= 0 and 1 are

A. Notation
𝜅(0) =
Points and vectors are represented by bold letters
𝑣𝑥
v= 𝑣 and their lengths by the notation

𝜅(1) =

𝑦

||v||=

𝑣2 𝑥

+

𝑣2 𝑦

a × b= axby – aybx=|| a || || b || sin θ
Where θ is the counterclockwise angle from a to b.
When 𝑃′ (𝑡) is non-zero, the signed curvature of a
parametric curve P (t) in the plane is
𝑃 ′ (𝑡)×𝑃 ′′ (𝑡)

𝐏0 +𝐏2
2

𝜔𝐏

+ 1+𝜔1 (3.4)

𝜔

𝜔𝐏

S = 1- 1+𝜔 𝐌 + 1+𝜔1

(3.5)

Where, M is middle point of P0P2.Thus 𝜔 can be
calculated as follows.
𝐌−𝐒
𝜔 = 𝑺−𝐏
(3.6)

(1−𝑡)2 𝐏0 +2𝜔 1−𝑡 𝑡 𝐏1 + 𝑡 2 𝐏𝟐
(1−𝑡)2 + 2𝜔 1−𝑡 𝑡+𝑡 2
0≤𝜔≤∞

(3.3)

Then writing the parametric equation of the straight line
between M and P1 gives

The standard form for a rational quadratic Bézier is

0≤𝑡≤1 ,

2𝜔 2 ||𝑷2 −𝑷1 ||3

1

B. Quadratic rational Bézier

P (t) =

(𝑷1 −𝑷0 ) ×(𝑷2 −𝑷1 )

S = 1+𝜔

(3.1)

||𝑃 ′ (𝑡)||3

2𝜔 2 ||𝑷1 −𝑷0 ||3

One of the elegant properties of rational quadratic Bézier
is shoulder point which labeled as S in Figure 1. The
shoulder point of a rational quadratic Bézier is located on
the curve P (t) at t= 0.5 and in maximum distance from
the line P0P2. Thus substituting t= 0.5 into equation (2.2)
yields

The scalar cross-product of two vectors is

𝜅(𝑡) =

(𝑷1 −𝑷0 ) ×(𝑷2 −𝑷1 )

(3.2)

1

Where P0, P1, P2 are the control points of rational
quadratic Bézier and 𝜔 is weight of P1. Figure 1 shows a
rational quadratic Bézier.

60

IV.

CONIC SPLINE DATA FITTING

Given a large set of noise - free data points in the plane,
Qi = 𝑥𝑖 , 𝑦𝑖 : 𝑖 = 1, … , 𝑁 , our goal is to fit a piecewise
Conic Spline by less segments and one iteration. The
algorithm is organized from the following three steps:
Step1. Data points are divided into the groups of data
sets, with respect to a variation of the data points in x or y
direction.
Step2. A point Qs is detected in each subset where, Qs is a
point which have maximum distance from the line that
connects first and last data points of that subset.
Step3. The Qs of each subset is used for calculating the
middle weight of corresponding Conic Spline of that
subset. Hence piecewise Conic Splines are categorized
into semi C- shaped and S-shaped curves

Figure2. Splitting the data points.

B. Shoulder point detection
Shoulder point of each subset or 𝑸𝑺(𝑥 𝑗 ,𝑦 𝑗 ) is a data
point, which its distance from line 𝒕𝑔 𝒕𝑔+1 is maximum,
where points 𝒕𝑔 and 𝒕𝑔+1 are first andlast points of that
subset, respectively. The process of shoulder point
detection is based on member points of 𝑇 𝑥 𝑔 ,𝑦 𝑔 as
follows.

A. Splitting the data points
Splitting the input data points into the groups of data sets
is
based
on
detecting
the
points
Uc = 𝑥𝑐 , 𝑦𝑐 : 𝑐 = 1, … , 𝑁 which direction of data points
is changed as follows.
1)𝑈 𝑥 𝑐 ,𝑦 𝑐 = ∀ 𝑞(𝑥 𝑗 ,𝑦 𝑗 ) ∈ 𝑄

((𝑥𝑗 ≥ 𝑥𝑗 −1 ) 𝑎𝑛𝑑 (𝑥𝑗 ≥ 𝑥𝑗 +1 )) 𝑜𝑟
((𝑥𝑗 ≤ 𝑥𝑗 −1 ) 𝑎𝑛𝑑 (𝑥𝑗 ≤ 𝑥𝑗 +1 ))

∀ 𝑡(𝑥 𝑔 ,𝑦 𝑔 ) ∈ 𝑇 , ∃ 𝑄𝑆(𝑥 𝑗 ,𝑦 𝑗 )

(4.1.1)
𝑈 𝑥 𝑐 ,𝑦 𝑐 = ∀ 𝑞(𝑥 𝑗 ,𝑦 𝑗 )

((𝑦𝑗 ≥ 𝑦𝑗 −1 ) 𝑎𝑛𝑑 (𝑦𝑗 ≥ 𝑦𝑗 +1 )) 𝑜𝑟
∈𝑄
((𝑦𝑗 ≤ 𝑦𝑗 −1 ) 𝑎𝑛𝑑 (𝑦𝑗 ≤ 𝑦𝑗 +1 ))

𝑥 𝑗 ,𝑦 𝑗

≥ 𝑀𝑎𝑥(𝐷𝑔𝑗 ))

(4.2.1)

(4.1.2)

Where, 𝐷𝑔𝑗 is defined as follows.

For instance, part (a) of Figure 2 shows member points
of 𝑄(𝑥 𝑗 ,𝑦 𝑗 ) and part (b) of Figure 2 shows member points
of 𝑈 𝑥 𝑐 ,𝑦 𝑐 . Some of the member points of 𝑈 𝑥 𝑐 ,𝑦 𝑐 are
unnecessary points and should be removed as shown in
part (c) of Figure 2. For this reason, remaining data points
should be stored in Tg = 𝑥𝑔 , 𝑦𝑔 : 𝑔 = 1, … , 𝑁 as follows.
𝑇 𝑥 𝑐 ,𝑦 𝑐 = ∀ 𝑢(𝑥 𝑗 ,𝑦 𝑗 ) ∈ 𝑈

𝑔 ≤ 𝑗 ≤ 𝑔 + 1 𝑎𝑛𝑑
(𝐷𝑖𝑠 𝑄𝑠

(𝑥𝑗 − 𝑥𝑗 +1 )2 + (𝑦𝑗 − 𝑦𝑗 +1 )2

∀ 𝑡(𝑥 𝑔 ,𝑦 𝑔) ∈ 𝑇, ∀ 𝑞(𝑥 𝑗 ,𝑦 𝑗 ) ∈ 𝑄, 𝐷𝑔𝑗 = 𝐷𝑖𝑠 𝑄 𝑥 𝑗 ,𝑦 𝑗
(4.2.2)

𝑔 ≤𝑗 ≤ 𝑔+1 )

Where, function 𝐷𝑖𝑠 𝑄 𝑥 𝑗 ,𝑦 𝑗
calculates the distance of
point 𝑸 𝑥 𝑗 ,𝑦 𝑗 from line 𝒕𝑔 𝒕𝑔+1 . For instance, Figure3
shows first, last and shoulder points of a subset.

>ℎ

(4.1.3)

Where, h is an arbitrary parameter for detecting two
sequential members of U which have a small distance to
each other. So 𝑇 𝑥 𝑔 ,𝑦 𝑔 contains first and last point of
each subset as shown in part (d) of Figure 2.

Figure3. Shoulder point detection.

61

V.

SMOOTHING THE PIECEWISE CONIC SPLINES

𝜔𝑛 =

After detecting the corresponding shoulder point of each
subset, a semi C-Shaped curve or S-Shaped curve is
assigned to that subset. For this reason, points in 𝑇 𝑥 𝑔 ,𝑦 𝑔
which denote the first and last points of each subset
should be classified as follow.
𝑇𝑦𝑝𝑒1

𝑥 𝑘 ,𝑦 𝑘

∀ 𝑡(𝑥 𝑔 ,𝑦 𝑔 ) ∈ 𝑇

((𝑦𝑔 ≥ 𝑦𝑔−1 ) 𝑎𝑛𝑑 (𝑦𝑔 ≥ 𝑦𝑔+1 ))𝑜𝑟
((𝑦𝑔 ≤ 𝑦𝑔−1 ) 𝑎𝑛𝑑 (𝑦𝑔 ≤ 𝑦𝑔+1 ))

𝑥 𝑘 ,𝑦 𝑘

∀ 𝑡(𝑥 𝑔 ,𝑦 𝑔 ) ∈ 𝑇

((𝑥𝑔 ≥ 𝑥𝑔−1 ) 𝑎𝑛𝑑 (𝑥𝑔 ≥ 𝑥𝑔+1 ))𝑜𝑟
((𝑥𝑔 ≤ 𝑥𝑔−1 ) 𝑎𝑛𝑑 (𝑥𝑔 ≤ 𝑥𝑔+1 ))

, and 𝐏2𝑛 −1𝑥 can be found fromequation

(3.5) as follows
𝐏2𝑛 −1𝑥 =

𝐒𝐧𝐱 𝜔 𝑛 +1 −𝐌 𝐱
𝜔𝑛

(5.3)

Where, (𝐒 , 𝐒 ) is shoulder point of nth subset and
(Mx, My) is middle point of the line 𝑷2𝑛−2 𝑷2𝑛 of nth
subset. In order to generate a G2 continuous curve, the
curvatures of the two conics must match at their joint
point. For this reason, obtained 𝐏2𝑛−1𝑥 should satisfy the
equation (3.3) or slope angle of line P1P2 should be equal
to slope angle of line P2P3.
𝐧𝐱

(5.1)
𝑇𝑦𝑝𝑒2

𝐌 𝐲 −𝐒𝐧𝐲
𝐒𝐧𝐲 −𝐏2𝑛 −1 𝑦

𝐧𝐲

(5.2)

B. S-Shaped curve
For example, member points of Type1 and Type2 have
been shown by green and blue colors, respectively, in
Figure 3.

An S-shaped curve is formed, when two piecewise Conic
Splines with opposite sign of curvature joint together. In
fact S-Shaped curves are organized from two connected
quadratic rational Bézier, such that, P0, P1,O are control
points of the first Conic Spline and P3, P2,O are control
points of the next Conic Spline as shown in Figure 5.
Hence S1 and S2 denote shoulder point of each Conic
Spline, that can be found as described in section 4.2.

A. Semi C-Shaped curve
A C-shaped curve is formed, when two semi C-shaped
curve with same sign of curvature joint together. Let (P0,
P1, P2) , S1 and (P2, P3, P4) , S2 be control points and
shoulder points of first and second semi C-Shaped curves
, respectively ; such that the points P1 and P3 are always
located on line AB as shown in Figure 4. Using the semi
C-Shaped curve instead of C-Shaped curve has two
benefits. First, a semi C-Shaped curve is assigned to the
subsets with following criteria.
(𝒕𝑔 ∈ Type 1 𝑎𝑛𝑑 𝒕𝑔+1 ∈ Type 2) 𝑜𝑟
(𝒕𝑔 ∈ Type 2 𝑎𝑛𝑑 𝒕𝑔+1 ∈ Type 1)

(5.1.1)

Where, 𝒕𝑔 and 𝒕𝑔+1 are first and last points of a subset,
respectively. Second, a J-shaped curve can be produced
by joining an S-shaped curve and a semi C-shaped curve.

Figure5. S-shaped curve.

After finding the S1 and S2, P1 and P2 can be found as
follows.
𝐏1𝑥 =𝐒1𝑥 ; 𝐏2𝑥 =𝐒2𝑥
𝐏1𝑦 =𝐏0𝑦 ; 𝐏2𝑦 =𝐏3𝑦
Note that, two connected quadratic rational Bézier
generate a G2 continuous curve in O point, when slope
angle of line P1O be equal to slope angle of line OP2.
After generating an S-shaped curve it can be assigned to
the subsets with following criteria.

Figure4. C-shaped curve.

After finding the location of shoulder points, the middle
weight of each semi C-Shaped curve of Figure 4 is
computed from equation (3.6) as follows.

(𝒕𝑔 ∈ Type 1 𝑎𝑛𝑑 𝒕𝑔+1 ∈ Type 1) 𝑜𝑟
(𝒕𝑔 ∈ Type 2 𝑎𝑛𝑑 𝒕𝑔+1 ∈ Type 2)

62

(5.2.1)

Where, 𝒕𝑔 and 𝒕𝑔+1 are first and last points of a subset,
respectively.
VI.

points without extra iteration. Finally, efficiency of the
proposed method is compared with previous methods,
using the various examples from real data. In the current
research, we test our proposed method on a large set of
noise–free data points. In the future work, we will extend
the method, considering the case of noisy data points.

EXPERIMENT

The algorithm has been implemented on a PC with 1300
GHz Duron ™ CPU, 512 MB Memory and Windows XP.
For the sake of comparison, our proposed method, fitting
part of Baran’s method [25] and Yang’s conic arc scaling
method [21] are abbreviated as SPD, SP, and CAS
respectively. We test our method on input data points
from a tablet as shown with dash line in Figure7 and
fitting results have been denoted by solid line. For
instance, we test our method, on two Arabic words or
characters and two English hand writings. For example
part (a) and (c) of Figure 7 show two complicated English
hand writings with 189 and 125 data points, respectively.
Part (b) and (d) of Figure 7 show an Arabic word and
character with 95 and 63 data points, respectively. Table
1 reports timing results, since the scale used for
constructing the diagrams is 1 pixel.

Figure6. Fitting time comparison of CAS, SP and SPD methods.

References
[1]
[2]
[3]

Table1. Timing results (mS) of Figure 7.
a

b

c

d

CAS

616

451

459

431

SP

580

32

41

24

SPD

67

19

25

13

[4]
[5]
[6]

[7]

Our experiments show that, when the number of data
points is greater than 220 the CAS is faster than SP. On
the other hand, the fitting time of SPD is obviously faster
than CAS and SP, especially when the number of data
points is greater than 200 as shown in Figure 6.

[8]
[9]
[10]

VII.

[11]

CONCLUSION

[12]

Conic Splines are frequently used in many fields of
computer graphics and industrial applications to generate
curved patterns. In order to draw Conic Spline, fitting the
input data with a piecewise parametric curve that lies
close to the data is one of the main considerations. This
paper addressed the problem of data fitting in real time
systems which fitting result should be computed within a
strict deadline. For this reason, a novel geometric method
is presented which can decrease the fitting time and
maintain the approximating accuracy. The algorithm
divides data points into the subsets with respect to a
variation of the data points in x or y direction. After that,
proposed method automatically finds the middle control
point of each piecewise rational quadratic Bézier and
derives a piecewise conic Spline that lies close to the data

[13]

[14]

[15]

[16]

Ahn YJ. Conic approximation of planar curves. Comput-Aid Des
2001;33(12):867–72.
Bolton KM. Biarc curves. Comput-Aid Des 1975;7(2):89–92.
Gofuku, S., Tamura, S., Maekawa, T.,. Point-tangent/point-normal
B-spline curve interpolation by geometric algorithms. ComputerAided Design 2009; 41,412–422.
Hoschek J. Circular splines. Comput-Aid Des 1992;24(11):611–8.
Lim CG. A universal parametrization in B-spline curve and surface
interpolation. Comput Aid Geometr Des 1999;16(5):407–22.
Ong CJ, Wong YS, Loh HT, Hong XG. An optimization approach
for biarc curve fitting of B-spline curves. Comput-Aid Des
1996;28: 951–9.
Park H. Choosing nodes and knots in closed B-spline curve
interpolation to a point data. Comput-Aid Des 2001;33(13):967–
74.
Pavlidis T. Curve fitting with conic splines. ACM Trans Graph
1983; 2(1):1–31.
Piegl LA, Tiller W. Data approximation using biarcs. Engng
Comput 2002;18(1):59–65.
Piegl LA. Techniques for smoothing scattered data with conic
sections. Comput Ind 1987;9(3):223–37.
Pratt V. Techniques for conic splines. ACM Comput Graph 1985;
19(3):151–9.
Schaback R. Planar curve interpolation by piecewise conics of
arbitrary type. Construct Approx 1993;9:373–89.
S. Hur and T. Kim. Finding the best conic approximation to the
convolution curve of two compatible conics based on Hausdor
distance. Comp. Aided Desi.,41:513-524, 2009.
T. Kim, Y. Kim, J. Suh, S. Zhang, and Z. Yang. Internal energy
minimization in biarc interpolation. I. J. Adv. Manu. Tech.,
44:1164-1174, 2009.
W. Wang, H. Pottmann, and Y. Liu. Fitting B-spline curves to
point clouds by curvature-based squared distance minimization.
ACM Trans. Graph, 25(2):214–238, 2006.
X.D.Chen,W.Ma, J.C.Paul Cubic B-spline curve approximation by
curve unclamping. Computer-Aided Design 2010; 42, 523-534.

[17] X. Song, M. Aigner, F. Chen and B. Jüttler, Circular spline

fitting using an evolution process.journal of computational
science and applied methematics. 231, 423–433, 2009.

63

[18] X-D Chen, J-H Yong, G-Q Zheng, J-G Sun. Automatic G1 arc
spline interpolation for closed point set. Computer-Aided Design,
36(12):1205{1218, 2004.
[19] Yang XN, Wang GZ. Planar point set fairing and fitting by arc
splines.Comput-Aid Des 2001;33(1):35–43.
[20] Yang XN. Efficient circular arc interpolation based on active
tolerance control. Comput-Aid Des 2002;34(13):1037–46.
[21] Yang X. Curve fitting and fairing using conic splines. Comput
Aided Des 2004;36(5):461–72.

[22] Yang X, Yang W ,Cone spline approximation via fat conic spline
fitting, 2006, 38(6),703-712.
[23] Yeung MK, Walton DJ. Curve fitting with arc splines for NC
toolpath generation. Comput-Aid Des 1994;26(11):845–9.
[24] Yong J-H, Hu S-M, Sun J-G. A note on approximation of discrete
data by G1 arc splines. Comput-Aid Des 1999;31(14):911–5.
[25] Baran, I, Lehtinen, J Popovi´c, J : Sketching Clothoid Splines
Using Shortest Paths,In Computer Graphics Forum, 2010.
[26] MCCRAE J., SINGH K.: Sketching piecewise clothoid curves. In
Sketch-Based Interfaces and Modeling, 2008.

(a)

(b)

(c)

(d)

Figure7. Input data points and fitting results. (a) and (c). Two English hand writing. (b). An Arabic word.
(d). An Arabic character.

64

