2009 Sixth International Conference on Computer Graphics, Imaging and Visualization

Particle Swarm Optimization for NURBS Curve
Fitting
Delint Ira Setyo Adi, Siti Mariyam Shamsuddin, Aida Ali
Soft Computing Research Group
Universiti Teknologi Malaysia
Skudai, Johor Bahru
Malaysia
e-mail : delint@gmail.com, mariyam@utm.my, aida@utm.my
been made between simulated annealing and genetic
algorithm. In each case, simulated annealing outperforms
genetic algorithm[6]. However, since simulated annealing
is a metaheuristic, numerous choices are required to
convert it into an algorithm and the quality of the solution
depends on the required computing time.
Hence, there is a need to explore alternative solutions
that can produce better solution for solving curve fitting
problem. This paper proposes an alternative method by
implementing PSO algorithm for NURBS curve fitting
problem. The proposed method is compared with the
conventional method.
The rest of this paper is organized as follows: section 2
describes the theory of NURBS curve and NURBS Fitting.
Section 3 explains the PSO algorithm. Section 4 focuses
on methodology, and finally followed by the results,
discussions, conclusion and future work.

Abstract This paper discusses an alternative solution for
curve fitting based on particle swarm optimization (PSO).
The implementation of this method is conducted by
generating randomly weight and control points of the
NURBS curve. The weight and generated control points are
used to calculate the NURBS point. The results are
compared with the example data points to find the minimum
error. The implementation results have shown that the
proposed method yield better solution compared to the
conventional methods with minimum error generated.
Keywords NURBS; Curve Fitting; PSO algorithm;

I.

INTRODUCTION

The emergence of computer graphic model provides
many advantages in improving the quality and efficiency
of design, analysis and manufacturing. This paper will
focus more on the curve fitting technique as a solution for
curve fitting problem (definition of curve fitting
technique). The importance of curve fitting technique can
be seen in the implementation of the technique in
numerous applications such as data reduction,
approximating data, curve and surface fairing [4,9] and
image processing applications such as generating smooth
curves to digitized data[2]
Finding a correct parameterization [3] and the weight
of the control points when calculating the curve have been
one of the main issues in curve fitting technique. Another
issue is a long processing time and high computerization
cost due to the formulation, programming complexity and
large matrix size. Number of studies has been conducted to
figure out the solution to the curves fitting problem and
surfaces to a set of data points. Few techniques have been
employed, some of them are simulated annealing [1],
genetic algorithm [4], Gaussian method [3,9], and iterative
method. Due to the iterative steps, genetic algorithm
consumes longer processing time that makes its
implementation is less efficient. Direct comparison has
978-0-7695-3789-4/09 $25.00 © 2009 IEEE
DOI 10.1109/CGIV.2009.64

II.

NON UNIFORM RATIONAL B-SPLINE (NURBS)

There are many types of curve such as hermite curve,
bezier curve, B-spline, and NURBS. The actual curve is
formed by multiple control points on the polygon, which is
known as control polygon. Recently, NURBS curve is the
most commonly used for representing 3D object due to its
advantages. These include better accuracy, faster,
numerically stable [9], flexible to design a large variety of
shapes, generalization of B-spline and Bezier curve [3,9],
and the shape of the control polygon. The NURBS curve is
defined by [9]
n
∑ Ni , p ( t ) wi Pi
C ( t ) = i =0
n
∑ N j , p ( t )w j
j =0

t ∈ [ 0,1]

(1)

where C is the NURBS curve, n is number of control
points, Ni,p is a B-spline basis function, p is degree of the
curve, w is weight of the curve, P is the control points
coordinate, and t is parameter. Normally, t has numeric
value between 0 and 1.
259

C. NURBS Curve Fitting
The aim of curve fitting is to determine a control
polygon that generates a NURBS curve for a set data of
known data points. Assume that p ≥ 1, n ≥ p, and y1, … , ym
(m>n) are given. Here, p is the degree of the curve, n is
number of the control points, y is a set of the given data,
and m is number of given set data. The pth degree nonrational curve can be defined as (1)

A. Knot vector and NURBS basis function
One of important properties when calculating the curve
is a knot vector. A knot vector is a set of non-decreasing
sequence of real number called parameter values. There
are two types of knot vector are used, such as periodic and
open [3]. Suppose X = {i∈( 0…m −1):xi ≤ xi +1} . Here, the xi is
called knot, and X is the knot vector. Defined over X, The
B-Spline basis function Ni,p(t) (1) can be written as below:
N

i ,0

⎧1 if xi ≤t < xi +1
⎪⎩0 otherwise

( t ) = ⎨⎪

and
N

i, p

(t ) =

( t − xi ) Ni , p −1( t )
xi + p −1 − xi

( xi + p −t ) Ni +1, p−1( t )
+
xi + p − xi +1

If data point lies on the NURBS curve, it must
satisfy y1 = C ( 0 ) , y m = C (1) , and the remaining y k are

(2)

approximated in the least squares sense. i.e.
m −1
2
f = ∑ yk −C ( t k )
i =1

(3)

Equation (1) should be set to a minimum value to
approximate the data point. Equation (5) is an objective
function with respect to the n+1 variables and {tk} which
are set of pre-computed parameter values. The curve
generally doesn’t precisely pass through yk but C(tk) which
is the closest point to yk. Thus, (8) can be derived from (7).

This basis function also called Cox-DeBoor recursion
formula. Equation (2) and (3) clearly showed that the
selection of the knot vector has a significant influence on
the curve. Define
Ni , p ( t ) wi
R (t ) =
i, p
n
∑ N j , p ( t )w j
j =0

(4)

m −1
2
f = ∑ yk −C ( t k )
k =1

and then substitute it into (1) to obtain
n
C ( t ) = ∑ Ri , p ( t ) Pi
i =0

2
n
Ni , p ( tk ) wi Pi
∑
m−1
= ∑ yk − i =0
n
k =1
∑ Ni , p ( tk ) wi
i =0

(5)

Ri,p(t) is called basis function of NURBS curve. The
NURBS basis function has some properties, such as
nonnegative, partition of unity, local support, strong
convex hull property, affine invariant, and can be
converted into B-spline basis function or Bezier curve [9].

n
n
⎛
⎞⎛
⎞
Ni , p ( tk ) wi Pi ⎟⎜
Ni , p ( tk ) wi Pi ⎟
⎜
∑
∑
m −1 ⎜
⎟⎜
⎟
i =0
= ∑ ⎜ yk − i =0
⎟⎜ yk − n
⎟
n
k =1 ⎜
Ni , p ( tk ) wi ⎟⎜
Ni , p ( tk ) wi ⎟
∑
∑
⎜
⎟⎜
⎟
i =0
i =0
⎝
⎠⎝
⎠

B. Parameterization method
Parameterization is another important property of
NURBS curve. It describes how the numeric values are
assigned to each point on a NURBS surface or curve. So,
each of these points has a set of numerical value known as
a parameter that describes the point location. Commonly, a
curve is represented by parametric form instead of either
implicit or explicit form. There are some parameterization
methods used in NURBS curve such as uniform
parameterization
method
[10],
chord
length
parameterization
method
[3,9,10],
centripetal
parameterization method [9], and hybrid parameterization
method [10,11]. This paper uses chord length
parameterization method, and it is defined as [3]:

2
⎛
n
⎛ n
⎞ ⎞⎟
⎜
∑ Ni , p ( tk ) wi Pi ⎜ ∑ Ni , p ( tk ) wi Pi ⎟ ⎟
m −1 ⎜
⎜
⎟ ⎟
= ∑ ⎜ yk2 − 2 yk2 i =0
+⎜ i =0
⎟ ⎟
n
n
⎜
k =1
∑ Ni , p ( tk ) wi ⎜⎜ ∑ Ni , p ( tk ) wi ⎟⎟ ⎟
⎜
⎜
i =0
⎝ i =0
⎠ ⎟⎠
⎝

Hence,
2
⎛
n
⎛ n
⎞ ⎞⎟
⎜
N
t
w
P
N
t
w
P
∑ i, p ( k ) i i ⎜ ∑ i , p ( k ) i i ⎟ ⎟
m −1 ⎜
⎜
⎟ ⎟ (8)
f = ∑ ⎜ yk2 − 2 yk2 i =0
+⎜ i =0
⎟ ⎟
n
n
k =1 ⎜
∑ Ni , p ( tk ) wi ⎜⎜ ∑ Ni , p ( tk ) wi ⎟⎟ ⎟
⎜
⎜
i =0
⎝ i =0
⎠ ⎟⎠
⎝

t = 0, t = 1
0
n
x i − xi −1
ti =
n
∑ x j − x j −1
j =2

(

)

i∈(1,…,n ) ,

(7).

To obtain the curve that closest to the data points, the
lowest value of f is needed. This is one of optimization
problems. Thus, the problem can be solved alternatively
using artificial intelligence method. Recently, there are
several methods to solve the curve fitting problem. There

(6)

in the range of [0,1].

260

are genetic algorithm, simulated annealing, particle swarm
optimization, neural network, etc. Conventional method
solves curve fitting problem by implementing polynomial
[7], cubic spline [7], and B-spline curve [3]. This study
compared the proposed method with B-spline method that
is described in [3].
III.

satisfied when a predefined small number value or a fixed
number of generations have been reached.
IV.

METHODOLOGY

This section presents the methodology of the proposed
method. There are many techniques that used NURBS
curve for fitting the data points [3,9]. Conventionally, the
constant value is always given to the rest of the weight of
the NURBS curve, which is normally equal to 1. If the
value of the rest weight is 1, it means that the NURBS
curve will transform into B-spline curve. Hence, some
properties of NURBS curve will be lost. This is one of
weakness of the conventional method. In this study, A
NURBS curve will be used for fitting the data points and
at the first time, the weight and the control points of the
curve will be set to random values. Afterward, PSO will
optimize the result accordingly. The data for the
experiment was obtained from [3]. The procedure of the
proposed method is illustrated as follows (Fig. 1):

PSO (PARTICLE SWARM OPTIMIZATION)

Particle Swarm Optimization is swarm intelligence
based algorithm that finds a solution to an optimization
problem in the presence of objectives. It is proposed by
James Kennedy and R.C. Eberhart in 1995. It is motivated
by social behavior of organisms such as bird flocking and
fish schooling [5]. PSO has been widely used in many
problems especially in solving combinatorial optimization
problem such as travelling salesman problem [8]. As an
optimization tool, PSO starts from choosing a swarm
(population) of random candidate solutions called
particles. The particles are evaluated using the objective
function to look for the one with an optimum value. To
obtain the particle whose value is optimum, a position and
velocity are assigned to each particle. These particles
evolve throughout the domain of solution according to the
memory of their own best position and knowledge of the
neighborhood’s best global position which represents the
position with the smallest error value for the objective
function. Moreover, the evaluation for each particle i is
given by:

Data points
Calculate knot
vector
Calculate Chord length
parameterization

V ( k +1) = inertia.rand ().V ( k ) + C .rand () ⎡⎢ Pgbest ( k ) − Pi ( k ) ⎤⎥
i
i
1
⎣
⎦
+ C .rand () ⎡⎢ Pibest ( k )− Pi ( k ) ⎤⎥
2
⎣
⎦

(9)

Generate randomly
NURBS control

P ( k +1) = P ( k ) + V ( k )
i
i
i

(10)

Iter = 300

where Pi(k) and Vi(k) are positions and the velocity of
particle i at time k. C1 and C2 are a coefficients and have
constant values called learning factors. Rand() is a random
function that generates random value between 0 and 1. In
this study, the particles of PSO will act as the control
points and the weights of the NURBS curve. Thus, (9) and
(10) can be written as follow:

Calculate the
Objective function

Iter = iter + 1

Update position &
velocity

V ( k +1) = inertia.rand ().V ( k ) + C .rand () ⎡⎢ Pgbest ( k )− Pij ( k ) ⎤⎥
ij
ij
1
⎣
⎦

Error < 0.001

+ C .rand () ⎡⎢ Pbest
( k )− Pij ( k )⎤⎦⎥
2
⎣ j
P ( k +1) = P ( k ) + V ( k )
ij
ij
ij

Final Result
NURBS Ctrl
Points

with i is a number of particles and j is a number of control
points. The positions and velocity are used to evaluate the
objective function. As the objective function, (6) calculates
the error that is produced by the difference between data
points and the NURBS curve result using control points
and weights that obtained from PSO and use this value to
calculate the new position of control points and weights of
the curve.
This procedure is repeated until a termination
condition is reached. Commonly, terminating criteria are

Figure 1. Methodology NURBS curve fitting using PSO
Algorithm

The algorithms are explained as follows:

261

value of X, Y, and Z which are closer to the 3D data
points, with smaller error value compared to the
conventional method. The proposed method produces the
error at 0.00013 and the conventional method produces the
error at 0.0098. The errors are calculated from (6). The
results of the proposed method have slight different values
of control points compared to the conventional method
(Table 3). This is due to the differences of the weight
between the proposed methods and the conventional
approach. The weights of the conventional method remain
1, since they are adjusted as a constant value, whereas the
proposed method does not. In the proposed method, the
rest of the weights of the curve will be calculated
automatically.
The conventional method is difficult to implement if
the weight of the curve is not a constant value. Its means
that if the weight is a variable, the equation system that
should be solved will lead to a non linear system [9];
hence, it is quite difficult to find the solution using the
common techniques.
Fig. 2 shows the result of the proposed method in 3
dimensional spaces. The blue dot small circle and “x”
symbol represent the control points that generate curve
closer to data points and the generated-points. The “o”
symbol represents the data points.

a) NURBS curve degree d with n control points will
be constructed to fit the data points. The first time to fit te
data points is to calculate the knot vector. This study
uniform knot vector is used and defined in the form
of X = {0,…,0, x1,…, xn − k ,1,…,1} . To calculate the rest of the
knot vector, (11) is used. Equation (11) is defined as
below [3]:
1
.
x =x +
i
i n+ k + 2

(11)

Commonly, to simplify the calculation, some researcher
used knot value in the range between 0 and n-k+2. But the
changes of the knot will affect the range of value of
parameterization. Therefore, the parameterization range
needs to be changed to 0 and n-k+2.
b) From the data points, the value of the parameter
is calculated using chord length parameterization method
[3] that described in (4).
c) Generate random control points and weight of the
NURBS curve.
d) Calculate the fitness function. Equation (6) is
used to calculate the fitness function for finding the
minimum value of the function.
e) Compare the current fitness function evaluation
with current pbest. If the current result is better than
fitness function evaluated by pbest, then set pbest position
equals to current position value.
f) Find the minimum value of the overall pbest and
compare the result with the gbest value. If the current
minimum value is smaller than gbest value, then set the
gbest value equals to the current minimum value and also
the gbest position equal to the pbest position.
g) If the gbest minimum value smaller than some
small number, then the calculation will be terminated.
h) Else, update the position and the velocity that
described in (7) and (8).
i) Repeat the step until terminating criteria are
reached. The terminating criteria are explained in section
3.

TABLE I.

Example Data Points

TABLE II.

X

Y

Z

0.0

0.0

0.0

1.5

2.0

0.0

3.0

2.5

0.0

4.5

2.0

0.0

6.0

0.0

0.0

COMPARISON BETWEEN NURBS CURVE FITTING USING
PSO AND CONVENTIONAL METHOD

NURBS Curve Fitting
using PSO
X
Y
Z

In this study, some parameters such as 50 numbers of
particles, 1.3 for inertia weight, 2.0 for C1 and C2 constant
value, and 300 for maximum iteration were used. The
results of the proposed method are described in the next
section.
V.

THE EXAMPLE OF 3D DATA POINT

EXPERIMENTAL RESULTS

As stated before, the data that used in this study was
obtained from [3]. Table 1 shows the 3D data points in x,y,
and z directions. By using parameters that have been
described in section 4; the proposed method worked well
in solving the curve fitting problem. The comparison of
the result between the proposed method and the
conventional method is shown in Table 2. The results
illustrate that the proposed method gives the calculated
262

Conventional Method
X

Y

Z

0.0046

0.0102

0.0003

0.0254

0.0822

0

1.4996

2.0000

0.0001

1.5286

2.0190

0

3.0009

2.5019

0.0001

3.0010

2.4996

0

4.4991

1.9994

0.0001

4.4730

2.0174

0

6.0004

0.0023

0.0002

5.9976

0.0082

0

TABLE III.
COMPARISON OF THE CONTROL POINTS BETWEEN
NURBSCURVE FITTING USING PSO AND CONVENTIONAL METHOD

NURBS Curve Fitting using PSO

ACKNOWLEDGMENTS
This work is supported by research grant from Ministry
of Higher Education (MOHE) (FRGS VOT 78202).
Authors would like to thank Research Management Centre
(RMC) Universiti Teknologi Malaysia, for the research
activities, Soft Computing Research Group (SCRG) for the
support in making this study a success, and anonymous
reviewers for the comments.

Conventional
Method
X
Y
Z

X

Y

Z

w

0.0020

0.0001

0.0003

10.6898

0.00

0.00

0.0

0.3544

1.4588

0.0001

1.1780

0.409

1.378

0.0

3.0084

2.8320

0.0001

1.2787

3.00

2.874

0.0

5.7956

1.3099

0.0001

1.0914

5.591

1.377

0.0

6.0008

0.0000

0.0002

3.7511

6.00

0.00

0.0

REFERENCES
[1]

Ang Swee Wen, Siti Mariyam Hj. Shamsuddin, and Yahya
Samian, “Optimized NURBS Ship Hull Fitting using Simulated
Annealing,” In Proceedings International Conference on Computer
Graphics, Imaging and Visualization 2006 (CGIV 06), IEEE Press,
2006, pp. 484-489, doi: 10.1109/CGIV.2006.69
[2] Chou J.J. and Piegl L.A., “Data Reduction Using Cubic Rational
B-SPlines,” In Proceedings Computer Graphics & Applications
1992, IEEE Press, pp. 60-68, doi: 10.1109/38.135914
[3] David F. R., “An introduction to NURBS: with historical
perspective,” Morgan Kaufmann Publishers Inc, 2001.
[4] Formation D. S., “Maxsurf Program (Version Windows Version
12) [User Manual],” Formation Design Systems Pty Ltd., 2006.
[5] James Kennedy and Russell Eberhart, “Particle Swarm
Optimisation,“ In Proceedings International Conference on Neural
Networks, IEEE Press, 27 Nov.-1 Dec. 1995, vol : 4, pp. 19421948.
[6] Jukka Kohonen, “A brief comparison of simulated annealing and
genetic algorithm approaches,” unpublished.
[7] Lancaster and Salkauskas, “Curve and Surface fitting: an
Introduction,” London, Academic Press, 1986.
[8] Luping, F., Cen, P., Liu, S., “Particle Swarm Optimization with
Simulated annealing for TSP,” In Proceedings of the 6th WSEAS
Int. Conf. on Artificial Intellegence 2007, pp. 206-210
[9] Les Piegl and W. Tiller, “The NURBS Book,” 2nd ed. Berlin,
Springer, 1997.
[10] Siti Mariyam Hj. Shamsuddin, Mahmoud Ahmed and Smian,
“NURBS skinning surface for ship hull design based on new
parameterization method,” The International Journal of advanced
Manufacturing Technology, Springer, July 2006, vol : 28, pp. 936941, doi: 10.1007/s00170-004-2454-3.
[11] Shamsuddin, S.M.H. and Mahmoed Ahmed, “A hybrid
parameterization method for NURBS,” In Proceedings
International Conference on Graphics, Imaging and Visualization
2004 (CGIV2004), IEEE Press, 26-29 July 2004, pp. 15-20, doi:
10.1109/CGIV.2004.5.

Figure 2. The result of NURBS Curve Fitting using PSO
algorithm

VI.

DISCUSSIONS

The results shown in Table 3 depict that in the
proposed method, the calculation of weight doesn’t always
give the value of 1. Thus, the result of the proposed
method is not always in the form of B-Spline Curve.
However, there are some disadvantages of the proposed
method that are worth for discussion. One of them is the
inaccurate assignment value for constant leads to the slow
convergence rate. Moreover, the initial random value of
data points can give bad result if it is predicted quite far
from the exact value which creates larger error.
VII. CONCLUSION AND FUTURE WORK
In this study, the PSO algorithm can be used for
NURBS fitting in order to predict the data points. The
implementation of PSO algorithm, in fact, can replace the
conventional method. For future work, another
parameterization method such as Centripetal, Universal
and Hybrid Parameterization method will be implemented.
In addition, the future work can also include the selection
of constant value in order to increase the convergence rate.

263

