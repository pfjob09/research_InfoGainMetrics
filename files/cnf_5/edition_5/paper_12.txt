Skew Estimation in Persian Documents: A Novel Approach
Ashkan M.Y
University of Mysore
Manasagangothri
Mysore – 570006
Karnataka, India
ashkan.my@gmail.com

D. S. Guru
University of Mysore
Manasagangothri
Mysore – 570006
Karnataka, India
guruds@mailcity.com

P. Punitha
University of Mysore
Manasagangothri
Mysore – 570006
Karnataka, India
punithaswamy@yahoo.com

Abstract
In this paper, a robust method is proposed for
estimating skew angle of Persian document images.
The proposed algorithm applies morphological closing
on blotched image to obtain image with text line
blocks. Later, the text line blocks are subjected to
thinning to obtain the skeleton and convert the text into
line like structures used to estimate the skew angle of
document image. The results of the experiments
emphasizes that the proposed algorithm works well
irrespective of the type of script even for a wide range
of skew angle (with in ±90°).

1. Introduction
There is a growing trend to share and exchange
information electronically. The need to convert
existing paper documents into electronic ones for better
archival, retrieval and maintenance is therefore
growing. Conversion of paper documents into
electronic forms essentially requires scanning and
digitization. When a document is scanned, skew is
inevitably introduced into the image due to various
factors. It is very difficult, if not totally impossible, to
prevent skew distortion produced in scanning
procedures. However, to make the subsequent stages in
document archival and retrieval easier, it is preferable
to detect and correct the skew in the document images.
Thus, many researchers have highlighted the
importance of skew detection and correction. There
have been continuous attempts made by the research
community to come out with flexible and intelligent
skew detection scheme based on various concepts. The
existing methodologies can be broadly classified into
categories, viz., projection profile based (Chevillat and
Schindler,1982; Postl,1986; Akiyama and Hagita,1990;
Pavlidis and Zhou,1992; Bloomberg et al.,1995;
Ishitani,1996), Hough Transform based, (Srihari and

Govindaraju,1989; Hind et al.,1990; Lee, 1991; Farrow
and Xydeas,1992; Farrow et al.,1994; Ham et al.,1994;
Le et al.,1994; Yu and Jain,1996; Amin and Fischer,
2000; Kwag et al. ,2001), Straight line fitting ( Ejiri et
al.,1993; Bessho et al.,1994; Yang et al.,2002),
morphological based (Chen and Haralick,1994; Dasari
and Bloomberg,1994) and nearest neighbor clustering
based, (Hashizume et al.,1986; Okamoto et al.,1988
;Liu et al.,1992; O’Gorman,1993; Lu and Tan,2003).
A projection profile of a document image is a onedimensional array with a number of locations equal to
the number of black pixels in the corresponding row of
the image. Postl (1986) used the sum of squared
differences in adjacent cells of the projection profile
created over a range of angles to estimate the skew
angle of document. Britt (1990) improved the time
computation of (Postl, 1986) by obtaining projection
profile of centers of gravity of connected components.
Baird (1987) in a similar method to (Britt, 1990), used
bottom points of connected components to create
projection profile over a range of angles. This method
was faster than (Postl, 1986) and works well within
±15°. Another alternative method to reduce the time
computation of (Postl, 1986) was proposed by
Bloomberg and Kopec (1993). In which the image was
down-sampled before calculating the projection profile
at different degrees. The angle that maximizes the
variance of the number of black pixels in a scan line is
chosen as skew angle of document image.
Akiyama and Hagita (1990) divided the image into
swaths of fixed heights then a vertical projection
profile was calculated within each swath. This method
is limited only to documents with vertically printed
text liner (i.e. Chinese script) and fails to detect the
skew angles above 5°. However, all projection profile
based methods are sensitive to noise and are time
consuming.
The
projection
profile
based

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

methodologies are capable of detecting skew angles
only up to ±15°. Another class of skew detection
algorithms is based on Hough transformation. The
Hough transform maps points from (x, y) domain to
curves in (ρ,θ) domain, where ρ is the perpendicular
distance of the line from the origin and θ is the angle
between perpendicular line and horizontal axis in (x, y)
plane. Crossing curves in (ρ,θ) domain are result of
collinear pixels in (x, y) plane. Srihari and Govindaraju
(1989) varied value of θ between 0 and 180 degrees for
each black pixel in a document image and calculated
value of ρ in Hough space. The maximum value in
(ρ,θ) space is considered as skew angle of document
image. The method of (Srihari and Govindaraju, 1989)
was time consuming due to mapping operation from (x,
y) plane to (ρ, θ) plane for all black pixels, especially
for images containing non-text domin`nt area (i.e.
pictures, graphs etc). Le et al. (1994) improved
computational time of (Srihari and Govindaraju, 1989)
by applying Hough transform only on bottom pixels of
connected components belonging to dominant text
area. This method shows accuracy of 0.5° to the
original skew angle of the image. A superior method to
(Le et al., 1994) was proposed by Kwag et al. (2001) in
which, each connected component was enclosed by
conducting BAG (block adjacency graph) for it, later
the document was divided into segments and the angles
between bounding boxes in each segment which are
located in range of [-45°,+45°] are accumulated in a
histogram. The pixels co-ordinates corresponding to
the pick of the histogram are subjected to Hough
transform. Kwag et al. (2001) shows the average error
of 0.06°and is faster than (Le et al., 1994).Farrow and
Xydeas (1992) improved the run time of (Srihari and
Govindaraju, 1989) in a different way from (Le et al.,
1994) by considering every twentieth black pixel
vertically and horizontally in order to convert from (x,
y) domain to (ρ,θ) domain.
Ham et al. (1994) segmented the image into
paragraph-like blocks and then applied Sobel operator
to detect the segmented block edges. Later Hough
transform was applied on detected edges to estimate
the skew angle. This method is accurate within ±10°.
Generally Hough transform based methods are robust
enough to estimate skew angles between -15 to +15
degrees. But they are computationally expensive and
sensitive to noise.
Straight-line fitting is the other method to estimate
the skew angle of image documents. Ejiri et al. (1993)
fitted least squares lines to connected components and
estimated the skew angle. Bessho et al. (1994)
improved time computation of (Ejiri et al., 1993) by
choosing only upper left corner pixel co-ordinates of
each connected component within a line of text in a

down-sampled image and fitting a best line among
them. An accumulator of the angles of all fitted lines
was obtained and the maximum value in accumulator
was selected as the skew of the document. Yang et al.
(2002) applied best line fitting technique to the bottomcenter of each connected component of a text line. The
maximal absolute error of 0.08 was achieved.
Applying morphological operation on document
images has been used in few attempts, Chen and
Haralick (1994) smeared the image text horizontally
and produced a connected component for each line of
document. Later, a line fitted to the pixels in each
connected component and the skew angle was obtained
from the histogram of all fitted lines. In another
approach, Dasari and Bloomberg (1994) detected the
number of ascender and descender pixels by applying a
set of detector masks on a dilated and eroded image,
the founded number was used to estimate the
orientation of document image.
The other methods of skew detection are based on
nearest neighbor clustering. Hashizume et al. (1986)
first proposed a nearest neighbor based method, in
which a histogram of angles between nearest neighbors
of connected components belonging to document text
lines was obtained. The peak of histogram was chosen
as skew angle of document. However Hashizume et al.,
(1986) approach fails to estimate small skew angles
(near 0°) and large skew angles (near 45°). O’Gorman
(1993) generalized (Hashizume et al., 1986) by
considering five neighbors of each connected
component. The angles of such neighbors are
accumulated in a histogram and a gross estimate of
skew angle is obtained by determining the angle that
has the maximum value in histogram. The gross
estimate shows accuracy of 0.5° to the skew angle of
document. Lu and Tan (2003) introduced size
restriction to detect the nearest neighbors of a
connected component. The median value of angles of
all nearest neighbors is chosen as skew angle.
Experimental result shows that (Lu and Tan, 2003)
outperforms the (Hashizume et al., 1986) in all cases.
In fact, the nearest neighbors clustering based methods
are fast and able to estimate skew angles within ±45°
but the accuracy is highly depended on structure of
script characters. Characters with vertical expansion on
both sides of base line (i.e. j, y, p and q in English
script) tend to reduce the accuracy of these methods
due to detection of nearest neighbors, which are not
preserving the skew angle of document. Nevertheless,
the effect of such characters can be neglected in
English documents since the number of vertically
expanded characters is few, but in scripts that are rich
in such characters (i.e. South Indian and Persian
scripts), the nearest neighbor clustering fails to detect

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

the skew angle. The Persian script (or called Farsi) has
32 characters and it is cursive in nature. The words in
Persian script are written from right to left where as the
numbers from left to right. Most of the characters are
vertically expanded on both sides of the base line and
each character can have up to four forms as below.
• Detached - The character as it appears
by itself, no character joining to it either
before or after.
• Initial - The character as it appears
when preceded by a joining character.
• Medial - The character as it appears
when there are joining characters both
before and after the letter.
• Terminal - The character as it appears
when it is proceeded but not followed by
joining character.
Dissimilar to Devanagari and Bangla scripts in
which the head line (Shirorekha or Matra) is used to
detect the skew angle, the Persian script has no such
guide line. Moreover, the fashion in which the black
pixels comprise the characters of Persian script are
through vertical expansion on both sides of base line
i.e., the base line can not be predicted easily, unlike
English script in which almost all characters are
expanded above the base line. Therefore the skew
detection of Persian script is claimed to be a relatively
tougher job.
In view of this, in this paper a novel and efficient
method for detecting skew angle, an indispensable
component in scanned documents is proposed. The
proposed method is based on connected component
blotching, morphological closing and thinning
algorithm. The document image is subjected to
connected component blotching to obtain line
segmented document image. The line segmented
document image is then skeletonised to obtain linear
line-like structure. Subsequently, all line segments of
relatively larger length are chosen and enclosed by
rectangular patches that is followed by a
skeletonisation to obtain the slope of the candidate
lines preserving the skew angle of document image.
Once the set of candidates for the skew angle are
obtained, the values in the set are sorted in ascending
order and the candidates with considerably large
difference are eliminated from the list. The average of
remaining values in the set gives a more accurate skew
angle. The proposed algorithm works well irrespective
of the type of script even for a wide range of skew
angle (within ±90°).
The remaining part of the paper is organized as
follows. Section 2 proposes a novel scheme for skew
angle detection while section 3 gives the experimental

results. The efficacy of the proposed model along with
some conclusions is brought out clearly in section 4.

2. The proposed skew detection scheme
The proposed scheme is made of two stages. The
first stage proposes a method of skeletonising the
document image, while the second stage deals with
skew estimation.

2.1 Document image skeletonisation
The proposed document image skeletonisation stage
scans the image in search of connected components.
The connected components are then enclosed by a
minimum blotch. Subsequently, the outcome result is
subjected to morphological closing to obtain image
with text line blocks. Finally, the text line blocks are
subjected to thinning to obtain the skeleton of the
document. Hence, the following are the major steps
involved in document image skeletonisation.
2.1.1 Connected component blotching
The fashion, in which the black pixels comprising
the connected components are distributed, is a crucial
factor in skew detection. However, selecting a subset
of such black pixels representing the connected
components and preserving the skew angle is important
task to detect the skew angle of a given Persian
document image (Fig1). For that purpose, each
connected component is enclosed with a minimum
blotch and the document image is transformed to text
line blocked image so that the resulting text blocked
image can be subjected to thinning to obtain line-like
structures preserving the skew angle of document
image. However the only assumption made here is that
the between-line spacing is greater than with-in line
spacing. Formally if Id is document image with m
connected components then all m connected
components are enclosed either by a minimal circular
blotch or by minimum bounding rectangular blotch. If
‘B’ is a connected component to be blotched, then it is
blotched with a circle of radius d, (the maximum of all
distances from the centroid (xB, yB) of ‘B’ to the
boundary pixels of ‘B’) with (xB, yB) being the center
in case of d being less than the threshold T1, which is
strictly less than the between line spacing, otherwise
with a minimum bounding rectangle. This is due to the
fact that, if d is large, enclosing ‘B’ by a circular blotch
of radius d connects the components belonging to the
adjacent text lines, which has to be avoided. It is note
worthy that most of the connected components in
Persian script are made of two or more number of

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

characters that makes them relatively lengthy. Hence,
enclosing such lengthy connected components with a
rectangular blotch especially in document images with
a big skew angle connects adjacent text blocks. This is
avoided by adopting the concept of axis of least inertia
(Tsai and Chen., 1995). The enclosed rectangular
blotches with the help of axis of least inertia do
preserve the orientation of connected components and
avoid any merging between adjacent lines.
2.1.2 Text line blocking through morphological
closing and thinning
The text line blocked image obtained from previous
section (Fig2) is ready to be subjected to thinning
algorithm in order to obtain the line-like structures.
But, there could exist some words or sub-words of the
same text line blocks that are not yet connected to each
other. Indeed, a unique text line block tends to a
lengthier line-like structure that is preferable to detect
the skew angle. Thus, the text line blocked image is
subjected to morphological closing operation (Fig3)
with a suitable structuring element (Fig4) that connects
all blocked components that are not yet connected to
each other. However, the line blocks may contain holes
(i.e. white pixels called single island pixels) which are
not covered during morphological operation and could
be the cause of breakage during thinning operation.
Hence, they are filtered out with the help of median
filter (Fig 5).
Finally, the text line blocks are suitable to be
subjected to thinning operation that generates one-pixel
thickness line-like structures (Fig6). The line-like
structures are preserving the rotation angle of
document and they are indeed the key skeletons to
detect the skew angle. Excellently, the line-like
structures are convenient substitutes for top, middle or
bottom-line pixels of text document due to their
continuous nature and lengthy shapes.

2.2 Skew estimation and detection
In order to detect the skew angle of document image
we need to convert the line-like structures to straight
lines, so that the slope of the converted lines can be
used to estimate the skew angle. Thus, each line-like
structure is enclosed with a minimum rectangular patch
followed by another thinning operation (Fig7 and Fig8,
respectively). Actually, not all the obtained straight
lines preserve the skew angle of document image. It is
due the fact that some lines are representing graphical
objects (i.e. graphs, tables and pictures) of the original
image and they may have entirely a different slope.
Hence, a post-processing algorithm is applied on the
slope of lines whose length is bigger than T2, to retain

only those lines that are preserving the skew angle of
document. The post-processing practically proceeds as
follows.
The slopes computed for the retained lines are
sorted and the absolute difference between the first two
elements is computed. If this absolute difference is
greater than T3, where the T3 is allowable precision that
depends on the user, the first element is removed from
the set. Now, the absolute difference between the last
two elements is computed. If the difference happens to
be bigger than T3, the last element is removed from the
set. This process is repeated alternatively from both
ends of the sorted list with the next element as the
candidate for elimination. This process is repeated as
long as applicable. The post-processing algorithm not
only retains the correct candidates for the computation
of actual skew angle but also removes the erroneous
candidates. The average of the remaining values in the
set gives the most accurate skew angle.
Algorithm: Skew detection
Input : I, binary image.
T1, T2 and T3 as thresholds.
S1, Structuring element.
Output : θ, Skew angle of document image I.
STEP1: Enclose each connected component in
the
document
image
with
a
minimum enclosing circular/rectangular blotch
depending on T1 and the distance d from the
center of the connected component to the farthest
pixel on its boundary as explained in section
2.1.1.
STEP2: Perform morphological closing operation
on the image obtained from STEP1 using
structuring element S1.
STEP3: Filter out small holes if any in the
blocked image.
STEP4: Thin the blocked text lines by performing
thinning operation.
STEP5: For each thinned line whose length is
bigger than T2 Enclose the minimum rectangular
patch. Thin each blotched element by performing
thinning operation.
STEP6: Do post-processing as explained in
section 2.1.2.
STEP7: Compute the skew angle θ as the average
of the remaining values in the list.
Algorithm End.

3. Experimental results
This section presents the results of the experiments
conducted to reveal the performance of the proposed
algorithm. The method has been implemented in the
Visual Basic 6.0 language on a Pentium –III 200 MHz

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

with 600×800 resolution. The 360 images have been
obtained by scanning 15 Persian documents at 75, 100,
200 and 300 dpi in flatbed scanner.
In order to corroborate the efficacy of the proposed
methodology, (Lu and Tan, 2000) was implemented
and a set of same images was subjected to both
methodologies.
Lu and Tan (2003) estimates the skew angle of
document by chaining the adjacent characters with
almost same height and width. This process works with
respect to scripts whose characters are almost
expanded on upper side of base line (i.e. English and
south Indian scripts), but vertically expansion of the
most Persian characters on both sides of base line
prevents the proper chaining that tends to failure of (Lu
and Tan, 2003). It is noteworthy that the proposed
method is not restricted to any such restriction and
works irrespective of script.
The estimated skew angles of Persian document
images subjected to proposed method and (Lu and Tan,
2003) is presented in Table 1. The maximal, minimal,
mean and standard deviation of the occurred errors
(Table 2) are calculated respectively using the
formulations 1, 2, 3 and 4.
(1)
e max = {e e > e i , i = 1 ... N }
e min = {e e < e i , i = 1 ... N }

μ =

¦

§
SD = ¨
¨
©

N

ei

i

(2)

(3)

N

¦

N
i

( e i − μ ) 2 ·¸
¸
N
¹

1

2

(4)

Where ei is the absolute error occurred for each
particular instance of tilted image and N is total
number of rotated images.

4. Discussion and Conclusion
Skew detection and correction indeed helps the
subsequent stages in document image analysis.
Devising schemes which can detect skew angles
accurately irrespective of the scripts and range of skew
angles is a challenging task in the field of document
image analysis. In fact these are the shortcomings
existing in almost all existing methodologies. Though
many models are devised for skew detection they are
applicable to specific types of scripts and are not
capable of detecting a wide range of skew angles.
In view of this, in this paper, we have made a
successful attempt to propose a scheme to detect the

skew angle of digitized Persian document images. The
method transforms the document image into a text
blocked image through connected component blocking
and morphological closing. The image is then
subjected to thinning to obtain a skeletonised document
image. Line like structures with considerable length are
chosen and enclosed by rectangular patch and the
resultant image is subjected to one more thinning
operation. The slopes of thinned lines are the
candidates for skew angle and the skew angle is finally
decided by eliminating the erroneous candidates and
taking the average of the remaining. The structuring
element and all threshold are used in this method are
chosen experimentally. A method of choosing them
adaptively is now being carried out.
The experimental results shows that the proposed
algorithm works well for all types of documents
containing both body-text and non-body text (i.e.
graphics, drawings, etc). It is evident that the proposed
algorithm can detect large skew angles (between ±90°)
in a document.

References
[1] Akiyama T. and Hagita N., 1990, ”Automated entry
systems for printed documents.“, Pattern Recognition, 11411154.
[2]. Amin A. and Fischer S., 2000, “A document skew
detection method using the Hough transform”, Pattern
Analysis and Applications, 3, 243-253.
[3] Baird H. S., 1987, ‘The skew angle od printed
documents”, In processing of SPSE 40th Conference. Hybrid
imaging systems, Rochester, Newyork, 21-24.
[4] Bessho G., Ejiri K. and Cullen J F., 1994, “Fast and
accurate skew detection algorithm for a text document or a
document with straight lines”, Proceedings of the SPIE – The
International Society for Optical Engineering, Conference on
Document Recognition, 2181, 133-140.

[5] Bloomberg D S. and Kopec G., 1993, ” Method and
apparatus for identification and correction of document
skew”, Xerox Corporation, U.S. Patent 5,187,753.
[6] Bloomberg D S., Kopec G E. and Dasari L., 1995,
”Measuring document image skew and orientation”,
Document Recognition II (SPIE vol.2422), San Jose,
CA, 302-316.
[7] Britt R H, 1990, “Optical character reader with skew
correction”, Lundy Electronics and Systems, Inc., Charlotte,
N.C., U.S. Patent 4, 941, 189.
[8] Chen S. and Haralick R M., 1994, “An automatic
algorithm for text skew estimation in dcument images using
recursive morphological transform”, ICIP94, Austin, Texas,
139-143.
[9] Chevillat P and Schindler H R., 1982, ”Arrangement for
determining the optimum scan angle for printed documents”,
International Business Machines Corp., U.S Patent
4,338,588.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

[10] Dasari L. and Bloomberg D.S., 1994, “Rapid detection
of page orientation, Xerox Corporation”, U.S. Patent
5276742.
[11] Ejiri K, Cullen J, Tachikawa M. and Kojima K, 1993, “
Fast skew correction of a printed document”, Proceedings of
the 12th Annual Conference of the Institute of image
Electronic Engineering of Japan, 45-48.
[12] Farrow G S D., Ireton M A. and Xydeas C S., 1994,
“Detecting the skew angle in document images”, Signal
Processing: Image Communication, 6, 101-114.
[13] Farrow G S D. and Xydeas C S., 1992, “Detecting skew
in digitized images”, Int Computers Ltd., London, European
Patent App. 485,051.
[14] Ham Y K., Chung H K., Kim I K., and Park R H.,
1994, ” Automated analysis of mixed documents consisting
of printed Korean alphanumeric texts and graphic images”,
Optical Engineering, 33, 1845-1853.
[15] Hashizume A., Yeh P.S. and Rosenfeld A., 1986, ”A
method of detecting the orientation of aligned components”,
PRL, 4, 125-132.
[16] Hind S C, Fisher J L. and D’Amato D P D., 1990, “A
document skew detection method using run-length encoding
and the Hough transform”, Proceedings of the 10th
International Conference on Pattern recognition, Atlantic
City, New Jersey, 464-468.
[17] Ishitani Y., 1996, ”Document skew detection based on
local region complexity”, IEEE-7, 49-52.
[18] Kwag H.K., Kim S.H., Jeong S.H. and Lee G.S., 2001,
“Efficient skew estimation and correction algorithm for
document images”, Image and vision computing, 20, 25-35.
[19] Le D. S., Thoma G. R. and Wechsler H, 1994,
“Automated page orientation and skew angle determination
for binary document images”, Pattern Recognition, 27, 13251344.
[20] Lee Y., 1991,”Method of detecting the skew angle of a
printed business form”, Eastman Kodak Company, U.S.
Patent 5,054,098.
[21] Liu J., Lee C M. and Shu R B., 1992, “An efficient
method for the skew normalization of a document image”,
11th International Conference on Pattern Recognition, 152155.
[22] Lu Y., Tan C. L. , 2003, “A Nearest-neighbor chain
based approach to skew estimation in document images”.
Pattern Recognition Letters, 24, 2315-2323.
[23] O’Gorman L., 1993, “The document spectrum for page
layout analysis”, IEEE trans on PAMI, 15(11), 1162-1173.
[24] Okamoto M., Twaakyondo H M., and Nishizawa H.,
1988, “Skew detection, skew normalization and segmentation
of document images using segmented block code”, Journal of
the Faculty of Engineering, 9-18.
[25] Pavlidis T and Zhou J., 1992, ”Page segmentation and
classification”, Graphical models and image processing, 54,
484-496.
[26] Postl W., 1986, “Detection of linear oblique structures
and skew scan in digitized documents”. Proc. 8th Int. Conf.
on PR, 687-689.
[27] Srihari S N. and Govindaraju V., 1989, “Analysis of
textual images using the Hough transform”, Machine Vision
Applications, 2, 141-153.
[28] Yang C., Shuhua W. and Heng L., 2002, “skew
detection and correction in document images based on

straight-line fitting”, Patter Recognition Letters, 24, 18711879.
[29] Yu B. and Jain A.K., 1996, “A robust and fast skew
detection algorithm for generic documents”, Pattern
Recognition, 29, 1599-1630.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

0
1
0

1
1
1

0
1
0

Figure 1. Persian Figure 2. Text line Figure 3. Dilated and
Figure 4.
Figure 5. filtered
document image
blocked image
eroded image
Structuring element
image

Figure 6.
Skeletonised image

Figure7.
Rectangular
blotched image

Table 1.
Comparison of accuracy of the
proposed skew detection scheme with (Lu and
Tan, 2003) with respect to Persian documents.

Figure8. Thinned
image

Table 2. Maximum, minimum, mean and standard
deviation obtained by proposed method and (Lu
and Tan, 2003) with respect to Persian documents.
Lu and Tan (2003)

Maximal abs. error

The proposed
method
0.99

1.1995

Minimal abs. error

0.02

0.35

+5.4916

3.6324

Mean error

0.52

2.92

+6

+1.5785

5.1662

Standard Deviation

0.2788

2.2134

-50.2558

+8

+9.4610

8.7679

-39.3759

-40.7157

+10

+9.6362

9.8607

-30

-21.7985

-30.5873

+20

+14.9294

19.3852

-20

-19.1765

-19.8568

+30

+24.5263

29.4086

-10

-9.6586

-10.1972

+40

+36.0227

39.9785

-8

-13.0676

-8.9965

+50

NA

49.1494

-6

-8.3428

-6.6095

+60

NA

59.3169

-4

-7.7598

-4.8377

+70

NA

69.9127

-2

-3.3660

-2.8362

+80

NA

79.6551

True
skew
angle

Lu and
Tan
(2003)

The
proposed
method

True
skew
angle

Lu and
Tan
(2003)

The
proposed
method

-80

NA

-79.4141

+2

0

-70

NA

-69.5826

+4

-60

NA

-60.308

-50

NA

-40

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

8.20

