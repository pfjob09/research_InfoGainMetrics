On choosing wavelet resolution in image deblurring
Laurent Cavalier, Marc Raimondo
University of Aix-Marseille 1, University of Sydney,
Laurent.Cavalier@cmi.univ-mrs.fr, marcr@maths.usyd.edu.au
Abstract
In wavelet deblurring of noisy images the ﬁnest resolution levels are key parameters which require ﬁne tuning.
In this paper we present a blockwise thresholding rule in
the Fourier domain to derive near-optimal ﬁnest resolution
levels for a large class of blurred-image scenarios. Numerical results based on the WaveD fast algorithm of [5] illustrate the improvement over the current WaveD setting.

1 Introduction
In a recent paper [5] the 2D-WaveD algorithm was introduced. WaveD takes full advantages of the Fast Fourier
transform and performs deconvolution of noisy (n × n) images in O(n2 (log n)2 )-steps only. The WaveD method is
a non-linear fully adaptive algorithm which enjoys nearoptimal properties [6]. This deconvolution algorithm is
particularly attractive since it is a non-iterative technique
which offers both theoretical and computational advantages. In practice a ﬁne tuning of WaveD key parameters
(threshold, resolution level) is required to ensure optimal
performances. The optimal choice of the threshold parameter has been addressed at length in [6],[4] and extented to
the 2D-setting in [5]. An important issue in the tuning of
2D-WaveD is the choice of the ﬁnest resolution level(s).
The asymptotic theory of [6] prescribes that the ﬁnest resolution level j1 should satisfy:
2j1

(n/ log n)1/(1+2ν) .

(1)

Here ν is a decay parameter which depends on the Degree of Ill-Posedness (DIP) of the blurred-image model
(3). Condition (1) is an asymptotic result which informs
that the more ill-posed a problem is (large ν) the sooner
the wavelet expansion must stop. This contrasts with the
case of direct estimation (ν = 0) where there is no need to
choose the resolution level and one always set j1 = J − 1
where J = log2 (n) is the largest accessible level [3].
Condition (1) is an asymptotic result which can not be
used to ﬁnd j1 from a ﬁnite sample, however. A practical method for choosing j1 should depend on the observed
eigen-values as well as on the noise level, see e.g. [2].
In the current version of the WaveD software(s) the ﬁnest
resolution level has to be ﬁxed by the user. In practice

it is preferable to have a data-driven method for choosing
WaveD ﬁnest resolution level(s). In this paper we present
a blockwise thresholding method in the Fourier domain
which allows to choose the ﬁnest resolution level(s) from
the data. Our method agrees with (1) and is adaptive to
both the noise level and the Degree of Ill-Posedness. The
paper is organised as follows: in Section 2 we review basic deﬁnitions associated with the WaveD method. In Section 3 we present our method and some simulation results
which illustrate the improvement over the current WaveD
setting.

2 Preliminaries
2.1 A statistical model for blurred images
We begin with a function f deﬁned on the unit square
T = [0, 1]2 , this function represents our image. Let g be a
blurring kernel also deﬁned on T and let
h(x) := f g(x) =

f (x1 −u1 , x2 −u2 )g(u1 , u2 )du1 du2 ,
T

(2)
represent our blurred image. Suppose we observe h with
some additive noise
Yn (dx) = h(x)dx+σn−1 W (dx),

x ∈ T = [0, 1]×[0, 1],
(3)
where σ is a positive constant and W (.) is a 2D Wiener
process. In the Fourier domain the model (3) is written as:
y = f .g + σn−1 z ,

∈ Z 2,

(4)

where z are iid complex-valued Gaussian rv’s. An illustration of the model (3) is given in Figure 1. See [1] for
examples and applications of this model.

2.2 Two-dimensional Meyer wavelet basis
A (1D) Meyer wavelet ψ is a function whose Fourier
transform F (ψ) := ψ is smooth, [9]. The formula for
the construction of ψˆ is given in [8]. The Meyer wavelet
and associated scaling function φ are band limited and
we have Supp(φ(w)) = {w : |w| ∈ [0, 4π/3]} and
Supp(ψ(w)) = {w : |w| ∈ [2π/3, 8π/3]}. Twodimensional Meyer wavelets (and scaling function) are deﬁned in the the Fourier domain from the 1D-pair (φ, ψ) by

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

(a)

(b)

Figure 1: Illustration of the model (3): (a) Original image 256 × 256, (b) Noisy blurred image.
tensorial-product
ψ 1 (w1 , w2 ) = φ(w1 )ψ(w2 ) , ψ 2 (w1 , w2 ) = ψ(w1 )φ(w2 ) ,
ψ 3 (w1 , w2 ) = ψ(w1 )ψ(w2 ), φ1 (w1 , w2 ) = φ(w1 )φ(w2 ).
In the fast algorithm of [5] the periodised version of the
2D-Meyer basis is computed by sampling ψˆm along a
dyadic grid:
−j ˆm
Ψm
ψ ( /(2j π),
j,0,0 ( ) = 2

The WaveD estimator

We recall the deﬁnition of the 2D-WaveD estimator [5]
3

f˜ =

β˜κm I{|β˜m |≥λm } Ψm
κ .

α
˜ κ I{|α˜ κ |≥λj0 } Φκ +

κ

m=1 κ∈I1

κ∈I0

j

(5)
where I0 , I1 are set of indices; I0 = {(j0 , k1 , k2 ) : 0 ≤
ki ≤ 2j0 − 1, i = 1, 2} corresponds to a coarse resolution
level j0 and I1 = {(j, k1 , k2 ) : 0 ≤ ki ≤ 2j − 1, i =
1, 2, j0 ≤ j ≤ j1 } indexes details up to a ﬁne resolution level j1 . The WaveD coefﬁcients are computed in the
Fourier domain
β˜κm = WaveD(Y, g, Ψm
κ ) :=
∈Cjm

y
g

¯ m,κ ,
Ψ

(6)

where Cjm = { : Ψm,κ = 0}. Next we set
τjm = |Cjm |−1

|g |−2
∈Cjm

λm
ˆ τjm (log n)/n,
j := γ σ

(8)

where γ is a constant and σ
ˆ is an estimate of σ. The asymptotic theory of [6] prescribes that for “smooth” convolution
kernel convolution where |g | ∼ (| 1 | + | 2 |)−ν , the ﬁnest
resolution level j1 should satisfy (1). See [7] for other examples including box-car blurring.

3 Resolution tuning by blockwise Fourier
thresholding

see Figure 2 of [5] for an illustration.

2.3

where |Cjm | denotes the cardinality of Cjm . The WaveD
(level-by-level) thresholds are deﬁned according to each
orientation (m = 1, 2, 3) by

1/2

,

(7)

In this Section we propose a data-driven method for
choosing the ﬁnest WaveD resolution level in (5). Our
method uses the observed eigen-values (g ) whose inverse
is 2 averaged over dyadic blocks (7). When (τjm )−1 goes
below a certain noise level for some j = jopt we set
ˆj1m := jopt , see Figure 2. We refer to this process as
blockwise Fourier thresholding. The blockwise approach allows for different resolutions according to each
directions (Horizontal, vertical, diagonal).

3.1 The method
At resolution level j the inversion-process inﬂates the
noise standard deviation by a factor of (τjm ) according to
each direction m = 1, 2, 3. The idea is to keep all resolution level such that the price for deconvolution (inverting
the eigen-values) is no more than the maximum (allowed)
noise level. Extending the method of [2] to the 2D-setting
the maximum noise level that we can accept while preserving optimal properties is given by (2j/2 σ
ˆ (log n)/n)−1 .For
m
ˆ
a ﬁxed direction m we choose j1 to be the smallest resolution such that it does not exceed the maximum noise

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

High noise

Medium noise

Low noise

10

10

10

5

5

5

0

0

0

−5

−5

−5

−10

−10

−10

−15
−20

−15
3

4

5
Horizontal

6

7

−20

10

10

5

5

−15
3

4

5
Horizontal

6

7

−20

0

0

−5

−5

−10

−10

−10

−15
3

4

5
Vertical

6

7

−20

6

7

3

4

5
Vertical

6

7

3

4

5
Diagonal

6

7

−15
3

4

5
Vertical

6

7

−20

20

20

10

15

15

5

10

10

5

0

5
Horizontal

5

0

−20

4

10

−5

−15

3

5

0

0

−5

−5

−10

−10

−5
−10
−15
−20

−15
3

4

5
Diagonal

6

7

−20

−15
3

4

5
Diagonal

6

7

−20

Figure 2: Blockwise Fourier thresholding. For axis scaling purposes we multiplied both sides of (10) by n2 and used a
log-log scale. From left to right: high, medium and low noise level. Thick plain curve j → log n2 (τjm )−1 , dashed-line:
j → j log(nˆ
σ (log n))) log(2)/2. Left: blockwise level selection (ˆj11 , ˆj12 , ˆj13 ) = (4, 4, 4); middle: blockwise level selection
1 ˆ2 ˆ3
ˆ
(j1 , j1 , j1 ) = (5, 5, 4); right: blockwise level selection (ˆj11 , ˆj12 , ˆj13 ) = (5, 5, 5).
the WaveD2.0 software package which is available at
http://www.maths.usyd.edu.au/u/marcr/.

level:
ˆj1m = min j ≥ 0 : τjm ≥ 2j/2 σ
ˆ (log n)/n

−1

− 1.

(9)
Alternatively, we can choose ˆj1m to be the largest resolution level such that (τjm )−1 is below the maximum noise
level:
ˆj1m = max j ≥ 0 : (τjm )−1 ≤ 2j/2 σ
ˆ (log n)/n

.
(10)
Deﬁnition (10) is used for illustration of the
blockwise method on Figure 2 with the data-example
of Figure 1 in different noise levels (see Section 3.2 for
numerical details). Note that for smooth blurring with a
kernel g which satisﬁes |g | ∼ (| 1 | + | 2 |)−ν :
τjm = |Cjm |−1

|gl |−2

1/2

2jν .

l∈Cjm

In this case deﬁnition (10) shows that j1m := ˆj1m satisﬁes
m

2−j1

ν

m

2j1

/2

σ
ˆ (log n)/n ,

which agrees with condition (1). The implementation of
the blockwise method (10) is straightforward from the

3.2 The results
We present some simulation results to compare the 2DWaveD with ﬁxed ˆj1 as in [5] to the data-driven level selection method presented in Section 3. The 2 methods are referred as fixed and blockwise respectively. We illustrate our results with the well-known ’Camera’ image. The
original image (256×256) is depicted on Figure 1(a). In
Figure 1(b) we depicted the model (3) with high noise level
σhigh = 0.0663 and a smooth blurring kernel g with based
on a Γ(10, 0.005) distribution similar to [5]. In Figure 1(b)
the Blurred-Signal-to-Noise-Ratio (BSNR) is 10dB. In
our study we also report performances for medium noise
level σmed = 0.0037 (BSNR=35dB) and high noise level
σhigh = 0.0003 (BSNR=60dB). Our numerical results,
based on 100 replications of the model (3), are summarised
in Table 1. Visual performances in different noise levels
are illustrated on Figures 3,4 and 5. The results speaks for
themselves since in all cases the blockwise method outperformed (or equalled) the fixed-method. Only in the
situation where the user has a good ’guess’ of the best resolution level ˆj1 the 2 method agree, see Figure 5. In cases
where the user over-estimate j1 the results of WaveD are
very noisy see Figure 3(a). Even in scenarios where the
user has a good ’guess’ of ˆj1 the blockwise method is

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

Figure 3: WaveD estimates: left arbitrary ˆj1 = 5, right blockwise level selection (ˆj11 , ˆj12 , ˆj13 ) = (4, 4, 4).

Figure 4: WaveD estimates: left arbitrary ˆj1 = 5, right blockwise level selection (ˆj11 , ˆj12 , ˆj13 ) = (5, 5, 4).

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

Figure 5: WaveD estimates: left arbitrary ˆj1 = 5, right blockwise level selection (ˆj11 , ˆj12 , ˆj13 ) = (5, 5, 5)
more reﬁned since it allows direction-wise choice which
may differ from one direction to the other This is the case
in Figure 4(b) where blockwise level selection yields
(ˆj11 , ˆj12 , ˆj13 ) = (5, 5, 4) which gives a a better visual appearance than the fixed choice ˆj1 = 5, compare Figure
4(a).
q
Table 1. Monte-Carlo approximations to RMISE= E
Resolution-level
BSN R = 10dB
35dB
0.2484
0.2394
User-Fixed ˆj1 = 4
User-Fixed ˆj1 = 5
0.3370
0.1910
Data driven-Blockwise
0.2484
0.1867

3.3

fˆ − f 22
60dB
0.2392
0.1835
0.1835

Conclusion

We have presented a data-driven method for choosing
resolution level(s) in wavelet deblurring of noisy images.
The method is based on a blockwise thresholding rule on
the eigen-values. This method automatically adapt to the
degree of ill-posedness of the blurring kernel as well as to
the noise level. In 1D-classical Singular Value Decomposition recent results of [2] suggests that this method may be
applied in the case of noisy eigen values. Extension to the
2D-WaveD setting of the blockwise method with noisy
eigen-values is under investigation by the authors.

References
[1] M. Bertero and P. Boccacci, Introduction to Inverse
Problems in Imaging, Institute of Physics, Bristol and
Philadelphia, 1998.
[2] L. Cavalier and N.W., Hengartner. Adaptive estimation for inverse problems with noisy operators. Inverse Problems 21, 1345-1361, 2005.

[3] Donoho, D. L., Johnstone, I. M., Kerkyacharian,
G. and Picard, D. Wavelet shrinkage: Asymptopia?,
Journal of the Royal Statistical Society, Series B,
57, 301–369. With Discussion, 1995.
[4] D. Donoho and M. Raimondo, Translation invariant
deconvolution in a periodic setting, The International
Journal of Wavelets, Multiresolution and Information
Processing 14, 415-432, 2004.
[5] D.L. Donoho and M.E. Raimondo A Fast wavelet algorithm for image deblurring. Australian and New
Zealand Industrial and Applied Mathematics Journal,
46(E):C29:-C46, 2005.
[6] I. Johnstone, G. Kerkyacharian, D. Picard, and
M. Raimondo, Wavelet deconvolution in a periodic
setting, Journal of the Royal Statistical Society, Series B 66, 547–573. With discussion pp.627-652,
2004.
[7] I. M. Johnstone and M. Raimondo, Periodic boxcar
deconvolution and diophantine approximation, Annals of Statistics 32, 1781–1804, 2004.
[8] S. Mallat, A wavelet tour of signal processing (2nd
Edition), Academic Press Inc., San Diego, CA, 1998.
[9] Y. Meyer, Ondelettes et Op´erateurs-I, Hermann,
1990.

Proceedings of the International Conference on Computer Graphics, Imaging and Visualisation (CGIV'06)
0-7695-2606-3/06 $20.00 © 2006

