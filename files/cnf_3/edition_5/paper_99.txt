Navigating Large Clustered Graphs with Triple-Layer Display
Mao Lin Huang and Quang Vinh Nguyen
Faculty of Information Technology, University of Technology, Sydney
{maolin@it.uts.edu.au, quvnguye@it.uts.edu.au}
Abstract
This paper presents a technique for navigating large
clustered graphs with triple-layer display. Although our
navigation and interaction technique can be applied
independently to any graph layout algorithms, in our
implementation, our navigation algorithm is cooperated
with a clustered graph layout algorithm. In short, we
provide users with the display of three levels of
contextual information for navigation. They are the
display of full-context, the display of the current-context
view and the display of the focused view. Our technique
not only allows users to navigate hierarchically up and
down through the entire clustered graph, but also
provides a way to navigate multiple clusters
concurrently. We also use animation to preserve the
users’ mental maps during the interaction.
Keywords--- navigation, interaction, multipleviews, clustered graph, information visualization.

1. Introduction
Graphs generated in real-world applications could be
very large with thousands or perhaps millions of nodes,
such as citation and collaboration networks and the
World Wide Web (WWW). As the result of rapid
increasing of the size in networks, the data retrieval
through the navigation of large scale visualization has
become one of the hottest topics in Information
Visualization. The issue of “view-ability” and usability
usually arises for visualizing large graphs (relational data
sets) because it will be almost impossible to discern
between nodes and edges when a dataset of thousands of
items are displayed [1]. Therefore, the key issue raised in
large graph visualization is not only to provide
comprehensively display of large graphs on the screen
but also to efficiently navigate through the visual
structures to identify particular sub-structures and data
items. The navigation should enable users to
interactively adjust the views to reach an optimized
representation of the graph; from which users can obtain
the best understanding of the data and its relational
structures they are currently interesting in.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

Interactive visualization is a different way of
thinking about information processing in information
systems. It is no longer a task-driven user who
formulates a precise query, types it into the database
search form, retrieves the result and then leaves the
computer. Information processing becomes a continuous
exploration through the visual mappings. Users are in the
information space more or less all the time, together with
a multitude of heterogeneous information sources. They
can explore, view, investigate, discover, learn and
manipulate through the visual metaphors.
One of the most important issues involved in
navigation is that the users are always able to see (or
have easy access to) contextual information. This allows
the users to maintain the perception of where they are
and where they can move from during the navigation of
large information spaces. This also assists users to make
further decisions about where they should go next, as
well as where they are, while interactively navigating
through the information space. To achieve easy access
to both the contextual and the local information in large
hierarchies, there are several optimized navigation
schemes have been developed to accommodate with the
geometrical layout techniques. Most of the existing
navigation techniques can be roughly classified into three
approaches: focus+context, zooming+filtering, and
incremental exploration.
•

•

Focus+context approach – is defined as a viewing
approach that provides users with a detailed view of
a small focus area and a global view of the overall
context. In other words, it can be defined as
"detailed views of particular parts of an information
set are blended in some way with a view of the
overall structure of the set". A few typical
focus+context techniques are Fisheye Views [2, 3],
Polyfocal Display [4], Bifocal Lens [5], Perspective
Wall [6], Hyperbolic Browser [7].
Zooming+filtering approach – is defined as a
viewing approach that works by reducing the
amount of context in the display. The reduction is
done by filtering the information in the form of
selecting a subset of the data along a range of
numerical values of one or more dimensions. A few
typical zooming+filtering techniques are Starfield

•

Display [8], Tree-Maps [9], Pad [10], Pad++ [11]
or the more recent version called Piccolo [12].
Incremental exploration approach – is defined as a
viewing approach that displays only a small portion
of the full hierarchy incrementally following the
user's exploration of information space. Thus, these
techniques are theoretically able to handle huge data
sets where it is impossible to display the entire
hierarchy on the screen at a time. Some typical
Some typical incremental exploration techniques can
be found at [13, 14 and 15].

Technically, these techniques provide both global
and detail views by using different approaches. Some of
them use an extra window [16, 17, 18, 19, 20], others
split the display area [21, 22] into two areas or two layers
of the some area by using semi-transparency to display
context in an overlapped manner [23].
However, the above techniques have a common
limitation that they usually could only provide users with
one level of the context view. Therefore, for large data
set, one level of the context view could be too abstract or
insufficient for users to gain a good understanding of the
contextual information about where they are and where
they came from during the exploration of large data.

2. Triple-Layer Display of Graphs
In this paper, we proposed a new focus+context
technique for navigating large clustered graph with
multiple context views that provides could provide users
with a number of levels of contextual information. Our
technique allows the exploration of data hierarchically as
well as across multiple selected sub-clusters to quickly
focus on the interest parts of data. Therefore, users can
semantically zoom into one or many areas of interest
from any level of the context views directly. This enables
users to quickly move among the context views and
speed up the navigation process. This technique enables
users to effectively navigate through the very large data
sets while maintaining a good view (or understanding) of
the contextual information for navigation.
Our algorithm is responsible for the navigation and
interaction of a clustered graph C = {G, T}={(V, E), T}
in a two-dimensional geometrical space, including a
vertex subset {v1, v2, …vn} in V and a clustered subset
{v’1, v’2, … v’n} in V’. A clustered graph C = {G, T} is
derived by a general graph G = {V, E} and a clustered
tree T whose leaves are in V. Each cluster v’i = C’ is a
sub clustered graph, contains a subset of V given by the
leaves of the sub-tree T’ rooted at r’. The root r’ of the
sub-tree T’ is also called a super-node. The super nodes
are not displayed in our visualization but they are used
for navigating sub cluster graph. Further description of
clustered graph can be found in [24].
Our triple-layer display includes the displays of the
focus-view and two high level context-views. The mainview, which occupies more than two-third of the display
area, is responsible to display the detail of a focused subgraph or the entire context graph. In addition, the main-

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

view shows as much detail of information as possible so
that users can perform most of their interaction and
analysis on this area. A couple of context-views, which
are displayed in the small areas at the left-hand side, are
responsible for displaying a several levels of the
contextual information (or the history of navigation)
during the navigation. The detail of these context-views
is filtered and they remain only the main structures in an
abstract level for guiding the navigation. These main
structures could maintain users’ mental maps of where
they are, where they came from, and where they have
been during the data navigation.
Our navigation and interaction technique works in
cooperation with a space-efficient layout algorithm for
clustered graphs. This layout algorithm is responsible for
calculating the position of nodes in all context and focus
views in which the use of space is optimized. Although
the number of context views can be extended according
to the complexity and the depth of the clustered graph,
we only provide two context views in our prototype
system. As a result, three views are provided to assist
viewers to obtain the best understanding of the dataset
and its relational structure they are currently exploring.
These views are: 1) the overall-context view, 2) a
current-context views and 3) a main focus view (see
Figure 1 and Figure 2).
•

•

•

The overall-context view is displayed as a small
panel located at the top-left side of the visualization.
This view displays the entire context of a large
clustered graph in three highest-levels of abstraction
with little details. The overall-context view enables
users to maintain an overall image of the clustered
graph C. In our implementation, the view only
shows three levels of the clustered graph from the
root-node.
The current-context view is displayed as a small
panel locating under the full-context view at the lefthand side. This view displays the immediate context
of the up-level from the focused sub-cluster C’ with
three-levels of hierarchy. Similar to the full-context
view, this view displays up to three levels of
clustered graph from previous context in an
abstraction manner.
The main-view is displayed in a large area of the
visualization. It displays the detail of a focused subgraph in which the structure of the clustered graph is
displayed in an enclosure manner using different
color brightness for each hierarchical level. This
view also shows the connectivity strength between
clusters using the width of edges. Furthermore, the
size of nodes in the main-view is automatically
rescale based on the number of visible nodes.

The full-context view and the current-context view
update and synchronize automatically their visualization
according to changes occurred in the navigation. It
highlights the context of the current sub-graph where the
users are interacting; therefore, the users can always
identify the where they are and where they have been in

a large information space. Our prototype paints the
highlighted sub-graphs using a darker color at the
background.
Figure 1 and Figure 2 are examples of screen-dumps
of the views during the navigation of a citation network
in social network’s research. These figures not only show
quite clearly the contextual information as well as the
detail information, but also indicate the relationships
between the focused sub-graphs from the context views.
For example, in Figure 1 we can easily identify the
overall structure which is at the top-left region showing
the entire context information. This full-context view
highlights the current-context view which is as a large
sub-graph at the right-hand side. It also highlights the
focused information as the top-right sub-graph which is
inside large sub-graph at the right-hand side. The change
of the layout from these context views is resulted from
the optimization of the display space from the layout
algorithm. Figure 2 shows the visualization when the
bottom-right sub-graph is selected to enlarge. The fullcontext view now updates the highlighting regions while
the current-context view updates its display information
according to the main-view from Figure 1.

upper level structure and 3) the current focused
structure.

Figure 2. An enlarged navigational view of the
sub-graph displayed at the bottom-right side of
the Figure 2 when it is selected.
•

3. Interactive Navigation and Animation
The navigation in our visualization system is
achieved interactively by semantic zooming. The user
can navigate a clustered graph from the main view, the
full-context view or the current-context view. The
semantic zooming enlarges the display of a particular
sub-graph from any of these views based on users’
interest at a time. All view transactions are
accommodated by animations to preserve the users’
mental map of views. It is a real challenge to implement
animation in viewing very large graphs. The expensive
computational cost of view transformations of large
datasets (with more than 10,000 nodes) might disrupt the
smooth animation. Therefore, to reduce the
computational cost while retaining a good users’ mentalmap during the navigation, we only apply animation to
those two most outer clusters including smooth moving,
fading in and fading out.

•

•

Figure 1. A clustered visualization of a large
citation network in social network with three
levels of display: 1) the overall-structure, 2) the

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

Navigation in the main view - when a node v at a
clustered graph C is selected, its sub-graph C’(v)
expands smoothly to occupy the entire display area
using semantic zooming. Accordingly, the size of
the nodes in its sub-graph increases to match the
consistency of the new view. The previous main
view of the parent cluster C at the main view fades
out to the background and it is then displayed at the
current-context view (see Figure 7). The full-context
view and the current-context view then highlight the
focused sub-graph C’(v) in their displays
correspondingly (see Figure 4 and Figure 5). We
also provide a mechanism to recall the previous
context so that users can move forwards and
backwards between different levels of the context.
This can be done through the right mouse-click
event. During the reverse navigation, the parent
graph C will smoothly fade in from the background
to the actual colors while the sub-graph C(v) will
fade out to the background (see Figure 8).
Navigation in the context views – when a node v at a
graph C is selected at a context view, its sub-graph
C’(v) will smoothly fade in from the background to
occupy the whole area of the main view while the
previous clustered graph C will fade out into the
background at the main view. Both context views
then change their highlighted regions to the new
focused sub-graph C’(v).
Multi-clusters Navigation - when a number of
clustered nodes {vk, vl, …, vn} at a clustered graph C
are selected, their sub-graphs {C’(vk), C’(vl), …,
C’(vn)} expand smoothly to occupy the entire
display area by using semantic zooming. The levels
of those clustered nodes {vk, vl, …, vn} can be the
same or different. This allows more flexibility when
users would like to analyze a particular number of
interested clusters across multiple hierarchical
levels. These selected clusters nodes {vk, vl, …, vn}

Figure 3. The entire visualization of a very large
clustered graph (a protein dataset) before the
navigation.

Figure 6. An enlarged visualization of these
clusters and sub-clusters displayed in Figure 5
when they are selected.

Figure 4. An enlargement of the largest cluster
displayed at the right-hand side of Figure 4.
Both levels of the context view highlight the
focused cluster with the darker background.

Figure 7. An example of animated
transformation from Figure 4 to Figure 5.

Figure 5. An enlarged visualization of the
bottom-right cluster displayed in Figure 4. The
full-context view now highlights 1) the currentcontext view at the right-hand side with the bold
border and 2) the focused cluster at the topright with the darker background. The mainview also indicates a selection of several subclusters including two clusters at the left side, a
sub-cluster at the bottom left of the middle
cluster and two sub-clusters at the bottom-left
of the top-right cluster.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

view

Figure 8. An example of animated view
transformation when the previous context is
recalled as from Figure 5 to Figure 4.

[4]

then have temporarily the same levels so that the
layout algorithm can re-calculate the new layout for
these clusters. In addition, the abstract links among
clusters, which indicate the relational strength
between two clusters, are also recomputed according
to new selection among clusters. Figure 6 shows the
visualization when those clusters and sub-clusters
from Figure 5 are selected to enlarge, which include
two clusters at the left side, a sub-cluster at the
bottom left of the middle cluster and two subclusters at the bottom-left of the top-right cluster
In order to reduce the computational cost for
interactive navigation, the process of recalculation of
layout algorithm is only applied to none-leaf nodes in the
focused sub-graph. The positions of leaf nodes are only
calculated once and they are scaled and shift to new
location for each interaction. The recall context process
does not require a new layout partitioning process
because the positions of those context nodes remain the
same.

Conclusions

[5]
[6]

[7]

[8]

[9]

[10]

We have presented a focus+context technique for
viewing and navigating large clustered graphs. This
technique uses triple-layer display approach to show the
contextual information in multiple levels. This could
greatly reduce the visual complexity of the contextual
information while exploring the large scale dataset.
Technically, we use a large view to display the focus
sub-graph and a number of small views to display the
contextual information in several levels. This technique
can also be used to navigate large clustered graphs
hierarchically. It enables users to zoom a number of
selected clusters simultaneously for further analysis.
Smooth moving and fade animation is also
accommodated with each interaction in order to preserve
the users’ mental maps.

[14]

Acknowledgements

[15]

[11]

[12]
[13]

This project is supported by Australia ARC
Discovery research grant #DP0665463.
[16]

References
[1]

[2]

[3]

I. Herman, G. Melancon, and M.S. Marshall. Graph
Visualization in Information Visualization: a Survey.
IEEE Transactions on Visualization and Computer
Graphics, 6, pp. 24-44, 2000.
G.W. Furnas. Generalized Fisheye Views. In
Proceedings SIGCHI '86 Conference on Human Factors
in Computing Systems, (Boston, Massachussetts). ACM
Press, pp. 15-22, 1986.
M. Sarkar and M.H. Brown. Graphical Fisheye Views.
Communications of the ACM (CACM), 37(12), pp. 7384, 1994.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

[17]

[18]

N. Kadmon and E. Shlomi. A Polyfocal Projection for
Statistical Surfaces. Cartographic Journal, 15(1), pp. 3641, 1978.
R. Spence and M.D. Apperley. A Bifocal Display
Technique for Data Presentation. In Proceedings of
Eurographics, pp. 27-43, 1982.
J.D. Mackinlay, G. G. Robertson and S. K. Card. The
Perspective Wall: Detail and Context Smoothly
Integrated. In Proceedings of ACM Computer-Human
Interaction '91 Conference on Human Factors in
Computing Systems (New York, USA), ACM Press, pp.
173-179, 1991.
Lamping J and Rao R. The Hyperbolic Browser: A Focus
+ Context Technique for Visualizing Large Hierarchies.
Journal of Visual Languages and Computing, 7(1), pp.
33-55, 1996.
N.K. Jog and B. Shneiderman. Starfield Visualization
with Interactive Smooth Zooming. In Proceedings of
Visual Database Systems 3, Visual Information
Management (VBD'95) (Lausanne, Switzerland),
Chapman & Hall, pp. 3-14, 1995.
B. Johnson and B. Shneiderman. Tree-Maps: A SpaceFilling Approach to the Visualization of Hierarchical
Information Structures. In Proceedings of The 1991
IEEE Visualization (Piscataway, NJ, USA), IEEE
Computer Society, pp. 284-291, 1991.
K. Perlin and D. Fox. Pad: An Alternative Approach to
the Computer Interface. In Proceedings of 20th
International Conference on Computer Graphics and
Interactive Techniques (ACM SIGGRAPH '93) (New
York, USA), ACM Press, pp. 57-64, 1993.
B.B. Bederson et al. Pad++: A Zoomable Graphical
Sketchpad for Exploring Alternate Interface Physics.
Journal of Visual Languages and Computing, 7(1), pp. 332, 1996.
B.B. Bederson, J. Grosjean and J. Meyer. Toolkit Design
for Interactive Structured Graphics. Transactions on
Software Engineering, 30(8), pp. 535-546, 2004.
M.L. Huang, P. Eades and R.F. Cohen. On-line
Animated Visualization of Huge Graphs Using a
Modified Spring Algorithm. Journal of Visual Langages
and Computing, 9(6), pp. 623-645, 1998.
S.C. North. Incremental Layout in DynaDAG. In
Proceedings of Graph Drawing (GD '95) (Passau,
Germany), Springer, pp. 409-418, 1996.
U. Brandes and D. Wagner. A Bayesian Paradigm for
Dynamic Graph Layout. In Proceedings of the
Symposium on Graph Drawing (GD'97) (Rome, Italy),
pp. 236-247, 1997.
M.Q.W. Baldonado, A. Woodruff and A. Kuchinsky.
Guidelines for Using Multiple Views in Information
Visualization. In Proceedings of Advanced Visual
Interfaces (AVI'2000), ACM Press, Palermo, Italy, pp.
110-119, 2000.
G. Convertino, J. Chen, B. Yost, Y.S. Ryu and C. North.
Exploring Context Switching and Cognition in DualView Coordinated Visualizations. In Proceedings of
Coordinated and Multiple Views in Exploratory
Visualization (CMV'03), IEEE Computer Society,
London, UK, pp. 55-62, 2003.
C. North. Multiple Views and Tight Coupling in
Visualization: A Language, Taxonomy, and System. In
Proceedings of the 2001 International Multi-Conference
in Computer Science and Computer Engineering,
CSREA, Las Vegas, Nevada, USA, pp. 626-32, 2001.

[19] J.C. Robert. On Encouraging Multiple Views for
Visualisation. In Proceedings of International
Conference on Information Visualisation (IV 1998),
IEEE Computer Society, London, UK, pp. 8-14, 1998.
[20] J.C. Robert. Multiple-View and Multiform Visualization.
Visual Data Exploration and Analysis VII, vol. 3960,
IS&T and SPIE, pp. 176-85, 2000.
[21] K. Andrews and H. Heidegger. Information Slices:
Visualizing and Exploring Large Hierarchies Using
Cascading, Semi-Circular Discs. In Proceedings of LateBreaking Hot Topics – IEEE Information Visualization –
Infovis’ 98, NC, USA, pp. 9-12, 1998.
[22] J. Stasko and E. Zhang. Focus+Context Display and
Navigation Techniques for Enhancing Radial, SpaceFilling Hierarchy Visualizations. In Proceedings of IEEE
Information Visualization – InfoVis2000, Utah, USA, pp.
57-65, 2000.
[23] Q. V. Nguyen and M. L. Huang. A Focus+Context
Visualization Technique Using Semi-transparency. In
Proceedings of the 4th International Conference on
Computer and Information Technology (CIT2004),
IEEE, Wuhan, China, pp. 101-108, 2004.
[24] Q. Feng. Algorithms for Drawing Clustered Graphs. PhD
Thesis, University of Newcastle, Newcastle, Australia,
1997.

11th International Conference Information Visualization (IV'07)
0-7695-2900-3/07 $20.00 © 2007

