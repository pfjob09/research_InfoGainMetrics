2009 13th International Conference Information Visualisation

Evaluation of Overcluttering Prevention Techniques for Mobile Devices

Paulo Pombinho, Maria Beatriz Carmo, Ana Paula Afonso
Departamento de Informática, Faculdade de Ciências, Universidade de Lisboa
ppombinho@lasige.di.fc.ul.pt, {bc, apa}@di.fc.ul.pt
Abstract

there is a need for techniques to avoid over cluttered
images.

The increasing popularity of mobile devices has
fostered the development of visualization applications
for these devices. However, the reduced screen size
and different interaction devices, which people are not
familiarized, present some challenges to visualization
in a mobile environment. This paper describes how, as
a proof of concept, a combination of two different
techniques can reduce the over cluttering of icons on a
mobile device screen. An evaluation of these techniques is also presented.

In this paper we start by reviewing, in section two,
techniques which aim to solve cluttering in mobile
devices. In section three, we describe a combination of
techniques to reduce the number of displayed icons. In
section four, we describe the evaluation of the techniques proposed and present the results obtained. Finally, on section five, we present our conclusions and
future work.

2. Approaches to reduce over cluttered
images

1. Introduction

The presentation of large amounts of information in
small screens is, currently, an important research area.

One of the most outstanding characteristics of our
society is the growing mobility of people. This mobility is currently combined with a growing desire to use
computation and communication tools in a mobile environment.

An approach to obtain intelligible images in small
screens is to reduce the amount of information shown.
One way to achieve this reduction is using filtering
techniques that determine the relevance of each element and use this information to exclude the less relevant ones.

Due to the proliferation of mobile devices with integrated global positioning systems, visualization of
geo-referenced data with location context have increased. For instance, commercial navigation applications, like TomTom Navigator [16], Navigon [11] and
NDrive [12] are currently very popular. Google Maps
Mobile [9] is another commercial application that is
based on Google Maps [8] and is optimized to be used
on mobile phones.

Although not directly related to mobile devices,
George Furnas [7] explores the presentation of potentially large structures in windows of reduced size and
uses fisheye views to address this issue. To formalize
his conception of fisheye views, the author introduces
the concept of a degree of interest function. This function describes the interest the user has to visualize a
certain object. This function is defined as the combination of two components: an a priori importance that
represents the global interest on the object, and an a
posteriori importance that depends on what the user is
focusing at the moment and is expressed by a distance
function.

However dealing with a lot of data and producing
intelligible images is still a problem. Information visualization is hindered by several technical restrictions in
mobile devices, such as the screen size and its resolution, the lack of processing, storage and memory capacity, battery power, wireless network bandwidth and
connectivity and inadequate input devices [1]. Of all
these restrictions, the screen size is undoubtedly the
most severe, not only because of the difference when
compared to desktop screens, but namely due to the
size of the mobile devices themselves, it is a restriction
that should not disappear in the near future. Therefore

978-0-7695-3733-7/09 $25.00 © 2009 IEEE
DOI 10.1109/IV.2009.51

In [10] the authors also address the problem of
visualizing large amounts of information. One of the
problems stated is that, frequently, the result of a query
to a database is composed either of too many results,
overwhelming the user, or no results at all, not giving
the user a clue on how to continue his search. To solve
127

this problem, the authors created the VisDB system
which considers not only the objects that match a
query, but also those that only satisfy it partially. To
determine the relevance of each object, distance functions are used for each of the attributes specified by the
user. Since different attributes may have different priorities, the users are allowed to set a weight factor for
each of them. The resulting distances are then combined.
Based on the previous work, Reichenbacher [15]
focuses on mobile device cartography. He considers
not only the object and its location but also the time of
events related to the object. To calculate the relevance
of each object Reichenbacher combines three distances: a topical distance, a spatial distance and a temporal distance.

3. Visualization issues
It is very easy to over clutter the screen of a mobile
device with information. Figure 1 shows the hard time
a user can have while trying to understand such a confusing image.

Another way to reduce the amount of information
shown is to use generalization operators that group
elements that are close to each other, replacing them
with another representation. In [5] five different operators are suggested: Selection, Simplification, Aggregation, Typification and Displacement.

Figure 1: Over cluttered image.
Our aim was to create an information visualization
system designed for mobile devices that could present
geo-referenced points of interest organized in categories (e.g. Hotel) with multiple attributes (e.g. Price,
Classification). For this purpose, icons are placed over
a map representing the points of interest.

In [17] a similar approach is described. The visualization area is divided in a grid and the information
density for each cell is determined. Then, to maintain a
constant density throughout the grid, some elements
can be displayed with a simpler representation,
grouped with other elements or removed.

3.1 Degree of interest function
To obtain an intelligible representation, we have to
control the number of results that are shown on the
screen. We use a degree of interest function that enables us to quantify the relevance, for the user, of each
point of interest. This function, described in more detail in [3], is based on Furnas’s degree of interest function [7] and the work of Keim and Kriegel [10], both
described earlier.

In [2] is presented additional work that has been
done on the positioning of aggregation icons. In this
paper the authors describe several algorithms designed
to perform fast aggregations.
Using techniques like the ones described before,
can help selecting the proper information and presenting it in a convenient way to the user. However, the
mapping between the information and the visual elements should also be adapted to enable the user to easily apprehend its meaning.

The degree of interest function (DoI) quantifies the
interest the user has on certain point of interest, pj, as
the average of the user interest (UI) on the k different
attributes ai, i=1,2,…,k, multiplied by a weight wcat for
the category of pj . Both ai and wcat are specified by the
user.

In the next section we will describe how an adaptation of some of the techniques described before can
solve the over cluttering of icons on a mobile device.
Although not directly related to mobile devices, in [6],
Ellis and Dix present an analysis on several clutter
reduction methods and classify them according to different clutter reduction criteria. According to that taxonomy, our approach focus on techniques designated
as filtering, clustering, point size and point/line displacement.

k

DoI ( p j ) =

∑ UI (a , p )
i

i =i

k

ji

× wcat ∈ [0,1]

The User Interest function UI(ai,pji) depends on the
distance between the value selected by the user for the
attribute ai and the value pji of the point of interest pj in
the same attribute. The following distance functions
were defined:
− For nominal attributes with l alternative values (e.g. types of restaurant)
⎧0, if a i1 = p ji ∨ a i 2 = p ji ∨ ... ∨ a il = p ji
Dist (a i , p ji ) = ⎨
⎩ 1, if a i1 ≠ p ji ∧ a i 2 ≠ p ji ∧ ... ∧ a il ≠ p ji

128

necessary to find some way to complement the filtering function.

− For numerical attributes with l alternative values (e.g. number of star of a hotel)
⎧⎪ a i1 − p ji
a i 2 − p ji
a il − p ji ⎫⎪
Dist(a i , p ji ) = min⎨
,
,...,
⎬
max i − min i ⎪⎭
⎪⎩ max i − min i max i − min i

− For numerical attributes with a range of values (e.g. price)
⎧
⎪
⎪ 0, if a i1 ≤ p ji ≤ a i 2
⎪⎪ a i1 − p ji
, if p ji < a i1
Dist (a i , p ji ) = ⎨
⎪ max i − min i
⎪ a i 2 − p ji
, if p ji > a i 2
⎪
⎩⎪ max i − min i

Figure 2: Local over cluttering of information.

where maxi and mini correspond, respectively, to
the maximum and minimum value know for that attribute.

To solve this problem we use generalization operators. To decide when to use these operators we use a
grid superimposed on the visualization area. When the
number of points of interest in each cell exceeds a predefined threshold, a generalization is made. The use of
the grid is described in greater detail in [4].

− For the geographical distance, we use a normalized Euclidean distance
⎛ x a − x pi
Dist (a i , p ji ) = ⎜⎜
⎝ max x − min x

2

⎞ ⎛ y a − y pi
⎟ +⎜
⎟ ⎜ max − min
y
y
⎠ ⎝

⎞
⎟
⎟
⎠

2

Following the classification given in [5], we consider three different generalization operators: aggregation, typification and displacement.

where (xa, ya) and (xpi, ypi), correspond, respectively, to the position of interest defined by the
user, and the location of the point of interest.

If all points of interest contained in a certain cell of
the grid are of the same category, an aggregation operator is used. All of the icons are then replaced by a
single one that represents a group of points of interest
from the same category (Figure 3).

After having calculated the distances, it is possible
to determine the value of the UI function:
UI (a i , p ji ) = 1 − Dist (a i , p ji )× wi , wi ∈ [0,1]

where wi is the weight for the attribute ai, which
can be defined by the user to specify the relevance he
gives to that attribute in the query being made.
Since all the distance functions, as well as the UI
function, can only have values between 0 and 1, the
result of the DoI function is also between 0 and 1, reflecting the degree of interest the user has on a certain
point of interest.

Figure 3: Aggregation Operator.
If the points of interest are from different categories, thus having no semantic connection, a typification
operator is used. In this case the icons are replaced by a
single one, created dynamically, that shows information about the categories of the elements grouped (Figure 4).

By using the degree of interest function, we are
thus able to order the various points of interest and
present only the most relevant ones, reducing the
amount of information presented to the user.

3.2 Generalization operators
Although the use of a filtering function allows the
number of points of interest to be reduced and, consequently, minimize the probability of overlapping icons,
it does not fully solve the problem. In fact, if the distribution of elements is not uniform, there is a high possibility that the points of interest, although their number was reduced, are all close together (Figure 2). Indeed, this is a quite often situation in the distribution of
points of interest on a map. As a consequence, it is

Figure 4: Typification Operator.
A third and final operator is used in situations
where the previous ones can not be used (high zoom
levels) or when the user explicitly requests to see individual points of interest. In these situations, overlapping of icons can occur. To minimize the overlapping a
displacement operator is used. By using this operator,
the overlapping icons are moved away from each others and a red line can be presented in each one to show

129

the query specification area. In the map area the user
performs pan and zoom operations. On the upper right
corner of the screen there is a button to increase or
decrease the size of the icons according to the user
state (in motion or stopped). In the query specification
area, the user selects the categories he intends to visualize. These selected categories are shown using a
double tabbed interface: a bottom tab line with the
categories, another tab line with the attributes of the
selected category and an area with query devices (Figure 8) for the values of the selected attribute.

the user the actual position of the point of interest
(Figure 5).

Figure 5: Displacement Operator.

4. Visualization Prototype
As a proof of concept and to enable the evaluation
of the proposed techniques, we developed MoViSys, a
prototype of a geo-referenced information visualization
application for mobile devices [3]. The MoViSys prototype was developed for Pocket PC, with the Windows Mobile 5.0 operating system, using .Net Compact Framework 2.0. The data about the points of interest is stored in a SQL Server database and the maps
are obtained through the Google Maps Web Server.
Figure 6 presents the execution flow after the query
specification. This specification involves the definition
of the categories, respective attributes and weights.

(a)

(b)

Figure 7: MoViSys query specification interface (a) and context menu (b).

(a)

(b)

Figure 8: Boolean (a) and weight (b) query devices.
For example, suppose a user that needs to find a
service station that sells GPL fuel and, if possible, with
a restaurant. He could select the “Service Station”
category, and then select the attribute “Type of Gasoline” (Figure 8 – a) with weight 10 and as an extra the
attribute “Restaurant” with weight 5, reflecting the
relative importance he gives to each restriction.

Figure 6: MoViSys execution flow.
Initially, the map image and the corresponding
points of interest are downloaded. Next, the degree of
interest function is calculated, for each of the points of
interest returned, using the values specified in the
query interface.

Figure 7 (b) shows the context menu that allows the
user to use different options, like zooming in or out,
centring the map, obtaining detailed information about
a point of interest, amongst others, depending on what
he selects.

Using the resulting relevance, the points are ordered and the less relevant are discarded. After the
ordering phase, every cell of the grid is checked and, if
necessary, the generalization operators are used. The
icons for each point of interest (or group of points of
interest) are created using a symbol library. Finally, the
icons are drawn over the map and this is passed to the
user interface.

5. User study
Using the developed system we conducted a user
study to find if the proposed techniques were useful to
the users and to find the main usability difficulties.

Figure 7 (a) shows the organization of our query
specification interface in two main areas: map area and

In the next sections, we will describe the user study
and the results obtained. The graphs shown in the fol-

130

tion. There were three different scenarios created. In
the first, users were asked to search for an Italian restaurant in an area where no such restaurant existed.
The second scenario simulated a situation where the
user wants to find a restaurant with several specified
attributes, but also needs a gas station in the vicinity.
Finally, the third scenario involved searching for tourist attractions in an area were many results existed.

lowing subsections consist of information about the
average and respective standard deviation.

5.1 Participants
To allow a correct evaluation of these concepts, we
based ourselves on the work done by Nielsen [13, 14].
These studies indicate that with the evaluation of only
five users it is possible to discover about 85% of the
existing problems. When evaluating groups of people
with distinct profiles, this number should be slightly
increased so as to capture different group behaviours.

5.3 Setup
The test was conducted using a 200Mhz Pocket Pc
with 128 MB of ROM and 64 MB of RAM. The screen
had a size of 2, 8’’ with a resolution of 320x240 and
65000 colours. The device was equipped with the
Windows Mobile 5.0 operating system.

In our study 15 users were tested, six male and nine
female and their ages ranging between 18 and 58.
Their background was quite diverse: four were from
Computer Science; another four were from Natural
Sciences; three from Administration; two from Literature and another two from Arts. Their experience in
using visualization applications in mobile devices was
also diversified: five were more experienced users; six
had no experience whatsoever; two were experts on the
subject and two were young students with plenty of
experience in the use of mobile devices but not in
visualization applications.

To obtain the most realistic scenarios, real points of
interest were loaded, with data obtained from collaborative internet sites, aimed at navigation applications.
This approach allowed us to obtain over 8000 points of
interest, divided by eight categories, and with an accurate geographic distribution.

5.4 Procedure

5.2 Tasks

Users were initially asked to answer some questions to establish their profile and also their experience
in the use of geo-referenced visualization applications,
both on desktop and on mobile devices.

To evaluate all the aspects of the techniques proposed and the developed prototype, users where requested to execute a set of five tasks:

Before each task the users were briefed about what
the task consisted of. Then, while the users were carrying out the tasks, observations were made and user
feedback was taken note of. When something was
asked to be classified, a six level Lickert scale was
used where 1 represented the worst classification and 6
the best. Finally, to complement to the use of the Lickert, the observations were taken into account and, in
the end of each task, an interview was made about
what had been done, where several comments were
asked for.

First Task - The initial task consisted of a free interaction with the map where the users were asked to
test the different panning and zooming interaction alternatives, namely the keys, pointer or fingers.
Second Task - In the second task users where
asked to choose a random category and evaluate different icon sizes, freely chosen by the users, with the purpose of identifying an ideal icon size. An icon size
increase button (shown in the top right corner of Figure
7), to aid icon selection when walking, was also tested.

To allow a statistical analysis of the proposed techniques, a log was also made. It recorded, for each visualized screen, data about the functioning of the filtering
mechanism and generalization operators. Data recorded included: how many points of interest were
returned, how many were filtered, the number of overlapping icons after the filtering phase, the number of
icons drawn after the generalization phase, how many
of these were aggregations and typifications, and finally the average degree of interest value for the given
points of interest.

Third Task - In this task, users were asked to
evaluate the context menu and its options, as well as
the detailed information displayed for each point of
interest.
Fourth Task - The fourth task evaluated the use
and the effectiveness of the generalization operators.
To achieve this purpose users where asked to test situations where several operators were used.
Fifth Task - In the final task, real life scenarios
were simulated that allowed us to test how users reacted to different situations, and if they comprehended
and made effective use of the degree of interest func-

131

5.5 Results

6
5

5.5.1 First task
Although all interaction options (pointer, fingers,
keys) were considered easy to use (Figure 9), it was
noted that users with less experience in the use of mobile devices took a little longer to get used to the
pointer. However, after an experimentation period, the
majority of users preferred to use this interaction device. The use of the fingers to interact with the system
was almost always the worst classified, with the exception of the younger users who were the only ones who
would actually prefer this interaction type.

4
3
2
1
5,9

5,4

Displayed Inf ormation

Comprehensibility

0

Figure 10: Context menu and point of interest
information evaluation.
5.5.4 Fourth task
Regarding the generalization operators, users found
both aggregation and typification operators very helpful in creating a less confusing visualization (Figure 11
in the left).

6
5
4
Ease of Use

6

Learning

3

5
2

4

1

3
5,8

5,6

5,8

5,2

5,3

5,5

2

0
Keys

Pointer

Finger

1

Figure 9: Interaction mechanisms evaluation.

5,9

5,2

3,4

Generalization Op.
Usef ulness

Displacement Op.
Usef ulness

Clarity of the
Result

0

5.5.2 Second task
When the users were asked to choose the size of the
icons, the best size could not be obtained. Although the
average size is around 40 pixels, the standard deviation
is quite high (over 10 pixels), with size values ranging
from around 20 to 60 pixels. These results give a clear
sign that the best size used to depict information on a
mobile device differs considerably between users, and
as a consequence an option that allows the personalization of this parameter should always be present.

Figure 11: Generalization operators’ evaluation.
The use of the displacement operator had opposite feelings according to the condition in which it was used.
When used with higher zoom levels and fewer elements it was highly classified. However, when used in
lower zoom levels which have lots of elements, the
resulting image was sometimes very confusing and
was consequently poorly classified. This fact resulted
in the operator being evaluated as useful (Figure 11 in
the centre) but not very understandable (Figure 11 in
the right). This signifies that the choice of using a generalization operator should not be dependent only on
spatial constraints but also related to the zoom level
being used.

Although the option to increase icon size when
walking was considered useful (average 5.0, standard
deviation = 0.8), some users took advantage of this
shortcut to increase icon size and reduced even more
the default icon size, using this option as a “quick
zoom” function sporadically to enhance visualization.
This result suggests that the use of a “magnifying
glass” button that temporarily magnifies information
could be useful.

5.5.5 Fifth task
The use of the degree of interest function revealed
some problems which were not initially expected.
When testing the first scenario, the users had to search
for an Italian Restaurant in an area where no such restaurant existed. Since we use the filtering function to
quantify the relevance of each object, we allow not
only exact matches but also the partial ones to be selected. This meant that, although its relevance was
quite low, the only restaurant that existed in the area
was shown. Since most of the users are accustomed to
exclusive searches, all of them immediately assumed
that the restaurant shown was in fact Italian.

5.5.3 Third task
The context menu was considered to have the right
options. The detailed information about the points of
interest was considered adequate and presented in a
clear way (Figure 10).

132

to solve. The limitations imposed by the device characteristics, namely the screen size, severely hinder the
applications.

In the second scenario, all the users searched for
the restaurant / gas station pair in a similar way, and
only three of them did not use the degree if interest
function to choose the best pair.

In the present work, some techniques were presented that can minimize some of the problems caused
by the small size of the screens. A degree of interest
function was proposed, that can quantify the relevance
of a given point of interest. The use of this function
allows us to filter the results, showing only the most
relevant ones. Since this function only reduces the
probability of overlapping icons, generalization operators, which group elements that are close together,
were used. The combination of these two techniques
solved the overlapping of icons.

In the third scenario, which involved large quantities of results, users chose the museums in two different ways: seven of the users made their pick only by
the use of the degree of interest function, while the
other eight made a combination of zooming in and the
use of the displacement operator.
As can be seen in Figure 12, due to the differences
between this type of filtering mechanism and the ones
most users are currently used to, the degree of interest
function was considered to be a little confusing. However, it was still globally well classified, being considered useful and with all users saying they would prefer
to use the function.

To evaluate the proposed concepts, a prototype was
developed, and a user study was done. This evaluation
allowed us to conclude that the referred mechanism,
not only solved the cluttering problem, but also had a
positive global assessment. A correlation between the
results obtained and the user profiles was also made.
However, despite differences in background and user
experience, the results were globally very similar.

6
5
4
3
2

There are, however, some open problems. These
derive, mainly, from the fact that these techniques are
different from what the users are accustomed to. It is
therefore essential to transmit to the user that results do
not necessarily satisfy all specified criteria. To solve
this problem, we could include an option which allowed the user to directly switch to an exclusive query.
Another approach would be the use of different icon
colours according to the relevance, or adding an indicator that clearly expressed the degree of interest value
as was used in [1].

1
4,1

3,5

5,2

Learning

Comprehensibility

Usef ulness

0

Figure 12: Degree of interest function evaluation.
5.5.6 Logged data
Finally, the analysis of the log created during the
test showed that before filtering, there is an average of
17.9 points of interest (standard deviation = 43.7; max
= 650; min = 1) and after filtering there are on average
8.7 (standard deviation = 8.0; max = 53; min = 1). Although having a very high variation, the reduction of
both the average and standard deviation confirmed that
the filtering function does indeed reduce the probability of occurrence of overlapping icons. However, there
is still an average of five overlapping icons per screen.
The use of generalization operators eliminated all of
these conflicts and produced on average 4.6 icons. Of
these 1.3 corresponds to aggregations and 0.5 are typifications.

The users found the filtering function difficult to
learn. This problem can, possibly, be solved through
the use of a better query specification interface. Despite the initial difficulty, users expressed their preference for the filtering function, after learning how to use
it.
Although the global evaluation was positive, some
other areas should also be targeted for future work.
Regarding the displacement operator, it is important to
research more complex algorithms, which could give
better results in the positioning of the icons.

The average degree of interest of the displayed
points of interest was 0.65 with a standard deviation of
0.19. This result suggests that, in general, queries return relevant results to the users.

The exploration and adaptation of the techniques
proposed, based on the location of the user and his
preferences, should be broadened to other contexts.
Some examples of these are: spatial context (e.g. orientation and speed); temporal context (e.g. accessing
information based on the current time); surrounding
environment (e.g. light conditions); personal context

6. Conclusion
Research on mobile device information visualization is still a recent subject and there are many issues

133

(e.g. emotional state and behaviour patterns); social
context and other more enriched contexts.

[6] Ellis, G., & Dix, A.. A Taxonomy of Clutter Reduction
for Information Visualisation. IEEE Transactions on Visualization and Computer Graphics, pp. 1216-1223, 2007

7. Acknowledgements

[7] Furnas, G. W.. Generalized Fisheye Views. Proceedings
of the ACM CHI’86, pp. 16-23, 1986.

This work was supported by FCT, through project
PTDC/EIA/69765/2006 and through the Multiannual
Funding Programme.

[8] Google Maps. http://maps.google.com
[9] Google Maps Mobile. http://www.google.com/gmm

8. References

[10] Keim, D. A., & Kriegel, H.-P.. VisDB: Database
Exploration Using Multidimensional Visualization. IEEE
CG&A, 14 (5), 1994.

[1] Burigat, S., & Chitttaro, L., Visualizing the Results of
Interactive Queries for Geographic Data on Mobile Devices,
Proceedings GIS’05, ACM Press, pp. 277-284, 2005.

[11] Navigon Mobile Navigator. http://www.navigon.com

[2] Burigat, S., & Chitttaro, L., Decluttering of Icons based
on Aggregation in Mobile Maps, Map-based Mobile Services
– Design, Interaction and Usability, Springer, pp. 13-32,
2008.

[12] NDrive Windows Mobile. http://www.ndriveweb.com
[13] Nielsen, J. Why You Only Need to Test With 5 Users,
2000. http://www.useit.com/alertbox/20000319.html

[3] Carmo, M. B., Afonso, A. P., Matos, P. P., & Vaz, A.,
MoViSys – A Visualization System for Mobile Devices,
Proceedings of the Visual 2008, LNCS 5188, pp. 167-178,
2008.

[14] Nielsen, J. Quantitative Studies: How Many Users to
Test, 2006.
http://www.useit.com/alertbox/quantitative_testing.html

[4] Carmo, M. B., Afonso, A. P., & Pombinho, P..
Visualization of geographic query results for small screen
devices. Proceedings of ACM-GIR-2007, pp. 63-64, 2007.

[15] Reichenbacher, T.. Mobile Cartography – Adaptive
Visualisation of Geographic Information on Mobile Devices.
München. Verlag Dr. Hut, 2004.

[5] Edwardes, A., Burghardt, D., & Weibel, R.. Portrayal
and Generalisation of Point Maps for Mobile Information
Services. In Map-based Mobile Services – Theories, Methods
and Implementations pp. 11-30. Springer-Verlag, 2005.

[16] TomTom Car Navigation System.
http://www.tomtom.com
[17] Woodruff, A., Landay, J., & Stonebraker, M.. Constant
density visualizations of non-uniform distribution of data.
Proceedings of ACM UIST’98, pp. 19-28, 1998.

134

