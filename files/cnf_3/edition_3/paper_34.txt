2009 13th International Conference Information Visualisation

Chronos: A Tool for Interactive Scheduling and Visualisation of Task Hierarchies
Saturnino Luz1 , Masood Masoodian2 , Daniel McKenzie2 , Wim Vanden Broeck2
1
Department of Computer Science, Trinity College Dublin 2, Ireland
2
Department of Computer Science, The University of Waikato, Hamilton, New Zealand
luzs@cs.tcd.ie, m.masoodian@cs.waikato.ac.nz

Abstract

been created over a century ago, Gantt charts [10] are still
widely employed to support these kinds of tasks, and form
an integral part of popular project management tools such
as Gantt Project, MS Project and OmniPlan [18, 20, 25].
As part of project management software suites, the original Gantt chart has gained an interactive dimension and
undergone adaptations designed to circumvent the screen
real-estate limitations of the digital medium as well as take
advantage of the medium’s dynamic presentation capabilities. However, the chart’s basic visual design has remained
largely the same. In fact, some claim [26] that Gantt charts
are really most useful when drawn or printed on large sheets
of paper and displayed in common areas, thus highlighting
their coordinative roles and preserving their ability to offer
a comprehensive overview of the schedules they embody.

Visualisation and structuring of tasks in a schedule, from
relatively simple activities such as meeting scheduling to
more complex ones such as project planning, has been traditionally supported by timeline representations similar to
Gantt charts. Despite their popularity, Gantt charts suffer from a number of shortcomings, including poor representation of detail and inefficient use of screen real-estate,
particularly when a large number of parallel tasks, each
of which requiring its own representation space, need to
be displayed. We have devised an alternative visualisation, called temporal mosaic, which addresses some of these
shortcomings while utilising space more efficiently. We have
recently shown that as a static visualisation temporal mosaics outperform Gantt charts in terms of their ability to
convey time-based scheduling information to users engaged
in various temporal inference tasks. This paper extends that
research by presenting interactive techniques which support
creation, and dynamic visualisation of task hierarchies and
relationships. These techniques are illustrated through a
system for direct manipulation of schedules in both Gantt
chart and temporal mosaic formats.

Part of the reason why Gantt charts have changed so
little since they were first proposed is undoubtedly due to
the intuitiveness of the original design, which is based on
the natural ordering afforded by the timeline representation
[28] combined with the anchoring of events on a spatial
grid [27]. However, as Gantt charts took on additional plan
and schedule creation roles, they began to require additional
features beyond static visualisation. Although it has been
argued that the static visualisation metaphor employed by
Gantt charts carries through seamlessly to interactive contexts as more general forms of timelines [24], most work
on dynamic aspects of timeline visualisation to date has
focused on dealing with screen space limitations (though
zooming, overview plus detail and focus and context techniques [5, 11, 6]), or on enhancing the display to include visualisation of metadata in knowledge-rich domains [16, 2].
An issue which has received far less attention is that of implementing effective visual feedback for creation and modification of schedules (specially in terms of hierarchy manipulation and what-if analysis) by making the overall impact
of moving a task, its sub-tasks and dependencies along the
timeline immediately visible to the user.

1. Introduction
The creation and management of large project schedules is a complex task which requires from the person (or,
increasingly often, the group of persons) performing it a
great deal of attention. A scheduling task is usually part
of a broader planning process which involves, among other
things, the identification of conflicts and bottlenecks, and
the satisfaction of multiple constraints. Planning requires
optimisation and monitoring. For most project management activities, the former is performed through the putative structuring of tasks along two axes: a timeline and a
task execution hierarchy. The latter is performed through
maintenance of a record, usually some form of coordinative
artifact [4] such as a shared chart or table. Despite having
978-0-7695-3733-7/09 $25.00 © 2009 IEEE
DOI 10.1109/IV.2009.88

We argue that the above mentioned issues are, however,
interconnected. Effective visual feedback for editing and direct manipulation of timelines is only possible if the system
241

constraints [9] and augmented with user interface components for improved usability, including multi-scale sliders
coupled with a focus plus context visualisation style [23]
and non-linear sliders [13].

can provide a clear and space-efficient overview of tasks, so
that time allocation and dependencies can be inferred at a
glance. In previous work [19] we have proposed a temporal mosaic representation as a more compact alternative to
timelines for visualisation of multiple event or task streams.
In this paper we extend that idea by employing the mosaic
display as a basic user interface element of a schedule creation and visualisation tool, called Chronos. This tool addresses the screen real-estate and immediate feedback requirements outlined above though several mechanisms designed to support focus and context awareness as well as
overviewing of task hierarchies, attributes and relationships.

2.1. Temporal Mosaic
In [19] we argued that supporting visualisation of events
or tasks for applications such as scheduling and multimedia browsing amounts to directly supporting a number of
basic perceptual tasks. These include assessment of event
and time interval properties such as, start, end, duration,
and inactivity, as well as detection of event relations such as
exclusions, overlaps, and subsumption. A system that aims
to support interactive scheduling needs therefore to be able
to support at least these basic perceptual tasks. We also introduced a temporal mosaic visualisation as an alternative
to timelines. Briefly, the temporal mosaic can be seen as a
concatenation of several parallel streams of a timeline into a
single space-filling stream. Unlike a timeline, which grows
vertically on demand, a temporal mosaic has a fixed height
and allocates space proportionally to the number of overlapping tasks in the time interval spanned by the representation. This concept is illustrated through the charts in Figure 1, where the three temporal streams in the top box are
equivalently represented by the mosaic shown in the bottom
rectangle.

2. Related Work
In addition to their use as static visualisation in traditional Gantt charts, timelines have been extensively used
in interactive systems [24]. Visualisation of temporal data
finds natural applications in a variety of domains, including
travel itinerary management [3], exploratory search [1], calendar scheduling [9], personal information spaces [15] and
healthcare [14].
The LifeLines system [22] is among the most influential
works targetting visualisation of temporal data. Compared
with traditional Gantt charts, LifeLines has been found to
be quite intuitive for medical applications, while providing for focus plus context in viewing data, and allowing for
easy identification of patterns [14]. The system also allows
grouping of similar events through “facets” which can be
opened or closed to provide different aspects of the same
information structures. Gantt charts, on the other hand,
are capable of displaying hierarchical information, and are
therefore better suited to project management tasks where
the user needs to be able to view scheduling information
for various tasks at different levels of detail. Both faceted
browsing and hierarchical organisation have been used in
exploratory search applications [1] which have gained some
popularity on the Web. These include, for instance, Continuum [2] and MIT’s SIMILE timeline [12].
While the above mentioned systems focus mainly on the
display of temporal data, other works have looked into the
issue of creation and management of schedules. In [7] basic
operations slice, overlay, filter, concatenate, new, copy and
delete are defined along with a timeline browser to support
manipulation of temporal data in the biomedical domain.
This set of operations is extended in [16] which proposes a
generalised framework including facets and metadata presentation. In both cases, however, the interface is based on
a Gantt-style visualisation. This is also the case of the other
systems reviewed above, the most prominent examples of
which [2, 12] have been influenced by the framework proposed in [16]. In addition to these generic uses, timelines
have also been adapted to support awareness of scheduling

Figure 1. Three event streams of a Gantt-like
timeline and their representation as a temporal mosaic

We were able to show that temporal mosaics outperformed Gantt-style visualisations as static representations in
a series of user trials involving two distinct tasks: meeting
browsing and a building project scheduling. Mosaic users
did particularly well at tasks involving detection of concurrent events, inactivity and exclusion, while performance
on tasks involving assessment of duration was practically
identical in mosaic and Gantt-like timelines. Further details
can be found in [19]. These encouraging results, allied to
the space-efficiency of the temporal mosaic representation
prompted us to design the system described below for dynamic schedule visualisation and manipulation.

242

3. Visualisation of Scheduling Tasks

3.2. Task hierarchies and relationships

In addition to the basic perceptual tasks supported by
temporal mosaic as a static representation [19], a system
for interactive editing and visualisation of schedules needs
to support dynamic exploration at different levels of detail
while preserving the user’s awareness of the overall context. Mosaic is particularly well-suited to meet these requirements, since its more compact representation allows
us to preserve a graph’s global structure even as it is modified locally. These interaction requirements are presented
in detail in the following sections.

Visualisation of hierarchies and the relationships between different parts of the data set being visualised is yet
another issue related to the presentation of data in focus or
context.
For scheduling activities, a common form of data hierarchy whose viewing should be supported by interactive systems at different levels of focus as well as context, is that
of tasks and their individual sub-tasks. In timeline visualisations such as Gantt charts, tasks and their sub-tasks can
be “folded” and “unfolded” to provide for viewing of data
at different levels of detail. However, an obvious problem
with this solution is that folding and unfolding tasks can in
turn change the view of the resulting visualisation radically
by shifting individual timelines up and down, thus making it
nearly impossible to maintain focus and context awareness
of the data being viewed, a problem often compounded by
the phenomenon of change blindness [21].
Support for viewing of relationships other than task and
sub-task hierarchies is almost completely lacking from most
interactive timeline visualisation systems. The notable exception are systems that support faceted browsing [2, 16],
but these trade support of general relationships for preservation of context, as the timeline changes, sometimes radically, when different facets are selected.

3.1. Focus and Context Awareness
Perhaps one of the most important requirement of any
form of visualisation is to support viewing and interpretation of data at different levels of detail, depending on the
task being performed and the needs of the viewer of that
data. This is particularly crucial for visualisation of timebased scheduling type tasks, where the data can often be
complex, and can stretch over long periods of time.
Furthermore, when viewing or focusing on a set of data
at a particular level of detail it is also important to be aware
of the larger context or set in which that particular data set
exists. In terms of scheduling tasks, for instance, when
viewing and focusing on a specific task (or group of tasks),
it is usually important to be aware of where that task is
within the context of the entire schedule or some related
part of it.
The most common approach to fostering focus and context awareness in interactive visualisation systems is to provide some form of zooming mechanism, and perhaps an
overview of the entire schedule. These different views are
generally shown in separate viewports (e.g. separate windows), thus requiring the users to change their views between multiple viewports when viewing tasks in focus or in
context. An obvious issue which such visualisations then
need to address is how to eliminate, or at least reduce,
the problems associated with moving one’s attention between separate viewports, while at the same time keeping
the awareness of the relationship between the data being
viewed in focus and the larger context in which these data
exist [11]. For timelines, specifically, this issue has been addressed by parallel presentation of multiple selections and
zoom levels [23, 8]. While this approach can be effective for
a small number of streams with no hierarchical dependencies, it does not scale well for more complex schedules. Although distortion-based techniques [17] can help preserve
context, specially in situations where screen real-estate is at
a premium [5], they are limited in terms of the amount of
information they can handle.

4. Chronos Visualisation System
We have developed a prototype interactive visualisation
system, called Chronos, which implements a number techniques for supporting focused viewing and context awareness of scheduling data, as well as viewing hierarchical and
other forms of relationships between tasks and sub-tasks.
These techniques have been implemented for both Gantt
and temporal mosaic visualisation methods, with the aim
of demonstrating possible advantages of the mosaic visualisation over Gantt charts in relation to each of these methods,
in an interactive visualisation context.
Figure 2 shows the interface of the Chronos visualisation tool. The top two windows show part of a schedule for
a house renovation example case in temporal mosaic (left
window) and Gantt chart (right window). The bottom two
windows show the same schedule in its entirety in mosaic
overview (left) and Gantt overview (right).

4.1. Zooming and overview
As mentioned in section 3, zooming in conjunction with
some sort of overview is a commonly adopted approach to
providing a detailed view of part of a visualisation. Chronos
has a standard overview mode for each of its visualisation

243

Figure 2. Chronos visualisation tool, showing temporal mosaic view (top left), Gantt chart (top right),
mosaic overview (bottom left), and Gantt overview (bottom right)

4.2. Tasks hierarchy

types (shown in Figure 2), as well as a zoom in/out functionality for both mosaic and Gantt, shown in Figure 3.

Chronos provides support for a two-level tasks hierarchy1 . In both mosaic and Gantt visualisations tasks can be
folded and unfolded to show their sub-tasks. Figure 4 shows
the Lounge task which has been unfolded to show its subtasks (Wiring, Carpet, Window, Cabinet, and Painting) in
both visualisations.

Figure 3. Zooming in mosaic and Gantt

Although the concept of zooming is the same in both
types of visualisations, mosaic has one major advantage
over Gantt in that mosaic uses the entire available space
under any level of zooming. This is particularly important
if the schedule contains many tasks. In that case, regardless of the number of tasks, mosaic zoom is only done horizontally (i.e. zooming in time), whereas Gantt needs to
be zoomed both horizontally (i.e. zooming in time) as well
as vertically (i.e. zooming in tasks space). This basically
means that to find the right task at the right period of time
users may need to scroll both horizontally and vertically in
Gantt, while they only need to scroll horizontally in mosaic.
Clearly, scrolling in two directions is more likely to cause
the user to get lost within large schedules than scrolling in
only one direction. Therefore, maintaining focus and context awareness is simpler in temporal mosaic than in Gantt
charts.

Figure 4. Sub-tasks in mosaic and Gantt
As can be seen from Figure 4, Lounge has only two relevant sub-tasks (Wiring and Carpet) for the time period being viewed. Mosaic visualisation simply uses the space allocated to the Lounge tasks to show its relevant sub-tasks,
thus keeping the general shape of the visualisation the same
as before the task was unfolded (see Figure 3). The Gantt
visualisation, on the other hand, has to unfold and reserve
space for all the sub-tasks of unfolded tasks, regardless of
whether or not there is relevant instance of them in the
viewed time period. This in turn causes the Bedroom task to
be completely removed from the viewing area, and the general shape of the chart to be changed considerably. In fact,
1 In principle it is possible to have multilevel hierarchies, but this hasn’t
been implemented in the current version of the system.

244

4.4. Tasks attributes and relationships

this problem becomes even more apparent when multiple
tasks are unfolded (see Figure 5), where in the case of the
temporal mosaic the shape of the visualisation remains the
same and all the relevant sub-tasks are shown, while most
of the required information is out of view in the Gantt chart.

Although representation of task hierarchies is available
in some interactive visualisation systems, representation
of other task attributes and relationships is less common.
Chronos provides a mechanism for defining and associating
specific attributes to different tasks and sub-tasks, and then
using those attributes as a way of showing relevant tasks
while blurring out the other tasks in a manner described in
the previous section.
If there is a need, for instance, to view all Carpet subtasks regardless of which tasks they come under, it is possible to define a common attribute (e.g. carpeting) for all
of them, and then use that particular attribute to select the
related sub-tasks. An example of this is shown in Figure 8.
As with previous examples, mosaic shows all the selected
sub-tasks within the viewing time period, while Gantt only
shows whatever falls within the viewed time period and
tasks space (e.g. in Figure 8 only the Lounge Carpet subtask is viewable in the Gantt chart, while mosaic shows it
for both Lounge and Bedroom).

Figure 5. Multiple sub-tasks

4.3. Blurring out information
Chronos incorporates another useful functionality for
viewing details of tasks while providing context awareness,
by allowing the user to select a task (and its sub-tasks, if
the task is unfolded) and blur out the other tasks and subtasks. Figure 6 shows the Lounge task and its sub-tasks selected, and all the other tasks (and their sub-tasks) blurred
out. Once again, while this functionality is useful for both
visualisations, temporal mosaic retains its overall shape and
provides more context information particularly if the subtasks being selected are in different parts of a large schedule. For instance, compare Figure 7 with Figure 6 where a
different set of sub-tasks (Bedroom sub-tasks) is selected in
the same time period.

Figure 8. Selection of sub-tasks using a common attribute and blurring

4.5. Direct manipulation of schedules
Chronos also allows direct manipulation of tasks and
sub-tasks in both visualisations, through a simple drag and
drop operation. Once again this works better in mosaic,
since for example, when dragging a task, represented by a
contiguous region, along the timeline, the shape of that task
region as well as its surrounding mosaic pattern changes
progressively to reflect the changing constraints that the tentative re-allocation of the task would imply with respect
to existing allocations. This implements a form of what-if
analysis that preserves context awareness.

Figure 6. Sub-tasks selection and blurring

5. Conclusions
The design of Chronos has addressed several issues on
scheduling and visualisation of complex tasks identified
both in the literature and through our prior user studies. The
proposed design builds on the space efficiency of temporal

Figure 7. Selection of different sub-tasks and
blurring

245

mosaics, supports viewing of different levels of detail while
maintaining awareness of context, and displays task hierarchies and attribute relationships in a natural way. Although
the comparisons presented through Chronos’ visualisation
of the two alternative representations indicate clear advantages of temporal mosaic over the Gantt-like representation,
we intend to conduct a formal user evaluation of Chronos in
order to compare the effectiveness of the two alternative visualisations in greater detail.

[12] D. Huynh. SIMILE-Timeline, 2008.
[13] Y. Koike, A. Sugiura, and Y. Koseki. TimeSlider: An interface to specify time point. In ACM Symposium on User
Interface Software and Technology, pages 43–44, 1997.
[14] R. Kosara and S. Miksch. Visualization methods for data
analysis and planning in medical applications. International Journal of Medical Informatics, 68(1-3):141–153,
Dec 2002.
[15] A. Krishnan and S. Jones. TimeSpace: activity-based temporal visualisation of personal information spaces. Personal
and Ubiquitous Computing, 9(1):46–65, 2005.
[16] V. Kumar, R. Furuta, and R. B. Allen. Metadata visualization for digital libraries: interactive timeline editing and review. In DL ’98: Proceedings of the third ACM conference
on Digital libraries, pages 126–133, New York, NY, USA,
1998. ACM Press.
[17] Y. K. Leung and M. D. Apperley. A review and taxonomy
of distortion-oriented presentation techniques. ACM Trans.
Comput.-Hum. Interact., 1(2):126–160, 1994.
[18] J.-M. Libs, Benoˆıt, and J. Seiler. Gantt Project. http:
//ganttproject.biz/ (accessed 15th March 2009).
[19] S. Luz and M. Masoodian. Visualisation of parallel data
streams with temporal mosaics. In E. Banissi, editor, Procs.
of the 11th International Conference on Information Visualisation, pages 196–202, Zurich, 2007. IEEE Computer Society.
[20] Microsoft Inc.
MS Project.
http://office.
microsoft.com/project (accessed 15th March
2009).
[21] L. Nowell, E. Hetzler, and T. Tanasse. Change blindness
in information visualization: A case study. In Proceedings
of the IEEE Symposium on Information Visualization 2001,
page 15, Washington, 2001. IEEE Computer Society.
[22] C. Plaisant, B. Milash, A. Rose, S. Widoff, and B. Shneiderman. LifeLines: visualizing personal histories. In CHI ’96:
Proceedings of the SIGCHI conference on Human factors in
computing systems, pages 221–227, New York, NY, USA,
1996. ACM Press.
[23] H. A. Richter, J. A. Brotherton, G. D. Abowd, and K. N.
Truong. A multi-scale timeline slider for stream visualization and control. Technical Report GIT-GVU-99-30, GVU
Center, Georgia Institute of Technology, Aug. 05 1999.
[24] S. F. Silva and T. Catarci. Visualization of linear timeoriented data: A survey. In Proceedings of the First International Conference on Web Information Systems Engineering
(WISE), volume 1, pages 310–319, Hong Kong, 2000. IEEE
Computer Society.
[25] The Omni Group. OmniPlan. http://omnigroup.
com/applications/omniplan/ (accessed 15th
March 2009).
[26] E. R. Tufte.
Project management graphics (bulletin
board). http://www.edwardtufte.com/bboard/
q-and-a-fetch-msg?msg\_id=000076. (accessed
28th November 2008).
[27] E. R. Tufte. Envisioning information. Graphics Press,
Cheshire, CT, USA, 1990.
[28] E. R. Tufte. The Visual Display of Quantitative Information.
Graphics Press, 2nd edition, 2001.

References
[1] O. Alonso, M. Gertz, and R. Baeza-Yates. Search results
using timeline visualizations. In SIGIR ’07: Proceedings
of the 30th annual international ACM SIGIR conference on
Research and development in information retrieval, pages
908–908, New York, NY, USA, 2007. ACM.
[2] P. Andre, M. L. Wilson, A. Russell, D. A. Smith, A. Owens,
and m.c. schraefel. Continuum: designing timelines for hierarchies, relationships and scale. In UIST ’07: Proceedings
of the 20th annual ACM symposium on User interface software and technology, pages 101–110, New York, NY, USA,
2007. ACM.
[3] M. Apperley, D. Fletcher, B. Rogers, and K. Thomson. Interactive visualisation of a travel itinerary. In AVI ’00: Proceedings of the working conference on Advanced visual interfaces, pages 221–226, New York, NY, USA, 2000. ACM.
[4] J. Bardram and C. Bossen. A web of coordinative artifacts:
collaborative work at a hospital ward. In Proceedings of
the 2005 international ACM SIGGROUP conference on Supporting group work, pages 168–176. ACM New York, NY,
USA, 2005.
[5] B. B. Bederson, A. Clamage, M. P. Czerwinski, and G. G.
Robertson. DateLens: A fisheye calendar interface for
PDAs. ACM Transactions on Computer-Human Interaction,
11(1):90–119, 2004.
[6] T. B¨uring, J. Gerken, and H. Reiterer. Usability of overviewsupported zooming on small screens with regard to individual differences in spatial ability. In AVI ’06: Proceedings
of the working conference on Advanced visual interfaces,
pages 233–240, New York, NY, USA, 2006. ACM Press.
[7] S. Cousins and M. Kahn. The visual display of temporal
information. Artificial Intelligence in Medicine, 3(6):341–
357, 1991.
[8] R. Dachselt and M. Weiland. TimeZoom: a flexible detail
and context timeline. In CHI ’06: CHI ’06 extended abstracts on Human factors in computing systems, pages 682–
687, New York, NY, USA, 2006. ACM.
[9] A. Faulring and B. A. Myers. Availability bars for calendar scheduling. In Extended Abstracts Proceedings of the
2006 Conference on Human Factors in Computing Systems,
CHI’06, pages 760–765, 2006.
[10] H. Gantt. Organizing for work. Industrial Management,
58:89–93, 1919.
[11] K. Hornbæk, B. B. Bederson, and C. Plaisant. Navigation patterns and usability of zoomable user interfaces with
and without an overview. ACM Transactions on ComputerHuman Interaction, 9(4):362–389, 2002.

246

