Bringing 3D to Teleradiology
Nigel W. John
Manchester Visualization Centre
University of Manchester
n.w.john@man.ac.uk

Mark Riding
University of Manchester
mr@cs.man.ac.uk

Ari Sadarjoen
Manchester Visualization Centre
University of Manchester
sadarjoen @mcc.ac.uk

Liad Blumrozen
BioMediCom Ltd
liad@biomedicom.co.il

uses a custom message-passing protocol for data
transmission and is currently limited to point to point
transmission.
The NOVICE project (Network Orientated
Visualization in a Clinical Environment) is developing a
range of extensible Web-based visualization tools for
medical applications that will work within a highperformance computing environment [31. Access to
computer resources is being provided through a simple
web-based user interface using HTML, Java and other
relevant technologies. The main objective is to provide
the clinician with advanced functionality from an easily
affordable desktop workstation. This will help to cut costs
dramatically and make high quality medical image
processing available without the large capital investment
currently required. The project includes the provision of
teleradiology tools using medical data obtained from a
hospital scanner in the DICOM (Digital Imaging and
Communications in Medicine) standard format [4] and
stored in the NOVICE database. The provision within
NOVICE of a JAVA based system for the transmission
and annotation of 2D images has addressed traditional
teleradiology. The Manchester Visualization Centre
(MVC) has developed this software. MVC has also been
working with another partner in the project BioMediCom Ltd - to investigate and produce tools for
using 3D models derived from the radiological data within
a teleradiology session. The development of this 3D webenabled teleradiology system is described in this paper.

Abstract
The NOVICE project (Network-Oriented Visualization
in a Clinical Environment) is developing a system for
medical image data analysis and visualization through the
web with the intention of demonstrating the effectiveness
of such a system in a clinical environment. One element
being addressed by NOVICE is the provision of
teleradiology tools. This paper describes how threedimensional models can be included in a teleradiology
application by utilising the Virtual Reality Modelling
Language (VRML) and multi-user extensions, including
annotation tools. The result is the world’s first web-based
system for 3 0 teleradiology! We will present a detailed
overview of the implementation and operation of this
system, and indicate resultsfrom early use.

1. Introduction
Teleradiology is the electronic transmission of
radiological images and reports from one location to
another. It is usual to include collaboration tools to allow
the radiologist to discuss a patient’s case with colleagues
remotely. Teleradiology (and telemedicine systems
covering other clinical areas) have been in use for well
over ten years and there are several commercial solutions
available. A large number of projects to develop and
enhance such systems have been funded in Europe [l],
and elsewhere. The radiological images transmitted will
be 2D images (from CT or MRI scanners), or in some
cases video streams (such as 2D ultrasound data). Very
few solutions exist today that allow 3D data to be used in
telemedicine. One example, however, is the TeleInViVo
workstation [2], that facilitates the transmission of
volumetric models created from 3D ultrasound data. It

2. Background
The Virtual Reality Modelling Language (VFWL) [SI
is a platform independent, 3D scene description language,
with support for interaction by the user, rather than just
simple navigation through a virtual world. Although

4
0-7695-0743-3/00
$10.00 0 2000 IEEE

on the Internet”. Like VNet, DeepMatrix is developed in
Java, and provides a client-server application that sits
above the VRML browser, co-ordinating control. The
product is open source and so freely available.
We have investigated the use of these three systems to
determine their suitability in providing an appropriate
environment for the development of a teleradiology
system.

standalone applications exist to allow users to explore
VRML worlds, VRML browsers are typically
incorporated as a plug-in to an Internet browser, such as
Microsoft’s
Internet
Explorer
or
Netscape’s
Communicator. This allows VRML worlds to be
published on the Internet in much the same way as an
ordinary HTTP page. MVC and BioMediCom (formerly
Silicon Graphics Biomedical) have been particularly
interested in medical applications of VRML and have
already demonstrated a wide variety of applications
including volume rendering [6], and surgical training
simulators [7], [8]. The World Wide Web (WWW) has
proven to be an extremely cost effective environment for
making such applications available to a wide audience and
has great value in introducing the potential of 3D and
virtual environments to clinicians.
Most of the VRML applications that we have
developed to date have been single user applications. For
a 3D Teleradiology application a multi-user VRML world
is required i.e. a world that can be accessed by many
remote users at the same time in such a way that any one
user can interact with and see other users “logged into”
that world. The current VRML specification does not
include support for multi-user worlds but several solutions
do exist to provide this functionality, and we propose
adapting one of these solutions for our 3D Teleradiology
system. An extensive review of all currently available
multi-user VRML solutions can be found in [9], three of
the most popular being VNet [lo], ContactICommunity
Server [ll], and DeepMatrix [12]. In all cases, each user
has an avatar to represent them in the world - a 3D object
rendered in every other participant’s VRML browser.
When a user moves around the scene, his avatar moves
with him. A chat mechanism is also provided that enables
a user to type and send messages to other users currently
logged in.
VNet was developed at the University of Waterloo in
Canada. This product is in the public domain, and freely
available. It uses Java to provide a client-server
application, which takes care of all the multi-user
functionality of a shared world, communicating any
changes made to all users in the scene. Blaxxun
Interactive produce the Contact VRML browser and it has
built in shared world capabilities, allowing a user to visit a
multi-user world without needing to install any other
software in addition to the browser. Although Contact is
itself available for free, the Community Server product is
required to create new multi-user worlds and this is a
commercial product. DeepMatrix is produced by
Geometrek 3D Solutions who are “an international
collaboration between VRML experts, aiming to produce,
and help others to produce innovative 3D Virtual Worlds

3. Methods
3.1. Evaluation of Multi-User Worlds
To identify a suitable multi-user environment for the
development of our 3D teleradiology system, we looked at
cost-effectiveness, ease of use, ease of development,
platform independence, flexibility and stability.
Both VNet and DeepMatrix are client-server Java
applications running above a standard VRML browser
and provide multi-user synchronisation between each
user’s world. When a user navigates around his local copy
of the scene, the Java client communicates the avatar
position to the Java server, which in turn communicates
this position to the Java client of all other users that are
logged into the scene. The local copy of every user’s
scene is then updated with the new information, allowing
all users’ movement to be reflected in all other users’
worlds. Java offers the advantage of platform
independence and we operated both products successfully
on Windows PCs and SGI IRIX workstations.
Contact does not use Java, and does not require any
extra software to run multi-user worlds - all of the
necessary support is built into the browser. The browser is
only available for Windows, however, and the commercial
Community Server product must be purchased if you want
to develop new multi-user world.
VNet facilitates synchronisation of user avatars
between scenes, but this is as far as VNet goes with
collaboration. There is no provision for allowing multiple
users in a scene to collaborate and interact with other
objects. In essence, VNet can be thought of as using
VRML as a 3D front-end to a chat applet, with little
support for complicated scenes that require distributed
interaction. Deep Matrix has a big advantage over VNet in
that it does facilitate multi-user scenes to be built where
all the users can interact with not only each other, but also
the scene itself.
Stability of these multi-user environments is a problem
and certain Web BrowserNRML plug-in combinations
work better than others. This is particularly the case for
the Java based solutions. Further, a problem with all of the
systems evaluated is that they do not provide a mechanism

5

Teleradiology session so that other users can then log into
a world containing this object - see Figure 2.

for ensuring that if an object in the scene can be
manipulated, then only one user can have control at any
one time.
Because it is freely available, it runs on different
platforms, and it has support for interacting with objects
in the VRML scene, we selected DeepMatrix as the basis
for our 3D Teleradiology application.

3.3. Integrating PaBLO with the Multi-user
VRML Environment
When the clinician initiates a 3D Teleradiology
session, a script is run which will start the DeepMatrix
server applet on the Origin 2000. The server applet is
configured to make a VRML client world containing the
3D isosurface object available for collaboration. The
client world must conform to the template required by the
DeepMatrix software [16] and include custom PROTO
nodes and ROUTE statements that deal with events that are
to be distributed to other instances of the same world. The
data to be viewed in the shared world - in this case our
isosurface object - must be contained within the fiist
Group node defined in the client world. We have written
a program (in C) to create this VRML file at run-time,
with the path (or URL) of the appropriate medical object
passed as a command line argument. It is included in the
VRML client world using an Inline node. In this way,
every time we want to view a new 3D object, a new
teleradiology session is initiated, linked to the appropriate
file.

3.2. Generating the VRML Models
Within the NOVICE project, medical data and
software provided by the various partners is accessed
through a single web-based user interface, called the
Patient Launchpad, Browser and Organizer (PaBLO). A
demonstration version of PaBLO is available on the
WWW [13].

Figure 1. PaBLO screenshot showing MRI data of
a cochlea in the inner ear. The images are
displayed as thumbnails but can be show full
screen and cropped if desired.
Figure 1 shows PaBLO being used to select medical
image data of a patient. One of the visualisation options
then selectable from PaBLO is to view an isosurface
extracted from the medical data as a VRML file.
AVSExpress software [14] running on an SGI Origin
2000 compute server is used to generate the isosurface this software provides an implementation of the Marching
Cubes algorithm [ 151 and will also convert the output into
VRML. Polygon reduction techniques are applied to the
resulting isosurface to ensure that the data size is
minimised for efficient transmission over the WWW. The
input data set is the patient's radiological images selected
from the NOVICE database; the viewing parameters are
entered through a web form in the PaBLO browser. Once
generated, the clinician can examine the VRML isosurface
in his Web Browser. If desired. he can also initiate a 3D

Figure 1. 3D Teleradiology login screen. The
clinician can enter his name and then connect to
the teleradiology session.
PaBLO provides an option for other users to join an
already initiated 3D Teleradiology session. If selected, the
user is presented with a login screen as depicted in Figure
2. He can enter his user name, and then join other users in

6

the collaborative session looking at the 3D isosurface
model - see Figure 4.

them up). The drawback with this approach is that there is
no control over the thickness of the line drawn. In
CosmoPlayer, an IndexedLineSet line is a fixed
thickness, no matter how far away it appears from the
user. In effect, this means that a line drawn on the surface
of an object up close, will appear to grow thicker as the
viewer moves away from the object in the scene. This is
not a desirable feature. An alternative is to use the
IndexedFaceSet node to represent the line with a
polygon strip of controllable thickness. This requires at
least three co-ordinates to be specified every time a new
“polygon line” is added to the annotation. However, only
one new co-ordinate is provided by the touchsensor,
and so a script must be written to calculate the others. If
we add quadrilateral polygons, calculating just one extra
point for each new point generated by the
touchSensor - see Figure 3 - is enough to specify the
polygon line. This new point should lie a fixed distance
from the original point, to give the polygon line a predetermined thickness, and should be positioned
perpendicular to the direction of movement, to ensure that
this thickness remains constant. The extra point can be
calculated using the surface normal vector generated by
the touchsensor,and the vector specified by both the
point just generated and the previous point. The cross
product of these two vectors is close to being parallel to
the surface of the object, and perpendicular to the
direction of drawing. The required coordinate is obtained
by moving along the cross product vector a predetermined
distance. This coordinate, together with the previous point
used in the calculation and its perpendicular point, is then
used to draw the polygon line. Note that the first
quadrilateral is a special case as there is no previous data
at this point.

3.4. The Viewing Tool
When participating in the Teleradiology session, we
want all users to see the 3D isosurface object from the
same position to ensure that they are discussing the same
view. A mechanism is then required to enable the 3D
object to be rotated and examined as desired. Note that
there can be a problem if all the users are in the same
position since the avatars of the other users may block the
view from that point. However, since there is no real need
for avatars in a teleradiology application - the 3D
isosurface object is the primary focus - the avatars can be
disabled and removed from the rendering process
altogether.
Grouping it with a Spheresensor node enables
rotation of the 3D object. The user can then click on the
3D object and drag it around to a new orientation with the
mouse. DeepMatrix allows this interaction to be mirrored
to all users participating in the world. It achieves this by
using VRML’s External Authoring Interface (EM) [ 171
and special ‘Network’ nodes inserted into the VRML
scene, allowing events to be sent across a network. These
nodes have no effect on the way the scene is rendered.
This is an extremely flexible mechanism allowing even
the most complicated single user VRML world to be
converted to a multi-user world with the minimum of
effort.

3.5. The Annotation Tool
An annotation tool has also been developed to provide
the ability to draw or mark out regions of interest on the
3D isosurface object currently being viewed in the
collaborative environment. This action is analogous to
drawing on a canvas in an ordinary two-dimensional art
package.
A touchSensor is also grouped with the isosurface
model. When active, every time the user moves the mouse
to a new position whilst the mouse button is depressed,
and the cursor is over the isosurface model, an event is
generated. At every event, information on the position on
the object’s surface that the cursor is over, the normal
vector at this point, and the time the user clicked on the
object can be obtained. This information is used to
dynamically create the annotation marking on the object’s
surface by “joining the dots”. A line can be drawn
between
each
of
these
points
using
an
IndexedLineSet node (which allows a list of coordinates to be specified, and the order in which to join

A

Point 4

,

Point

Point

Figure 3: Calculating the vertices of the
polygon line.
As polygons are being created on the surface of an
object, then a further problem is encountered due to depth
aliasing - two objects are occupying the same space. To
resolve this problem, the annotation is drawn so that it

7

world, the user clicks on the button and an internal
javascript then enables the viewing or annotation tool for
that user’s instance of the client world only. If another
user then tries to take control, they are granted it and the
current controlling user has his control revoked. This is a
simple solution but has proved adequate for our 3D
Teleradiology application.
A further toggle switch has been included in the client
world to allow the user who is in control of the world to
switch between using the viewing tool and the annotation
tool.

does not lie exactly on the surface of the medical data, but
just above it. We make use of the surface normal
associated with each point to calculate a position just
above the surface of the original object. Moving along this
vector a small amount from each point in the polygon line
allows it to be raised by the required amount. This
technique is effective for all faces of complex objects
positioned anywhere in the scene.
The line annotation is shared between the worlds of all
participating users, by sending the co-ordinates and coordinate index of the object across a network node, just as
with the rotation field described above. See the snapshot
in Figure 4 for an example.

4. Results
We have created an effective application for 3D
Teleradiology using standard Web-based technologies.
This paper has focussed on the technical issues involved
in implementing such an application and described the
tools developed to enable collaboration between several
users. A novel method for 3D annotation in VRML has
been presented, and a method to avoid contention
problems has been discussed.
Stability of the DeepMatrix (and similar) software is
an issue. A solid interface between the Web Browser and
the VRML plug-in is vital, and this is not always the case.
For example, the combination of Netscape Communicator
and CosmoPlayer crashes if the browser window is closed
whilst the user is still connected to the DeepMatrix server.
This is due to a bug in the Netscape software. These
problems are being addressed by the latest releases of
browser and plug-in software, however, and will
eventually disappear.
We have used the system successfully with up to four
users. The system can cope with many more users than
this number, but there is rarely a need to support more
clients than this in a typical teleradiology application.

Figure 4. Active 3D teleradiology session with
isosurface of cochlear data. Other clinicians can
join and participate in the session using the
collaboration tools. Each participant gets the
same view of the scene.

5. Conclusions and Future Work

3.6. Solving the Contention Problem

The first version of this system is currently available to
the clinical partners in the NOVICE project. Comments
on the tool have been favourable with the sole reservation
that the clinical usefulness of such a tool is unproven since
similar tools have not been available before. Established
clinical data is required to assess the usefulness of this
type of tool. The clinical end users in NOVICE are
therefore being consulted and appropriate data identified
for this purpose. The cochlear data used as an example in
Figure 1 and Figure 4 provides one example of data
where 3D does provide significant added value [18], and
would be appropriate for a teleradiology session. Other
examples will be readily identified as this type of tool

The interaction tools described above are needed if the
teleradiology system is to be of any practical use. It is
important that only one user at a time can access these
tools, however, otherwise the behaviour of the system is
undetermined. DeepMatrix and the other multi-user
worlds that we investigated have not addressed this
contention problem.
To solve the contention problem a switch mechanism
has been included in the VRML scene to determine which
user is in control. A VRML “button” object has been
added to the client world (the sphere object in Figure 4)
grouped with a touchsensor. To take control of the

8

[8] N. Phillips, N.W. John, “Web based surgical simulator
for Ventricular Catheterisation”, Neurosurgery, April
2000
[9] B. Roehl, “Shared Worlds Review”, VR News, ISSN
1360-3485, Vol. 8 Issue 6, July 1999
[ 101VNet l.lb1. http://ariadne.iz.net/-jeffs/vnet/
[ 111Blaxxun Interactive, Community Server 4.0,
http://www.blaxxun,com/products/server/index.
html
[12]G. Reitmayr, S . Carroll, A. Reitemeyer, et al.
“DeepMatrix - An Open Technology Based Virtual
Environment System”, The Visual Computer Joumal,
October 1998
[13] NOVICE PaBLO alpha-2000.1 Patient Browser,
Launchpad, and Organizer,
http://dot.mvc.mcc.ac.uk:2077/ari-cgilpab1o.cgi
[ 141Advanced Visual Systems Inc., AVSExpress,
http://www.avs.com/products/expovr.htm
[15] W.E. Lorensen, H.E. Cline, “Marching Cubes: A
High Resolution 3D Surface Construction
Algorithm”, Computer Graphics, Vol. 21, No. 4, July
1987
[ 161DeepMatrix Ducumentation,
http://www.geometrek.com/developer/matrixdoc.
html
[ 171 External Authoring Interface,
http://www.web3d.org/WorkingGroups/vrml-eail
[18] W.M. Adam, R.D. Laitt, J.E. Gillespie, C. Ivers, C.
Hartley, R.T. Ramsden, A. Jackson. “MRI assists
planning in cochlear implant”, Diagnostic Imaging,
1998, 14,29-35.

becomes more widespread, such as the sharing of 3D
ultrasound volumes as supported by the TeleInViVo
system.
Additional annotation tools are also planned. We have
already created a text annotation tool that can be
integrated with a standalone VRML world. Work is in
progress to provide this capability in the multi-user
environment described in this paper.
The use of web-based technology has provided an
extremely flexible and cost-effective environment for the
provision of our 3D Teleradiology application. We are
confident that web-based tools such as these will become
common place in a clinical environment.

Acknowledgements
The
NOVICE
project
(Network
Oriented
Visualization in a Clinical Environment) is a collaboration
between AVS NS, BioMediCom Ltd., Sistemas Expertos
SA, Rasna Imaging Systems Srl, Foster Findlay
Associates Ltd, University of Manchester, Central
Manchester Healthcare Trust, Clinica del Rosario,
Clinica Femenia and University of Pisa. The project is
funded by the European Community under the ESPRIT
project EP26342.

References
[ 11 L. Beolchi, “European Telemedicine Glossary, DG
XIII-B 1: Applications relating to Health”, ISBN 92-

828-7147-9, 1999
[2] The TeleInViVo Project Web Pages,

http://www.igd.fhg.de/igda7/projects/teleinvivo/teleinvivo.
html
[3] The NOVICE Project Web Pages

http://www.man.ac.uk/MVC/projects/NOVICE/
[4] D. Best, “Understanding DICOM 3.0”, Kodak
catalogue number 4B8915
[5] The Virtual Reality Modeling Language. International
Standard ISO/IEC 14772-1:1997.
http://www.web3d.org/technicalinfo/specifications/vr
ml97hndex.htm
[6] 0. Hendin, N.W. John, 0. Shochet, “Medical Volume
Rendering on the WWW using JAVA and VRML”,
Proceedings of Medicine Meets Virtual Reality
(MMVR): 6, San Diego, pp34-40, January 1998
[7] N.W. John, N. Phillips, “Surgical Simulators Using the
WWW”, Proceedings of Medicine Meets Virtual
Reality (MMVR) 2000, Newport Beach, California,
January 2000.

9

