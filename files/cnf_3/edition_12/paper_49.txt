Improved Extraction of Planar Segments for Scanned Surfaces
R. Sacchi, J.F. Poliakoff, P.D. Thomas
Department of Computing
The Nottingham Trent University
Burton Street, Nottingham
NGI 4BU
England
j f i @doc.ntu.ac.uk, pdt @ doc.ntu.ac.uk

K.-H. Hafele
Forschungszentrum Karlsruhe
Institut fur Angewandte Informatik
Postjiach 3640
0-76021 Karlsruhe
Germany
haefele @ iai.fzk.de

Abstract

measured. We aim to develop automated segmentation of
such surfaces into simple geometric parts.
The data points for reverse engineering may be
obtained by a tactile method, such as a contact probe, or
the process may be non-tactile, for example laser
scanning. The resulting data may form a structured point
cloud, i.e. it may contain adjacency information derived
from the scanning process, such as the order of the points.
In some cases, the points may project onto a grid in, say,
the x - y plane, which then allows the points to be
parametrised. In general, however, such a 2YzD property
cannot be assumed. Previous methods for segmentation
have often relied on the fact that data points were related
to such a grid, so-called range data [ 5 ] or image data
based on pixels.
When the data points form an unstructured point
cloud, it is nevertheless possible to generate a triangulated
surface from it [6,7,8]. Our aim is to take such a general
surface which has some form of adjacency information
and to segment it into a small number of simple geometric
components. Each of the components must have all its
data points lying, within a given tolerance, on part of a
simple geometric shape which can be handled easily by a
CAD system. The geometric shape is assumed to be one
of the following: a plane, a sphere, a cylinder, cone or a
torus. It is relatively easy for a human operator to classify
regions into one of these types for the surfaces shown in
Figures 1, 3, 4 and 5. In the next sections we give a brief
survey of methods of segmentation and explain our
algorithm for fast planar extraction using data points and
adjacency information alone.
At the Research Centre Karlsruhe, the POMOS
(Point-based Modelling System) system has been
developed to handle large sets of digitised data. It is also
able to triangulate unstructured 2%D data, to approximate
manually segmented triangulated surfaces with free-form
surfaces and to analyse the surfaces generated [4]. We

The reverse engineering of a physical object often
requires the production of a digital representation of the
object. The object surface is scanned and a large number
of points are obtained, These points are often organised
in some way which provides adjacency information.
However, in other cases, the result is an unstructured set
of points, or point cloud. From such a point cloud a
triangulated surface can be generated, so in all cases
adjacency information can be obtained. Copies of the
original object can be manufactured using the
triangulated surface to define the shape. Often the
original object is made up of parts of a number of simple
geometric primitives and could be represented much more
simply. Our aim is to segment a discretely represented
surface into a small number of such simple geometric
components using a ‘region growing’ approach. This
paper describes an improved algorithm (with ‘super
triangles’)for planar extraction, which requires only the
data points and some form of adjacency information.

1. Introduction
Engineers use Computer Aided Design (CAD)
packages to design objects to be produced by Computer
Aided Manufacturing (CAM) systems [ 1,2]. Such objects
are usually made up of fairly small numbers of parts of
simple geometric shapes, so they can be relatively easily
manipulated, modified and manufactured. However, in
some cases a physical prototype is produced and is then
modified directly; in others, the initial design consists of a
physical object to be copied. In many cases, a process of
reverse engineering is needed in order to create a digital
representation of an object [3]. The positions of a large
number of points on the surface of the object are

325
0-7695-0743-3100
$10.00 0 2000 IEEE

OUOS F M A l

Super triangle

Extracthd plane

Figure 1. An example of a triangulated surface
where, as expected, a single planar segment
(shaded) has been found in 2 sec. The final super
triangle has been superimposed. (3,473 points,
tolerance 0.0005, adjustment tolerance 30%,
minimum triangles 150.)

Figure 2. The data from Figure 1 has been
processed again but with the adjustment tolerance
equal to the given tolerance. In the side view it can
be seen that the final super triangle is now tilted.
Three planar segments are found instead of one
(Time taken 13 sec.)

have used this system as a platform to develop and test
our algorithms.

We have found that the region growing approach is the
most appropriate for general triangulated surfaces [ 11.
Suitable ‘seed’ points are chosen and then further adjacent
points continue to be added while they approximate to the
required geometric shape.
Readjustment of shape
parameters is needed during the growing process. We
have developed a fast method for planar extraction which
uses region growing. This method can also be applied to
general surface data, provided that it contains some sort of
adjacency information.
Ashbrook et al. [15] have explained that planar
patches are very important, because many mechanical
objects are made up of planes. In 1982 Hebert et al. [ 131
described a method for extracting primitives using the
Hough transform but it is time-consuming and memoryintensive. Since then other methods have been proposed
for extraction of planar segments range images but they
rely on the parametrisation [ 16,17,18].
We have previously described in detail our approach
to segmentation of triangulated surfaces using region
growing [l]. The method is based on the curvature
estimation algorithm which we had developed. Region
growing starts with a triangle of low estimated mean
curvature, which forms the initial region. However, we
have found that for planar segments the time taken for
curvature estimation is longer than the time saved in
avoiding false starts. Without curvature estimation, the
method can be adapted immediately to the more general
case. Our new algorithm, described in Section 3.2, was
developed using an idea proposed by Roth et al. [141 for
representing a geometric primitive by an appropriate
minimal set of points.

2. Segmentation
Previous work in segmentation has been mainly
concerned with range data or image data [9,10]. Splitand-merge is a top-down method for which the splitting
process has most often relied on the parametrisation of the
data. A bottom-up approach involves starting with a seed
point and adding suitable data points until no more can be
found 1111. Different regions can be grown and then
merged when possible. During the growing process,
surface shape parameters may need to be adjusted.
Curvature has been used to provide preliminary
information about surface quality [5]. One approach to
segmentation is to attempt to join up points where
curvature is high in order to identify ridge lines which
form the boundaries of surface segments [12]. Some
boundaries can be found in this way. However, a smooth
join between two segments, such as a plane and a cylinder
joined tangentially, cannot be identified in this way,
because there is no ridge. There will often be a small
change in the curvature itself but this cannot be detected
reliably with noisy data. Clustering methods, such as the
Hough Transform, have been applied successfully to
range data, but many rely on the parametrisation of the
data [ 131. Genetic algorithms for primitive extraction are
computationally intensive [ 141, so they are unsuitable for
the complex objects which usually occur in reverse
engineering.

326

POUOS F I M A l

POMOS FZKIIAI

I

Figure 4. An example where, as expected, a single
planar segment has been found in 10 sec. (2,750
points, tolerance 0.00068, adjustment tolerance 50%,
minimum triangles 150.)

Figure 3. Seven planar segments, six of which
resemble planes, have been found in 25 sec. One
segment appears to be part of a cylinder of large
radius. (4.018 points, tolerance 0.279, adjustment
tolerance 50%, minimum triangles 100.)

It would be possible to adjust the plane every time a
point is added in order to achieve a new plane which best
fits the data points. However, the region growing process
will then take much longer. Our new algorithm speeds up
the process even more.

3. Fast extraction of planar segments
We first describe a simple region growing algorithm
for planes and then explain how our algorithm improves
on such methods.

3.2. Region growing with super triangles

3.1. Simple region growing

The simple algorithm from section 3.1 can be
modified as described below.
We have found that the region growing can be made
even faster by restricting the possible planes to those
defined by any triangle formed from any set of three
points within the current region. Such a triangle we call a
‘representative triangle’ for the plane. We attempt to
grow this representative triangle by making its area as
large as possible. The idea is that for reasonably large
regions there will only be a small ‘tilt’ to the plane caused
by adjusting the plane when another point is added. This
restriction may cause failure of some seeds to grow
successfully.
However, for any region which is
approximately planar there will be many possible seed
regions available.
At each stage of the region growing process therefore,
the current region is associated with a current plane
defined by a representative triangle (with vertices among
the points in the current region). There is also associated
a ‘super triangle’ of area at least as large as that of the
representative triangle. Initially the two triangles are both
defined by the three non-collinear points of the seed
region.

The simple region growing process starts with a ‘seed’
region of three non-collinear adjacent points which
therefore define an initial plane. Repeatedly an attempt is
made to add a new point to the region. The candidate
point must be adjacent to a point already in the region.
The process continues until no more such points can be
added. When a point is considered for addition, one of
two cases occurs:
(i) it lies within the given tolerance of the plane
associated with the current region;
(ii) it is not within the tolerance of the plane.
In case (i) the point is added immediately to the region.
In case (ii) it is added temporarily to the region and an
attempt is made to adjust the plane so that all the points of
the new region lie within the required tolerance of the
new plane. When this can be done the candidate point is
added to the region and the plane is updated.
In order to prevent very small planar regions from
being extracted, an additional parameter is used, the
minimum number of points for a region. (We have used a
minimum number of triangles in our implementation.)

327

I

’OMOS FZWIAI

Figure 5. Twenty planar segments have been found in 23 sec. for this example of a scan of various nuts in different
positions. (3,666 points, tolerance 0.0005,adjustment tolerance 50%, minimum triangles 20.)

new point and the previous point added. An attempt is
made to replace the old triangle by one of larger area by
checking all possible triangles with vertices chosen from
the above two points together with the old triangle’s three
vertices.
If an increase in area is possible, the
replacement is chosen as such a triangle with maximum
area. Otherwise, the old triangle is retained.
We have found that, if the adjustment tolerance has the
same value as the given tolerance, then case (ii) can lead
to a considerable tilting of the super triangle, as shown in
Figure 2. This can prevent region growth and result in the
splitting of one approximately planar part into several
planar regions. Therefore we have used a smaller value
than the given tolerance, which reduces the tilt without
having much effect on the size of region grown. The case
shown in Figure 2 produces three planar segments,
whereas in Figure 1 with adjustment tolerance of 30%
gives a single planar segment for the same data and takes

Now, if case (i) occurs, the new point is added to the
region and the super triangle is modified using the new
point, as described below. However, the representative
triangle (and therefore the plane) is left unchanged.
In case (ii), we consider the plane defined by the super
triangle. If all the points (including the candidate point)
lie within an ‘adjustment tolerance’ of this plane, it
becomes the new plane and the candidate point is added
to the region. The super triangle thus becomes the new
representative triangle and the super triangle is modified
(see below). Therefore the area of the representative
triangle will never decrease and will tend to increase,
because of the way the super triangle is found. Figure 1
shows an example where a single planar segment has
been extracted together with the final super triangle.
We now describe how a new super triangle is found
(in such a way that the area will tend to increase). The
new triangle is generated from the old one using both the

328

a shorter time. For the examples in Figures 3, 4 and 5 the
adjustment tolerance was set to 50% of the given
tolerance.
W e have also found that many data sets are derived
from points scanned in a systematic way. For such data
sets the results are improved, if an attempt is made to
randomise the order in which the points are chosen as
seed points. Without this ‘pseudo-randomisation’ the
seed point tends to be one near the boundary of the region
and the initial plane is sometimes a bad approximation to
the plane. This can cause smaller regions to grow and
again result in splitting of regions.

7. References
Sacchi R, Poliakoff JF, Thomas PD, Haefele K-H,
“Curvature Estimation for Segmentation of Triangulated
Surfaces”, Proc. 2“d Int. Conference on 3-0 Digital
Imaging and Modeling, Ottawa, Canada, pp. 536-544,
1999.
Hoschek J, Lasser D, Fundamentals of Computer Aided
Geometric Design, AK Peters, Wellesley, Massachusetts,
1993.
Vhrady T, Martin RR, Cox J, “Reverse Engineering of
Geometric Models - An Introduction”, Computer-Aided
Design, Vol. 29 No. 4, pp. 255-268, 1997.
Htifele KH, “POMOS - Point Based Modelling System”,
in: Hoschek, J, Dankwort, W (Eds.), Reverse Engineering,
Verlag B.G. Teubner, StuttgarVGermany, 1996.
Besl PJ, Jain RC, “Segmentation Through Variable-Order
Surface Fitting”, IEEE Transactions on Pattern Analysis
& Machine Intelligence, V. 10, No. 2, pp. 167-192, 1988.
Hafele KH, Hellmann M, “3D-MeMatenaufbereitung und
Weiterverarbeitung mit POMOS”, 2. Workshop Optische
3D-Formerfassung GroOer Objekte, Esslingen, Germany,
1996.
Hoppe H, Surface Reconstruction from Unorganised
Points, PhD Thesis, University of Washington, 1994.
Yemez Y, Schmitt F, “Progressive Multilevel Meshes
from Octree Particles”, Proc. 2nd Int. Conference on 3 0
Digital Imaging and Modeling, Ottawa, pp. 290-299,
1999.
Biswas PK, Biswas SS, Chatterji BN, “An SIMD
Algorithm for Range Image segmentation”, Pattern
Recognition, Vol. 28, No.2, pp. 255-267, 1995.
Leonardis a, Gupta A, Bajcsy R, “Segmentation of Range
Images as the Search for Geometric Parametric Models”,
In?. Journal of Computer Vision, Vol. 14, No. 3, pp. 253277, 1995.
Maitre G, Hugli H, Tikche F, Amann JP, “Range Image
Segmentation Based on Function Approximation”, in: A
Gruen & E Baltsavias (Eds.), Close-Range
Photogrammetry Meets Machine Vision, SPIE Vol. 1395,
pp. 275-282, 1990.
Lukhcs G, Andor L, “Computing Natural Division Lines
on Free-Form Surfaces Based on Measured Data”, in:
Daehlen M, Lyche T, Schumaker LL (Eds.),
Mathematical Methods for Curves and Surfaces II, pp.
319-326, 1998.
Hebert M, Ponce J, “A New Method for Segmenting 3-D
Scenes into Primitives”, Proc. Intemational Conference
on Pattem Recognition, Munich, pp. 836-838, 1982.
Roth G, Levine MD, “Geometric Primitive Extraction
using a Genetic Algorithm”, IEEE Transactions on
Pattern Analysis and Machine Intelligence, Vol. 16, No.
9, pp. 901-905, 1994.
Ashbrook AP, Fisher RB, Robertson C, Werghi N,
“Segmentation of Range Data into Rigid Subsets using
Planar Surface Patches”, Proc. British Machine Vision
Conference, Essex pp. 530-539, 1997.
Jiang XY, Bunke H, “Fast Segmentation of Range Images
into Planar Regions by Scan Line Grouping”, Machine
Vision &Applications, Vol. 7, No. 2, pp 115-122, 1994.

4. Results
Fast planar segment extraction has been implemented
within the POMOS system on a Silicon Graphics 0 2
workstation. Figures 1, 3, 4 and 5 show the results of
planar segment extraction for various triangulated
surfaces using adjacency information alone. It can be
seen that the planar regions found generally correspond
well to what we expected. However, in Figure 3 an
additional region has grown on a part resembling a
cylinder of large radius. This can be avoided by
increasing the value of the minimum triangles parameter
but then small, genuinely planar, segments may be
missed. In Figure 4 the process has successfully
distinguished between the planar part and slightly raised
dome.

5. Conclusions
Preliminary results show that the new algorithm is
successful in achieving planar segment extraction when a
suitable value of tolerance is provided. Work is in
progress to develop a method for estimating a suitable
tolerance value automatically. The current algorithmic
performance is by no means optimal, because of the data
structure used in POMOS. On a dedicated system we
expect that the computational time would be noticeably
lower.

6. Acknowledgements
We thank the Nottingham Trent University and the
Research Centre Karlsruhe for supporting this work and
for providing facilities for the research. We are also
grateful to the National Research Council of Canada and
the Technische Hochschule Darmstadt (Germany) for
making available suitable test data.

329

[18] Taylor RW, Savini M, Reeves AP, “Fast Segmentation
of Range Imagery into Planar Regions”, J. Computer
Vision, Graphics and Image Processing, Vol. 45, No. 1,
pp. 42-60, 1989.

[ 171 Faugeras OD, Hebert M, Pauchon E, “Segmentation of

Range Data into Planar and Quadric Patches”, Proc. 3“‘

Conference on Computer Vision and
Recognition, Arlington, VA, pp. 8-13, 1983.

Pattern

330

