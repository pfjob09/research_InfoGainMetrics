2012 16th International Conference on Information Visualisation

Exploring, Comparing and Coordinating Multiple Datasets in an Information
Visualization Tool
Rodrigo Augusto de Moraes Lourenço2, Rafael Veras Guimarães1, Nikolas Jorge S. Carneiro1, Roberto Yuri da
Silva Franco2, Aruanda Simões Gonçalves Meiguins3, Bianchi Serique Meiguins1,2
1

Faculdade de Computação – Universidade Federal do Pará – UFPA, Belém, PA 66075-110 Brazil
Programa de Pós-Graduação em Ciência da Computação – Universidade Federal do Pará Pará – UFPA,
Belém, PA 66075-110 Brazil
3
Área de Ciências e Tecnologias – Centro Universitário do Pará – CESUPA, Belém, PA 66035-170 Brazil
{rodrigo@redeinformatica.com.br, rafaveguim@gmail.com, nikolas.carneiro@gmail.com,
roberto.yuri.franco@gmail.com, aruanda@redeinformatica.com.br, bianchi.serique@terra.com.br}
2

Thus, making timely, appropriate business choices
in face of huge amounts of data becomes extremely
difficult without the support of a tool. In many cases,
data were analyzed using a spreadsheet or tabular form
with simple charts. In some situations, these sheets are
very detailed (with multiple columns and large volume of
pages), making the person who is looking unable to
visualize all data at once and losing the information
contained there. In the other hand, in case the
spreadsheet is very synthesized (with a few columns and
pages), preventing the analyst to perceive details that
could be relevant to decision taking.
In this context, the area of Information Visualization
(IV) has increased in recent decades [8], with the
development of computational tools that assist decisiontaking. The IV is intended to assist the analysis and
understanding of the data [3] for quick, intuitive and
interactive, utilizing the human cognitive capability to
extract information from data using visual
representations of the data [8]. The human sense of sight,
when correctly operated becomes a very effective
resource for this task, since this effect has great ease and
speed of detection of changes in the environment.
Beyond these needs, often come up the need to
establish a relation between two or more data sources. To
face it the usual way is join those datasets into one, but it
could demand a rough effort and much time to be done,
before submit this new dataset to an IV tool.
Given the above scenario, this paper presents an
information visualization prototype that allows multiple
dataset analysis and coordination using visualization
techniques (as scatterplot [8], parallel coordinates [2],
treemap [5] and pie chart) and features like data
overview, selection, brushing, filtering and on-demand
details (IV "mantra" [6]).

Abstract
The goal of this paper is to present an
information visualization application capable of opening
and coordinating information over two or more datasets.
We have chosen this approach to address some of the
limitations of various applications. Also, the application
uses multiple coordinated views and multiple
simultaneous datasets. We highlight the application
layout configuration by the user, including the flexibility
to specify the number of data views and to associate
different datasets for each visualization technique.
Diferente approaches are suggested of how to deal and
interact with multiple datasets.
Keywords: Information Visualization, Multiple
Datasets, Large Datasets, Coordinated Views,
Multiple Displays

1. Introduction
Business Intelligence (BI) is an area that during the
past few years has been target of increasing interest of
companies of varied size and market worldwide. This
interest comes from the companies' needs of gain
knowledge about their own business to make decisions
that can increase profits, improve competitiveness,
achieve goals, among others.
This area triumphs today, where the technological
arsenal is growing rapidly in terms of electronics,
machines with high processing power and storage,
information systems that collect and store data generated
every second in every kind of transaction, such as
shopping credit cards or bank transfers. Thus, the amount
of data that can and in fact is stored in repositories
nowadays is huge, and in most cases is just stored,
becoming mere digital trash.
1550-6037/12 $26.00 © 2012 IEEE
DOI 10.1109/IV.2012.115

613

SystemCore internal modules contain structural models
and controllers of their specific functionalities, on the
other hand, Presentation internal modules are mainly
views for these models.
Fig. 3, 4 and 5 detail the internals of each one of
the major modules, displaying the most important
classes, interfaces and their relationship for a better
understanding of the system.

2. Information Visualization
The main purpose of using an information
visualization tool is to interact with a dataset, generating
organized images (data graphical representation) by user
previously defined criteria. These images enable the user
to contextualize the data and its relationships and extract
information that will effectively assist him/her to better
perform a task. This process should be fast, easy and
intuitive, using the appropriate techniques, codifications
and representations for data and user tasks [3, 8, 7].
The characteristics of a good visualization tool are:
data overview, zooming, filtering and on-demand details
[6]. An IV tool may support a variety of tasks like
identification, multi-derivative correlation, search,
exploration and communication [8].
In an effort to improve user perception, IV tools
have frequently applied multiple views from data [3].
The user may simultaneously build several different
graphical representations for the same dataset in order to
better analyze the data [1, 4]. This feature is called
multiple coordinated views. The coordination ensures
that all views keep consistent even after many user
interactions with the visualized dataset and the graphical
representations. The main coordination aspects are the
visual attributes (color, shape and size), brushing,
navigation and filters, used to reduce the analyzed
dataset [10].

Figure 2: Major application modules

3. Related Works

Fig.
3
presents
the
internals
of
the
VisualizationModule, it is composed of one dataset
(XML, File or Database) for data input, one or more
visualization techniques to generate the graphical views,
one color manager, one filters manager and one ondemand details manager. It's main purpose is keep
configuration
information
and
generate
the
visualization's images based upon these configurations.

3.1. Snap-Together Visualization
Snap-Together [4] is a information visualization tool
that allow visualizations and coordination in a fast and
dynamic way with no need of programming skills. The
tool is flexible in data (i.e. the user are allowed to load
multiple datasets), visualizations and coordination.
Furthermore, it is based on the relational data model.
To explore a dataset, the user should first load
relations in visualizations. Next, build the coordinations
specifying actions to tightly couple the visualizations.
The possible coordination actions are selection,
navigation, highlight and load, these are available
according to the kind of visualization choose.

3.2. Improvise
Improvise [11] is an environment that allows to the
user build and explore visualizations from relational data
through multiple visions, providing functionalities as
load different kinds of data, create multiple visualizations
over them and specify coordination using an abstractive
visual language.

Figure 3: VisualizationModule detailed

4. Architecture and Technologies

SystemCore is the main module, it is responsible for
the creation of new VisualizationModules, for the
coordination between VisualizationModules, for some of
the actions from the Presentation's input and for binding
Presentation's views to the VisualizationModules
models.
SyncControl keeps a list of couples of coordinated
columns between the datasets. It captures the model

The software visualization architecture was
conceived to present a well-defined distribution of
responsibilities, mainly inspired by the MVC model. The
architecture is divided in three major modules (Fig. 2):
VisualizationModule, SystemCore and Presentation.
Each one of these modules is sub-divided into
specialized
modules.
VisualizationModule
and

614






events from the VisualizationModule, and whenever a
filter or color configuration is made on a model that
references one of the listed columns the modification is
propagated to the related column.



Customizable workspace
Configurable coordination among views
Simultaneous use of multiple datasets
Support to different information visualization
techniques
Automatic generation of the client interface
according to dataset information;

Fig. 6 shows color, filter and brushing coordination
over Treemap view and a Scatter Plot view.

Figure 4: SystemCore detailed
Presentation creates and manages a group of Graphic
User Interface (GUI) components. These components are
created according to the user's needs, adding a new
dataset to the application will require new configuration
panels for example. Presentation has a tight relation with
the SystemCore, whenever it creates a new view (be it a
configuration panel or a visualization panel) it makes a
request to the SystemCore to bind the newly created
view to the respective module.
This approach was chosen looking into web-based
future works where the Presentation module might be a
group of Servlets providing information and a
communication path for a thin-client browser
application.

Figure 6: Multiple coordinated views on the left
display, configurations and notes on the right
display

5.1. Customizable Workspace
The following figures present the graphic user
interface (GUI) components used in the process of
customizing the workspace with new datasets and
visualization techniques. This allows the user to manage
the visualization tool for his/her own needs. It is possible
to select a set of datasets to be used, to specify
visualization techniques and coordination options for
each view.
Fig. 7A presents the first configuration step, when
the user should decide from where to load a set of data,
XML File, CSV File or from a Database. The next step
(Fig. 7B, 7C) is to add the desired visualization
techniques.
The user may interact with as many as simultaneous
views as desired, these views are placed side by side
inside a scrollable panel. During the writing of this paper
the implemented techniques were: Scatter Plot,
Treemaps, Parallel Coordinates and Pie Chart.

Figure 5: Presentation detailed

5. Prototype
The prototype is a general-purpose information
visualization tool with the following main characteristics:

615

(A)

Figure 8: Matching columns

(B)

After the configuration steps, the user may save the
configuration for later use or just start the visualizations
with the customized configuration.

5.2. Automatic Generation of the User Interface
The user interface is automatically generated
according to the analysis of the metadata associated to a
dataset. The filter components may be categorical or
continuous and are represented respectively by
checkboxes and range sliders (Fig. 9). The generation
process associates the appropriate filter to each attribute
according to its data type and number of different values.
For example, each time the color property is changed, a
new caption should be built to represent the data values
of the chosen attribute.
The number of filter components is proportional to
the number of selected datasets. The generation creates X
sets of filter components, where X is the number of used
datasets.

(C)
Figure 7: First Steps: (A) Load dataset; (B) Add
view button; (C) Choosing the desired
technique
It's important to notice the strong colored borders,
they link configurations and views, so that the
configuration in the green border will affect the views in
green border.
Fig. 8 presents the screen where the user is able to
match attributes from the different datasets. Matching
two or more attributes from different datasets means that
these attributes represent the same information, this
implies that filters and colors are going to be coordinated
between these datasets. In other words, once two
columns that represent 'region' are matched then
whenever I filter or change color using the ' region '
attribute in any of the two datasets that same change will
be reflected to the other dataset.

616

performance by focusing on a small portion of the
dataset for refined analysis.

6.2. Duplicating the visualization environment
Another usage is to replicate a ModuloVis, this can
be done by clicking on the option to clone ModuloVis.
The process of cloning a ModuloVis comprises three
main operations: 1. Reopen the database 2. Reload all
settings made 3. Initialize the graphics user interface
components.
A major application of this feature are cases where it
is desired to rapidly draw comparisons on the same
dataset by modifying one or more settings. Like
exploring the data with filters to a certain point and then
draw comparisons between specific attributes such as
gender, age, location. In this case, because it is the same
dataset, optimizations were made so that the records are
loaded only once from the dataset.
The option to duplicate a ModuloVis stands out by
allowing independent interactions in the same dataset
(distinct ModuloVis), and thus, provide different views
of the same technique for data analysis.

6.3. Using multiple displays by detaching views
Figure 9: Example of the filter tab.

To display multiple datasets is to display multiple
views, these views often need a lot of screen space for a
reasonable showing. Because of this, the analysis of
multiple datasets benefits greatly from the use of high
resolution displays and the use of multiple displays. To
allow a flexible organization and showing of views on
multiple displays, the prototype allows to detach the
views from the main application window, so that the
detached view is transferred to a window of his own.
This facilitates the positioning and sizing of the views. In
the new window to view maintains the border color
related to its dataset, and closing the new window sends
the view back to the main application window. Fig. 10
shows a workstation using 3 displays, one video card.

5.3. Using Multiple Datasets
The ability to load different data views allows the
user to compare data among similar datasets with
different data values. For example, each view could
contain data associated to a specific time period. The
choice of datasets happens during the workspace
configuration stage. Each dataset is related to a view and,
consequently, an information visualization technique.
Examples of the use of multiple datasets may be seen in
figure 10.

6. Suggested Approaches
6.1. Helping the exploration of large datasets
One use of the concept of opening multiple datasets
is to optimize the visualization of information in large
datasets. To accomplish this, the first step is to choose a
visualization technique that works on the totalized
information of the dataset instead of each record. It is
also necessary that the technique supports "drill up" and
"drill down" operations.
In this scenario it is going to be used a pie chart to
explore the dataset without having to retrieve specific
records, only sums and counts. After exploring the
dataset using drilling operations and finding an
interesting group for a refined analysis, right click the
group and then "Open as new dataset".
This action collects the choices made in the drilling
process and uses them as parameters in a query to fetch
records in the database and generate new datasets,
smaller sub-datasets.
This process can be repeated to other groups, this
grants flexibility on the configuration steps and overall

Figure 10: Workstation with multiple displays
exploring two similar datasets from different
years. Configurations and notes on the right
display

7. Final Remarks
The article aims to present the potential and
characteristics of an information visualization tool that
can handle different datasets, and synchronizes them
through the relationship between similar attributes
between the datasets involved. The views created can be
presented in multiple techniques, and the views are

617

[10] Pillat, R. M.; Freitas, C. D. S. Coordinating Views in the
InfoVis Toolkit. Proceedings of Advanced Visual
Interface. pp. 496-499. Venezia, Italy, 2006.
[11] Weaver, C. Building Highly-Coordinated Visualizations
In Improvise. Proceedings of the IEEE Symposium on
Information Visualization. Austin, TX, 2004.

coordinated among themselves to improve the user
perception regarding the data and their relationships.
Thus, the use of multiple related datasets extends the
concept of understanding data and its relationships, as it
is done over different datasets. For example, to look for
similar patterns of information between those datasets.
However, the usage is not limited to the use of different
datasets. The same dataset may be explored with
different filter configurations, this simple tasks of
analyzing data views with different settings and filters
may be unavailable in some IV tools.
Finally, an additional concept that implies that the
tool has to be extensible over a number of monitors, in
order to bypassing the difficulty of the limits of the
viewing area as new datasets are analyzed.

8. Future Works
We highlight the following potential future
developments:
 Application of usability essays;
 Deep zoom support on scatter plot, treemap and
parallel coordinate techniques;
 Create a new web-based Presentation module;
 Expand the architecture to be able to handle
multiple users at the same time;
 Study new usage scenarios about more distinct
datasets.

References
[1]

[2]
[3]
[4]

[5]
[6]
[7]
[8]
[9]

Baldonado, M. Q. W.; Woodruff, A.; Kuchinsky, A.
Guidelines for using multiple views in information
visualization. Proceedings of the working conference on
Advanced Visual Interfaces, pp. 110 – 119. Palermo.
Italy. 2000.
Inselberg, A.; Dimsdale, B. Parallel Coordinates: A Tool
for Visualizing Multidimensional Geometry, In
Proceedings of IEEE Visualization’90 (1990), 361-375.
Kerren, A.; Ebert, A.; Meyer, J. Human-Centered
Visualization Environments. Germany: Springer, 2007.
403 p.
North, Chris; Shneiderman, Ben. Snap-Together
Visualization: A User Interface for Coordinating
Visualizations via Relational Schemata. Proceedings of
the working conference on Advanced visual interfaces,
pp 128-135. Palermo, Italy. 2000.
Shneiderman, B. Tree visualization with tree-maps: 2-d
space-filling approach. ACM Transactions on Graphics,
1992.
Shneiderman, B. The eyes have it: a task by data type
taxonomy for information visualizations. Procedings of
IEEE Visual Language, 336-343. 1996.
Shneiderman, B.; Card, S. K.; Mackinglay, J. Readings
in Information Visualization: Using Vision to Think. 1
ed. Morgan Kaufmann, 1999.
Spence, R. Information Visualization: Design for
Interaction. Barcelona: Acm Press. Second Edition,
2007.
Lammarsch, T.; Aigner, W.; Bertone, A.; Miksch, S.;
Turic, T.; Gärtner, J. A Comparision of Programming
Platforms for Interactive Visualization in Web Browser
Based Applications. Proceedings of IEEE Symposium on
Information Visualization. London, UK, 2008.

618

