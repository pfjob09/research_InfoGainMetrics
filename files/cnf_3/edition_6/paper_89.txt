An Error-Resilient Algorithm Based on Partitioning of the Wavelet Transform
Coefficients for a DIRAC Video Codec
Myo Tun, W. A. C. Fernando
Electronics and Computer Engineering,
School of Engineering and Design, Brunel University, Kingston Lane, Uxbridge, UB8 3PH, UK.
Email: { myo.tun@brunel.ac.uk , anil.fernando@brunel.ac.uk}

Abstract
Video transmission over the wireless or wired
network require protection from channel errors since
compressed video streams are very sensitive to
transmission errors because of the use of predictive
coding and variable length coding. In this paper, we
propose a method to achieve robustness to transmission
errors to the compressed bit-stream of wavelet based
open source video codec, Dirac. By partitioning the
wavelet transform coefficients into groups and
independently processing each group using arithmetic
and Turbo coding, we could achieve the robustness to
transmission errors of the compressed video stream in the
packet erasure wired network. Simulation results show
that the proposed technique can achieve up to 5dB PSNR
gain over the un-partitioning method.
Keywords--- error resilient coding, coefficient
partitioning, wavelets, DIRAC.

1. Introduction
Numerous sophisticated techniques have been
developed over the last several decades to make video
transmission over a noisy channel resilient to errors. One
approach is to cascade a SPIHT coder with error control
coding [1]. The idea is to partition the output bitstream
from the SPIHT coder into consecutive blocks of length
N. Then, to each block, c checksum bits and m zero bits
are added to the end to flush the memory and terminate
the decoding trellis at the zero state. The resulting block
of N + c + m bits is then passed through a rate r RateCompatible Punctured Convolutional (RCPC) coder [2].
However, this technique has the disadvantage of still
being vulnerable to packet erasures or channel errors that
occur early in the transmission, either of which can cause
a total collapse of the decoding process.

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

Another approach is to make image transmission
resilient to channel errors by partitioning the wavelet
transform coefficients into groups and independently
processing each group. Thus, a bit error in one group does
not affect the others, allowing more uncorrupted
information to reach the decoder. This method was first
reported by Creusere [3] for use with the EZW algorithm.
In Pearlman’s work [4], they first break the wavelet
transform coefficients into a number of spatio-temporal
tree blocks according to [3], and modify the 3-D SPIHT
algorithm to work independently with these blocks. They
then apply Kim’s method [5][6] of RCPC channel coding
as the forward-error correction (FEC) to every packet.
In this paper, we combine Creusere’s wavelet
coefficients partitioning method with more powerful
channel coding mechanism, Turbo Coding [7] to protect
the compressed video sequence from the Dirac [8]
encoder output. We don’t use any type of transform
coefficients coding algorithms such as EZW, ZTE,
SPIHT, etc., since all of these are heavily patented and
Dirac doesn’t want to include any patented algorithm in
their codec architecture.
The organization of this paper is as follows. Section 2
provides a brief introduction to Dirac video codec and
section 3 illustrates the method of wavelet transform
partition. Section 4 presents the proposed structure of
error resilient video encoding technique and section 5
explains the transmission parameters and decoding
technique at the receiver. Result and conclusion are
presented in section 6 and 7 respectively.

2. Dirac Video Codec
Dirac is an Open Source video codec aimed at
resolutions from QCIF(180 u 144) to HDTV(1920 u 1080)
progressive or interlaced, initially developed by BBC [8].
Dirac performs well in comparison with other codecs, and

its performance is much better than MPEG-2. However,
performance was not the only factor driving its design.
Dirac is intended to be simple, powerful and modular.
Dirac uses hierarchical motion estimation and Overlapped
Block-based Motion Compensation (OBMC) to avoid
block-edge artifacts. First the motion compensated
residual frames are wavelet-transformed using separable
wavelet filters and divided into subbands. Then, they are
quantized using Rate-Distortion Optimization (RDO)
quantizes. Finally, the quantized data is entropy coded
using an Arithmetic encoder [8].
The codec can support any frame dimensions and
common chroma formats (luma only, 4:4:4, 4:2:2, 4:2:0,
4:1:1) by means of frame padding. The padding ensures
that the wavelet transform can be applied properly. Frame
padding also allows for any size blocks to be used for
motion estimation, even if they do not evenly fit into the
picture dimensions.
Dirac defines three frame types. Intra frames (I
frames) are coded independently without reference to
other frames in the sequence. Level 1 frames (L1 frames)
and Level 2 frames are both inter frames which are coded
with reference to other previously (and/or future) coded
frames. The difference between L1 and L2 frames is that
L1 frames are also used as temporal references for other
frames, whereas L2 frames are not. That means L1 frames
are coded by temporal prediction but also predicted
themselves. The encoder operates with standard Group of
Picture, (GOP) modes whereby the number of L1 frames
between I frames, and the separation between L1 frames,
can be specified depending on the application.
A prediction structure for frame coding using a standard
GOP structure is shown in figure 1. In this figure, the
number of L1 frames between I frames is 2 and the L1
frame separation is 3.

codec into S groups and then quantize and code each of
them independently so that S different bit streams are
created [3]. By coding the wavelet coefficients with
multiple, independent bit streams, any single bit error
truncates only one of the S bitstreams while the others are
still correctly received. Therefore, the wavelet coefficients
represented by a corrupted bitstreams are reconstructed at
reduced accuracy, while those represented by the errorfree streams are reconstructed at the full encoder
accuracy. The figure 2 graphically illustrates this wavelet
coefficient partitioning for S = 4 bit streams for four
levels wavelet decompositions as shown in the Figure 2.

Figure 2 Wavelet Coefficient partitioning for S =
4, with four levels wavelet transform.
Note that, S can be increased by powers of four. If the
image is of size X u Y and L levels of wavelet
decomposition are used, then the maximum number of
independent bit streams allowed is
S

I

L2

L2

L1

L2

L2

L1

L2

L2

I

Figure 1 Prediction of L1 and L2 frame.

3. Wavelet Coefficient Partitioning
The basic idea of the wavelet coefficient partitioning
is to divide the wavelet coefficients at the output of the
Discrete Wavelet Transform (DWT) process of the Dirac

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

 X uY 

4L

(1)

4. Error Resilient Video Encoding
Figure 3 shows the block diagram of error resilient
encoding procedure of the Dirac video encoder’s output
bitsream. We divide the output of the DWT process of
Dirac encoder into S sub-frames according to the wavelet
coefficient partitioning method shown in the section 3.
Then we process these sub-frames independently, i.e.
RDO quantization and arithmetic encoding before
entering multiplexer. In the multiplexer, we combine all
the independent parallel bitstreams to get serial one starts
from bitstream 1 followed by bitstream 2 and so on until
we reach bitstream S. We then apply the FEC to the
output serial bit stream by using rate = ½ Turbo encoder.

channel doesn’t mean that we lost the whole packet
instead we lost only 1/100 of a packet. In the receiver, the
turbo decoder can effectively correct those errors since we
have eliminated the possibility of error burst formation by
using bitwise interleaving.

HL
HL
LH

HH

LH

HH

5. Error Resilient Video Transmission
Coefficient Partitoning

RDO
Quantizer

RDO
Quantizer

RDO
Quantizer

Arithmetic
Encoder

Arithmetic
Encoder

Arithmetic
Encoder

Bit stream 1

Bit stream 2

Bit stream S

Multiplex the bit
streams

Turbo Encoding

Bitwise
Interleaving
Transmit to Channel

Figure 3 Structure of error resilient robust
wavelet coefficient partitioning and encoding
procedure.
Turbo encoder is the parallel concatenation of two
recursive systematic convolutional encoders having
generator polynomials g1 = 31, g2 = 27 with memory M =
4. We do puncturing at the output of the encoder by
taking only odd parity bit and even parity bit from the
upper and lower convolutional encoder output
correspondingly. The encoder interleaver is a
pseudorandom interleaver having a length of 200. In the
decoder, we use symbol by symbol MAP algorithm with
the number of iteration set to 6.
We have placed a bitwise interleaver at the output of
the Turbo encoder before we construct the packet. The
role of the bitwise interleaver is to distribute the series of
information bits into several different locations so that a
packet lost in the packet erasure network doesn’t affect
the error correcting capability of the Turbo decoder (i.e.
to avoid the formation of error burst). The bitwise
interleaver length is set to 100 times the length of the
packet. That means a packet loss in the packet erasure

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

We first partition the bit stream of multiplexer output
into consecutive blocks of length L. Then, to each block, c
checksum bits are calculated and added and again m zero
bits are added to the end to flush the memory of the
component coder (i.e. to terminate the trellis at zero
stage). The resulting block of L + c + m bits is then
passed through a rate 1/2, Turbo encoder. So, the block
length at the output of the Turbo encoder, N becomes
2 u (L + c + m) bits. In our case, we use N = 400 bits, c =
16 bits for CRC and m = 8 bits. Packet formation is
carried out by adding the appropriate packet header at
every segment of N bits before we transmit them to the
channel. We assume here that the channel is packet
erasure channel and generating no bit errors inside each
packet except the loss of the whole packet because of
network congestion. If a packet lost is occurred, we create
all zero data packet at the receiver to replace the lost one
and undergoes bitwise deinterleaving process.
After that, Turbo decoding and demultiplexing
process follows so that we get S number of sub bit
streams. Turbo decoder normally tries to correct the errors
and if the errors are still there, we replace the whole
packet with error symbol. We determine whether the
received packet is in error or not by using CRC error
checking mechanism. The arithmetic decoder decodes
these S number of sub bit streams independently and it
stops decoding for a particular bit stream once the error
symbol is found and continue to decode the packets of the
other bit streams so that we still have clean packets
already decoded up to that point and lost only the
remaining packets of the corrupted bit stream.
In the other hand, if we transmit only the single bit
stream without partitioning, any single bit error in the
middle of the bit stream means the losses of whole
remaining bit stream. Therefore, by coding the wavelet
coefficients with multiple and independent bit stream, any
single bit error affects only one of the S bit streams, while
the others are received unaffected.
13

9

5

1

Arithmetic Decoding

13

9

14

10

6

2

Arithmetic Decoding

15

11

7

3

Arithmetic Decoding

15

11

16

12

8

4

Arithmetic Decoding

16

12

5

1

6

2

7

3

8

4

Figure 4 Example of decoding failure at packet
number 10.

Dirac's PSNR Vs Frame Num
45
40
35
30
PSNR (dB)

In figure 4, if we find the error in packet number 10,
we just simply discard this packet and remaining of this
bit stream 2. After decoding, normal un-partition case has
only 9 clean packets while we still have 14 clean packets.
Obviously, the proposed method could deliver more clean
packets than the normal un-partition case since it just
stops decoding at the step of first error occurrence. The
better error resilient performance can be achieved if we
transmit maximum possible number of bit stream which
should be the power of 4 and can be calculated by using
equation 1 according to Creusere’s work [3].

25
20
15
10
5
0
1

4

7

10 13 16 19 22 25 28 31 34 37 40 43 46 49 52 55 58 61 64 67
Frame Num

Org

6. Results

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

Org 26%

Org 27%

Org 28%

Org 29%

Org 30%

Org 31%

Figure 5 PSNR Performance comparisons
between different percentages of packet error for
non-partitioning format.
Dirac's PSNR Vs Frame Num
45

40

PSNR(dB)

35
30

25
20

15

10
1

4

7

10 13 16 19 22 25 28 31 34 37 40 43 46 49 52 55 58 61 64 67
Frame Num

33
33P 30%

33P 25%
33P 31%

33P 26%
33P 32%

33P 27%

33P 28%

33P 29%

Figure 6 PSNR Performance comparisons
between different percentages of packet error for
33-partitions format.
Dirac's PSNR Vs Frame Num
30
28
26
24
PSNR (dB)

The performance of the proposed model for error resilient
video transmission is tested with 68 frames of canal
vertical pan street sequence with chroma format 4:2:0 and
GOP length 36, i.e. the number of L1 frames between I
frames is 11 and L1 frame separation is 3 (frame size
352 u 288). The distortion is measured by the peak signalto-noise ratio (PSNR). The goal of the test is to find the
performance of proposed error resilient model and so
there has been no attempt to conceal the error (error
concealment) at the decoder and we assume that the Dirac
header is not corrupted from the packet loss of the packet
erasure channel, i.e. we do not introduce any packet error
to the header. The total number of partition, S is 33 for
the proposed error resilient coding format, i.e. we do
partitioning to the DWT output of the original frame to
get 33 sub-frames. All the PSNR curves are averaged over
50 independent runs.
Figure 5 and 6 show the PSNR performance
comparison between different percentage of packet errors
for both original (un-partitioning) and 33 partitioning
format. Clearly, with the use of Turbo coding, we could
introduce packet error percentage more than 30 in both
cases. There is no error at the decoder output for the
packet error percentage less than 25 for both cases, i.e.
with the use of bitwise interleaver at the encoder; the
turbo decoder can effectively correct the resulting error
pattern at the output of the bitwise de-interleaver.
Figure 7 and 8 show the PSNR performance
comparison between two formats with the same
percentage of packet error. It is clear that the proposed
33-partitions format achieve approximately 5 dB gain
over un-partitioning case as the packet error percentage
increases.
Figure 9 shows the average PSNR performance
comparison between two formats for the packet loss rate
from 25 % to 32 %. From this figure, we could see that
the maximum performance gain is approximately 5 dB
over the un-partitioning format at the percentage of packet
loss around 28%.

Org 25%

22
20
18
16
14
12
10
1

4

7

10 13 16 19 22 25 28 31 34 37 40 43 46 49 52 55 58 61 64 67
Frame Num
Org 28%

33P 28%

Figure 7 PSNR Performance comparisons
between 33-partitions and un-partitioning
(Original) formats for 28% packet loss rate.

Figure 10 (a) - (f) show the frame number 20 for unpartitioning and the proposed format with 26, 28 and 30
percent packet loss rates respectively. The corresponding
PSNR values for figure 10, a to f are 29.1, 30.61, 21.95,
28.40, 18.92 and 24.15 dB respectively. From the figures,
it can be seen that the proposed method offers very good
reconstructions for all packet loss rates compared to the
un-partitioning format.

Dirac's PSNR Vs Frame Num
22

20

PSNR (dB)

18

16

14

12

7. Conclusion
10
1

4

7

10 13 16 19 22 25 28 31 34 37 40 43 46 49 52 55 58 61 64 67
Frame Num
Org 30%

33P 30%

Figure 8 PSNR Performance comparisons
between 33-partitions and un-partitioning
(Original) formats for 30% packet loss rate.

Dirac's Avg PSNR Vs Packet Loss Percent
35

Avg PSNR (dB)

30

25

20

We have proposed a technique to achieve error
resilience to the transmission error of the compressed
video bit stream of Dirac video codec over the packet
erasure wired network. With the proper combination of
Creusere’s source coding method [3] with Turbo Coding,
we could introduce the packet loss rate up to 30 percent to
the transmitting video sequence without having serious
degrading in reconstruction quality at the decoder.
Simulation results show that the proposed technique can
achieve up to 5dB PSNR gain over the un-partitioning
one. Therefore, the proposed method of error resilient
coding could be suitable one for transmission of wavelet
transform based video codec’s compressed bit stream
over the packet erasure network.

15

10
25

26

27

28

29

30

31

32

Packet Loss (%)
33 Partition

Org

Figure 9 Average PSNR Performance
comparisons between 33-partitions and unpartitioning, (Original) formats.

Figure 10. a

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

Figure 10. b

Figure 10. c

Figure 10. d

Figure 10. e

Figure 10. f

Figure 10 352 u 288 canal vertical pan street sequence (frame 20), (a) Original format with 26% packet
loss rate, (b) 33-partitions format with 26% packet loss rate, (c) Original format with 28% packet loss
rate, (d) 33-partitions format with 28% packet loss rate, (e) Original format with 30% packet loss rate, (f)
33-partitions format with 30% packet loss rate.

References
[1]

[2]

[3]

[4]

P. G. Sherwood and K. Zeger, “Progressive image
coding for noisy channels,” IEEE Signal Processing
Lett., vol 4, pp. 189-191, July 1997.
J.
Hagenauer,
“Rate-Compatible
Punctured
Convolutional Codes (RCPC Codes) and their
Applications,” IEEE Trans. Commun., vol. 36, pp. 389400, April 1988.
C. D. Creusere, “A new method of robust image
compression based on the embedded zerotree wavelet
algorithm,” IEEE Trans. Image Processing, vol. 6, pp.
1436-1442, Oct. 1997.
S. Cho and W. A. Pearlman, “A Full-Featured, ErrorResilient, Scalable Wavelet Video Codec Based on the

Proceedings of the Information Visualization (IV’06)
0-7695-2602-0/06 $20.00 © 2006

IEEE

[5]

[6]

[7]

[8]

Set Partitioning in Hierarchical Trees (SPIHT)
Algorithm,” IEEE Trans. Circuits Syst. Video Technol.,
vol. 12, pp. 157-171, March 2002.
Z. Xiong, B.-J. Kim, and W. A. Pearlman, “Progressive
video coding for noisy channels,” in Proc. IEEE Int.
Conf. Image Processing (ICIP ‘98), vol. 1, Oct. 1998,
pp. 334-337.
B.-J. Kim, Z. Xiong, W. A. Pearlman, and Y. S. Kim,
“Progressive video coding for noisy channels,” J. Vis.
Commun. Image Repres., vol. 10, pp. 173-185, 1999.
C. Berrou, A. Glavieux, and P. Thitimasjshima, “Near
Shannon limit error correcting coding and decoding:
Turbo codes” in proc IEEE Int. Conf. on Commun.
Geneva, Switzerland, May 1993, pp 1064-1070.
BBC
Research
&
Development,
“Dirac”
http://www.dirac.sourceforge.net

