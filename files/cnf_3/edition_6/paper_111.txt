Dynamic Cloth Animation in Virtual Environments

'

Liu Zhibin Li Zhanli
(I. College of Computer, QuFu Normal University, Rizhao, ShanDong, 276826, China;
2. Department of Computer, Xi'an University of Science & Technology, Xi'an, 710054, China)
E-mail: lzbxian@163.com
Abstract
Dynamic cloth animation is an importantproblem in
virtual reality, in which the reality and real-time effect
becomes the main problem to resolve. To achieve the
reality of animation, two aspects ofresearch have been
done. The mass-spring model is one of the main adopted
models, hut it has the "super elastic " effect, In this paper,
compared to the previous method of deal with this
problem, a feasible method is proposed. Besides, how to
design wind is also a keyproblem, in thispaper, a
fitnction and an algorithm for wind is also proposed. To
achieve the real-time effect, the idea of bounding boxes
hierarchy is applied in collision detection and selfcollision detection. For collision detection, the authors
describes a detailed algorithm;for self-collision, an
algorithm is described that convert collision detection to
self-collision detection. The simulation is executed with
an average pc, and a live real-time result is achieved.

2. Mass-spring modeling
Based on Provot's mass-spring model[l], the cloth is a
mesh of mxn virtual masses, each mass being linked to its
neighbors by massless springs of natural length non equal
to zero. There are three sets of springs: structural, shear
and flexion springs (Figure 1).
Suppose at time t, the position of any mass [ij]is
Pij(t),(i=l,. ..,m; j=l ...n). The internal force

ent

(<,j)

is the resultant of the tensions of the springs linking the
mass [ij] to its neighbors. The external force &,(<,,) is
the resultant of various natural forces to which we wish
the model to be exposed. Omnipresent loads will be
gravity, a viscous damping and a viscous interaction with
an air stream.

1. Introduction
Dynamic cloth animation is an important problem in
virtual reality, in which there is two goals should be
achieved, the one is the reality, and the other one is realtime. The mass-spring model is one of the main adopted
models. To simulate the cloth more lively, the "super
elastic" effect should be avoided, and a proper wind is
also important.
In simulation the dynamic cloth will face to collision.
The collisions include two kinds: the one is that the cloth
collides with the other rigid objects, such as human body;
the other kind is the cloth colliding with itself. To keep the
simulation display realistically, the collision must be
detected in time and the collision response must be
handled quickly, otherwise the cloth will penetrate with
other object or itself, destroying the realistic image in
cloth simulation.
Cloth is a sort of flexible body, and the collision
detection and self-collision is a very time-consuming work,
however, the real-time simulation is essential, so the
collision detection and self-collision detection must fulfill
in limited time span.

Proceedings of the Information Visualization (IV'06)
0-7695-2602-0106 $20.00 o 2006

IEEE

I
0

----

I

I

mass

-Structural spring

Shear spring

.......... Flexion

spring

Figure 1. Mass-Spring model

--.
m=;j=F,(eJ)+Fd(eJ)

The resultant force that acts on the mass [ij] at any
ti,

is

The fundamental

equation of dynamics can therefore be explicitly
integrated through time by a simple Euler method:

&kPUTER
Q
SOCIETY

q,j( t + At) = tsj
( t ) + AtviSj( t + At)
.

vi, (t + At) = vi, ( t )+ Atai, (t + At)

A-Fixed position

Critical lengt

where At is a chosen time-step2.

B'-Adjusted loose position

3. "Super-elastic" effect and adjustment
After having implemented this algorithm above, as
article [I] mentioned, it leads to more or less realistic
results. When a corner is tied, the value of the
deformation rate ofthe most elongated springs exceeds
100%. Such a local deformation never occurs in woven
fabrics. In the field of the physics of polymers, a similar
phenomenon can be observed and it is called "superelasticity". The reason for this difference between the
model and real woven fabrics is that woven fabrics are not
super-elastic at all. The maximum deformation rate of
most woven fabrics is around lo%, and it is even lower
for some linen cloths, calicos or denims, for instance.
At each given time-step, the numerical integration is
achieved, then the deformation rates of all springs are
computed. If, and only if, the deformation rate of a spring
is greater than a critical deformation rate Z, , then a
dynamic inverse procedure is applied to the two ends so
that its deformation rate exactly equals T, . This means
that, if we choose T, = 0.1, we want the length of the
springs not to exceed their natural length by more than
10%.
The distance reduction is done differently whether the
ends of the spring are loose or are fixed by a new dynamic
inverse procedure. If both ends are loose (Figure 2), both
are evenly "brought closer" to their middle so that the
"shrunk" spring reaches Z, . If only one end is loose
(Figure 3), then it is "brought closer" to the fixed end so
as to reach
If both are fixed, they are left unchanged.

Figure 3. Adjustment of a spring linking
a fixed mass and a loose mass

According to the method above, when the elongation
of spring is less than the critical elongation, the
deformation is linear to the force; otherwise, the
elongation of spring should be limited to the critical
elongation (Figure 4). In fact, this adjustment method
is not proper; the deformation of real cloth is nonlinear to force.
Adjusted elongation of spring

t

Calculated elongation of spring
Figure 4. Spring adjustment curve of
previous method

t Adjusted elongation of spring
Critical elongation,*'

Critical length

B'-Adjusted loose position
' h i x e d position

Figure 2. Adjustment of a spring linking
two loose masses

;Critical elongation

b

Calculated elongation of spring

Figure 5. Spring adjustment curve
of improved method

Based on the physical performance of cloth, we design
a non-linear adjustment curve to overcome the shortage

Proceedings of the Information Visualization (IV'06)
0-7695-2602-0106 $20.00 o 2006 IEEE

SOCIETY

(Figure 5). In application, the reality of cloth animation
has large improvement, The curve is expressed as

y=-

0.2 x I,
7r

5nxx
, where lo is rest length
1,

x arctan(-)

of spring

4. Animation of wind
In cloth animation, the wind acts an important role.
We propose a method to define wind; using this method,
the dynamic effect on cloth animation has been realized,
and the calculation time reduced greatly. The algorithm is
described as follows:
srand(time(0));
for(int t=O;;t++)
{
other work;
for(int i=O;i< mass number of U-direction; i t t )
for(int j=O;j< mass number of V-direction; j t t )
{

add force on mass [ij] to

X

4 sin(l, * t +ul;) +k2 sin(Z2 *rand());

direction:

add force on mass [ij] to Y direction:

k, sin(13* t + q 2 )+ k, sin(1, * rand()) ;
add force on mass [i,j] to

direction:

k , sin(1, * t + q , ) + k, sin(1, * r a n d ( ) ) .

1

1

kinetics analysis on the model, display a frame;

where

k l , k 2 7 k 3 , k 4 7 k 5 7 k 6 7 ~ l ~ ~ ~ 7

are adjustment parameter, rand() is a random function.

5. Collision Detection
Triangulation is the base for collision detection in
cloth simulation. In order to achieve quick collision
detection, the number of triangles against triangles we
need to apply collision detection should be induced as less
as possible. In this paper an algorithm using bounding
boxes hierarchy is discussed [3,4].
The basic thought for the algorithm of bounding boxes
hierarchy is enclose a complex geometry object with a
simple bounding box. When handling collision detection
for the two objects, first detect if the two bounding boxes
have intersected. If not intersected, the two objects must
have not intersection between each other; otherwise there
will be a krther detection between the two objects. To
judge the intersection between the two bounding boxes is
simpler than that between the two complex objects, in this
way it can excludes many objects that did not intersected

quickly. In dynamic cloth simulation the basic geometrical
object is triangle.
Enclose the cloth with small enough bounding box,
and so does the surrounding object, then dissect them. Do
the same things to the dissected objects that enclosed till
the bounding box includes only a basic geometrical unit
(triangle). So the bounding boxes hierarchy is built.
In the bounding boxes hierarchy for cloth or its
surrounding object, the root node is the bounding box
enclosing the whole cloth or its surrounding object, the
leaf root is the bounding box enclosing the basic
geometrical unit (triangle), the other nodes describe the
bounding box of subdivided sections.
There are many kinds of bounding boxes. The mostly
used bounding boxes are AABB (Axis Aligned Bounding
Box), OBB (Oriented Bounding Box) and k-dop. In 3D
space an AABB is defined by six values giving the
minimal and maximal axis coordinates of the box
including the object. The axes of the box are aligned with
the workspace axes. The main advantage of this method is
that they are very easy to be built, to be merged and to
detect collision. Building an AABB involves only finding
the minimal and maximal coordinates of the object that we
want to bound. Intersection test are reduced to detect
overlap along the axes.
To store the hierarchy it can be adopted binary tree,
quadtree or octree. For the binary tree is the most common
to store the hierarchy and it requires the smallest number
of overlap tests, so the binary tree is suggested.
In the process of subdivision, the dissection plane should
be vertical with the longer axis of the AABB, and divided
the bounding box into two parts at the midpoint of the axis,
then build small enough bounding boxes for the two parts.
~ ~ ~ ~ ~ , 1 ~ ~ ~ 6 7 ~ ~ ~ ~ z 7 ~ ~
When the dissection plane divide basic unit (triangle) into
two parts, which part the midpoint is in, which part the
basic unit belongs to.
The AABB tree adopts the approach of top-down and
recursive dissection to be built. At each step of recursion,
the minimum AABB of current subdivision is calculated,
and then a dissection plane chosen divide the subdivision
part, thus the recursion repeat till each subdivision part
contains only one basic geometric unit. In this way, the
AABB tree containing the basic geometric units number
of N has N leaf nodes and N-1 interior nodes.
It is very easy to test if two bounding boxes overlap. In
3D space, each bounding box is projected onto the
coordinate axes. Under this projection, the box will be
projected onto a segment in that axes. If the segments
corresponding to each bounding box do not overlap then it
can be deduced that the two boxes are disjoint. The fact
that there is an overlap between the segments does not
necessary mean that there exists an overlap between the
boxes, further test is required.
Once the cloth and its surrounding object have
deformations, the AABB trees should be bottom-up

Proceedings of the Information Visualization (IV'06)
0-7695-2602-0106 $20.00 O 2006

IEEE

SOCIETY

recursive adjusted. First, the leaf nodes of AABB trees
should bc recalculated, and then with a certain node and
its sibling node, their parent node is updated.
After the two bounding boxes hierarchies (cloth and its
surrounding object) have been built, the process of testing
collision detection comes down to recursively traversing
the hierarchies and testing overlap from top to down. The
algorithm is following:
Build AABB trees for cloth and its surrounding object
according to the methods describing as above (treel and
tree2);
Collision-Detection (treel ,tree2);
Void Collision-Detection (BoundingBoxNodeType
*TreelNode, BoundingBoxNodeType *Tree2Node)
{
the root node (AABB) of tree 2 traverse tree 1;
/* if the root node of trees 2 have no overlaps
with certain node of tree 1, it must have no
overlaps with its child node of tree I.*/
while ( i=0; iithe number of leaf nodes that
collision occurs; i++)
{
the leaf node i of tree 1 traverses tree 2;
if (there are no overlaps with the tree 2)
{

1

vertex is sufficient to build a test that discriminates zones
that cannot self-intersect and zones that may: i f a < n / 2,
the zone cannot self-intersect.
In the AABB tree, at the bottom of which, each leaf node
has a single normal, and therefore a=O, the axis vector of
the cone is the normal of the triangle. Then for each tree
node for which the cones of its two descendant cones, a1
and a2, and the angle $ between the two axes of the
normals, and the angle a at its descendant cones. The axis
vector is computed as the mean vector of the two axis
vectors of the descendant cones. The new angle a is then
, I 2 + m a x ( a , , a,)(Figure 7).
computed as: a = B

:
$
.&
..

{

I

collision detection test between basic
geometrical units (triangles), if
collision occurs, it should execute the
collision response algorithm.

Figure 7. Cone enclosing it two "descendant"
cones in the hierarchical tree

First, initialize the bounding boxes hierarchy according
to the method as above. Let the angle a of leaf node be
zero, then bottom-up traverse the tree, each angle a of
node can be calculated. The algorithm is following:
Void Self-collision-Detection (BoundingBoxNodeType
*pRoot)
{

if (leaf root pRoot->a< n / 2 )
{

6. Self-collision detection

I
8

1

+

continue;

else

II
........1I....".........

1

no self-collision;

else
{
if (left child of tree root pRoot->Left->@

.

Figure 6 Cone including normals to triangles
of a zone of the cloth surface

Provot introduced a feasible method for testing selfcollision detection [2].When a given zone has a
sufficiently "low curvature", it cannot self-intersect, and
all the zones it includes do not intersect with each other.
The "curvature" of zone will be in our case evaluated by
the set of normals of the triangle belonging to the zone
(Figure 6). We compute a cone which includes these

Proceedings of the Information Visualization (IV'06)
0-7695-2602-0106 $20.00 o 2006 IEEE

I

x /2)

Self-collision-Detection (pRoot->Left);
/*perhaps collision occurs in left tree*/

if (right child of tree root pRoot->Right>a>n/2)
Self-collision-Detection (pRoot->Right);
I* perhaps collision occurs in right tree*/

1

if ((left child of tree root pRoot->Left>a<=n / 2 )&&( right child of tree root pRoot->Right>a<= n / 2 ))

SOCIETY

Collision-Detection (pRoot->Left, pRoot->Right);
/* call collision detection algorithm*/
}

[4] Gao Chengying, Liu Ning. Luo Xiaonan. Building of cloth
model and disposal of collision detection in virtual clothing.
Computer Applications, 2002.22(5): 34-37

In the algorithm above, if angle a o f certain node is
more than r / 2 , and the angle a of its two children less
than x / 2 ,then the two sub trees that the children nodes
being roots perhaps intersected with each other. In this
case, regard the two sub trees as two cloth's bounding
boxes hierarchies, it come down to collision detection.
After the cloth have deformation, it should from leaf
nodes up to root node to adjust the AABB tree. If angle a
of a node is more than Z / 2 , it can assert that the angle u
of its parent node must be bigger than T / 2 . In this case,
what the only need to do is letting a value, bigger than
r / 2 , to the angle a of its parent node.

7. Simulation test and conclusion
Based on the approaches presented above, the authors
give a test program to validate it. The gravity, viscous
damping and viscous interaction with an air stream are
considered. In the test, the air is designed as random
cosine force acting on the cloth. In collision detection, a
ball is adopted, and its radius is 25 pixels. The simulation
is executed with a PC(Xeon 2.4G 512MB 80G), it tests on
4 different pieces of cloth. The time span per frame is
calculated (Table l), and the live graphics results are
achieved (Figure 8).
Form the result it can be see the methods we adopted
has reached our object: reality and real-time effect.

Mass
number

1

Overhang
cloth

1

1

1

1

Table 1. Simulation time per frame (ms)

10x10

8.5047

1

16.-

9.8036

1

20x20

11.4904

2-

12.2692

8. References
[ I ] Xavier Provot. Deformation constraints in a mass-Spring
model to describe rigid cloth behavior. In: Proceedings of
Graphics Interface. Quebec: Canadian information Processing
Society, 1995. 147-154

121 Xavier PI<OVOT,Collision and self-collision handling in
cloth model dedicat.ed lo design garment. Curographics
Workshop on Animation and Simulation. September 1997.
[3] Shi Jiaoqing. Base and utilit) algorithm of virtual reality.

Figure 8. Simulation results

Science Press, 2002.216-253

Proceedings of the Information Visualization (IV'06)
0-7695-2602-0106 $20.00 o 2006

IEEE

COMPUTER
SOCIETY

