Skeletal Implicit Surface Reconstruction from Sections for Flexible Body
Simulation
M. Amrani, B. Crespin and B. Shariat
LIGIM, University of Lyon I
Villeurbanne, FRANCE

Abstract

angles and intensities. Classically, the patient’s initial positioning is supposed to be exactly known. Moreover, the patient as well as his organs are supposed rigid and motionless
during the treatment. However, in practice, this supposition
is not true.
In order to enhance the quality of the dosimetric calculation, we have to take into account the natural movement
of the organs as well as their intcractions. For this we have
created geometrical models of the patient’s organs. The animation and interaction of these models permit to have a
better understanding of the quality of the therapy.
In this application, we have used two representations to
model human organs (hybrid approach): implicit surfaces
for the organs subject to small deformations and particle
systems [2] for the others. This allows us to simulate interactions between organs in a body.
In the following sections, after the state of the art we describe our implicit surface reconstruction methodology as
well as the deformation process. We then present an example of application using our hybrid approach.

We describe an automatic surface reconstruction technique froni a set ofplanar dattz points organised in parallel
sections. The reconstruction miploys skeletal iniplicit surfaces. Tivo key points iri this siudy are:
0

0

Calculatiori of the 3 0 skeleton bj, estublishirig a correspondence between each pair of 2 0 Voronoi skeleton
of two neighbouring sections,
Use of a unifnrni feldfiiriction necessitating the introduction ofthe notion of ”weighted skeleton ”.

Another key point of this work is the proposition of an
uniination niethotlofogy by transfornririg the skeleton into a
cleforniuble niuss/spring system. This work has been used in
the context of a iiiedical project to siniulate the dynamic hehavioiir of orgaris diiring the corlforninl radiotherapy treatment.

2. State of the art of the most relevant reconstruction methods

1. Introduction
In this paper, we describe a general methodology for reconstruction and animation o F volumetric deformable objects using skeletal implicit surfaces. These surfaces are
defned by a skeleton and a feld function. They allow
the modeling of shapes of arbitrary topology at low computation cost and can easily account for plastic or elastic behaviour of deformable objects. With this model it is
also possible to introduce several kinds of geometrical constraints such as volume conservation to reproduce the behaviour of cancerous tissues arid organs.
This work has been used in the scope of a conformal radiotherapy application consisting in the delivery of a lethal
ionising radiation dose to cancerous regions causing a minimum of damage to surrounding healthy tissues. To achieve
this goal, the use of multi-leaf collimators permits to have
a precise control on the beams’ shape as well their shooting

0-7695-1195-3/01 $10.00 0 2001 IEEE

Numerous reconstruction methods have been developed
over the past two decades to Et a 3D surface to a set of
points in spacc. The surface model usually depends on the
application. In the area of deformable objects for example,
the most common way for modeling elastic materials is to
use fnite difference or fnite element techniques by approximating the body with a mesh of nodes of &xed topology
[20]. However, this model is not well adapted for materials
able to accept large inelastic deformations.
Other formulations for the resulting surface include parametric or implicit defnitions, which allow complex algorithms such as collision detections to be applied more efEciently. We choose to focus on a particular model, namely
skeletal implicit surface. A skeleton is a set of geometric
primitives (usually points, segments or polygons), repre-

723

each having its own speciEc properties, but no signifcant
reduction of the size of input data is obtained.
Other methods, which were speciEcally designed to
produce skeletal implicit surfaces, address the problem of
data reduction. Indeed, the skeleton structure is a way to
represent the shape of a more complex object, and Ending
the best surface that Ets a set of points “only” requires the
computation of the skeleton and the associated potential
function. In [l5], the skeleton is a random set of points
which is reEned iteratively through an energy-minimisation
process by adding or deleting some skeleton points. The
convergence is optimised in [4] and [9] by using the medial
axis of the input data as an initial skeleton. Nevertheless,
the computation is still expensive, especially for large
datasets.

sented either by a tree or a graph. Skeletal implicit surfaces
are a natural choice for modeling and simulation applications, since each primitive can have its own motion while
preserving the overall smooth, free-form shape of the generated surface [7].
Therefore, this preliminary study of existing reconstruction methods is restricted to those producing implicit surfaces, following) a short presentation of implicit surfaces
themselves.

2.1. Implicit surfaces
An implicit surface is defned as the set of points P in
space that satisfy f ( P ) = 0, where P is a point in space
and f is a scalar function of X 3 . For most types of implicit surfaces such as algebraic surfaces (quadrics and superquadrics), f is a polynomial.
The main property of implicit surfaces is the point membership classifcation: for any point P in space, it is possible to know whether it lies inside, outside or on the surface
depending on the scalar f ( P ) .Thus, collision detection between implicit surfaces is easy since it only means testing
the inclusion of one surface into another.
In the case of skeletal implicit surfaces (also known in
the literature as blobs, meta-balls, potential siifaces, convolution surfaces or soft objects [ 5 ] ) ,the implicit equation
has the form:

Finally, a few other techniques take advantage of the planar sections organisation. In practice, they can usually be
decomposed in two steps: reconstruct a 2D implicit function for each section, then extend this set to a 3D implicit
function that preserves the continuity between each plane.
In the method proposed in [12], the 2D function is sampled in a 2D grid using the minimal distance to the contour.
The set of 2D grids is then considered as a global 3D grid,
thus resembling to some methods described i n the previous section. Other methods provide continuous 2D functions [17, 101 that are interpolated in the second step by
set-theoretic operations such as sweeping 1191.

n

3. Our methodology for implicit surface recon-

2=1

struction

where fi is a potentiul (or feld) function associated to
each primitive of the skeleton, c i s the global isovalue, and ri
is the number of primitives. Each fi is defned as a gaussian
decreasing smoothly to 0 according to the distance between
P and that primitive. Therefore, the overall sum leads to a
smooth blend between each primitive.

As we are interested in reconstructing a skeletal implicit
surface from planar sections, none of the methods described
previously seems well adapted. Indeed, considering the input data as an unorganised set of points is not satisfying
because the reconstruction process is not optimised. On the
other hand, speciEc methods to reconstruct an implicit surface from sections do not make use of a skeleton structure
that could be computed from the contours set.
Therefore, we propose a method that takes advantage of
both approaches by computing a skeleton from a set of planar sections. A geld function is then combined with the
skeleton; there is no blend, and no iterative process is required to refne the reconstruction. Thus, the model is simplifed and the deformation process is easier.
One should note that a feld function affects a potential
to a point according to its distance to the skeleton. Thus, a
potential corresponds to a distance and an iso-potential surface is a uniform offset of the skeleton. Then, if a uniform
Eeld function is employed, the reconstruction of complex
shapes needs to have complex skeletons which are obtained
by erosion of the data points. The use of such a skeleton

2.2. Implicit surface reconstruction
Most implicit surface reconstruction methods rely on
an unorganised (or unstructured) set of points as an input.
These methods can also be employed for reconstructing
from planar sections anyway, but the connectivity of the vertices in a section won’t be used.
In the Erst category, an algebraic surface is deformed by
external forces to Et the data points: superquadrics 1181,
deformable superquadrics [3] and hyperquadrics [8] were
studied. But these methods are limited by the shape of the
initial basic surface. In the second category, smooth implicit
surfaces are computed directly from the data points. Different formulations were proposed: simplicial surface deEned
from signed distance [ 1 I], R-function [ 171, function sampling on a 3D grid [21], variational implicit surface 1141,

724

is not realistic, because both its computation and storage
are expensive. Therefore, we introduce “weighted skeletons”, composed of a set of non intersecting triangles for
which a scalar is affected to each vertex. These values are
distances and deEne a non-uniform offset of the skeleton.
They are computed such that the offset surface interpolates
the points cloud: the distance between the data points and
the weighted skeleton is always the same. Then, it suffces
to combine the weighted skeletmon with a uniform Eeld function to reconstruct the object.

4.3D weighted skeleton computation
The computation of a 3D skeleton is usually based on a
3D Voronoi diagram. However, a direct generation of a 3D
Voronoi diagram is prohibitive. Therefore, we prefer a twosteps approach: generate the 2D skeleton of each section,
then deduce the 3D skeleton.

4.1. Computation of the 2D) skeletons

Figure 1. 2D skeleton : initial 2D contour,
non simplifed 2D skelet’onand simplifed 2D
skeleton

Algorithms that generate a 2.D skeleton from a contour
are well-known [6]; the vertices are the nodes of the 2D
Voronoi diagram. But this skeleton may contain too many
branches, which increase the complexity of the model. This
is due to the sensitivity of Voronoi diagram to noise and to
small perturbations on the contour. To simplify the skeleton,
we have to suppress unnecessary branches by the deletion
of the corresponding Delaunay triangles. These are the triangles of the contour that have a n area smaller than a given
threshold, defned according to a precision criteria (see f g ure I ) 1161.

4.2. Computation of the 3D skeleton
The computation of the 3D skeleton consists in establishing a correspondence between each pair of neighbouring 2D
Voronoi diagrams. The result is a 3D skeleton composed of
triangles whose vertices are the nodes of the 2D Voronoi
diagrams.

Q

Figure 2. 2D skeleton of two neighbouring
sections and the deduced 3D skeleton

To understand the process of the 3D skeleton computation,
let us consider two Voronoi skeletons of two neighbouring
sections and deEne some terms (see Figure 2):
A branching point is a 2D Voronoi vertex belonging to
at least three 2D Voronoi skeleton branches (such as Pj, ps
and Q3).
An e~tretiiepoint is a 2D Voronoi belonging to one
skeleton branch (such as PI, Pz, P,, P7, Q I , QZand Qd).
A correspondittg point is a 2D Voronoi vertex which
is in correspondence with at least one branching point
or extreme point of a neighbouring skeleton ( Q 2 is a
corresponding point of Pz).
A corresponding brunch is a skeleton branch in correspondence with a branch of a neighbouring skeleton (the
branch [Ql;Q3] is a corresponding branch of the branch
[PI; 931).

The 3D skeleton calculation process is done in three steps:
1 . Correspondence estublishtnent for the bruttchirig
points urtd the extreme points. This is an automatic process
based on the 3D Voronoi diagram of the set o f points organised in parallel sections. The correspondences of a point
are the 2D Voronoi vertices of the neighbouring sections to
which the point is linked by paths composed of 3D Voronoi
edges. For example in Figure 2, P3 is linked to Q1 and
Q 3 . To simplify the process, the branching points (respectively the extrcme points) are in correspondence only with
branching points (respectively extreme points).
2. Correspondence estublishniettt ,for hvo paths having
their begirtttirig and enditig points in correspondence. For
example, the path (Ps!P7) is in correspondence with the
path (Q3,
Q.1) because P3 and Q3 as well as P7 and Q 4 are
in correspondence.
3. Correspondence estublishment for other brunches. At
this stage, the processed branches belong to the paths linking an extreme point without correspondence to a branching point ( P B )belonging to at least one branch in correspondence. Either a correspondence is found in a set of
candidate paths (paths containing one extreme branch with-

In case of collision, the surface of the object should be
deformed (displacement of each sampled point P bv$onging
to the contact zone) by applying a reaction force FR,,. The
amplitude of this force depends on the degree of the penetration of P in the other colliding object and its direction is
obtained from the direction of the velocity of P when the
collision occurs: It is also possible to take into account the
friction forces F f l , on each point P (see [ 161). In this case
the force applied to P is: F p = FR{,

out correspondence and one of the corresponding points of
PB)or no correspondence is found and the path is in correspondence with the nearest corresponding point of PB. For
example, the branch [PG,
P5] is in correspondence with Q4.

4.3. Weighting
As mentioned earlier, the Voronoi skeleton can not be
combined to a uniform Eeld function to reconstruct complex
shapes. Therefore, we need to defne weights for the skeleton vertices. For this, we Erst compute the weights of the 2D
skeletons vertices, according to their distance to the contour.
The 3D skeleton is composed of triangles whose vertices are
2D Voronoi vertices of the neighbouring sections. Thus, the
vertices of different triangles of the 3D skeleton are already
weighted. Weights of other skeleton points are obtained by
an affne combination of triangle vertices weights.

+ Ff,,,.

p3

a triangle of the
3D skeleton

Figure 3. Reaction of a surface/skeleton
spring

5. Animation and deformation of objects
For a realistic simulation of the modeled objects, we
use physically based animation techniques. Our solution
is based on the geometrical structure of the proposed reconstruction technique : since the skeleton is a set of triangles,
we choose to transform the vertices (resp. the edges) of
the triangles into masses (resp. springs). In this method,
two levels are used, external (surface) and internal. When
a collision occurs on a surface point, the reaction force is
distributed on the skeleton’s triangle that contains the projection of this point.
The general process of the simulation is defned by successive iterations. Each iteration represents the transition of
the object’s state during the time t to t dt. The computation of the object’s evolution during this ”tirmestep”, clt is
obtained in four steps:

Using the reaction force, the contact surface can be computed. In our approach, each point P is supposed to be
linked to its corresponding point o n the skeleton by a spring.
This spring reacts to the force F p , which deforms the surface. The spring has an elastic behaviour, i.e. the surface
should come back to its initial state when the constraint is
removed. Therefore, two types of linear and angular forces
should be defned (see Egure 3). Linear forces Fl control
the length and angular forces $? control the orientation of
the spring with respect to the skeleton. Thus, two elasticity
parameters are introduced : spring’s linear elasticity k~ and
spring’s angular elasticity k,.
Motion of point P is then obtained by:
=
+FT,where:

+

rigid motion according to the forces applied to the
skeleton (gravity for example)

with lo and 1 the spring’s initial and actual length, and n;o
and y the spring’s initial and actual orientation. These reaction forces, as well as other constraints such as gravity, are
then propagated through the skeleton, inducing the motion
of different skeleton’s nodes.

collision detection,
deformation of the surface to approximate the exact
contact surface,
deformation of the skeleton through the propagation of
the constraints applied to the object’s surface and the
computation of the new shape.
The rigid displacement of the object consists in using the
Newtonian laws of mechanics. For the collision detection
of two implicit surfaces, we use a sampling method[l6].
Therefore, we Erst sample the two surfaces. Then, using the
potential functions, we test if sampled points of one surface
are included in the other surface. When such points exist, a
collision has occurred.

Figure 4. Internal forces applied to object’s
skeleton
Recall that the skeleton is composed of triangles whose
edges are springs. As stated for the surfacehkeleton springs,

726

three kinds of forces are needed so that the skeleton can recover its initial state when extemal and internal constraints
are removed [ 131 (see Egure 4):

p ~to ,conserve the length of the edges

0

linearforces

a

angular forces Fa, to conserve the angles between

+

edges

-

co-planarforces Fd, to conserve the orientation of the
triangles
The equilibrium condition can then be written as

Fi,

f

F i , .tFi;

=

F

(1)

z

Consequently, vertices’ velocity is obtained by integrating these forces. The m o t h of the vertices deforms
the skeleton, inducing the deformation of the object’s surface. Figure 5 shows an example of the application of our
methodology, with an extra parameter controlling the volume of the object [ 161.

Figure 6. Hybrid simulation (front view)
Figure 5. Implicit surface animation and deformation

6. A hybrid approach
Implicit surfaces are able to model organs of arbitrary
topology. However, they cannot simulate large deformations since this would generally involves the re-computation
of the skeleton. On the other hand, particle systems [2] are
able to simulate large deformations but they are very expensive in computing time and memory size. The key idea is
to use both models. Therefore, particle systems will model
organs that are subject to large deformations, and implicit
surfaces for the others.
To use and animate two model.; simultaneously, we have
to handle eventual interactions be tween them. To this end,
we &rstdeEne a collision detection method between a particle system and an implicit surface. Rather than using
the sampling based method described above. which needs
to test the distance between all the sampled points on the
implicit surface and all the particles, we proposed a new
method based on the surface potential function [I]. This
has permitted to accelerate the calwlation time.

Figure 7. Hybrid simulation (side view)

727

J. Bloomenthal, C. Bajaj, J. Blinn, M.-P. Cani-Gascuel,
A. Rockwood, B. Wyvill, and G. Wyvill. Introduction to
Implicit Surfaces. Morgan Kaufmann, 1997.
J. D. Boissonnat and B. Geiger. Three dimensional recon-

For example, our hybrid approach has been used to
model and animate the respiratory system depicted on f g ures 6 and 7. The mediastinum (i.e. trachea) and rib cage
were reconstructed with skeletal implicit surfaces using the
method described in this paper, while the heart and lungs
are modeled with particle systems. Two key frames of an
animation are presented in these pictures showing respectively empty and full lungs. All elements are in interaction
with each other: see for example the deformation of the rib
cage on Egure 7.

struction of complex shapes based on the delaunay. Technical Report 1697, INRIA, April 1992.
M.-P. Cani. Implicit representations in computer animation
: a compared study. In Proceedings of Implicit Surface ‘99,
Sep 1999. Invited paper.
I. Cohen and L. Cohen. A hybrid hyperquadric model for 2-d
and 3-d data ftting. Technical Report 21 88, INRIA, January
1994.
E. Ferley, M. C. Gascuel, and D.Attali. Skeletal reconstruction of branching shapes. In Implicit Surjiaces’96 Proceedings, pages 127-142, 1996.
E. Galin and S. Akkouche. Fast surface reconstruction from
contours using implicit surfaces. In Implicit Surfaces’98,
pages 139-144,1998.
H. Hoppe, T. DeRose, T. Duchamp, J. McDonald, and
W. Stuetzle. Surface reconstruction from unorganized
points. In SIGGRAPH’92 Proceedings, pages 71-78, 1992.
M. W. Jones and M. Chen. A new approach to the construction of surfaces from contour data. Computer Graphics
Forum, 13(3):75-84, 1994.
A. Joukhadar, E Carat, and C. Laugier. Parameter identiEcation for dynamic simulation. In IEEE Int. Con$ on Robotics
and Automation, pages 1928-1933, New Mexico, US, 1997.
B. Morse, T. Yoo, P. Rheingans, D. Chen, and K. Subramanian. Interpolating implicit surfaces from scattered surface
data using compactly supported radial basis functions. In
Proceedings of Shape Modeling International (SMI) 2001,
2001.
S. Muraki. Volumetric shape description of range data using “blobby model”. In SIGGRAPH’91 Proceedings, pages

7. Conclusion
In this paper, we have presented a methodology to reconstruct objects’ shape using skeletal implicit surfaces.
The reconstructed objects ca? contain holes or have several
branches.
To avoid the use of a blended geld function, the objects
are described with a uniform feld function and a weighted
skeleton. Rather than computing the skeleton from the
whole 3D cloud of points, we deduce it automatically from
the 2D Voronoi skeleton of each C T scan section.
We have also presented a technique to simulate the deformation of these surfaces by transforming their skeleton
into a mass/spring system.
In the context of a medical application, we have used
a hybrid technique. This has permitted us to model most
of anatomical shapes. Our modeling algorithms is being
integrated in a global treatment software. In our trials,
the physical parameters that permit to defne the organs’
characteristics have been set intuitively. In cooperation
with Christie Hospital in Manchester (UK) we are planning
to End a better approximation of these parameters by long
series of tests. Moreover, the computation time is actually
rather prohibitive. Consequently, we are optimising our
calculation algorithms.

227-235, 1991.
S. Pontier. Reconstruction d’objets dkforniables ye’l’aide de
fonctions implicites. PhD thesis, University Lyon 1, April
2000.
V. V. Savchenko, A. A. Pasko, 0. G. Okunev, andT. L. Ku-

nii. Function representation of solids reconstructed from
scattered surface points and contours. Computer Graphics
Forum, 14(4):181-188, 1995.
S. Sclaroff and A. Pentland. Generalized Implicit Functions for Computer Graphics. In SIGGRAPH’91 Proceedings, pages 247-250, 1991.

References

A. Sourin and A. Pasko. Function representation for sweeping by a moving solid. IEEE Transacrion on Visualization
arid Computer Graphics, 2(1), 1996.
D. Terzopolous and K. Fleicher. Modeling inelastic deformation: viscoelasticity, plasticity, fracture. In Proceedings of SIGGRAPH’88, pages 269-278. Computer Graphics,
1988.
H.-K. Zhao, S. Osher, and R. Fedkiw. Implicit surface reconstruction and deformationusing the level set method. Technical report, Group in Computational and Applied Mathematics, UCLA, 2001.

M. Amrani, F. Jaillet, M. Melkemi, and B. Shariat. Simulation of deformable organs with a hybrid approach. Revue
Int. d’infographie et de la CFAO, under press, 2001.

M. Amrani and B. Shariat. Deformable organs modelling
with multi layer particle systems. In Information Visualisation 2000, pages 351-356,2000.
E. Bardinet, L. D. Cohen, and N. Ayache. A parametric de-

formable model to Et unstructured 3d data. Technical Report
2617, INRIA, July 1995.
E. Bittar, N. Tsingos, and M. Gascuel. Automatic reconstruction of unstructured 3d data : Combining a medial
axis and implicit surfaces. In Eurographics ’95 Proceedings,
pages 457-468, 1995.

728

