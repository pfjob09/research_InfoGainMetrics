2010 14th International
Information
Conference
Visualisation
Information Visualisation

Identification, Tracking and Visualization of Platelets in Intravital Microscopy
Joseph Doss1, Randal Holloway1, Jeremiah Slack1, Jennifer Smith1, Phillip Kilgore1, Urska
Cvek1,3, Karen Y. Stokes2,3, Marjan Trutschl1,3
1
Department of Computer Science, LSU Shreveport, USA
2
Dept. of Molecular & Cellular Physiology
3
Center for Molecular and Tumor Virology, LSU Health Sciences Center, Shreveport, USA
{dossj25, hollowayr50, slackj61, smithj11, kilgorep54}@lsus.edu, ucvek@lsus.edu,
kstoke@lsuhsc.edu mtrutsch@lsus.edu
movement of the blood cell along the vessel which is a
prerequisite for firm adhesion), firm adhesion (a cell that
remains stationary for a set duration, e.g. 30s), and
emigration of the cell through the vessel wall into the
tissue.
Platelets exhibit somewhat different behavior and
tend to “hop” along the vessel wall, and can firmly
adhere without prior interaction. In addition, the blood
cells can interact with each other, and while these
interactions can be analyzed by using more than one
fluorescent dye to monitor several cell types
simultaneously, the analysis becomes more complicated
and error prone. All of these interactions tend to be
increased in the inflamed state, and it takes a lot of
training and practice to accurately monitor many cells in
a vessel over time. The experiments are recorded to aid
in this, and in our setup we observe 100!m (micron)
sections of vessel over a 1 min observation period,
recorded at 30 frames/sec. Several subsets of this
sequence were identified in order to isolate specific
features that we aim to detect. In addition, considerable
effort must be made within a lab to ensure variation in
analysis between personnel is minimized to ensure
reproducibility of a model. This is especially important
on collaborative projects.
Despite the immense complexity of the
inflammatory process and the cell-cell interactions
therein, many labs restrict their analysis to a few major
parameters in order to minimize both labor time and
errors that may occur due to the subjectivity of the
analysis. The measurements primarily reported are firm
adhesion, with a smaller portion of labs reporting the
rolling flux (number of leukocytes rolling per unit time,
which increases in many inflammatory conditions), or
rolling velocity (which tends to slow down during
inflammation as blood cells become more activated and
“sticky”). While these types of experiments and analyses
have yielded a large amount of critical information, this
somewhat generalized approach also limits the
information that we obtain from any single experiment,
and because there are vast numbers of molecules that

Abstract
Intravital microscopy permits observation of live
events in intact tissues to study a variety of issues,
including quantifying cell-vessel wall interactions. The
analysis of the parameters is labor-intensive, subjective
and limited to broad categories of blood cell-vessel wall
interactions. We are developing an algorithmic
approach that aids in analysis, automatically and
objectively detects and tracks platelets, and expands
information derived from such videos. We integrate
computer vision and break the identification, tracking,
and visualization into steps. We enable simple and
computationally efficient means of eliminating movement
within a video based on positional shifting of an
identified feature and visualize platelet paths.

1. Introduction
Inflammation is the central process in many diseases
and disorders including cardiovascular disease,
inflammatory bowel disease, arthritis, and transplant
rejection. It is characterized by activation of circulating
blood cells and cells lining the vessel wall, leading to
recruitment of inflammatory blood cells to the tissue, and
ultimately tissue damage. Understanding the mechanisms
underlying the blood cell interactions with the vessel
wall during recruitment and identifying pharmacological
agents that can target one or more steps in this process is
critical for the development of therapies for these
diseases.
Intravital microscopy is a technique used to monitor
events in tissues of a live organism in real-time. White
blood cell-vessel wall interactions can be measured in
thin tissues such as the cremaster muscle and mesentery
using light microscopy. However, for monitoring
specific subsets of white blood cells, platelets
(thrombocytes) or any cell type in solid organs such as
the gut or liver, cells must be fluorescently labeled for
observation. There are many types of interactions that
have been characterized, including initial tethering of a
white blood cell to the vessel wall, rolling (the slow
Unrecognized Copyright
1550-6037/10
$26.00 © 2010
Information
IEEE
DOI 10.1109/IV.2010.44

240
246

attachment and release between adhesion molecules on
their surface and the vessel wall. Their implementation
was done using Matlab and then ported for the C
programming language. Ley et al. presented a technique
combining intravital microscopy with digital time-lapse
video microscopy to algorithmically detect leukocyte
crawling and circling [7]. Dong addressed the detection
of rolling leukocytes by using boundary information
from the image, creating a surface using an objective
functional minimized via variational approach [8].

mediate different components of the inflammatory
pathway, we may also miss the specific event that a
molecule is mediating. Therefore development of a nonsubjective computer program that significantly expands
the results acquired within a single experiment would
greatly enhance our knowledge of the inflammatory
process and the events targeted by pharmacological
agents.
Currently, the Stokes lab manually measures vessel
diameter, leukocyte adhesion, leukocyte emigration,
brief platelet interactions with the vessel wall (saltation)
and firm adhesion of platelets. In a small subset of
experiments, we have also monitored leukocyte rolling
because we were testing the role of a molecule known to
mediate this process. However, for many other studies
we have not done this because it is labor intensive, and in
highly inflamed states can be difficult. Most laboratories
today use technicians that perform manual examination
[1-3], with some laboratories focusing on one particular
measure, such as rolling [4-5].
The goal of our approach is to design a software
package that automatically identifies features: detects
platelets, distinguishes the good candidates from the rest,
tracks their path of movement as bounded by the leftright direction, and determines their velocity and
distance traveled. In the next phase of development we
will expand this to address saltation, leukocyte rolling
and platelet adhesion and move into leukocyte adhesion
tracking. Several publications address individual features
and this work is aimed at designing a comprehensive
solution for multiple feature detection that can be used
by life scientists.
We first describe some previous work in
identification, tracking and detection of individual
features in intravital microscopy. We follow by
describing our approach broken into steps: video
manipulation and extraction of frames; platelet
identification; and platelet tracking and visualization. We
are utilizing a configuration module that helps us set up
the parameters and envision using different configuration
modules for setup of a variety of microscope systems
using a few simple clicks. In conclusion, we present the
results of the visualization and analysis of a video
sequence.

3. Platelet identification
Before tracking, counting or any related process as
well as extraction of useful data can take place, the
platelets need to be accurately identified in a series of
frames extracted from a video file. We use ImageMagick
[9], mplayer [10], and Qt [11] to quickly and efficiently
extract and manipulate frames and later identify the
content of each of the video frames.

3.1. Video stabilization
Although the camera is firmly mounted to a
microscope, the recording exhibits unwanted shaking
that could be described as cyclic movement due to
respiration. We first address the stabilization and then
the program iterates through a series of steps: filter
undesired features, identify platelet-like shapes, classify
the shapes and record the platelet locations for
subsequent platelet tracking.
To stabilize the video, one or more reference points
are selected. As the location of a reference point
changes, the image adjusts to its previous location. Using
multiple reference points provides a much steadier video
because of partial occlusion of one or more reference
points by a passing platelet or blurred out of view as the
subject moves out of the camera’s focus. We apply two
techniques to stabilize the videos (Figure 2). The first
technique uses the first frame as the point of reference
(best for videos with little change). The second technique
uses the previous frame (t-1) as the frame of reference to
adjust the next one. Such a technique performs very well
when stabilizing videos containing abrupt movements,
resulting from the interaction with the subject or other
causes.

2. Previous work

3.2. Manipulation and extraction of frames

Current analysis of platelets in the majority of life
science labs is performed manually by a technician. A lot
of the features are recorded in vivo, while the experiment
is performed, with some features analyzed from a
recording of the process at a later stage, still in a manual
fashion. This is extraordinarily time-consuming and
liable to error especially in sets with a lot of rolling.
Several authors have previously addressed detection of
one of the features. Sahoo, et al. [6] developed a
technique to track rolling leukocytes from light
microscopy based on the fact that they tend to assume a
teardrop shape because they are moving at a slower
velocity than other blood cells, via continuous

To identify platelet candidates we use ImageMagick
and custom algorithms linked with the Qt library. Our
first step is to extract individual frames from the video
using mplayer and store each extracted frame in JPG
format. Since the frames in our videos are interlaced,
meaning only every other row of pixels is updated with
each frame, we deinterlace each frame using
ImageMagick’s convert utility. This is important
because an object may move a great distance between
two frames. When trying to outline the object, every
even line will outline the image in one area of the
picture, and every odd line in another. The difference in

247
241

4. Platelet tracking based on identification

!"!#$%"&'(')!*+*,-.-/0*
1"2*'#34*2'1'2')3'*5)*2'1'2')3'657!*
8*
2'1'2')3'9')!'2*+*15):*3')!'2*5)*
2'1'2')3';(#<'*=75)<*2'1'2')3'0*
!#2<'!9')!'2*+*15):*3')!'2*5)*
!#2<'!;(#<'*=75)<*2'1'2')3'0*
!"!#$%"&'(')!*>+*?2'1'2')3'9')!'2*@*
*
!#2<'!9')!'2A*
B*
#&'2#<'%"&'(')!*+*=C:#!'D5#7*E*)=(F'2*"1**
2'1'2')3'7*
!2#)7$#!'*!#2<'!;(#<'*FG*#&'2#<'%"&'(')!*

The video can be analyzed as a whole or in userdefined sections down to the individual frame or second.
This feature allows us to divide the video into multiple
sections that require analysis to be captured in one pass
(Figure 5), saving time and resources. Each section of
the video has its own tracker, keeping its data separate
from all other sections. Sections cannot overlap and must
be at least one second long, though one tracker can end
and another begin at the same time. Once the trackers are
created, the upper and lower limits of each section are
passed to its respective tracker so that analysis may
begin.
First, data is read from the text file created during
image analysis. The file contains two sets of x,y
coordinates, the top-left and bottom-right corners of the
platelet's bounding box, and there is no limit to the
number of platelets (coordinate chunks) per frame, with
each line a separate frame. Every tracker uses the same
file containing all of the data, so only the lines specified
by the limits are read and stored.
Before analysis, the data can be additionally filtered,
algorithmically tagging platelets that are then removed
from tracking. This decision for manual removal of noninteresting platelets was made based on discussions with
life scientists, who wanted to have more control over the
automatic detection of platelets. Each platelet starts out

Figure 1 Algorithm for frame stabilization
the even and odd rows may be great enough that trying
to outline them could result in identifying two different
objects (Figure 1). It also results in a much sharper
image. To deinterlace, we remove all the odd rows of
pixels, then repeat the even one above, in its place.
Because the odd rows removed correspond to the even
rows in the next image, there is only one frame lost in
the entire video.

Figure 2 Two techniques for frame stabilization
Once the image has been deinterlaced, all non-desirable
“noise” in the image is filtered out by blurring it with
ImageMagick. While blurring an image we just
sharpened may seem counterproductive, the features we
are looking for are large enough for this approach to
yield desirable results. We then run the edge detection
algorithm (ImageMagick) against the images and set
everything that is not an edge to white. At this point we
have a white image with a few black features, indicating
blobs of adequate size and color that weren't filtered out
previously (Figure 3).

Figure 3 Original image (top left) is deinterlaced,
followed by filtering to single out a blob of interest
(top right), ending with us being able to identify
the blob (bottom right)
marked as “good” and is first checked for roundness. If a
platelet's width/height ratio is off by more than a pre-set
value (indicating the platelet is too long or skinny), it is
marked as “bad” and removed from the analysis. From
the remaining “good” platelets, each one is checked for
possible matches and marked “bad” if there are no
matches in the adjacent frames. Candidates are checked
in following and previous frames. If only previous
frames are checked during cleaning, a platelet can be
marked bad for the lack of matches, then missed when
checked in the next frame, because the previous point
was marked “bad.” Finally, the platelets marked as “bad”

3.3. Platelet identification
To improve the performance of the platelet
identification and for efficiency purposes (part of each
frame does not contain platelet-related information), we
can specify a search or active region, one region per
video. Once a non-white feature is detected within an
image, the platelet identification algorithm is applied to
identify a circular blob. Once an acceptable bounding
box for the circular blob has been identified, the center
coordinates of the newly discovered platelet are stored in
a file for subsequent process of tracking the platelets.

248
242

resulting in a different apparent area; if expanded beyond
adjacency, too many false connections are made with
both different platelets and other non-platelet things that
are detected during image analysis (smudge on the lens,
etc). If a connection is made with a platelet in an
excluded area, the line is still created but marked as
excluded (this was a debug feature that is no longer
relevant, and could be effectively replaced in the
cleaning process by marking all excluded platelets as
“bad”).

4.1 Platelet-oriented structure
Up to this point the data has been in a frameoriented structure (each frame contains a number of
platelets at their positions) and we re-organized it into a
platelet-oriented structure (each platelet appears in so
many frames at whatever position). This is a seemingly
small difference that reduces the difficulty of keeping up
with each platelet and calculating statistics as well as
allowing for clearer display of platelet paths.
We then algorithmically check for false positives. A
platelet is deemed a false positive if it stays within a
small area or moves by less than a pre-set value. This
gets rid of both quick fly-bys that only appear for a few
frames and persistent false positives that stick to one area
without moving much. If any false positives are detected,
an exclusion area is set for the portion of the video it
appears in, and the process starts over from cleaning.
This loops until there are no false positives detected. The
search space decreases with time, having the benefit of
becoming faster with each successive iteration.
Missing points are next interpolated. For instance, if
a platelet appears in frames 80 and 83, we determine the
most likely positions of the points lost in frames 81 and
82. We calculate the movement of the value per step as
M = (U " L) S
(1)

Figure 4 Tracker user interface: A) Platelet; B)
Platelet's trail within the boundaries and C)
outside the boundaries; D) The boundaries with
location shown (top number) and count of
platelets crossing each boundary (bottom
number); E) Range slider used to set the
boundaries; F) The count of all platelets that have
appeared for the current tracker; G) The trail of
another platelet; H) Text from camera
for not being round enough are double-checked to see if
they could possibly connect to any of the remaining
“good” platelets. If so, they are themselves re-marked as
“good”, thus allowing for platelets to become squished
and still remain tracked. The second and third cleaning
steps repeat for increased accuracy.

where U and L are the upper and lower coordinate
values, respectively, S is the number of steps between the
frames we have
! (one more than the number of missing
frames). This only works in one dimension, so the
formula is used for both the X and Y values separately,
and the results are combined to get total movement
across the Cartesian plane of the video. The coordinates
for the missing frames are inserted into each platelet at
the proper area.
Now that each platelet has a position for every frame
it's in, we check for any platelets that cross the
boundaries defined by the user. We use this information
in the video overlay to show how many platelets cross
the lower boundary or the upper boundary in addition to
the number of platelets that have appeared in the video
up to the current point for the current tracker.
Next, statistics are calculated and sent to the
statistical dialog for display as text. If the platelet crosses
the boundaries, we show when it crosses each boundary
and how long it takes to cross the bounded area. We
identify the count of platelets (Figure 4:F), their speed of
movement, and their paths (Figure 4:B,C,G). For those
that cross, the minimum, maximum, mean, median, and

Figure 5 Platelet tracking section dialog
With the garbage cleaned, the first analysis step
connects the “good” platelets with “lines” indicating the
platelet's path through the video. Platelets are connected
through backtracking and platelets in the current frame
are compared to those in the previous frame (or farther
back, up to a threshold if no match is found). Platelets
are deemed a match if they are within a threshold value
in both size and distance (with distance scaling
depending on how many frames back the comparison is).
In adjacent frames, the size comparison is ignored,
allowing for platelets to rapidly change shape and

249
243

5. Configuration module

mode values are found using the time spent between the
boundaries. Every platelet is shown in the order that it
appears, along with its lifespan and whether or not it
crosses the boundaries. If the video is analyzed in
multiple sections, then everything will be calculated
separately for each section, and the sections will appear
in the order they were created.

To make our application easier to use without
requiring repetitive parameter setting, we have
implemented storing of the user’s desired settings. We
wanted to be able to store directory paths where the
extracted frames from the video are stored, the location
of the configuration file that holds the application's
microscope parameters, and other details. When the
application is first started it is configured automatically,
and the user has the option of editing these settings from
a dialog. These settings are stored by utilizing an XML
schema designed for that purpose.
For proper tracking of platelets, we first configure
the correct number of micrometers (microns) and the
length in pixels that this number of micrometers will
represent. A variety of microscopes are used, based on
the application, introducing the need for the management
of these settings.
To make calibration of the microscope as simple as
possible for the user, we wanted the user to be able to
interact with the program visually in order to choose the
number of micrometers for a certain number of pixels.
To do this, the user selects a certain range horizontally
on an image in order to determine the distance. Instead
of simply using a single image for this, we feel the best
approach is to render a video using a series of images or
slides. In this way, the user interacts with the video by
using a series of standard events, such as to play, pause,
fast forward, and rewind the video, or to step the video a
single frame forwards or backwards while the video is
paused. Once the user has found the image in the video
they wish to use, they may select the area horizontally.
This will use x values of those two points to calculate the
number of pixels the micrometers will represent.
The user may choose from multiple microscope
configurations to select one suitable for their needs. The
user may manage these configurations through the
microscope calibration dialog, and may insert or remove
microscope calibration profiles. These settings are
committed back to the microscope configuration file via
explicit request, and may also be saved via a
confirmation dialog whenever the calibration settings
dialog closes.

4.2. Smoothing of platelet paths
We calculate the Bezier curve, according to the
general definition, of each platelet's path for a smoother
presentation. A strictly linear model of mapping the
movement of platelets would not give a reasonable
depiction of the path that a platelet often takes, as they
tend to stray from the overall vector of movement,
producing a jagged and rough path that reflects quick
movements and extreme interference, such as the
breathing of the live animal. By implementing the Bezier
curve algorithm, we have found an effective way for the
user to visualize and quickly analyze the platelet’s path,
removing the noise. The Bezier curve algorithm has to be
implemented on points sorted as a path. This is
imperative, as it ensures that the curve produced will
pass the vertical line test and the first and last points of
the platelet’s position are also the endpoints of the curve.
In our implementation, every point is a control point, and
they are all given equal weight, assuring a smooth and
well-defined path based on the predominant movement
from left to right (Figure 6). Our application provides the
option to view original paths, or smoothed paths
produced by the Bezier curve algorithm. The Bezier
smoothing only works correctly in cases where platelet
motion is predominately left-to-right, but the raw lines
work fine regardless of direction.
Several approaches are possible for connecting
platelets across frames, based on the information stored
from the previous and following frames. Initially we
only searched the previous frame for possible matches
within a specific area, but this failed if the platelet was
lost or occluded in the previous frame. Our second
approach was to base the search on how far the platelet
travels from frame to frame, with allowance for changes,
but the platelet would be lost if it rapidly changed speed,
as compared to the set of previous movements from one
frame to the next. As our third approach, we considered a
trajectory-based approach, but that would fail if the
platelet quickly changed direction. We decided to stick
with our initial approach and expand upon that. We first
increase the search radius, so that if a platelet is not
found in the previous frame, we look for it in the frame
before that, and so on up to a user-defined limit. We also
tried searching forward, which provided almost the exact
same results as backward, but was more troublesome to
properly line up with video playback so we kept the
backward-searching approach. This approach still leaves
gaps in tracking when a platelet would rapidly change
size or shape, so we add the adjacent-frame exception to
the area comparison and add the double-checking step in
the cleaning process for our final version.

Figure 6 Original and smoothed platelet paths

6. Experimental results
In this section, we present the results to 484 video
frames obtained by transillumination of the mouse
cremaster. We are providing a narrated overview of our
package as a supplement [12]. It has heavy horizontal
shaking due to breathing, and significant interference
from white blood cells. We set an X threshold of 20, Y
threshold of 10, backtrack threshold of 5, clean frame
threshold of 2, clean match requirement of 1, times to
clean set to 2, false threshold of 35, square tolerance of

250
244

to analyze leukocyte rolling parameters using a computer
program, because leukocyte rolling is a prerequisite for
leukocyte recruitment to a tissue, and therefore this early
step in the inflammatory cascade presents a promising
therapeutic target. Our future work is to implement and
test published approaches for rolling as a basis for our
own rolling measure for fluorescently labeled cells. This
would open up its utility to many organs and
experimental setups, as well as different subsets of cells.
Taken together, these applications have the potential
to yield far more data per experiment than we currently
obtain, and offer a better understanding of how different
events in the complex processes of inflammation and
thrombosis relate to each other.

0.15, area tolerance of 0.5, with cleaning and autodetection of false positives turned on. Some platelets are
successfully tracked over long paths (Figure 7:A) while
some other platelets suffered from occlusion, fading, and
generally poor visibility, resulting in a broken path with
missed connections (Figure 7:B). We add an exclusion
area to the bottom third of the video, covering the text
(Figure 4:H) as some potential platelets are still detected
in this area. We have since added the ability to only do
blob detection in a specified area, which eliminates the
need for this exclusion area.
(A)
(B)

Acknowledgments

Figure 7 A) Platelet tracks on a long path and
B) Platelet!s broken path
Five platelets are identified in our video set. For distance
traveled, we have a minimum of 15 microns, a maximum
of 313, mean of 70.375, median of 27, and mode of 23.
Using boundaries at 255 and 455 pixels (a 100 micron
distance), we have two platelets that cross both
boundaries taking 1.4375 and 2.125 seconds to do so,
providing the speed measurements for the life scientists.
Manual analysis in the Stokes lab confirmed these results
and identified only one saltating platelet.

The project described was supported by Grant
Number P20RR018724 from the National Center for
Research Resources. The content is solely the
responsibility of the authors and does not necessarily
represent the official views of the National Center For
Research Resources or the National Institutes of Health.
We would like to thank John T. Wessler and Charles
McCarthy for their input on this project.

References

Conclusions and future work

[1]

K.Y. Stokes, L. Calahan, J.M. Russell, S. Gurwara, D.N.
Granger. Role of platelets in hypercholesterolemiainduced leukocyte recruitment and arteriolar dysfunction.
Microcirculation 13(5);377-88 (2006).
[2] E. Ryschich, V. Kerkadze, P. Lizdenis, S. Paskauskas,
H.P. Knaebel, W. Gross, M.M. Gebhard, M.W. Büchler,
J. Schmidt. Active leukocyte crawling in microvessels
assessed by digital time-lapse intravital microscopy. J
Surg Res. 2006 Oct;135(2):291-6. (2006).
[3] K.Y. Stokes, L. Calahan, C.M. Hamric, J.M. Russell,
D.N.
Granger.
CD40/CD40L
contributes
to
hypercholesterolemia-induced microvasc. inflammation.
Am J Physiol Heart Circ Physiol 296(3);H689-97 (2009).
[4] M. Dore, R.J. Korthuis, D.N. Granger, M.L. Entman,
C.W. Smith. P-selectin mediates spontaneous leukocyte
rolling in vivo. Blood 82(4); 1308-1316 (1993).
[5] K. Ley, D.C. Bullard, M.L. Arbones, R. Bosse, D.
Vestweber, T.F. Tedder, A.L. Beaudet. Sequential
contributions of L- and P-selectin to leukocyte rolling in
vivo. J Exp Med 181; 669-675 (1995).
[6] S. Sahoo, N. Ray, S.T. Acton, Rolling leukocyte
detection based on teardrop shape and the gradient
inverse coefficient of variation. Proceedings of the
International Conference on Medical Information
Visualisation – Biomedical Visualisation (MediVis’06).
[7] K. Ley, J. Mestas, M.K. Pospieszalska, P. Sundd, A.
Groisman, A. Zarbock. Chapter 11 Intravital microscopy
investigation of leukocyte interactions with the blood
vessel wall. Methods Enzymol 445;255-279:2008.
[8] G. Dong, S.T. Acton, A variational method for leukocyte
detection. Proc. Of Image Processing, II-161-164, 2003.
[9] http://www.imagemagick.org
[10] http://www.mplayerhq.hu
[11] http://qt.nokia.com
[12] http://labi.lsus.edu/IVBi2010/

There are many other applications that this software
could ultimately be developed for. For example, we can
measure red blood cell velocity, a critical measure
because if we choose to monitor a vessel with low flow,
we may get non-specific recruitment of cells that does
not reflect our injury/intervention. A piece of hardware is
used to quantify red blood cell velocity. However, this
option is only available for thin tissues, and the process
of measuring red blood cell velocity in solid organs
requires fluorescent labeling of cells, capturing computer
frames and manually advancing the frames to calculate
distance traveled by several cells over time to determine
the average velocity of the cells, which is extremely
labor-intensive. This measurement would lend itself well
to a computer program that could track cells and
calculate their velocity without such a large degree of
human input. In addition, with the growing use of 3dimensional imaging of events in live tissue, and the
development of dyes specific for molecules that are
produced/released during inflammation and that can be
used simultaneously with fluorescent labeling of cell
subsets, will enhance the ability to integrate the
information from these different signals with the
measurements we are currently working on. Other
applications such as initiation, progression and resolution
of a thrombus could be monitored, and rather than
“snapshot” manual analysis of these processes, the
kinetics could be more easily calculated.
Our next step is to integrate an automatic detection
of saltating platelets. It would be very helpful to be able

251
245

