Motion data correction and extrapolation using physical constraints
ZhiDong Xiao

XiaoSong Yang

Jian J. Zhang

National Centre for Computer Animation
Bournemouth Media School, Bournemouth University
United Kingdom
zxiao, xyang, jzhang@bournemouth.ac.uk
Abstract
Optimization techniques have proven to be a powerful
approach for generating new motions. In this paper, we
present a physically based optimization method to synthesize motions by using motion capture data as input. We assume that the captured motion data is physically plausible.
We start by deﬁning and estimating the physical properties
of human characters. The procedure of motion synthesis is
from coarse to ﬁne according to the objective function and
physical constraints. Our motion synthesis is like a motion
editing method, which is appropriate for motion correction
and extrapolation. By this means, we can correct and eliminate unrealistic motion data.
Keywords— computer animation, physically based animation, optimization, motion capture, human character animation

1 Introduction
Convincing 3D character animations, especially human character animations, have been widely used in video
games, the ﬁlm industry and other ﬁelds. At present time,
most of these motions are obtained by using motion capture devices. Due to the spatial limitation of the motion capture studio, it is difﬁcult to create whole motion
sequences, especially highly dynamic motion sequences.
Therefore, motion editing techniques were developed. In
general, animators deﬁne and adjust a small number of
in-between keyframes, then connect different motion segments together into a continuous motion sequence. It is
noticeable that the original motion data which we captured
could contain some ”error”, making the motion appear unrealistic, e.g., the animated character body penetrating the
ground or the foot slipping on the ﬂoor. The reasons are
likely that the sensors may not be put on proper positions
of an actor’s body or the sensors could be loose during motion data capturing. Therefore, the correction of motion
data is a important procedure to produce convincing and

realistic motion.
Motion data obtained from motion capture devices
provides kinematic information of motion for animators,
which are presented as discrete spatial points recording the
position of the joint angles related to a hierarchical human character skeleton. As a result, most existing motion
synthesis techniques mainly consider the smoothness of
kinematic parameters, making the generated motions apparently natural-looking. However, because in the editing
process the important physical properties are neglected, the
created motions can be unconvincing and unrealistic. It is
necessary to enforce relevant physical properties into motion capture data during the process of motion synthesis to
help create physically correct motion. It is a rather difﬁcult
task since there are no dynamic properties such as mass,
moment of inertia and torque obtained from motion captured data. In this paper, we solve the problem on the basis
of the knowledge of human anatomy. we obtain some of
the dynamic properties of the related skeleton link by way
of estimating and pre-computing geometric shapes of the
human body.
Optimization techniques have proven to be a very useful and powerful tool for motion synthesis. In this paper we present a physically based constrained optimization method for motion correction and extrapolation. The
proposed approach was applied to a human character to
synthesize different types of motion. We apply appropriate
physically based constraints to modify and reuse the original motion capture data. Our solution technique for nonlinear constrained optimization problems approach is based
on sequential quadratic programming (SQP). Because the
original motion data was used as initial guess, the iterative
method can ﬁnd the solution easily by adjusting the character motion to meet the physical constraints and minimize
the objective function. In this way, the captured motion
data can be widely used in different virtual environments.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

The remainder of this paper is organized as follows:

section 2 describes related work; section 3 describes the
human character model used; section 4 explains our physically based optimization approach for motion synthesis;
section 5 presents some experimental results and ﬁnally,
we summarize the advantages and limitations of our approach.

2 Background
In the last two decades, many techniques have been presented for character animation. By using optical or magnetic sensors located on an actor, motion capture became
a popular technique for producing highly realistic motions.
However, due to the spatial limitation of the motion capture studio, and the fact that there is no control over the
motion by motion capture itself, further research has been
undertaken for motion capture data synthesis.
Bruderlin [3] and Witkin [19] modiﬁed and interpolated
data directly for effective reuse. Unuma et al. use Fourier
series expansion to interpolate between motions [16]. Lee
and Shin [10] employed a multi-level B-spline technique
for motion editing. By using optimization approach over
an entire motion sequence, Gleicher edited and adapted
original motion to a new character [7]. These editing methods, based on kinematics properties of motion, are simple
to compute and easy to control. However, these methods
have not taken physical principles into account, the produced motion is therefore not reliable.
In contrast, fully dynamic simulations of characters not
only generate physically realistic motion but also can interact with the environment. Research have been presented
to simulate a bipedal agent in robotics and biomechanics,
among which the method based on a robot controller has
been successfully applied in computer graphics committees. Hodgins created a wide range of realistic human athlete animations by ﬁne-tuning and synchronizing the controllers to each other [8]. Faloutsos et al. presented an
automatic controller synthesis for character animation [5].
Laszlo et al. used limit cycle control for a physically realistic bipedal walking character [9]. Although these methods
are able to create relatively realistic human character animation, they are not widely used nowadays. The reason
is that the controller was usually designed to drive actuator
forces for the given task, so, it is difﬁcult to create different
motions.
Researches based on dynamic ﬁltering to process motion capture data for physical correctness have been presented [15] [20]. By correcting the momentum of the character during a ﬂight phase and utilizing the zero moment
point (ZMP) as balance constraints to adjust the motion,
Shin et al. adapted the original motion capture data to a
slightly different environment [14]. These methods are not
widely used because they only modify a small set of motions rather than the whole motion sequence, in addition,

the use of ﬁltering may result in the loss of certain valuable information relating to character motion.
Witkin and Kass [18] ﬁrst introduced a constrained optimization technique in 1988. The spacetime constraints
caused an optimization problem for motion synthesis [13].
In recent years, researchers have found that optimization
methods for motion synthesis, based on physical constraints, could produce more realistic motion sequences.
Unfortunately, complex characters, when subject to Newtonian physics constraints, become highly nonlinear and
highly sensitive to the starting point of optimization, therefore the process often does not converge to obtain the solution. Popovic and Witkin applied physical behavior to a
simple model, using data obtained from the model, simple
physical motion was mapped onto the full character [12].
By using simpliﬁed physical constraints, Liu and Popovic
enforced patterns of linear and angular momentum to preserve dynamic effects, e.g., contact forces and joint torques
[11]. Abe based his research on previous work and presented an efﬁcient system to generate a number of realistic
motions from a single input motion [1]. Instead of computing joint torques, Fang and Pollard used squared joint
angular acceleration as an objective function and derived
an efﬁcient algorithm for motion synthesis [6].
In comparison with the above techniques, we use a full
human character model and physically based constraints
for motion synthesis. After analyzing the original motion
data, this motion synthesis technique can be easily used to
correct motion data by setting proper physical constraints.
This technique is convenient for producing realistic and
convincing motion.

3

Human Character Model

In our experiment, the original motion data was captured by an optical motion capture device. According to
the knowledge of human anatomy, the human character
was represented by a skeleton, which has 16 rigid links
(body parts) and 15 ball joints (Figure 1). The total number of degrees of freedom (DOF) of the human character
is 41, including 6 DOF (3 Rotations and 3 Translations) at
the root joint (waist). The root is an unactuated joint which
is deﬁned using a reference coordinate system.
As we know, the physical properties of animated characters are dependent on the mass distribution of the human character – an actor. However, in motion capture data,
there is no explicit information about mass and moment of
inertia of individual body parts. The only parameters we
know are the hierarchical structure of the animated human
character and the total mass of the real performer. Therefore, a method has to be presented to ﬁt the mass distribution to the character, in order that the physical laws are
satisﬁed.
Shin et al.[14] presented an optimization method to de-

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

neck
chest2
chest

elbow
shoulder

wrist

root
hip

istically as possible. In our approach, the animator speciﬁes a rough sketch of the desired motion and constraints
that should be enforced. Constrained optimization is then
used to ﬁnd a motion that minimizes the objective function which is subjected to the user’s speciﬁed physical constraints.
In general, the equation of motion of system can be described as the following differential equation [4]:
˙ θ)θ˙ + G(θ) + F (θ)
τ = M (θ)θ¨ + C(θ,

knee
ankle
toe

Figure 1: An adapted human character skeleton. The joints
are shown as circles, the skeleton links (body parts) are
connected by joints.
termine the mass distribution using physically plausible
motion, constrained by the zero moment point method,
while most researchers estimate the mass distribution of
human characters from biomechanics literature [8][15].
Considering the advantages of the reliability of biomechanical experiments, we estimated the primitive geometric model of human body parts and computed the dynamic properties of the human character separately with
data based on studies undertaken by [17]. The dynamic
properties of the animated human character are shown in
Table 1.
Body Parts
Hip
Chest
Chest2
Thigh
Lower leg
Foot
Upper arm
Lower arm
Hand
Neck(head)

Mass(kg)
10.65
10.425
17.625
7.5
3.487
1.087
2.1
1.2
0.45
6.075

Length(m)
0.335
0.18
0.338
0.441
0.42
0.26
0.335
0.263
0.18
0.32

Primitive
Rectangular
Rectangular
Rectangular
Cylinder
Cylinder
Rectangular
Cylinder
Cylinder
Rectangular
Cylinder

Table 1: Physical properties of the human character derived
from an actor

where τ is the joint torque, θ is the generalized coordinates,
joint angle, θ˙ and θ¨ are joint angular velocity and angular
˙
acceleration, M (θ) is an n × n inertia mass matrix, C(θ, θ)
is a n × n matrix, including the centrifugal and coriolis effects, G(θ) stands for the gravitation force, F (θ) represents
the external force.
Rearranging Equation 1, we can obtain joint angular acceleration:
˙ θ)θ˙ + G(θ) + F (θ))]
θ¨ = M −1 (θ)[τ − (C(θ,

(2)

Equation 2 deﬁnes a set of second order, ordinary differential equation:
˙ t)
θ¨ = f (θ, θ,

(3)

where t stands for time, the boundary values for θ, θ˙ are
known. The motion synthesis is assumed to be the numerical solution of a boundary value problem.
Since computing a reasonable motion from initial input
or an animator sketch is easier than computing a reasonable force function, instead of solving the force function
to generate and synthesize motion, the motion synthesis
technique in this paper is intended to ﬁnd a set of satisﬁed
internal states between a given initial state (θ0 , θ˙0 ) and a
desired ﬁnal state (θf , θ˙f ).
We present our motion synthesis as a constrained optimization problem. The general problem statement is:
min y(θi (t)) subject to

c(θi , ti ) = 0

θ

ti ∈ [t0 , tf ]

(4)

Where y is the objective function, θi (t) is a state vector
of joint angles which is usually represented as piecewise
cubic spline function, c(θi , ti ) are the constraints, and ti
represents the individual time from starting time t0 to ﬁnal
time tf .
One objective function we attempted to include is the
same as displacement mapping, which is to minimize the
offset from the reference motion θr (t) [7][15]:
y(θi (t)) =

4 Motion Synthesis
Motion synthesis is the technique used to create a motion that perform actions at the appropriate time as real-

(1)

tf
t0

(θ(t) − θr (t))2 dt

(5)

As a result, the synthesized motion is kept as similar to
the referenced motion as possible. However, this works

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

successfully only if we assume no errors in the original
data, which in many cases is not true.
Thus, physical properties are taken into account, we
choose energy consumption as the objective function
y(θi (t)), which is the integral of the sum of squared joint
torques [12]:
y(θi (t)) =

tf
t0

n

τi2 (θ, t)dt

In character animation, balance is always regarded as
one of the most signiﬁcant properties. A proven criteria for dynamic balance is that the ZMP should be within
the supporting polygon [15][14]. When a walking or running character is in contact with the external environment,
e.g., ground, there exists a point in the supporting polygon
where the net torque, due to ground forces, is zero. In other
words, the sum of the torques for each body part and the
torque due to gravity equals zero (Figure 2):
mi (ri − Z) × (−¨
ri + g) = 0

(7)

i

where mi and ri are the mass and the position of the mass
centre of the ith link respectively, r¨i is the acceleration of
the mass centre of ith link, Z represents the position of
ZMP in a referenced coordinate system.
There are an inﬁnite number of solutions for Equation
7, and also, these solutions will change under the different terrain of the virtual environment. A unique and explicit equation of the ZMP from Equation 7 therefore can
be given by ﬁxing ZM P y = const:
mi rix (¨
riy − gy ) − i mi riy (¨
ri x − gx )
m
(¨
r
−
g
)
i iy
y
i

ZM P y = const
ZM P z =

i

Y

(6)

4.1 Enforce Dynamic Balance Constraints

i

mi
ri

Z

The resulting motion is treated as a lack of balance
when the ZMP is outside the supporting polygon. In theory, by correcting the ZMP, a character could be adjusted

X

Rhor
Rver

Figure 2: Efﬁcient dynamic constraints of the human character’s motion( dynamic balance constraint : ZMP calculation and Coulomb’s Contact Model )
to gain a new balance. However, it is difﬁcult in practice
to choose a proper way to adjust ZMP, since an articulated
character has a large amount of degrees of freedom. In our
method, in order to keep synthesized motion as similar to
the original input motion data as possible, we only adjust
the chest joint to keep the ZMP inside the supporting polygon.

4.2

Enforce Ground Contact Force Constraints

In computer animation, an animated human character
is supposed to interact with different surrounding virtual
environments. During motion synthesis, some positional
constraints of the character are explicitly deﬁned by the animator. In order to control the position of a supporting leg,
a position detector was used to deﬁne the position of the
foot. Coulomb’s contact model [6] was used for contact between the character and the virtual environments. The to−
→
tal reaction force R is within the cone of angle 2γ, and its
horizontal component opposing the sliding will be of sufﬁcient intensity to prevent an unwanted horizontal motion
for the supporting foot over the ground surface. Coulomb’s
contact model was shown in Figure 2.
−
→
R hor
≤ tan γ = µ
→
−
R ver

(9)

−
→
−
→
where R hor and R ver are horizontal and vertical components of reaction force respectively, µ is the friction coefﬁcient of the ground. The inequality constraint for the
contact friction force is therefore:

(8)

mi riz (¨
riy − gy ) − i mi riy (¨
riz − gz )
m
(¨
r
−
g
)
i
i
y
y
i

2g R

z

i=1

In robotics, many inverse dynamics algorithms have
been proposed for computing joint torques. Comparing
two popular formulations (Newton-Euler and Lagrangian),
the Newton-Euler computation cost O(n) whereas Lagrangian dynamics cost O(n4 ) without any minimization
(where n is the number of DOF in the system). A recursive Newton-Euler inverse dynamics algorithm was used
to compute the joint torques [4].
According to the objective function and the physical
constraints, We use a sequential quadratic programming
method (SQP) [2] to solve this optimization problem for
motion synthesis.

ZM P x =

COM

sin−1 (

→
−
| R hor |
−1
→ ) < tan µ
−
| R |

(10)

Equivalently, the constraint without the inverse trigonometric function is:

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

→
−
| R hor |
<
→
−
| R |

1
(1 + µ2 )

(11)

Figure 3: Eliminating foot slip during the human character’s walking motion (the skeleton with feet is the original motion
capture data and the skeleton without feet is the synthesized motion)

Figure 4: A human character climbing stairs, motion synthesis is based on original motion capture data similar to that
depicted in Figure 3
The magnitude of the horizontal friction force can be
constrained as follows:
→
−
0 ≤ | R hor | ≤

→
−
| R |
(1 + µ2 )

(12)

5 Experimental Results
In our experiment, we show a walking case of an animated human character. The original motion includes 28
frames. The editing procedure of motion synthesis is from
coarse to ﬁne. We implemented the motion synthesis using
Maya API in a PC with Intel(R) PentiumIII 794MHz and
512MB memory.
Motion correction. We found that the original motion
effect is unrealistic due to the slip of the right foot in its
supporting period. This is possibly due to the inaccuracy
of the position of the motion capture marker, which was
located too far away from the toe joint. The movement
of the marker corresponds with the period when the heal
of the foot touched the ground to the point when the toe
left the ground. The position detector located at the end
joint was used to detect the position of the foot. In order
to resolve the slip effects, we deﬁne the ﬁnal position of
the toe joint as the point when it leaves the ground. Figure
3 shows a walking motion including the original motion
capture data and the synthesized motion.
Motion extrapolation. In Figure 4, we show a synthesized motion of a character walking up stairs. The original
input motion data was similar to that in Figure 3. According to the virtual environment, we deﬁne a proper set of

states for a character walking up stairs. The ﬁnal trajectory of the root was obtained by mapping the hight of the
stairs with the original motion data. The trace of the root
is deﬁned as a parabolic function.

Conclusions
Editing and synthesizing motion for different targets is
a challenging task in computer animation. In this paper we
present a physically based optimization method for motion
correction and extrapolation using motion captured data.
The animator can adjust the pose to deﬁne a rough sketch
of the motion in terms of a desired motion. The desired
motion was achieved by solving the optimization problem.
In our optimization approach, we consider the muscle
force imposed on the joint. Therefore, the only objective
function is to consider the energy consumption, which is to
minimize the sum of the square of the joint torques. The
choice of the objective function is the essence of producing
a realistic and convincing motion sequence.
Despite the realistic motion we obtained, there are certain limitations in this technique which suggest areas of
future research. First of all, more sub-objective functions should be added into our objective function, and the
functions should be derived from different knowledge. It
should obey not only physical laws, but also other theories, e.g., similarity. Furthermore, more convincing tools
should be provided for animators to synthesize motion.
Although we do not demonstrate evidence of motion
blending, the proposed approach appears to be convenient
for blending existing motion segments together. Motion

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

data can be seamlessly connected from the end of the ﬁrst
motion segment to the start of the second motion segment
according to the constraints deﬁned by the animator.

Acknowledgements
We would like to thank Andy Cousins for his help with
capturing and processing motion capture data.

References

[11] C. K. Liu, And Z. Popovic. Synthesis of complex
dynamic character motion from simple animations.
ACM Transactions on Graphics 21, 3 (July), pages
408-416, 2002.
[12] Z. Popovic and A. Witkin. Physically based motion transformation. In Proceedings of SIGGRAPH,
pages 11-20, August 1999.

[1] Y. Abe, C. K. Liu and Z. Popovic. Momentumbased parameterization of dynamic character motion.
In Proceedings of Eurographics/ACM SIGGRAPH
Symposium on Computer Animation. 2004.

[13] C. Rose, B. Guenter, B. Bodenheimer and M. Cohen. Efﬁcient generation of motion transitions using
spacetime constrains. In proceedings of SIGGRAPH,
pages 147-154, August 1996.

[2] A. Barclay, P. E. Gill and J. B. Rose. SQP methods
and their application to numerical optimal control.
Report NA 97-3, Department of Mathematics, University of California, San Diego.

[14] H. J. Shin, L. Kovar and M. Gleicher. Physical touchup of human motions. In Paciﬁc Graphics 2003 (Oct.
2003).

[3] A. Bruderlin and L. Williams. Motion signal processing. In Proceedings of SIGGRAPH, pages 97-104,
Los Angeles, California, August 1995.
[4] J. J. Craig. Introduction to robotics: mechanics and
control. Addison-Wesley Publishing Company, 1989.
[5] P. Faloutsos, M. Van de Panne and D. Terzopoulos.
Composable controllers for physics-based character animation. In Proceedings of SIGGRAPH 2001.
Computer Graphics Proceedings, Conference Series,
251-260.
[6] A. C. Fang and N. S. Pollard. Efﬁcient Synthesis of
Physically Valid Human Motion. In Proceedings of
ACM Transactions on Graphics, pages 417-426, July
2003.
[7] M. Gleicher. Retargetting motion to new characters.
In Computer Graphics, pages 33-42, July 1998. In
Proceedings of SIGGRAPH 1998.
[8] J. K. Hodgins, W. L. Wooten, D. C. Brogan and J. F.
O’Brien. Animating human athletics. In Proceedings
of SIGGRAPH, pages 71-78, Los Angeles, August
1995.

[15] S. Tak, O. Y. Song and H. S. Ko. Motion balance ﬁltering. Eurographics 2000.
[16] M. Unuma, K. Anjyo and R. Takeuchi. Fourier principles for emotion-based human ﬁgure animation. In
Proceedings of SIGGRAPH, pages 91-96, Los Angeles, California, August 1995.
[17] D. A. Winter. Biomechanics and Motor Control of
Human Movement. Wiley, New York, second edition,
1990.
[18] A. Witkin and M. Kass. Spacetime constraints. In
proceedings of SIGGRAPH, vol. 22, pages 159-168,
August 1988.
[19] A. Witkin and Z. Popovic. Motion warping. In Proceedings of SIGGRAPH, pages 105-108, Los Angeles, California, August 1995.
[20] K. Yamane and Y. Nakamura. Dynamics FilterConcept and Implementation of on-line Motion Generator for Human Figures. In proceedings of the
IEEE Transaction on Robotics and Automation. June
2003

[9] J. Laszlo, M. Van de Panne and E. Fiume. Limit
cycle control and its application to the animation
of balancing and walking. In Proceedings of SIGGRAPH, pages 155-162, New Orleans, Louisiana,
August 1996.
[10] J. Lee and S. Y. Shin. A hierarchical approach to interactive motion editing for humanlike ﬁgure. In Proceedings of SIGGRAPH, pages 39-48, Los Angeles,
July 1999.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

