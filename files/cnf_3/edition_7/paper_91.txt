Applying Visualisation Techniques in Novel Domains
Janet L Wesson
Department of Computer Science & Information Systems
Nelson Mandela Metropolitan University
Port Elizabeth, SOUTH AFRICA
{janet.wesson@nmmu.ac.za}
Abstract
The visualisation of large information collections is
a common problem which has been extensively
researched in many domains. Several application
domains still exist, however, where visualisation
techniques have not been adequately researched or
applied. The aim of this paper is to discuss research into
visualisation tools for two such areas, namely
genealogical information systems and network
application management. Genealogical information
systems are concerned with providing facilities for
storing and browsing family information. Network
application management is concerned with providing
facilities to manage the performance of network
application services. Whilst these two domains are vastly
different, the visualisation requirements are very similar.
This paper shows how the interactive visualisation tools
developed can be used to facilitate effective exploration
and browsing of this information.
Keywords--information
visualisation,
genealogical
information
systems,
network
application management, usability evaluation.

Exploring collections of information becomes
increasingly difficult as the volume of information
increases. Shneiderman’s Visual Information Seeking
Mantra provides design guidelines for dynamic
exploration of large information collections: Overview
first, zoom and filter, and details-on demand [2]. This
mantra is, however, only a starting point to
understanding how to design effective visualisations.
The type of data being visualised also has an impact on
the way the data is visually represented [3]. Many
visualisation tools deal primarily with one data type only
(e.g. temporal, multidimensional or hierarchical data).
Multiple view techniques, however, require that multiple
representations of the same information be presented in
multiple, coordinated views [4].
This paper discusses the design of two visualisation
tools for browsing genealogical information and
visualising
network
application
performance,
respectively. Shortcomings in existing visualisation
metaphors and tools are identified and solutions
proposed to overcome these.
The next section discusses the two application
domains, the type of information to be visualised and the
limitations of the existing systems.

1. Introduction

2. Genealogical information systems

Information visualisation (IV) is concerned with the
use of computer-supported, interactive visual
representations of data to assist with cognition and
identification of patterns [1]. Research into producing
interactive visual environments has resulted in a wide
range of visualisation tools which enable the user to
dynamically explore and analyse large collections of
information. These tools have been successfully applied
in several application domains, notably geographic
information systems, medical visualisation and network
visualisation. This paper is concerned with research into
applying visualisation techniques in two domains which
have not previously been extensively researched, namely
genealogical information systems and network
application management.

2.1 Genealogical information
Genealogical information systems (GIS) typically
contain large amounts of information about families and
relationships between family members. Typical
genealogical information comprises person information,
consisting of surname, first names, gender, dates and
places of birth, baptism, death and burial. Information
also needs to be kept for each marriage, including spouse
information and marriage details. Hierarchical
information also has to be kept about descendants
(children, grandchildren, etc.) and ancestors (parents,
grandparents, etc.) of every person. The information
about the descendants of a given person is sometimes
referred to as a family tree.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

2.2 WINGIS (PEGIS)
WINGIS is a genealogical information system (GIS)
which was developed at the Nelson Mandela
Metropolitan University (NMMU) - formerly University
of Port Elizabeth - for capturing genealogical
information. WINGIS currently contains information on
more than 550,000 South African people ranging from
1615 onwards. Searching and browsing information in
such a large database is obviously a problem, especially
when many people have the same or similar surnames.
WINGIS is a form-based system which allows users
to search for people in the database based on three
criteria, namely surname and names, date of birth or
unique ID number (Figure 1).

The results of the search are presented in a form
containing the current person, his/her spouse, parents and
children (Figure 2). This form displays information for
three generations, but only the first spouse and the eldest
child are displayed. In the case where there is more than
one spouse, the others can be accessed via scroll buttons.
The same applies to children, where only the first child is
displayed and the others can be accessed via scroll
buttons.
Navigation between the various people on the screen
is achieved by clicking on the desired person. This brings
the selected person into focus and the relevant
information for him/her is displayed in the surrounding
fields.
The search functionality provided by this system is
sufficient but insufficient information is displayed to the
user (three generations only). In addition, no family tree
is displayed making it difficult to visualise the family
relationships. Other GIS such as Brother’s Keeper [5]
display family trees, but these are static and no facility
exists to browse these dynamically.

Figure 1 Search interface in WINGIS

Figure 2 Search results displayed in WINGIS

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

3. Network application management

4. Related work

3.1 Application performance management

4.1 Visualising family trees

Application services form a fundamental component
of a network’s ability to operate efficiently. To perform
application performance management (APM) requires an
understanding of how an application is performing from
the user’s perspective. A key measure of this
performance is the response-time (delay).
The NMMU has an extensive switched network
infrastructure, which supports several LAN-based
application services that are distributed across different
VLANs. One of the key network applications is the
Integrated Tertiary Software (ITS) application, which
includes Student, Finance and HR systems. No existing
system exists, however, to visualise the performance of
these application services across the network.
Packeteer’s PacketShaper [6] was selected as the
network monitoring technology responsible for
measuring the delay metrics of ITS. PacketShaper
incorporates a response-time management engine for
measuring application delay components, which are
discussed in more detail in the next section.

Several techniques exist for visualising hierarchical
data including cone trees, tree maps and hyperbolic
browsers. A cone tree is an interactive 3D visualisation
technique for displaying large amounts of hierarchical
data by minimising the amount of screen space [7]. Trees
can also be represented using a tree map. A tree map
consists of a series of rectangles which are drawn for
each subordinate node in the tree [8]. Individual
rectangles can be encoded using colour to denote some
attribute. A hyperbolic browser is a technique whereby
an entire tree is kept within a circular area [9]. The
hyperbolic browser employs a form of distortion to keep
the data within bounds and to provide a focus and
context.
Family trees are hierarchical data structures but the
nature of the data is such that every person has two
parents. Thus existing design metaphors for hierarchical
data cannot be used. It was thus decided to develop a
new metaphor, called a ZoomTree, incorporating the key
features of zoomable interfaces and hyperbolic browsers,
and using distortion to display as much information in
one family tree as possible. Any specific person can be
moved to the centre of the family tree to display more
information as required.

3.2 Application delay metrics
Typical application delay metrics include the server
delay, network delay and total delay of an application
service:
x Server Delay: the number of milliseconds the
server uses to process a client’s request after it
receives all required data. The server delay is
the time after the server receives the last request
packet and before it sends the first response.
x

Network delay: the number of milliseconds
spent in transit when a client and server
exchange data. The amount of time the server
uses for processing a request is not included.

x

Total delay: the number of milliseconds
between a client’s request and receipt of the
response.
PacketShaper uses traditional two-dimensional bar
and line charts to display the delay metrics for a selected
VLAN (Figure 3).

4.2 Visualising network application performance
There are several tools in industry today that
monitor the performance of network applications,
including Network Vantage [10], SuperAgent and
ReportAnalyser [11]. A comparative analysis of these
systems was performed in terms of application delay
metrics, visualisation and interaction techniques and user
interface design. The major limitation identified was that
all these systems use traditional 2D graphs such as line
graphs and bar charts for displaying application delay
metrics. No interactive visualisation techniques are
provided for dynamic exploration and analysis.

5. Visualisation requirements
Shneiderman’s Visual Information Mantra was used
to identify the key tasks to be supported [2]:
x Overview: Provide an overview of the entire
collection

Figure 3 PacketShaper Graph for a VLAN

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

x

Zoom: Zoom into items of interest

x

Filter: Filter out items which are not of interest

x

Details-on-demand: Provide additional details
for a selected item

x

Relate: View relationships between items

x

History: Keep a history of previous user actions

x

Extract: Allow extraction of sub-collections

x

Change the focus to another person: Left-click
on the desired person. This will bring this
person to the centre of the screen and his/her
family information will be refreshed.

x

Pan left or right: Left-click on Pan left (<<) or
Pan right (>>) icons. This will result in the
selected child being enlarged and his/her
descendants being displayed.

x

Zoom in or out: Left-click on Zoom in or Zoom
out icons. This will result in more or less
information being displayed.

x

View detailed information: Left-click on View
Details icon.

6. Interface design
6.1 ZoomTree
An iterative approach was used to design the
ZoomTree interface. The final version of the interface
displays seven generations; the current person and
his/her spouses in the centre, the children, grandchildren
and great-grandchildren in the bottom section and the
parents, grandparents and great-grandparents in the top
section (Figure 4). Colour is used to indicate the different
spouses and their respective children. This layout was
also chosen because it closely resembles those used to
represent traditional hierarchical tree structures (Section
4.1).
Each generation is displayed using smaller boxes in
accordance with the hyperbolic browser metaphor. The
fact that some children or grandchildren do not have
descendants is indicated by a line underneath that
specific child or grandchild. Only the descendants for the
currently selected (highlighted) child, grandchild and
great-grandchild are displayed; the other descendants can
be viewed by panning left or right to select another child.
The tasks identified in Section 5 were implemented
using menus and direct manipulation. The user
interaction is described below:
x Display the ZoomTree for the current person:
Left-click on ZoomTree icon (Figure 2).

x Print family tree: Left-click on Print icon.
The ZoomTree interface has four levels of
information that can be displayed:
x Level 1: Surname, name and date of birth
x

Level 2: Surname, name, date of birth and death

x

Level 3: Surname, name, date and place of birth,
date and place of death

x

Level 4: Surname, name, date and place of birth,
date and place of baptism, date and place of
death, date and place of burial
At all stages of the interaction, the status bar at the
bottom of the screen indicates who is the current person
and the zoom level at which the tree is currently being
viewed.

Figure 4 ZoomTree interface (Zoom level = 1)

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

6.2 AppVis
An iterative approach was also used to design the
interface of the AppVis system. A multiple view
interface was designed [12], comprising a graphical view
and a coordinated textual view of the various application
delay components measured across the different VLANs
for a specified time period (Section 3.2). Three different
graphical views were designed, namely a network
overview, a subnet view and a trend analysis view.
A 3D star visualisation technique was used to
display a network overview of the total application delay
for each VLAN (Figure 5). Each node displayed on the
graph represents a specific VLAN. The distance from the
origin indicates the value of the associated application
delay. Threshold bands are displayed on the graph as
concentric rings to show the relative delay of each
VLAN in the network.
Filtering can be performed on the delay components
in the graphical view based on VLAN, delay component
(server, network and total delay), delay statistic (mean
and maximum delay) and time period. The textual view
displays the mean and maximum total application delay
for each VLAN in the graphical view.
The user can analyse and explore the graph
interactively by zooming, panning and rotating the graph
in its visualisation space. The user can also drill-down to
analyse the delay components of an individual VLAN by

clicking on its corresponding node to display a detailed
subnet view.
A 3D height map was used to display a subnet view
of application delay for an individual VLAN (Figure 6).
The colour-coded surface levels on the graph are used to
identify peak levels of application delay. Different colour
schemes can be defined or application delay levels added
or removed. Details-on-demand can be dynamically
obtained by selecting appropriate data points on the
graph. The graph can be filtered based on time period
including year and month.
A 3D radar graph was used to facilitate application
delay trend analysis. The trend analysis view displays the
server, network and total delay for a selected VLAN for
a given time period (Figure 7). Application delay can be
displayed for the days of a selected month or for the
months of a selected year.
The user can drill-down into an individual month to
analyse the application delay metrics in more detail,
obtain details-on-demand, zoom, rotate and pan the
graph. The graph can also be filtered based on delay
metrics, delay statistics, VLAN and time period.
An additional visualisation technique was proposed
for performing trend analysis using a linear trend
analysis. This graph displays the server, network and
total delay metrics for an individual VLAN using a 3D
linear area chart. The graph was added due to problems
experienced by users in performing trend analysis of
application delay using the radar graph.

Figure 5 Network overview in AppVis

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Figure 6 Subnet view in AppVis

Figure 7 Radar trend analysis view in AppVis

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

7. Evaluation

Conclusions

7.1 ZoomTree

This paper has discussed the application of
visualisation techniques to two novel domains, namely
genealogical information systems and network
application management. This research has highlighted
the importance of understanding common visualisation
requirements, whilst taking the specific requirements of
the different application domains into account.
Furthermore, this research has identified a new metaphor
for browsing family tree information, named ZoomTree,
which incorporates the key features of zoomable
interfaces and hyperbolic browsers. The results of the
usability evaluations conducted clearly show that the
interactive visualisation tools developed can be used to
effectively explore and analyse this information.

A heuristic evaluation of the ZoomTree interface
was conducted during design in order to identify any
potential usability problems. The main usability problem
identified was the problem of panning through a large
number of descendants. User testing was also conducted
after implementation to evaluate the users’ satisfaction
with the interface.
Six expert genealogical researchers were given a set
of tasks to perform, involving finding genealogical
information using the existing WINGIS system and the
ZoomTree interface. The user satisfaction was measured
using a modified version of the Questionnaire for User
Interaction Satisfaction (QUIS), with a five-point Likert
scale.
The mean satisfaction ratings for the different
sections were all above 4.5 out of 5 (>90%). This
indicates that the users were generally very satisfied with
the task support provided by the ZoomTree interface. In
particular, the users’ satisfaction with the interface
design (ȋ=4.67) and information visualisation (ȋ=4.63)
was very high.

7.2 AppVis
User testing was performed to evaluate the usability
of AppVis in terms of the effectiveness of the visual
representation and the interaction techniques and the
level of user satisfaction. Six network experts were
recruited for the purposes of this study. The effectiveness
of the visualisation was measured by determining the
percentage of tasks each participant could complete
based on direct observation.
The task script comprised six tasks, namely
importing application delay metrics; displaying a
network overview; displaying a subnet view; performing
radar and linear trend analysis; and outputting the graphs.
Tasks 1 and 6 had a mean completion rate of 100%
with all participants being able to import application
delay metrics and save the generated graphs. Task 2 had
the lowest mean completion rate of 72%. Some of the
participants found it difficult to drill-down into an
individual VLAN from the network overview. Task 3
had a higher mean completion rate of 78%, but some
users could not accurately rotate the subnet view. Tasks
4 and 5 had a mean completion rate of 79% and 83%
respectively as most of the participants could easily
perform trend analysis.
The level of user satisfaction was measured by
analysing the ratings given in the post-test questionnaire
using a five-point Likert scale. The mean rating for each
section was greater than 3.50 (70%). A mean rating of
4.30 (86%) was calculated for overall system
capabilities, indicating a high degree of user satisfaction
with the visualisation tool.

Acknowledgements
Acknowledgements are due to Craig Oosthuizen and
Justin Rademan, who developed the ZoomTree and
AppVis systems as part of their postgraduate research at
the NMMU.

References
[1]

Card, S.K., J.D. Mackinlay, and B. Shneiderman, eds.
Readings in Information Visualization: Using Vision to
Think. 1999, Morgan Kaufmann Publishers, Inc.: San
Francisco, California.
[2] Shneiderman, B., Designing the User Interface:
Strategies for Effective Human-Computer Interaction.
Third ed. 1998: Addison Wesley Longman, Inc.
[3] Shneiderman, B. The Eyes Have It: A Task by Data Type
Taxonomy for Information Visualization. In Visual
Languages 96. 1996.
[4] North, C. and B. Shneiderman, A Taxonomy of Multiple
Window Coordination. 1997, Univ. Maryland Computer
Science Dept.
[5] Steed, J., Brother's Keeper. 2004.
http://ourworld.compuserve.com/homepages/Brothers_K
eeper/.
[6] Packeteer, Response-Time Technology, Packeteer
Technical White Paper. 2002.
[7] Robertson, G.G., J.D. Mackinlay, and S.K. Card. Cone
trees: Animated 3D Visualizations of Hierarchical
Information. In CHI'91. 1991. New Orleans: ACM Press.
[8] Bederson, B.B. and J.D. Hollan. Pad++: A Zooming
Graphical Interface for Exploring Alternate Interface
Physics. In ACM Symposium on User Interface Software
and Technology. 1994: ACM Press.
[9] Lamping, J. and R. Rao. Visualizing Large Trees using
the Hyperbolic Browser. In ACM UIST '94. 1994. Marina
del Rey, California: ACM Press.
[10] Compuware, NetworkVantage: Isolate Network and
Application Performance Problems Quickly. 2003.
http://www.compuware.com.
[11] SuperAgent, NetQoS SuperAgent: Monitor Application
Response Times Across the Network. 2003.
http://www.netqos.com/solutions/superagent.
[12] Baldonado, M.Q., A. Woodruff, and A. Kuchinsky.
Guidelines for Using Multiple Views in Information
Visualization. In AVI 2000. 2000. Palermo, Italy: ACM
Press.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

