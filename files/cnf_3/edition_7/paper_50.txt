Using Games To Do Exploratory Experiments in Graph Comprehension
John Bovey
University of Kent at Canterbury, UK
j.d.bovey@kent.ac.uk

Abstract
The paper describes a project to set up a graphgame website as a platform for carrying out
exploratory experiments in graph comprehension. A
few potential games are considered with the Shannon
Switching Game being the most promising because of
the ease with which challenging game graphs can be
generated. Finally, the paper describes the
architecture of the software needed to support the site.

1. Introduction
Many real-life systems can be modelled as
collections of linked objects and can be visualised as
graph diagrams in which the objects are represented by
nodes and the links by lines joining the nodes.
Diagrams of this kind are widely used but there are still
open questions about the best way to present them. For
example: is it better to use a graph layout that
minimises edge crossings, or one that maximises node
separation; does it help to cluster similar nodes; do
some kinds of rendering work better than others? There
are also questions concerning the best way to add
motion to graph diagrams, for example:
There is strong evidence that graph diagrams which
contain occlusion can
be made more
comprehensible by adding motion [1] but we do not
know what is the optimum amount of motion to use,
or what kind of motion works best or how to
distribute it through the graph.
It should be possible to make graphs clearer by
exploiting our innate ability to extract information
about the structure of physical systems by seeing
them in motion. One way to do this would be to
make them move like physical systems – collections
of jointed rods, say.
People also have the ability to visualise structures
in three dimensions and it should be possible to
make graph diagrams more comprehensible by
laying them out in three dimensions and then
displaying a 2-dimensional projection with a small

amount of continuous motion that makes the 3dimensional structure visible (see [2] for example).
Since these are examples of empirical questions
about the way that human beings interpret graph
diagrams, the only way to resolve them is to do
empirical experiments in which we measure the success
of human subjects in obtaining information from
graphs displayed in different wqys.

2. Kinds of experiment
There are essentially two different kinds of graph
comprehension experiment, controlled experiments that
are designed to test a hypothesis, and exploratory
experiments that are designed to find promising
hypothesises. Controlled experiments are designed to
test a small number of well-specified hypotheses. A
controlled experiment ([3] for example) would be
appropriate, for example, if we want to determine
whether a particular kind of rendering makes graph
diagrams easier to comprehend. To carry it out, we
would recruit some volunteers, show them graphs,
some with and some without the rendering, and ask
them to perform a task that requires them to
comprehend the structure of the graph in some way.
We would then measure the success rates and
completion times for the different kinds of graph and
analyse them statistically to determine whether there
appears to be a significant effect. Although
experiments of this kind are effective when there is a
clear and testable hypothesis, they are too time
consuming and expensive (the volunteers normally
need some kind of payment) to be a useful way of
doing more exploratory experiments. For example, we
may have a range of different graph layout ideas, some
of which may work but most of which will not.
Alternatively, we may have a single method that seems
very promising but have a range of parameter values
that need testing. What is needed is an environment in
which we can carry out experiments cheaply but with
less control than would be needed to get significant
statistical results.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

3. Exploratory graph experiments
In order to do exploratory graph comprehension
experiments we need to provide an environment in
which people are motivated to use graphs and in which
we can monitor how well they do. We also need an
environment in which we can make frequent changes to
the way in which graphs are presented to users. One
kind (possibly the only kind) of environment that
fulfils these conditions is a game playing one. Games
are self-motivating and a person playing games on a
web site would expect to have their performance
monitored so they can be told how well they are doing.
Changes to the presentation of graphs would not need
to be explained since they would be interpreted as an
attempt to add variety and make the games more
interesting.
A game playing environment that can be used to
do exploratory experiments in graph comprehension
would need to have the following properties.
1. It would need to be readily accessible to a large
number of potential players. Fortunately, the
Internet and the web make this very easy to do.
2. The games would need to be fun to play but also to
require some level of graph comprehension to play
well. They also need to be available in a range of
difficulty: easy games for beginners and more
challenging games for more experienced players,
with a progression route so that players remain
challenged as they get better. If we use games that
can be won or lost then they should be potentially
winnable by a player who plays well enough.
3. It should be reasonably easy to create a playing
program that can serve as an opponent to the human
players. This is not essential, in theory, since it
would be possible to set up a graph-game playing
web site in which human players play each other
but that would add another level of complexity. The
game playing program does not need to be a very
strong player since its purpose is to provide a
challenge for the human players, most of whom will
be novices.

4. Some graph games
One potential source of graph games is to take
existing games and devise graph versions of them. This
is possible for most board games since the boards they
are played on are special cases of graphs that can be
generalised. For example, it would be possible to
devise a graph-based version of draughts in which the
two players start with pieces on a number of vertices
and take turns in moving pieces to adjacent vertices.
Similarly, Go or even Chess could be played on a
suitable graph. Although games of these kinds may be
worth trying in the future, they present problems for an
initial project. One problem is that it is not obvious
how to generate challenging but winnable games in a

range of difficulty, and another is that their complexity
makes it difficult to write a small game playing
program to serve as an opponent.
A family of graph games that are already known
and have been analysed are collectively known as the
Shannon Switching Game (REF). These are played on
a graph with two pre-selected endpoint vertices, and
the players play in turn with one trying to create a path
between the endpoints while the other tries to block the
path. There are two variants, the Shannon Switching
Game on vertices and the Shannon Switching Game on
edges (usually just called the Shannon Switching
Game), with the obvious difference that in the first, the
players play by claiming vertices and in the second
they play by claiming edges. The two variants of the
Shannon Switching Game are rather different in flavour
and in their susceptibility to analysis. The Shannon
Switching Game on Vertices is a generalisation of the
board game Hex, and it is known that the problem of
determining whether a given position is won for the
next player is PSpace Complete [4]. This does not rule
it out if there is a way to generate challenging but
winnable games in a range of difficulty but no such
game generator is known to the author. The Shannon
Switching Game on Edges, by contrast, is not NP-hard
and it is easy to generate graphs of any size that are
winnable by either side, but are not obviously so.

5. The Shannon Switching Game
The Shannon Switching Game (on edges) is
played by two players, traditionally called Short and
Cut. Short selects edges, trying to create a path
between the endpoints, and Cut removes edges that
have not been selected by Short. Obviously, this cannot
end in a draw – either Short succeeds in forming a path
or Cut succeeds in splitting the graph so that the
endpoints are in different components. The main result
on the Shannon Switching Game is by A. Lehman [5]
(but see [6] for a more accessible proof).
Theorem (A. Lehman): A Shannon Switching
Game is a forced win for Short, with Cut to
play first, if and only if the two endpoints are in
a subgraph that also contains two edge-disjoint
spanning trees.
That the existence of two edge-disjoint spanning
trees is sufficient for Short to win is easy fairly easy to
see. If Cut removes an edge from one tree then Short
simply has to choose an edge from the other tree that
reconnects the first tree. The two trees now share just
one edge, but that belongs to Short and cannot be
removed by Cut. This can be repeated until there is
only one tree, with all its edges belonging to Short.
The relevance of Lehman's theorem is that it
provides us with a way to generate Shannon Switching
Game's of any size that are neutral in the sense that
they are winnable by which ever of Cut or Short plays
first. This is a desirable characteristic of games that

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

will be played against the computer. They need to be
winnable by the human player, at least in principle, but
still present a challenge. Games which are winnable by
the first player but only if she does not waste any
moves (assuming optimum play by the opponent). Of
course, this does not guarantee a challenging game
since each move could be obvious, or even forced, but
our experience is that this does not happen in practice
The way to generate a neutral Shannon Switching
Game graph with n vertices is:
1. Generate a graph with two edge-disjoint spanning
trees and no other edges.
2. Remove one edge and use its endpoints into the
pre-selected endpoints for the Shannon Switching
Game.
It is easy to see that this is a win for Short if she
plays first since we can pretend that Cut played first
and removed the missing edge – so Short can win by
Lehman's theorem. To show that Cut can win if she
plays first, we have to show that there cannot be a
subgraph that contains the endpoints and two edgedisjoint spanning trees. This can be seen to be
impossible by simple edge-counting. The full graph, G,
has n vertices and 2 n 3 edges (2 trees less an edge).
Let H be a subgraph of order m containing the
endpoints and two edge-disjoint spanning trees. Then
each tree intersects G H in a forest of subtrees but,
since the endpoints are in H, each subtree in G H
also has at least one edge joining it to a vertex in H.
Hence, for each of the initial spanning-trees there must
be n m edges that are not in H. This means that the
total number of edges in H is at most 2 m 3 which is
not enough for a pair of edge-disjoint spanning trees.
Figure 1 shows a graph with 8 nodes and two edge
disjoint spanning trees while Figure 2 shows the same
graph with one edge removed and its endpoints marked
as game endpoints.

Figure 1: A graph with 2 edge-disjoint
spanning trees

Figure 2: Neutral Shannon Switching
Game graph

6. A Graph Game Platform
An effective graph game system has to balance a
number of conflicting constraints. Each player needs to
be given an interesting and challenging sequence of
games to play, with feedback about how well they are
doing, and increasing difficulty as they get better, but
we also need results that will show whether one kind of
graph presentation is easier for players to comprehend
than another. This means giving each player a balance
of different graph presentations.
We have developed a first version of a platform
for carrying out graph comprehension experiments into
the effects of different kinds of graph movement. This
consists of the following components:
A Java applet that can display graphs moving in
different ways and can play the Shannon Switching
Game, either as Cut or as Short. This is shown in
figure 3. The applet is compatible with the standard
Microsoft Java run time environment and so can
run in any Java enabled web browser.
A Mysql database with tables containing pregenerated graphs in a range of complexity, names
of players and logs with information about which
games each player has played and whether they won
or lost.
A collection of cgi scripts to load the game-playing
applet, allow the applet to load new graph games
and to log the results of completed games.
A strategy module that decides which game each
individual player should play next based on log
information about the games they have won and lost
so far and the current experiment.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

techniques that will be useful in a range of contexts.
Graph games seem to provide a promising tool for
testing and screening potentially useful layout
techniques if we can get the game playing structure
right. After all, we only need to provide games that a
tiny proportion of internet users will find interesting for
a while before they move on, and we will have a huge
potential test population.

8. References
[1] John Bovey, Florence Benoy, and Peter Rodgers, “Using
Games to Investigate Movement for Graph Comprehension”,
Advanced Visual Interfaces 2004 (AVI04), ACM, pp. 71-79,
May 2004
[2] C. Ware and G. Frank, “Evaluating Stereo and Motion
Cues for Visualizing Information in Three Dimensions”,
ACM Transactions on Graphics, 15, (1996), 121-140

Figure 3: The game applet running in the
Mozilla browser

7. Concluding remarks
The premise on which this project is based is that
there are better and worse ways to display graphs and a
graph display technique that helps with comprehension
in one context will also help in other contexts.
Assuming that is true, a test bed for trying out graph
display ideas should be able to help us to discover

[3] H.C. Purchase, R.F.Cohen and M James, “Validating
Graph Drawing Aesthetics”, GD95, LCNS 1027, pp. 435446, 1995
[4] S. Even and R.E. Tarjan, “A Combinatorial Problem
which is Complete in Polynomial Space”, Journal of the
ASM, 23, (1976), 710-719
[5] A. Lehman, “A Solution of the Shannon Switching
Game”, Journal of the Society for Industrial and Applied
Mathematics, 12, (1964), 687-725
[6] Richard Mansfield, “Strategies for the Shannon
Switching Game”, American Mathematical Monthly, 103,
(1996), 250-252

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

