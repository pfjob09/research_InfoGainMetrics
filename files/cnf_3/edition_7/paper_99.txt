IPMatrix : An Effective Visualization Framework for Cyber Threat Monitoring
Kazuhiro Ohno , Hideki Ko
K ike , Kanba Koizumi
Graduate School of Information Systems, University of Electro-Communications,
Graduate School of Media and Governance, Keio University
ohno@vogue.is.uec.ac.jp , koike@acm.org , koizumi@sfc.keio.ac.jp

Abstract
An effective Internet cyber threat monitoring system detects cyber threats using network sensors deployed at particular points on the Internet, statistically analyses the time
of attack, source of attack, and type of attack, and then visualizes the result of this analysis. Existing systems, however, simply visualize country-by-country statistics of attacks or hourly changes of attacks. Using these systems,
it is difﬁcult to understand the source of attack, the diffusion of the attack, or the relation between the target and
the source of the attack.
This paper described a method for visualizing cyber
threats by using 2-dimensional matrix representation of IP
addresses. The advantages of this method are that: (1)
the logical distance of IP addresses is represented intuitively, (2) Internet address space is visualized economically, (3) macroscopic information (site level) and microscopic information (local level) are visualized simultaneously. By using this visualization framework, propagation
of the Welchia worm and the Sasser.D worm are visualized.
Keywords— intrusion detection, information visualization,
information security, computer virus, Internet worm

1 Introduction
In recent years, cyber attacks such as Internet worms or
DDoS (Distributed Denial of Service) attacks are serious
concerns in our society. These large-scale cyber attacks
can stop electronic mail systems and web services, which
are important infrastructures of our society, and can affect
our economic activity and public services. In order to minimize the damage caused by cyber attacks, it is important
to monitor such attacks in real time and to take countermeasures against predictable attacks.
To cope with this, a variety of cyber threat monitor systems that aim at early detection and trend analysis of the
cyber attack are in use [1, 2]. These systems, in general,
use network intrusion detection systems (NIDS) as sen-

sors, statistically analyze huge amounts of log data collected from the sensors, and then ﬁnally visualize its result. As visualization methods, country-by-country statistics and time-transition of the number of attacks are often
used. It is, however, difﬁcult to understand the IP address
of the attacker, the spatial diffusion of the attacks, or the
relation between the attacking site and its target.
This paper proposes a visualization framework that
would be effectively used in a cyber attack monitoring system. Particularly, we are focusing on automated attacks
such as Internet worms or network scans and how this
framework can be applied to real attack data captured by
our network sensors.
The next section of this paper discusses how to effectively visualize the propagation of worms by focusing on
algorithms of propagation. Section 3 describes the system we developed. Section 4 shows visualizations of the
Welchia worm and the Sasser.D worm by using real data
captured by our network sensors. Section 5 discusses advantages and limitations of our method. Section 6 contains
our conclusion.

2 Discussion on Visualization Method
2.1 Propagation Algorithms of Worms
Algorithms of the propagation of worms are analyzed
in detail by virus software vendors such as Symantec [6].
According to their analysis, the following target selection
methods are commonly used in propagation.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

1. random scan
Target IP address is randomly scanned. This algorithm is inefﬁcient because it has to scan all IP addresses space(32-bit). CodeRed and SQL Slammer
used this algorithm.
2. local scan
This algorithm ﬁxes the higher 8 bits or 16 bits of IP
addresses, and then increments the lower bit sequentially. When the sequential search is ﬁnished, it incre-

ments the higher address by one and performs a sequential search of the lower bit again. This algorithm
is quite efﬁcient.
Welchia and Sasser.D used both (1) and (2), and therefore their propagation methods are very efﬁcient .

2.2 Visualization Method
As we described previously, cyber attack monitoring
system use network intrusion detection systems (NIDS or
IDS) as sensors to detect attacks by worms. Since the IP
address of the attacking site is recorded in IDS logs, we
can identify the origin of the attack. The world map visualization used at Dshield [1] and Internet Storm Center [2]
shows country-by-country statistics of such attacks.
It is, however, impossible to know which IP address
is attacking the victim just by seeing such country-bycountry statistics. What is worse, geographical relationship
does not affect the direction in which the worm’s infection
spreads. In other words, the site geographically close to
the infected site is not necessarily the next target. From
the viewpoint of the worm’s target selection algorithm, the
logical distance between IP addresses is much more important.
When visualizing IP address space, another factor to be
considered is the physical limitation of display space. For
example, when we want to visualize all 32-bit IP addresses
a e
elements to be displayed. Since
at one time, we hav
the minimum unit for displaying one element is a pixel,
pixels are required. Even if these elements are laid out in
a rectangle, which is the most economical layout in 2-D,
resolution is required1 .
Let’s think about the algorithm of a a worm’s propagation again. Recent large-scale worms such as Welchia
and Sasser.D use a local scan that ﬁxes higher bits and
searches lower bits sequentially. The time that is necessary to scan every lower bit is quite short, and therefore the
worm spreads inside this site rapidly. That is, if a worm’s
attack from a certain site is observed, it is highly possible
that the worm has already spread inside that site. Therefore, from the viewpoint of cyber attack monitoring, it is
not necessary to visualize the exact IP address of the attacking computer, but is usually enough to visualize the
higher 16 bits of the IP address, which represent a certain
site. On the other hand, in order to know the infection situation inside a certain site, it is enough if the lower 16 bits
are visualized.

2.3 IP Matrix
Based on the discussion above, we decided to use 2-D
matrix representation of IP addresses as shown in Figure 1.
In the ﬁgure, the vertical axis indicates the highest 8 bits
1 This is an overestimation because there are many IP addresses that
are not used

of the IP address, and the horizontal axis indicates the next
8 bits. In the same way, we use another 2-D matrix where
the vertical axis indicates the 3rd octet of the IP address,
and the horizontal axis indicates the 4th octet. The former
is used for site-level monitoring, and the latter is used for
local-level monitoring.
Figure1 is an example in which Welchia was observed
by the matrix from a site of IP address 130.152.x.x.
Welchia performs a local scan ﬁrst, increments the second
octet of the IP address, and performs a local scan again.
Therefore, the computers in 130.153.x.x (site A) have a
high possibility of encountering the damage of Welchia.
On the other hand, since 129.152.x.x (site B) is not in a
direct route of a local scan of Welchia, the possibility of
encountering damage by Welchia will be lower than that
of site A. Thus, IP Matrix can be used to judge IP address
proximity intuitively.

Figure 1: A matrix layout of IP Address.

3 Implementation
3.1 Log collection
Our research group started monitoring cyber attacks in
May 2003. Currently ﬁve network sensors are deployed in
Japan (Fig. 2 ).
In order to capture cyber attacks, a network-based intrusion detection system Snort [13] is being used. For the
signature base, all rules ﬁles in Snort ver. 2.1 are included.
Figure 3 shows the detail of a central log server. The
logs collected at each network sensor are automatically
sent hourly to the log server.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

3.2 Visualization
3.2.1 System overview

Figure 2: Cyber Attack Monitor System.

Figure 4 shows a snapshot of IP Matrix’s visualization of
the log information collected by the log server. The window is separated into two panes. The left pane is the sitelevel IP Matrix, and the right pane is the local-level IP Matrix.
In the site-level IP Matrix, the higher 16 bits of the
source of attack is used and is displayed as one pixel. The
local-level IP Matrix visualizes the situation of the local
network where the network sensor is deployed.
This system obtains attack information from the log
server periodically. The obtained information is displayed
using pixels on the matrix. The color of the pixel indicates
the type of attack.
Since one pixel is sometimes too small to be realized
when the attack occurs, we use a colored grid as seen in
Figure 4. The color of each grid indicates the most frequent
attack to the sites in the grid.
In addition, there are two histograms shown on the left
side and the bottom of each IP Matrix. These show the
number of attacks occurring at each address block.
3.2.2 Interactions

Figure 3: Log server.

First, Snort alerts obtained at each sensor are sorted and
uniﬁed by time. Then, the information used in the visualization is extracted from the uniﬁed data. The information
used in the visualization is: (1) date, (2) ID of network sensor, (3) alert ID, (4) alert name, (5) source IP address, (6)
source port number, (7) destination IP address, (8) destination port number, (9) the number of times the same alerts
are generated continuously.
In the log server, Apache Web server ver. 2.0.40 is running and communicating with the visualization system using CGI(Common Gateway Interface) programs. Each network sensor transmits the data to the log server using an
HTTP protocol that we have deﬁned. Therefore, log information can be obtained even in an environment equipped
with a ﬁrewall, such as in a typical ofﬁce network.

One of the important interactive capabilities of the system
is animation. The system displays multiple attacks during
a certain period of time simultaneously on the screen. This
displayed information is updated periodically. Users can
choose the update time such as one month, one day, and
one hour. When the update time is set to one month, it
is useful to analyze the worm’s activity from its birth to
extinction. On the other hand, when the update time is set
to one hour, it is useful to monitor short-range scans by the
worm in almost real time.
Another interactive capability is the user’s ability to display detailed information about the attack by using the
mouse. When the user clicks a pixel that indicates a certain
attack, the details of the attack are displayed at the bottom
of the window. A user can also select multiple pixels by
dragging the mouse and can then see all the information
regarding these attacks. The user can also control the displayed information by selecting on the control panel a focusing attribute such as date, ID of network sensor, and the
other attributes listed in Section 3.1.

4 Examples
4.1 Welchia
Figures 5 and 6 show the infection situation of Welchia,
which appeared on August 18, 2003. The ﬁgures show
how rapidly it spread over the world, resulting in 3,377
incidents the following day and reaching 148,825 incidents
in the month of December.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Figure 4: IP Matrix.

Figure 5: Infection of Welchia (1).

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Figure 6: Infection of Welchia (2).

Figure 7: Infection of Sasser.D.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

Welchia was programmed to disappear on January 1,
2004, but Figure5 shows that Welchia has appeared after
that date and is still alive. Virus researchers have suggested
that its failure to disappear is partially because some systems have not rebooted since January 1, 2004.
Welchia uses a dictionary to select targets. The dictionary is a list of a popular ﬁrst octets of IP addresses, such
as 61, 202, 203, 210, 211, 218, 219, and 220. Welchia
uses these numbers to decide the ﬁrst octet of the target IP
address.

unused IP addresses
As we can see from the visualization, there are many
unused IP addresses, and the display space is used
wastefully. To use display space economically, some
visualization techniques should be applied. However,
it is not appropriate to eliminate non-existent IP adf om the dedresses because there could be attacks fr
cepted IP addresses. Moreover, a
matrix
representation represents the position of each IP address so that it can be intuitively understood.

4.2 Sasser.D
Figure 7 shows the distribution of Sasser.D, which appeared on May 3, 2004. We ﬁrst observed the attack on
May 7. It is visually clear that the worm was spreading
over the Internet. Even though the infection method was
similar to that of Welchia, the number of infected sites was
smaller than in the case of Welchia. Virus researchers reported that one of the reasons for this was that people realized the importance of applying a security patch after the
disaster of Welchia. Many systems had already had security patches applied, and therefore Sasser.D infected a
smaller number of computers.
Another reason for the lower number of attacks was the
difference in the port number used for intrusion. Welchia
used port 135 for intrusion. Since this port is always listed
in the Microsoft Windows environment, there was a high
possibility of doing damage. On the other hand, Sasser.D
used port 445. Since this port is not necessarily always
open, there was less damage than in the case of Welchia.

limitation of expressiveness
Currently our system represents one site by one pixel.
It can just show existence of the attack and add some
information using colors. To address this issue, displays with higher resolution could be used. For example, if
pixels are assigned to a site,
resolution is required. The currently available SXGA
monitor has such resolution.
mail virus
This paper focuses on the worms using automatic
scan. There are other type of viruses that use other
channels for infection. For example, in the case of a
mail virus that is attached to electronic mail, the next
target is selected by using the user’s address book, and
these addresses have no relation to IP addresses. In
this case, IP Matrix is not used for prediction, but it is
still helpful for understanding security trends in cyber
space.

5 Discussion
5.1 Advantages
One of the advantages of our visualization framework
is that it is possible to visualize IP address space economically. In this framework, we used a matrix representation
of the higher 16 bits of IP addresses and that of lower 16
bits. This helps to economically visualize site-level monitoring and local-level monitoring on a physically limited
display space without showing unnecessary IP addresses.
The second advantage is that it is possible to visualize
intuitively the proximity of an attack by comparing IP addresses. In many cyber attacks, the IP address is used for
propagation. In our system, the distance between the attacker and the victim can be measured by seeing the position of the attack on the matrix. Therefore, the user might
be able to prepare for the attack before the attack strikes.
For example, the propagation of Welchia is represented as
a horizontal line on the matrix. If administrators ﬁnd their
site is on the extension of the line, they might be able to
take appropriate actions before the attack reaches that IP
address.

5.2 Limitations
The following are issues in our system.

5.3 3-D Visualization
Since our system displays attack information on 2-D
matrices, the number of attacks at each point is not clear.
However, the number of attacks is important and it should
be visualized implicitly. In order to solve this issue, we
experimentally developed the 3-dimensional version of the
IP Matrix, which is called IP Matrix 3D.
Figure 8 shows a screen shot of IP Matrix 3D. This system arranges multiple 2-D IP Matrices in layers. In each
layer, one of the following four attributes is assigned to the
height direction. (1) the number of attacks, (2) degree of
attack propagation, (3) the type of attacks (Snort alert ID,
and (4) the operating system and its version.
Moreover, the attack information of all layers is projected on the bottommost layer.
There are two different kinds of arrangements in IP Matrix 3-D as shown in Figure 9. In Figure 9(a), each layer
illustrates the statistical data for the same attack at each
network sensor. This is used to compare the same attack at
different locations. In contrast, in Figure 9(b), each layer
illustrates statistical data for different attacks at the same

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

administrators might be able to predict when their site will
be attacked.

5.5 Related Work

Figure 8: IPMatrix-3D
network sensor. This is used to compare different attacks
at one location.

Figure 9: Arrangement of IP Matrix to height direction

5.4 Toward security forecast
One of the important challenges in cyber attack monitoring is prediction of attacks. If the attack is predicted, the
damage of the attack could be minimized. Although IDS
can detect attacks in real time, it cannot predict the attacks.
On the other hand, our system might be used for prediction, because the user can understand the spatial diffusion
of attacks as well as their transition in time. As we described previously, recent worms use a random scan and
A local scan. When one site is infected by a worm, it is
highly possible that its logical neighborhoods are the next
targets. This infection pattern will be visually shown as
percolation in our system. By utilizing this visual pattern,

As we described previously, a variety of cyber attack
monitor systems are in service today [1, 2]. They are
providing information on cyber attacks using country-bycountry statistics visualization or time diagrams.
One Internet visualization project is being done in
CAIDA (Cooperative Association for Internet Data Analysis) at UC San Diego Supercomputer Center [7]. These
researchers developed some interesting visualization systems such as Skitter [8]. Particularly their work on visualizing IPv4 address space utilization [9] should be noted.
They visualized IPv4 address space as a
2-D
matrix. Although their visualization looks very similar to
ours, the layout algorithm is different. For example, they
represent 24-bit address information as one pixel, while we
represent 16-bit address information as one pixel. Also we
used 2 matrices, site-level matrix and local-level matrix.
What is more important, CAIDA’s visualizataion focuses
on the connectivity of CIDR(Classless Inter-Domain Routing) which are represented as pixels. In contrast, our system focuses on security information. Also, it is important
for a monitoring system that the visualization ﬁts in the
screen space without scrolling.
The SIFT (Security Incident Fusion Tools) project visualizes security information. NVisionIP [11] visualizes
both the transfer information and the connection information in a small-scale network. VisFlowConnect [12] visualizes trafﬁc between an internal network and an outer
network using a line. This system focuses on a local area
network and is not appropriate for use in large-scale network monitoring.
Our research group has developed many visualization
systems for computer security. Tudumi [14] visualizes
connection to a particular server in one 3-D visualization
by taking several logs (syslog, sulog, wtmpx, etc.) as input. In Tudumi, the connecting hosts are categorized by
network domain and displayed as a stack of circles. It does
not have real-time monitoring capability. SnortView [15]
visualizes Snort logs using a time-diagram. It shows each
attack as an icon whose shape and color indicate the type
and priority of the attack. It overlays a histogram of the attack on each icon, which helps to avoid overwhelming the
screen large numbers of the same icon.

6 Conclusion
This paper proposed a visualization framework for a cyber attack monitor system. Based on the framework, the
visualization system named IP Matrix was developed. IP
Matrix can visualize a large number of IP addresses economically. Also, it can visualize the logical proximity of

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

IP addresses, which is important in worm propagation algorithms.
We are currently planning to increase the number of
sensors and deploy them in appropriate positions of cyber
space.

References
[1] Distributed
Intrusion
http://www.dshield.org/

Detection

System,

[14] Tetsuji Takada, Hideki Koike, Tudumi: Information Visualization System for Monitoring and Auditing Computer Logs, Proc on Information Visualization
(IV2002), IEEE/CS, pp.570–576, 2002.
[15] H.Koike, K.Ohno, SnortView: Visualization of Snort
Logs, Proc. of Visualization for Computer Security
Workshop (VizSEC’04), 2004.

[2] SANS Internet Storm Center, http://isc.sans.org/
[3] Brent N. Chun,Jason Lee, Hakim Weatherspoon, Netbait: a Distributed Worm Detection Service, Intel
Research Berkeley Technical Report IRB-TR-03-033,
2003.
[4] myNetWatchman - Network Intrusion Detection and
Reporting, http://www.mynetwatchman.com/.
[5] Symantec DeepSight Threat Management System,
http://enterprisesecurity.symantec.com/products/
products.cfm?ProductID=158&EID=0.
[6] Symantec Corp., http://www.symantec.co.jp/
[7] Cooperative Association for Internet Data Analysis(CAIDA), http://www. caida.org/
[8] AS Internet graph,http://www.caida.org/analysis/topology/
as core network/AS Netwo rk.xml
[9] IP v4 Address Space Utilization, http://www.
caida.org/outreach/resources /learn/ipv4space/
[10] Security
Incident
Fusion
Tools
http://www.ncassr.org/projects/sift/

(SIFT),

[11] Kiran Lakkaraju, Ratna Bearavolu, and William Yurcik, NVisionIP - A Trafﬁc Visualization Tool for Security Analysis of Large and Complex Networks , International Multiconference on Measurement, Modelling, and Evaluation of Computer-Communications
Systems (Performance TOOLS) , 2003.
[12] Xiaoxin Yin, William Yurcik, Yifan Li, Kiran
Lakkaraju, Cristina Abad, VisFlowConnect: Providing Security Situational Awareness by Visualizing Network Trafﬁc Flows, Workshop on Information Assurance (WIA04) held in conjunction with the 23rd IEEE
International Performance Computing and Communications Conference(IPCCC 2004) , 2004.
[13] M. Roesch, Snort - Lightweight Intrusion Detection
for Networks, Proc. of the 1999 USENIX LISA conference, 1999.

Proceedings of the Ninth International Conference on Information Visualisation (IV’05)
1550-6037/05 $20.00 © 2005 IEEE

