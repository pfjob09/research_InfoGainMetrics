12th International Conference Information Visualisation

No going back: An Interactive Visualization Application for
Trailblazing on the Web
Christopher Power1, Ian McQuillan2, Helen Petrie1, Peter Kennaugh1,
Mark Daley3, Geoff Wozniak3
1
Department of Computer Science University of York, York, UK YO10 5DD
2
University of Saskatchewan Saskatoon, Saskatchewan, Canada S7N 5C9
3
Department of Computer Science University of Western Ontario London, Ontario, N6A 5B7 Canada
{cpower@cs.york.ac.uk, mcquillan@cs.usask.ca, petrie@cs.york.ac.uk, pck500@cs.york.ac.uk,
daley@csd.uwo.ca, wozniak@csd.uwo.ca}
what pages are accessible in the browser through its
interface [6].

Abstract
This paper presents the design of a new web browser,
the Tree Trailblazer, which allows users to browse the
web while maintaining a visual record of their
exploration path, or trail, through the information space.
This design enhances the backtracking aspects of web
browsing over current designs by providing visual cues
regarding the pages related to the page being viewed,
providing users with an understanding of their position in
the trail. This design also helps users blaze new trails off
a page by allowing them to open previews of pages off of
the currently viewed page.

In this paper the design of a new web browser, the
Tree Trailblazer, is presented. This browser supports a
user by maintaining a complete record of their trail
through the web. Using this information, the design
enhances the backtracking activities of users by providing
them with a visualization of the underlying browsing tree
surrounding the current active page of interest, giving the
users context regarding where he/she is in the information
space.
This paper begins with a discussion of the common
problems, and their solutions, that are common in web
browsing activities. After discussing the scenario based
design process for the Tree Trailblazer, it is related to
previous theoretical and user evaluation results to
evaluate its soundness.
With this established, the
formative user evaluation of the Tree Trailblazer is
discussed in terms of the advantages and disadvantages of
its design.

The scenario based design process that was used to
construct the browser is discussed in conjunction with the
initial prototype implementation. A formative user
evaluation of this prototype showed this browser design to
be very easy to learn and highly usable, with particular
attention being paid to aspects of the tree visualization.
Keywords: Web browser, interactive trailblazing, user
evaluation, thumbnail, backtracking, hierarchy, direct
manipulation, trail visualization

1

2

Introduction

2.1

The web has become a fixture in every day life. With
more people spending increasing amount of time surfing
every day, it is important that they be able to efficiently
and effectively navigate the web.

Trails

The web was originally envisioned to provide users with
the abilities to navigate between pages on a variety of
topics and understand connections between pieces of
information [3, 23, 25]. In the process of this navigation,
users leave a path through the information, a trail, space
that can be backtracked over and, in some cases, retraced
at a later time.
There have been some designs available using
trails that largely rely on the trails being pre-authored.
Glynn et al [11] designed an add-on to a browser, called
Blazer, which augments the web through user annotation
of trails. In this way, if users re-visit a page on a trail then
they will see their annotations in addition to it. The
authors discuss how such trails can be reused in
educational settings by having students annotating their
own trails and then sharing the trails with others. Thus,
the trails are authored by one user, and used by others in

In order to facilitate this, web browsers must support
users in exploring new paths through the information
space, as well as retracing the trail of pages that they may
have already encountered during a browsing session.
Current browsers support this through the use of Back and
Forward buttons, as well as a mix of history and
bookmarking activities.
However, it has been long known that users do not
use history extensively during their browsing [29], and
that there are fundamental problems with users confusing
their own mental models of their trails in comparison to

1550-6037/08 $25.00 © 2008 IEEE
DOI 10.1109/IV.2008.64

Previous Research

133

subsequent sessions. This type of pre-authoring has the
advantage that the users know where to go next, thus
avoiding the chance of a user getting lost on the web. In
contrast, Nicol et al. [25] designed a solution called
Footsteps that maintains a pre-defined tour through a set
of documents, but allows users to browse other elements
of the web that are not on the tour.
Current browsers facilitate the backtracking aspect
of trails, however within a given session the retracing of
trails can be difficult given the nature of the Back and
Forward button design, with much of the trail being lost
during exploration. In addition to this, the process of
extending a trail, or trailblazing, is limited to creating
separate windows or tabs.

2.2

are open within a single browser window. Typically, for
each inactive tab, one can see a title of the page giving
some contextual information about which web page is
associated with it to aid in screen scanning tasks by users.
Each tab has its own Back and Forward stacks
associated with it, and as such users can browse the pages
associated with the active tab while not affecting any of
the inactive tabs.
When interacting with a tabbed browser (or a
browser with multiple windows), users may open a new
tab to some pre-assigned default page or they can select a
link on the page in the active tab and a have new tab
created with the target web page associated opened within
it. With this second scenario, there are two possibilities:
the browser may remain active on the original tab, or the
new tab will be made active.

Back/Forward Buttons

All browsers have Back and Forward buttons. The
functionality of both buttons can be characterized by a
stack data structure. As users traverse the Web by
selecting or specifying web pages to visit, the new page is
displayed and pushed on the top of the Back stack. When
the Back button is selected, the top of its stack is popped
and pushed on to the Forward stack, with the new top
page of the Back stack being displayed as the current
active page. The reverse of this occurs with the Forward
button. An important difference in the behavior of the
two buttons is that as soon as users select or specify a new
web page through a control other than these buttons, the
forward stack is discarded and will remain empty until the
next time the Back button is selected.
The need for good re-visitation mechanisms is
clear, with Tauscher and Greenberg [29] reporting that
58% of pages viewed are revisits, and Cockburn,
Greenberg, McKenzie et al. [6] reporting numbers as high
as 80% (with a 29% chance that the next URL to be
visited has been visited previously within the last six
pages). Empirically the Back button was found to
comprise over 30% of navigational acts [12].
In spite of the popularity of this two-button design,
it can create confusion with users. In the 10th GVU
WWW User Survey [13], 16.6% of 3,291 participants
described one of the biggest problems with web usage to
be not being able to return to an already visited page.
Cockburn and Jones’ [6] work with eleven computer
professionals supports these findings.
There have been many alterations and extensions
to the Back/Forward button design proposed in the
literature. Greenberg and Cockburn [12] present three
variations to the buttons in an attempt to present a
complete history of the browsing session. Other work has
been conducted to use recency models, including
integrating back/forward with history and bookmarks [5,
18].

2.3

2.4

Alternate Web Visualizations

Kandogan and Shneiderman [18] created the Elastic
Windows Web Browser, which browses the web and
displays pages hierarchically. With this multi-window
browser, users open new pages within the border of the
parent window, using half of the original space. Although
the windows sizes are exponentially smaller with each
level of the hierarchy, the ability to maximize and restore
the size of the smaller windows is provided. In this
application, the ability to have multiple levels open
simultaneously allows users to visually switch between
different levels quickly. Similarly, Khawaja et al [19]
designed the Zoomable Browser that operates similarly,
with each child web page in its own browsable frame. A
second panel displays a hierarchy of the browsing session
using titles in a tree. Bederson, Hollan et al [2] also
proposed a zooming web browser that shows hierarchies
of visited web pages using two different presentations.
The browser extension of WebView, was designed
by Cockburn et al [5] to provide an additional window
allowing users to browse the history of their sessions. For
every page users visit, WebView captures a thumbnail of
the site.
There are two views available for this
visualization. The first is a hierarchical view
demonstrating the nesting relationships between the
storage locations of pages. This enables users to see
context around their desired page, the second is a recency
list. In each of these, when users select a thumbnail, the
page appears in the viewing area. A similar feature was
also used in the Zoom Browser [15] (not to be confused
with the Zooming Web Browser [2]), which allows a user
to flip through lengthy web pages with thumbnails
containing one screen of information at a time.
Ayers and Stasko [1] presented a browser
extension which augmented browsing with a graphic
history of the session, providing a hierarchical view of the
pages visited. This was presented using thumbnails and
titles for each page. Similarly, the browser companion
application PadPrints by Hightower et al [14] provides a
history panel side-by-side with the browsing area. This
application has zoomable thumbnail nodes allowing users

Tabbed/windowed browsing

In order to keep multiple web pages open simultaneously,
current browsers can have multiple tabs (or analogously,
multiple windows). Tabs form a queue of web pages that

134

to control how much context about the page they can
view. Gandhi and Kumar also presented a zoomable,
hierarchical history panel in the Domain Tree Browser
[10]; however, it organizes a browsing session into
multiples trees, one for each visited domain.
For browsing trails of pages, the WebScout [23]
browser provides a temporal or hierarchical representation
for each trail that starts and ends with the user manually
entering a new URL, or selecting a bookmark. Finally,
the Trailblazer [3] web browser was designed to provide a
visual history of users’ browsing sessions. Regarding the
use of trees for visualization, Lamping and Rao et al. [21,
22] provide a number of design factors for hyperbolic
trees, in particular the use of animated transitions and
preserved orientation that are valuable for the design
discussed in this paper.

3
3.1

user could complete their intended actions on page w
(e.g. reading an article) and close the tab/window and
return to the page from which it was opened.
c.

The problems discovered through the scenarios about
current browsers are consistent with reported problems of
browsers since the early days of the web. The key
problem is users becoming disoriented while exploring
connected web pages, in particular while backtracking
through a previously explored trail.

Tree Trailblazer

In browsing behaviors (a) and (b) above, the users
must maintain their own mental model regarding what has
been explored in the trail off of page v, increasing the
cognitive load of the browsing task. In behavior (c) a
portion of the recently visited trail, the children of page v,
are kept in a queue along the tab bar, reducing the need of
the user to keep that portion of the trail in working
memory, thus offering some support for trailblazing
activities.

Scenario based design

The design of the Tree Trailblazer browser was completed
through a scenario-based design process [28]. The
process began with the writing of several problem
scenarios describing the existing behavior that emerged
from semi-structured interviews with users. The activities
described in the scenarios varied in order to provide a
wide range of browsing tasks that users undertake.
Among the problem scenarios explored were:
•

Browsing a news website through multiple tabs
within one web browser window.

•

Browsing a shopping website within one window

•

Browsing a sports website through multiple windows

However, this design exacerbates the problem
mentioned above. While the tab feature allows users to
see more of the trail that they have followed in their
exploration, each tab is independent of the others, and it is
not possible from visual inspection to understand from
which page a particular tab was opened. In addition, while
the problems of users maintaining their mental model
while using the Back and Forward buttons are well
known, in tabbed browsing a user must maintain such a
mental model for each tab that is opened.

The authors entered their problem scenarios into a wiki
environment. This meant that multiple authors could
collaborate on adding details to the scenarios based on
their own experiences.

Finally, the innovative exploration activity of
previewing pages by opening them in background tabs is
hampered by an increasingly long queue of pages to be
viewed, creating yet another ordering that users must keep
in their heads. This further complicates the blazing of
new trails.

After a scenario was deemed sufficiently detailed by
the scenario team, a discussion of the various problems
that were present in each scenario took place. This was
facilitated through the ability to attach a comment thread
to each scenario in the wiki, which could include
diagrams or screenshots of various aspects of the
scenarios.

3.2

The user could use the forward and back buttons to
explore links off of page v, returning to v after each
visit.

b.

The user could open page w in a new foreground tab.
When this occurs, the user has two options. First, the

Design

With these problems in mind, the browser design focused
on creating an alternate method of presenting and
navigating the trail blazed through a set of web pages.
These objectives must not conflict with the benefits of the
Forward and Back button design, but must extend beyond
the simple stack based structure of these buttons.
The trails blazed during users browsing sessions can
be visualized as a tree. Returning to the example in the
problem scenarios, given a current page v the pages w, x,
y, z are represented as children in the underlying
browsing tree when they are visited by users. These

A set of potential browsing behaviors was identified
in the scenarios. Assuming that a user is browsing a web
page v, and identifies links w, x, y, z that he/she is
interested in reading:
a.

The user could open pages w through z in new
background tabs, creating a queue of pages for later
interactions. This navigation is more efficient,
resulting in half of the page switches in comparison
to (a) and (b) as the user need not return to the
original page as often.

135

Figure 1 A browser based on the underlying browsing tree of a user's exploration trail.

children are siblings to one another, all sharing page v as
a parent. A visualization of how this tree can be seen
Figure 1, a prototype of the Tree Trailblazer.

background, adding them to the collection of child nodes
that corresponds to the list of updated thumbnails. This
behavior corresponds to the use of background tab
navigation behavior in current browsers, but with more
structure, and limiting the display to one level in the tree.

Using a focus + context display technique [15], the
large central interface element is the current active page
of interest, allowing users to focus on the information
contained within that page (indicated by A in the figure).
There are five thumbnail navigation components in fixed
positions surrounding the current page. The thumbnail at
B represents the parent of the current page, with the
thumbnails labeled D and E representing siblings that
were opened before and after the current page from the
parent page. These two would represent the left and right
sibling of the active page, respectively, in the underlying
browsing tree. Finally, region C shows the collection of
children pages that have been opened from the current
active page. Additionally, this design allows users to
directly manipulate the page thumbnails, instead of
navigating indirectly via the Forward and Back buttons.
In this design, each individual thumbnail represents a
node in the underlying browsing tree, and as such any
new page that is visited through a hyperlink extends the
tree adding a new node as a child of the currently active
page. In this way, the history of the trail previously
blazed is kept for future reference while the newly visited
page is added to the global structure. Alternatively, users
can blaze a new trail by opening new links in the

In the initial mock-ups and the prototype browser,
the hierarchy of pages was presented vertically with the
parent page being at the top of the window, and children
at the bottom. After initial demonstrations and pilot
experiences with 5 users, the design was changed to a
horizontal tree as all pilot participants commented that
their familiarity with the back button made them think
that the parent page was “to the left” in their mental
model. Additionally, in the original designs all of the
siblings of current page were expected to be included, but
this interface design was very cluttered and led to
confusion between the siblings and the children.

3.3

Implementation

The Shiira web browser [30] was used as a starting point
to build the Tree Trailblazer. Shiira is an open source
web browser built on the rendering engine Webkit, which
is the same rendering engine that powers Apple's Safari
browser. Webkit was open sourced by Apple in 2005,
and subsequently many browsers were developed which
use Webkit as the rendering engine with Shiira and
OmniWeb [27] being two examples.
For this project, it was most convenient to use an

136

open source, fully functional browser as a basis for the
new browser. Shiira was chosen as it satisfies this, and is
built on Apple Inc's Cocoa API. This API dynamically
crops PDF snapshots of web pages and animates elements
of the user interface very easily, both which was
important to the design of the browser. However Shiira
has only been implemented to work on Apple's OS X
operating system, running on Macintosh computers
(although Webkit now powers a Microsoft Windows
version of the Safari browser).
Hence, the Tree
Trailblazer requires OS X at present.
The browser implementation in Figure 1 directly
manipulates the thumbnail of a page to move it to the
central viewing frame, making it the new current page.
The transitions between pages are animated to show the
shifting between different nodes in the underlying
browsing tree. Selecting a link in the current active page
opens a new child of that page, and then shifts the entire
tree to make the child the current active page.

4.2

Alternatively, the user may select to open new
children pages in the background, adding them to the
child collection for the current active page. Currently one
option is to use the middle-button of a three-button
mouse. This behavior was also available through the
context menu.

4

•

High Page Recurrence Rate: The tendency for web
users to visit pages repeatedly within a session has
been supported through the tree structure, with the
visual cues provided by the parent allowing users to
retrace their steps to previous pages.

•

Continued growth of web address vocabulary: With
the ever-increasing number of web sites available to
visit, it is unsurprising that tabbed browsing has been
successful; users are taking advantage of the ability
to load pages in the background while performing
other tasks. This behavior has been maintained
within Tree Trailblazer with the background loading
of child pages.

•

High recency of revisits/Frequent use of
backtracking: The back button provides for the
backtracking behavior that users have been shown to
exhibit in their web browsing habits.
Tree
Trailblazer allows for backtracking in a similar
manner, however it improves on this by adding
complexity to the data structure attached to the
forward button, eliminating the need to discard the
forward button page stack when browsing resumes
after backtracking is complete.

•

Frequent visits to very few pages: One concern
regarding the underlying tree structure of this new
browser is whether or not users will be able to
maintain a mental model of the browsing tree. It is
expected that the fact that there are relatively few
pages visited in any one browsing task, will be of
benefit to this design.

•

Browse in small clusters of pages: The clustering of
web pages into logical groups remains one of the
challenges of tabbed browsing. The Tree Trailblazer
allows a natural clustering of pages that are all
opened off of one page, and thus have a high
probability of being related to one another in some
way (e.g. news items, advertisements).

•

Shallow browsing: The shallowness of user browsing
within a session means that users will not have to
move back along a large number of pages to retrace
their trail. For this reason the Tree Trailblazer does
not provide an extendable list of pages at this time
(like current back button implementations) so as to
not overwhelm the users with features.

Returning to previous research

Similar to Kandogan and Shneiderman’s analysis [18], it
is important that the design be evaluated as sound before
evaluating the Tree Trailblazer with users.

4.1

Previous User Studies

There have been several user studies that have produced a
set of common factors that are present during browsing
tasks[8]. Each of these must be addressed in the Tree
Trailblazer design:

Efficiency Navigation in the Design

Furnas [9] presents different navigation techniques for
browsing large collections of documents. This theoretical
characterization of different viewing methods examines
the efficiency and navigability of each method based on
their underlying data structure. The two criteria identified
for efficient view traversals were: 1) the number of
outgoing links is small and 2) the distance between pairs
of nodes is small. If the data structure is an indexed list
(akin to a tab bar), the number of outgoing links is large,
as one can switch from any tab, to any other tab.
However, the distance between nodes is small, as a user
can move in one step. However, as the bar becomes
crowded, it essentially turns into a scrollable list, where a
user can only move left or right, but the maximum
distance between nodes becomes the size of the list.
Furnas identified a tree as a better data structure in that
the distance between pairs of nodes is logarithmic in the
number of nodes for a complete, balanced tree, which
allows for efficient traversal of large lists with the number
of outgoing links remaining low (at most the highest
number of children at any node). This is supportive of the
use of the tree visualization in the Tree Trailblazer.

137

5
5.1

complete the participants were asked to sit comfortably in
front of the machine and were offered their preference of
a 3-button mouse or the laptop trackpad interface for use
during the evaluation.

User Evaluation
Design

In order to evaluate whether people would be able to use
the web browser successfully and be able to navigate the
tree structure successfully, the participants trained on the
browser by the researcher providing instructions on how
to use various aspects of the browser. Following this
training session, two evaluative trials were completed as
independent browsing exercises where the user received
no assistance from the researcher.

Each participant began with a training session on the
browser. The evaluator instructed the participant on how
to open new pages, navigate between pages and the
general ideas behind the underlying tree structure. The
participants were given the opportunity to experiment on
web sites to get an understanding for how the different
features of the browser work together. When the
participant indicated that he/she was comfortable to
continue, a small questionnaire regarding his/her initial
impressions about the Tree Trailblazer was administered.

In each trial the user completed 7 tasks on a website,
with a different website being used for each trial. The
seven tasks were constructed in such a way that the user
could use the tree structure, or not (by re-entering URLs),
to return to pages of interest.

5.2

When complete, the participant was asked to
complete two trials. Two web sites were chosen, BBC
news (news.bbc.co.uk) and Ebay (ebay.co.uk), and the
order of trial presentation was alternated with each
participant. Each trial consisted of 7 tasks conducted on a
specific web site. For each trial, the participant was read
a narrative verbally regarding information that was to be
sought within the web site. Although the information
that was sought was specific to the site being explored,
the tasks were constructed such that the ideal path to a
piece of information was equivalent to each
corresponding task between the two trials.

Participants

The participants consisted of 6 women and 4 men, aged
19 to 57 years with a mean age of 26. The participants
were selected to create a wide range of web browsing
habits, with users reporting between 10 and 60 hours of
web browsing a week with expertise in browsing
technology ranging between 3 and 7 on a 7-point Lickert
scale.
The participants used a wide variety of browsers in
their everyday web browsing, including Firefox, Internet
Explorer, Safari and Konquerer.
The majority of
participants (70%) reported using tabbed browsing as
their primary web interface, with multiple windows with
multiple tabs being reported as the next most common,
and one user reported using multiple windows.
Interestingly, no users reported using a single window
despite it being available in the multiple-choice list.

The tasks were specifically designed such that the
opportunity to use the interface functionality was
provided. After each task, a user had the opportunity to
backtrack along his/her current path to a previously
explored point in order to continue his/her exploration.
The tasks were designed such that retreating to the top of
the tree was not necessary for each task. The combined
set of tasks for each trial had the same minimal number of
navigation steps assuming an optimal navigation path
within the tree.

The participants were offered remuneration of £10
for their time.

5.3

The participant was asked to do a talk-aloud protocol
regarding what he/she was thinking during the task.
When a problem was encountered, the participant was
asked to rank the problem on a usability scale as to
whether the problem was Cosmetic, Minor, Major or
Catastrophic [26]. The researcher also recorded his rating
of the problem for later comparison.

Materials

The experiment was run in a private laboratory with the
participant and the evaluator present. The participant
used the browser on an Apple MacBook Pro with 2.26
GHz Dual Core 2 processor and 3GB of RAM. The
screen size was 15” diagonally presenting a resolution of
1280 by 80 pixels. An external mouse was provided,
however for those comfortable with Mac interfaces they
were permitted to use the trackpad with the associated
button mappings.

At the completion of each trial the participant was
asked to fill out a questionnaire regarding their
experiences within the browser.

Each session was recorded using iMovie using the
installed iSight camera. These recordings were made for
post-analysis of the talk-aloud protocol commentary.

5.4

6

Results

After the initial training period and practice tasks,
participants were asked to rate how difficult or easy it was
to learn to use the Tree Trailblazer (on a 5 point Lickert
scale, from 1 = very difficult to 5 = very easy). The mean
rating was 4.70 (standard deviation = 0.48), which was
significantly above the mid-point of 3.0 (t = 11.13, df = 9,

Procedure

At the beginning of the evaluation, the users were asked
to complete a questionnaire regarding their demographic
information and their web browsing habits. After this was

138

the Tree Trailblazer before the task and after the task. The
mean rating for before the task was 4.20 and after the task
it was 5.60, this was a significant increase in familiarity.

p < 0.00), indicating that participants found the browser
very easy to learn to use.
After undertaking the first task with the Tree
Trailblazer, participants were asked a series of questions
about their experience (see Table 1). Question 1 – 8, 13
and 14 were all answered with 5-point Likert scales, (1 =
most negative rating to 5 = most positive rating). Table 1
shows that for all questions but one, the mean rating was
significantly above the mid-point of 3.0, showing that the
users had a very positive experience with the browser.
The exception was the question on the helpfulness of the
animations for navigation, for which users gave on
average a neutral rating, finding the animations neither
helpful nor unhelpful. Participants were also asked how
likely they would be to use the Tree Trailblazer in the
future, and again gave a mean rating significantly above
the neutral rating. Finally, participants were asked how
familiar they felt with the website they had explored with

After undertaking the second task, the participants
were asked the set of questions again. As before, all
answers were significantly above the mid-point, apart
from the question concerning the helpfulness of
animations. Again there was a significant increase in
familiarity with the website before and after the task.
Part of the rationale of asking the same set of
questions after the first and second task was to see
whether there was an improvement in experience with
more use of the browser. Ratings after the first task were
so high that there was little possibility for further
increases, and a series of t-tests confirmed this. However,
none of the ratings decreased from the first to the second
task.

Table 1: Summary of participant responses after first and second evaluation tasks
Question
Q1: How easy/difficult was it to use the browser?
Q2: How easy/difficult was it to determine what
pages you had opened in the past?
Q3: How easy/difficult was it to return to pages
you had seen before?
Q4: How easy/difficult was it to open new pages to
visit?
Q5: How helpful/unhelpful for navigation were the
animations?
Q6: How helpful/unhelpful for navigation was the
parent picture link (on left side of the page)?
Q7: How helpful/unhelpful for navigation were the
sibling picture links (at the top/bottom)?
Q8: How helpful or unhelpful for navigation was
the child picture drawer (on right side of the page)?
Q9: How likely would you be to use this browser in
the future if it was made available to you? (7 point
scale)
Q13: How familiar with the web site were you

before beginning the test?
Q14: How familiar with the web site do you
feel after completing the test?

After first task
Mean
Standard
Deviation

Test
significance

Mean = 4.20
SD = 0.42
Mean = 4.00
SD = 0.67
Mean = 4.00
SD = 0.47
Mean = 4.40
SD = 0.52
Mean = 3.60
SD = 1.17
Mean = 4.60
SD = 0.52
Mean = 4.10
SD = 0.74
Mean = 4.60
SD = 0.96
Mean = 6.00
SD = 1.33
Mean = 4.20
SD = 1.62
Mean = 5.60
SD = 1.08

Table 2 summarizes the most liked and disliked aspects of
the Tree Trailblazer, gathered from the concurrent verbal
protocols produced by participants while undertaking the
tasks and from the post-task questionnaires. With many
users positively commenting that the ability to see
surrounding pages, this lends some evidence to the design

After second task
Mean
Standard
Deviation

Test
significance

t = 9.00
df = 9, p<0.000
t = 4.74
df = 9, p <0.001
t = 6.71
df = 9, p <0.000
t = 8.57
df = 9, p <0.000
t = 1.61
df = 9, n.s.
t = 9.80
df = 9, p <0.000
t = 4.71
df = 9, p <0.001
t = 5.24
df = 9, p <0.001
t = 7.12
df = 9, p <0.000

Mean = 4.60
SD = 0.52
Mean = 4.10
SD = 1.6700
Mean = 4.10
SD = 1.00
Mean = 4.80
SD = 0.42
Mean = 3.60
SD = 1.27
Mean = 4.40
SD = 0.70
Mean = 4.40
SD = 0.70
Mean = 4.50
SD = 0.97
Mean = 6.20
SD = 1.55

t = 9.80
df = 9, p<0.000
t = 3.50
df = 9, p <0.01
t = 3.50
df = 9, p <0.01
t = 13.50
df = 9, p <0.000
t = 1.50
df = 9, n.s.
t = 6.33
df = 9, p <0.000
t = 6.33
df = 9, p <0.000
t = 4.88
df = 9, p <0.001
t = 6.53
df = 9, p <0.000

t = 5.25
df = 9, p <0.001

Mean = 4.10
SD = 1.66
Mean = 5.50
SD = 0.85

t = 3.09
df = 9, p < 0.05

of

of

of having the tree structure visualization of the past and
future trails is valuable to them. In addition to this, it is
very positive to see some users commenting on the ease of
use of the browser for opening and closing pages, as it is
very important that the new design not interfere with tasks
that were easy in previous browser designs.

139

Regarding the negative comments, it is interesting to
note that the speed of the browser was slow at times. The
refresh of child link thumbnails is between 2 and 5 seconds
depending on the number of children. This delay, while
short, is not the instantaneous response that users have
come to expect in a world of high-speed internet
connections. This will be improved in future browser
iterations, with prototype development continuing.

lends evidence to the fact that users have a sophisticated
browsing strategy and a deep understanding of their own
trail through the web. It is suspected that the users’ desire
to have the browser locate pages previously visited when
opening a new link (to avoid duplication) is also an
indication of this fact. This indicates that further testing
into the users understanding of their trail is warranted.
With one participant this was also listed as a major usability
problem.

Table 2: Most liked and disliked aspects of the Tree
Trailblazer
Aspect
Most liked aspects
Visual reminder of page contents
Ability to see surrounding pages on the site
Ease of opening/closing links
Most disliked aspects
Slow loading time for images for child links
Main window too small
Slow animations
New sibling created in an unexpected place
Difficult to build a tree following the structure
of the site
Image failed to display when a page was
positioned as child/parent/sibling
Want to move back along multiple pages,
rather than just moving one-by-one along them
When a link is opened that has been opened
somewhere previously, it opened a new child
rather than locating the existing link
No ability to categorize the child links
Want to be able to move the outer links to
different areas (e.g. move a child link to
become a sibling)

In terms of usability problems, the majority of them
relate to the issues just discussed, with the ratings by the
participants and the researcher ranging between Cosmetic
and Minor problems except where noted above. There was
one problem that was rated as Catastrophic by a participant;
this problem was the lack of a visual cue indicating where a
user can click in regards to the thumbnails. One user
commented that lack of the traditional shift from an arrow
to a hyperlink hand icon left her wary to click within the
interface.

Number of
participants
5
3
3
6
5
5
4
3

6.1

Advantages/Disadvantages

3

From the user evaluation of the Tree Trailblazer, and
previously observed user behavior, the following are the
advantages and disadvantages of the Tree Trailblazer
design.

3

6.1.1

Advantages

•

Backtracking interface options of modern
browsers are maintained.

•

Maintenance of the complete browsing tree of pages
eases backtracking tasks, allowing the user to freely
move within their blazed trail without losing pages
already visited.

The issue of screen space is also high on the users’ list of
concerns. The addition of the thumbnails does reduce the
screen space that is available for currently viewed page.
There are two options to address this: first, larger displays
can address this concern, with 19”-23” displays becoming
more readily available. However, for laptops and other
mobile devices, a better solution is hypothesized to be the
inclusion of optional transparency and having the
thumbnails occluding some of the viewing area of the
currently active page.

•

Thumbnail images of pages within the blazed trail
provide the user with an understanding of their place in
the information space reducing the cognitive load.

•

Automatic grouping of links related to their parent
page helps the user maintain their mental model of the
trail blazed through the web.

•

Like tabs, users may open a collection of pages in the
background allowing them to complete related tasks
while alternate pages load in the background.

In contrast to the above point, no user commented on
the thumbnail images as being too small for recognition.
There also were no usability issues that can be attributed to
failing to recognize a page. This result is in conflict with
the results from Kaasten et al. [17] on thumbnail
recognition. It is believed that the additional context of the
related pages on the trail aids in recognition; however
further research is needed to understand this effect.

•

Unlike tabs, or hyperbolic tree presentations, all
interface components are in a fixed position with a
fixed size.

•

Short-term history is readily accessible and integrated
into browsing, so users need not switch modes from
browsing tasks. Indeed, the disparity between the
usage of the Back/Forward buttons versus the separate
history mode on browsers (30% of navigation versus
.7% of navigation respectively) [29] suggests using a
single mode with a greater partial history might be
beneficial.

3
2
2

Several of the participants dislikes stem from the
default behavior of creating a queue of child pages. Users
mentioned several times during the sessions that they would
like to group the various children in different ways. This

140

web

•

Two separate mechanisms, Back/Forward buttons and
tabs are not necessary to retrace short-term history and
to queue pages to read. This simplifies browsing, and
as benefit, no conflict between the two entities arises.

•

Presenting only thumbnails for moving up one level,
down one level, or left/right between siblings reduces
space used by the components when compared to
displaying all the nodes in the tree.

•

Use of the tree structure for browsing encourages
efficient traversal, as outlined by Furnas[9].

6.1.2

•

This paper has demonstrated that integrating
trailblazing into the interfaces for web interaction has great
potential. Future work will include further development of
the browser to integrate the feedback collected during the
evaluation, as well as investigations into the mental models
of trailblazing that users develop. Finally, these interfaces
will be investigated in other domains, such as picture and
music browsing and additional underlying browsing
structures will be investigated.

Disadvantages

Screen space is sacrificed for thumbnail images. It is
not clear if this is more or less prevalent than modern
thumbnail interfaces for tabs, given that there could be
more tabs open versus number of children at any node
of the tree in a typical browsing session. However, the
parent and sibling thumbnails do require significant
space around the border.

•

The small size of the thumbnails is apparent to users.
It is unclear if this phenomenon is the same in tabbing
interfaces[7].

•

Users may confuse their trail with the map of the site
they are browsing.

•

In rare cases where the user creates deep trails, it could
be difficult to return to the top node of the tree. This
could be overcome by hub-spoke designs that will be
added to the next prototype.

7

An additional result that emerged from this study is
evidence that users develop sophisticated understandings
of the trail they follow through the web, by citing a desire
to group pages together within a level of the tree. This
result warrants further investigation.

8

Ayers, E. Z. and Stasko, J. T. Using Graphic History in
Browsing the World Wide Web. Technical Report 95-12
(1995).

[2]

Bederson, B., Hollan, J., Stewart, J., Rogers, D., Druin,
A., Vick, D., Ring, L., Grose, E., and Forsythe, C. A
zooming web browser. In Human Factors and Web
Development, (1997).

[3]

Benjamin, J., Flicker, B., Karlinsky, N., and Tuley, J.
Trailblazer.
Retrieved
09/2007
from
http://www.acm.uiuc.edu/macwarriors/projects/trailblazer.

[4]

Bush, V. As we may think. Atlantic Monthly, 176, 1
(1945), 101–108.

[5]

Cockburn, A., Greenberg, S., McKenzie, B., Jasonsmith,
M., and Kaasten, S. Webview: A graphical aid for
revisiting web pages. In Proceedings of the OZCHI ’09
Australian Conference on Human Computer Interaction,
(1999), 15–22.

[6]

Cockburn, A., Greenberg, S., Jones, S., McKenzie, B., and
Moyle, M. Improving web page revisitation: Analysis,
design and evaluation. IT & Society, 1, 3 (2003), 159–
183.

[7]

Cockburn, A., Jones, S. Which way now? Analysis and
easing inadequacies in WWW navigation. International
Journal of Human-Computer Studies, 45 (1) (1996), 105129.

[8]

Cockburn, A., McKenzie, B., and JasonSmith, M. Pushing
back: evaluating a new behaviour for the back and forward
buttons in web browsers. International Journal of HumanComputer Studies, 57 (2002), 397–414.

[9]

Furnas, G. W. Effective view navigation. Proceedings of
the ACM Conference on Human Factors in Computing
Systems, CHI 1997. ACM Press, New York, (1997), 367–
374.

[10]

Gandhi, R., Kumar, G., Bederson, B., and Shneiderman,
B. Domain name based visualization of web histories in a
zoomable user interface. Database and Expert Systems
Applications, 11th International Conference, DEXA 2000,
London, UK, September 4-8, 2000, Proceedings. Lecture
Notes in Computer Science 1873 Springer, (2000), 591–
600.

Conclusion

In this paper a design for a new type of web browser has
been presented. The Tree Trailblazer allows web users to
interactively blaze and maintain their own trails through
the web, providing them with a more complex structure for
browsing. The underlying tree structure of the browser
maintains relationships of parent, child and sibling pages to
the one being viewed by users, allowing the user to better
understand their place within the trail they have already
explored. This design incorporates the display of shortterm history of the user while maintaining a fixed interface
layout. This allows users to develop and use consistent
mental models regarding how the browser is to be used.
A formative evaluation of the Tree Trailblazer
prototype of was completed with ten participants
performing multiple tasks on two different web sites. This
evaluation demonstrated that the backtracking aspects
present in modern browsers through the Forward/Back
button paradigm is maintained while allowing the user to
directly manipulate pages in their browsing tree. In
addition to this, the advantages of tabbed browsing, in
particular the ability to pre-open pages during content
interaction tasks is maintained.

141

References

[1]

[11]

Glynn, C., Heck, R., Luebke, S., Ma, W., Mason, H.,
Nichols, E., Raulerson, E., Staicut, I., and Rebelsky, S. A.
Blazing trails on the World-Wide Web. In Proceedings of
Ed-Media, 1, (2000), 335–340.

[12]

Greenberg, S. and Cockburn, A. Getting back to back:
Alternate behaviors for a web browser’s back button. In
Proceedings of the 5th Annual Human Factors and the
Web Conference. Gaithersburg, Maryland, USA, (1999).

[20]

Landow, G. P. Hypertext 2.0: The Convergence of
Contemporary Critical Theory and Technology. The Johns
Hopkins University Press, Baltimore, MD, 1997.

[21]

Lamping, J. and Rao, R, The hyperbolic browser: A focus
context technique for visualizing large hierarchies. Journal
of Visual Languages and Computing, 7(33–55), 1996.

[22]

Lamping, J., Rao, R., and Pirolli, P.. A focus + context
technique based on hyperbolic geometry for visualizing
large hierarchies. In Proceedings of the ACM Conference
on Human Factors in Computing Systems, ACM Press,
(1995).

[23]

Milic-Frayling, N., Sommerer, R., and Rodden, K.
Webscout: Support for revisitation of web pages within a
navigation session. In WI ’03: Proceedings of the 2003
IEEE/WIC International Conference on Web Intelligence.
Washington, DC, USA, (2003), 689–689.

[24]

Nelson, T. H. Computer lib/dream machines. Selfpublished.

[25]

Nicol, D., Smeaton, C., and Slater, A. F. Footsteps: Trailblazing the web. Computer Networks and ISDN Systems,
27 (1995), 879–885.

Kaasten, S. and Greenberg, S. Integrating back, history
and bookmarks in web browsers. In Proceedings of the
ACM Conference on Human Factors in Computing
Systems, CHI 2001. ACM Press, New York, (2001), 379–
380.

[26]

Nielsen, J. Heuristic Evaluation. John Wiley and Sons,
1994.

[27]

OmniWeb,
Retrieved
09/2007
http://www.omnigroup.com/applications/omniweb/

Kaasten, S. and Greenberg, S. and Edwards, C. How
People Recognize Previously Seen WWW Pages from
Titles, URLs and Thumbnails. In X. Faulkner, J. Finlay, F.
Detienne (Eds) People and Computers XVI (Proceedings
of Human Computer Interaction 2002), BCS Conference
Series, Springer Verlag (2002), 247-265.

[28]

Rosson, M. B. and Carroll, J. M. Usability Engineering:
Scenario-Based Development of Human Computer
Interaction. Morgan Kaufmann, 2001.

[29]

Tauscher, L. and Greenberg, S. How people revisit web
pages: empirical findings and implications for the design
of history systems. International Journal of HumanComputer Studies, 47 (1997), 97–137.

[30]

The Shiira web browser. Retrieved 09/2007 from
http://shiira.jp.

[13]

GVU’s WWW Surveying Team. GVU’s 10th WWW user
survey: Problems using the web (1998). Georgia Tech,
Atlanta, GA.

[14]

Hightower, R. R., Ring, L. T., Helfman, J. I., Bederson, B.
B., and Hollan, J. D. Graphical multiscale web histories: A
study of PadPrints. In Proceedings of the UK Conference
on Hypertext, (1998), 58–65.

[15]

Holmquist, L. E. and Ahlberg, C. Focus+context
visualization of web pages with flip zooming and the
zoom browser. In Proceedings of the ACM Conference on
Human Factors in Computing Systems, CHI 1997:
Extended Abstracts. ACM Press, New York, (1997), 263–
264

[16]

[17]

[18]

[19]

Kandogan, E. and Shneiderman, B. Elastic windows: A
hierarchical multi-window world-wide web browser. In
Proceedings of the 10th annual ACM symposium on User
interface software and technology, (1997), 169–177.
Khawaja, S., Shah, P. D. A., and Khowaja, K. Alternate
paradigm for navigating the WWW through zoomable
user interface. In Advances and Innovations in Systems,
Computing Sciences and Software Engineering, Springer
Netherlands, (2007), 417–420.

142

from

