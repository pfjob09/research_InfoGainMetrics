A Method for Deforming Polygonal Shapes into Smooth Spline Surface Models
Chiew-Lan Tai, Kia-Fock Loe1 , Brian A. Barsky2 , and Yim-Hung Chan
Department of Computer Science
The Hong Kong University of Science and Technology
Clear Water Bay, Kowloon, Hong Kong

Abstract

smooth surface to obtain a new surface that interpolates all
the polygonal vertices. In addition to not needing to solve a
system of equations to achieve interpolation, this approach
has the advantages of having local tension shape parameters
and being C 2 continuous.

This paper describes a new spline formulation that supports deformation of polygonal shapes into smooth spline
surface models. Once a polygonal shape with underlying
rectangular topology is specified by the user, it is deformed
into a smooth surface that interpolates all the polygonal
vertices. The user can then modify the default smooth surface by increasing or decreasing the amount of deformation,
either globally or locally. This is accomplished by interactively controlling the shape parameters associated with the
polygonal vertices. This modeling paradigm is conceptually simple, and allows C 2 continuous surfaces to be easily
designed, even by a novice user.

2. Related work
Barr [2] introduced deformation operations for twisting,
stretching, bending and tapering surfaces around a central
axis. His work was followed by Sederberg and Parryâ€™s [13]
more generalized deformation technique, called the FreeForm Deformation (FFD) method. The FFD method embeds the object to be deformed in a lattice of control vertices that defines a trivariate BÂ´ezier volume. Deformation
is done by altering the lattice and recalculating the new
positions of the points of the embedded object based on
their unique parameter values. Several extended versions of
FFDs have since been proposed, incorporating B-spline and
NURBS trivariate volumes [11] and allowing lattices of arbitrary shape and topology [9]. Other more recent deformation techniques can be found in the comprehensive survey
paper of Bechmann [4]. None of them, however, addresses
deformation of polygonal shapes to smooth spline surfaces.
In addition to purely geometric deformation approaches,
there are physics-based deformable models. A physicsbased model employs elasticity theory to construct an energy functional, and calculates the modelâ€™s shape directly
by finding a minimum to the energy functional or by solving
a set of differential equations [6, 16]. Physics-based models
can most closely mimic the sculpting effect and their optimization algorithms automatically produce fair surfaces.
However, they typically require intensive computations.
To produce curved surfaces from polygonal shapes, a traditional method is to round sharp corners and edges using
parametric blending and filleting techniques [7, 8]. Parametric blends typically join the base surfaces with only C 1
continuity. Another method is to replace each face of a
polyhedron by an algebraic surface patch. Bajaj and Ihm[1]
replace each face of a triangulated polyhedron by a low de-

1. Introduction
Deformation from polygonal shapes to smooth surfaces
is an attractive design tool since it relieves the user from
the burden of having to first specify a large set of control
points and then stitching complex patches together. This paper presents a new interpolating spline formulation that supports such a modeling paradigm. It only requires the user to
manipulate quadrilaterals to design polygonal shapes which
are then smoothed or deformed by controlling the shape parameters associated with the vertices. The resulting surface
is C 2 continuous and interpolates the given vertices. The
formulation allows sharp corners to be easily introduced
without using multiple knots or multiple control points.
Our deformation formulation applies only to polygonal shapes of rectangular topology.
Cylindrical or
toroidal topology is also supported since they can be
tiled by rectangular patches. The smoothing of polygonal shapes is achieved by combining a network of singularly reparametrized bilinear patches[12] with a piecewise
1 Department of Computer Science, School of Computing, National
University of Singapore, Lower Kent Ridge, Singapore 119260.
2 On sabbatical leave from Computer Science Division, University of
California, Berkeley, CA 94720-1776, U.S.A.

1

gree (5 or 7) algebraic surface patch, which has independent
degrees of freedom that provide local shape control. More
recently, subdivision techniques [5, 10, 14] have emerged
as a popular method for obtaining smooth surfaces from
polygonal meshes; this is largely due to their elegance in
supporting meshes of arbitrary topology and their relationship with multiresolution techniques like wavelets.

3. Singularly reparametrized line segment
A singularly reparametrized (SR) line segment is a line
segment that possesses parametric derivative(s) equal to
zero at each end. It is obtained by blending two endpoints
with a singular blending function[12, 15]. A function st,
t2 0; 1 , is called an mth-level singular blending function if
1. it is monotonically increasing from s0=0 to s1=1

2. its first to mth derivatives are equal to zero at t = 0 and
t = 1; i.e., sk 0 = sk 1 = 0 for k = 1; :::; m.

One possibility for an mth-level singular blending function
is s1 t = 1 , 1 , tm+1m+1 . A lower degree alternative for
the same level can be developed as a special case, s2 t, of
the Hermite polynomial [3]. In addition, for our purpose of
formulating C 2 continuous splines, we note that the secondlevel singular blending function is sufficient. In this case of
m = 2, s1 t = 1 , 1 , t3 3 and the Hermite polynomial is
s2 t = 10t3 , 15t4 + 6t5. Comparing s1 t with s2 t, the
latter has a lower degree but requires slightly more computation. For the remainder of this paper, we do not assume
any specific st function, it can be any second- or higher
level singular blending function.
Using a singular blending function st, we can blend
two adjacent points Vj and Vj +1 to produce an SR line segment Lj t; that is,
Lj t = 1 , stVj

st

+  Vj +1

t 2 0; 1

(1)

which interpolates the two points as well as satisfies the following property
L0j 0 = L0j 1 = L00j 0 = L00j 1 = 0:

4. Singular blending
Given a C 2 continuous piecewise curve (comprising a
sequence of curve segments), a sequence of SR line segments can be blended with it to create a new piecewise curve
that preserves the continuity of the given curve. The blending introduces a parameter which can simulate the effect of
tension. Denoting the given piecewise curve by Ct and
the sequence of SR line segments by Lj t, j = 1; :::; n,
then the new piecewise curve Q(t) is
Qj t = 1 ,

t

C j   +

Lj t;

j = 1; :::; n

(2)

where 0   1. If the SR line segments are very different
from the given piecewise curve Cj t, then the parameter
simply indicates the blending proportions; however, if they
are a linearized approximation of the given Ct, then
can simulate the tension effect. Since both Ct and Lj t,
j = 1; :::; n, are C 2 continuous, thus the curve Qt must
also be C 2 .
Fig. 1(a) illustrates the concept of singular blending by
blending a polygon P1 ; P2 ; P3 ; P4 with a smoothing unit
circle Ct. In this case, the edges of the polygon are defined as SR line segments as specified in Eqn.(1) for Lj t,
j = 1; :::; 4, where Vi = Pi , i = 1; :::; 4, and the smoothing
circle is defined by
Cj t = cos

t 2 0; 1 ; j

 j , 1 + t ; sin 2j , 1 + t 

2 

4

4

= 1; :::; 4. By blending the polygon with
the circle using Eqn.(2), we obtain a C 2 continuous closed
curve Qt which can be interpreted as a deformed or
smoothed version of the polygon.
When the smoothing curve Ct does not interpolate the
vertices of the polygon, as is the case in this example, the resulting curve Qt may bear little resemblance to the polygonal shape for low values of , which could be undesirable.
However, there is no reason to restrict the SR line segments
to be the polygon edges. Instead, we will use the following
more general approach. We will determine a new sequence
of SR line segments Lj t, j = 1; :::; n such that when they
are blended with the smoothing curve Ct, the resulting
curve Qt will interpolate the polygon vertices.
This is shown in Fig. 1(b). Given the smoothing circle
Ct, and the polygon P1 ; P2 ; P3 ; P4 , we can find a new
sequence of SR line segments Lj t, j = 1; :::; n which
when blended with the smoothing circle produces the curve
Qt that interpolates the polygon vertices.
This approach can be extended to smoothing polygonal
surfaces. The smoothed surface will interpolate the polygon
vertices and is thus guaranteed to resemble the polygonal
shapes.
This is the central idea of our approach. The user first
sketches the polygonal outline of the object to be modeled in terms of nonplanar quadrilaterals without regard to
smoothness of the surface. The resulting smooth surface
is guaranteed to interpolate all the polygon vertices. This
provides an intuitive modeling approach for the user, and
should be especially appropriate for novice designers. Our
modeling system initializes the value to a reasonable default value, such as 0.5. The user can then modify the default smooth surface by varying the value. To provide
further and more precise control over the shape, we also
provide local tension parameters. This is described in the
next section.

V2
P2= V2

P2

P3

V3

P1= V1

P3 = V3

P1

P4 = V4

V1

P4
V4

(a)

(b)

Figure 1. Blending a polygon with a smoothing circle.

5. Smoothing closed polygon
In the previous section, we gave an example of using a
unit circle to smooth a closed polygon. For the technique to
be a useful modeling tool, it must be improved in two ways.
First, to enable the user to adjust the tension locally at
each joint, we need to generalize the constant value in
Eqn.(2) to a function of t. To provide local deformation
control, we assign a local tension parameter j to each vertex Pj , j = 1; :::; n and then interpolate these tension parameters using the singular blending function:

j t = 1 , st j + st j +1

j = 1; :::; n:

(3)

By replacing the constant value in Eqn.(2) by the tension
function j t, we obtain a locally deformable curve Qt
as follows:
Qj t = 1 , j tCj t + j tLj t

j = 1; :::; n:

(4)

Second, we need to generalize the unit circle to a
smoothing closed curve that is independent of the coordinate system and resembles the polygonal shape. We will use
a B-spline to define the smoothing curve since the B-spline
has many desirable geometric and computational properties.
Let fP1 ; :::; Pn g be the vertices of a given n-sided polygon and f 1 ; :::; n g be the set of corresponding tension
parameters. Our approach first obtains a closed uniform cubic B-spline curve Cj t which approximates the given vertices. To produce the closed curve, three additional vertices
P0 , Pn+1 , and Pn+2 are introduced, where
P0

=

Pn

Pn+1

=

P1

Pn+2

=

P2 :

Using Pj , j = 0; :::; n + 2 as the control points of the Bspline curve, we obtain
Cj t = N0 tPj,1 +N1 tPj +N2 tPj+1 +N3 tPj+2 (5)

where j = 1; :::; n and Ni t, i = 0; :::; 3 are the cubic
uniform B-spline basis functions [3].
Let fV1 ; :::; Vn g denote the unknown points that define
the sequence of SR line segments Lj t, j = 1; :::; n to be
blended with the B-spline curve obtained. The SR line segments that are determined must be such that the blended
curve Qt in Eqn.(4) interpolates the polygon vertices.
That is, we impose the following n constraints:
Pj

=

Qj 0

j = 1; :::; n:

Substituting for Qj 0 from Eqn (4),
Pj

= 1

,

j 0Cj 0 + j 0Lj 0

Substituting for
Eqn.(1) yields
Pj

= 1

j 0 from Eqn.(3) and for Lj 0 from

 Cj 0 +  Vj
j
j

,

j = 1; :::; n:
j = 1; :::; n:

Due to the linearity of the SR line segments, the points
defining them are independent of each other and hence can
be determined by simple computation. Solving Eqn.(5) for
Vj yields:
Vj

=

Pj

+

1

,

j

j

Pj

, Cj 0

j = 1; :::; n:

Note that the geometric interpretation of this equation is that
when j = 1, then Vj = Pj , and as j decreases to 0,
Vj moves away from Pj . When j = 0, Vj is at infinity,
implying no suitable SR line segments can be found. We
therefore restrict the value of j to be in the range 0; 1 .
Since Lj t, Cj t, and j t are all C 2 continuous, the
resulting curve in Eqn.(4) is clearly C 2 continuous. Differentiating Eqn.(4), we note that the end tangents are in the
same directions as those in the B-spline counterpart, with
the magnitudes scaled by 1 , j ; that is,
Q0j ,1 1 = 1 , j C0j ,1 1 and Q0j 0 = 1 , j C0j 0

and since C0j ,1 1 = C0j 0, we have Q0j ,1 1 = Q0j 0.
When j approaches 1, the corresponding SR line segments that are determined are close to the given polygon. In
addition, since the contribution of the SR line segments to
the curve Qt is larger as j approaches unity, the resulting
curve segments increasingly resemble the SR line segments
and hence are more tensed. In the case when j = 1 for all
j , we obtain the given polygon.
Fig. 2 shows the effects of decreasing the tension parameters globally from 1 to 0.1. It illustrates the deformation of
a square to rounder closed curves. To illustrate the local effect of tension parameters, Fig. 3 shows the same square
with all vertices having j = 0:5 except for the lower right
one where the local tension parameter decreases from 1 to
0.25.

6 Smoothing open polygon
In the previous section, we have assumed that the given
vertices fP1 ; :::; Pn g form a closed polygon. For the case
where these vertices form an open polygon, the polygon
must be smoothed by an open B-spline curve. Since the
polygon has n , 1 segments, to obtain the same number
of segments in the open uniform cubic B-spline curve, we
introduce two phantom vertices P0 , Pn+1 where

P0 = 2P1 , P2 and Pn+1 = 2Pn , Pn,1 :
The phantom vertices are chosen so that the B-spline curve
Cj t, j = 1; :::; n , 1 interpolates the endpoints P1 and
Pn [3]. The interpolation constraints imposed on Qt then
become

Pj

=

Qj 0; j = 1; :::; n , 1 and Pn = Qn,1 1:

Vj

=
=

P1
Pj

+

1

,

j

j

Vn = Pn
Pj

, Cj 0

j = 2; :::; n , 1:

, su1 , svVi;j +1 , susvVi;j
+su1 , sv Vi ;j + susv Vi ;j
(6)
+1

+1

+1 +1

8. Smoothing polygonal surfaces
We now apply the idea to the smoothing of polygonal surfaces, in particular quadrilaterals. Let fPi;j : i =
1; :::; m; j = 1; :::; ng be a network of vertices. Let
f i;j : i = 1; :::; m; j = 1; :::; ng be the corresponding set
i;j  1. The network
of tension parameters, where 0
can have a rectangular, cylindrical, or toroidal topology.
First, we assume that the network has a cylindrical topology, where i is the index in the closed direction and j is the
index in the open-ended direction. That is, the network of
vertices has m  n , 1 quadrilaterals.
To obtain a B-spline surface Si;j u; v , i = 1; :::; m and
j = 1; :::; n , 1, from the network of vertices, we first introduce some additional points as in the case of curves. Analogous to handling open curves, we add two rows of phantom
vertices P0;j and Pm+1;j where j = 1; :::; n; that is,

P0;j

= 2P1;j

, P ;j

and Pm+1;j

2

= 2Pm;j

, Pm, ;j
1

j = 1; :::; n. Analogous to handling closed curves, we add
three rows of vertices to wrap around the end vertices

Pi;0 = Pi;n

Pi;n+1 = Pi;1

Pi;n+2 = Pi;2

i = 0; :::; m + 1. The B-spline surface is then

X X Np u Nq v
3

3

p=0 q=0

 

 Pi+p 1;j +q 1

,

,

(7)

i = 1; :::; m; j = 1; :::; n , 1. Let Li;j u; v, i = 1; :::; m,
j = 1; :::; n , 1 be the unknown SR bilinear patches to
Qi;j u; v  = 1, i;j u; v Si;j u; v + i;j u; v Li;j u; v 
(8)
where

Next, we will generalize the above idea from curve
to surface design. We first introduce the singularly
reparametrized (SR) bilinear patch, which is geometrically
equivalent to a bilinear surface but has vanishing end derivatives. That is, an SR bilinear patch is defined by four vertices fVi;j ; Vi;j +1 ; Vi+1;j ; Vi+1;j +1 g:
= 1

@u Li;j 0; v=@u Li;j 1; v=@v Li;j u; 0=@v Li;j u; 1=0;
@u2 Li;j 0; v=@u2 Li;j 1; v=@v2 Li;j u; 0=@v2 Li;j u; 1=0;
2
2
2
2
Li;j 0; v =@uv
Li;j 1; v =@uv
Li;j u; 0=@uv
Li;j u; 1=0:
@uv

be blended with the B-spline surface. The blended smooth
surface is given by

7. Singularly reparametrized bilinear patch

Li;j u; v 

= 0,

Si;j u; v  =

Thus, the vertices of the SR line segments can be solved
from

V1

Differentiating Li;j u; v  in Eqn.(6) and evaluating at
u = 1, v = 0, and v = 1, yields the following
singular properties:

u

i;j u; v  = 1 , su1 , sv  i;j +1 , susv  i;j+1


+su1 , sv  i+1;j + susv  i+1;j+1 (9)

i = 1; :::; m; j = 1; :::; n , 1.

To find the points fVi;j : i = 1; :::; m; j = 1; :::; ng
that define the SR bilinear patches, we impose a set of constraints on Qu; v  to interpolate the polygonal vertices:

Pi;j
Pi;n

Qi;j 0; 0
= Qi;n,1 0; 1
=

i = 1; :::; m; j = 1; :::; n , 1;
i = 1; :::; m:

Figure 2. Decreasing the tension parameters globally from 1, 0.75, 0.5, 0.25 to 0.1.

Figure 3. Decreasing the tension parameter locally (at the lower right vertex) from 1, 0.75, 0.5 to 0.25.
All the other vertices have j = 0:5.

Substituting for Qi;j 0; 0 and Qi;n,1 0; 1 from Eqn.(8),
we have

Pi;j

= 1

,

i;j 0; 0Si;j 0; 0 + i;j 0; 0Li;j 0; 0

i = 1; :::; m; j = 1; :::; n , 1;
Pi;n = 1 , i;n,1 0; 1Si;n,1 0; 1
+ i;n,1 0; 1Li;n,1 0; 1
i = 1; :::; m:
Substituting for i;j 0; 0 and i;n,1 0; 1 from Eqn.(9)
and for Li;j 0; 0 and Li;n,1 0; 1 from Eqn.(6), we have
Pi;j = 1 , i;j Si;j 0; 0 + i;j Vi;j
i = 1; :::; m; j = 1; :::; n , 1;

Pi;n = 1 , i;n Si;n,1 0; 1 + i;n Vi;n
i = 1; :::; m:
(10)
Substituing Si;1 0; 0 = Pi;1 and Si;n,1 0; 1 = Pi;n , i =
1; :::; m, and simplifying yields
Vi;1 = Pi;1
Vi;n = Pi;n
i = 1; :::; m:
The remaining Vi;j can be solved from Eqn.(10) as follows:
Vi;j

=

Pi;j

+

1

,

i;j

i;j

Pi;j

, Si;j 0; 0

= 1; :::; m; j = 2; :::; n , 1. Note that the equations
for computing Vi;j are very simple. The computation that
is needed is much simpler than many surface interpolation
approaches which require solving a system of linear equations.

i

We have assumed a cylindrical topology; the case of a
rectangular topology can be handled in a similar way. Since
both the u and v parametric directions are open-ended, we
add two rows of phantom vertices in both directions. The
points defining the m , 1  n , 1 SR bilinear patches
are

Vi;n = Pi;n
i = 1; :::; m;
Vm;j = Pm;j
j = 1; :::; n;
1, 
i;j
Vi;j = Pi;j +
 Pi;j , Si;j 0; 0
i;j

Vi;1
V1;j

Pi;1
= P1;j
=

i = 2; :::; m , 1; j = 2; :::; n , 1:

9. Results
To illustrate the proposed modeling paradigm, we will
now show how a vase can be modeled using our prototype
system. The user first specifies a polygonal shape, as shown
in Fig. 4(a). Our system then uses these vertices to define a
smooth B-spline surface, which is shown in Fig. 4(b). This
B-spline surface only approximates the polygonal shape.
Next, the system assumes a global tension value of = 0.5,
and determines a set of SR bilinear patches (Fig. 4(c)) to
be blended with the B-spline surface to produce the smooth
vase shown in Fig. 4(d). This smooth surface is C 2 continuous and interpolates all the given vertices (the black squares
shown in the figure).
Fig. 5 and 6 show some possible ways of modifying the
default shape ( = 0.5) generated by the system. The leftmost vase in all these figures is the default shape. Fig. 5

(a)

(b)

(c)

(d)

Figure 4. A user-input polygonal shape (a), then the B-spline surface (b) and the SR bilinear patches
(c) are blended together using
= 0:5 to generate vase (d). The black squares in (d) indicate the
polygonal vertices in (a).

shows the effects of changing the tension parameters globally; the vase can be made to have sharper corners (Fig.
5(a)) or be rounder (Fig. 5(b)). The user can also modify
the vase locally. Fig. 6 shows the effects of varying the
tension parameters of those vertices in the third row.

10. Conclusion
We have presented a new spline formulation for deforming polygonal shapes to smooth surfaces. It is conceptually
simple and easy to use even for novice users. The user needs
only to specify a polygonal shape and then the modeling
system will generate a default smooth surface interpolating
all the polygonal vertices. The user can then modify the default smooth surface, either globally or locally, by changing
the local tension parameters. The method is computationally simple, and guarantees C 2 continuity. The usefulness
of this new modeling paradigm has been demonstrated by
several modeling examples.
Acknowledgement
This work is partially supported by the Hong Kong RGC
Grant DAG97/98.EG14.

References
[1] C. L. Bajaj and I. Ihm. Smoothing polyhedra using implicit algebraic splines. ACM SIGGRAPH â€™92 Proceedings,
26(2):79â€“87, 1992.
[2] A. H. Barr. Global and local deformations of solid primitives. Computer Graphics, 18(3):21â€“30, July 1984.
[3] R. H. Bartels, J. C. Beatty, and B. A. Barsky. An introduction to splines for use in computer graphics and geometric
modeling. Morgan Kaufmann, San Francisco, 1987.

[4] D. Bechmann. Multidimensional free-form deformation
tools. In Eurographics â€™98 (State of The Art Report), pages
105â€“112, 1998.
[5] E. Catmull and J. Clark. Recursively generated B-spline surfaces on arbitrary topological meshes. Computer-Aided Design, 10(6):350â€“355, Nov. 1978.
[6] G. Celniker and D. Gossard. Deformable curve and surface finite-elements for free-form shape design. Computer
Graphics, 25(4):257â€“266, 1991.
[7] H. Chiyokura and F. Kimura. Design of solids with freeform surfaces. ACM SIGGRAPH â€™83 Proceedings, pages
289â€“298, 1983.
[8] B. K. Choi and S. Y. Ju. Constant radius blending in surface
modeling. Computer-Aided Design, 21:213â€“220, 1989.
[9] S. Coquillart. Extended free-form deformation: A sculpturing tool for 3D geometric modeling. Computer Graphics,
24(4):187â€“193, Aug. 1990.
[10] D. Doo and M. A. Sabin. Behaviour of recursive subdivision
surfaces near extraordinary points. Computer-Aided Design,
10:356â€“360, 1978.
[11] W. M. Hsu, J. F. Hughes, and H. Kaufman. Direct manipulation of free-form deformations. ACM SIGGRAPH â€™92
Proceedings, 26(2):177â€“184, July 1992.
[12] K. F. Loe. B-spline: a linear singular blending B-spline.
The Visual Computer, 12:18â€“25, 1996.
[13] T. Sederberg and S. Parry. Free-form deformation of solid
geometric models. ACM SIGGRAPH â€™86 Proceedings,
20(4):151â€“160, July 1986.
[14] T. W. Sederberg, J. Zheng, D. Sewell, and M. Sabin. Nonuniform recursive subdivision surfaces. ACM SIGGRAPH
Proceedings â€™98, pages 387â€“394, 1998.
[15] C. L. Tai and K. F. Loe. -spline: a C 2 continuous spline
with weights and tension control. In A. Pasko, editor,
Shape Modeling International â€™99, pages 138â€“143, AizuWakamatsu, Japan, 1999. IEEE Computer Society Press.
[16] J. A. Thingvold and E. Cohen. Physical modeling with Bspline surfaces for interactive design and animation. Computer Graphics, 24(4):129â€“137, 1990.

(a) Increasing the tension parameter globally from 0.5 (left), 0.75 (center) to 1 (right).

(b) Decreasing the tension parameter globally from 0.5 (left), 0.35 (center) to 0.25 (right).

Figure 5. Starting from the default shape (
tensed (a) or rounder (b).

= 0:5), the vase can be modified to become either more

(a) The tension parameters of the third row of vertices are increased from 0.5 (left), 0.75 (center) to 1 (right).

(b) The tension parameter of the third row of vertices are decreased from 0.5 (left), 0.35 (center) to 0.25 (right).

Figure 6. Starting from the default shape ( = 0:5), the lower part of the vase can be modified to
become either more tensed (a) or rounder (b).

