Pseudo-real-time Phenomenon in an
Augmented Distributed Virtual Environment (ADVE) with Lag
HOR Li San, Tatsuhiro YONEKURA
Department of Computer & Information Sciences,
Faculty of Engineering,
Ibaraki University,
Hitachi City, 316-8511 JAPAN.
Tel. 81-294-38-5142
Fax. 81-294-38-5282
li_san@rocketmail.com, yonekura@cis.ibaraki.ac.jp
Abstract
This paper introduces the actualization of a new
communication channel under a pseudo-real-time
phenomenon, in an Augmented Distributed Virtual
Environment
(ADVE)
framework
through
the
implementation of a Prediction Feedback Loop (PFL),
upon the existence of the unavoidable lag derived from
the natural and artificial temporal factors. By
implementing PFL, the ADVE framework is enriched with
predictive characteristic where it is able to predict and
foreshow information of a remotely controlled avatar
(virtual body) in the ADVE. Based on the predictive
results, interactions between a locally controlled avatar
and a remotely controlled avatar in the ADVE can be
carried out smoothly, effectively and strategically under
an illusory real-time phenomenon without influence from
the existence of lag. With this Pseudo-real-time Channel,
we would like to bring forth a new era of effective man-toman virtual communication over the network without
inefficiency caused by the unavoidable lag, whether it is
solvable or unsolvable.

Keywords
Pseudo-real-time, ADVE, PFL, Unavoidable Lag, Virtual
Communication.

1.

Introduction

In order to provide a new era of realistic man-to-man
virtual communication channel beyond geographical
boundary, studies and researches to optimize the
immersion and presence effects in a Distributed Virtual
Environment (DVE) have been actively carried out
[1]~[4]. However, lag or latency is a crucial problem
inherent in most DVEs, which decreases realism and

degrades the achievement of immersion and presence
effects [5][6]. Lag is referred to the asynchronous output
between user’s performance of movements and
movements reflected in a DVE [5]. Any lag between
actual movement and system response degrades the
perception of a more real experience [7][8]. There have
been many efforts to understand and overcome lag [5][6].
However, light speed’s propagation delay contributes lag
despite other artificial temporal factors like network
latency, 3D graphics generation, etc. Obviously, this
natural temporal factor is a constant factor that cannot be
eliminated no matter how advanced are the implemented
technology solutions.
In this paper, instead of working towards the
reduction of lag from the technology enhancement
approaches [5][9]~[11], we introduce a framework that
works upon the existence of the unavoidable lag. If the
framework could predict the transmitting data or the
generating data before it is reflected in the virtual
environment due to lag, the predictive data can be fully
utilized to actualize a new channel of man-to-man virtual
communication in a DVE to compensate the existence of
lag. We named this new communication channel as
Pseudo-real-time Channel. In addition to this, human
natural adaptability would be naturally triggered under the
Stimulus-Response behavioristic learning theory during
the execution of PFL (Prediction Feedback Loop). (The
illustration of PFL will be carried out in Section 5.) Thus,
pseudo-real-time illusory effective and strategic
interactions are possible to be actualized.
The terminology of pseudo-real-time is derived from
the illusory real-time environment that user could
experience during system runtime upon PFL execution. In
other words, this Pseudo-real-time Channel would appear
to be as real as real-time to the user. In addition, as this
framework utilizes real world perceptions upon the

enhancement of technology, the terminology of ADVE
(Augmented Distributed Virtual Environment) is also
derived.
The ADVE is an avatar-based DVE that is enriched
with the Visual, Acoustic, Tactile and Haptic (VATH)
modalities, where user takes on the identity of an avatar,
to interact with another avatar in a near-hallucinatory 3D
world across the network. During this ADVE real-time
virtual communication, the user is able to experience the
four human beings’ senses provided by the VATH
modalities simultaneously with his long distant colleague
through their respective avatar.

2.

Why prediction is essential?

In the Jet Propulsion Laboratory of Pasadena in
California, a predictive display was developed to remotely
control a robot’s arm that resides thousands of miles away
from the control station on the earth [12]. Obviously, this
communication suffers a great deal from time delay. A
high fidelity calibration technique is used to generate
motion of the robot’s arm off-line in the predictive
display for the operator to preview. After satisfaction is
achieved upon the preview, the operator will send his
command to maneuver the robot’s motion. In this context,
prediction is an essential step for achieving successful
communications between the earth and satellites or other
planets that are influenced by time delay.
When we narrow down the communication scope to
the earth, solving time delay problems is still one of the
main challenges in the way of technology advancement.
Since much of the lag seen by us today comes from light
speed’s propagation delay that is unsolvable, we foresee
that prediction is an essential concept that could open up a
new era of man-to-man virtual communication through
the Pseudo-real-time Channel.
If it is possible to predict the in-coming data that is
influenced by lag, we foresee the following advantages:
l Real-time communication between two mobile
computers would not be affected by lag problems
that keep on differing in real-time due to changing
distance, as prediction is carried out in real-time
with adjustments done according to lag influence.
l In the game context, predicting an opponent’s
situation would eventually become a motivation
factor to players. Based on the predictive results,
players can be motivated towards strategic thinking.
Thus, this could bring forth a new educational
achievement in the Intranet and the Internet world of
computer games.
l In the context of the unavoidable lag whether it is
solvable or unsolvable (i.e. network latency,
computer frame generation rate, etc.), prediction

opens up a new field of study with regards to
Human-Computer Interaction by providing humans
a new way to adapt to the advancement of
technology while compensating for the inefficiency
of technology.

3.

Natural and artificial temporal factors

In the illustration thus far, the unavoidable lag is the
core reason that brings forth the prediction issue. In our
VATH modalities enriched ADVE framework, the
following natural and artificial temporal factors give rise
to lag problems:
l Data transmission delay caused by light speed and
network infrastructure limitations.
l Synchronization between user-avatar and avatar-user
during correlative interactions or cooperative
working in the ADVE over the networks.
l Synchronization between user’s input and avatar’s
response that is reflected in the ADVE.
l Synchronization of the basic architecture of an
avatar that involves the generation of graphics
frames, speech data buffer, haptic and tactile
information (force feedback instances) buffers. In
other words, synchronization of the effects of the
avatar’s VATH modalities in the ADVE.

4.

Derivation of Pseudo-real-time Channel

In order to explain the derivation of Pseudo-realtime Channel, current scenarios that are influenced by the
existence of the unavoidable lag are analyzed. For ease of
illustration of Pseudo-real-time Channel’s fundamental
concept, a geometrical model involving collisions
between a locally controlled sphere and a remotely
controlled sphere is considered (Figure 1). These spheres
represent the simplest form of a locally controlled Avatar
A and a remotely controlled Avatar B in the ADVE. Each
of the local user and the remote user is given a full control
over his avatar through a haptic device. Two assumptions
were made in this model:
l No lag occurs from the direct haptic control of the
user to the avatar’s movements, which are reflected
directly on the screen locally.
l Constant network latency occurs where seconds is
needed for data transmission from a local site to a
remote site and vice versa.

4.1. Asynchronous real-time scenario
Firstly, asynchronous real-time scenario in a peer-topeer network model is analyzed. Based on the
assumptions stated earlier, in this model that encounters

network latency of seconds, both of the reflected avatars
on the screen currently are actually representing the states
of the avatars at different moments of time as shown in
Figure 1.
A (t)

(ADVE)
B (t- )

(Locally controlled) (Remotely controlled)

The server would play a master role in maintaining
all clients’ states, updating the states according to actions
taken by each client and notifying all clients of the
relevant updated events. In short, all the transmitting data
in the network would be routed through the server. With
the data flow management and synchronization done by
the server, the two avatars would be able to collide with
each other now as the states reflected on the screen have
been synchronized at the server site to be at the same
moment in time.
(Server: Synchronizing role)

Fig.1 States of the avatars at site A at
different moments of time due to lag.
The fact that seconds is needed to send Avatar B’s
data across the network to the local terminal where Avatar
A resides, has caused the outcome that the reflected
Avatar B on the screen currently is actually Avatar B’s
data seconds ago. In other words, the reflection of
Avatar B’s data on the screen would always be delayed in
seconds. Vice versa, a similar situation happens to
Avatar A’s data during its transmission to remote site B
(Figure 2). In short, this means that Avatar A’s state and
Avatar B’s state are always seconds asynchronous.
( seconds to send data from A to B)

A (t)
B (t- )

(Vice
V
)

A (t- )
B (t)

Fig.2 Asynchronous real-time scenario
in a peer-to-peer network model.
Thus, if these two avatars were to collide with each
other in this asynchronous real-time scenario, it would be
obviously an extremely difficult task to perform.
One of the solutions that humans could naturally
apply due to the adaptive response, is to learn the pattern
of movements of the remotely controlled avatar and then
instinctively as well as strategically approach this
opponent’s avatar seconds ahead of time. This illustrates
the not-so-user-friendliness of the system, as humans need
to react in a certain way to accommodate the inefficiency
of the system in order to enable the occurrence of a
collision.

second

In order to solve the above asynchronous dilemma
from the technology point of view, a server is brought into
the network model to manage the data flow and to
synchronize the lag problems as in Figure 3.

second

A (t-2 )
B (t-2 )

A (t-2 )
B (t-2 )

Fig.3 Synchronous real-time scenario
in a client-server network model.
However, this gives rise to waiting intervals at each
client site before the arrival of their respective
synchronized data, as round trips of transmission occur
through the network. On top of this, network latency still
exists and the load could be even heavier. Thus, besides
the emotional irritation caused by the waiting intervals, it
is still very difficult to set up a strategic approach towards
the opponent’s avatar, as its movement patterns are
extremely difficult to trace due to the overall delay.

4.3. Pseudo-real-time scenario
From the above analysis, instead of the humans
having to learn the movement patterns of the opponent’s
avatar, and then predicting the avatar’s next position in
order to collide with it, it would be ideal if we could
assign this task to the system. In order to realize this, PFL
that works under a pseudo-real-time phenomenon is
implemented in our ADVE framework. Through PFL, the
system is assigned to check out the lag influence, and then
provide user with predictive data that is derived based on
the previous information of the opponent’s avatar as well
as on the lag information.

5.
4.2. Imperfect synchronous real-time scenario

second

second

Prediction Feedback Loop (PFL) design
concept

The nature of Prediction Feedback Loop (PFL) lies
in its capability of predicting remote opponents’
information and providing feedback on the predictive
results in a looping manner in real-time.

PFL is implemented based on a locally independent
design concept at each client terminal. Thus, it can be
implemented either on a peer-to-peer network model or a
client-server network model. It also supports a multi-user
simultaneously accessible ADVE as shown in Figure 4.
(Remotely controlled)

C (t- )

C (t)

B (t- )

A (t)
B (t)

(Locally controlled) (Remotely controlled)

Fig.4 Predicting
remotely
controlled
avatars’ positions at time t.
In the above model, PFL is implemented at the local
terminal where Avatar A resides. This loop is used to
predict and foreshow graphically the possible next
positions of Avatar B and Avatar C which are delayed in
and seconds of time respectively (where  ). The
predictive positions of Avatar B and Avatar C will be
reflected on the screen as blur images at current time t,
together with their real images at time (t- ) and time (t- )
respectively. The blur predictive images are denoted as B
and C. All the predictive data and the actual movement
data will be kept in a database so that the pattern of
movements can be analyzed based on this database.
Similarly, PFL is also implemented at site B and site
C each as a local loop.
By utilizing the predictive results, these three avatars
could strategically approach each other and thus collisions
among these avatars are possible even with the existence
of time lag of seconds between site A and site B, and
seconds between site A and site C.
In addition, to enable a successful execution of PFL,
a standard time, t as in Figure 4, is needed as a reference
time to obtain the time lag between the participating sites.
GMT time at Greenwich can be used for this standard
time. Alternatively, the participating sites simply need to
adjust their respective remote opponent’s time according
to their own local system clocks based on the time
difference caused by the geographical distance between
them.

5.1. Geometrical model based
implementation of PFL

fundamental

According to the nature of PFL, many high level
methods that are capable of providing satisfied predictive
results in real-time, can be utilized to implement PFL.
The essential point in determining which implementation
method to be used is to evaluate the prediction’s purpose

and intention, which vary according to the predictive
scenarios and depend on the nature of an ADVE. For
instance, a cooperative work based ADVE and a
competitive game based ADVE would obviously be
having very different predictive scenarios with very
different purposes and intentions.
In this paper, a very fundamental PFL
implementation method, based on our previously
illustrated geometrical model on the collisions of two
spherical avatars is discussed.
5.1.1. The simplest case of PFL. First, the simplest case
of PFL is analyzed, where both participating sites of an
ADVE are assumed to be generating their frames at the
same time at their respective local terminal. In addition,
time lag is assumed to be constant. Based on these
assumptions, we can trace the ‘slip’ in frame generation
cycle between the local and the remote avatar at each
individual terminal, which results from the existence of
lag. The frame cycle counts will start by initializing both
avatars’ frame cycles as 0, when a local system first
detected in-coming data from a new remote site.
With reference to the model in Figure 5, B’(n-3) and
B’(n-2) depict Avatar B’s positions 3 frame cycles and 2
frame cycles ago respectively. All previous frame
positions are kept in a database and will not be reflected
on the screen. Meanwhile, B(n-1) is the position of Avatar
B which is reflected on the screen currently. B(n-1) means
that Avatar B is 1 frame cycle slipped (behind) in
generation compared to Avatar A’s frame. B(n) is the
predictive position of Avatar B by PFL and it will be
reflected as a blur image.
B’ (n-3)
A (n)

B’ (n-2)
B (n-1)
B (n)

(Locally controlled) (Remotely controlled)

Fig.5 Avatars’ positions
frame cycles.

at

different

By utilizing the previous information of frame
positions, velocities at B’(n-2) and B(n-1) are obtained at
discrete time as follows:
When t 0, lim B / t B.
Thus,
B’(n-2) - B’(n-3) = VB’(n-2)
and
B (n-1) - B’(n-2) = VB (n-1).
When t 0, lim V/ t V.
Thus, acceleration at B(n-1) is obtained as follows:
VB (n-1) - VB’(n-2) = aB(n-1).
Next, constant acceleration is assumed, where:

aB (n) = aB(n-1).
With this assumption, in a reverse manner, frame position
of B(n) is predicted as follows:
VB (n) - VB (n-1) = aB (n) = aB(n-1)
B (n) - B(n-1) = VB (n)
B (n) = B(n-1) + VB (n-1) + aB(n-1).
As a conclusion:
B (n) = B(n-1) + VB (n-1) + 1/2

aB(n-1)

2

5.1.2. A generalized case of PFL. However, in a
generalized case, two participating sites would most
probably not be generating their frames at the same time
at their respective local terminal. Thus, although both
sites are simultaneously accessing the same ADVE, the
reflection moment of both avatars’ frames on each
individual screen could somehow be very different due to
network latency and different frame generation rates, as
depicted in the relative time chart of Figure 6 below:
t = t0

Site B
t’= t’0

t = t1

t’ = t’1

t = t2

t’ = t’2

t = t3

t’= t’3

tn > tn-1

t’n > t’n-1
t

B’ (t’1)

– (1)

with ( = 1) as the constant time lag between each frame
generation cycle.
By using this method, Avatar B’s position at frame
cycle n can always be predicted even if its frame has
slipped in generation for more than one frame cycle
compared to Avatar A’s frame.

Site A

reflection time can be obtained.
Figure 7 depicts the modified model of the previous
simplest case model, where varying time lag is taken into
consideration. In this modified model, B(t4) has to be
predicted based on the reflection time (=generation time),
t of Avatar A, with reference to the previous frame’s
generation times, t’ of Avatar B.

t’

Fig.6 Relative time chart between A & B.
At each individual site, the time for its local avatar’s
frame to be generated (generation time) and the time for
this frame to be reflected on the screen (reflection time)
will be the same if the assumption of no lag occurs locally
is made. However, the reflection time for a remote avatar
on a local site will obviously be different from its
generation time at its original site. This is due to the fact
that the remote avatar’s reflection time will depend on the
local site’s frame generation rate and the lag occurred
during network transmission, whereas its generation time
will only depend on its original site’s frame generation
rate.
Thus, during each frame generation of an avatar, a
time stamp is essential to record the generation time. This
generation time will be attached to the new generated
frame when it is sent to a remote site, so that the time lag
between the local generation time and the remote

B’ (t’2)
A (t4)

B (t’3)
B (t4)

(Locally controlled)

(Remotely controlled)

Fig.7 Avatars’ positions attached with
their respective generation time.
If constant velocity assumption is made:
VB (t4) = VB (t’3).
Thus,
B (t4) = B (t’3) + (t4 - t’3) VB(t’3).
If constant acceleration assumption is made, using the
same method as for equation (1), equation (2) can be
derived as below:
B (t4) = B(t’3) + VB (t’3) + 1/2

aB(t’3)

2

– (2)

with = (t4 - t’3) as the time lag between Avatar B’s
generation time at site B and its reflection time at site A.
With regards to the actual collision, if a time lag of
seconds occurred, both users would be able to feel it
after seconds passed, when the predictive position
coincides with the actual position and Avatar A is moved
to approach this predictive position. Based on the law of
inertia, the movement patterns of the remotely controlled
avatar are able to be traced and predictable to a certain
degree of accuracy. Thus, if a strategic approach is
applied, collisions among these avatars in a lag influenced
ADVE are possible.

5.2. Triggering of human natural adaptability
According
to
the
above
fundamental
implementation, it is a challenging task for the user who
controls Avatar A to wisely utilize the predictive results
pertaining to Avatar B’s next possible position. This
determines his possibility of success in colliding with
Avatar B.
Based on this System Predicting Human
Observing Human Trying Human Finding Out feedback
loop nature, human learning behavior would be triggered.
During the execution of PFL, the predictive result
becomes a stimulus to the user and he would react by
controlling his own avatar accordingly. According to the

Stimulus-Response behavioristic learning theory, humans
will eventually learn the behavior of the framework that
works under a pseudo-real-time phenomenon. When
humans naturally adapt to this framework, the realism of
this illusory real-time environment would appear to be as
real as real-time to the user. Upon this, the realism would
be increased if high accuracy of the predictive data were
achieved.

5.3. Handling of the VATH Modalities in PFL
In the illustration thus far, each user is given a full
control over his local avatar through a haptic device
(Haptic modality). Upon this, the predictive result will be
foreshown as a blur image together with the real images
of the local and the remote avatars (Visual modality).
However, in an ADVE that is enriched with the VATH
modalities, besides haptic feel and visual information,
when a collision takes place, both users should also be
able to hear the collision impact (Acoustic modality) and
feel the force feedback (Tactile modality) simultaneously.
Thus, the acoustic information and the force
feedback instance magnitude should be generated and
calculated relative to the local avatar’s conditions, at each
predictive position of the remote avatar and kept in
advance in a database. At the moment a collision occurs
between these two avatars, the information can be
released at the same moment so that both users could
experience the four VATH modalities simultaneously at
their respective site.

6.

Conclusion

According to our studies thus far, there has been
research done on enhancing Augmented Reality systems
through predictive tracking with the aid of inertial sensors
[13]. However, in the context of distant man-to-man
virtual communication, this paper is the first paper that
utilizes prediction concept to bring forth a new
fundamental communication phenomenon. Based on the
theoretical analysis above, this new phenomenon through
a Pseudo-real-time Channel is possible to be actualized
upon the existence of the unavoidable lag. During the
actualization of this new phenomenon, technology
solutions are utilized to take over human natural
instinctive responses in prediction. At the same time,
human natural adaptability is triggered in return during
runtime to accommodate this pseudo-real-time
phenomenon so that this will further compensate the lag
problem.
To evaluate from a broader perspective, we foresee
that this new phenomenon has potential to go beyond the
man-to-man virtual communication and impact on man-

to-man real-world communication, like teleconferencing
in a mobile context. If this phenomenon is skillfully and
wisely utilized, we believe that it will be a valuable
contribution to the field of man-to-man distant
telecommunication influenced by lag problems.
With regards to future works, the following issues
are our concern for further enhancement:
l Issue related to the accuracy of predictive results.
l Issue related to how humans adapt to this pseudoreal-time phenomenon.

Acknowledgements
This research was partially supported by the SVBL
(Satellite Venture Business Laboratory) of Ibaraki
University, Japan.

References
[1] P.J., Metzger, “Adding Reality to the Virtual”, IEEE
VRAIS ’93, pp.7-13, (1993).
[2] B.K., Choi, H.Y., Lee, “A Study on Multi-User 3D Game
Using VR Technology”, Proceedings of VSMM’96 Int.
Conf., pp.389-394, (1996).
[3] M., Slater, V., Linakis, M., Usoh, R., Kooper, “Immersion,
Presence and Performance in Virtual Environments: An
Experiment with Tri-Dimensional Chess”, Proceedings of
VRST’96, pp.163-172, (1996).
[4] J., Vacca, “VRML Clearly Explained: Part 3: Distributed
Virtual Environments”, AP Professional, pp. 479-599,
(1998).
[5] D.W., Kyger, P.S., Maybeck, “Reducing Lag in Virtual
Displays Using Multiple Model Adaptive Estimation”,
IEEE Transactions on Aerospace and Electronic Systems,
Vol. 34, No. 4, Oct 98, pp.1237-1248, (1998).
[6] Adelstein, B.D., Johnston, E.R., and Ellis, S., “Spatial
sensor lag in virtual environment systems”, Proceedings of
the SPIE, 1833, (1993).
[7] Adam, J.A., “Virtual Reality is for Real”, IEEE Spectrum,
30(10), pp.22-29, (1993).
[8] Ellis, S., “What are Virtual Environments?”, IEEE
Computer Graphics and Applications, 14(1), pp.17-22,
(1994).
[9] V.N., Padmanabhan, J.C., Mogul, “Improving HTTP
Latency”, 2nd WWW Conference’94: Mosaic and the Web,
Developers’ Day: Technical Presentation, (1994).
http://www.ncsa.uiuc.edu/SDG/IT94/Proceedings/Dday/mo
gul/HTTPLatency.html.
[10] M., Green, “A Framework for Real-time Rendering in
Virtual Reality”, Proceedings of VRST’96, pp.3-9, (1996).
[11] W., Liu, J., Li, “Distributed LoD Algorithm for Complex
Virtual Environments”, Proceedings of VRST’96, pp.2125, (1996).
[12] W.S., Kim, A.K., Bejczy, “Predictive Displays for Remote
Control under Communication Time Delay”, VRAIS’93
Video Proceedings, IEEE Neural Network Council, (1993).
[13] R.T., Azuma, “Dissertation: Predictive Tracking for
Augmented Reality”, UNC Chapel Hill Dept. of Computer
Science technical report TR95-007, 262 pages, (February
1995). http://www.cs.unc.edu/~azuma/d_abstract.html.

