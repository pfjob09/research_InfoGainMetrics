A Smooth Rational Spline for Visualizing Monotone Data
Muhammad Sarfraz
Department of Information and Computer Science
King Fahd University of Petroleum and Minerals
KFUPM # 1510, Dhahran 31261, Saudi Arabia
E-mail: sarfraz@kfupm.edu.sa
Abstract
A C 2 curve interpolation scheme for monotonic data
has been developed. This scheme uses piecewise rational cubic functions. The two families of parameters, in
the description of the rational interpolant, have been constrained to preserve the shape of the data. The monotone
rational cubic spline scheme has a unique representation.

1. Introduction
Smooth curve representation, to visualize the scienti¯c data, is of great signi¯cance in the area of Computer Graphics and in particular Computer Aided Design (CAD). Specially, when the data is arising from
some complex function or from some scienti¯c phenomena, it becomes crucial to incorporate the inherited features of the data. Moreover, smoothness is also one
of the very important requirements for pleasing visual
display. Ordinary spline schemes, although smoother,
are not helpful for the interpolation of the shaped data.
Severely misguided results, violating the inherited features of the data, are seen when undesired oscillations
occur. For example, the curve in Figure 1 is not as may
be desired by the user for a monotonically increasing
data. The user would be interested to visualize it as displayed in Figure 6. Thus, unwanted oscillations which
completely destroy the data features, are needed to be
controlled.
The achievement of this paper is that a smoother C 2
scheme has been searched which provides an automatic
procedure to obtain the derivative parameters instead of
the approximation choices as in [8]. The imposition of C 2
constraints give rise to a linear system which is soluble
using an e±cient tridiagonal linear system solver.
The paper begins with a de¯nition of the rational function in Section 2 where the description of rational cubic
spline, which does not preserve the shape of a monotone

data, is made. Although this rational spline was discussed in [15], but it was in the parametric context which
was useful for the designing applications. This section reviews it for the scalar representation so that it can be utilized to preserve the scalar valued data. The monotonicity problem is discussed in Section 3 for the generation of
a C 2 spline which can preserve the shape of a monotonic
data. This section derives the constraints, on derivative
parameters, which lead to a linear system of equations in
Section 4 and seeks for the existence and uniqueness of
their robust solution. The Section 4, together with some
algorithmic details, also demonstrates the output of the
scheme for various data sets in literature. The Section 5
concludes the paper.

2. Rationl Spline
Let (xi ; fi ); i = 1; 2; ::::::; n; be a given set of data
points, where x1 < x2 < :::: < xn: Let
hi = xi+1 ¡xi ;

¢i =

fi+1 ¡ fi
; i = 1; 2; :::; n¡1: (1)
hi

Consider the following piecewise rational cubic function:
s(x) ´ si (x) =

Pi¤ (µ)
;
Q¤i (µ)

(2)

Pi¤ (x) = Ui (1 ¡ µ)3 + vi Vi µ(1 ¡ µ)2
+wi Wi µ2 (1 ¡ µ) + Zi µ3 ;
Pi¤ (x) = (1 ¡ µ)3 + vi µ(1 ¡ µ)2 + wi µ2 (1 ¡ µ) + µ3
where
µ=

x ¡ xi
:
hi

(3)

To make the rational function (2) C 1 , one needs to impose the following interpolatory properties:
¾
s(xi+1 ) = fi+1
s(xi ) = fi ;
;
(4)
s(1) (xi ) = di ;
s(1) (xi+1 ) = di+1

which provide the following manipulations:
Ui = fi ;
Vi = fi + hvi di i ;

Zi = fi+1
Wi = fi+1 ¡

2.2. Determination of Derivatives

¾

hi di+1
wi

;

(5)

where s(1) denotes derivative with respect to x and di
denote derivative values given at the knots xi : This leads
the piecewise rational cubic (2) to the following piecewise
Hermite interpolant s 2 C 1 [x1 ; xn ]:
s(x) ´ si (x) =

Pi (µ)
;
Qi (µ)

(6)

where
Pi (µ) = fi (1 ¡ µ)3 + vi Vi µ(1 ¡ µ)2
+wi Wi µ(1 ¡ µ)2 + fi+1 µ3 ;
Qi (µ) = (1 ¡ µ)3 + vi µ(1 ¡ µ)2 + wi µ(1 ¡ µ)2 + µ3 :
The parameters vi 's, wi 's, and the derivatives di 's are to
be chosen such that the monotonic shape is preserved by
the interpolant (6). One can note that when vi = wi = 3;
the rational function obviously becomes the standard cubic Hermite polynomial. Variation for the values of vi 's
and wi 's control (tighten or loosen) the curve in di®erent
pieces of the curve. This behaviour can be seen in the
following subsection:

In most applications, the derivative parameters fdi g
are not given and hence must be determined either from
the given data (xi ; fi ); i = 1; 2; ::::; n, or by some other
means: In this article, they are computed exactly from
the system of equations which arises after applying the
splinning constraints.
Since, the smoothness of the interpolant (6) is C 1 and
this article has been attempted to achieve higher degree
of smoothness to C 2 . For this, it is required to impose
the second derivative constraints at the knot positions of
the interpolant (6). After some simplications, the second
derivatives at xi and xi+1 respectively are as follows:
1
[wi ¢i ¡ (vi ¡ 1) di ¡ di+1 ] ;
3hi

(8)

1
[¡vi ¢i + (wi ¡ 1) di+1 + di ] :
3hi

(9)

s(2) (xi ) =
s(2) (xi+1 ) =

The C 2 constraints
s(2) (xi+ ) = s(2) (xi¡ ); i = 2; 3; ::::::; n ¡ 1

(10)

then lead to the consistency equations:

2.1. Shape Control Analysis
The parameters vi 's and wi 's can be utilized properly
to modify the shape of the curve according to the desire
of the user. Their e®ectiveness, for the shape control
at knot points, can be seen that if vi ,wi¡1 ! 1; then
the curve is pulled towards the point fi in the neighbourhood of the knot position xi : This shape behavior
can be observed by lookig at si (x) in Equation (6). This
form is similar to that of a Bernstein-Bezier formulation.
One can observe that when vi ,wi¡1 ! 1; then Vi and
Wi¡1 ! fi .
The interval shape control behavior can be observed
by rewriting si (x) in Equation (6) to the following simpli¯ed form:
s(x) = fi (1 ¡ µ) + fi+1 µ +
[(1 ¡ µ)(di ¡ ¢i ) + µ(¢i ¡ di+1 )] hi µ(1 ¡ µ)
:
Qi (µ)
When both vi and wi ! 1, it is simple to see the convergence to the following linear interpolant:
s(x) = fi (1 ¡ µ) + fi+1 µ:

(7)

It should be noted that the shape control analysis is
valid only if the bounded derivative values are assumed.
A description of appropriate choices for such derivative
values is made in the following subsection.

hi di¡1 + [hi (wi¡1 ¡ 1) + hi¡1 (vi ¡ 1)] di + hi¡1 di+1
= hi vi¡1 ¢i¡1 + hi¡1 wi ¢i ; i = 2; 3; ::::::n ¡ 1:
(11)
For given appropriate end conditions d1 and dn , this
system of equations is a tridiagonal linear system. This
is also diagonally dominant for the following constraints
(12) on the shape parameters:
vi ; wi > 2 ; i = 1; 2; ::::::n ¡ 1:

(12)

and hence has a unique solution for di 's. As far as the
computation method is concerned, it is much more economical to adopt the LU-decomposition method to solve
the tridiagonal system. Therefore, we can conclude the
above discussion in the following:
Theorem 1 For vi ; wi ¸ ® > 2; 8i;the spline solution
of the interpolant (6) exists and is unique.
The parametric representation of this rational spline
method has been discussed in detail in [15] for CAD
applications. Therefore, the reader is referred to [15]
for the detailed analysis and demonstration. Since this
article is for scalar curves, therefore some demonstration
of the above scheme, in the context of scaler curves, is
given in the following subsection.

monotonic increasing set of data so that

2.3. Demonstration
For the demonstration of this C 2 rational cubic spline
curve scheme, we will choose the following choice of
shape parameters:
vi = 3 = wi ;

(13)

and the derivatives will be computed from the system of
equations (11) to generate the initial default curve. This
initial default curve is actually same as a cubic spline
curve. Further modi¯cation can be made by making
changes into these parameters. The Figure 1 is the default curve to a monotonically increasing data taken at
random. It can be seen that the ordinary spline curve
does not gaurantee to preserve the shape.The Figures 2,
3, and 4 are for the demonstration of global shape control vi = wi = 5; 25; 500; 8i; respectively. One can see
that the increasing global values of the shape parameters gradually pull the curve towards the control polygon
and hence the default curve moves towards the data preserved curve. But this way the curve is getting tightened
everywhere which may be undesired. The curve in Figure
5 is for the shape parameter values w1 = 4; v3 = 10 and
w3 = 25. This curve seems satisfying the shape to be
preseved in a reasonable way that it is looking visually pleasant. But this shape was achieved after making
couple of experiments for di®erent values of parameters
which is really time consuming and not very accurate
and, therefore, is not recommended for practical applications too.

3. Monotone Rational Spline
The rational spline method, described in the previous
section, has de¯ciencies as far as shape preserving issue
is concerned. For example, the rational cubic in Section
2 does not preserve the shape of the monotonic data (see
Figure 1). Very clearly, this curve is not preserving the
shape of the data. It is required to assign appropriate
values to the shape parameters so that it generates a
data preserved shape. Thus it looks as if ordinary spline
schemes do not provide the desired shape features and
hence some further treatment is required to achieve a
shape preserving spline for monotonic data.
This article targets towards an automated generation
of shape preserving curve. This requires an automated
computation of suitable shape parameters and derivative
values. To proceede for this strategy, some mathematical
treatment is required which has been explained in the
following paragraphs.
For simplicity of presentation, let us assume

f1 · f1 · :::::: · fn ;

(14)

¢i ¸ 0; i = 1; 2; ::::::; n ¡ 1:

(15)

or equivalently

(In a similar fashion one can deal with a monotonic decreasing data.) For a monotonic interpolant s(x), it is
then necessary that the derivative parameters should be
such that
di ¸ 0 (di · 0; for monotonic decreasing data),
i = 1; 2; ::::::n:
Now s(x) is monotonic increasing if and only if
s(1) (x) ¸ 0

(16)
(17)

for all x 2 [x1 ; xn ]: For x 2 [xi ; xi+1 ] it can be shown ,
after some simpli¯cation, that
"
#
6
P
j¡1
5¡j
Aj;i µ (1 ¡ µ)
s(1) (x) =

j=1

;

[Qi (x)]2

where
A1;i = di ; ³
A2;i = 2wi ¢i ¡
A3;i
A4;i
A5;i
A6;i

1
di+1
³wi

´

+ di ;
´
= 3¢i + 2wi ¢i ¡ w1i di+1
³
+vi wi ¢i ¡ v1i di ¡
³
´
= 3¢i + 2vi ¢i ¡ v1i di
³
+vi wi ¢i ¡ v1i di ¡
³
´
= 2vi ¢i ¡ v1i di + di+1 ;
= di+1 :

1
wi

9
>
>
>
>
>
>
>
>
>
>
>
>
>
´ >
>
>
di+1 =

>
>
>
´ >
>
>
1
>
d
>
wi i+1
>
>
>
>
>
>
>
>
;

(18)

(19)

Since the denominator in (18), being a squared quantity, is positive, therefore the su±cient conditions for
monotonicity on [xi ; xi+1 ] are:
Aj;i ¸ 0; j = 1; 2; ::::::; 6;

(20)

where the necessary conditions
di ¸ 0 and di+1 ¸ 0

(21)

are assumed. If ¢i > 0 (strict inequality) then following
are the su±cient conditions for (20):
9
¢i ¡ v1i di ¸ 0
=
¢i ¡ w1i di+1 ¸ 0; and
:
(22)
;
¢i ¡ v1i di ¡ w1i di+1 ¸ 0:

which lead to the following constraints:
ri di
vi =
,
¢i

qi di+1
wi =
:
¢i

(23)

where ri and qi are positive quantities satisfying
1
1
+
· 1:
ri qi

(24)

This, together with (23) leads to the following su±cient
conditions for the freedom over the choice of ri and qi :
ri ¸ 1 +

di+1
,
di

qi ¸ 1 +

di
:
di+1

(25)

One can make the choice of ri and qi to be the greatest
lower bound as follows:
di+1
,
ri = 1 +
di

di
qi = 1 +
:
di+1

(26)

This choice satis¯es (24) and it also provides visually
very pleasant results, as can be seen in the demonstration
Subsection 4.2. It should be noted that if ¢i = 0; then
it is necessary to set di = di+1 = 0; and thus
s(x) = fi = fi+1

(27)

is a constant on [xi ; xi+1 ]: Hence the interpolant (6) is
monotonic increasing together with the conditions (21),
(23) and (26). For the case where the data is monotonic
but not strictly monotonic ( i.e., when some ¢i = 0)
it would be necessary to divide the data into strictly
monotonic parts. If we set di = di+1 = 0 whenever
¢i = 0, then the resulting interpolant will be C 2 at
break points. The above discussion can be summarized
as:
Theorem 2 Given the conditions (16) on the derivative
parameters, (23) and (26) are the su±cient conditions
for the interpolant (6) to be monotonic increasing.

4. Practical Implementation
This section will discuss the computational aspects of
the scheme and then practically demonstrate the results.

4.1. Determination of Derivatives
Some robust and automated method, for the determination of suitable derivative values, is one of the fundamental requirements of the scheme under discussion. To
proceede for this strategy, let us substitute the su±cient
monotonicity conditions (23) and (26) into (11). Some
simpli¯cations yield:

ai di¡1 + (ai + bi )di + bi di+1 = ci ;
i = 2; 3; ::::::; n ¡ 1;
where

9
ai = hi¡1 ¢i¡1 ;
=
bi = hi ¢i ;
;
ci = 2(hi¡1 + hi )¢i¡1 ¢i ;

(28)

(29)

Given d1 and dn , The set of equations (28) gives a
system of n ¡ 2 linear equations for the unknowns
d2 ; d2 ; ::::::; dn¡1 : This is a diagonally dominant tridiagonal system and hence has a unique solution. One can
note that, for monotonically increasing data, ai ; bi ; ci ¸
0; 8 i: Hence , for the end conditions d1 ; dn ¸ 0; the solution of (28) is non-negative. Thus we have the following:
Theorem 3 Given the end conditions d1 ; dn ¸ 0;the
constraints (23) and (26) are su±cient to provide a
unique spline which preserves the shape of a monotone
increasing data.

4.2. Demonstration
We will assume the end conditions as some suitable
positive values and the rest of the derivative values
are computed from the system of equations (28). The
scheme has been implemented on the data set of Table
1. Figure ?? is the default rational cubic spline curve
for the choice of parameters in (13), whereas the Figure
?? is its corresponding shape preserving spline curve for
the automatic choice of parameters in (23) and (26). The
pleasing visualization of the data set in Figure 6 is apparent from its counterpart rational cubic spline default
curve (see Figure 1) as well as the spline curve controlled
by hit and trial method (see Figure 5).

5. Concluding Remarks
A rational cubic interpolant, with two families of
shape parameters, has been utilized to obtain C 2
monotonicity preserving interpolatory spline curves.
The shape constraints are restricted on shape parameters to assure the shape preservation of the data. For the
C 2 interpolant, the consistency equations on the derivative parameters have been derived. The solution to this
system of linear equations exists and provides a unique
solution. A robust solution, using the LU decomposition method, has been recommended. For an e±cient
implementation of the C 2 scheme, it has been taken into
account that, in each of the interval, the curve scheme
intelligently saves the higher degree arithmetic into a
lower degree according to the nature of the slope.

Figure 1. The default rational cubic spline curve
to the data taken at random.

Figure 3. The rational cubic spline with global
shape control having vi = 25 = wi, for all i.

Figure 2. The rational cubic spline with global
shape control having vi = 5 = wi, for all i.

Figure 4. The rational cubic spline with global
shape control having vi = 500 = wi, for all i.

References
[1] D.F. McAllister and J.A. Roulier, (1981), An algorithm
for computing a shape preserving osculatory quadratic
spline, ACM Trans. Math. Software, 7, 331-347.
[2] E. Passow and J.A. Roulier, (1977), Monotone and
convex spline interpolation. SIAM J. Num. Anal. 14, 904909.
[3] F.N. Fritsch and R.E. Carlson, (1980), Monotone
piecewise cubic interpolation, SIAM J. Num. Anal. 17,
238-246.
[4] J.A. Gregory, (1986), Shape preserving spline
interpolation, Computer-Aided Design, 18(1), 53-57.
[5] F.N. Fritsch and J. Butland, (1984), A method for
constructing local monotone piecewise cubic interpolants,
SIAM J. Sc. Stat. Comput., 5, 303-304.
[6] L.L. Schumaker, (1983), On shape preserving quadratic
spline interpolation, SIAM J. Num. Anal., 20, 854-864.

Figure 5. The rational cubic spline with various
choices of shape parameters intervals.

[7] K.W. Brodlie and S. Butt, (1991), Preserving convexity
using piecewise cubic interpolation, Comput. & Graphics,
15, 15-23.
[8] M. Sarfraz, (1992), Convexity preserving piecewise
rational interpolation for planar curves, Bull. Korean
Math. Soc. 29(2), 193-200.
[9] M. Sarfraz, (1997), Preserving Monotone shape of the
Data using Piecewise Rational Cubic Functions,
Computers & Graphics, 21(1), pp. 5-14.
[10] K.W. Brodlie (1985), Methods for drawing curves, in :
Fundamenal algorithm for Computer Graphics, ed. R.A.
Earnshaw (Springer, Berlin, Heidelherg) pp. 303-323.
[11] A. DeVore and Z. Yan, (1986), Error analysis for
piecewise quadratic curve fitting algorithms, Comp. Aided
Geom. Design 3, pp. 205-215.
[12] K. Greiner, (1991), A survey on univariate data
interpolation and approximation by splines of given shape,
Math. Comp. Mod. 15, pp. 97-l06.
[13] P. Constantini, (1997), Boundary-Valued Shape
Preserving Interpolating Splines, ACM Transactions on
Mathematical Software, 23(2), pp. 229-251.
[14] A. Lahtinen, (1996), Monotone interpolation with
application to estimation of taper curves, Annals of
Numerical Math. 3, pp. 151-161.

Figure 6. The rational cubic shape preserving
spline curve to the data in Figure 1.

[15] M. Sarfraz, (1992), Interpolatory Rational Cubic Spline
with Biased, Point and Interval Tension, Computers &
Graphics, 16(4), pp. 427-430.

