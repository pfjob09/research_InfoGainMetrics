A Multi-criteria Based Path Finding Application for Construction Site Layouts
Amir R. Soltani, Hissam Tawfik, Terrence Fernando
The Centre for Virtual Environment, University of Salford, Salford M5 4WT, UK
a.r.soltani@salford.ac.uk, h.m.tawfik@salford.ac.uk, t.fernando@salford.ac.uk

ABSTRACT
This paper presents an optimisation application to
support the construction site planning task by finding
efficient paths between two site locations based on a
combination of safety, transportation cost, and visibility
criteria. These criteria can be combined or individually
optimised by mathematical search algorithms, namely
Dijkstra and A*, in order to present site planners with the
safest path, the shortest distance path, the most visible
path, and the paths that reflect a combination of low risks,
short distance, and high visibility measures between two
site locations. This paper identifies the need for the use of
simulation for site layout analysis, in particular, it
investigates the potential application of mathematical
optimisation techniques for the selection of site paths.

Keywords: safety, visibility, multi-criteria, optimum path
finding, and construction site layout.

1. INTRODUCTION
In construction sites, a safe working environment is
imperative as it brings about a sustained condition in
which site operatives work efficiently. For construction
work, the safest option is not always achievable because
of other considerations, and site planners need to select a
site activity programme that entails fewer foreseeable
risks, within the limits of what is reasonably practicable.
For example, the risks to health and safety produced by a
particular feature of a site activity have to be weighted
against a factor such as travelling distance for site
operatives, logistics, and vehicles. Therefore, the overall
site activities do not necessarily need to be dominated by
a concern to avoid all risks at all costs [14] during the
construction phase. There are situations in construction
sites in which designing a safest path for vehicles to get to
a particular site location may result in the formation of a
relatively long path raising the travelling time. On the
other hand, an accessible path may not be necessarily be
the safest and most visible path for pedestrians and site
workers. Another safety related measure that allows for a
better perception and risk avoidance is visibility.
Visibility measures are considered to be useful because
maximising visibility can minimise risks. Hence, it is a
combination of several criteria that needs to be taken into

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

consideration in order to design a site activity
programme that characterises a cost-effectiveness and
safe approach to construction activities. Site planners
currently rely only on their experience and intuition
when considering the allocations of paths for logistics,
vehicles, and site operatives [3], [9], and [16].
Therefore, IT tools are required to automate the multicriteria path finding analysis in order to assist site
planners with generating alternative path scenarios. This
work addresses the lack of computer-based support tools
for multi-criteria optimum path finding applications that
can be used interactively by planners to assess site
activity performance in terms of safety and travelling
distance. As a result, a need for optimisation techniques
that minimise the risk level along the movement paths
and at the same time strike a balance between other
design requirements such as distance (transportation
cost), and visibility, becomes evident. Such solutions
could assist site planners in finding an optimum path
between two site locations characterised by low risks
and low transportation costs for people or vehicles.
In this paper, paths associated with site operatives or
vehicle movements in construction sites are analysed
from a perspective of three design parameters namely:
safety, distance, and visibility. These measures are
combined to allow capturing conditions that satisfy
optimum
evaluation
of
multi-criteria
design
requirements. For the analysis of a static site layout
assuming the absence of moving objects, the abovementioned criteria can be combined or individually
optimised to present site planners with the safest path,
the shortest distance, the most visible path, and the path
that reflects a combination of low risks, short distance,
and high visibility between two site locations. The
optimisation is carried out by two deterministic
mathematical search techniques; Dijkstra and A* (A
star) which are used to perform and compare uninformed
and heuristic search strategies. Dijkstra algorithm can
find optimal solutions to problems by systematically
generating new states and testing them against a goal,
becoming inefficient for large-scale problems. Whereas,
A* can find optimal and near to optimal solutions more
efficiently by directing search towards the goal by
means of heuristic functions reducing the time
complexity substantially. Since the path finding
application also aims to ultimately serve as part of a

virtual simulation tool for site planners to experiment with
a variety of path scenarios in a near real-time manner, A*
can be used to carry out higher search speed finding nearoptimum solutions. From a theoretical viewpoint, Dijkstra
guarantees to provide optimal solutions but can be
inefficient while A* minimises the search time taken to
find solutions at the expense of producing relatively less
accurate solutions.

2. RELATED WORK
Recent research into optimum organisation of
construction site layouts [10], site planning [15], site
communication [5], and site scheduling [4] has resulted
into the development of a number of IT prototypes to aid
site planning tasks, whereas limited search into path
finding has been conducted. For a similar path planning
application, Gomez-Albarran et al. [7] proposed a routing
strategy that uses Lee’s routing algorithm in conjunction
with a genetic algorithm (GA) [6]. The algorithm obtains
the shortest path, if exists, between the nodes of a graph
while overcoming the GAs drawback by obtaining a
smaller search space where Lee’s algorithm operates.
Their work only seeks to optimise a single criterion,
which is the travelling distance between the nodes.
Dubois and Sememt [2] used slightly modified version of
Dijkstra algorithm to determine the shortest path length in
the Swiss road network. They used Euclidean distances as
good estimates of real or straight-line distance. Modesti
and Sciomachen [11] studied the problem of finding
origin-destination shortest paths in urban multi-modal
transportation networks, aiming at minimising the overall
cost, time and user’ inconvenience associated with the
required paths. A utility function for weighting the edges
of a graph was used and was then maximised by using the
Dijkstra shortest path algorithm. Romeijn and Smith [12]
developed a decomposition algorithm that yielded logN
savings in computational time over the traditional parallel
implementation of Dijkstra algorithm applied to a general
directed network of N nodes. Forming a partition of the
network into M classes referring to as macro nodes,
aggregated the nodes. The approximated shortest path was
obtained by finding all shortest paths in the macro
network and also all shortest paths within each macro
nodes, and then combines these to get paths connecting all
pairs of nodes.

3. AIMS & OBJECTIVES
This work aims to design a simulation tool for
supporting path finding analysis of construction sites
application rooted in multi-criteria evaluation of safety,
transportation cost, and visibility. The key objectives of
the path finding simulation are the graphical
representation of paths between two site locations from
the perspective of safety and efficiency, and the

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

application of optimisation to assist site planners with
the multi-criteria issue associated with path allocation on
construction sites.

4. PROBLEM FORMULATION
To present a site layout manageable for analysis, the
space domain is subdivided into cells so that each cell
represents a small area of the site layout. This method of
space mapping generates a set of discrete nodes that
cover the entire construction site domain called space
layout, for example a 40 by 40 grid size as shown in
Fig.1. For each cell of the space layout a node is
allocated that holds certain spatial properties of that
node. These spatial properties can be presented by a set
of numerical values attributed to each node describing
safety, distance, and visibility measures. This discrete
representation of the space layout can be used to develop
a directed graph whose vertices and edges are the
location of the discrete nodes and the associated
numerical nodes values, respectively (see Fig. 2). The
edges of the directed graph contain the numerical values
of safety, distance, and visibility associated with each
vertex (space layout nodes).

Figure 1, A 40 by 40 unit grid size of a discretised site
layout.

Node 1

Node 2

•

•

•

•

Node 3

Node 4

An edge of
space layout
links Node 1
to Node 4.
The edge
represents
the
numerical
values of
safety,

Figure 2, A directed graph developed by the discrete
representation of the space layout.
Hence, three matrices corresponding to the numerical
values of safety, distance, and visibility are generated

prior to the implementation of the optimisation algorithms
by [16]
• safety modelling: determines the hazard zones
associated with site objects such as surroundings, building
height, and site areas with highest activity, with variable
degree of risk (see Fig. 3(a));
• distance cost: determines the distance between each
adjacent node;
• visibility analysis: determines the sight area in the site
terrain that can be seen from a fixed position in space. It is
a set of field of views, or lines of sight, by which objects
in construction sites can be seen (see Fig. 3(b)). The lines
of sights are called isovists lines which can be thought of
as the geometry obtained by casting light rays in all
directions from a fixed position in space. By applying
isovist analysis on a proposed site space layout, regions in
the site that offer high visibility are identified.

The aim is to carry out a multi-criteria evaluation of
safety, travelling distance, and visibility in order to find
a shortest path between two locations of the space layout
that poses the minimum risks and distance and being
exposed to the maximum visibility (see Fig. 4).
A movement path for a fixed start to goal nodes can be
varied depending upon the weighting allocated to each
criterion. The weighting values associated to each
criterion demonstrate the manner in which a
combination of criteria contributes to an optimum
movement path. For example, if the safety aspects need
to be signified, a larger weighting value for safety
criterion is used relative to other criteria, therefore, a
movement path that reflects a greater emphasis on an
optimised safety route is obtained. Hence, users have
control over different criteria as shown in Fig. 5.

Figure 5, Weight factors adjustment for a multicriteria optimisation.
Low
Risk

(a)

High
Risk

Low
Vis.

(b)

High
Vis.

Figure 3, Graphical representation of safety, and
visibility values [16].
A complete directed graph of the space layout can
then be obtained by applying the above technique to each
individual node formed in the discretised site layout.
Hence, a directed graph data structure suitable for finding
a shortest path starting from a given node and ending at a
goal node has been constructed.
Site Layout Path Selection Application
Hazard, Distance, and

Knowing the weighting values can lead to the
calculation of a weighted multi-criteria factor,
designated by Γw(i,j), for each node that holds all the
information regarding the normalised values of safety,
distance, and visibility designated by Γs(i,j), Γd(i,j), and
Γv(i,j), respectively. The weighted multi-criteria factor
can be mathematically expressed as:
Γw(i,j) = XsΓs(i,j) + XdΓd(i,j) + XvΓv(i,j)
where Xs, Xd, and Xv are safety, distance, and visibility
weighting factor, respectively, and i, j identify the
locations of row and column indices of each node. The
weighted multi-criteria factor is then used as a cost
evaluation function to Dijkstra and A* optimisation
algorithms.

Visibility Modelling
Path Finding
+
Start and Goal Locations

Incorporating
Risk Minimisation
+
Distance Cost

Dijkstra / A* Algorithms

Minimisation
+
Visibility
Maximisation

Cost Function

Figure 4, Structure of path finding application.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

5. MATHEMATICAL SEARCH USING
DIJKSTRA AND A* ALGORITHMS
Dijkstra and A* are mathematical search algorithms
differ from each other in that Dijkstra always produces
optimal solutions, if any exist, but becoming inefficient
as the problem size increases; while A* takes a shorter
search time producing relatively less accurate solutions.
Therefore,
the
algorithms’
performances
are
qualitatively compared in order to examine the errors in
solution accuracy. Dijkstra algorithm [1] is an
uninformed search algorithm for finding shortest paths
that rely purely on current path cost and provides a

shortest path from a starting node to a goal node in a
graph. Dijkstra algorithm modifies the breadth-first
strategy by always expanding the lowest-cost leaf node
first as measured by the path cost g(n), rather than the
lowest-depth node, where g(n) gives the path cost from
the start node to node n. Dijkstra algorithm is complete
and its space and time complexity is the same as for
breath-first
search
[13].
For
computational
implementation, it uses an adjacency list array so that for
each node the corresponding adjacent nodes can be found.
The A* star algorithm was developed by Hart,
Nilsson, and Raphael [7]. The algorithm uses a heuristic
function h(n) to estimate the cost of the cheapest path
from node n to the goal node as well as the path cost g(n),
and therefore the search cost f(n) = g(n) + h(n). Using f, g,
and h values, the A* algorithm will be directed towards
the goal and will find it in the shortest possible route
possible. The restriction is to choose an h function that
never overestimates the cost to reach the goal [13]. Such
an h is called an admissible heuristic. A* is only
admissible if the heuristic function h always gives the
exact distance to the goal. In practice this may be
impossible and if the heuristic function overestimates the
real distance to the goal by more than a certain value,
called E, then the algorithm will find a solution which
cost more than E over the cost of optimal solution.
Therefore, in terms of time complexity, completeness and
optimality the quality of heuristic function plays an
important role. In this study two heuristic functions were
used:
• the straight-line distance heuristic indicating the first
node to be expanded is the one closer to the goal node and
mainly used for distance cost search;
• the accumulative line-nodes heuristic which sums up
the cost values that form a direct line between the start
and the goal nodes and used for safety, and visibility
search measures. Both algorithms are deterministic but
A* tends to find solutions quicker by searching a fewer
nodes than Dijkstra.

6. THE SITE
APPLICATION

PATH

EVALUATION

A two-dimensional site layout of a rectangular shaped
construction site showing the locations of construction
objects during a construction project is considered. The
layout presents temporary facilities (TF), buildings (B1,
B2, and B3), parking spaces (PS), and border fences as
shown in Fig. 6. The construction site represents a 40 by
40 dimension unit grid. The algorithms require
information about the start (S1) and goal (G1,) nodes
(locations) in order to begin and end search accordingly,
as shown in Table 1.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

•G1

PS

B3

TF

B1
B2

Trees

• S1

Figure 6, Site layout of the construction site under
investigation.

Start Node
Node 3,3, (S1)

Goal Node
Node 37,36, (G1)

Table 1, The start and goal locations.
There are a number of possible combinations of
multi-criteria optimum paths evaluation using different
weighting values so that it becomes impracticable to
present all of them and analyse their movement’s pattern
behaviour. Therefore, only the following cases are
selected to highlight the main features of the
optimisation techniques and critically evaluate them.

7. RESULTS
The above optimisation algorithms examine the
movement path emerged from the scenario shown in
Table 1 for the cases of a) single safety; b) single
distance; c) single visibility, and d) a combination of
safety, distance, and visibility measures with equal
weightings.
Consideration of single safety measure requires that
there is no participation of distance, and visibility values
in developing an optimum movement path (see Fig. 7).
Figures 8 and 9 show optimum paths resulted from
single distance, and visibility measures, respectively.
For equal weightings of safety, distance, and visibility
measures, the weighted multi-criteria factor is expressed
as Γw(i,j) = 0.333Γs(i,j) + 0.333Γd(i,j) + .333Γv(i,j) resulting
in optimum paths shown in Fig. 10. The Dijkstra and A*
results are designated by (a) and (b), respectively, in the
figures shown below.

(a)

(b)

Figure 7, Optimum paths resulting from single safety
measure.

(a)

(b)

Figure 8, Optimum paths resulting from single
distance measure.

(a)

(b)

Figure 9, Optimum paths resulting from single
visibility measure.

(a)

(b)

Figure 10, Optimum paths resulting
combination of safety, distance, and
measures.

from a
visibility

At the detailed level, both Dijkstra and A* algorithms
present satisfactory results, for example the single safety
movement paths shown in Figs. 7(a) and 7(b) indicate the
safest locations of the site layout are placed close to the
site’s outside borders and the immediate vicinity of
buildings’ boundary (see Fig. 3(a)). In Figs. 8(a) and 8(b)
the shortest paths resulting from single distance show a

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

noticeable shift to the north of the construction site,
passing through a narrow passage between building B2
and the parking space to reach its final destination, in
contrast to Figs. 7(a) and 7(b). It can be noted that in
Fig. 8(b) the path is directed towards the goal node, as it
was expected, by the implementation of the straight-line
distance heuristic function. The movement patterns
resulted from visibility values are shown in Fig. 9. In
Figs. 9(a) and 9(b), as expected from Fig. 3(b), the paths
diagonally go through a high region of visibility (up to
Node 10,10) and then change direction to the north
showing a few random movements before reaching the
narrow passage. It is interesting to observe a jump at
Node 38, 4 indicating how the algorithms react to the
slight variation of visibility value at the local level. In
Fig. 9(b), A* exhibit a zigzag pattern indicating it is
sensitive to the disturbances that exist in visibility
values. This is caused by the accumulative heuristic
function which tends to underestimate the heuristic cost
value at regions of high visibility.
At the macro level, two types of outcome are mainly
observed in Figs. 10(a) and 10(b): a) the safety values
prevail over the distance measures resulting in formation
of paths passing through the safe regions of the site
layout such as the outside borders; b) much smoother
paths are obtained compared with that of single safety,
and visibility. These observations can be explained by a)
polarisation of visibility values resulting from the
relatively narrow regions of high risks compared to the
large region of low risks; b) there is a significant
contribution of travelling distance values damping out
any disturbances that may exist in safety, and visibility
values.
In addition, it can be noted that the paths in Figs 8(a)
and 8(b) are not the shortest paths because the paths
from Node 3,3 to Node 30,11 can be obtained by a direct
straight-line link between the two nodes. This behaviour
can be discussed as follows. Measurements showed that
the length of the paths obtained from both the actual
paths and the direct links are identical. As a result the
algorithms are not capable of choosing the right path
when they select a path from several exiting shortest
paths. Only one shortest path is selected. Besides, the
discrete nature of site representation results in forming
paths that cannot be presented by a straight-line. This
could also be partially related to the large distance
values assigned to those nodes that located both inside
the buildings and on the building boundaries in order to
stop the path going through the occupied spaces.
Previous experiments have shown that if there had been
no presence of the buildings, a direct link between the
nodes could have been achieved. The large distance
values stop the shortest path going through the occupied
spaces and in addition divert the path in such a way that
it moves away from the nodes that are located at the
vicinity of these large value nodes.

With A*, several factors influencing its performance
such as heuristic functions, and the step size associated
with the accumulative heuristic were examined. Optimum
solutions based on the single distance criterion obtained
by straight-line heuristic. For the cases of safety and
visibility using the accumulative heuristic, near to
optimum solutions were found with the error in their
accuracy varying from 0.5% to 2% compared to the
optimum solutions obtained by Dijkstra.

8. CONCLUSIONS & FUTURE WORK
This paper presented an IT application that uses
Dijkstra and A* search techniques to carry out a multicriteria optimum path selection on construction sites.
Depending on the settings of multi-criteria cost function,
the application can generate the safest paths, the shortest
paths, the most visible paths, and finally the paths that
reflect a combination of low risks, short distance, and
high visibility between two site locations. Both Dijkstra
and A* exhibited valid results in terms of optimality and
completeness in particular Dijkstra which inherently finds
optimal solutions. The time and space complexities of
both algorithms for this site dimension have no bearings
on the outcome. The quality of accumulative heuristic
function needs to be improved by adjusting the step size
to fine-tune the near optimum solutions obtained by A*.
Potential extensions to this research work include
examining cases with larger site dimensions to evaluate
and compare detailed performance characteristics of
Dijkstra and A*; investigating the applicability of
probabilistic search techniques such as genetic algorithms
and simulated annealing to solve path finding problems
with enhanced search speed.

9. REFRENCES
[1] E. W. Dijkstra, A note on two problems in connection with
graphs, Numerishe Mathematik, Vol. 1, 269-271, 1959.
[2] N. Dubios and F. Semet, Estimation and determination of
shortest path length in a road network with obstacles, European
Journal of Operational Research, Vol. 83, 105-116, 1995.
[3] E. Elbeltagi, T. Hegazy, A hybrid AI-based system for site
layout planning in construction, Computer Aided Civil and
Infrastructure Engineering, Vol. 16, 79-93, 2001.
[4] E. Elbeltagi, T. Hegazy, A. H. Hosny, and A. Eldosouky,
Schedule-dependent evolution of site layout planning,
Construction Management and Economics, Vol. 19, 689-697,
2001.
[5] T. Fernando, K. Kahkonen, J. Leinonen, N. Murray, and H.
Tawfik, Facilitation of collaborative communication for building
construction with virtual reality technology, Conference on
applied virtual reality in Engineering & Construction
Application, AVR II & CONVR 2001, Gothenburg, October 45, 1-17, 2001.
[6] D. E. Goldberg, Genetic Algorithms in search, optimisation
and machine learning, Addison-Wesley Publishing Company,
INC.1989.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

[7] M. de las Mercedes Gomez-Albarran, A. M. FernandezPampilon-Cestors, and J. M. Sanchez-Perez, A routing strategy
based on genetic algorithm, Microelectronic Journal, Vol. 28,
No 6-7, 641-656, 1997.
[8] P. E. Hart, N. J. Nilsson, and B. Raphael, Correction to “A
formal basis for the heuristic determination of minimum cost
paths”. SIGART Newsletter, Vol. 37, 28-20, 1972.
[9] H. Li, and P. E. D. Love, Genetic search for solving
construction site-level unequal-area facility layout problems,
Automation in Construction, Vol. 9, 197-215, 2000.
[10] Z. Li, M. Anson, and G. Li, A procedure for quantitatively
site layout alternatives, Construction Management and
Economics, Vol. 19, 459-467, 2001.
[11] P. Modesti and A. Sciomachen, A utility measure for
finding multi-objective shortest path in urban transportation
networks, European Journal of Operational Research, Vol.
111, 495-508, 1998.
[12] H. E. Romeijn, R. L. Smith, Parallel algorithms for
solving aggregated shortest path problems, Computers &
Operations Research, Vol. 26, 941-953, 1999.
[13] S. Russell and P. Norvig, Artificial Intelligence A Modern
Approach, Prentice Hall, 1995.
[14] T. C. Sinclair, A cost-effectiveness approach to industrial
safety, London: Her Majesty’s Stationary Office, 1972.
[15] H. Tawfik & T. Fernando, A simulation environment for
construction site planning, Fifth International Conference on
Information Visualisation (IV2001), 199-205, 2001.
[16] H. Tawfik and T. Fernando, A parallel genetic algorithm
for optimising construction site layouts, Applied Simulation
and Modelling, Proceeding of the IASTED International
Conference, 250-254, 2001.

