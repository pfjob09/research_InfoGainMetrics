Incorporating Constraints into A Virtual Reality Environment
for Intuitive and Precise Solid Modelling
Yongmin Zhong Wolfgang Mueller-Wittig
Centre for Advanced Media Technology
School of Computer Engineering
Nanyang Technological University, Singapore
meyzhong, mueller@camtech.ntu.edu.sg

Abstract
The absence of constraints is one of the major
limitations in current Virtual Reality (VR) systems for
precise 3D interactions and precise solid modelling in VR
environments. In this paper, constraints are incorporated
into the VR environment for acquiring precise constraintbased manipulations that are used to perform precise
solid modelling in an intuitive manner. Constraint-based
manipulations are accompanied with automatic
constraint recognition and precise constraint satisfaction
and are realized by allowable motions for precise 3D
interactions in the VR environment. The allowable
motions are represented as a mathematical matrix for
conveniently deriving allowable motions from constraints.
A procedure-based degree-of-freedom incorporation
approach for 3D constraint solving is presented for
deriving the allowable motions. A rule-based constraint
recognition engine is developed for both constraint-based
manipulations and implicitly incorporating constraints
into the VR environment.

1. Introduction
Virtual Reality (VR) technology is regarded as a
natural extension to 3D computer graphics with advanced
input and output devices. It brings a completely new
environment to the CAD community. However, due to
hardware limitations, such as accuracy and stability of 3D
input devices, most of the existing VR systems only offer
very limited tools for solid modelling and lack
sophisticated modelling and modification tools for
creating complex solid models in a VR environment. One
of the most important reasons is the absence of
constraints. Without constraints, it is difficult to perform
precise 3D interactive manipulations in VR environments,
and precise solid modelling in VR environments cannot be
guaranteed. In this paper, constraints are incorporated into
the VR environment for precise constraint-based

Weiyin Ma
Department of Manufacturing Engineering
and Engineering Management
City University of Hong Kong, Hong Kong
mewma@cityu.edu.hk

manipulations. Solid modelling in the VR environment is
precisely performed in an intuitive manner through
constraint-based
manipulations.
Constraint-based
manipulations are accompanied with automatic constraint
recognition and precise constraint satisfaction and are
realized by allowable motions for precise 3D interactions
in the VR environment. The allowable motions are
represented as a mathematical matrix for conveniently
deriving allowable motions from constraints. A procedurebased degree-of-freedom (DOF) incorporation approach
for 3D constraint solving is presented for deriving the
allowable motions. A rule-based constraint recognition
engine is developed for both constraint-based
manipulations and implicitly incorporating constraints into
the VR environment.
There are some works focused on solid modelling in
VR environments. Fa et. al. introduced some results on 3D
objects placement [2]. Fernando et. al. further extended
these results into a shared virtual environment [3] and
presented a software architecture of a constraint-based
virtual environment [4]. The most important contribution
of their method is the concept in constraining 3D direct
manipulations through the allowable motions of the object
being manipulated for precise locations and operations.
However, only simple geometries and constraints are
treated and simple solid models can be created in the VR
environment. Complex models are still created from CAD
systems and then are imported into the VR environment.
Dani and Gadh [1] presented a COVIRDS system for
concept design in a VR environment. This system
performs object modelling based on design features and
the geometric modelling kernel ACIS has been used for
their development. The precise interactions mainly rely on
voice commands other than 3D direct manipulations.
Stork and Maidhof also reported some work on interactive
and precise solid modelling using a 3D input device [9].
Precise solid modelling is realized through 3D grids, grid
snapping and discretized dimensions. Constraint-based
interactions for feature-based modifications depend on

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

some pre-defined rules. Although precise solid modelling
can be ensured, the constraint-based interactions are too
rigid for extensive use. Kiyokawa et. al. also reported a
two-handed modelling environment VLEGO for efficient
manipulations in the VR environment [6]. The result was
extended to a collaborative VR environment for object
creation [7]. However, only simple objects can be created
in this system and complex models are created by placing
some simple objects together. Gao reported a method on
constraint-based solid modelling in a VR environment [5].
In this method, the manipulations to a primitive depend on
some shape control points (SCP) on the primitive other
than the primitive itself and a 3D mouse must be set to the
SCP for manipulating the SCP. Furthermore, the SCP
cannot sufficiently reflect the natural behaviors of the
geometric elements of a primitive. Therefore, the
interactions in the virtual environment are unintuitive and
inconvenient.
We also reported some results on precise solid
modelling in the VR environment [8, 10, 11]. [8] reported
some results on creating assemblies with embedded
constraints between mating features through direct
manipulations while [10] reported some results on
creating parts by features through direct manipulations.
However, the details on the constraint solving approach
for deriving constraint-based manipulations were not
discussed in [8, 10]. Although some rules were presented
for constraint recognition, the details on how to realize the
constraint recognition were not discussed in [10]. A
hierarchically structured constraint-based data model for
supporting solid modelling in the VR environment was
reported in [11] while excluding any discussions on
deriving constraint-based manipulations from constraints.
Based on our previous work, this paper presents an
approach for acquiring constraint-based manipulations
that are used to perform precise solid modelling in an
intuitive manner in the VR environment. A procedurebased DOF incorporation method for solving 3D
constraints is presented for deriving the allowable
motions. A rule-based constraint recognition engine is
developed for automatic constraint recognition.

interactive events are attached to every object. Examples
for the basic interactive events are the grasping event, the
moving event and the dropping event. An action for
acquiring the current allowable motions of an object is
attached to the grasping event. An action for recognizing
the constraints between objects is attached to the moving
event and the dropping event. As soon as the user grasps
an object, the grasping event occurs and the current
allowable motions of this object are derived from the
hierarchically structured constraint-based data model [11]
through constraint solving. The constraint-based
manipulations are acquired by constraining the motions of
3D hands to the allowable motions. This is done by
transferring 3D motion data from the 3D input devices
into the allowable motions of the object. The constraintbased manipulations not only ensure that the precise
positions of an object can be obtained, but also guarantee
that the existing constraints will not be violated during the
future operations.
Part

Feature

Feature
Element

Event List1

Event List2

Event List3

Object

Grasping

Moving

Dropping
Dropping

Moving
Event

Action
List1

Action
List2

Action
List3

Constraint
Solving

Constraint
Recognizing

Constraint
Recognizing

Action

Allowable Motions

Confirm

Constraint
Satisfaction

Result
Constraint-based
Manipulations

Herarchically structured
constraint-based data model

Figure 1. The framework of constraint-based

2. Constraint-based manipulations
The framework of constraint-based manipulations is
shown in Figure 1. For every object in the VR
environment, such as a feature element, a feature and a
part, an event list is regarded as the attribute of this object
and is attached to this object. An action list is connected
to every event in the event list of the object. This action
list shows the actions that will be done as soon as the
event occurs. The constraint-based manipulations are
realized by these basic interactive events and the actions
being performed when these events occur. These basic

manipulations
Once a constraint is recognized during the constraint
recognition, it will be highlighted and will await the user’s
confirmation. Once it is confirmed, the recognized
constraint will be precisely satisfied under the current
allowable motions of the object and will be inserted into
the constraint-based data model. The satisfied constraint
will further restrict the subsequent motions of the object.

2.1. Representation of allowable motions

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

Rx
Ry
Rz

Tx min
Ty min
Tz min

Tx max
Ty max
Tz max

where the first column elements

Rx min
R y min
Rz min

Rx max ù
ú
R y max ú
Rz max úû

Tx , T y and Tz are the

linear translations along X-axis, Y-axis and Z-axis
respectively and the second column elements R x , R y
and R z are the rotations about the corresponding axis
respectively. The values of these elements in the matrix
are either 0 or 1. Integer 1 indicates that the motion is
allowable in the direction along the corresponding axis.
Integer 0 indicates that the motion is not allowable in the
corresponding axial direction. The third and fourth
column elements are the allowable ranges of the 3
translations, which are defined by the minimum and
maximum values of the 3 translations. For example,
Tx min and Tx max are the minimum and maximum values
of the translation along X-axis. The fifth and sixth column
elements are the allowable ranges of the 3 rotations, which
are defined by the minimum and maximum values of the 3
rotations. For example, R x min and R x max are the
minimum and maximum values of the rotation about the
X-axis. If the translation or rotation along some axis is not
allowable, the corresponding minimum and maximum
values are zero.

Since most constraints are geometric constraints and
they are shown as the limitation of relative geometric
displacements between objects, i.e. the limitation of
DOFs, the constraints applied to an object can correspond
to the DOFs of this object. In fact, the correspondence
from constraints to DOFs can be extended to the
correspondence from a set of constraints to the
incorporation of DOFs. Therefore, the representation of
constraint relationships can be obtained by analyzing and
reasoning the DOFs of an object. Furthermore, constraint
solving can also be regarded as a process of analyzing and
reasoning the DOFs of an object. Based on this, we
present a procedure-based DOF incorporation method for
3D constraint solving (Figure 2). This method has an
intuitive manner for constraint solving since it combines
DOF analysis with 3D direct manipulations in the VR
environment.
=1

DOF
Analysis

Current
Remaining
DOF

constraints = 0
Grasping
Event

éTx
ê
êTy
êëTz

2.2. Constraint solving for deriving allowable
motions

Hierarchically Structured
Constraint-based Data Model

The constraints between objects are implicitly created
by the constraint-based manipulations with automatic
constraint recognition and precise constraint satisfaction.
The newly created constraint reduces the DOFs of the
object being manipulated and implicitly provides a
confinement to the future operations applied to the object.
The remaining DOFs define the allowable motions of the
object. The allowable motions explicitly describe the next
possible operations and ensure that future operations will
not violate the existing constraints. The allowable motions
are represented as a mathematical matrix for conveniently
deriving the allowable motions of an object from the
constraints applied to this object.
For every object in free space, its configuration space
has six DOFs: 3 translational DOFs and 3 rotational
DOFs. To simplify the computation and to clarify the
presentation of the allowable motions, we divide the
configuration space along three linear independent
directions: X-axis, Y-axis and Z-axis. Therefore, some
basic DOFs, i.e. 3 translational DOFs and 3 rotational
DOFs can be obtained. Furthermore, the 3 basic
translational or rotational DOFs are linear-independent
among each other. Any remaining DOFs used to define
the allowable motions can be described by these basic
DOFs, therefore the allowable motions can be represented
by these basic DOFs as the following matrix:

>1

Constraintbased
Manipulations

Constraint
Recognition

Constrain
3D Hands

New
constraint

Current
Allowable
Motions

DOF
Incorporation
The New
Satisfied
Constraint

Constraint
Satisfaction
Aim

Figure 2. The procedure-based DOF incorporation

method for 3D constraint solving
As shown in Figure 2, the current allowable motions of
an object are derived from the current remaining DOFs of
this object. The action of grasping an object is interpreted
by the constraint solver as requesting the current
remaining DOFs of the object. The current constraints
applied to the object can be obtained from the
hierarchically structured constraint-based data model.
Initially, the object is unconstrained and has six remaining
DOFs. If there is only one constraint applied to the object,
the current remaining DOFs of the object can be directly
obtained by DOF analysis. If there are multi-constraints
(more than one) applied to the object, the current
remaining DOFs of the object can be obtained by DOF
incorporation. The DOF incorporation for solving multiconstraints is based on the DOF analysis for solving
individual constraints. Under the limitation of the current
remaining DOFs determined by the current constraints,
the object aims to satisfy a new constraint recognized by
the current constraint-based manipulations applied to the
object. The new constraint is precisely satisfied under the
current allowable motions of the object and is further

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

inserted into the hierarchically structured constraint-based
data model to update the current constraints applied to the
object. The update of the current constraints results in the
update of the current remaining DOFs of the object and
further results in the update of the current allowable
motions of the object. Finally, the constraint-based
manipulations applied to the object are updated
correspondingly.
2.2.1. DOF analysis. Since DOFs are divided into the 3
basic translational DOFs and the 3 basic rotational DOFs,
it is easy to connect a constraint with remaining DOFs by
analyzing the remaining basic translational and rotational
DOFs that correspond to this constraint. On the other
hand, the allowable motion matrix introduced in Section
2.1 is described by the 3 basic translational DOFs and the
3 basic rotational DOFs. Therefore, the allowable motion
matrix that corresponds to a constraint can be directly
obtained by analyzing the remaining basic translational
and rotational DOFs that correspond to this constraint.
For example, if a small cylinder is placed on a big
cylinder and they are also needed to be axis-aligned
(Figure 3), the constraints between two cylinders are the
“against” and “line-alignment” constraints. By DOF
analysis, the allowable motion matrices that correspond to
the two individual constraints are (1) and (2) respectively.
Y
Z

Y
X

Z

X

Figure 3. The “against” and “line-alignment”

constraints between two cylinders
é1 0
ê0 1
ê
êë1 0

- 10 .0 10 .0 0
0
0
0
- 10 .0 10 .0 0

0ù
2p úú
0 úû

é0 0
ê1 1
ê
êë0 0

0
0
0
- 10 .0 10 .0 0
0
0
0

0ù
2p úú
0 úû

(1)

the incorporation of rotational DOFs since translational
and rotational DOFs are a closed set respectively.
Furthermore, any translational DOF can be represented
by the 3 basic translational DOFs due to the linear
independence of the 3 basic translational DOFs.
Therefore, the incorporation of translational DOFs can be
further divided into the individual incorporations of the 3
basic translational DOFs. Similarly, the incorporation of
rotational DOFs can be further divided into the individual
incorporations of the 3 basic rotational DOFs.
Accordingly, the DOF incorporation can be further
regarded as the individual incorporations of the 3 basic
translational DOFs and the individual incorporations of
the 3 basic rotational DOFs.
On the other hand, an allowable motion matrix is
described by the 3 basic translational DOFs and the 3
basic rotational DOFs. Therefore, the DOF incorporation
can be finally represented as the incorporation of the
allowable motion matrices that respectively correspond to
individual constraints. The incorporation of the allowable
motion matrices that respectively correspond to individual
constraints can be realized by the “AND” Boolean
operation of the allowable motion matrices that
respectively correspond to individual constraints, i.e. the
“AND” Boolean operations of the corresponding elements
with the same position at the first and the second columns
and the intersections of the allowable ranges of the
translations or rotations along the same axis in the
allowable motion matrices that respectively correspond to
individual constraints.
In such a way, the remaining DOFs of an object that
correspond to multi-constraints can be obtained and the
allowable motion matrix that corresponds to multiconstraints can also be acquired. For example, for the
“against” and “line-alignment” constraints shown in
Figure 3, the allowable motion matrices that correspond to
the two individual constraints are (1) and (2) respectively.
By DOF incorporation, the final allowable motion matrix
that corresponds to the two constraints is (3).
é0
ê0
ê
ëê 0

(2)

Similarly, the allowable motions matrices that
correspond to other individual constraints can also be
obtained by DOF analysis.
2.2.2. DOF incorporation. The DOF incorporation is
used to represent the remaining DOFs that correspond to
multi-constraints. It refers to the intersection within DOF
of the allowable motions that respectively correspond to
individual constraints. The DOF incorporation can be
divided into the incorporation of translational DOFs and

0

0

0

0

1

0

0

0

0

0

0

0

0 ù
2 p úú
0 ûú

(3)

2.3. Rule-based constraint recognition
Constraints are implicitly incorporated into the VR
environment by automatic constraint recognition.
Constraint recognition refers to the verification of the
current positions and orientations between two objects to
see if they satisfy a particular type of constraint within a
given tolerance. The framework of constraint recognition
is shown in Figure 4.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

While performing direct manipulations, as soon as a
moving event or a dropping event occurs, an automatic
constraint recognition process is triggered to detect all the
possible constraints between the related objects. The
system recognizes the constraints between objects from
the current position and orientation of the manipulated
object according to a rule base. The rule base defines
some of the rules applied to the constraint recognition for
recognizing some specified constraints. The constraints
include against, alignment, parallelism, perpendicularity
and distance, etc. The specified recognizing rules can be
found in our previous work [10]. If the current positions
and orientations between two objects satisfy the
conditions of some constraint within the given tolerance,
the corresponding constraint is recognized. Once a
constraint is recognized within the given tolerance, it is
highlighted and awaits the user’s confirmation. If the
object is further manipulated continuously within the
given time, the current recognized constraint is ignored
and the constraint recognition is restarted. Otherwise, the
current recognized constraint is confirmed and the desired
constraint is obtained.
Furthermore, a dynamic tolerance is adopted into the
constraint recognition to improve the efficiency of
constraint recognition. If the desired constraint is not
recognized within the given tolerance, the tolerance is
enlarged according to the given step until the desired
constraint is recognized.
The moving or
dropping event
happens

and actions happened in the VR environment and output
the processed results to the visual actor and the audio
actor. A 3D mouse controlled by the input actor is mainly
used as the input device to carry out 3D manipulations. A
six-degree-of-freedom head tracker and CrystalEyes
shutter glasses controlled by the visual actor are used for
stereo display. Two sound blasters controlled by the audio
actor are used for audio. The collide actor resides in the
system to detect the possible collisions between the
objects in the VR environment. A rule base and related
algorithms for constraint processing are developed to
support constraint modelling. A feature library for
providing some basic primitives is developed to support
feature modelling. A geometric kernel ACIS is employed
to support CAD-related operations. The ACIS kernel is
also employed to support polygon modelling through its
triangulation function.
For efficiently integrating CAD with VR, a triple
database concept is adopted for solid modelling in the VR
environment. The variation in the DVS database will be
propagated into the CSG/B-rep hybrid database to change
the geometries of objects and will further result in the
variation in the constraint database to change or maintain
the constraints between objects. On the other hand, the
variation in the constraint database will be propagated into
the CSG/B-rep hybrid database to change the geometries
of objects and will further result in the variation in the
DVS database.

Recognized
constraint is
ignored

Body Actor
Collide Actor

Dynamic
Tolerance

Input Actor

3D User/Graphics Interface

Visual Actor
Audio Actor

No
Constraint-based Manipulations

Verifying the
current positions
and orientations
between objects

Current
recognized
constraint

Yes

Highlight
display

Feature
Modelling

Polygon
Modelling

Rule
Base

Desired
constraint

Recognized
constraint is
confirmed by
the user

No

Is being
manipulated
continuously

Yes

Feature
Library

ACIS
Kernel

Figure 4. The framework of rule-based constraint

Constraint
Modelling

Rule Base &
Algorithms

DVS
Manager

Geometry
Manager

Constraint
Manager

DVS
Data Base

CSG/Brep
Hybrid
Data Base

Constraint
Data Base

recognition

3. Implementation
A prototype system is implemented on the Division VR
software based on a SGI Onyx2 with Infinite-Reality
graphics workstation. In this system, a user can intuitively
create solid models in the VR environment by precise
constraint-based 3D direct manipulations. The system
framework is shown in Figure 5. The body actor
communicated with other actors handles all aspects of
user interaction. It receives and processes the information
from the input actor, monitors and processes the events

Figure 5. The system framework

To reduce the searching time for detecting various
types of constraints from various objects and to enhance
the modelling efficiency, some special constraint-based
manipulations are also implemented as modelling
operations for solid modelling in the VR environment.
These operations include <placement>, <alignment>,
<distance> and <insertion>. For each of the operations,

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

the constraint recognition process is triggered to detect a
particular pair of elements that satisfies some special
constraint within the given tolerance.
Figure 6 gives two parts that has been intuitively
created by these special constraint-based 3D direct
manipulations in the VR environment.

realized by allowable motions for precise 3D interactions
in the VR environment. The allowable motions are
represented as a mathematical matrix for conveniently
deriving allowable motions from constraints. A procedurebased DOF incorporation approach for 3D constraint
solving is presented for deriving the allowable motions. A
rule-based constraint recognition engine is developed for
both constraint-based manipulations and implicitly
incorporating constraints into the VR environment.

5. Acknowledgement

Figure 6. Two parts created by constraint-based

manipulations in the VR environment
When performing solid modelling in the VR
environment, visual cues are given to a user to obtain the
desired constraint-based manipulations. This is done by
visualizing the allowable motions of an object. The
allowable motions can be clearly visualized to convene a
message to a user for obtaining the desired constraintbased manipulations. As shown in Figure 7, a coordinate
frame with a set of allowable motion flags are used to
display the allowable motion information. The origin of
the coordinate frame is located nearby the object being
manipulated and the three axes respectively represent the
X-axis, Y-axis and Z-axis. The normal arrow at the end of
each axis indicates an allowable translation along the axis
and the inverse arrow at the end of each axis indicates an
allowable rotation along the axis.

Figure 7. Visual cues for constraint-based

manipulations

4. Conclusion
The absence of constraints is one of the major
limitations in current VR environments. Without
constraints, it is difficult to perform precise 3D interactive
manipulations in VR environments and precise solid
modelling in VR environments cannot be guaranteed. In
this paper, constraints are incorporated into the VR
environment for obtaining precise constraint-based
manipulations that are used to perform precise solid
modelling in an intuitive manner. Constraint-based
manipulations are accompanied with automatic constraint
recognition and precise constraint satisfaction and are

This paper is supported by the grants RG4/98 and
RG84/98 from the Nanyang Technological University,
Singapore, and the grant CityU1011/99E from the
Research Grants Council of the Hong Kong SAR, China.

6. References
[1] Dani, T and Gadh, R., COVIRDS: Shape modelling in a
virtual reality environment, ASME 1997 Computers in
Engineering Conference, Sacramento, CA, 1997.
[2] Fa, M., T. Fernando and P.M. Dew, Interactive constraintbased solid modelling using allowable motion, Proc. of 2nd
ACM Symposium on Solid Modelling and Applications,
Montreal, Canada, 1993, pp.243-252.
[3] Fernando, T., P.M. Dew and M. Fa (etc.), A shared virtual
workspace for constraint-based solid modelling, Virtual
Environment’95, Springer Wien, New York, 1995, pp.185-198.
[4] Fernando, T., N. Muttay, K. Tan and P. Wimalaratne,
Software architecutre for a constraint-based virtual environment,
Proceedings of the ACM Symposium on Virtual Reality
Software and Technology, London, UK, 1999, pp.147-154.
[5] Gao, Shuming, Huangen Wan and Qunsheng Peng, An
approach to solid modeling in a semi-immersive virtual
environment, Computer & Graphics, No 24, 2000, pp.191-202.
[6] Kiyokawa, K., H. Takemura, and Y. Katayama (etc.),
VLEGO: A simple two-handed 3D modeler in a virtual
environment, Eletronics and Communications in Japan, Part 3,
Vol. 8, No. 11, 1998, pp.1517-1526.
[7] Kiyokawa, K., Takemura, H. and Yokoya, N.,
SeamlessDesign for 3D object creation, IEEE Multimedia, No.1,
Vol. 7, pp.22 –33, 2000.
[8] Ma, W., S.-K. Tso and Y. Zhong, Constraint-based
modelling in a virtual environment, Proc. of CIRP Design
Seminar on New Tools and Workflows for Product
Development, Berlin, 1998, pp.221-232.
[9] Stork, A. and M. Maidhof, Efficient and precise solid
modelling using a 3D input device, Proc. of Fourth Symposium
on Soild Modeling and Applications, Altanta, 1997, pp.181-194.
[10] Zhong, Y., H. Yang and W. Ma, A constraint-based
approach for intuitive and precise solid modelling in a virtual
reality environment, The Sixth International Conference on
CAD & CG, Shanghai, China, 1999, pp.1164-1171.
[11] Zhong, Y., W. Mueller-Wittig and W. Ma, A model
representation for solid modelling in a virtual reality
environment, IEEE International Conference on Shape
Modelling and Applications, BANFF, May 17-22, 2002.

Proceedings of the Sixth International Conference on Information Visualisation (IV’02)
1093-9547/02 $17.00 © 2002 IEEE

