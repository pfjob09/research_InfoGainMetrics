Visual Analysis based on Algorithmic Classification
J. Johansson,
ITN*,

M. Jern,
ITN,

Abstract
Extracting actionable insight from large high
dimensional data sets, and its use for more effective
decision-making, has become a pervasive problem
across many fields in research and industry. This paper
describes an investigation of the application of tightly
coupled statistical and visual analysis techniques to this
task. The approach we choose in this study is
“unsupervised learning” where we investigate the
advantages offered by close coupling of the selforganizing map algorithm with new combinations of
visualization
components
and
techniques
for
interactivity.
Keywords: Unsupervised learning, self-organizing
map, visual analysis, tightly coupled visualizations,
knowledge discovery, visual user interface

1. Introduction
As a result of the rapid development in the field of
information technology, demand has increased on
accurate evaluation of data. Research areas e.g. neural
networking, knowledge discovery and data mining are
continuously becoming more significant to fulfill those
needs. When the amount of data increases, both in terms
of size and dimensions, it is becoming harder to make
accurate interpretations that still retain the main features
of the data. There are several approaches to this task:
(i) Algorithmic data mining techniques (classical
statistical methods, Bayesian methods, neural network
methods and so on) form by far the largest and most
widely used group of approaches, also referred to as the
analytical approach in this text. They use mathematical
methods to produce numerical analyses of data and to
extract models and decision rules, typically they form the
core of commercial data mining applications.
(ii) Visual data mining techniques (graphs, scatter
plots,
parallel
coordinates,
more
customised
visualisations) are a much smaller group which focus on

R. Treloar,
M. Jansson
Unilever Research,
ITN
the intuitive presentation of and interactions with visual
representations of the data so as to exploit the users own
abilities in spotting patterns, outliers and trends.
The different groups have complementary strengths
and weaknesses. The mathematical approaches
systemically investigate all the included data, give
numerical measures and generate explicit models but
they are weak in engaging the user, in helping
communicate the meaning of an analysis, particularly its
significance and relationship to the underlying data.
Visual techniques on the other hand certainly engage
the user. They can provide good exploratory overview
and in some cases context, but are in doing so
susceptible to the users subjectivity, limited to the users
cognitive capacities and do not directly produce as an
output, numerical models and analyses that can
subsequently be applied to other data. The strengths and
weaknesses are in other words complementary.
We believe a stronger strategy lies in tightly
coupling the visualizations and analytical processes into
one tool. Such a coupling, allowing the user to visually
participate in the analytical data mining process remains
a major challenge, but could result in a data exploration
environment that uses the complementary strengths of
both techniques.
This paper presents one example of how these two
technically widely separated research areas can be
combined to form a useful solution of this intricate
problem. We consider one common data mining process,
that of “unsupervised learning”. Generically the output
of such a process is an additional layer of structure on
the data set that essentially labels each datum according
to how “similar” it is to another. In an unsupervised
learning process we attempt to find and catalogue
patterns, trends and clusters or similarities in data
previously unknown to us and for which we have no
prior knowledge on what might be found.
One example might be the process of finding
patterns in the book purchasing activity by a large group
of customers. Perhaps you might find that a particular
subgroup of customers always bought a particular type of

*
ITN - Institutionen för Teknik och Naturvetenskap
Campus Norrköping, Linköpings Universitet

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

book. A book retailer might then use this insight to make
a decision about what book offers to make to a new
customer who fell in the same subgroup.
In order to experiment with this idea we choose one
analytic approach to unsupervised learning and couple
with visualisation components to create a demonstration
application. The analytic component we choose to use
for this investigation is one of the most widely used and
successful unsupervised learning algorithms, the selforganizing map (SOM). The algorithm has its origin in
neural networking and was created as a mathematical
model of the mapping between the nerve sensory and the
cerebral cortex. [1] The self-organizing map is primarily
used as a dimension reduction tool and as an abstraction
process to represent data points with fewer
representatives. The mapping is topology preserving, i.e.
it forms a locally correct projection while its distance
mapping globally is a mere consequence of the local
projection.
The characteristics of the self-organizing map are
useful in a wide variety of areas and it has become the
most popular artificial neural network algorithm. The
algorithm is used as a standard analytical tool in for
example statistics, signal processing, control theory,
financial analysis, experimental physics, chemistry and
medicine. The self-organizing map algorithm uses
competitive learning to let its neurons adapt to the input
so that they eventually specialize into sensing different
input stimulus [2] [3]. The winning neuron is “rewarded”
with becoming more like the sample vector [4]. If order
among the neurons is desired, not only the winning
neuron, but also its neighbours should learn from the
sample vector. The neighbours do not adjust to the
sample vector to the same extent though. How much a
weight-vector, i.e. the vector consisting of values in all
dimensions in the original space, of the neuron is
adjusted depends on its closeness to the winning neuron.
We have evaluated several neural networking
algorithms that perform scaling and SOM was chosen
due to the speed, the topological accuracy and the builtin clustering along with the superior amount of resources
available on the topic. The scalability SOM offers in
extensions like ViSOM [5] and the extended Kohonen
maps presented by Peter Kleirweg, [6] also influenced
the choice.
The objectives of our demonstration application are
to perform interactive analysis of multidimensional data.
This should be done by using state-of-the-art
visualization techniques to graphically display neuron
grids generated by the self-organizing map. We are
especially interested in doing interactive real-time
analysis and major challenges lie in coupling
visualization components and interaction techniques with
the self-organizing map algorithm. We would also like to
use several visualization components in order to enhance
the flexibility of the application. By using linked,
interactive visualizations in multiple views we wish to
create a dynamic platform primarily for exploratory
analysis.

2. Related Work
Since the development of the self-organizing map
algorithm the method has been used in many data mining
applications. Because of its proven efficiency and
success, it has been preferred as a popular solution to
numerous problems in the data analysis field. Several
commercial tools such as Viscovery SOM Viewer [7],
Kensington Discovery Edition [8], DB2 Intelligent
Miner [9], DataEngine [10] and Visipoint [11] use SOM
for data classification, clustering or scaling.
The Viscovery SOM Viewer from Eudaptics
Software Company uses SOM for finding correlations in
multivariate data. It uses several 2D visualizations
consisting of a large number of neurons. The Kensington
Discovery Edition from Inforsense Software Company
provides 2D and 3D visualization running on different
databases, spreadsheets, XML documents and various
document management systems. Also, it supports
information retrieval, context knowledge management
and dynamic data warehousing. The DB2 Intelligent
miner from IBM Company is tightly coupled with DB2
and uses Kohonen neural network, decision trees and
various classification methods for data analysis. The
DB2 Intelligent Miner requires that DB2 is installed.
Besides this, pre-processing and data warehouse tools
must be obtained individually. The DataEngine from
M.I.T. (Management Intelligenter Technologien GmbH)
provides pre-processing of the data, data acquisition and
visualization. It is especially designed for clustering and
contains various mathematical and statistical functions.
The algorithms used in Visipoint are mostly based on
neurocomputing although fuzzy concepts and some other
auxiliary algorithms are also used. The tool supports
input from any text or spreadsheet format and provides
pre-processing and different visualization representations
such as bars and histograms.
Several books, papers and articles have been written
on visualization based on different scaling and clustering
techniques. The article SOM-Based Data Visualization
Methods [12], explains how the self-organizing map
works and gives an overview of what kind of
information that can be acquired from different
presentations. It also describes how the self-organizing
map can be utilized in exploratory data visualization. An
example of how the self-organizing map can be used for
visualization of geospatial data is given in [13]. The
application discussed focuses on data exploration and
visualization for knowledge discovery and classification.
In [14] the self-organizing map is used for finding
patterns in world poverty. It discusses how new
knowledge can be detected by using neural networking
technologies. Multidimensional scaling techniques and
graph drawing are in [15] coupled to visualize time
varying high dimensional data sets.

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

3. Unsupervised Learning Algorithm as
basis for Visual Analysis
The SOM Visualizer [16] is an application used for
interactive analysis of multidimensional data (figure 1).
The self-organizing map algorithm is tightly coupled
with both visualization and interaction components and
this gives the user many options and possibilities to
manipulate with the algorithm in order to get the desired
result.

3.1. Visualization Components
The SOM Visualizer uses three main visualization
components from the graphics library OpenViz [17]
(parallel coordinate chart [18], patch chart [19] and
surface map [20] [21]) that have been integrated in a user
interface that follows the Windows standards (figure 1).

Figure 1: SOM Visualizer – a tool for interactive
analysis of multidimensional data.
Overview and flexibility when visualizing
multidimensional data sets are the main reasons why
parallel coordinate charts are used for displaying the
original data set. The upper parallel coordinates chart in
figure 1 is used to visualize the distribution of input
vectors, the labels of the dimensions and their minimum
and maximum values. It is also used to set requirements
for being included in the data set that is sent to the selforganizing map algorithm. The other parallel coordinate
chart is activated when the user performs drill-down by
selecting neurons in the surface map or in the patch
chart. It displays the data items that have been assigned
to the region selected.
Because a patch chart displays a grid of squares, it is
the perfect visualization tool for the neuron grid
generated by the self-organizing map algorithm.
Consequently, patch charts play an important role in the

SOM Visualizer for displaying various aspects of the
mapped data.
The left patch chart in the main window (figure 1)
shows the percentage of the data items that have been
assigned to each neuron. This visualization effectively
reveals the clusters of neurons. This is an important
aspect as the fact that neighbouring neurons learn similar
things makes the probability that they contain similar
data items high. This visualization allows the user to
select neurons to visualize in one of the parallel
coordinate charts. The second patch chart in the main
window is used to visualize inter- and intra-neuron
relationships. By default the intra-neuron standard
deviation is displayed, since its values are easier to
interpret than the nearest neighbour differences that
display the inter-neuron relationships.
The intra-neuron standard deviation is, as the name
suggests, a measurement of how similar the data items
associated to each neuron are. However, the similarity is
not based on the similarity to each other, but to the
weight vector of the neuron. The possibly obvious reason
is that the weight vector is what represents the input
vectors in the output space. When it comes to
interpreting the visualization, the following has to be
taken into account: in the visualization, the legend is
based not on absolute, but relative values. Normally, the
average intra-neuron standard deviation is distributed
such that many neurons have low relative values. The
reason for this is that neurons in areas where few input
data items have been assigned have had few possibilities
to learn and consequently are relatively different to the
input vectors that have been assigned to them. Data items
that belong to dense clusters on the other hand are spread
out in areas containing many neurons due to the fact that
neighbours learn in the self-organizing map algorithm.
These neurons have small errors because only input data
items being very similar will be associated to a neuron. If
they are not extremely close, neighbouring neurons
would probably be closer and would win the competition
of that input data item.
The neighbour difference patch chart, displays the
similarity between a neuron and its neighbours. Because
of the way the self-organizing map algorithm works,
dense clusters in the original data are assigned to
proportionally many neurons as the neighbouring
neurons learn each time a data item is assigned to a
neuron. Sparsely populated areas of the input range on
the other hand, are represented by few neurons.
Consequently, data items within a cluster generally
receive better approximations than outliers as the former
are more likely to be associated to a neuron very close to
themselves. As a result of these characteristics, areas
coloured dark blue on the neighbour difference patch
chart are likely to be a part of a dense cluster.
The dimensional patch charts in the optional
graphics window (figure 2) in some cases give a better
overview of the properties of the data. The dimensional
patch charts show the values of the weight vectors for
each dimension. By comparing the shapes of the colours
in these charts, it is easy to see in which neurons it is

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

likely to find data items with interesting characteristics.
It is also possible to see if any dimensions share similar
attributes.
For instance, if the values for one dimension are low
in certain neurons and the same neurons most often have
low values in another dimension, then the two
dimensions are similar. If the data is to be visualized in a
low dimensional output space in which only some of the
dimensions can be displayed and if one of the two
similar dimensions is visualized, the other one could be
regarded as having approximately the same values.
Being able to show a three-dimensional landscapelike area, the surface map (figure 4) is a useful tool when
it comes to quickly giving the user an overview of the
properties of the data. In the application, the surface map
is used as a complement to the patch chart for showing
the distribution of the input data items in the neuron grid,
the neighbour differences or the intra-neuron standard
deviation. The main reasons for implementation are the
swiftness in giving the user an overview of the data and
the fact that making a rectangular selection of several
neurons is more easily done in this type of visualization.
The former is made easier by the colour mapping based
on the input data item frequencies of the neurons.
The surface map consists of the two-dimensional
neuron grid and a third dimension, on which the “terrain”
is based. By dragging the mouse it is possible to view the
map from any direction in the three dimensional space.

Figure 2: Optional graphics window

3.2. Visual User Interface for Interactive
Analysis
Our application makes it possible not only to run the
self-organizing map algorithm on any data set, but also
on a subset of the chosen data set (by letting the user
restrict the data items included in the subset by selecting
the range of each variable). Just like most interaction
available, the selection of the range is done directly in
the visualization component by dragging the encircled

arrows vertically in figure 3. The background colour is
used to display the restrictions made in each dimension.
If the result did not match the users’ intentions, a new
selection can easily be made and the algorithm can be
run again. By only processing a subset of the data, the
performance can be substantially improved.
In the case of a large data set, filtering can
significantly reduce the calculation time needed by the
algorithm. In the case when only a part of the input data
is of interest, this feature eliminates the unwanted areas
and the whole visualization area can be used for the
selected parts.

Figure 3: Filtering in parallel coordinate chart
A very important feature of the SOM Visualizer is
the ability to drill down on the self-organizing map. In
the patch chart component, this is done by simply
clicking on the different sub areas. The result of the
selection, i.e. the input vectors corresponding to the
selected cluster, is then shown in a parallel coordinate
chart (figure 1). Using the mouse pointer to move around
in the patch chart is a very intuitive way and gives the
user full control. The user can choose either to view just
the result of the current cluster or to view the current
cluster together with its most similar clusters. The
number of most similar clusters can easily be adjusted to
range from only one to the entire grid. By viewing the
current cluster along with some of its most similar
clusters give a better overview of how the original data
set is ordered. It also gives an understanding of how the
self-organizing map algorithm works, because it is no
guarantee that the most similar clusters are the closest
ones; although it is more likely.
Previously, SOM applications have only been
dealing with the association of data items to the neurons.
They have not been able to display which data items
have been grouped together. The interaction mentioned
in the previous paragraph solves this problem by
displaying the values of the original data items that have
been associated with the selected neuron.
The rectangle manipulator is another important
feature of the SOM Visualizer. With the rectangle
manipulator, the user is able to select large or small
groups of clusters in the surface map (figure 4). This is
an important feature because it enables the possibility to
not only look at each cluster itself, but also a whole area
of clusters. Since clusters close to each other often are
more similar than clusters far apart, it can be useful to
look at them as a group. The result of the selected
clusters is then visualized in a parallel coordinate chart.
The rectangle manipulator size is easily changed by

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

grabbing one of its corners with the mouse pointer and
then moving it to a desirable size.
This new interactive three-dimensional visualization
also makes it easier to perceive close groups of clusters.
The possibility to rotate the view facilitates the
understanding of how clusters are ordered on the map.
By assigning a colormap to the surface map, a more
intuitive visualization is achieved. The colormap
together with the height differences in the map yields a
faster interpretation.

3.3. Workflow in SOM Visualizer
A simplified workflow of the SOM Visualizer is
shown in figure 5. The illustration is divided between the
standard interaction and the visualization and
visualization interaction techniques. The standard
interaction regards the SOM algorithm interaction, while
the visualization and visualization interaction techniques
describes the visualizations and the interactions used.

Figure 4: Surface map with a rectangle
manipulator (an interaction technique used for
selection of groups of clusters)
The nature of the self-organizing map algorithm
yields a neuron grid in which neighbouring neurons tend
to have similar dimensional values. However, this does
not automatically mean that the neighbours of a neuron
are the neurons most similar to it. This and the fact that
neuron grids having a large amount of neurons yield
better results than those having only few neurons are the
reasons why improvements of the neuron selection with
a dynamic neighbourhood have been made, i.e. the
possibility to show the values of the most similar
neurons as well as the neuron selected.
The interactive two- and three-dimensional
visualizations are an important extension of the ordinary
static two- and three-dimensional views. Applications
exist, which offer similar visualizations, but none with
the type of interaction the SOM Visualizer can provide.
The interactivity combined with several charts displaying
e.g. association frequencies, intra- and inter-neuron
similarities and dimensional values, make the SOM
Visualizer a useful tool for the analysis of any kind of
multivariate data, especially if the analysis process
focuses on similarity.
Figure 5: Workflow in SOM Visualizer

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

The workflow begins with the loading of an MS
Excel file. The SOM Visualizer then filters the metadata
from the data containing the multidimensional data and
stores it in an n-dimensional array. The original
multidimensional data is simultaneously visualized in a
parallel coordinate chart. The user can choose to select
which input vectors that should be included and then run
the algorithm with different parameters. The algorithm
calculates a two-dimensional representation of the
original n-dimensional data and visualizes the result in
different patch charts. The user can then select an area in
the patch chart and view which parts of the original data
have been clustered together. This data is visualized in
another parallel coordinate chart.

4. Conclusions and Future Work
In this paper, we have presented one example of
how two widely separated research areas can be
combined to allow for a more visual participation in an
analytical data mining process. The key points we have
demonstrated are:
(1) By tightly coupling the visualization and the
analytical process, complementary strengths of
both can be obtained.
(2) Interactive analysis can be performed in realtime on moderate sized multivariate data sets.
(3) By using linked, interactive visualizations a
dynamic platform for exploratory analysis is
made possible.
When dealing with large, multivariate data sets,
overview is hard to obtain. By using a scaling algorithm
a mapped data space is created. The mapped data space
retains the features of the original data to as large an
extent as possible. By tightly coupling the visualizations
of the mapped data space and visualizations of the
selections in the original data space, overview is
obtained while no detail is lost as the selections work as
drill-down in the data set.
A tight coupling of the visualization and the
analytical process takes advantage of statistical findings
that can be hard to discover even for a trained eye.
Meanwhile, visualizations including or depending on the
output of the analytical process simplify human
exploration of the data and improves its accuracy. Thus,
such a process takes advantage of the complementary
strengths of visual techniques and the mathematical
approaches. Already, such analysis can be performed in
real-time or near real-time by most computers on
moderate sized data sets.
The creation of an environment where effective
analysis of multivariate data sets by the visualization of
meta data generated by scaling algorithms, requires more
than mere visualization of the mapped data space (in this
case the neurons). Though visualization of various
aspects of the meta data can be useful to find tendencies

among the dimensions created by the scaling algorithm,
they cannot suffice without a way to link the meta data to
the input data space. We regard visualizations in the
original data space tightly coupled with those in the
mapped data space as the primary concept to achieve
such an environment with the properties mentioned
above. To be useful, these visualizations should focus on
flexible, intelligent selections made directly in the
mapped data space.
In doing so, the knowledge required of the
algorithmic analysis method (the scaling algorithm) used
can be minimized and hence the output it generates can
be used to improve accuracy of visualization based
human decision making. However, to fully understand
the way the mapped data space is ordered, some
knowledge about the properties of mapped data spaces
generated by the algorithm used is required An example
is what quality of the topology that can be expected. In
the case of the SOM algorithm, neurons near each other
tend to be similar while little can be predicted about the
similarity of widely separated neurons.
To demonstrate the key points mentioned above, we
have developed the SOM Visualizer which is a
standalone application that uses several visualization
components together with an “unsupervised learning”
data mining process for visual analysis of multivariate
data. The application is based on the self-organizing
map algorithm and it produces a variety of charts that
each returns information useful for analysis of different
aspects of the data. Together, the charts can be useful for
anything from analysis of the characteristics of clusters
of input data items to analysis of dimensional attributes
and dependencies. The possibility to view the original
data as well as the constructed cluster maps enhanced
with interactivity that allows the user to perform
activities such as drill-down techniques that are used to
highlight the attributes of dynamically sized clusters in
the original data set, make it a flexible tool for
multivariate data analysis.
The flexibility is one of the major advantages with
the application. It can take any properly structured data
set as input, dynamically selected subset and then run the
self-organizing map algorithm with a wide variety of
options to return results that can be analyzed using
several different tools including data filtering to produce
dynamically sized selections in the original data set.
However, some drawbacks are carried over from the
self-organizing map algorithm. One example is the lack
of predictability in the unsupervised learning process.
Two maps cannot be compared since they have evolved
in different directions. Hence, there is no way to know
where to begin when searching for neurons with certain
properties. The neuron values patch charts solve this
problem, but form an awkward tool that lacks the
overview needed. Though very accurate at small
distances, neuron grids created by the SOM algorithm
are unpredictable when differences between various
widely separated neurons are compared.

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

feature would be to let the user draw a custom
shaped selection.

4.1. Future Research
To obtain long distance accuracy another scaling
algorithm, for example Sammon Mapping [22] [23],
should be chosen. Unfortunately, few algorithms can
compete with the SOM algorithm when it comes to
topological accuracy, so a change of scaling algorithm
would probably trade one drawback for another.
However, ViSOM [5], a variant of the SOM algorithm, is
better at the preservation of clusters than the original
algorithm and consequently visually more appealing. It is
likely, however, that the topology it produces would be
inferior to that of the SOM algorithm as the SOM
algorithm converges to the unique minimal point of the
reconstruction error as long as the right parameters are
set [24].
Another area where improvements of the concept of
coupling of visualization and algorithmic analysis
models could be made include investigation of various
alternative approaches to unsupervised learning from the
point of view of what sort of interactions between the
visualization and the algorithmic techniques that are
useful and practical. Perhaps there are particular
algorithmic approaches that have more to gain from
visual interaction. This could be both in terms of how
visualization can be used to drive the model building and
in the interpretation of the results.
Just as with unsupervised learning in isolation, this
whole process could be entirely cognitive. For example
an experienced human observer of particular types of
data would make decisions just on what they see. In this
case new data is observed, an existing one used (but
inside the human brain - it is not explicit, but never the
less it is there) and a decision made. An important
feature here is the coupling of the human observers
experience (which is what makes up his internal model)
of the problem domain.
At the other extreme the decision support process
could be entirely computational. For example a web
search engine makes a decision on what responses to
give a query without human intervention at any stage.
Of particular interest are the cases that are or could
be in between the above? For example when human
observers need to interpret and make decisions based
upon computational generated models, or intuitive
understanding of statistical concepts, like significance
testing which are important in building models but hard
to conceptualize.

4.2. Future Improvements of the SOM
Visualizer
To further enhance the flexibility of the SOM
Visualizer improvements could be made in a wide range
of areas. Below is a summary of suggestions for future
improvements:
The shapes of the user defined selections could
be made more flexible. For example, a useful

A more flexible way to select subsets of the
original data would be to let the user select
which dimensions that should be included in the
calculations.

x

Instead of the square grid currently used, a
hexagonal grid would make interpretations of
similarity more intuitive.

x

Support of dimensions based on non-unique
strings. This could be done by converting
strings to numbers and then include the
dimensions affected in the process

x

The second parallel chart could be removed and
instead be included as a selection in the input
chart. This would reduce the size the program
requires on the screen and make it possible to
run the self-organizing map on selections made
by drill-down.

5. Acknowledgements
This project was partly funded by the EC
Commission IST-2001-28137,” SMARTDOC”, a
collaboration between Linköping University, AVS,
Unilever, AETmed, Intecs and Central Manchester
Healthcare Trust. The SMARTDOC web site can be
found at: http://servus.itn.liu.se/smartdoc/. We would
also like to thank Staffan Palmberg, Linköping
University for providing the interactive parallel
coordinate chart and the Excel reader components.

6. References
[1].
[2].
[3].

[4].
[5].

[6].
[7].
[8].
[9].

x

x

[10].

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

T. Kohonen. Self-organizing maps. Berlin, Springer.
1997
Self-organizing Maps url: http://davis.wpi.edu/~matt
/courses/soms/
S. Kaski. Data exploration using self-organizing map.
Helsinki University of Technology, Espoo, Finland.
1997
Basic principle of the self-organizing map algorithm
url : http://www.visipoint.fi/esom.html
H. Yin. ViSOM: A Novel Method for Multivariate
Data Projection and Structure Visualization.
Department of Electical Engineering and Electronics,
Manchester, UK. 2000
Extended Kohonen maps url: http://odur.let.rug.
nl/~kleiweg/kohonen/kohonen.html
Viscovery
SOM
Viewer
homepage
url:
http://www.eudaptics.com/home/index.html
Kensington Discovery Edition homepage url:
http://www.inforsense.com/
DB2 Intelligent Miner homepage url: http://www3.ibm.com/software/data/iminer/
DataEngine homepage url: http://www
.dataengine.de/

[11].
[12].
[13].

[14].

[15]

[16].

[17].

Visipoint homepage url: http://www.visipoint.fi/
J. Vesanto. SOM-Based Data Visualization Methods.
Intelligent Data Analysis
Vol. 3, No. 2 1999.
E. L. Koua. Self-Organizing Map for geographic data
exploration and visualization. Annual Meeting of the
American Association of Geographers, Los Angeles,
CA, Mar. 20-23, 2002.
G. Deboeck. Self-Organizing Patterns in World
Poverty using multiple indicators
of poverty,
repression and corruption.PASE 2000, Leuven
Belgium April 2-5, 2000
Dwyer, T. (2003). A Scalable Method for Visualising
Changes in Portfolio Data. In Proc. Australian
Symposium
on
Information
Visualisation,
(invis.au'03), Adelaide, Australia.
J. Johansson, M. Jansson. Interactive visualization of
statistical data using multidimensional scaling
techniques. Master thesis, Linköping University,
LITH-ITN-MT-EX--03/008—SE. 2003
AVS url: http://www.avs.com/

[18].

[19].
[20].

[21]

[22].
[23]

[24]

Proceedings of the Seventh International Conference on Information Visualization (IV’03)
1093-9547/03 $17.00 © 2003 IEEE

Inselberg, A. Dimsdale, B., "Parallel Coordinates: A
Tool for Visualizing Multi- Dimensional Geometry,"
Proceedings of the First IEEE Conference on
Visualization.,361 (1990).
Financial Data Visualization url:
http://www.visualizeinc. com/brochures/financial.pdf
Wise, J. A, et al. Visualizing the Non-visual: Spatial
Analysis and Interaction with Information from Text
Documents. In information Visualization
Proceedings (1995) IEEE, pp. 51-58.
Davidson, G. S., Wylie, B. N., & Boyack, K. W.
(2001). Cluster stability and the use of noise in
interpretation of clustering. Proc. IEEE Information
Visualization 2001, 23-30.
Sammon mapping url: http://akosgmbh.de
/sammons.htm
Sammon, Jr., J. W. A nonlinear mapping for
data structure analysis. IEEE Transactions on
Computers, 18:401-409. 1969
Y. Sun. On Reconstruction Error of Kohonen SelfOrganizing Mappinge url: ttp://www.cs.colostate.edu
/~srimani/icnn96/61-80.html

