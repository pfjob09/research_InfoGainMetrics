Orderly Broadcasting in a 2D Torus
Hovhannes A. Harutyunyan and Perouz Taslakian
Department of Computer Science
Concordia University
Montreal, Quebec, H3G 1M8
Canada
haruty@cs.concordia.ca
Abstract
In this paper, we describe an ordering of the vertices
of a 2-dimensional torus and study the upper bound on
the orderly broadcast time. Along with messy broadcasting, orderly broadcasting is another model where the nodes
of the network have limited knowledge about their local
neighborhood. However, while messy broadcasting explores the worst-case performance of broadcast schemes,
orderly broadcasting, like the classical broadcast model, is
concerned with finding a fixed ordering of the vertices of a
graph that will minimize the overall broadcast time.

1. Introduction

difference between messy broadcasting and the classical
broadcast model is that in the messy broadcast scheme,
the vertices know nothing about the topology, and at each
broadcast round transmit the message to a randomly selected neighbor.
In practice however, it is not realistic to require for each
node of a network to know the network topology or to make
decisions based on a set of stored protocols. In many cases,
the nodes of the network have primitive structures with
small memories that cannot store such information or make
intelligent decisions. On the other hand, building networks
in which the nodes have no decision-making responsibility
is much simpler and more robust. These were the reasons
that made the study of messy broadcasting interesting.
In messy broadcasting, when a vertex receives a message, it randomly chooses a neighbor at each round and
sends the message to that chosen neighbor. Ultimately, the
neighbors of vertex will be informed in some order. This
means that if we randomly number the neighbors of each
and let send the message first to the neighvertex
bor numbered 1, then 2,
etc. then we would have simulated an instance of messy broadcasting. The overall broadcast time of the graph in this case will depend on the way in
which the neighbors of each vertex are numbered. A different ordering of the numbers might yield a different broadcast time; and the question here is : what is the ordering that
will give the minimum possible broadcast time for a given
graph?
 

The term broadcasting refers to the process of information dissemination in a communication network whereby a
message, originating from one of the nodes, is transmitted
to all the other nodes in the network. A communication network can be modeled as an undirected graph. Thus, during
broadcasting a given vertex needs to disseminate its message to all the remaining vertices of the graph.
Substantial effort has been made recently to make this
dissemination efficient and fast. Various broadcasting models have been introduced [2, 5, 11, 10, 7], which deal with
the issue of finding a scheme whereby this dissemination
process takes the least amount of time. In these broadcast
models, known as classical broadcasting, it was assumed
that each vertex has the knowledge of the graph topology,
the originator of the message and the time at which it was
sent. Based on this information, and in order to minimize
the broadcast time, each vertex of the graph transmits the
message in the most clever way.
In 1994, Ahlswede et al [1] introduced a model of broadcasting called messy broadcasting. Unlike the classical
model, messy broadcasting dealt with analyzing the worstcase performance of broadcast schemes. But the major

 

 

✁

✄

 

✆

✆

✆

The above question has lead to the idea of orderly broadcasting [4, 9] , which deals with the problem of finding an
ordering for each vertex of a given graph that will minimize the overall broadcast time of .
 

✟

✟

In what follows, we will state a more formal definition
of the orderly broadcast model and give known bounds on
some studied graphs.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

2. Definitions and Notations
We will model a communication network as a connected
consisting of a set
graph
of vertices (nodes) and a set of edges
(communication
lines) connecting these vertices. Two vertices
and
are adjacent or are neighbors when they are connected by an edge
such that
. We define
, to be the number of neighbors
the degree of a vertex ,
of vertex . A path of a graph is a sequence of vertices
)
, such that every
of the form
,
. A graph
is said
to be connected if for every pair of vertices
there
exists a path that connects to . The distance,
,
and
is the number of
between two vertices
edges of the shortest path between and . The diameter
of a graph is the maximum distance between all
pairs of vertices of .
The originator is a vertex
which initiates broadcasting by transmitting its message to the remaining vertices
through the edges. Broadcasting is complete when all the
vertices of the graph are informed. It is required that broadcasting is completed as fast as possible and subject to the
following constraints:
✄

✟

✠

✌

✎

✄

✑

✌

✠

☛

✓

✕

✌

✗

✕

✙

✆

✆

✆

✕

✜

✢

✎

 

✁

✁

✄

✄

✕

✁

✎

 

✧

✧

✠

✌

✑

☛

✕

✑

✕

✕

✬

☛

✯

✟

✌

✯

✌

☛

✕

✑

✻

✕

✻

✼

✕

✠

✁

☛

✕

✑

✌

✙

✕

✳

✆

✆

✆

✕

☛

✴

✶

✸

✺

✄

✎

✿

✙

❀

❂

❀

✶

✟

✠

✌

✎

✑

☛

 

✌

✁

✄

✕

 

 

✕

 

✁

❅

✄

✁

✌

✑

☛

✕

✄

✕

 

✕

❊

✑

☛

✟

✟

✟

✁

✄

✕

and will transmit it to the neighbors to which it has not yet
sent, if any, in each time unit.
In [8], Harutyunyan and Liestman obtain exact values
for the messy broadcasting time of complete graphs, cycles,
complete -ary trees, and hypercubes. Later, Comellas et
al [3] continue the study of messy broadcasting and obtain
exact values and bounds on the messy broadcast times of
multidimensional directed tori.
A symmetric digraph is a graph
where every edge
in the undirected graph becomes two
,
in the digraph. We define the outedge
edges
of a vertex to be the edge
. Broadcasting in
a symmetric digraph is identical to broadcasting in the associated undirected graph. Hence, in all further discussion
we will model our communication network as a symmetric
digraph.
of a vertex
of degree is the
An ordering
assignment of distinct time units
, called labels,
to denote the label
to the outedges of . We use
assigned to the edge from to . When every vertex of a
graph has an ordering , we say that has ordering .
is a graph with ordering and let
Suppose
such that
are the neighbors of .
Orderly broadcasting from originator proceeds as follows:
At time , the originator learns the message. Vertex
learns the message at time
;
learns the message
learns the message at time
. In
at time
general, for any vertex
, if learns the message at
time , it sends the message along its outedge ordered at
. Orderly broadcasting is complete when every
time
vertex has received the message. The time at which this
. The broadcast time of graph
happens is denoted by
with ordering is :
❅

✄

✟

 

✌

✑

☛

 

✁

✠

✌

✎

✑

☛

✎

✕

✌

✌

✑

☛

☛

✕

 

✑

✕

 

 

✌

✑

☛

✁

 

❡

✎

✕

✁

✄

❢

❅

✌

✌

✿

 

✺

 

❡

✆

✌

✆

✆

❅

✑

☛

✕

 

 

✕

✟

❡

✄

✟

 

✁

✠

✌

✎

❢

✟

❡

✑

☛

❡

✄

✌

✕

✌

✙

✕

✌

✳

✆

✆

✁

✆

✕

 

✄

✴

 

 

❧

i) each transmission requires one time unit.

✕

 

❡

 

ii) a vertex can transmit only to an adjacent vertex.

❡

✌

☛

✑

✕

 

 

■

✁

❡

✴

✟

✠

✌

✎

✁

✄

✌

✑

☛

✕

✴

 

❂

♣

✄

✑

☛

q

❂

 

■

✄

✟

✠

✌

✎

r

✑

☛

✑

☛

❡

 

✄

✳

♣

, we define the broadcast
Given an originator
time of vertex ,
in the classical model to be the minimum number of time units required to complete broadcasting from vertex [2, 5]. The classical broadcast time of a
graph
is:
 

✕

✙

 

✕

✙

✑

✕

♥

✳

 

iii) a vertex can transmit the message to one vertex in
one time unit.

✌

☛

✑
 

r

✑

❯

 

✁

✄

r

■
☛

✟
✠



◗

❙

✓

■
☛

✢

✑

☛

The orderly broadcast time of graph is the minimum
broadcast time over all possible orderings of the vertices
of . That is,
✟

✑
 

✑

❯

 

✁

✄

❡

■

☛

✟
✠



◗

❙

✓

■

☛
✢

✟

Since each vertex can inform one of its adjacent vertices
in one round, then at each time unit the number of informed
vertices can at most be doubled. Thus, after time units,
the number of informed vertices is bounded by . A trivial
lower bound for broadcasting a message in any graph will
.
be
The messy broadcast time of a vertex
,
is
the maximum number of time units required to complete
broadcasting from vertex [1, 8, 3]. The messy broadcast
time of a graph
is:
✶

✴

✺

❯

❳

❨

❩

❬

✳

✄

❯

✑

❭

☛

 

✁

✄

 

■

❫

✑

☛

 

✄

✟

✠

✌

✎

✑

☛

✑
✑

r

■

✇

☛

✟
✠



❂

①
✓

■
☛

✟
✢

r

Define
to be the time at which vertex
receives the message through path
under ordering . If
and
are adjacent such that
, then
implies that if receives the message at time , then
it will send it to at time
.
The orderly broadcast time is known only for a limited
number of graphs. Below we present some of the results
described in [4, 9] :
✌

■

r

☛

✯

✁

✑

✻

✕

✕

✻

✯

 

✁

✄

✁

❡

✄

 

✕

✶

✠

❡

✌

☛

✑

✕

✴

⑤

 

 

✕

♣

✕

♣

q

✶

⑦

❊

✑
 

✑

❯

 

✁

✄

✑

❫
❫

■
☛

✟
✠



◗

❙

✓

■
☛

✢

1. For any tree ,
⑥

In this paper,
refers to the messy broadcast time
. In this model, every informed
of under the model
vertex knows to which neighbors it has sent the message

☛

✑

■
☛

⑥

⑥

✑

❀

■

☛

⑥
q

✇

✺

⑧

✑

■

✟

❫

☛

✟

❛

⑦

⑨

❜

2. For a path

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

✯

✜

on
①

vertices,

①

⑩

.
❶

✑

■
☛

✯

✜
✠

✇

✺

⑧

✄

⑦

✄

3. For a cycle
❷

on
✜

vertices,
①

✺

⑨

■

☛

❷

✜

✑

.
①

✑

✠

✇

☛

⑥

✌

✜

❫

✠

✓

☛

➎

✑

and

❯

❂
❧

❀

❂

❀



⑩

✿

➎

❧

➁

✎
✑

 

✌
✑

✌
✌

➑

✑

✑

❯
 

⑧

☛

⑥
✜

❫

✠

✓

☛

☛
✕

☛

❻

on
✜

✕
✿

✑

■
☛

❻

✜

✠

mod

➒

✠

vertices,
①

➏

➁

➑

4. For a complete graph

➏

✿

 

①

➓

✌
✑

☛

❀
❀

mod

➒

✁

✄

✌

✕

①

✌

☛

⑩

✿

✢

or


➑

✑

✁

✄

➏
✢

❀

✇

❭

❳

❨

❩

❬

①
q

✺

5. For a grid

❽

❾
❨

❩

✟

❬

①

The diameter of a 2D Torus is:
❿

on
✜



vertices,
①

✑

❊


①

✑

■
☛

✟
✜

✠



q

✇

☛

❫

➁
❫

⑥
✠

➔
q

✺

①

⑩

➔

➁

➣

✺

➣

✿

①
①

➔
➔

➞

➊

Let
➅

↕

✠

✺

➣

✺

➣

➠

➡

✺

➣

✺

➣

➠

➤

➥

➦

➥

➧

➝➛

➝

①
①

➔
q

✿
➔

➠

➡

➠

➤

➨

➩

➩

➝

➝➟

➇

Here we make the following observation:

➉
➉

Observation 2.1
✑

(a)
■

☛

✑

✟
❀

■

☛

for any connected graph
✑

✟
❀

■

❫

☛

✟

✇

➉

.
✟

In the following sections we will first describe the
and discuss the
ordering of a 2-dimensional torus
upper bound for broadcasting under .
➊

❡

➅

⑥

✜

❫

➁

❡

➈

➋

3. An Ordering for
➉

➆

➭

➯

➲

➳

➇

In this section we define an ordering for
. Obis a 4-regular graph, hence the time units
serve that
assigned to the edges will be chosen from the set of labels
.
and
. Then,
Let
❡

(b)

✜

1

➁

✜

❫

2
➅

⑥

❫

⑥

➁

⑨

✌

✓

✿

✌

✌

✺

❶

✢

✼

 

✌

✠

1

1
2

3

2

1

2

1.

 

❡

1

Figure 1. The three broadcast models:
(a) Classical broadcasting with
(b) Messy broadcasting with
and
.
(c) Orderly broadcasting with
Note that in (c) the numbers represent the ordering of the edges and not the time at which
the vertex receives the message.
■

 

■

❫

✑

☛

✠

✑

☛

✠

➌

 

■

✑

☛

✠

❶

✇

In this paper, we describe an ordering for 2-dimensional
tori and study the orderly broadcast time obtained for this
ordering.
with
A 2-dimensional torus
columns (
) is a connected graph of
edges, such that:
and
✄

⑥

✜

❫

✺



①

①

✠

☛

✄

✌

✠

✌

✎

✑



☛

➁



①

rows and
vertices

✁

✿

➻
①

➩

➎
✑

❂
⑩

✿

➻
①

➨

➩

✌

✕

✠

☛

❂

q

✿

➻

➎

✑



➨

➩

✌

✕

✠

☛

❂

 

❡

✌

⑩

✿

➻

✕
✠

➎

✠

☛

✺

❂

q

✿

➻

➎

➩

✌

✠

☛

❂

⑩

✿

➻

✠

☛

➩

✑

q

✿

➻
①

➨

✠

☛

✑

➎

❂

✌

✕

➎



➨

✌

✕

✺

❂

and
and

✠

✶

✺

✶

q

✿

➎
✁

➎
✁

✌

➓
✓

❧

➓
✓

❧

➓
✓

❧

➓
✓

❧

↕

✢

↕

✢

↕

✢

✌

➎

✠

❧

➎

✠

where
where
where
where

✑



➨

✕

✠

↕

➩

✌

✕

✑



❂

if:

✑

☛

where
where
where
where

✑

q

☛

➸

if:
✿

➨

✠

✁

✶

➎

❂

✌

✕

✄

✕

✠

✌

✕

✁

➩

➎
✑

❂
⑩

✿

➻
①

➨

and
and
and
and

➎

✠

✺

✶

➎

✠

✺

✶

❂

✠

✺

✶

❂

✠

✺

✶

q

✿

q

✿

➎
✁

➎
✁

✌

✌

➎

↕

✁

✢

➎

✌

✓

❧

✓

❧

✁

↕

✢

↕

✢

✌

➩

⑨

3.

 

❡

✌

if:

✑

☛
✕

a)
b)
c)
d)

❡

❀

✕

a)
b)
c)
d)

⑨

 



✑

➨

2.

①

➎

❂

✑

☛

a)
b)
c)
d)

(c)

✌

☛

✠

✌

✕

✠

☛

❂

⑩

✿

➻

✌

✕

✠

☛

❂

q

✿

➻

✠

☛

➩

✑

⑩

✿

➻
①

➨

✠

☛

 

❡

✌

➩

➎
✑

❂
q

✿

➻
①

a)
b)
c)
d)

✕
✠

❶

✌

✕

✠

☛

✑

⑩

✿

➻

✕

✠

☛

➩

➎

❂

✑

q

✿

➻
①

➨

➩

✌

✕

✠

☛

❂

⑩

✿

➻

➎

➨

➩

✌

✕

✠

☛

❂

q

✿

✑



➻


➨

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

①

➨

✌

✠

✺

✶

➎

✠

✺

❂

✠

✺

✶

❂

✠

✺

✶

❂

✠

✺

✶

✶

q

q

✿

✿

and
and
and
and
➎

✁

➎
✁

✌

➓
✓

❧

➓
✓

❧

↕

✢

✌

➎

↕

✁

➎

✢

✌

✓

❧

✓

❧

✁

↕

✢

↕

✢

✌

➩

➎

❂

➎

if:

✑

☛

✑

➎

❂

✌

✕

➎



➨

✌

✕

where
where
where
where

✑

➩

➨

4.

➎



➨

➩

➎

✑

where
where
where
where

❂

✠

✺

✶

➎

✠

❧

➎

✠

↕

q

✿

and
and
➎

✁

➎
✁

✌

➓
✓

❧

➓
✓

❧

↕

✢

↕

✢

✌

⑨

➽

0

1
3

0

2

2
4

1

4

4
1

2

3

❧

✿

✺

4

1

1

1

2

1

1

2
3

1

2

3

1
1

3

1

2

2

2

Ü

Ý

➶

➌

Ï

Ó

Ô

✿

❧

✿

✿

✿

✺

Þ

✿

2

Ù

✺

2
⑨

2

2

Û

❧

×

1

❶

Ú

↕

1

3

4

5

❶

Ø

2

×

Ú

2

1

3

2

Ü

Ø

Þ

Ù

➶

Ú

3

ß

ß

Ü
Þ

2
➌

Ï

Figure 2. The ordering
for
. Note that
some of the edges and labels are omitted to
make the figure more readable.
✯

❂

⑥

Figure 3. The two paths
and
originating
from
inform all the vertices
such
that
.

➚

➁

✯

➪

⑥

✌

☛

➎

✑

➶

➎

Ò

❀

Ï

has the order✜

❫

✳

✑

❧

❧

In what follows we will assume that
ing described above (Figure 2).

✯

✙

⑨

✌

☛

➁

First, we concentrate on informing all the vertices
where
. Consider the paths
and
(Figure 3):
✌

❡

☛

➎

✑

➶

➎

❧

❀

4. Upper Bound

❀

✯

Ï

⑨

✙

à

☛

✳

⑨

❜
✙

⑤

✌

✯

✯

✙

✙

⑤

✑
✌

❧
☛

✙

⑤

✑
✌

✿
☛

✙

⑤

✑

✿

✌

✺
☛

⑤

✑

✿

✌

✿
☛

✑

✿

✌

❧
☛

✑

✺
❧

⑨

✙
✙

⑤

Theorem 4.1 A torus
with an ordering
the following broadcast time :
⑥

☛

❜

⑤

✑
✌

❧
☛

⑤

✑

❶

✌

❧
☛

✑

❶

✌

✿
☛

✑

➶
✿

will have
❡

✜

❫

✳

⑤

✌

➁

⑨

✙
✙

⑤

✌

✯

à
✳

☛

✙

⑤

✑
✌

❧
☛

✌

❶
☛

☛

✌

Ï
☛

✌

➌
☛

☛

☛

✑

Ï
Ï

⑤

✑

➶

✌

Ï

✙

⑤

✌

Ï

✑

❧

✙

✑

➶

⑤

✑

❧

⑤

✑

➌

✌

➶

✳

⑤

✌

☛

✙

⑤

✑

❧

✙

⑤

✙

⑤

✑

❧

✙

✌

➌
☛

✑

➶

✌

➶
☛

✑

➶
❶

⑨

✙
❊

✙

⑤
⑤

✌
✑

☛

⑥
q

➶
P

➠

➹
①

➡
➧

➹

☛
➴

➩
➥

➨

➩

✑
✌

➶
☛

✑

➶
✺

➩

❊

The time that vertices
and
and
ceive the message from each of the paths
and

➛➝

✑
✑

✌

➝

➞

☛

⑥
q

❶
☛

P

q

①
➴

➝

✕

➝
➮

✑

➝

➠

➡
➠

P

➤

➨

➩

➩
➨

①

r

■
☛

⑥

❀
✜

➝

➝

✠

✙

☛

✕

✿

✯

❫

➁

➹

➹

➴

✌

✑

➶

✠

✳

☛

✙

✯

re✑

➶
✺

are:
✳

⑨

✌

✺
➧

✺
➩

➥

➱

➨

✃

❐

➥

➦

➥

➧

❒

■

r

☛

✯

✌

✑

✕

✙

✠

✙

✿

■

r

❶

☛

✯

✑

✕

✳

✠

✳

✿

➝

⑨

❊

➝

✑

➝

➝
☛

⑥
q

➴

❮

Now, we look at the vertices
where
Consider the two paths (Figure 4):

➝

✌

➝

➨

✃

❐

➥
➠

➤

➥

☛

➝➟

⑨

The proof of the above theorem is omitted because of
space restrictions. However, in the following we will show
in detail how a message propagates through the vertices of
.
a given row of
⑥

à
❜

☛

✑

➎

Ï

❀
❀

✿

✺

⑨

❜
✙

⑤

✌

✯

➎

➶

✙

⑤

✑
✌

❧
☛

✙

⑤

✑
✌

✿
☛

✙

⑤

✑

✿

✌

✺
☛

⑤

✑

✿

✌

✿
☛

✑

✿

✌

❧
☛

✑

✺
❧

⑨

✙
✙

⑤

✙

⑤

✌

⑤

✑

☛

✳

✌

❧
☛

⑤

✑

❶

✙

✌

❧
☛

⑤

✑

➶

✌

❧
☛

✑

➶
✿

✌

✺
☛

✑

➶
✿

✿

⑨

✙
✙

⑤

✌

✯

➚
à

☛

✙

⑤

✑
✌

❧
☛

✙

⑤

✑

❧

✌

❶
☛

✙

⑤

✑

❧

✌

➶
☛

⑤

✑

❧

✌

➌
☛

✑

❧

✌

Ï
☛

✑

Ï
Ï

✜

✙
✳

⑤

✌

❫

✙

⑤

✙

⑤

✑
✌

❜

⑤

✑
✌

⑤

✑
✌

✑
✌

✑

➁

☛

. The diameter
Consider the torus
and
. Let the originator be vertex
, and suppose
we want to inform all the vertices on row .
We describe four labeled paths :

➌
Ï

☛

➌
Ó

☛

➌
Ô

☛

➌
✿

❧
☛

➶
✿

❧

❊

✑

⑥

❰

✙

☛

❜

⑥

❰

✙

❜

✠

✿

❧

⑨

➁

➁

✌

↕

✠

Ï

☛

✑

❧

➶

and , that will inform every vertex
such that
, and
Ð

✯

✙

✯

❀

❜

✠

☛

✑

➶

✿

✯

⑨

✌

■

r

☛

✯

✠

❜

✙

➎

✑

✄

✌

■

✿

r

☛

✯

➚

➚

✠

☛

Ï

and , that will inform every vertex
such that
and
.
➚

✯

Ò

☛

✌

➎

✑

✁

✄

➶

➎

➎

Ï

❀

✿

✺

✠

✑

✿

❧

are:
✳

✿

☛

➶

Ô

❊

❜

➶

✑

✕

✑

✌

✯

✯

☛

Therefore, all the vertices of row , except vertices
and
, will be informed through the above described
paths
in at most
time units.

✁

➶

✯

Ð

✌

✠

⑨

✌

✑

✕

❜

➚

✕

✿

➶

☛

➎

Ò

✌

✕

✌

✌

✳

❧

The time that vertices
and
receive the message from each of the paths
and
and

❧

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

✙

✌

✯

✳

✑

✌

✯

❜

✯

➚

☛

⑥

q

❶

✠

✿

❶

➶

✑

Ó

⑨

❧

✿

⑨

✺
❶

➶

➌

×

Ú

Û

Ü

Ý

Ï

Ó

✿
Ô

❧

✿

✿

✿

❧
✺

✿

✺
❶

➶

➌

Ï

Ó

Ô

✿

❧

✿

✿

✿

✺

å

Þ

Ú

Û

Ü

æ

Þ

↕

❧
❧

×
✿
✿

Ý

✺
✺

⑨
⑨

❶
❶

Ù

×

Ø

Ø

Ù

Ú

Ú

×

ß

Ü
Û

ß

Ü

Û

Ú
Þ

ß

Ü

Þ

Þ

×
å

å

➶
➶

×

Ý

➌
➌

Ï
Ï

Figure 5. When the originator is
, the
paths and inform all the vertices of
by time
✌

Figure 4. The two paths
and
originating
from
inform all the vertices
such
and
.
that
✯

❜

☛

➚

✯

⑨

✌

☛

✌

✑

❧

☛

Ï

Ò

Vertex

❀

✑

✯

✿

✑

➶

✠

✺

Ó

✳

✑

Ï

➚

✯

⑥

❰

✙

❜

➁

✿

✿

❧

dimensional torus is (see [6]) :

will be informed through the path:

✌

☛

➎

➶

➎

➎

❧

⑨

✙
✙

⑤

✌

✙

⑤

✑
✌

✙

⑤

✑
✌

✙

⑤

✑
✌

⑤

✑
✌

✑
✌

✑

❊

☛

❧
☛

❧
❶

☛

❧
➶

☛

❧
➌

☛

❧
Ï

☛

Ï
Ï

✑

☛

⑥


➹
①

➹

➴

➞

✙
✳

⑤

❜

⑤

✌

⑤

✑
✌

✑
✌

✑

➠

➡
➧

➩
➥

➥

➦

➥

➧

✑

☛

➌
Ï

☛

➌
Ó

☛

➶
Ó

■

☛

⑥
✜

❫

❀

❊
➁

➛

✑

☛

Vertex

✌

☛

will be informed through the path:
✑

➶
Ô

✙

⑤

✌

☛

✙

⑤

✑
✌

❧
☛

⑤

✑

❧

✙

✌

❶
☛

⑤

✑

❧

✳

✌

➶
☛

✙

⑤

⑤

✑

❧

✌

➌
☛

✑

❧

✌

Ï
☛

✑

Ï
Ï

✌

☛

➌

✳

⑤

✑
✌

Ï
☛

➴

✃

❐

❮

➥
➠

➤

➥

❜

⑤

✑

➌

✿

On the other hand, the messy broadcast time (under the
) for directed tori is:
model

✙

❛

✙

⑤

q

➨

⑨

✙

⑥

➟

✌

Ó
☛

✑

➌

✌

Ô
☛

✑

➶
Ô

✑
✑

✑

❫

■

From the above path descriptions it is easy to see that
both vertices
and
will also receive the message
in less than time units.
, for a given
Thus, we can conclude that in a
originator
, all the vertices
on row
will be informed by time
Similarly, we can show that the remaining rows of
will be informed by time .
✌

☛

✿

➶

✌

✑

☛

Ó

✑

➶

Ô

❶

⑥

❰

✙

❜

⑨

➁

✌

☛

✌

✑

❧

✕

✠

☛

➎

✑

✁

✄

➶

➶

❊

✑

■

r

☛

✕

❀

✑

☛

⑥

q

❶

✠

✿

❶

⑥

❰

✙

❜

➁

✿

❶

☛

⑥

❀
✜

❫

✺

☛

①

⑩

✿
q

☛



⑩

✿

➁

Note that the above result is for special kinds of directed
tori which are different from the one considered in this paper.
Compared to the results mentioned above, our result on
the orderly broadcast time of a 2D torus is close to the
broadcast time of a 2D torus in the classical model. An obis
. Thus, our upper
vious lower bound on
bound on
is quite tight.
❊

✑

✑

■

☛

⑥

✜

☛

⑥

✇

❫

➁

✑

■

☛

⑥

✇

It can also be shown that for any other originator
, all the vertices of
will be informed in at most 14
time units. Figure 5 shows the paths used to disseminate
when the originator is
. In fact,
the message in
it can be proved that the worst-case for the originator
(when at least one of or is even) will be when is odd
- which is the case we described for originator
.
 

✁

✄

⑥

❰

✙

❜

➁

✌

⑥

❰

✙

☛

❜

✑

❧

Ï

➁

✌

☛

➎

✑

❂

➎



①

⑨

✌

☛

✑

❧

5. Conclusion
In this paper we described an ordering of a 2dimensional torus that will give an orderly broadcast time
.
of at most
Recall that the classical broadcast time of a 2❊

✑

☛

⑥

q

❶

References
[1] R. Ahlswede, H. S. Haroutunian, and L. H. Khachatrian.
Messy broadcasting in networks. Communications and
Cryptography, pages 13–24, 1994. eds. R. E. Blahut, D.
J. Costello, Jr., U. Mauter, and T. Mittelholzer(Kluwer,
Boston/Dordrecht/London).
[2] E. J. Cockayne and S. Hedetniemi. A conjecture concerning broadcasting in m-dimensional grid graphs. Technical
report, University of Oregon, 1978. Technical Report CSTR-78-14.
[3] F. Comellas, H. A. Harutyunyan, and A. L. Liestman. Messy
broadcasting in multi-dimensional directed tori. J. Interconnection Networks, 4(1):37–51, 2003.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

[4] K. Diks and S. Pelc. Universal order broadcasting. 28th Annual Hawaii International Conference on System Sciences,
2:564–573, 1995.
[5] A. Farley, S. Hedetniemi, S. Mitchell, and A. Proskurowski.
Minimum broadcast graphs. Discrete Math., 25:189–193,
1979.
[6] A. M. Farley and S. T. Hedetniemi. Broadcasting in grid
graphs. Proceedings 9th S-E Conference Combinatorics,
Graph Theory and Computing, FL Congressus Numerantium, XXI:275–288, 1978.
[7] P. Fraigniaud and E. Lazard. Methods and problems of
communication in usual networks. Discrete Applied Math.,
53:79–133, 1994.
[8] H. A. Harutyunyan and A. L. Liestman. Messy broadcasting.
Parallel Processing Letters, 8(2):149–159, 1998.
[9] H. A. Harutyunyan, A. L. Liestman, and T. C. Shermer. Orderly broadcasting. manuscript, 1999.
[10] S. T. Hedetniemi, S. M. Hedetniemi, and A. L. Liestman.
A survey of broadcasting and gossiping in communication
networks. Networks, 18:319–349, 1988.
[11] J. Hromovic, R. Klasig, B. Monien, and R. Peine. Dissemination of information in interconnection networks (broadcasting & gossiping). Combinatorial Network Theory, pages
125–212, 1996. ed.: Ding-Zhu Du, D. Frank Hsu, Kluwer
Academic Publishers.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

