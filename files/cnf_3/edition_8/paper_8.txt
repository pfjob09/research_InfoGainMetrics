Lexon Visualization: Visualizing Binary Fact Types in Ontology Bases
A. Johannes Pretorius
Semantic Technology and Applications Research Laboratory
Vrije Universiteit Brussel, Pleinlaan 2, B-1050 Brussels, Belgium
hannes.pretorius@vub.ac.be

Abstract
Ontology bases are sets of binary fact types called lexons.
This paper discusses LexoVis, a lexon visualization tool that
addresses the inherent size and scale of ontology bases.
LexoVis facilitates the analysis of lexons by taking a wellordered approach and provides overview and detail by
employing the graphical fisheye view. Furthermore,
different ordering and clustering heuristics incorporated in
LexoVis offer insights into ontology bases not explicit in
text-based representations.

1. Introduction
An ontology is a designed artifact which formally
represents agreed semantics of a certain domain in a
computer resource [1, 2]. This enables the sharing and reuse
of information and allows for the interoperation of
information systems. Although not a new field, ontology
research has recently received renewed interest. Meersman
attributes this to two factors [3].
Firstly, with the advent of the World Wide Web and more
recently the Semantic Web, there exists a pressing
requirement to tame the wealth of unstructured online
knowledge [4]. In this respect, there is a need to represent
information as structured resources that allow for more
meaningful semantic use. In open environments such as the
Semantic Web, ontologies are the means that permit
autonomous applications to communicate and interoperate
by providing machine interpretable metadata with a
semantic foundation.
In the second place, there exists a significantly large
corpus of computerized resources such as lexicons, thesauri,
glossaries and database schemas. These are likely to play an
important role in future standardization exercises for
knowledge representation.

2. The DOGMA approach to ontologies
At the VUB (Vrije Universiteit Brussel) STARLab
(Semantic Technology and Applications Research
Laboratory) an ontology is defined as “an approximate
semiotic representation of an agreed conceptualization of a
subject domain” [5]. The view is held that ontologies have

the potential to lead to the semantic independence of
information and knowledge-based systems similar to the
way that databases afford the ability to specify and manage
data structures outside of applications [6].
As such, an ontology is considered a mathematical object
serving as a domain for a semantic interpretation function.
The semantic interpretation function together with
derivation rules and constraints are deliberately left outside
of the ontology description. Furthermore, the elements that
constitute the description are made to be as simple as
possible. This elementariness of the ontology specification
is essential to facilitate agreement [2].
The DOGMA framework (Developing Ontology Guided
Mediation for Agents) introduced above, adopts an orthodox
database model-theoretic approach to ontology development
[6]. As suggested above, concepts and relations are regarded
as separate from constraints and derivation rules.
Consequently, the DOGMA framework for ontology
representation and development consists of two layers: an
ontology base and a commitment layer.

2.1. Lexons and the ontology base
The first layer of the DOGMA framework is the ontology
base. It consists of a set of lexons where a lexon is a
conceptual construct that depicts a generic semantic
relationship in some domain of interest [5].
More concretely, an ontology base is defined as a set W
of lexons where a lexon l  W assumes the form of a 5tuple l = <Ȗ, ti, ri-j, tj, rj-i>. In this formalization Ȗ  ī is the
context identifier; ti, tj  T are terms referring to entities in
the semantic relationship; ri-j, rj-i  R are roles in the
semantic relationship and ī, T and R are strings over an
alphabet A+.
For any lexon l  W, the context identifier Ȗ refers to the
ideational context in which the terms ti, tj and roles ri-j, rj-i
are meaningful. According to Zhao et al., the ideational
context instills the lexon with particular semantic contents
[5]. In practice the ideational context consists of one or more
knowledge resources such as documents and graphs which
have been established, communicated, documented and
agreed upon by a community of ontology engineers.
Intuitively, a lexon l = <Ȗ, ti, ri-j, tj, rj-i> may be
interpreted as follows: in the ideational context Ȗ the entity ti

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

plays the role of ri-j with respect to the term tj. Conversely,
the entity tj plays the co-role rj-i with respect to the entity ti.
The above definition leads to collections of lexons which
individually depict binary relationships, also referred to as
binary fact types. The binary nature of such lexons serves as
a conceptualization constraint to model the most basic and
atomic fact types within a domain. An ontology base can
hence be viewed as a set of plausible elementary facts that
may hold in the domain under consideration.

2.2. The commitment layer
It is fundamental to realize that a lexon represents a fact
type and not a fact instance. Lexons are elementary semantic
conceptions referring to semantic types and not tokens or
instances of an application domain.
It is the second layer of the DOGMA framework, the
commitment layer, which is concerned with the
composition, constraining and instantiation of lexons. This
allows for the application specific semantics of a particular
fact to be represented. Such a commitment constitutes a
network of lexons logically connected and provides a partial
but instantiated view of an ontology base. However, an
important difference with the underlying ontology base is
that commitments are unambiguous and semantically
consistent.

3. Lexon visualization
The extensional nature of the DOGMA approach to
ontologies necessarily leads to large collections of lexons in
ontology bases [3]. Even though it is believed that the
scalable nature of an ontology base is one of its strengths, it
leads to a fundamental challenge.
Whether lexons are machine extracted from existing data
depositories such as databases or whether they are designed
or extracted by humans, an ontology engineer is still needs
to analyze the results as suggested in [8]. However, the size
and scale of an ontology base resulting from such an
extraction exercise often serves as a cognitive barrier for the
ontology engineer. In the context of lexon analysis, a key
challenge that therefore needs to be addressed is to
successfully deal with the scalable nature and inherent size
of ontology bases.
Although there exist significant research results for
ontology modeling tools such as DOGMA Modeler [2], such
tools are primarily text-based [9]. It is contended that the
visual representation of ontology bases proves to be more
successful in assisting the ontology engineer in dealing with
the inherent size and scale of ontology bases. Furthermore, it
is claimed that by visualizing lexons, much more becomes
apparent to the ontology engineer than through a tabular
text-based representation. This is a view also shared by
Mutton and Golbeck [9].

3.1. Graph-based approaches
A number of graph-based approaches to ontology
visualization have been explored [9, 10]. These approaches
are often concerned with applying some variation of the
spring embedder algorithm to a directed graph representing
an ontology.
In the context of the DOGMA framework, there is an
important requirement for a lexon visualization tool. It must
be possible for the ontology engineer to analyze an ontology
base in a manner that is well-structured and thorough. To
cater for tasks such as repeated navigation and interaction
with an ontology base, it is important that the ontology
engineer be met with a consistent and predictable
representational structure [11]. Such a representation must
also allow the ontology engineer to analyze the finer details
of individual lexons while maintaining a global impression
of the ontology base.
Existing
graph-based
approaches
to
ontology
visualization are well-suited for detecting high-level data
features [9]. However, they do not necessarily lend
themselves to the kind of analysis described above.
Approaches employing the spring embedder algorithm do
not necessarily maximally correspond to Mackinlay’s
definitions of the expressiveness and effectiveness of visual
representations [12]. The final node positions depend on an
initial random allocation as well as the number of iterations
of the algorithm [9]. Accordingly, applying the algorithm to
the same data set does not guarantee an identical visual
mapping at different time instances. A similar observation is
made by [13]. In this sense, the visual representation itself
and consequently its expressiveness and effectiveness are
allowed to fluctuate over time. These characteristics do not
support a well-structured analysis in the sense already
implied.
As mentioned, graph-based techniques offer a good
overview of the visualized structure. However, they often do
not address the issue of also providing detail [14]. As
previously argued, this is another key requirement for the
analysis of ontology bases.
Finally, due to the nature of positioning algorithms such
as the spring embedder algorithm, dense clusters as well as a
number of empty areas regularly result. Apart from the
waste incurred by not utilizing all available screen realestate, most nodes and links appear in small areas without
the option of repositioning. This leads to visual cluttering
[15].

3.2. The LexoVis approach
LexoVis is a lexon visualization tool developed at the
VUB STARLab [16]. The main insight leading to its design
and implementation is that ontology bases consist of binary
fact types.
Every lexon l = <Ȗ, ti, ri-j, tj, rj-i> consists of two poles
represented by the terms ti and tj which are related to one
another by the roles ri-j and rj-i respectively. A collection of

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

such lexons may be regarded as forming a graph where
terms comprise the vertices and roles form the edges. Such a
graph may be considered as a semantic network.
Figure 1 illustrates an elementary example of such a
graph. In the figure the vertices {t1, …, t5} depict terms and
the directed edges {…, r1-3, r3-1, …} depict the roles that they
play with respect to one another.

representable terms must be employed. A related concern is
to depict enough detail at the point of interest while
maintaining a global overview.
LexoVis addresses these concerns by implementing a
positioning algorithm based on the graphical fisheye view
[14]. Furthermore, LexoVis allows for the clustering of
terms based on different heuristics.

3.3. LexoVis: implementation

Figure 1. A graph-based representation of lexons.
In order to introduce an ordering to such a semantic
network, the vertices representing terms may be arranged
along a linear axis. To preserve the binary nature of lexons,
all terms are duplicated and arranged along a second linear
axis. All roles may now be represented as directed edges
from the first to the second axis.
Figure 2 illustrates this binary duplication approach for
the semantic network considered earlier. The vertices
depicting the terms {t1, …, t5} are arranged on two vertically
separated horizontal axes. Directed edges depict roles {…,
r1-3, r3-1, …} by connecting terms on the two axes.
Accordingly, a lexon l = <Ȗ, ti, ri-j, tj, rj-i> is represented as
two directed binary fact types < ti, ri-j, tj > and <tj, rj-i, ti>,
which are interpreted from top to bottom.

Figure 2. An alternative representation of lexons.
The visual arrangement of terms and roles in this fashion
is further justified by the fact that in an ontology base no
explicit hierarchy is implied. Rather, an ontology base
comprises of a bag of unstructured lexons. In this respect it
is considered appropriate to impose some linear ordering
which does not suggest a taxonomy.
As following sections illustrate, ordering terms based on
some well-understood heuristics serves the task of the
ontology engineer well. However, the approach described
above has one limitation; as the size of the corpus of lexons
increases the availability of horizontal space for positioning
the vertices consequently decreases. For the approach to be
meaningful, a method for boosting the number of

The graphical fisheye view proves to be particularly wellsuited for lexon visualization. It maximizes the available
screen real-estate, provides overview and detail of the
ontology base and also preserves the ordering of terms on
the two axes.
There are two important notions involved in the graphical
fisheye view: the point of focus and a distortion factor [14].
In LexoVis, the ontology engineer determines the point of
focus by selecting any node on the two axes. Based on the
new focus position and the distortion factor, the space
available to the node in focus is maximized while nodes
further from the focus are increasingly spatially compressed.
In this way visual cluttering at the point of interest is
addressed and the ontology engineer is presented with
adequate detail. Assuming that the interest of a node is
proportional to its relative position from the focus, the space
available to every visible node decreases as its interest value
wanes. Even though the nodes at the boundaries of interest
are compressed into less space, they are still present and
visible. The order of all nodes is preserved and thus the
appropriate context is conveyed (Figure 3).
In order to further maximize the use of the available
screen real-estate, LexoVis incorporates clustering where
terms are grouped based on an ordering heuristic. Visually
such a group is represented as a cluster node. The roles
shared by the individual terms in such a cluster are visually
aggregated and displayed as a line segment with breadth
proportional to the total number of roles. A cluster can be
interactively expanded and contracted. When expanded, all
assembled terms as well as their individual roles are
displayed (Figure 4).
Different clustering heuristics offer insights into an
ontology base that are not explicit in a tabular text-based
representation. In the context of lexon analysis, three
clustering heuristics have proven to be particularly useful:
clustering by context, by terms and by roles.
For an extracted lexon, it is often the case that the context
identifier refers to a particular section of an original
knowledge resource. Clustering terms based on their context
promotes the analysis of lexons within such an ideational
context. This is justified by the view that contexts “provide
an ability for internal organization of an ontology base
[which] assists ontology engineers who build, maintain or
use lexons” [2].

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Figure 3. Unexpanded cluster nodes in LexoVis.

Figure 4. Cluster nodes expanded to reveal constituent lexons.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

The ordered nature of LexoVis allows the ontology
engineer to ‘flip’ through an ontology base in a way
analogous to the familiar binary search algorithm. With a
particular cluster, term or role in mind and an understanding
of the ordering heuristic, it is possible to determine whether
the interval left or right of the focus should be scanned.
Accordingly, a node in this interval is selected. When this
node receives the focus, the space close to it is maximized
and more detail is shown. If the particular entity has not
been found, the above reasoning is reapplied.
For clustering by context an ordering reflecting the
chronology of the original knowledge resource has proven
to be quite intuitive. For clustering by terms or roles an
alphabetical ordering works well. More generally, ‘flipping’
through an ontology base has also shown to be successful
for identifying and analyzing some general neighborhood or
interval.
LexoVis is a visual solution that incorporates a number of
design principles. Roles are indicated by connection and the
notion of membership to a cluster represented by
containment. Clusters, terms and roles are textually
annotated by labels.
In order to make it obvious to the user that nodes further
from the focus position are spatially compressed, the
transparency of nodes, roles and labels increase with their
distance from the focus. This has the added effect that as the
number of visual elements in a restricted space rises, their
collective visual weight drops. Any sense of visual
cluttering is thus further reduced. To this end, the
transparency of every visual element is adjusted relative to
its position from the focus by the graphical fisheye function
[14].
The approach taken in LexoVis has proven to be rather
flexible. For instance, in order to facilitate a more intuitive
left-to-right interpretation of lexons, the axes may be
vertically oriented. However, such an orientation does not
make particular good use of the available screen real-estate.
One solution is to apply the graphical fisheye view to polar
coordinates as in Figure 5.

4. Lexon analysis: preliminary results
The representation resulting from the approach described
above facilitates a systematic and well-ordered analysis of
lexons. LexoVis allows the ontology engineer to analyze
chains of relationships as suggested in [9]. After a cluster
has been expanded on the top axis, a term is selected. It is
intuitive to identify terms sharing some role on the opposite
axis based on connection. Any of these terms may be
selected to highlight all shared roles. Such roles are also
annotated with a label. To determine which roles the term on
the bottom axis plays, the ontology engineer selects it on the
top axis and repeats the operation described above.
At the VUB, the FF POIROT project (Financial Fraud
Prevention-Oriented Information Resources using Ontology
Technology) explores the application of ontology bases to
detect online fraud. Two approaches to lexon extraction
from natural language texts are currently being employed:
machine and manual extraction. However, both approaches
present a similar set of concerns:
x It is likely that different binary fact types to describe a
domain are extracted by different algorithms or human
modelers.
x It is likely that the level of detail of different
abstractions will differ.
x A preference for different vocabularies results in
lexical inconsistencies with respect to term and role
names.
x Consensus building and reaching agreement is a
challenge.
In the context of FF POIROT, LexoVis has proven to be
successful in addressing these issues. By considering the
chains of relationships for every contextual cluster, the
ontology engineer is able to determine whether the lexons
extracted form an adequate conceptualization for the
ideational context being modeled. This is particularly useful
for the analysis of lexons which have been machine
extracted. Clustering also offers the ability to check
consistency with regards to agreed naming conventions.

Figure 6. Asymmetry of roles indicate
irreversibility.

Figure 5. Polar positioning.

Another immediate benefit is the ability to identify roles
that have not been reversibly defined. This is done by

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

considering the symmetry of the visual representation of an
ontology base (Figure 6). Any asymmetries with regard to
the line segments representing roles indicate such
irreversibility.
Finally, LexoVis proves to be quite useful for considering
the impact of potential lexical changes. If the introduction of
a new term or role name is being considered, the different
clustering heuristics provide a way to estimate the effect of
such a change on the ontology base.

References
[1]

[2]

[3]

5. Further research
[4]

Depending on the clustering heuristic being employed,
the current implementation of LexoVis can represent lexons
ranging from 500 to 1000 in number. This has proven
adequate for analyzing lexons extracted from a particular
knowledge resource. In order to cater for even larger
ontology bases, ways are being explored to use ordered
representations as navigation devices. By suggesting a
visual partitioning, intervals may be selected and analyzed
as illustrated in this paper.
Another promising prospect is to include layering in
LexoVis. By superimposing different ontology bases
representing the same domain, an interesting way to visually
identify similarities and differences is offered. It also holds
much promise for considering the results of ontology
alignment and merging algorithms as dealt with in [17].
Furthermore, the inclusion of direct editing facilities, the
visual representation of query results as suggested in [10],
and the visualization of lexon commitments also justify
further exploration.
In the current implementation of LexoVis, clustering
based on context, terms and roles are implemented in
combination with chronological and alphabetical ordering.
By introducing other clustering and ordering heuristics, even
more implicit information may be revealed to the ontology
engineer. Clustering based on some notion of semantic
closeness may prove to be particularly fruitful as shown in
[9]. In this respect, the combination of different ordering
heuristics on the two axes also holds much potential.

[5]

[6]

[7]

[8]
[9]

[10]

[11]

[12]

[13]

6. Conclusion
Ontology bases are inherently large. This paper has
illustrated how this characteristic can be addressed by
LexoVis, a lexon visualization tool. By combining a wellordered approach with different clustering and ordering
heuristics, new insights into the ontology base are offered.
Furthermore, it has been shown how this approach assists
the ontology engineer in analyzing sets of lexons extracted
from natural language knowledge resources.

[14]
[15]

[16]

[17]

Acknowledgements
This study is partly supported by the European
Commission 5th framework program, IST 2001-38248.
www.ffpoirot.org.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

N. Guarino, “Formal Ontology in Information Systems”,
Proceedings of FOIS’98, Formal Ontology in Information
Systems, Trento, 3-15, 1998.
R. Meersman and M. Jarrar, “An Architecture and Toolset
for Practical Ontology Engineering and Deployment: The
DOGMA Approach”, STARLab Technical Report 06,
Brussels, Vrije Universiteit Brussel, 2002.
R. Meersman, “Ontologies and Databases: More than a
Fleeting Resemblance?”, A. D’Atri and M. Missikoff (Eds.),
OES/SEO 2001 Workshop, Rome, 2001.
T. Berners-Lee, J. Hendler and O. Lassila, “The Semantic
Web”, Scientific American, 284(5), 34-43, 2001.
G. Zhao, Y. Gao and R. Meersman, “An Ontology-based
Approach to Business Modelling”, Proceedings of the
International Conference of Knowledge Engineering and
Decision Support (ICKEDS2004), In press, 2004.
R. Meersman, “Can Ontology Theory Learn from Database
Semantics?”, Proceedings of the Dagstuhl Seminar 0121,
Semantics for the Web, Dagstuhl, 2000.
T. Gruber, “Towards Principles for the Design of Ontologies
Used for Knowledge Sharing”, International Journal of
Human and Computer Studies, 43(5/6), 907-928, 1995.
A.D. Maedche, Ontology Learning for the Semantic Web,
Norwell, Massachusetts, Kluwer Academic Publishers, 2003.
P. Mutton and J. Golbeck, “Visualization of Semantic
Metadata and Ontologies”, Proceedings of the Seventh
International Conference on Information Visualisation”,
London, 300-305, 2003.
F. van Harmelen, J. Broekstra, J. Fluit, H. ter Horst, A.
Kampman, J. van der Meer and M. Sabou, “Ontology-based
Information Visualization”, Proceedings of the Fifth
International Conference on Information Visualisation,
London, 546-554, 2001.
D.D. McCracken and R.J. Wolfe, User-Centered Website
Development. A Human-Computer Interaction Approach,
Upper Saddle River, New Jersey, Pearson Prentice Hall
Publishers, 2003.
J.D. Mackinlay, “Automating the Design of Graphical
Presentations of Relational Information”, ACM Transactions
on Graphics”, 5(2), 110-141, 1986.
K.M. Fairchild, S.E. Poltrock and G.W. Furnas, “SemNet:
Three-Dimensional Representations of Large Knowledge
Bases”, R. Guindon (Ed.), Cognitive Science and its
Applications for Human-Computer Interaction, Hillsdale,
New Jersey, Lawrence Erlbaum Associates, 201-233, 1988.
M. Sarkar and M.H. Brown, “Graphical Fisheye Views”,
Communications of the ACM, 37(12), 73-84, 1994.
B. Wong and G. Marsden, “Visualising the Web: Why We
Should Abandon Graphs and Trees”, Technical Report
Number CS01-07-00, Cape Town, University of Cape Town,
1-10, 2001.
A.J. Pretorius, Lexon Visualisation: Visualising Binary Fact
Types in Ontology Bases, Unpublished MSc thesis, Brussels,
Vrije Universiteit Brussel, 2004.
J. De Bo, P. Spyns and R. Meersman, “Towards a
Methodology for Semi-Automatic Ontology Alignment and
Merging”, STARLab Technical Report 02, Brussels, Vrije
Universiteit Brussel, 2004.

