Cooperative Control with Haptic Visualization in Shared Virtual Environments
I.Goncharenko1, M.Svinin2, S.Matsumoto1, Y. Masui3, Y.Kanou1, S.Hosoe2,3
1
3D Incorporated, 1-1 Sakaecho, Kanagawa-ku, Yokohama 221-0052, JAPAN
2
Bio-Mimetic Control Research Center, RIKEN, 2271-130 Anagahora, Shimoshidami,
Moriyama-ku, Nagoya 463-0003, JAPAN
3
Department of Electronic-Mechanical Engineering, Faculty of Engineering,
Nagoya University, JAPAN
{1igor@ddd.co.jp, 2svinin@bmc.riken.jp, 3yohei-masui@sf.starcat.ne.jp}
Abstract
A
distributed
PHANToM-based
system
for
collaborative haptic visualization of a VR crank is
presented. Physical 1DOF crank model providing
realistic kinaesthetic sensations of inertia and viscosity is
described. Theoretical and experimental kinematic
trajectory patterns are compared for the case of
cooperative two-arm human movements. Non-visual
visualization applications of the system are discussed.
Keywords: haptic visualization,
Environment (SVE), human motions

Shared

Virtual

1. Introduction
Non-visual haptic, sound and smell sensations play a
vital role not only for blind people, but also for all
humans to deeply understand different aspects of the
surrounding world. With the aid of modern technologies,
like haptic devices, for instance, it has become possible to
realistically model sensations of surface shapes,
curvature, stiffness, roughness, viscosity, inertia, gravity,
vibration, plasticity, elasticity, etc. Nowadays, point-force
PHANToM manipulators [1], with their high accuracy of
3D spatial measurements and abilities to acquire
computer-generated feedback forces and torques, are de
facto industry standard. Coupling with network
technologies such multiple devices can be incorporated
into shared virtual environments (SVE) [2] to create
collaborative applications to haptic visualization.
In these SVEs, “realism” of the modeled and
computer-generated sensations must be approved not only
subjectively but also objectively and experimentally. In
this paper, we make a comparison of different data
sources for the collaboratively controlled crank. For non-

visual communication, the proposed 1DOF VR crank
provides users with simple control of its positioning or
rotation, and gives realistic senses of inertia and viscosity.
First, our Haptic Communication Toolkit is considered
as an implementation basis for collaborative SVEs. Then
the VR crank is described as contents of the shared virtual
world. The dynamic characteristics of human movements
are analogous for the cases of the VR crank and a similar
mechanical crank equipped by sensory devices. Then an
application of human movements analysis to the task of
cooperative dual-arm crank control is considered. The
matching results of experimental and theoretical
trajectory patterns argue the applicability of the hand
force-change criterion to basic hand movement analysis.
Finally, other applications of SVEs to haptic visualization
are discussed.

2. Haptic Communication Toolkit
Collaborative SVEs with haptic displays imply that a
VR simulation task is performed on several networked
computers by many users. One of the simple
configurations for two client sites, where each one is
equipped by a haptic and graphical display, is shown in
Figure 1. In this case, the additional server can be used for
complicated physical-based simulation, for instance. In
SVEs the users simultaneously interact with virtually the
same scene in real time. Therefore, such network
characteristics as delay, jitter (variation of delay),
reliability, and bandwidth are very critical for realistic
multi-user interactions with distributed haptic displays.
Previously [3] it was shown with the aid of subjective
and objective analysis of numerous experiments with
haptic devices that realistic feedbacks require maximum
allowable network delay around 100 ms or less.
Moreover, in many applications, multiple haptic devices
must be synchronized at their rendering rate, e.g., 1ms for
PHANToMs [1]. Such strict requirements on network
communication properties can be guaranteed in LANs,

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

with the usage of Ethernet with TCP/IP package control
and continuous connections. (For the Internet, the haptic
synchronization might require additional human motion
prediction modules [3]). Bandwidth bottlenecks can be
overcome by transferring only necessary data packets
containing remotely calculated feedback loads, acquired
haptic inputs, and the current state of the 3D graphical
scene. In this scheme, the virtual world is initially preloaded on all client sites and then dynamically updated
depending on the packet data. In addition, the technology
of real-time data streaming should also be implemented.
These ideas were utilized for the development of our
general-purpose Haptic Communication Toolkit (HCT),
which was specially designed for easy and stable haptic
networking.

In HCT, there are two main functional stream classes,
implementation classes, and packet structures to define
the transferred data:
•
•

hcStream class is responsible for haptic and VR
object data with fixed packet sizes, continuous
streams, and asynchronous communication;
hcSyncStream class is intended for events, object
geometry or other data with variable packet
sizes, occasional streams, and synchronized
communication

Every stream is bi-directional, and each direction of
the stream corresponds to one packet type defined in
advance. HCT-based applications can compensate the
difference of transfer frequency between two sockets in
the stream, delay of the data, or other factors that reduce
the stability of the haptic communication. With HCT, the
following SVE architectures can be implemented.
(1) Complete Server-Client architecture. In this case,
the server controls the whole virtual environment, while
the client transfer to and acquire from the server only the
haptic-related data: client’s haptic inputs (position,
orientation), and server-generated feedback loads for
client’s haptic. VR world physical simulation and
graphical scene update are performed on the server side.
(2) Complete Peer-To-Peer architecture. Every client
has whole VE and calculates its own scene updates, and
the clients exchange the local updates. This can be useful
for the synchronization of distributed collaborative
applications.

Figure 1. Two-client SVE

hcCreateImp

hcStreamBase
m _bsReceiv ePacket : char*
m _bsSendPa cket : ch ar*
m _hRecievi ngThread : HANDLE
m _hSocket : SOCKET
m _iInputBu fLength : int
m _iOutputB ufLength : int
O pen() : i nt
C lose()
S endPacket ( : char* ) : int
R eceivePac ket( : ch ar*) : i nt
S end()
R eceive()
I nit()
E xit()
D oInit()

Crea teImp()

hcListening
CreateImp

hcConnecting
CreateImp

(3) Mixture of Server-Client and Peer-To-Peer
architecture. The server controls whole VE, and the
client controls some parts of VE.

The choice of the architecture completely depends on
the application field: VR rehabilitation, non-visual
communication, human-robot interaction, etc.

hcSt3dv

hcStream
m_hReciev ingThrea d

3. Shared Virtual Environment: VR crank
hcSyncStream

hcSt6dv

StartRece ivingThr ead()
Receiving Proc()

Figure 2. Haptic Communication Toolkit: Class
Diagram
HCT is a C++ class library, which can be applied to a
variety of networked haptic devices. General HCT class
diagram is shown in Figure 2.

The above Server-Client architecture was selected for
the implementation of the Crank Simulator because the
following scenarios of its usage are supposed:
Scenario (A): one user controls the VR crank with two
hands observing the VR graphical scene (VR
rehabilitation application);

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

Scenario (B): two users sit close to a graphical display
and simultaneously rotate the crank (visual multi-user
haptic collaboration with the VR world);
Scenario (C): two users collaboratively rotate the
crank, and one of them sits at the remote client site
equipped by a haptic device only, without any graphical
display (non-visual collaborative haptic communication).
The SVE consists of a 1DOF virtual crank, which can
be rotated by two independent haptic pointers about one
axis. The system supporting the SVE was built on the
basis of two dual-CPU PCs (1GHz), Server and Client,
interconnected via Ethernet, and each PC is equipped by
its own PHANToM 1.5/6.0 haptic manipulator. The
control scheme of the Server is similar to one described in
[4]. There are several critical loops in the overall Serverside control scheme (Table 1): haptic rendering loop,
graphical rendering, history recording, and simulation
loop.

method models such human movements as “hook-andcarry”, “catch-and-move” and similar to them. It is very
convenient to calculate (by given Client’s and Server’s
haptic inputs) the moments MC, MS used in the crank
physical model:

dϖ (t )
+ Bϖ (t ) = M S (t ) + M C (t ),
dt
dθ ( t )
= ϖ (t ),
dt

I

(0.1)

where I, θ, ω, B - crank inertia momentum, rotation angle,
angular velocity, and viscosity coefficient consequently.
The graphical user interface (GUI) of 1DOF VR crank at
the Server side is shown in Figure 3 (haptic pointers are
represented as 3D hand models).

Table 1. System parts functionality

Server
modules
Physical
Simulator
Graphics
Haptic
display
History Unit

Repository
Client
modules
Haptic
display

Functionality

Cycles

Ordinary differential
equations (ODE) solver;
dynamics of VR crank
3D scene rendering
Server/Client forces and
torques generation
User’s movements,
feedbacks and simulation
data recording
Graph/model
configurations

>10000
Hz

Forces and torques
acquisition from Server;
Client’s haptic inputs
transfer to Server

> 30 Hz
1000 Hz
100 Hz
Figure 3. GUI at Server Site
-

1000 Hz

To achieve real-time capabilities of the system, robust
and realistic interaction via the point-force device in the
SVE, the main attention was paid to the efficiency of the
haptic and simulation loops. For instance, the method of
Fixed Point [4] was implemented instead of collision
detection to calculate feedbacks rapidly. This method is
based on simple Hooke’s law and “spring-damper” model
of force calculation [2], when the Fixed Point is
considered as rigidly bound with the VR crank from the
beginning of haptic interaction. In the described SVE, this

Of course, model parameters I, B can be changed in
the configuration file to subjectively adjust realistic
sensations of the crank’s inertia and viscosity.
Nevertheless, previously we experimentally compared the
feedback characteristics of this VR model with the data
measured with a similar real mechanical crank, equipped
by force sensors and actuators [4]. In the case of one user,
dynamic and kinematic profiles of human movements are
closely analogous for both, the VR and real crank. In
brief, the experiments [4] demonstrated the following
features confirming “realism” of the proposed model:

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

•
•

well-matching profiles of tangential feedback
forces for both cranks for the task of one
complete turn;
for the task of rotation in comfortable mode
(when users maintain subjectively comfortable
crank’s rotation velocity), the tangential force

f1

exhibits a trend to decrease, while the normal
force approaches to a constant value

f 1e

The History Unit records all of the simulation timedependent parameters, feedbacks, and real-time data with
a frequency of 100Hz. Then, the collected data are used
for human movements analysis.
Theoretical and experimental kinematic trajectories for
the task of collaborative turning the VR crank through
one complete revolution (scenario (A)) are considered
below.

r

θ

f2e

4. Application to human movement analysis
In this section we consider the applicability of the
developed simulator to the analysis of cooperative human
movements in a crank rotation task. In the experiments
we asked a subject to perform one clockwise movement
of the VR crank with the usage of two PHANToM
styluses by his own pace, as comfortable as possible.
Before recording the experimental data the subject
practiced this type of motion for about 15 minutes,
making approximately 80 trial movements.
To compare motions of different time durations, the
experimental data were normalized [5,6,7]. Given the
movement time T the normalized duration is τ = t / T .
The normalized crank velocity is then given
by dθ / dτ = ( dθ / dt )( dt / dτ ) .
The
normalized
velocity profiles are shown in Figures 5 and 6 (thin blue
lines). As can be seen, the experimental data feature bellshape velocity profile. This is similar to what has been
reported for unconstrained reaching movements [5,8] and
for two-arm manipulations [7].
In this study we employ optimization approaches to
predict the human movement. The use of optimization
approaches is common in computational neuroscience. In
the optimization approaches the trajectory of the human
arm is found by minimizing, over the movement time T ,
an integral performance index J subject to boundary
conditions imposed on the start and end points.
Optimization approaches to the trajectory planning are
generally divided into two main groups - those formulated
using kinematic models and those formulated using
dynamic models of the human arm [9]. In this paper we
adopt the second approach. A sketch of the system under
consideration is shown in Figure 4. The dynamic
equations are given as

f2

Figure 4. Double crank model
It is plausible that the human control system exploits
fundamentally different control strategies for physically
constrained and unconstrained movements [10]. In our
opinion, the perception of the contact forces is of primary
importance in the constrained human movements. For this
reason, we consider only the force-based criteria as
opposed to conventional minimum jerk [11] or minimum
torque change [12] criteria.
First we try the criterion
T

J = ³ ( f e21 + f e22 )dt.

(0.3)

0

The criterion assumes equal contributions of the left and
right arms. In general, the asymmetric contribution can be
taken into account by the introduction of weight
coefficients for dominant and non-dominant arms. We do
not address this issue here, leaving it for future research.
The optimization problem corresponding to criterion
(0.3) can easily be converted to the standard form by
setting the control vector

u = ( f e1 , f e 2 )T and setting the

state vector x = (θ , θ ) . The comparison of the
theoretical and experimental data is shown in Figure 5. In
this figure, the theoretical crank’s velocity profile is
drawn by a thick red line, while six normalized
experimental velocity patterns are depicted by thin blue
lines. As can be seen, the criterion (0.3) does not provide
a satisfactory prediction of the human movements.
Neither the shape nor the amplitude matches the
experimental data.
Next, we try the minimum hand force change criterion

Iθ + Bθ = r ( f e1 + f e 2 ),
(0.2)
where r is the radius of the crank, I is the crank inertia
moment, B is the viscosity coefficient, f e1 and f e 2 are
the tangential components of the applied forces f1 and
f2 .

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

T

T

J = ³ ( fe21 + fe22 )dt.
0

(0.4)

Minimum tangential force criterion

Minimum tangential force change criterion

6

6

5

5

4

velocity of theta

velocity of theta

4

3

2

3

2

1

1

0

−1

0

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

time

time

Figure 5. Minimum hand force criterion

Figure 6. Minimum hand force change criterion

Again, we assume equal contributions of the left and right
arms. To be able to use standard optimization techniques,

constraints, changing not only the physical but also
geometric parameters.

define the control vector

u = ( fe1 , fe 2 )T and form the

T
state vector x = (θ , θ, f e1 , f e 2 ) . The state equations

are defined as

x2
§ x1 · §
·
¨ x ¸ ¨ r ( x + x ) / I − Bx / I ¸
4
2
¸
x = ¨ 2 ¸ = ¨ 3
¨ x3 ¸ ¨
¸
u1
¨ ¸ ¨
¸
u2
© x4 ¹ ©
¹

(0.5)

Given the cost function
T

J = ³ (u12 + u22 )dt

(0.6)

0

and the boundary conditions x (0) = 0 , corresponding to
rest-to-rest reaching movements, we are ready to use
standard optimization techniques. To find the optimal
solution we use RIOT95 Matlab toolbox [13].
The comparison of experimental (five thin lines) and
theoretical (thick line) data is shown in Figure 6. As can
be seen, the shape and the amplitude of the predicted data
match the experimental data well. Therefore, the
minimum hand force change criterion can be a good
candidate for prediction of the constrained human
movement. It is to be noted that our results should be
considered only as an initial step in studying how human
“naturally” resolves the actuation redundancy brought by
the external constraints. For this purpose the haptic
simulator proposed in this paper can be a very useful tool.
We can study the trajectory formation of the constrained
human movements on a large variety of the external

5. Conclusion, discussion, and future work
This paper describes a VR crank collaboratively
controlled by two PHANToMs in a distributed virtual
environment. The SVE is built on the basis of Haptic
Communication Toolkit supporting real-time applications
with stable and robust haptic networking.
. Realism of the proposed SVE in terms of feedback
forces and human motion patterns has been verified by
comparison of theoretical and experimental kinematic and
dynamic profiles for constrained one-arm and two-arm
movements. In this part, we have shown that the forcechange-based criterion predicts the human behavior much
better than the force-based criterion. Particularly, it argues
that such computer-generated haptic feedbacks can model
objectively realistic sensations of inertia and friction.
For multiple users in SVEs, the system can be used in
“leader-fellow” applications, e.g., in non-visual VR
rehabilitation with remote teachers. From the standpoint
of human motions prediction studies, it is also interesting
to examine collaborative human behavior in the SVEs.
Particularly for this VR crank, the task of rotation in
concurrently comfortable modes is being investigated.
For non-visual visualization applications the proposed
system can be considered as a useful tool, because it can
be re-configured for other kinds of constraints. (Physical
Simulator and Graphical Repository can adopt various
forms of ODEs and 3D models by the usage of common
interfaces.) For instance, we developed curve- and
surface-constrained simulators with dozens of constraints
on human movements (elliptical, toroidal, wavy, planar,
Monkey Saddle-like, etc.).

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

For a single user, it can be very practical for non-visual
learning on basic mathematical shapes; while the VR
crank is obviously convenient to learn about such
conceptual categories of Physics as “Inertia Momentum”,
“Friction”, “Resistance”. However, our more complicated
haptic simulators with holonomic and non-holonomic
constraints (e.g., Rolling Ball Balancer, or Unicycle [4])
can hardly be controlled without 3D computer graphics.

References
[1]
[2]
[3]

[4]

[5]
[6]

[7]

[8]
[9]

[10]

[11]

[12]

[13]

http://sensable.com
G.Burdea, and P.Coiffet. Virtual Reality Technology. 2nd
Ed., Publ. Wiley-Interscience. 2003. 444p.
I.Fukuda, S.Matsumoto, M.Iijuma et al. A Robust System
for Haptic Collaboration over the Network. In: Touch in
Virtual Environments: Haptics and the Design of
Interactive Systems (M.McLaughlin, et al, Eds.). PrenticeHall , 2002. pp. 137-157.
I.Goncharenko, M.Svinin, S.Matsumoto, S.Hosoe, and
Y.Kanou. Design and Implementation of Rehabilitation
Haptic Simulators with History Units. Proc. 2nd Intl.
Workshop on Virtual Rehabilitation (IWVR’2003), Rutgers
Univ., NJ, USA, September 21-22, 2003. pp.33-39.
P. Morasso, Spatial control of arm movements,
Experimental Brain Research, Vol. 42, 1981, pp. 223-227.
C.G. Atkeson, J.M. Hollerbach, Kinematic features of
unrestrained vertical arm movements, Journal of
Neuroscience, 1985, Vol. 5, pp. 2318-2330.
G.J. Garvin, M. Zefran, E.A. Henis, V. Kumar, Two-arm
trajectory planning in a manipulation task, Biological
Cybernetics, 1997, Vol. 76, pp. 53-62.
W. Abend, E. Bizzi and P. Morasso, Human Arm
Trajectory Formation, Brain, Vol. 105, 1982, pp. 331-348.
D.M. Wolpert, Z. Ghahramani, and M.I. Jordan, Are arm
trajectories planned in kinematic or dynamic coordinates?
An adaptation study, Experimental Brain Research, Vol.
103, 1995, pp. 460-470.
M. Desmurget, M. Jordan, C. Prablanc, and M. Jeannerod,
Constrained and Unconstrained Movements Involve
Different Control Strategies, Journal of Neurophysiology,
Vol. 77, No. 3, 1997, pp. 1644-1650.
T. Flash and N. Hogan, The coordination of arm
movements: an experimentally confirmed mathematical
model, The Journal of Neuroscience, Vol. 5, No. 7, 1985,
pp. 1688-1703.
Y. Uno, M. Kawato, R. Suzuki, Formation and control of
optimal trajectory in human multi-joint arm movement:
Minimum torque-change model, Biological Cybernetics,
Vol. 61, 1989, pp. 89-101.
A. Schwartz, E. Polak, and Y. Chen, RIOTS95: A Matlab
Toolbox for Solving Optimal Control Problems, Version
1.0, User Manual, Stanford University, 1997.

Proceedings of the Eighth International Conference on Information Visualisation (IV’04)
1093-9547/04 $ 20.00 IEEE

