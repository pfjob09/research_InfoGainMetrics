Overlapping Cluster Planarity∗
(Extended Abstract)
Walter Didimo

Francesco Giordano

Giuseppe Liotta

Universit´a degli Studi di Perugia,
Dipartimento di Ingegneria Elettronica e dell’Informazione.
E-mail:{didimo,giordano,liotta}@diei.unipg.it

A BSTRACT
Cluster planarity is currently recognized as one of the most interesting problem in graph drawing. This paper investigates a new
direction in this area by addressing the following question: Let G
be a graph along with a hierarchy of vertex clusters, where clusters
can partially intersect. Does G admit a drawing where each cluster
is inside a simple closed region, no two edges intersect, and no edge
intersects a region twice? We investigate the interplay between this
problem and the classical cluster planarity testing problem where
clusters are not allowed to partially intersect. Characterizations,
models, and algorithms are discussed.

c-planar drawing and a c-graph that admits such a drawing is said
to be c-planar.
β

α

γ

Keywords: Cluster Planarity, Graph Drawing, Graph Visualization.
1

(a)

β

I NTRODUCTION

Graphs and their visualizations are essential in data exploration and
understanding, particularly for those applications that need to manage, process, and analyze huge quantities of relational data. However, when the graph to be displayed consists of hundreds or thousands of vertices, a complete visualization of the data is typically
not effective for the user, and therefore alternative visualization
paradigms have been investigated in the literature. A well studied
approach to handle and visualize large graphs is to organize the vertices into a hierarchy of clusters. This makes it possible to explore
complex relational data at different levels of detail, by collapsing
or expanding clusters. This approach has been applied to various
application domains, including Internet and Web computing, social
network analysis, reverse engineering, knowledge engineering, and
computational biology (see, e.g., [8, 9, 16, 17, 21]).
A clustered graph (or simply c-graph) consists of a pair C =
(G, T ), where G is an undirected graph and T is a rooted tree that
describes a hierarchy of vertex clusters; each cluster is a subset of
the vertices of G and any two clusters are either disjoint or one is
completely included in the other. In a visualization of a c-graph the
subgraph induced by each cluster μ is drawn inside a simple closed
region R(μ ) which keeps any other vertex that does not belong to
μ out of it. Also, the inclusions among cluster regions must reflect the inclusion relations among the corresponding clusters. An
important requirement for the readability of the drawing is that it
has as few crossings as possible; this means that crossings between
edges should be avoided as well as crossings between a cluster region and the edges that are not connected to vertices of the corresponding cluster. A crossing-free drawing of a c-graph is called a
∗
Research partially supported by MIUR under Project “ALGO-NEXT
(Algorithms for the Next Generation Internet and Web: Methodologies, Design and Experiments)”, and NSERC.

Asia-Pacific Symposium on Visualisation 2007
5 - 7 February, Sydney, NSW, Australia
1-4244-0809-1/07/$20.00 © 2007 IEEE

α

γ
(b)
Figure 1: (a) A non c-planar drawing of a clustered graph. (b) A cplanar drawing of the same clustered graph.Vertices with the same
color belong to the same cluster.

For example, Figure 1 shows two different drawings of the same
clustered graph, where the regions of the clusters are drawn as rectangles. The drawing in Figure 1(a) is not c-planar, since the bold
edge causes both crossings with other edges and a crossing with
the region of cluster α . Conversely, the drawing in Figure 1(b) is
c-planar.
The problem of testing whether a c-graph is c-planar was first
posed by Feng et al. [10] in 1995, and several papers have been devoted to this argument during the subsequent decade. Optimal and
sub-optimal c-planarity testing algorithms are known for a clustered
graph C = (G, T ) where each cluster induces a connected subgraph
of G (see, e.g., [2, 4, 5, 10]). Also, polynomial-time testing algorithms are known for different families of c-graphs whose clusters
induce not connected subgraphs [3, 11, 12], although the time complexity of the c-planarity testing problem in the general case is still
unknown. The relationship between planarity and c-planarity has
also been studied [1]. A planarization algorithm for c-graphs that
are not c-planar is described in [6].
Inspired by the above mentioned cluster planarity literature and

73

by a recent paper of Omote and Sugiyama [19] presented at APVIS
2006, this paper opens a new investigation direction in the field
of cluster planarity testing by addressing the following problem:
Let G be a graph along with a hierarchy of vertex clusters, where
clusters can overlap, i.e. they can share a proper subset of their
vertices; Does G admit a drawing where each cluster is inside a
simple closed region, no two edges intersect, and no edge intersects
a region twice?
For example, Figure 3(a) depicts a drawing of an overlapping
clustered graph that satisfies the desired conditions. Besides its inherent theoretical interest, our question can be relevant in all those
applications where relational data are clustered and the clusters can
intersect. A cluster-based approach with clusters that are allowed to
overlap, for instance, is being used for routing in dynamic networks
([18]). Moreover, overlapping clustered graphs can be used as tools
to support human thought in several fields (see, e.g, the Higraph introduced by Harel [14] in software engineering). Other applications
can be found in [15, 19, 21].
It is worth remarking that the class of intersecting clustered
graphs defined by Omote and Sugiyama [19] is a proper subclass
of the overlapping clustered graphs studied in this paper, since in
an intersecting clustered graph the subgraph induced by an overlap
cannot be further decomposed into clusters. Also, the drawing technique of Omote and Sugiyama for the visualization of intersecting
clustered graphs is based on force-directed approaches, which can
give rise to drawings that do not respect some of the classical rules
of cluster planarity (for example two edges may intersect even if
the graph is cluster planar).
At a first glance, one might argue that the question of this paper
can be answered by simply regarding each overlap between any two
clusters as an individual cluster and by applying classical results of
cluster planarity. However, as it will be shown throughout the paper, this approach does not work in general even for the apparently
simple case of a graph consisting of exactly two overlapping clusters. Indeed, the main focus of this paper is to study the relationship
between the notion of cluster planarity with overlaps and the one
without overlaps. Our main contribution can be listed as follows.
• We formally define the concept of overlapping clustered
graphs (also called oc-graphs) and of overlapping cluster planarity. A characterization of those oc-graphs that are cluster
planar according to our definition is given; it extends the one
of Feng et al. [10] to the case of overlapping clusters. Cluster
planar oc-graphs are said to be oc-planar.
• We provide examples of oc-planar oc-graphs such that the cgraph obtained considering the overlaps as individual clusters
is not c-planar; and, vice-versa, we give examples where the
oc-graph is not oc-planar while the corresponding c-graph is
c-planar.
• Based on the above characterization and negative results, we
describe models that make it possible to interpret the planarity
testing problem for meaningful classes of oc-graphs as the
planarity testing problem of associated c-graphs.
• Planarity testing and embedding algorithms for oc-graphs are
devised by combining our models with known results about
c-planarity.
We conclude this introduction by also recalling that a generalization of clustered graphs that includes the family of oc-graphs,
known as compound graphs, has been introduced in the graph drawing literature several years ago by Sugiyama and Misue [22]. In
a compound graph clusters may overlap and adjacency relations
among clusters may be defined (in other words, there may be edges

74

connecting pairs of clusters and not just pairs of vertices). It has to
be remarked however that, to the best of our knowledge, all drawing
algorithms provided in the literature to visualize compound graphs
work under the restrictive assumption that no two clusters overlap
(see, e.g., [16, 17, 21]).
The remainder of this paper is organized as follows. The formal definition of oc-graphs is given in Subsection 2.1 and a characterization of oc-planarity is presented in Subsection 2.2; models
and algorithms can be found in Section 3; final remarks and open
problems are in Section 4. For reasons of space some proofs are
sketched in this extended abstract.
2 OVERLAPPING C LUSTERED G RAPHS
We first define oc-graphs and oc-planarity and then present a characterization result. We assume familiarity with basic concepts of
graph theory [13] and geometric computing [20]; we recall here
only those definitions that pertain cluster planarity.
2.1 Definitions
A graph G is connected if for any pair of its vertices u and v there
exists a path connecting u to v in G. A connected graph G is kconnected (k > 1) if it remains connected after the removal of any
subset of k − 1 vertices.
A clustered graph C = (G, T ), also called c-graph, consists of
an undirected graph G and of a rooted tree T , called inclusion tree
of C, which describes the inclusion relationships among the vertex
clusters. Namely:
• The leaves of T are the vertices of G;
• Each internal node μ of T has at least two children and represents a cluster V (μ ) of the leaves of the subtree rooted at μ .
If ν is an ancestor of μ in T then V (μ ) ⊂ V (ν ).
Figure 2 shows an example of a c-graph. In the remainder of the
paper G(μ ) denotes the subgraph of G induced by V (μ ). A c-graph
C is said to be c-connected if G(μ ) is a connected graph for each μ
of T . The c-graph of Figure 2(a) is not c-connected, because each
of clusters α2 and β2 induces a disconnected subgraph of G.
An overlapping clustered graph W = (G, H) consists of an undirected graph G and an acyclic digraph H with a single source such
that:
(i) The sinks of H are the vertices of G;
(ii) Each non-sink node of H has at least two outgoing arcs and
represents a cluster V (μ ) of the sinks of H reachable from μ
with a directed path;
(iii) There are no transitive arcs in H.
In the following we call W an oc-graph and H the inclusion digraph of W . Figure 3 shows an example of an oc-graph and of its
inclusion digraph. Similarly to the definition of c-graphs, H describes the inclusions among the clusters: V (μ ) ⊂ V (ν ) if there
exists a directed path from ν to μ in H. Also, G(μ ) denotes the
subgraph of G induced by the cluster represented by μ . If μ and ν
are two distinct nodes of H such that V (μ ) ⊂ V (ν ), V (ν ) ⊂ V (μ )
and V = V (μ ) ∩V (ν ) = 0,
/ then we call V the overlap of V (μ ) and
V (ν ), and we say that V (ν ),V (μ ) are two overlapping clusters. An
oc-graph W is said to be c-connected if for each μ of H G(μ ) is
connected. The oc-graph in Figure 3(a) is c-connected.
A c-graph can be viewed as a special case of an oc-graph, since
it can be considered as an oc-graph with no overlap. In their work,
Feng et al. [10] define the concept of a c-planar drawing of a cgraph. We extend this definition to oc-graphs.

λ1

δ1

9

α1

δ1

γ1

8

9

μ1

ν1

8

7

6

13

5β
1

7
13

4
1

10

4

1

δ2

14

α2

β2

3

γ2

2

ν2

3
12

2

μ2

12
11

5

δ2
14

10

6

11

W=(G,H)

λ2

(a)

C=(G,T)

H

(a)

T
δ1

λ2
λ1

4

α2

μ1

γ2

9

γ1

8 7 6

β1

5

δ2

10 1 2
13
(b)

4

ν1

11 12

μ2

2

δ2

1

10

β2
8

α1

ν2

δ1

9

7

6

5 13
(b)

14 3

11 12

3 14

Figure 2: (a) A c-graph C = (G,T ); the clusters are represented as
rectangles. (b) The inclusion tree T of C.

An oc-planar drawing (resp. a c-planar drawing) of an oc-graph
W = (G, H) (resp. of a c-graph C = (G, T )) is a representation of
W (resp. of C) in the plane such that each vertex v of G is drawn as
a point p(v), each edge of G is drawn as a simple Jordan curve, and
each node μ of H (resp. of T ) is drawn as a simple closed region
R(μ ) according to the following rules:
R1: R(μ ) contains the drawing of G(μ ).
R2: If V (μ ) ⊂ V (ν ), R(ν ) contains R(μ ).
R3: If v ∈ V (μ ), p(v) is outside R(μ ).
R4: There is no edge crossing, i.e. any two edges of G never cross.
R5: There is no edge-region crossing, i.e. there is no an edge of G
that crosses the boundary of a region R(μ ) twice.
For example, the drawings used to describe the c-graph in Figure 2(a) and the oc-graph in Figure 3(a) are c-planar and oc-planar,
respectively; in both drawings the clusters are contained in the rectangular regions. Note that, by Rule R1, in an oc-planar drawing the boundaries of two regions R(μ ), R(ν ) necessarily intersect
if V (μ ),V (ν ) are overlapping clusters. Conversely, in a c-planar
drawing the boundaries of any two regions can be always “shrank”
so that they never intersect. An oc-graph (resp. a c-graph) is said

Figure 3: (a) An oc-graph W ; the clusters are depicted as rectangles.
Clusters μ1 , ν1 and clusters μ2 , ν2 are overlapping clusters. (b) The
inclusion digraph of W .

to be oc-planar (resp. c-planar) if it admits an oc-planar drawing (resp. a c-planar drawing). If C = (G, T ) is a c-planar graph,
we denote by Γ(C) a c-planar drawing of C and by Γ(G) the planar drawing of G in Γ(C). Also, Γ(G(μ )) denotes the drawing
of G(μ ) in Γ(C), for each cluster μ . Analogously, if W = (G, H)
is an oc-planar graph, we denote by Γ(W ) an oc-planar drawing
of W , and by Γ(G) and Γ(G(μ )) the drawing of G and G(μ ) in
Γ(W ), respectively. Both in the c-planar drawing and in the ocplanar drawing, Γ(G) subdivides the plane into topologically connected regions, called faces; exactly one of this faces is unbounded,
and it is called the external face; the other faces are internal faces.
An internal (resp. external) face f is described by the clockwise
(resp. counterclockwise) sequence of vertices and edges that form
its boundary. The description of a set of faces for G is a planar
embedding of G. Throughout the paper a face f is regarded as an
open set; therefore when we say that a vertex v is in f we mean that
v lies inside the region f but not on its boundary.
2.2 Characterizing Overlapping Cluster Planarity
Feng et al. [10] gave a characterization of those c-connected clustered graphs C = (G, T ) that are c-planar. Their characterization
is based on the existence of a planar embedding of G with certain
properties. We recall their result.
Theorem 1 [10] A c-connected c-graph C = (G, T ) is c-planar if
and only if G admits a planar embedding such that, for each node
μ of T , all vertices and edges of G − G(μ ) are in the external face
of G(μ ).

75

R(γ )

The next theorem can be proved by extending the technique
of [10] in order to deal with the more complex structure of an inclusion digraph instead of the structure of an inclusion tree.

R(δ )

Theorem 2 A c-connected oc-graph W = (G, H) is oc-planar if
and only if G admits a planar embedding such that, for each node
μ of H, all vertices and edges of G − G(μ ) are in the external face
of G(μ ).
Proof. Suppose that W is oc-planar and let Γ(W ) be an oc-planar
drawing of W . We show that the planar embedding induced by
Γ(G) verifies the property given in the statement. Let μ be a node
of H and let v be a vertex of G − G(μ ). Suppose by contradiction
that v lies in an internal face of G(μ ). Since by Rule R1, R(μ )
contains the whole drawing of G(μ ) in Γ(W ), it would be that also
p(v) is inside R(μ ) in Γ(W ), which contradicts Rule R3. Hence
v must be in the external face of G(μ ). Also, let e = (u, v) be an
edge of G − G(μ ); this implies that both u and v are vertices of
G − G(μ ) and they are in the external face of G(μ ). Hence, e must
be in the external face of G(μ ) because otherwise the planarity of
the embedding would be violated.
Suppose vice-versa that G has a planar embedding that satisfies the property of the statement. Denote by ψ this embedding.
To prove that W is oc-planar, we construct from ψ an oc-planar
drawing Γ(W ) of W . First, we compute a planar drawing Γ(G) of
G that preserves ψ , i.e. a planar drawing that induces the set of
faces of ψ ; this can be done by applying one of the many known
graph drawing algorithms [7]. After that, we incrementally construct the cluster regions by following a suitable ordering. Namely,
let S = μ1 , . . . , μh be the sequence of the non-sink nodes of H ordered according to the reverse of a topological ordering ( μh is the
source of H). This implies that, for each μ j (1 ≤ j ≤ h), all nodes
of H that are reachable from μ j with a directed path are in the subsequence μ1 , . . . , μ j−1 . From Γ(G), we construct Γ(W ) by drawing
at each step j ( j = 1, . . . , h − 1) the region R(μ j ) of cluster V (μ j ),
and we prove by induction on j that the drawing Γ( j) (W ) obtained
at the end of step j verifies Rules R1-R5. The nodes of H reachable
from μ1 are only sink-nodes, and therefore V (μ1 ) does not contain
other clusters. This implies that Rule R2 can be ignored for this
base case. Region R(μ1 ) is constructed as a simple closed curve C
that follows the profile of the external boundary of Γ(G(μ1 )), ε > 0
distance away (on the outside) from it. Since G(μ1 ) is connected,
R(μ1 ) surely contains drawing Γ(G(μ1 )) and therefore Rule R1 is
satisfied. Also, since Γ(G) is planar and preserves ψ , ε can be chosen sufficiently small to guarantee that C crosses the edges incident
on G(μ1 ) exactly once, and it does not cross any other vertex or
edge of the drawing of G − G(μ1 ). This guarantees Rules R3 and
R5. Rule R4 is satisfied by the planarity of Γ(G). Assume now
that drawing Γ( j−1) (W ) ( j > 2) verifies Rules R1-R5, and consider node μ j . Let (μ j , ν1 ), . . . , (μ j , νk ) be the outgoing edges of
μ j , such that νi is not a sink of H (k ≥ 0, 1 ≤ i ≤ k). For the ordering we have chosen, regions R(ν1 ), . . . , R(νk ) have been already
drawn in Γ( j−1) (W ). Consider the drawing Γ given by the union
of Γ(G(μ j )) with the boundaries of regions R(ν1 ), . . . , R(νk ) (see
also Figure 4). The boundary of R(μ j ) is still constructed as a simple closed curve C that follows the profile of the external boundary
of Γ , ε > 0 distance away (on the outside) from it. In this way,
all regions R(ν1 ), . . . , R(νk ) are contained in R(μ j ) and therefore
Rules R1-R2 are satisfied. Also, since Γ( j−1) (W ) is oc-planar, the
external boundary of Γ is such that it crosses the edges incident on
G(μ j ) exactly once, and it does not cross any other vertex or edge
of G−G(μ j ). We can therefore choose distance ε sufficiently small
so that C crosses the edges incident on G(μ j ) exactly once, and it
does not cross any other vertex or edge of G − G(μ j ). This guarantee Rules R3 and R5. Also, observe that ε can be chosen so that C
does not intersect regions of clusters that do not overlap with V (μ ).
Rule R4 is still guaranteed by the planarity of Γ(G).
✷

76

(a)

R(α )

Γ’

(b)
Figure 4: Illustration of the procedure that constructs a cluster region,
described in the proof of Theorem 2. R(α ) is constructed from the
drawings of G and of regions R(γ ),R(δ ).

In Feng et al. [10], the characterization of Theorem 1 is used to
design an O(n2 ) time algorithm to test whether C is c-planar, and
in the positive case to compute a c-planar drawing of C. Their approach looks for a planar embedding of G that verifies the properties
given in Theorem 1; the algorithm proceeds bottom-up, with a postorder visit of T . One of the key-ideas is that for each node μ of T
G(μ ) can be tested independently of any other cluster that is not in
the subtree rooted at μ . Unfortunately, it does not seem immediate
to follow a similar approach to design an algorithm for oc-planarity
directly based on Theorem 2, mainly because the graphs induced by
the clusters of an oc-graph cannot be always tested independently
of each other due to their overlaps. This observation motivates us
to better understand the circumstances under which an oc-planarity
testing algorithm can be designed by using a corresponding algorithm for c-planarity.
3

M ODELS AND A LGORITHMS FOR
TERED G RAPHS

OVERLAPPING C LUS -

In this section we study first the simple case of an oc-graph having
exactly two overlapping clusters (Subsection 3.1) and then extend
the investigation to a meaningful class of oc-graphs with many clusters (Subsection 3.2).
3.1 A Model for Two Clusters
Let W = (G, H) be a c-connected oc-graph where the vertices of G
are grouped in exactly two overlapping clusters V (μ ) and V (ν ). We
call W a two overlapping clustered graph or toc-graph for short. An
example of a toc-graph is in Figure 5(a). Let C = (G, T ) be the cgraph constructed by considering three disjoint clusters V (μ ) −V ,
V , and V (ν ) −V , where V is the overlap of V (μ ) and V (ν ); this
means that the internal nodes of T are the root and its children α , β ,
γ , where V (α ) = V (μ )−V , V (β ) = V (ν )−V , V (γ ) = V . We call
C the c-image of W . Figure 5(b) shows the c-image of the toc-graph
in Figure 5(a).
A natural question to ask is whether testing a toc-graph for ocplanarity is equivalent to testing its c-image for c-planarity. As the

W

ν

μ

W

μ

ν

(a)

(a)

C
α

γ

α

β

f

C
β

γ

(b)
(b)
Figure 5: (a) An oc-planar toc-graph W . Grey vertices belong to the
overlap. (b) The c-image C of W ; C is not c-planar.

f

W
ν

μ

next lemma shows, this may not be always the case.
Lemma 1 There exists an oc-planar toc-graph whose c-image is
not c-planar.
Proof. Let W = (G, H) be the toc-graph of Figure 5(a), where
V (μ ) is the set of white and grey vertices while V (ν ) is the set of
black and grey vertices. Let C be the c-image of W (Figure 5(b));
the three clusters of C are the grey vertices, the black vertices, and
the white vertices. As the figure shows, W is oc-planar, since it
has an oc-planar drawing. Since G is 3-connected, in any planar
embedding of G there is a cycle C of white and black vertices that
separates the two grey vertices, which belong to cluster V (γ ) of C.
As a consequence, any clustered drawing of C has an edge-region
crossing between region R(γ ) and an edge of C , which implies that
C is not c-planar.
✷
The counterexample of Lemma 1 relies on the fact that the vertices of the overlap induce a non-connected subgraph of G. One
can ask what happens for those toc-graphs whose overlap induces
a connected subgraph. Figure 6(a) shows a toc-graph W and Figure 6(b) shows a c-planar drawing of the c-image C of W . All the
three clusters of C induce connected subgraphs of G, but the planar
embedding of the c-planar drawing of C cannot be the embedding of
an oc-planar drawing of W , because in that embedding region R(μ )
would contain region R(ν ) (indeed, the drawing in Figure 6(a) is
not oc-planar). On the positive side, notice however that the planar
embedding can be changed by suitably redefining the external face,
so to admit both an oc-planar drawing of W and a c-planar drawing
of C; for example one can choose face f of Figure 6(b) as the new
external face, as shown in Figure 6(c). As the next lemma shows,
this is indeed always possible for all toc-graphs whose overlap is
connected.
Lemma 2 Let W = (G, H) be a toc-graph whose overlap induces a
connected subgraph of G. W is oc-planar if and only if its c-image
is c-planar.
Sketch of proof. Let V (μ ), V (ν ) be the two overlapping clusters
of W and let V be the overlap of V (μ ), V (ν ). Also, let C be the
c-image of W .
We prove first that if C is c-planar then W is oc-planar. Let Γ(C)
be a c-planar drawing of C; denote by φ the planar embedding induced by Γ(G). Starting from φ , we define a planar embedding ψ

(c)
Figure 6: (a) A toc-graph W ; the drawing depicted in the figure is not
oc-planar, since the two edges in bold are not completely inside the
region of μ ; an oc-planar drawing of W with this embedding cannot
exist. (b) A c-planar drawing of the c-image C of W . (c) An oc-planar
drawing of W obtained by changing its original embedding; namely,
face f is chosen as the new external face.

of G that satisfies the statement of Theorem 2. Let the clusters of
C be V (α ) = V (μ ) −V , V (β ) = V (ν ) −V , and V (γ ) = V . There
always exists a face of φ whose boundary contains both a vertex
of V (α ) and a vertex of V (β ). Indeed, if such a face did not exist, for every pair of vertices a, b such that a ∈ V (α ) and b ∈ V (β ),
there would be a simple cycle C consisting only of vertices of V (γ )
such that a and b lie one inside and one outside C . However, this
would imply that the region of cluster V (γ ) in Γ(C) contains a vertex that does not belong to V (γ ), contradicting the fact that Γ(C) is
a c-planar drawing. Hence let f be a face of φ with both a vertex a
of V (α ) and a vertex b of V (β ) on its boundary; let ψ be the planar
embedding obtained from φ by choosing f as the external face. We
prove that every vertex of V (α ) is in the external face of G(ν ): If
this were not the case, there would be a vertex a ∈ V (α ) in an internal face f of G(ν ). Since φ differs from ψ only for its external
face, also in φ there is face f whose boundary separates the plane
region containing a from the one containing a . This implies that in
Γ(C) there would be an edge-region crossing between region R(α )
and one of the edges of the boundary of f (i.e., an edge that does
not belong to G(α )), a contradiction. Symmetrically, every vertex
of V (β ) is in the external face of G(μ ). Therefore ψ satisfies the
statement of Theorem 2 and W is oc-planar.
Conversely, suppose that W is oc-planar. Based on Theorem 2
and since the graph induced by the overlap is connected, we can
construct an oc-planar drawing Γ(W ) such that the boundaries of
the regions R(μ ) and R(ν ) intersect in exactly two points, which
we denote as p1 and p2 (refer also to Figure 7 for an illustration).
To prove that C is c-planar, we construct a c-planar drawing Γ (C)
of C from Γ(W ). Namely, in Γ (C) the drawing of G is the same
as in Γ(W ). Regions R(α ), R(β ), and R(γ ) are defined as follows.

77

Denote as C (μ ) the boundary of R(μ ) and as C (ν ) the boundary of
R(ν ) in Γ(W ). Points p1 and p2 split C (μ ) into two curves, denoted
as C (μ ), C (μ ) and having p1 and p2 as their end-points; C (μ ) is
outside R(ν ) while C (μ ) is inside R(ν ). Similarly, C (ν ) (C (ν ))
denotes the portion of C (ν ) between p1 and p2 outside (inside)
R(μ ). In Γ(C), the boundary of R(α ) is the union of C (μ ) and
C (ν ); the boundary of R(β ) is the union of C (ν ) and C (μ ); the
boundary of R(γ ) is a simple closed curve that follows the profile
of C (μ ) ∪ C (ν ), ε > 0 distance away (on the inside) from it.
Observe that, with the construction described so far, the boundary
of R(α ) and R(β ) exactly share the two points p1 and p2 ; to remove
these two contact points between the two regions, we can always
slightly move the corners of R(α ) and R(β ) at points p1 and p2 by
a suitable ε distance.
The fact that Rule R3 is satisfied by Γ(C) is proved as follows.
Since Γ(W ) is an oc-planar drawing, all vertices of V (μ ) − V are
outside R(ν ) in Γ(W ), and by construction R(α ) contains all and
only such vertices, i.e., it does not contain vertices which are not in
V (α ). Analogously, R(β ) does not contain vertices that are not in
V (β ). Finally, consider a vertex v ∈ V (α ). If p(v) were inside R(γ )
in Γ (C), by the connectivity of G(γ ) and by construction of R(γ ),
it would be that p(v) is inside R(ν ) in Γ(W ), a contradiction. With
a symmetric reasoning, every vertex of V (β ) is drawn outside R(γ )
in Γ (C). The other rules are easy to check.
✷

p

R(μ)

2

R( ν)

Sketch of proof. Let C be the c-image of W ; C can be constructed
from W in O(n) time. Both in Statements (a) and (b) the overlap
induces a connected subgraph, and hence, by Lemma 2, testing the
oc-planarity of W is equivalent to test the c-planarity of C. By the
hypothesis of Statement (a), C is a c-connected c-graph, and the
c-planarity of C can be tested in O(n) time with the algorithm of
Dahlhaus et al. [4, 5] or with the algorithm of Cortese et al. [2]. In
the hypothesis of Statement (b) only one cluster of C can induce
a non-connected subgraph of G, and then C belongs to a sub-class
of c-graphs defined by Gutwenger et al. [12]; for this sub-class of
c-graphs the c-planarity testing can be performed in O(n2 ) time, as
shown in [12].
✷
3.2 A Model for Many Clusters
A natural extension of the study in the previous section is to consider oc-graphs with m ≥ 2 clusters and such that only pairs of clusters can overlap.
A multiple-two overlapping clustered graph, also called mocgraph for short, is an oc-graph such that each cluster can overlap
with at most another cluster. Notice that a moc-graph can have clusters included in other clusters and that a toc-graph is a special case
of moc-graph. The oc-graph depicted in Figure 3(a) is an example
of moc-graph.
The c-image of a moc-graph W = (G, H) is the c-graph C =
(G, T ) defined as follows:
• Each non-overlapping cluster of W is also a cluster of C;

p

1
(a)

R(α)

R( β)

R(γ )
(b)
Figure 7: Illustration of the procedure described in Lemma 2 to modify an oc-planar drawing of a toc-graph W into a c-planar drawing of
the c-image of W .

Based on Lemma 2 and on known results about c-planarity testing, one can design polynomial-time algorithms for oc-planarity
testing. The following result summarizes the algorithmic contribution of this section.
Theorem 3 Let W = (G, H) be a c-connected toc-graph and let
V (μ ), V (ν ), and V be the two overlapping clusters and their overlap, respectively. Let n be the number of vertices of G. The following statements hold:
(a) If each of subsets V (μ )−V , V , and V (ν )−V induces a connected subgraph of G then W can be tested for oc-planarity in
O(n) time.

78

(b) If both V and at least one of subsets V (μ ) − V ,V (ν ) − V
induce connected subgraphs of G then W can be tested for
oc-planarity in O(n2 ) time.

• For each pair V (μ ),V (ν ) of overlapping clusters of W , let
V be their overlap; V (μ ), V (ν ), and V define the following
four clusters in C: V (α ) = V (μ ) − V , V (β ) = V (ν ) − V ,
V (γ ) = V , and V (λ ) = V (μ ) ∪V (ν ).
The c-graph depicted in Figure 2 is the c-image of the moc-graph
of Figure 3.
Unfortunately, the characterization of Lemma 2 cannot be extended to family of moc-graphs whose overlaps induce connected
subgraphs. Indeed, as proved by the next lemma, even for very
simple types of moc-graphs consisting of just three clusters, two
of which overlap and such that the overlap is connected, the cplanarity of the c-image may not imply the oc-planarity of the mocgraph.
Lemma 3 There exists a moc-graph W = (G, H) with exactly three
clusters, two of which overlap, such that: (i) The overlap induces a
connected subgraph of G; (ii) W is not oc-planar; (iii) the c-image
of W is c-planar.
Proof. Let W = (G, H) be the moc-graph of Figure 8(a). White
and grey vertices define a cluster V (μ ), and black and grey vertices define a cluster V (ν ) that overlaps with V (μ ). The remaining
three vertices define a third cluster V (δ ) that does not overlap with
the other clusters. As shown by Figure 8(b), there exists a c-planar
drawing of the c-image of W ; but W is not oc-planar. Indeed, by
Theorem 2 the embedding induced by any oc-planar drawing of W
must have the black vertices and the vertices of V (δ ) in the external face of G(μ ), i.e. outside every cycle of G(μ ). However, the
embedding of G in Figures 8(a) and 8(b) has a cycle of G(μ ) that
separates the black vertices from the vertices of V (δ ), and such a
separating cycle exists in all planar embeddings of G, because G is
a 3-connected graph.
✷

W

an oc-planar drawing of W such that, for each pair of overlapping
clusters V (μ ),V (ν ), the boundaries of the regions R(μ ) and R(ν )
intersect in two points p1 and p2 . We construct a c-planar drawing
Γ (C) of C from Γ(W ) by redefining the regions of those clusters
that overlap, without changing the drawing of G. For every pair
V (μ ),V (ν ) of overlapping clusters with overlap V , the procedure
to define the regions of clusters V (μ )−V , V , V (ν )−V in Γ (C) is
the same as in the proof of Theorem 2. Consider the region R(μ ) ∪
R(ν ) in Γ(W ) and let Λ be its boundary. The boundary of the region
of V (μ ) ∪ V (ν ) is drawn in Γ (C) as a simple closed curve that
follows Λ, ε > 0 distance away (on the outside) from it.
✷

μ
δ

ν

(a)

C
δ

λ

α

Combining Lemma 4 with the results in [2, 4, 5, 11, 12] the following result can be proved.

β

γ

(b)
Figure 8: (a) A moc-graph W that is not oc-planar; the drawing in
the figure is not oc-planar since the three edges in bold should be
completely inside the region of μ . (b) A c-planar drawing of the cimage C of W .

Motivated by Lemma 3, we consider a sub-family of mocgraphs where each cluster has an edge connecting it to some “external vertices”, i.e. vertices that belong neither to the cluster itself nor to the clusters that overlap with it. More formally, a
moc-graph W = (G, H) is externally connected if for each pair
V (μ ), V (ν ) of overlapping clusters with overlap V there are two
edges (u1 , v1 ), (u2 , v2 ), called bridges, with u1 ∈ V (μ ) − V , u2 ∈
V (ν ) −V and v1 , v2 ∈ V (μ ) ∪V (ν ). For example, Figure 3(a) is an
externally connected moc-graph. The proof of the following lemma
relies on the fact that in every planar embedding of an externally
connected moc-graph the bridges force the external face of the subgraph induced by each pair of clusters V (μ ), V (ν ) to have at least
one vertex of V (μ ) −V and one vertex of V (ν ) −V on its boundary.
Lemma 4 Let W = (G, H) be an externally connected moc-graph
such that each overlap induces a connected subgraph of G. W is
oc-planar if and only if its c-image is c-planar.
Sketch of proof. Let C be the c-image of W . If C is c-planar,
let ψ be the planar embedding of G induced by a c-planar drawing
Γ(C) of C. We show that ψ satisfies the conditions of Theorem 2.
Let μ be a node of H and let v be a vertex of G − G(μ ). If V (μ ) is
a non-overlapping cluster, μ is also a node of T in C and thus v is
in the external face of G(μ ). If otherwise V (μ ) is an overlapping
cluster, let V (ν ) be the cluster that overlaps with V (μ ) and let V
be the overlap. If v ∈ V (ν ) then p(v) is outside the region of cluster
V (μ ) ∪V (ν ) in C and therefore v is in the external face of G(μ ). If
v ∈ V (ν ) −V , suppose that there existed an internal face f of G(μ )
such that v is in f . Since W is externally connected, there exists an
edge (u, w) such that u ∈ V (ν ) −V and w ∈ V (μ ) ∪V (ν ). Observe
that u is in the external face of G(μ ) because ψ is a planar embedding of G. Since the boundary of the region of cluster V (ν ) −V is
connected in Γ(C) and this region contains both p(v) and p(u), it
follows that such region crosses an edge of f in Γ(C), contradicting
the c-planarity of the drawing.
If W is oc-planar, the c-planarity of C can be shown by a similar
argument as the one in the proof of Lemma 2. Namely, let Γ(W ) be

Theorem 4 Let W = (G, H) be an externally connected moc-graph
such that each overlap induces a connected subgraph of G. For
every pair of overlapping clusters denote by V (μ ) and V (ν ) the
two clusters that overlap and let V be their overlap. Also, let n be
the number of vertices of G. The following statements hold:
(a) If each of the subsets V (μ ) − V , V (ν ) − V induces a connected subgraph of G then W can be tested for oc-planarity in
O(n) time.
(b) If at least one of subsets V (μ ) −V , V (ν ) −V induces a connected subgraph of G then W can be tested for oc-planarity in
O(n2 ) time.
(c) If every connected component of the subgraphs induced by
the subsets V (μ ) −V , V (ν ) −V is connected to a vertex v ∈
V (μ ) ∪ V (ν ) then W can be tested for oc-planarity in O(n3 )
time.
Sketch of proof. Let C be the c-image of W . For each pair of
overlapping clusters V (μ ),V (ν ) of W , cluster V (μ ) ∪ V (ν ) of C
induces a connected subgraph of G, because both V (μ ) and V (ν )
induce connected subgraphs of G and they share at least one vertex.
Hence, if the hypothesis of Statement (a) applies, C is a c-connected
c-graph and it can be tested for c-planarity by using [4, 5] or [2].
If the hypothesis of Statement (b) applies, then C is an almost cconnected c-graph [12]. Indeed, for each pair of overlapping clusters V (μi ),V (νi ) of W , at most one of the corresponding clusters of
C induces a disconnected subgraph of G, while its siblings and their
father induce connected subgraphs of G. Thus C can be tested for
c-planarity by using the O(n2 ) algorithm of Gutwenger et al. [12].
Finally, if the hypothesis of Statement (c) holds, C belongs to the
class of the extrovert c-graphs, introduced by Goodrich et al. [11]
and the O(n3 ) time c-planarity testing algorithm given by the same
authors can be applied. The proof is concluded observing that C
can be computed in O(n) time from W .
✷
4 F INAL R EMARKS AND O PEN P ROBLEMS
This paper has defined a new problem in the field of cluster planarity, i.e the overlapping cluster planarity testing problem. It has
started the investigation by analyzing the not obvious relation with
classical c-planarity testing; classes of oc-graphs have been described for which polynomial-time oc-planarity testing algorithms
exist.
Several questions are naturally raised by the research described
in this paper. Some of the most relevant in our opinion are listed
below:
• It would be interesting to describe other meaningful families
of oc-graphs for which the oc-planarity testing problem can
be performed in polynomial-time.

79

• It is well known that c-planar graphs can be tested for cplanarity in polynomial time if they are c-connected. What
is the time complexity of testing a c-connected oc-graph for
oc-planarity in the general case?
• A polynomial-time planarization algorithm is described in [6]
for those c-graphs that are not c-planar. From the application
side, it is important to investigate efficient planarization algorithms for oc-graphs that are not oc-planar or for which a
polynomial-time planarity testing algorithm is not known.
ACKNOWLEDGEMENTS
We thank Emilio Di Giacomo for useful discussion.
R EFERENCES
[1] S. Cornelsen and D. Wagner. Completely connected clustered graphs.
In S. Verlag, editor, WG’03, volume 2880 of Lecture Notes in Computer Science, pages 168–179, 2003.
[2] P. F. Cortese, G. Di Battista, F. Frati, M. Patrignani, and M. Pizzonia.
C-planarity of c-connected clustered graphs: Part II - testing and embedding algorithm. Technical Report 110, DIA, Universit´a degli Studi
Roma Tre, 2006.
[3] P. F. Cortese, G. Di Battista, M. Patrignani, and M. Pizzonia. Clustering cycles into cycles of clusters. Jour. Graph Alg. Appl., 9(3):391–
413, 2005.
[4] E. Dahlhaus. A linear time algorithm to recognize clustered graphs
and its parallelization. In S. Verlag, editor, LATIN’98, volume 1380 of
Lecture Notes in Computer Science, pages 239–248, 1998.
[5] E. Dahlhaus, K. Klein, and P. Mutzel. Planarity testing for c-connected
clustered graphs. Technical Report SYS-1/06, LSXI, University of
Dortmund, 2006.
[6] G. Di Battista, W. Didimo, and A. Marcandalli. Planarization of clustered graphs. In S. Verlag, editor, GD’01, volume 2265 of Lecture
Notes in Computer Science, pages 60–74, 2001.
[7] G. Di Battista, P. Eades, R. Tamassia, and I. G. Tollis. Graph Drawing.
Prentice Hall, 1999.
[8] E. Di Giacomo, W. Didimo, L. Grilli, and G. Liotta. Graph visualization techniques for web clustering engines. IEEE Trans. on Vis. and
Comp. Graphics. to appear.
[9] E. Di Giacomo, W. Didimo, L. Grilli, and G. Liotta. A topologydriven approach to the design of web meta-search clustering engines.
In S. Verlag, editor, SOFSEM’05, volume 3381 of Lecture Notes in
Computer Science, pages 106–116, 2005.
[10] Q. Feng, R. Cohen, and P. Eades. Planarity for clustered graphs. In
S. Verlag, editor, ESA’95, volume 979 of Lecture Notes in Computer
Science, pages 213–226, 1995.
[11] M. T. Goodrich, G. S. Lueker, and J. Z. Sun. C-planarity of extrovert
clustered graphs. In S. Verlag, editor, GD’05, volume 3843 of Lecture
Notes in Computer Science, pages 211–222, 2005.
[12] C. Gutwenger, M. J¨unger, S. Leipert, P. Mutzel, M. Percan, and
R. Weiskircher. Advances in c-planarity testing of clustered graphs. In
S. Verlag, editor, GD’02, volume 2528 of Lecture Notes in Computer
Science, pages 220–235, 2002.
[13] F. Harary. Graph Theory. Addison-Wesley, 1972.
[14] D. Harel. Statecharts: A visual formalism for complex systems. Science of Computer Programming, 8:231–274, 1987.
[15] A. Jain and R. Dubes. Algorithms for Clustering Data. Prentice Hall,
1988.
[16] M. J¨unger and P. Mutzel. Ed., Graph Drawing Software. SpringerVerlag, 2003.
[17] M. Kaufmann and D. Wagner. Ed., Drawing Graphs, volume 2025 of
Lecture Notes in Computer Science. 2001.
[18] P. Krishna, N. Vaidya, M. Chatterjee, and D. Pradhan. A cluster-based
approach for routing in dynamic networks. ACM SIGCOMM Computer Communication Review, pages 49–65, 1997.
[19] H. Omote and K. Sugiyama. Method for drawing intersecting clustered graphs and its application to web ontology language. In
APVIS’06, volume 60 of CRPIT, pages 89–92, 2006.
[20] F. P. Preparata and M. I. Shamos. Computational Geometry: An Introduction. Springer, 1990.

80

[21] K. Sugiyama. Graph Drawing and Application for Software and
Knowledge Engineers. World Scientific, 2001.
[22] K. Sugiyama and K. Misue. Visualization of structural information:
Automatic drawing of compound digraphs. IEEE Trans. on Syst.,
Man, and Cyb., 21(4):876–892, 1991.

