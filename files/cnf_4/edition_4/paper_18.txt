An Adaptive Gauss Filtering Method
Shyh-Kuang Ueng*

Hai-Peng Chengt

Ruey-Yuan Lut

Department of Computer Science
National Taiwan Ocean University

ABSTRACT
An adaptive filtering method for volume data is presented in this
paper. In this filtering method, the input data set is re-sampled to
create a hierarchy of multiple-level data sets. A data classification
task is performed at each level of the data pyramid to decide the
local structure types. Data voxels are classified as linear planar
or blob structures, based on the gradients and the eigenvalues of
Hessian matrices. The classification results are used to adjust the
shapes and orientations of filters such that noises are suppressed
while key features are preserved.
Index Terms:
1.3.3 [Computer Graphics]: Picture/Image
Generation Antialiasing
1 INTRODUCTION
Gauss filters are widely used to suppress noises and smooth signals.
However, Gauss filters may blur data and result in the loss of features. An adaptive Gauss filter is proposed in this paper. The variations of intensities are examined and the underlying structure types
are identified. Gauss filters are re-shaped and re-oriented to accommodate the geometrical shapes of the structures such that noises are
reduced while key features are preserved.

1.1 Related Work
In a volume scalar data set, the Hessian matrices evaluated around
stationary points are useful tools for analyzing the second order
variations of intensities. Their eigenvalues can be served as criteria
for classifying structure types. In [4], a vessel enhancement method
is proposed. In the method, the eigenvalues of Hessian matrices
are evaluated. Based on the combination of eigenvalues, the areas
containing tubular structures are identified and given measurement
scales. Vessel structures are displayed by rendering the voxels with
higher measurement scales. In [12], Sato et al. present a filtering
strategy for segmenting and visualizing curvilinear structures. They
use Gauss kernels with different standard deviations to reconstruct
data. Then eigen-values of Hessian matrices are computed. By examining the ratios of eigen-values, the areas containing linear structures are extracted. Their method can detect linear structures with
varying widths by using multiple standard deviations. Another algorithm is proposed in [13] to preprocess and render volume data.
In the method, the gradients and Hessian matrix eigenvalues are
utilized to classify data into edge, linear, sheet (planar), and blob
structures. Based on the types, Gauss filters with modified standard
deviations are selected to preprocess the data. The type information
is further used in transfer function design.
Hessian matrices are also used in [8] to reduce data size in volume rendering. They compute eigen-values of Hessian matrices and
delete data voxels whose eigen-values are not within certain ranges.
*e-mail: skueng@mail.ntou.edu.tw

te-mail:m94570034@mail.ntou.edu.tw
te-mail:b93570004@mail.ntou.edu.tw
IEEE Pacific Visualisation Symposium 2008
4 - 7 March, Kyoto, Japan
978-1-4244-1966-1/08/$25.00 Â©2008 IEEE

Therefore, areas of uniform intensities are ignored and the data size
is reduced. A more completed work is presented in [7]. The eigenvalues and gradients are used for identifying structure types and
curvatures. Therefore, better filters and transfer functions are selected for processing volume data. In a diffusion tensor medical
data set, Hessian matrices represent diffusion phenomena in each
region. By computing their eigenvectors, the directions where water particles are diffused can be identified. The eigenvectors form
a vector field. Muscle fibers or neural pathways are traced by integrating streamlines. Some results are reported in [14, 15]. A
survey paper on diffusion tensor data analysis is presented in [1].
In [11], a vessel enhancement procedure is presented. They use
different Gauss filters to enhance vessels of different widths. Final
results are obtained by integrating the results of all the filtering processes. Therefore, vessels of different thicknesses and directions
are revealed. A multiple stage method for vessel detection is described in [6]. First, the data are filtered to increase signal-to-noise
ratio. Then the gradient magnitudes are computed and thresholded
to eliminate noises. The gradients are used to partition the data into
homogeneous regions. These regions are merged to form vessels.
In [9], a multi-scale method is presented to classify and visualize
volume data. In the method, a set of Gauss filters with different deviations are used to resample the input data into data sets of different precisions. The data sets are used in a multi-level data classification to isolate a target region from surrounding areas. An interactive
user interface is offered to evaluate and improve the classification.
Once the target region is extracted, it is rendered by using 3D texture mapping. In [10], a volume rendering method is proposed for
visualizing noisy and biased data. Instead of using iso-values, the
first order derivative information of the data is utilized to detect
surfaces and estimate surface normals. The second derivatives are
used to reduce the displacement of surface. The resulted data are
rendered by using ray-casting methods.

1.2 Overview
In traditional structure classification methods, eigen-values of Hessian matrices and gradients are separately utilized to classify data.
In our method, both gradients and Hessian matrix eigenvalues are
used in type classification. Therefore, structure types are accurately
categorized. Some structures, for example blood vessels, are of
varying thicknesses. Performing type classification only in the original data set, voxels inside thick vessels may be classified as blob
structures, though vessels are apparently linear structures. To overcome this pitfall, the input data set is down-sampled to generate data
sets of lower resolutions and create a pyramid of volume data. Type
classification is conducted at all levels of the data pyramid to reduce
ambiguous cases. Thus thick structures can be correctly identified.
As the type classification is carried out in a hierarchical manner, the
filters are adjusted according to the types and thicknesses of structures. Thick structures are filtered with blunt Gauss filters while
thin structures are resampled by using sharp Gauss filters.
The rests of this paper are organized as follows: In Section 2, the
fundamentals of our type classification method are presented. The
design of Gauss filter is described in Section 3. Section 4 contains
the analysis of our type classification method. The proposed filtering method is applied to filter a specially designed data set, and

127

the results are displayed in Section 5. More experiment results and
analysis are included in Section 6. Conclusion is presented in the
last section.

2 STRUCTURE CLASSIFICATION
The first step of our filtering algorithm is to identify structure types.
The structure of a voxel is determined by analyzing the intensity
variation of the voxel. A new and concise approach is developed
for estimating intensity variations. A hierarchical type classification
procedure is utilized to classify structure types and thicknesses.

Table 1: Principles of structure type classification.

Do

large
large
small

D1

large
small
small

D2

small
small
small

type

linear
planar
blob

2.1 Intensity Variation Estimation
Let f (x) be the intensity at position x. The intensity around x can
be approximated by using Taylor expansion:
J
f (x + d)
f (x) + Vf (x) -Hd+ dH(x)d,

(1)

where, d is a displacement vector, V is the gradient operator, denotes the vector inner product operator, and H is the Hessian matrix
evaluated at x. The Hessian matrix is defined by:
[ d2f

dxdy
d2f2
dy

dX2

H=

d2f 1
dxdz
d2f
dydzI
2f
dZ2 j

d2f

d2f
dxdy
I 2f
L dxdz

2
d2f

dydz

The data are reconstructed by using tri-linear interpolation. The
derivatives in an interior voxel are evaluated by using central difference method. The derivatives in a boundary voxel are computed
by using backward and forward difference methods. The Hessian
matrix, H, is a symmetric matrix. Its eigen-values are real and its
eigen-vectors are mutually orthogonal. Let v0, Vj, and v7 be the
normalized eigen-vectors of H. Assume that the displacement vector d=avi. That is d is a vector in the direction of eigen-vector vi.
Then equation 1 can be simplified as:

f(x + av-i)

-

Planar Structure

f(x) + acgi +

ViVi,

f(x) +

i,

cg +

f(x+ i)

-

Di

=

(x+ ') f (x)

f(x) + gi +

a linear structure, then the variation along the direction of the linear structure, v , should be small while the variations in the other 2
directions are large. When residing in a planar structure, the variation in the planar surface are small, though the variation along the
normal direction of the planar surface, V'3, is high.
Once the variations, Di are calculated and sorted, we can conduct
a basic voxel classification: A variation is small if it is less than a
predefined threshold. When Do is small, then D1 and D2 will be
small too. The voxel is classified as blob. If Do is not small but
D1 and D2 are small, we have a planar structure. For other cases,
more advanced strategies must be employed for the voxel classification. At first, the normalized ratios of the differences between the
variations are calculated:

Do-DI

i(2)

gi + xi,

|gi+Aill-

(4)

The magnitude of Di provides an approximation of the intensity
variation along the direction of Vi. It serves as the fundamental
criteria in our structure classification.
2.2 Structure Type Classification
To classify a voxel, the intensity variations, Di, in the directions of
the eigen-vectors are computed and sorted such that

Do >D1

>

Linear Structure

Figure 1: Structure types and intensity variations.

f(x) + aVf(x) Vi + a2viJH(x)Vi,

where gi represents the inner product of the gradient Vf and the
unit eigen-vector vi. It is the gradient component in the direction of
Vi. Assume aoc: 1.0, the intensity variation can be computed by:

D2.

Then the eigen-vectors are re-arranged according to orders of Di.
Thus vi> is the corresponding eigen-vector of Do and v' is associated
with D2. By comparing the variation magnitudes, the structure type
can be heuristically decided by using the principles listed in Table 1.
The intuition behind the principles is illustrated in Figure 1. If the
voxel is inside a blob structure, the 3 variations are small since the
surrounding voxels possess similar intensities. If it is contained in

128

Blob Structure

Do-D2
DoD
DI -D2
The ratios rl0 and r20 measure the differences between Do and the
other 2 variations, and r2l is the ratio of difference between D1
and D2. Since Do, D1, and D2 are positive and sorted, these ratios
are non-negatives, and their magnitudes are in [0.. 1]. Furthermore,
after passing the basic classification, Do and D1 will be greater than
the predefined threshold. Evaluating the ratios will not encounter
severe numerical errors.
In a linear structure, rl0 should be small while r20 and r2l should
be large. On the other hand, for a planar structure, both rl0 and
r20 must be large and r2l should be small. In a blob structure, all
variations are small and similar. Therefore all the ratios should be
small. Based on the reasoning, three measurements are developed
for estimating the tendency of each structure type:

Cl

Cp
Cb

=

(1- rjo)r20r21,
rjor2o(l- r12),
(1- ro)(l -r20)( -r21).

The scalars, Cl, Cp, and Cp are the coefficients of linear, planar, and
blob structures. Their magnitudes are in [0.. 1]. If Cl is the largest
coefficient then the voxel is in a linear structure. If Cp is the largest
coefficient, the voxel is identified as planar. A voxel with large Cb

is regarded as blob. In some voxels, the coefficients are similar,
and the classification is not robust. To overcome this problem, the
the following tests are conducted to ensure the designated structure
type is always the dominated one:
T1

(Cl'CP

P)A(clcb >f),

(5)

P)A(CP Cb >f)
(cbCl > P)A(cbcP >f),

(6)

Tp -(CPCI'
Tb

>

>

(7)

where A is the logical AND operator and ,B is a threshold defined by
users. In our implementation, ,B is set to 0.2. A voxel is classified as
linear, if Cl is at least larger than Cp and Cb by 20%. Planar and blob
structures are classified analogically. In some voxels, the test of the
largest coefficient fails, and the structure type can not be decided.
The structure type is classified as unknown. The threshold, /B, is
a mechanism for tuning the sensitivity of the classification. If it is
large, a strict classification is adopted and more voxels are classified
as unknown structures. On the other hand, if ,B is small, more voxels
are successfully classified, though the accuracy is reduced.

2.3 Hierarchical Structure Classification
Thick linear and planar structures may be identified as blob structures locally. In order to improve the accuracy of the type classification, a hierarchical method is adopted. When the input data set
is fetched into the main memory, it is down-sampled to produce
a sequence of multiple resolution data sets. The resolution ratio
between two consecutive data sets in the sequence is 2 1 in all
directions. Since we use tri-linear interpolation to reconstruct the
signals, a box filter is good enough for the down-sampling. Then a
pyramid of data sets is created. The input data set is at the bottom
level while the top-most level is occupied by the the coarsest data
set. A pyramid of 3 levels is displayed in Figure 2.
The type classification is conducted at the bottom level first. If
the structure is classified as linear or planar, the result is accepted
and output. Otherwise, the classification is performed at the next
level. If the classification result of the second level is blob or unknown, the classification is propagated to the third level. The process is repeated until the top-most level is reached. The flowchart
of the hierarchical type classification is shown in Figure 2. This
hierarchical classification approach favors linear and planar structures over blob and unknown structures. Therefore thick linear and
planar structures can be figured out.
3 ADAPTIVE GAUSS FILTER DESIGN
The goal of this research is to design an adaptive filtering method to
suppress noises while preserve features. Tri-linear interpolation is
used in intensity reconstruction, and 3D Gauss filters are employed
in resampling data. The basic Gauss filter mask is a cube with a
9 x 9 x 9 resolution regular grid. The Gauss filter extents beyond the
mask are truncated since the values outside the mask are small and
make very little or no contribution to the results. Assume the cube
center is located at [0,0,0]T and the spacing gaps between grippoints in x, y, and z directions is initialized to 1. The weights of the
grip-points are obtained by calculating a 3D Gauss function with
the standard deviation 6 1.0. Since the filter mask truncates some
parts of the Gauss function, the total weight of the grid-points is less
than 1.0. To recover the truncated parts, the grip-point weights are
normalized such that their sum is equal to 1.
When resampling a voxel, the gradient and Hessian matrix of the
voxel are computed first. Then the eigen-vectors and eigen-values
of the Hessian matrix are calculated. In turn, the intensity variations, Do, D1, and D2 are evaluated. These variations are utilized to
classify the underlying structure type. Once the type classification
process is completed, the filter mask is mapped into the input data
domain such that its center is coincident with the voxel center. The

Blob
_ Unknown

_

Level 0 Data Set
Blob

Linear
&

Results

Linear
&
V Planar

Unknown V

Planar

Output

Level 1 Data Set

Output

-~~~utput
ROeusuluts

-,N*-

Linear

Planar
Blob
Unknown

Level 2 Data Set

Figure 2: Data pyramid and type classification flowchart. Linear and
planar structures are preferred and reported immediately. Blob and
unknown structures need more classification operations.
mask has to be re-oriented to ensure that its 3 axes are parallel to
the 3 eigenvectors. The spacing gaps along the 3 axes are adjusted
according to the structure type and the level of the data pyramid
where the structure type is identified. Finally, the resulted intensity
is computed by convolving the weights and intensities of the filter's
grid-points.

3.1 Reshaping Filter Masks
Changing the spacing gaps of grip-points results in reshaping the
filter. The reshaping is based on the underlying structure type to
ensure the sampling densities match the variations in the 3 axes.
Consider an ID Gauss function g(x, ax):

g(x, aX) = exp ( 22Tx2
By scaling the spacing gap down by a factor of k and substituting x
with a new variable y, we obtain a new Gauss function g(y, ay):
x

y

(8)

k'

g(x,ax)

g(ky,a-k2y2
X),~
exp( )2

(9)

g

(10)

_2

=exp(2
2(axk)){A

-Y2
exp(2) Y

6gy

ax

k k.

)

(1 1)
(12)

(13)

That is the standard deviation of the new Gauss function is shrunk

by k times. The Fourier transformation of a Gauss function is also
a Gauss function. Under Fourier transform, Gauss functions with
smaller standard deviations produce Gauss functions with larger
standard deviations in the frequency domain and allow more high
frequency signals to pass. This property is applied in the filter design. For example, the intensity variation of a linear structure is
small along the direction of this structure while the intensity variations across the linear structure are large. The linear structure

129

should be resampled by using a filter with smaller standard deviations in the directions perpendicular to the linear structure and a
larger standard deviation along the direction of the linear structure.
This implies that the spacing gaps of grid-points of the filter masks
have to be shrunk in the directions perpendicular to the linear structure.

3.2 Filters and Structure Types
According to the previous analysis, Gauss filter masks are reshaped
to match the geometrical shapes of underlying structures. As shown
in Figure 1, the filter mask for a linear structure is a rectangular tube
along the direction of v , where the intensity variation is the smallest. The mask of a planar structure should be a flat cube which has a
small extent in the V'3 direction. The filter for a blob structure has a
cube-like mask, since the variations in all directions are similar. Beside structure types, the shapes of filters are also influenced by the
levels where the types are identified. For example, linear structures
classified at level 0 have smaller cross-sections than those classified
at level 1. Their intensity variations are more significant. Therefore, the filter masks for level 0 linear structures should be slim.
This principle is also applicable to the design of filters for planar
structures.
The shapes of the filters for linear, planar, blob, and unknown
structures are shown in Figure 3. Blob and unknown structures
share the same filter. The spacing gap of grid-points is 1. The
filter mask is shown in the top row of the figure. The filters for
linear structures are displayed in the second row. The first cube
in this row is the filter for level 0 linear structures. The spacing
gaps are set to 0.25, 0.25, and 1 in the directions of v0, VJ, and jV2.
The second cube represents the filter for level 1 linear structures. Its
spacing gaps are 0.35, 0.35, and 1. Compared with the first filter, its
cross-section is scaled up by a factor of 2 in both sides. Therefore,
according to Equation 13, its variance is enlarged by a factor of 2.
This filter damps more high frequency signals in the directions of
VI and v7. The filter for level 2 linear structures is designed, based
on the same reasoning. It is represented by the third cube in the
second row. Its spacing gaps are 0.5, 0.5, and 1. The third row
of the figure contains the filters for planar structures. The first flat
cube is the filter for level 0 planar structures. Its spacing gaps are
0.25, 1, and 1 in the directions of v0, Vj, and v . The spacing gap in
vij direction is increased by 2 and 2 times to create the filters for
level 1 and level 2 planar structures. The filters are represented by
the second and third cubes in this row.
4 SENSITIVITY ANALYSIS OF TYPE CLASSIFICATION
In our classification method, the variations, Do, D1, D2 and the tests
T7, Tp, and Tb decide the underlying structure types. Four cases
are studied and presented in this section to demonstrate how these
scalars influence the type classification results. Hence the sensitivity of the type classification under different situations can be revealed.
In case 1, Do is set to 1.0 while D1 and D2 are equal to each
other and varied in [0.. 1]. In case 2, Do and D1 are set to 1, and
D2 is varied in [0.. 1]. The studies of cases 1 and 2 are to demonstrate how the relative differences among the variations influence
the classification process. The graphs of Cp and Cb of case 1 are
displayed in part (a) of Figure 4. Tests Tp and Tb divide the range
into 3 regions, [0.0.45), [0.45..0.55), and [0.55.. 1]. The structure
is classified as planar, unknown, and blob in the three regions respectively. (Since D1 and D2 are equal and Cl is 0, we can not
classify the structure as linear.) When D1 and D2 are less than 0.45,
the structure is classified as planar. As D1 and D2 exceed 0.55, the
structure is identified as blob. However, if D1 and D2 are about
50% of Do, the classification process can not decide the structure
type. In part (b) of Figure 4, the graphs of Cl and Cb of case 2 are
shown. Tests T1 and Tb split the range into three regions, [0..0.45),

130

3

vo

The Eigen-Vectors

Blob F

K

Unknown
Structure
Filters

I

J

1:1:1

level 0
0.25:0.25:1

level l
0.35:0.35:1
Linear Structure Filters

level 2
0.5:0.5:1

level 0
0.25:1:1

level 1
0.35:1:1
Planar Structure Filters

level 2
.:1
0.5:1:1

Figure 3: Shapes of filter masks for different structure types.

[0.45..0.55), and [0.55..1]. If D2 is small, the variation along j2 is
negligible, and the structure is categorized as linear. On the other
hand, if D2 is relatively large, the variations in the 3 directions are
similar and the structure is decided as blob. The structure type is
undecidable if D2 is about one half of Do. In conclusion, to identify
a planar structure, D1 and D2 should be similar and less than 45%
of Do. If Do is similar to D1 and D2 is less than 45% of D1, the
structure is regarded as linear. If the ratio of D2 to Do is larger than
55%, we will have a blob structure.
In the remaining 2 cases, the ratio DI Do is fixed while the ratio D21D1 is allowed to float between 0 and 1. The goal of the
analysis is to reveal the effect of the variation ratios upon the type
classification. In case 3, the ratio DI Do is set to 1/3. That is Do
is 3 times larger than D1. It is very dominant. The graphs of Cl,
Cp, and Cb are shown in part (a) of Figure 5. Based on the graphs,
when the ratio D21D1 is smaller than 0.29, the underlying structure
is classified as linear. This is because D1 is more similar to Do than
to D2. As this ratio grows beyond 0.39, the structure is identified
as planar since D1 is farther away from Do. The tests T1 and Tp
divide the range into 3 regions. Because of the dominance of Do,
the region of planar type is much larger than that of linear type. In
case 4, the ratio D1 IDo is increased to 3/4, i.e. Do is slightly larger
than D1. The graphs of Cl, Cb, and Cp are illustrated in part(b) of
Figure 5. Since Do and D1 are similar, the underlying structure will
not be designated as a planar structure, and the region of linear type
is increased. When D2 is larger than 60% of D1, the ratios among
the variations are closer to 1, and the structure is to be recognized
as blob. In summary, if the ratio D1 Do is small, the structure is
more likely to be decided as planar. However, if D1 Do is much
larger than D21D1, the structure is identified as linear. Otherwise,
the structure would be classified as blob.

Planar

Blolb

Planar

Blo-Linear

B
Blob
1,

,-

nois

(b)

(a)

I-

Figure 4: Type classification for fixed Do, (a) DO=1.0, D1=D2 in [0..1],
(b) Do=Di=1, D2 in [0..1].

V9

X

Linear

Planar,.
M,.

Linear

-----

(b)

Figure 5: Type classification for fixed DI and varying D2, (a) DI

(b)

DI

=

-

y-axis
128

* U*/

ise
I

Figure 6: The standard data set contains 3 spheres, 3 axes, and
noises. The thicknesses of the sphere surfaces and the crosssections of axes are different.

large. The remaining space areas are given a uniform intensity
value, and they are blob structures. Once the data set is filtered, the
linear and planar structures should be preserved while the noises
are suppressed.

Blob

------ - ------

(a)

*

=

1/3,

3/4.

5 EXPERIMENTS BY USING CANONICAL DATA
The main functionalities of our filter include: reducing noises, preserving features, and smoothing data. Sometimes, these goals are
mutually conflict and can not be achieved simultaneously. In this
section, filtering results are presented to compare the performance
of our method, the adaptive Gaussfilter, with that of the tradition
Gauss filter, the general Gaussfilter

5.1 The Standard Data Set
In order to verify the effectiveness of our filtering method, a special test data set is fabricated. The cross-section of the test data
on the xy-plane is shown in Figure 6. The data set contains
128 x 128 x 128 voxels. There are 3 concentric hollow spheres
in the domain. Their thicknesses are 4, 6, and 8. The outer sphere
is the thinnest sphere while the inner sphere possesses the largest
thickness. The radii of the spheres are 94, 61, and 32. Therefore,
the data domain boundaries cut the outer sphere and create 4 holes
on it. The internal parts of the data set is visible through the holes.
The data set also contains 3 axes. The cross-section of the x-axis,
y-axis, and z-axis are 4 x 4, 3 x 3, and 2 x 2. Noises are added into
the space between the domain boundaries and the middle sphere.
In total, 30, 000 voxels are occupied by noises. Since the density of
noise is high, adjacent noises may form short lines, small patches,
or tiny blobs. Therefore, multiple types of noises are contained in
the test data.
The data voxels belong to 4 structure types. The noises are
randomly placed and have extreme intensities. The axes are linear structures of different cross-sections. The skin surfaces of the
spheres are planar structures. However, the internal parts of the
spheres may be regarded as blob structures if the thicknesses are

5.2 Filtering Results
In the first test, the standard data set is filtered by using the adaptive Gauss filter and the general Gauss filter. The filtered results are
rendered into a 3D texture map [3, 5]. The resolution of the texture
map is the same as that of the data set. Gouraud shading is used
for rendering the voxels. Then the domain is cut into slices by using view-align slicing method [2]. The gap between two slices is
0.25. The slices are projected onto the screen space in a back-tofront order. The final image is produced by blending the effects of
the slices. To avoid smoothing the data patterns, the minification
and magnification filtering are set to nearest-point. The purpose
of this test is not to produce visual pleasant images but to reveal
the properties of the adaptive Gauss filter. Therefore, we set up the
3D texture mapping environment in this way to directly reflect the
intrinsic data patterns.
Three images are presented in Figure 7. The raw data are displayed in part (a), the results created by the general Gauss filter
are contained in part (b), and the results generated by the adaptive
Gauss filter are shown in part (c). Since the general Gauss filter are
not adjusted based on the underlying structure types, it fails to preserve the spheres. The intensities of the axes are also significantly
modified. However, it filters out almost all noises. The adaptive
Gauss filter produces better results. The spheres are preserved and
the intensities of the axes are not mixed with that of the surrounding space, though some noises are not deleted. The z-axis is too
thin. It disappears in the results of the general Gauss filter, and only
slightly visible in the results of the adaptive Gauss filter.
6 MORE EXPERIMENTS AND ANALYSIS
In this section, the test results generated by using other data sets are
displayed and analyzed. In each test, the raw data and the filtered
results are rendered by using 3D texture mapping with view-aligned
slicing. The texture map resolution is equal to that of the raw data.
Nearest-point filters are employed for minification and magnification.
In the first case, an aneurism data set is filtered by using the
general Gauss filter and the adaptive Gauss filter. The raw data and
the filtered results are rendered and shown in Figure 8. The data are
rendered in gray colors. The intensities are treated as opacities. The
raw data, displayed in part (a), contains many noises. The noises are
smoothed out in the results of the general Gauss filter, shown in part

131

(a) raw data

(b) general Gauss filter

(c) adaptive Gauss filter

Figure 7: Filtering results of the standard data set, (a) raw data, (b) results of general Gauss filtering, (c) results of the adaptive Gauss filtering.

(b). This filter produces the most visual-pleasant results. However,
many thin blood vessels are broken or filtered out. In part (c), the
results of the adaptive Gauss filter are presented. It reduces the
noises and preserves more thin blood vessels, though the resulted
data are not as smooth as those of the general Gauss filter. The type
distribution generated by the classification is displayed in the first
row of Table 2. Since there are many thick vessels and space, 73%
of the data voxels are classified as blob structures. About 21% of
the voxels are identified as linear structures. They belong to thin
vessels or noises. The general Gauss filter reduces their intensities,
and therefore less thin vessels are preserved.
In the second experiment, the bonsai tree data set is served as the
test data. The raw data set and the filtered results produced by both
filters are shown in Figure 9, and the type distribution of this data
set is depicted in the second row of Table 2. Based on the images,
the contrasts of leaves in the data set produced by the general Gauss
filter are less clear. The difference can be verified by the type distribution described in Table 2. More than 98% of the data voxels are
classified as linear or planar structures. Therefore the general Gauss
filter fails to capture features and the leave contrasts are declined.
Another problem with the general Gauss filter is that the gradients
are smoothed. The variation of gradients is reduced. When the data
are shaded, the image looks dull. This phenomenon exists in the
image of the aneurism data set too.
An MRI brain data set is filtered and rendered in the 3rd test. The
raw data and filtered results are displayed in Figure 10. The whole
raw data set is shown in part(a). A block of the brain surfaces is selected from the 2 filtered data sets and displayed in parts (b) and (c).
The general Gauss filter generates smooth results, but the patterns
of the brain surfaces are less obvious. The patterns are more visible in the data set produced by the adaptive filter. By referencing
the 3rd row of Table 2, we can see that the MRI data set composes
of many linear and planar structures. If all voxels are filtered by
using the general Gauss filter, the patterns are definitely declined.
In the last test, a teddy bear CT scan data set is filtered by using
both filters. The results are shown in Figure 11. As depicted in
Table 2, almost 50% of the data voxels are blob structures. We can
expect the general Gauss filter to produce smooth and visual pleasant results. However, some key patterns are distorted by the filter.
The wooden patterns on the panel behind the toy are blurred, and
the patterns on the chest of the toy are also broken. The colors are
shifted too. On the other hand, the adaptive Gauss filter preserves
the features and produces less color-shift.

132

Table 2: Percentages of structure types in test data.

| Data sets T Linear
Aneurism T 20.76
Bonsai
58.80
MRbrain
60.75
TeddyBear 31.24
Standard
65.11

Planar
5.96
39.81
32.49
18.87
26.52

Blob
72.93
0.85
6.15
49.66
7.06

Unknown
0.41
0.54
0.51
0.23
1.31

6.1 Filtering Costs
The costs of the adaptive Gauss filter and general Gauss filter are
displayed in Table 3. The costs are measured by seconds and depicted in the last two columns. The data sizes are contained in the
second column. The data sets are listed in descending order according to their sizes. The test is carried out on a PC with 1.8 GHz
dual-core cpu and 3.0 giga-byte memory. Since the general Gauss
filter does not perform type classification, its time complexity is a
linear function of data size. Smaller data sets always require less
costs. In the adaptive Gauss filter, a multiple level data classification is invoked. Its time complexity is influenced by the sizes and
the intrinsic structures of the data sets. The aneurism data set contains a lot of empty space, and a high percentage of the intensity
variations is near 0. Many voxels are classified as blob structures in
the basic type classification. Therefore less computations are performed and the costs are relatively low. In the bonsai and MRI brain
data sets, there are many features as shown in Table 2. More efforts
are required to classify these data sets. Thus the costs for filtering
them are higher even though they are smaller than the aneurism data
set. The teddy bear data set and the standard data set are small. The
data patterns hidden in these two data sets are simpler as shown in
Figures 6 and 11. They need less computational efforts. Therefore
the costs for filtering them are low.
7 CONCLUSION AND FUTURE WORK
In filtering a data set, our multi-level type classification method
identifies not only the underlying structure types but also the thicknesses of the structures. Since both gradients and eigen-values of
Hessian matrices are used for estimating the intensity variations,
the structure types are more accurately identified. During the filtering process, the filters are oriented and reshaped according to

(a) raw data set

(b) general Gauss filter

(c) adaptive Gauss filter

Figure 8: Filtering results of the aneurism data, (a) raw data, (b) general Gauss filter results, (c) adaptive Gauss filter results.

(a) raw data

(b) general Gauss filter

(c) adaptive Gauss filter

Figure 9: Filtering results of the bonsai data, (a) raw data, (b) general Gauss filter results, (c) adaptive Gauss filter results.

(a) raw data

(b) general Gauss filter

(c) adaptive Gauss filter

Figure 10: Filtering results of the MRbrain data, (a) raw data, (b) general Gauss filter results, (c) adaptive Gauss filter results.

133

(a) raw data

(b) general Gauss filter

Figure 11: Filtering results of the Teddybear data, (a)

raw

Table 3: Costs of Filtering (measured in sec.)
rr

_

'p
1

_

__
r

__

Gauss filter
Data set
Data size
431
Aneurism 256 x 256 x 256
371
Bonsai
256 x 256 x 220
370
MRbrain
256 x 256 x 220
TeddyBear I 128 x 128 x 220 I 96
53
Standard
128 x 128 x 128

_i_

__
s

_

__

Adaptive filter
474
513
511
I 116
68

Â£

the geometrical shapes and thicknesses of the underlying structures.
Therefore our adaptive filter reduces noise level and preserves important features. By displaying type distributions, the rough organization of a data set can be understood. This information may be
useful for transfer function design, though further investigation is
required. The standard deviation, 6, of the filter can affect the filtering results. A filter with a small standard deviation allows more
high frequency signals to pass the filtering and reveals fine details.
A filter with a larger standard deviation filters out high frequency
signals and generates smooth data. The standard deviation should
be treated as a parameter and tuned by users in the filtering procedure. The threshold ,B can influence the sensitivity of the type classification. Its value should be determined according to the internal
structure of the data. A systematical method is needed for selecting
a good ,B value. High gradients usually occur on surfaces, corners,
and edges. However, gradients are difficult to be used to classify
structure types, because a local orthogonal coordinate system can
not be uniquely decided. We propose a two-pass type classification
method in a future research. At the first pass, gradients are used
for identifying edges. If it fails to detect edges. Our current approach is invoked to identify structure types. Therefore both sharp
and smooth features can be captured.

REFERENCES
[1] P. J. Basser and D. K. Jones. Diffusion-tensor mri: theory, experimental design and data analysis - a technical review. NMR in Biomedicine,
15:456-467, 2002.
[2] A. Benassarou, E. Bittar, N. W. John, and L. Lucas. Mc slicing for
volume rendering applications. In Computer Graphics and Geometric
Modeling, 2005.

134

r]

(c) adaptive Gauss filter

data, (b) general Gauss filter, (c) adaptive Gauss filter.
[3] B. Cabral, N. Cam, and J. Foran. Accelerated volume rendering and
tomographic reconstruction using texture mapping hardware. In Proceedings of the 1994 Symposium on Volume Visualization, pages 9198, 1994.
[4] A. F. Frangi, W. J. Niessen, K. L. Vincken, and M. A. Viergever. Multiscale vessel enhancement filtering. In Proceedings of the First International Conference on Medical Image Computing and ComputerAssisted Intervention, pages 130-137, 1998.
[5] A. V. Gelder and K. Kim. Direct volume rendering with shading via
three-dimensional textures. In Proceedings of the 1996 Symposium on
Volume Visualization, pages 23-30, October 1996.
[6] K. Haris, S. Efstratiadis, N. Maglaveras, and C. Pappas. Semiautomatic extraction of vascular networks in angiograms. In Proceedings of the 18th Annual International Conference of the IEEE Engineering in Medicine and Biology Society, volume 3, pages 1067-1068,
October 1996.
[7] J. Hladuvka. Derivatives and Eigensystems for Volume-Data Analysis
and Visualization. PhD thesis, Technische Universitat Wien.
[8] J. Hladuvka, A. Konig, and E. Groller. Exploiting eigenvalues of the
hessian matrix for volume decimation. In The 9-th International Conference in Central Europe on Computer Graphics, Visualization and
Computer Vision, February 2001.
[9] E. B. Lum, J. Shearer, and K.-L. Ma. Interactive multi-scale exploration for volume classification. The Visual Computer, (22):622-630,
June 2006.
[10] M. P. Persoon, I. W. 0. Serlie, F. H. Post, and F. M. Vos. Visualization
of noisy and biased volume data using first and second order derivative
techniques. In Proceedings of the IEEE Visualization '03, pages 379385, 2003.
[11] R. Poli and G. Valli. An algorithm for real-time vessel enhancement
and detection. Computer Methods and Programs in Biomedicine,
pages 1-22, 1997.
[12] Y. Sato, S. Nakajima, N. Shiraga, H. Atsumi, S. Yoshida, T. Koller,
G. Gerig, and R. Kikinis. Three-dimensional multi-scale line filter
for segmentation and visualization of curvilinear structures in medical
images. Medical Image Analysis, 2(2): 143-168, 1998.
[13] Y. Sato, C.-F. Westin, A. Bhalerao, S. Nakajima, N. Shiraga,
S. Tamura, and R. Kikinis. Tissue classification based on 3d local
intensity structures for volume rendering. IEEE Transactions on Visualization and Computer Graphics, 6(2):160-180, April 2000.
[14] L. Zhukov and A. H. Barr. Oriented tensor reconstruction: Tracing
neural pathways from diffusion tensor mri. In Proceedings of IEEE
Visualization '02, pages 387-394, 2002.
[15] L. Zhukov and A. H. Barr. Heart-muscle fiber reconstruction from
diffusion tensor mri. In Proceedings of IEEE Visualization '03, pages
597-602, October 2003.

