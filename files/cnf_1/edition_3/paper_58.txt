Merging Visual Analysis with Automated Reasoning: Using Prajna to
Solve the Traffic Challenge
VAST 2009 Traffic Mini Challenge Award: Excellent Analysis Facilitated by a
Customizable Toolset
Edward Swing*
Vision Systems & Technology, Inc.

ABSTRACT
The internet traffic challenge required the development of a
custom application to analyze internet traffic patterns coupled
with building access records. To solve this challenge, I applied the
Prajna Project, an open-source Java toolkit designed to provide
various capabilities for visualization, knowledge representation,
semantic reasoning, and data fusion. By applying some of the
capabilities of Prajna to this challenge, I could quickly develop a
custom application for visual analysis.
I determined that I could solve some of the analytical
components of this challenge using automated reasoning
techniques. Prajna includes interfaces to incorporate automated
reasoners into visual applications. By blending the automated
reasoning processes with visual analysis, I could design a flexible,
useful application to solve this challenge.
KEYWORDS: Information Visualization, Software
Knowledge Representation, Semantic Reasoning

Toolkit,

INDEX TERMS: D.2.11 [Software Engineering]: Software
Architectures - Domain-specific architectures; I.2.4 [Artificial
Intelligence]: Knowledge Representation Formalisms and
Methods; I.3.6 [Computer Graphics]: Methodology and
Techniques - Interaction Techniques.
1

INTRODUCTION

This challenge involved internet traffic records for a fictional
embassy during the month of January, and employee access
records for the embassy. The access records included records of
employees entering the building, and records of when the
employees entered and exited the classified spaces within the
embassy. The analyst needed to identify an employee who leaked
information.
2

DEVELOPING THE SOLUTION

2.1
Analysis of the Problem
Since the data included the internet traffic records from each
user’s workstation, the challenge required a combination of
temporal displays for each user. In addition, the characteristics of
Email: deswing@vsticorp.com

the traffic – destination IP address and transaction size – might
provide additional clues. Therefore, I developed timeline displays
to show the internet traffic for users over periods of time.
In addition, the access records provided another temporal
reference. Since a user could not access their unclassified
workstation while in the classified area, the classified access times
might provide a significant clue. Therefore, I determined that the
application should include timelines for building access.
I discovered several significant elements where an automated
process could derive additional information. I included an
automated process to label suspicious traffic. I defined suspicious
traffic as any traffic originating from an employee’s computer
when that employee was in the classified space. I highlighted
these records in the timeline displays, making it easier for an
analyst to identify them.
2.2
Building with Prajna
The first task for any analytical challenge is parsing the data.
Prajna provides a data accessor for CSV records. This data
accessor interprets the data according to a data description file,
which identifies fields and their data types within each row of a
CSV file. This utility significantly simplified the data ingestion
process, and I used the CSV parser to load both the traffic and
access records.
Prajna provided a simple timeline display. However, I found
that the visual analysis required more complex timeline displays.
Therefore, I augmented Prajna’s capabilities with a value-timeline
and a timeline with overlays.
In order to filter the internet traffic and employees, I extended
Prajna’s filtering capability by designing dynamic filters with a
graphical user interface component, allowing a user to filter the
information dynamically. This feature allowed the development of
flexible user interface components that easily plugged into the
Prajna filtering framework.
Additionally, I implemented custom reasoners to identify the
suspicious records. By determining the times that a particular
employee entered and left the classified space, the reasoner
identified any traffic originating from their workstation that might
be suspicious.
After creating an initial set of filters and an overall display, I
decided that the analysis process would benefit from a detailed
view of a particular user’s activity for a particular day. By
comparing that activity to a set of filtered internet traffic, an
analyst could spot unusual trends and anomalies.
3

IEEE Symposium on Visual Analytics Science and Technology
October 12 - 13, Atlantic City, New Jersey, USA
978-1-4244-5283-5/09/$25.00 ©2009 IEEE

PERFORMING THE ANALYSIS

Once I completed the development of the application, I applied
the capabilities of the tools to the challenge itself.

275

Using the tool, I discovered that seventeen instances where an
employee's computer had internet traffic occurred while that
employee was in the classified space. Since a system may run
automated processes, these transactions were not conclusive.
However, viewing the details of each transaction, I noticed that
most of the suspicious transactions had a common destination IP,
100.59.151.133, and used the same port, 8080.
Furthermore, each transaction to that IP address also had a large
request size, typically 6-10 megabytes, much larger than the
average traffic. I suspected these transactions might be the suspect
uploading material to a destination site. I examined each of these
suspicious records, and noticed that many of the transactions
occurred late in the day. A few occurred in the early morning.
By cross-referencing all suspicious activity with the locations of
the users, I determined that six employees (IDs 19,21,27, 30, 32,
and 48) were never in the classified area when the suspicious
activity occurred. If we assume that only one employee was guilty
of espionage, these employees became the prime suspects.

31 late in the day (at 5:01pm). Since employee 31 shares the
office with employee 30, this further corroborates our theory.
4

USE OF AUTOMATED REASONING

While the challenge called for a visual analytic solution,
automated reasoning processes generated, or could generate,
many of the observations for this scenario. The filtering process,
which identified suspicious transactions, simply extracted the
relevant records using simple logic. This reasoning process runs
when the application loads the data, generating the suspicious tags
automatically. Similarly, once an analyst determines the
destination IP address, an automated process could easily mask
out the employees who could not commit the crime.
Analytical applications frequently include some form of
automated filtering or reasoning. Many analysts create complex
queries for their data sources, creating multi-page queries to filter
data and viewing only those records of interest. Blending and
balancing the automated reasoning process with visual analytics
promises significant advantages for analytic applications
5

RESULTS

I could identify the prime suspect easily using a selective series of
filters, visual analysis, and automated processing. I could identify
the suspicious transactions, and use the tool to refine the filters to
filter out suspects progressively.
6

IP traffic, showing volume vs. time (green). Suspicious activity
appears in the second row (red). The times when each employee
entered or left the classified space is shown in blue.

To examine the suspicious behavior in another way, I looked at
the location of the various desks where the suspicious activity
occurred to determine whether a spatial pattern might help to
identify the culprit. The tool included a simplified display that
represented the arrangement of desks in the office. By
highlighting those desks where the suspicious activity originated,
I determined that most of the suspicious activity occurred near the
center of the office, which suggested our culprit occupied an
office located in the center of the room.
Following that, I examined other IP traffic with the same IP
destination. I discovered several additional records, each with a
large request size and the same port. The building access records
would not include when an employee left the building, so these
records could also indicate suspicious activity. Employees 19, 21,
32 and 48 were in the classified space when some of these IP
transactions occurred, leaving 27 and 30 as the primary suspects.
At this point, I examined the daily records in closer detail using
the tool's Daily View, focusing on the two remaining suspects.
Matching the larger set of suspicious traffic with the suspect’s
times of entry and times they spent in the classified space. On
January 31, I discovered one suspicious transaction, at 9:41am.
However, employee 27 did not enter the building until after 10am.
Therefore, I determined that employee 30 is our likely suspect.
To corroborate this assumption, I examined the first time that
the suspect transmitted data to the suspicious destination. The first
suspicious transaction originated from the computer of employee

276

CONCLUSION

The tool developed for this challenge provided the answers I
sought. Furthermore, I could apply the principles and design of
Prajna to this challenge, demonstrating its utility. The Prajna
project’s visualization components and reasoner interfaces
allowed me to develop the application prototype rapidly.
Furthermore, this particular challenge allowed me to develop
some automated reasoning techniques into the application to help
solve the challenge and analyze their effectiveness.
This automated processing, though simple for this particular
challenge, could include arbitrarily complex reasoning processes.
Prajna supports ontological reasoning, so the application could
include advanced ontological inferences if needed. Automated
reasoning processes, almost by definition, must directly address a
particular challenge. Within Prajna, these reasoners can range
from quite simplistic to full ontology inference reasoners. The
modular approach of Prajna enables the applications to
incorporate a wide variety of reasoners into the analytical process.
During the development of this tool, I evaluated the benefits of
visualization and automated reasoning for the analytical process.
The development of this application provided some valuable
insights into the balance between automated processing and
applying a human’s intuitive visual analysis. VSTI will apply
these insights into our current and future analytic tools.
REFERENCES
[1]

[2]

[3]

[4]

Eklund, P. and Haemmerlé, O. (Eds), “Conceptual Structures:
Knowledge Visualization and Reasoning”, 16th International
Conference on Conceptual Structures, ICCS 2008
E. Gamma, et al (the Gang-Of-Four), "Design Patterns: Elements of
Reusable Object-Oriented Software", Addison-Wesley Professional,
January 1995.
D. Gotz, M. Zhou and V. Aggarwal, "Interactive Visual Synthesis of
Analytic Knowledge", Proceedings of the IEEE Symposium on
Visual Analytics Science and Technology, 2006.
W. Pike et al, “The Scalable Reasoning System: Lightweight
Visualization for Distributed Analytics”, Information Visualization,
Palgrave Macmillan, 2009

